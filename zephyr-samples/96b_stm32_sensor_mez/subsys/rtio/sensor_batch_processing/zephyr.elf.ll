; ModuleID = 'build/96b_stm32_sensor_mez/sensor_batch_processing/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.log_source_const_data = type { i8*, i8 }
%struct.rtio_executor_api = type { i32 (%struct.rtio*)*, void (%struct.rtio*, %struct.rtio_sqe*, i32)*, void (%struct.rtio*, %struct.rtio_sqe*, i32)* }
%struct.rtio = type { %struct.rtio_executor*, i32, %struct.rtio_sq*, %struct.rtio_cq* }
%struct.rtio_executor = type { %struct.rtio_executor_api* }
%struct.rtio_sq = type { %struct.rtio_spsc, [0 x %struct.rtio_sqe] }
%struct.rtio_spsc = type { i32, i32, i32, i32, i32 }
%struct.rtio_sqe = type { i8, i8, i16, %struct.rtio_iodev*, i8*, %union.anon.3 }
%struct.rtio_iodev = type { %struct.rtio_iodev_api*, %struct.rtio_iodev_sq*, i8* }
%struct.rtio_iodev_api = type { void (%struct.rtio_sqe*, %struct.rtio*)* }
%struct.rtio_iodev_sq = type { %struct.rtio_spsc, [0 x %struct.rtio_iodev_sqe] }
%struct.rtio_iodev_sqe = type { %struct.rtio_sqe*, %struct.rtio* }
%union.anon.3 = type { %struct.anon.4 }
%struct.anon.4 = type { i32, i8* }
%struct.rtio_cq = type { %struct.rtio_spsc, [0 x %struct.anon.4] }
%struct.rtio_simple_executor = type { %struct.rtio_executor }
%struct.rtio_spsc__sq_ez_io = type { %struct.rtio_spsc, [8 x %struct.rtio_sqe] }
%struct.rtio_spsc__cq_ez_io = type { %struct.rtio_spsc, [8 x %struct.anon.4] }
%struct.rtio_spsc_vnd_sensor_iodev_sq_0 = type { %struct.rtio_spsc, [8 x %struct.rtio_iodev_sqe] }
%struct.vnd_sensor_config = type { i32, i32 }
%struct.device_state = type { i8, i8 }
%struct.vnd_sensor_data = type { %struct.rtio_iodev, %struct.k_timer, %struct.device*, %struct.k_msgq, i32 }
%struct.k_timer = type { %struct._timeout, %struct._wait_q_t, void (%struct.k_timer*)*, void (%struct.k_timer*)*, %struct.k_timeout_t, i32, i8* }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct._wait_q_t = type { %struct._dnode }
%struct.k_timeout_t = type { i64 }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.k_msgq = type { %struct._wait_q_t, %struct.k_spinlock, i32, i32, i8*, i8*, i8*, i8*, i32, i8 }
%struct.k_spinlock = type {}
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.z_arm_mpu_partition = type { i32, i32, %union.anon }
%union.anon = type { i32 }
%struct.arm_mpu_region = type { i32, i8*, %union.anon }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %union.anon, i32*, i32, %struct.vnd_sensor_config }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %union.anon, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct.vnd_sensor_config*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct.vnd_sensor_config*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct.z_thread_stack_element = type { i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %struct._wait_q_t, i32, %struct._thread_stack_info, %struct.k_heap*, %struct.vnd_sensor_config }
%struct._thread_base = type { %struct._wait_q_t, %struct._wait_q_t*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %struct._wait_q_t, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type opaque
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct.k_spinlock }
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.cbprintf_package_desc = type { i8, i8, i8, i8 }
%struct.str_context = type { i8*, i32, i32 }
%struct.anon = type { %struct.k_timeout_t, %struct.conversion }
%struct.conversion = type { [3 x i8], i8, %union.anon, %union.anon }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %union.anon, %union.anon, %union.anon, %union.anon, %union.anon, %union.anon, %union.anon, i32 }
%struct.rtio_concurrent_executor = type { %struct.rtio_executor, %struct.k_spinlock, i16, i16, i16, %struct.rtio_sqe*, %struct.rtio_sqe*, i8*, %struct.rtio_sqe** }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %struct._wait_q_t }
%struct._sflist = type { %union.anon*, %union.anon* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_PeriphCLKInitTypeDef = type { i32, %struct.rtio_spsc, %struct.RCC_PLLSAIInitTypeDef, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }
%struct.RCC_PLLSAIInitTypeDef = type { i32, i32, i32, i32 }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.USART_TypeDef }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [97 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [97 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233684 to i8*), void (i8*)* inttoptr (i32 134231877 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233684 to i8*), void (i8*)* inttoptr (i32 134231857 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233684 to i8*), void (i8*)* inttoptr (i32 134231847 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233684 to i8*), void (i8*)* inttoptr (i32 134231947 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233684 to i8*), void (i8*)* inttoptr (i32 134231937 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233684 to i8*), void (i8*)* inttoptr (i32 134231927 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233684 to i8*), void (i8*)* inttoptr (i32 134231917 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233684 to i8*), void (i8*)* inttoptr (i32 134231907 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233684 to i8*), void (i8*)* inttoptr (i32 134231897 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233684 to i8*), void (i8*)* inttoptr (i32 134231887 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233684 to i8*), void (i8*)* inttoptr (i32 134231867 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [54 x i8*] [i8* bitcast (%struct.rtio* @ez_io to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_main to i8*), i8* bitcast (%struct.device* @__device_dts_ord_13 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_13 to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_vnd_sensor to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_cbprintf_package to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_mpu to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_rtio_executor_simple to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_rtio_executor_concurrent to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_39 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_93 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_94 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_95 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_96 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_97 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_98 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_99 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_22 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_93 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_94 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_95 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_96 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_97 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_98 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_99 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_48 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_51 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_55 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_45 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_48 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_51 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_55 to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_uart_stm32 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_os to i8*)], section "llvm.metadata"
@.str = private unnamed_addr constant [5 x i8] c"main\00", align 1
@log_const_main = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8 4 }, section ".log_const_main", align 4, !dbg !25
@z_rtio_simple_api = internal constant %struct.rtio_executor_api { i32 (%struct.rtio*)* @rtio_simple_submit, void (%struct.rtio*, %struct.rtio_sqe*, i32)* @rtio_simple_ok, void (%struct.rtio*, %struct.rtio_sqe*, i32)* @rtio_simple_err }, align 4, !dbg !235
@simple_exec = dso_local global %struct.rtio_simple_executor { %struct.rtio_executor { %struct.rtio_executor_api* @z_rtio_simple_api } }, align 4, !dbg !117
@_sq_ez_io = internal global %struct.rtio_spsc__sq_ez_io { %struct.rtio_spsc { i32 0, i32 0, i32 0, i32 0, i32 7 }, [8 x %struct.rtio_sqe] zeroinitializer }, align 4, !dbg !237
@_cq_ez_io = internal global %struct.rtio_spsc__cq_ez_io { %struct.rtio_spsc { i32 0, i32 0, i32 0, i32 0, i32 7 }, [8 x %struct.anon.4] zeroinitializer }, align 4, !dbg !245
@ez_io = dso_local global %struct.rtio { %struct.rtio_executor* getelementptr inbounds (%struct.rtio_simple_executor, %struct.rtio_simple_executor* @simple_exec, i32 0, i32 0), i32 0, %struct.rtio_sq* bitcast (%struct.rtio_spsc__sq_ez_io* @_sq_ez_io to %struct.rtio_sq*), %struct.rtio_cq* bitcast (%struct.rtio_spsc__cq_ez_io* @_cq_ez_io to %struct.rtio_cq*) }, section "._rtio.static.ez_io", align 4, !dbg !227
@bufs = internal global [8 x [16 x i8]] zeroinitializer, align 1, !dbg !229
@.str.1 = private unnamed_addr constant [33 x i8] c"%c: Submitting %d read requests\0A\00", align 1
@.str.2 = private unnamed_addr constant [36 x i8] c"%c: No completion events available\0A\00", align 1
@.str.3 = private unnamed_addr constant [34 x i8] c"%c: Consumed completion event %d\0A\00", align 1
@.str.4 = private unnamed_addr constant [22 x i8] c"%c: Operation failed\0A\00", align 1
@.str.5 = private unnamed_addr constant [33 x i8] c"%c: Start processing %d samples\0A\00", align 1
@.str.6 = private unnamed_addr constant [13 x i8] c"Sample data:\00", align 1
@.str.7 = private unnamed_addr constant [8 x i8] c"%c: %s\0A\00", align 1
@.str.8 = private unnamed_addr constant [36 x i8] c"%c: Finished processing %d samples\0A\00", align 1
@.str.9 = private unnamed_addr constant [11 x i8] c"vnd_sensor\00", align 1
@log_const_vnd_sensor = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i32 0, i32 0), i8 4 }, section ".log_const_vnd_sensor", align 4, !dbg !258
@vnd_sensor_iodev_sq_0 = dso_local global %struct.rtio_spsc_vnd_sensor_iodev_sq_0 { %struct.rtio_spsc { i32 0, i32 0, i32 0, i32 0, i32 7 }, [8 x %struct.rtio_iodev_sqe] zeroinitializer }, align 4, !dbg !451
@__devicehdl_dts_ord_13 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !494
@.str.1.12 = private unnamed_addr constant [9 x i8] c"sensor@0\00", align 1
@vnd_sensor_config_0 = internal constant %struct.vnd_sensor_config { i32 100, i32 16 }, align 4, !dbg !478
@__devstate_dts_ord_13 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !476
@vnd_sensor_data_0 = internal global %struct.vnd_sensor_data { %struct.rtio_iodev { %struct.rtio_iodev_api* @vnd_sensor_iodev_api, %struct.rtio_iodev_sq* bitcast (%struct.rtio_spsc_vnd_sensor_iodev_sq_0* @vnd_sensor_iodev_sq_0 to %struct.rtio_iodev_sq*), i8* null }, %struct.k_timer zeroinitializer, %struct.device* null, %struct.k_msgq zeroinitializer, i32 0 }, align 8, !dbg !485
@__device_dts_ord_13 = dso_local constant %struct.device { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1.12, i32 0, i32 0), i8* bitcast (%struct.vnd_sensor_config* @vnd_sensor_config_0 to i8*), i8* null, %struct.device_state* @__devstate_dts_ord_13, i8* bitcast (%struct.vnd_sensor_data* @vnd_sensor_data_0 to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_13, i32 0, i32 0) }, section ".z_device_POST_KERNEL50_", align 4, !dbg !463
@__init___device_dts_ord_13 = internal constant %struct.init_entry { i32 (%struct.device*)* @vnd_sensor_init, %struct.device* @__device_dts_ord_13 }, section ".z_init_POST_KERNEL50_", align 4, !dbg !465
@vnd_sensor_iodev_api = internal constant %struct.rtio_iodev_api { void (%struct.rtio_sqe*, %struct.rtio*)* @vnd_sensor_iodev_submit }, align 4, !dbg !487
@.str.2.16 = private unnamed_addr constant [29 x i8] c"%c: %s: Could not put a msg\0A\00", align 1
@.str.3.19 = private unnamed_addr constant [29 x i8] c"%c: %s: Could not get a msg\0A\00", align 1
@.str.4.20 = private unnamed_addr constant [20 x i8] c"%c: %s: Invalid op\0A\00", align 1
@.str.5.21 = private unnamed_addr constant [32 x i8] c"%c: %s: buf_len = %d, buf = %p\0A\00", align 1
@.str.6.22 = private unnamed_addr constant [29 x i8] c"%c: %s: Buffer is too small\0A\00", align 1
@.str.23 = private unnamed_addr constant [17 x i8] c"cbprintf_package\00", align 1
@log_const_cbprintf_package = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.23, i32 0, i32 0), i8 3 }, section ".log_const_cbprintf_package", align 4, !dbg !534
@.str.1.25 = private unnamed_addr constant [168 x i8] c"%c: (unsigned) char * used for %%p argument. It's recommended to cast it to void * because it may cause misbehavior in certain configurations. String:\22%s\22 argument:%d\0A\00", align 1
@__rodata_region_start = external dso_local global [0 x i8], align 1
@__rodata_region_end = external dso_local global [0 x i8], align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !555
@.str.28 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !565
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !608
@.str.36 = private unnamed_addr constant [5 x i8] c"%c: \00", align 1
@.str.1.38 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.2.39 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.3.37 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.4.41 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.5.42 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.6.40 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.43 = private unnamed_addr constant [52 x i8] c"%c: r0/a1:  0x%08x  r1/a2:  0x%08x  r2/a3:  0x%08x\0A\00", align 1
@.str.1.44 = private unnamed_addr constant [52 x i8] c"%c: r3/a4:  0x%08x r12/ip:  0x%08x r14/lr:  0x%08x\0A\00", align 1
@.str.2.45 = private unnamed_addr constant [20 x i8] c"%c:  xpsr:  0x%08x\0A\00", align 1
@.str.3.46 = private unnamed_addr constant [51 x i8] c"%c: Faulting instruction address (r15/pc): 0x%08x\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.60 = private unnamed_addr constant [48 x i8] c"%c: SPSEL in thread mode does not indicate PSP\0A\00", align 1
@.str.1.55 = private unnamed_addr constant [28 x i8] c"%c: ***** HARD FAULT *****\0A\00", align 1
@.str.2.56 = private unnamed_addr constant [38 x i8] c"%c:   Bus fault on vector table read\0A\00", align 1
@.str.3.57 = private unnamed_addr constant [19 x i8] c"%c:   Debug event\0A\00", align 1
@.str.4.58 = private unnamed_addr constant [36 x i8] c"%c:   Fault escalation (see below)\0A\00", align 1
@.str.5.59 = private unnamed_addr constant [33 x i8] c"%c: ARCH_EXCEPT with reason %x\0A\0A\00", align 1
@.str.6.52 = private unnamed_addr constant [27 x i8] c"%c: ***** MPU FAULT *****\0A\00", align 1
@.str.7.53 = private unnamed_addr constant [56 x i8] c"%c:   Stacking error (context area might be not valid)\0A\00", align 1
@.str.8.51 = private unnamed_addr constant [24 x i8] c"%c:   Unstacking error\0A\00", align 1
@.str.9.54 = private unnamed_addr constant [29 x i8] c"%c:   Data Access Violation\0A\00", align 1
@.str.10 = private unnamed_addr constant [27 x i8] c"%c:   MMFAR Address: 0x%x\0A\00", align 1
@.str.11 = private unnamed_addr constant [36 x i8] c"%c:   Instruction Access Violation\0A\00", align 1
@.str.12 = private unnamed_addr constant [52 x i8] c"%c:   Floating-point lazy state preservation error\0A\00", align 1
@.str.13 = private unnamed_addr constant [27 x i8] c"%c: ***** BUS FAULT *****\0A\00", align 1
@.str.14 = private unnamed_addr constant [22 x i8] c"%c:   Stacking error\0A\00", align 1
@.str.15 = private unnamed_addr constant [30 x i8] c"%c:   Precise data bus error\0A\00", align 1
@.str.16 = private unnamed_addr constant [26 x i8] c"%c:   BFAR Address: 0x%x\0A\00", align 1
@.str.17 = private unnamed_addr constant [32 x i8] c"%c:   Imprecise data bus error\0A\00", align 1
@.str.18 = private unnamed_addr constant [29 x i8] c"%c:   Instruction bus error\0A\00", align 1
@.str.19 = private unnamed_addr constant [29 x i8] c"%c: ***** USAGE FAULT *****\0A\00", align 1
@.str.20 = private unnamed_addr constant [24 x i8] c"%c:   Division by zero\0A\00", align 1
@.str.21 = private unnamed_addr constant [31 x i8] c"%c:   Unaligned memory access\0A\00", align 1
@.str.22 = private unnamed_addr constant [35 x i8] c"%c:   No coprocessor instructions\0A\00", align 1
@.str.23.50 = private unnamed_addr constant [42 x i8] c"%c:   Illegal load of EXC_RETURN into PC\0A\00", align 1
@.str.24 = private unnamed_addr constant [31 x i8] c"%c:   Illegal use of the EPSR\0A\00", align 1
@.str.25 = private unnamed_addr constant [48 x i8] c"%c:   Attempt to execute undefined instruction\0A\00", align 1
@.str.26 = private unnamed_addr constant [41 x i8] c"%c: ***** Debug monitor exception *****\0A\00", align 1
@.str.27 = private unnamed_addr constant [24 x i8] c"%c: ***** %s %d) *****\0A\00", align 1
@.str.28.49 = private unnamed_addr constant [21 x i8] c"Reserved Exception (\00", align 1
@.str.29 = private unnamed_addr constant [25 x i8] c"Spurious interrupt (IRQ \00", align 1
@.str.66 = private unnamed_addr constant [4 x i8] c"mpu\00", align 1
@log_const_mpu = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.66, i32 0, i32 0), i8 3 }, section ".log_const_mpu", align 4, !dbg !637
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %union.anon { i32 101384192 } }], align 4, !dbg !778
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !643
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !787
@.str.72 = private unnamed_addr constant [40 x i8] c"%c: Partition %u: sanity check failed.\0A\00", align 1
@.str.1.73 = private unnamed_addr constant [43 x i8] c"%c: Failed to allocate new MPU region %u\0A\0A\00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !823
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.84, i32 0, i32 0), %union.anon { i32 117571620 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.85, i32 0, i32 0), %union.anon { i32 285933600 } }], align 4, !dbg !833
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !838
@.str.84 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.85 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@.str.86 = private unnamed_addr constant [21 x i8] c"rtio_executor_simple\00", align 1
@log_const_rtio_executor_simple = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.86, i32 0, i32 0), i8 3 }, section ".log_const_rtio_executor_simple", align 4, !dbg !858
@.str.96 = private unnamed_addr constant [25 x i8] c"rtio_executor_concurrent\00", align 1
@log_const_rtio_executor_concurrent = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.96, i32 0, i32 0), i8 3 }, section ".log_const_rtio_executor_concurrent", align 4, !dbg !869
@.str.1.98 = private unnamed_addr constant [12 x i8] c"%c: submit\0A\00", align 1
@.str.2.100 = private unnamed_addr constant [26 x i8] c"%c: head SQE in chain %p\0A\00", align 1
@.str.3.101 = private unnamed_addr constant [24 x i8] c"%c: setting up task %d\0A\00", align 1
@.str.4.102 = private unnamed_addr constant [22 x i8] c"%c: submitted sqe %p\0A\00", align 1
@.str.5.103 = private unnamed_addr constant [26 x i8] c"%c: tail SQE in chain %p\0A\00", align 1
@.str.6.104 = private unnamed_addr constant [32 x i8] c"%c: resuming suspended task %d\0A\00", align 1
@.str.7.107 = private unnamed_addr constant [29 x i8] c"%c: sweeping oldest task %d\0A\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !986
@__devicehdl_dts_ord_39 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !505
@.str.110 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_39 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1146
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !1129
@__device_dts_ord_39 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.110, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_39, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_39, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1102
@__init___device_dts_ord_39 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_39 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1118
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !1148
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !1161
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !1163
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !1165
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !1167
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !1169
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !1171
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !1173
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !1175
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !1177
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !1179
@__devicehdl_dts_ord_8 = dso_local constant [15 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 13, i16 14, i16 32767], section ".__device_handles_pass2", align 2, !dbg !499
@.str.112 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !1184
@__devstate_dts_ord_8 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1282
@__init___device_dts_ord_8 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_8 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !1271
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !1323
@__devicehdl_dts_ord_93 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !524
@.str.121 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %union.anon { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct.vnd_sensor_config { i32 48, i32 1 } }, align 4, !dbg !1389
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1667
@__devstate_dts_ord_93 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1637
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1623
@__init___device_dts_ord_93 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_93 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1568
@__devicehdl_dts_ord_94 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !522
@.str.1.122 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %union.anon { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct.vnd_sensor_config { i32 48, i32 2 } }, align 4, !dbg !1669
@__devstate_dts_ord_94 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1641
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1639
@__init___device_dts_ord_94 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_94 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1582
@__devicehdl_dts_ord_95 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !520
@.str.2.123 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %union.anon { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct.vnd_sensor_config { i32 48, i32 4 } }, align 4, !dbg !1682
@__devstate_dts_ord_95 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1645
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1643
@__init___device_dts_ord_95 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_95 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1588
@__devicehdl_dts_ord_22 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !518
@.str.3.124 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %union.anon { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct.vnd_sensor_config { i32 48, i32 8 } }, align 4, !dbg !1684
@__devstate_dts_ord_22 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1649
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1647
@__init___device_dts_ord_22 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_22 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1597
@__devicehdl_dts_ord_96 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !516
@.str.4.125 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %union.anon { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct.vnd_sensor_config { i32 48, i32 16 } }, align 4, !dbg !1686
@__devstate_dts_ord_96 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1653
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1651
@__init___device_dts_ord_96 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_96 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1603
@__devicehdl_dts_ord_97 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !514
@.str.5.126 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %union.anon { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct.vnd_sensor_config { i32 48, i32 32 } }, align 4, !dbg !1688
@__devstate_dts_ord_97 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1657
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1655
@__init___device_dts_ord_97 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_97 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1609
@__devicehdl_dts_ord_98 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !512
@.str.6.127 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %union.anon { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct.vnd_sensor_config { i32 48, i32 64 } }, align 4, !dbg !1690
@__devstate_dts_ord_98 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1661
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1659
@__init___device_dts_ord_98 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_98 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1615
@__devicehdl_dts_ord_99 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !510
@.str.7.128 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %union.anon { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct.vnd_sensor_config { i32 48, i32 128 } }, align 4, !dbg !1692
@__devstate_dts_ord_99 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1665
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1663
@__init___device_dts_ord_99 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_99 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1621
@.str.132 = private unnamed_addr constant [11 x i8] c"uart_stm32\00", align 1
@log_const_uart_stm32 = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.132, i32 0, i32 0), i8 3 }, section ".log_const_uart_stm32", align 4, !dbg !1694
@__devicehdl_dts_ord_55 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !532
@.str.1.133 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct.vnd_sensor_config* getelementptr inbounds ([1 x %struct.vnd_sensor_config], [1 x %struct.vnd_sensor_config]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_55 }, align 4, !dbg !1872
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1927
@__devstate_dts_ord_55 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1864
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1929
@__device_dts_ord_55 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.133, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_55, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_55, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1837
@__init___device_dts_ord_55 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_55 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1839
@__devicehdl_dts_ord_45 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !530
@.str.2.136 = private unnamed_addr constant [16 x i8] c"serial@40004400\00", align 1
@uart_stm32_cfg_1 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073759232 to %struct.USART_TypeDef*), %struct.vnd_sensor_config* getelementptr inbounds ([1 x %struct.vnd_sensor_config], [1 x %struct.vnd_sensor_config]* @pclken_1, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_45 }, align 4, !dbg !1935
@__devstate_dts_ord_45 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1866
@uart_stm32_data_1 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1945
@__device_dts_ord_45 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2.136, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_1 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_45, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_1 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_45, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1848
@__init___device_dts_ord_45 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_45 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1850
@__devicehdl_dts_ord_48 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !528
@.str.3.137 = private unnamed_addr constant [16 x i8] c"serial@40004800\00", align 1
@uart_stm32_cfg_2 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073760256 to %struct.USART_TypeDef*), %struct.vnd_sensor_config* getelementptr inbounds ([1 x %struct.vnd_sensor_config], [1 x %struct.vnd_sensor_config]* @pclken_2, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_48 }, align 4, !dbg !1947
@__devstate_dts_ord_48 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1868
@uart_stm32_data_2 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1957
@__device_dts_ord_48 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3.137, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_2 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_48, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_2 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_48, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1854
@__init___device_dts_ord_48 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_48 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1856
@__devicehdl_dts_ord_51 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !526
@.str.4.140 = private unnamed_addr constant [16 x i8] c"serial@40004c00\00", align 1
@uart_stm32_cfg_3 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073761280 to %struct.USART_TypeDef*), %struct.vnd_sensor_config* getelementptr inbounds ([1 x %struct.vnd_sensor_config], [1 x %struct.vnd_sensor_config]* @pclken_3, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_51 }, align 4, !dbg !1959
@__devstate_dts_ord_51 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1870
@uart_stm32_data_3 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1969
@__device_dts_ord_51 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4.140, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_3 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_51, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_3 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_51, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1860
@__init___device_dts_ord_51 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_51 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1862
@pclken_0 = internal constant [1 x %struct.vnd_sensor_config] [%struct.vnd_sensor_config { i32 68, i32 16 }], align 4, !dbg !1916
@__pinctrl_dev_config__device_dts_ord_55 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_55, i32 0, i32 0), i8 1 }, align 4, !dbg !1919
@__pinctrl_states__device_dts_ord_55 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct.vnd_sensor_config* getelementptr inbounds ([2 x %struct.vnd_sensor_config], [2 x %struct.vnd_sensor_config]* @__pinctrl_state_pins_0__device_dts_ord_55, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1921
@__pinctrl_state_pins_0__device_dts_ord_55 = internal constant [2 x %struct.vnd_sensor_config] [%struct.vnd_sensor_config { i32 295, i32 512 }, %struct.vnd_sensor_config { i32 327, i32 0 }], align 4, !dbg !1924
@.str.5.135 = private unnamed_addr constant [51 x i8] c"%c: Failed call clock_control_get_rate(pclken[0])\0A\00", align 1
@.str.6.143 = private unnamed_addr constant [36 x i8] c"%c: clock control device not ready\0A\00", align 1
@.str.7.145 = private unnamed_addr constant [37 x i8] c"%c: Could not enable (LP)UART clock\0A\00", align 1
@.str.8.146 = private unnamed_addr constant [55 x i8] c"%c: Invalid parity setting '%d'.Defaulting to 'none'.\0A\00", align 1
@__device_dts_ord_8 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.112, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_8, i8* null, i16* getelementptr inbounds ([15 x i16], [15 x i16]* @__devicehdl_dts_ord_8, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !1255
@pclken_1 = internal constant [1 x %struct.vnd_sensor_config] [%struct.vnd_sensor_config { i32 64, i32 131072 }], align 4, !dbg !1937
@__pinctrl_dev_config__device_dts_ord_45 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_45, i32 0, i32 0), i8 1 }, align 4, !dbg !1939
@__pinctrl_states__device_dts_ord_45 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct.vnd_sensor_config* getelementptr inbounds ([2 x %struct.vnd_sensor_config], [2 x %struct.vnd_sensor_config]* @__pinctrl_state_pins_0__device_dts_ord_45, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1941
@__pinctrl_state_pins_0__device_dts_ord_45 = internal constant [2 x %struct.vnd_sensor_config] [%struct.vnd_sensor_config { i32 1703, i32 512 }, %struct.vnd_sensor_config { i32 1735, i32 0 }], align 4, !dbg !1943
@pclken_2 = internal constant [1 x %struct.vnd_sensor_config] [%struct.vnd_sensor_config { i32 64, i32 262144 }], align 4, !dbg !1949
@__pinctrl_dev_config__device_dts_ord_48 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_48, i32 0, i32 0), i8 1 }, align 4, !dbg !1951
@__pinctrl_states__device_dts_ord_48 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct.vnd_sensor_config* getelementptr inbounds ([2 x %struct.vnd_sensor_config], [2 x %struct.vnd_sensor_config]* @__pinctrl_state_pins_0__device_dts_ord_48, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1953
@__pinctrl_state_pins_0__device_dts_ord_48 = internal constant [2 x %struct.vnd_sensor_config] [%struct.vnd_sensor_config { i32 1799, i32 512 }, %struct.vnd_sensor_config { i32 1831, i32 0 }], align 4, !dbg !1955
@pclken_3 = internal constant [1 x %struct.vnd_sensor_config] [%struct.vnd_sensor_config { i32 64, i32 524288 }], align 4, !dbg !1961
@__pinctrl_dev_config__device_dts_ord_51 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_51, i32 0, i32 0), i8 1 }, align 4, !dbg !1963
@__pinctrl_states__device_dts_ord_51 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct.vnd_sensor_config* getelementptr inbounds ([2 x %struct.vnd_sensor_config], [2 x %struct.vnd_sensor_config]* @__pinctrl_state_pins_0__device_dts_ord_51, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1965
@__pinctrl_state_pins_0__device_dts_ord_51 = internal constant [2 x %struct.vnd_sensor_config] [%struct.vnd_sensor_config { i32 1352, i32 512 }, %struct.vnd_sensor_config { i32 1384, i32 0 }], align 4, !dbg !1967
@switch.table.uart_stm32_init = private unnamed_addr constant [3 x i32] [i32 0, i32 1536, i32 1024], align 4
@switch.table.uart_stm32_init.9 = private unnamed_addr constant [3 x i32] [i32 0, i32 4096, i32 4096], align 4
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1976
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !2085
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !2087
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !2083
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !2054
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_93, %struct.device* @__device_dts_ord_94, %struct.device* @__device_dts_ord_95, %struct.device* @__device_dts_ord_22, %struct.device* @__device_dts_ord_96, %struct.device* @__device_dts_ord_97, %struct.device* @__device_dts_ord_98, %struct.device* @__device_dts_ord_99, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !2089
@__device_dts_ord_93 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.121, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_93, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_93, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1566
@__device_dts_ord_94 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.122, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_94, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_94, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1580
@__device_dts_ord_95 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.123, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_95, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_95, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1586
@__device_dts_ord_22 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.124, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_22, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_22, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1595
@__device_dts_ord_96 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.125, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_96, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_96, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1601
@__device_dts_ord_97 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.126, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_97, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_97, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1607
@__device_dts_ord_98 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.127, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_98, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_98, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1613
@__device_dts_ord_99 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7.128, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_99, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_99, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1619
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !2179
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !2223
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !2226
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !2232
@.str.181 = private unnamed_addr constant [20 x i8] c"%c: Halting system\0A\00", align 1
@.str.1.185 = private unnamed_addr constant [45 x i8] c"%c: >>> ZEPHYR FATAL ERROR %d: %s on CPU %d\0A\00", align 1
@.str.2.186 = private unnamed_addr constant [38 x i8] c"%c: Fault during interrupt handling\0A\0A\00", align 1
@.str.3.187 = private unnamed_addr constant [29 x i8] c"%c: Current thread: %p (%s)\0A\00", align 1
@.str.4.191 = private unnamed_addr constant [14 x i8] c"CPU exception\00", align 1
@.str.5.192 = private unnamed_addr constant [20 x i8] c"Unhandled interrupt\00", align 1
@.str.6.193 = private unnamed_addr constant [15 x i8] c"Stack overflow\00", align 1
@.str.7.194 = private unnamed_addr constant [12 x i8] c"Kernel oops\00", align 1
@.str.8.195 = private unnamed_addr constant [13 x i8] c"Kernel panic\00", align 1
@.str.9.190 = private unnamed_addr constant [14 x i8] c"Unknown error\00", align 1
@.str.10.189 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@switch.table.reason_to_str = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.191, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.192, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6.193, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7.194, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8.195, i32 0, i32 0)], align 4
@.str.197 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@log_const_os = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.197, i32 0, i32 0), i8 3 }, section ".log_const_os", align 4, !dbg !2239
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !2462
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2448
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2457
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2469
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2474
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.1.206 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.211, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.212, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.213, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.214, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.215, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.216, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.210, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.217, i32 0, i32 0)], align 4, !dbg !2504
@.str.211 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.212 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.213 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.214 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.215 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.216 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.210 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.217 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2616
@.str.8.209 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !2629
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2737
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2740
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2742
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2467
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2459
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2744
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2780
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !2326
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2778
@lock = internal global %struct.k_spinlock zeroinitializer, align 1, !dbg !2783
@.str.290 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3470 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #23, !dbg !3474, !srcloc !3475
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #23, !dbg !3476, !srcloc !3477
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #23, !dbg !3478, !srcloc !3479
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #23, !dbg !3480, !srcloc !3481
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3482, !srcloc !3483
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #23, !dbg !3484, !srcloc !3485
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #23, !dbg !3486, !srcloc !3487
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #23, !dbg !3488, !srcloc !3489
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #23, !dbg !3490, !srcloc !3491
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #23, !dbg !3492, !srcloc !3493
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #23, !dbg !3494, !srcloc !3495
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #23, !dbg !3496, !srcloc !3497
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #23, !dbg !3498, !srcloc !3499
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #23, !dbg !3500, !srcloc !3501
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #23, !dbg !3502, !srcloc !3503
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #23, !dbg !3504, !srcloc !3505
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #23, !dbg !3506, !srcloc !3507
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #23, !dbg !3508, !srcloc !3509
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3510, !srcloc !3511
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #23, !dbg !3512, !srcloc !3513
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #23, !dbg !3514, !srcloc !3515
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #23, !dbg !3516, !srcloc !3517
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #23, !dbg !3518, !srcloc !3519
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3520, !srcloc !3521
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #23, !dbg !3522, !srcloc !3523
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #23, !dbg !3524, !srcloc !3525
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #23, !dbg !3526, !srcloc !3527
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #23, !dbg !3528, !srcloc !3531
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #23, !dbg !3532, !srcloc !3533
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3534, !srcloc !3535
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3536, !srcloc !3537
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3538, !srcloc !3539
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3540, !srcloc !3541
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #23, !dbg !3542, !srcloc !3543
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #23, !dbg !3544, !srcloc !3545
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #23, !dbg !3546, !srcloc !3547
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #23, !dbg !3548, !srcloc !3549
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3550, !srcloc !3551
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3552, !srcloc !3553
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3554, !srcloc !3555
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3556, !srcloc !3557
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3558, !srcloc !3559
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3560, !srcloc !3561
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #23, !dbg !3562, !srcloc !3563
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #23, !dbg !3564, !srcloc !3565
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #23, !dbg !3566, !srcloc !3567
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #23, !dbg !3568, !srcloc !3569
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #23, !dbg !3570, !srcloc !3571
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #23, !dbg !3572, !srcloc !3573
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3574, !srcloc !3575
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #23, !dbg !3576, !srcloc !3577
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #23, !dbg !3578, !srcloc !3579
  ret void, !dbg !3580
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @main() local_unnamed_addr #2 !dbg !3583 {
  %1 = alloca [4 x i8*], align 4
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_13, metadata !3585, metadata !DIExpression()), !dbg !3637
  %2 = load %struct.rtio_iodev*, %struct.rtio_iodev** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_13, i32 0, i32 4) to %struct.rtio_iodev**), align 4, !dbg !3638
  call void @llvm.dbg.value(metadata %struct.rtio_iodev* %2, metadata !3602, metadata !DIExpression()), !dbg !3637
  call void @llvm.dbg.value(metadata i32 0, metadata !3604, metadata !DIExpression()), !dbg !3639
  %3 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3640
  br label %8, !dbg !3641

4:                                                ; preds = %46
  %5 = bitcast [4 x i8*]* %1 to i8*
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #24, !dbg !3637
  %7 = zext i8 %6 to i32
  br label %50, !dbg !3642

8:                                                ; preds = %0, %46
  %9 = phi %struct.rtio_sq* [ %3, %0 ], [ %47, %46 ], !dbg !3640
  %10 = phi i32 [ 0, %0 ], [ %48, %46 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !3604, metadata !DIExpression()), !dbg !3639
  %11 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %9, i32 0, i32 0, i32 2, !dbg !3640
  %12 = tail call fastcc i32 @atomic_get(i32* noundef nonnull %11) #24, !dbg !3640
  %13 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3640
  %14 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %13, i32 0, i32 0, i32 0, !dbg !3640
  %15 = load i32, i32* %14, align 4, !dbg !3640
  %16 = add i32 %15, %12, !dbg !3640
  call void @llvm.dbg.value(metadata i32 %16, metadata !3610, metadata !DIExpression()), !dbg !3643
  %17 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %13, i32 0, i32 0, i32 3, !dbg !3640
  %18 = tail call fastcc i32 @atomic_get(i32* noundef nonnull %17) #24, !dbg !3640
  %19 = sub i32 %16, %18, !dbg !3640
  %20 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3640
  %21 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %20, i32 0, i32 0, i32 4, !dbg !3640
  %22 = load i32, i32* %21, align 4, !dbg !3640
  %23 = add i32 %22, 1, !dbg !3640
  %24 = icmp ult i32 %19, %23, !dbg !3640
  call void @llvm.dbg.value(metadata i1 %24, metadata !3612, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3643
  br i1 %24, label %25, label %34, !dbg !3640

25:                                               ; preds = %8
  %26 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %20, i32 0, i32 0, i32 0, !dbg !3644
  %27 = load i32, i32* %26, align 4, !dbg !3644
  %28 = add i32 %27, 1, !dbg !3644
  store i32 %28, i32* %26, align 4, !dbg !3644
  %29 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3640
  %30 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %29, i32 0, i32 0, i32 4, !dbg !3640
  %31 = load i32, i32* %30, align 4, !dbg !3640
  %32 = and i32 %31, %16, !dbg !3640
  %33 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %29, i32 0, i32 1, i32 %32, !dbg !3640
  br label %34, !dbg !3640

34:                                               ; preds = %8, %25
  %35 = phi %struct.rtio_sqe* [ %33, %25 ], [ null, %8 ], !dbg !3640
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %35, metadata !3606, metadata !DIExpression()), !dbg !3647
  %36 = getelementptr inbounds [8 x [16 x i8]], [8 x [16 x i8]]* @bufs, i32 0, i32 %10, i32 0, !dbg !3648
  tail call fastcc void @rtio_sqe_prep_read(%struct.rtio_sqe* noundef %35, %struct.rtio_iodev* noundef %2, i8* noundef nonnull %36, i8* noundef nonnull %36) #24, !dbg !3649
  %37 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3650
  %38 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %37, i32 0, i32 0, i32 0, !dbg !3650
  %39 = load i32, i32* %38, align 4, !dbg !3650
  %40 = icmp eq i32 %39, 0, !dbg !3650
  br i1 %40, label %46, label %41, !dbg !3653

41:                                               ; preds = %34
  %42 = add i32 %39, -1, !dbg !3654
  store i32 %42, i32* %38, align 4, !dbg !3654
  %43 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3654
  %44 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %43, i32 0, i32 0, i32 2, !dbg !3654
  tail call fastcc void @atomic_add(i32* noundef nonnull %44, i32 noundef 1) #24, !dbg !3654
  %45 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3640
  br label %46, !dbg !3654

46:                                               ; preds = %41, %34
  %47 = phi %struct.rtio_sq* [ %45, %41 ], [ %37, %34 ]
  %48 = add nuw nsw i32 %10, 1, !dbg !3656
  call void @llvm.dbg.value(metadata i32 %48, metadata !3604, metadata !DIExpression()), !dbg !3639
  %49 = icmp eq i32 %48, 8, !dbg !3657
  br i1 %49, label %4, label %8, !dbg !3641, !llvm.loop !3658

50:                                               ; preds = %4, %154
  call void @llvm.dbg.value(metadata i32 0, metadata !3613, metadata !DIExpression()), !dbg !3660
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #23, !dbg !3661
  call void @llvm.dbg.declare(metadata [4 x i8*]* %1, metadata !3615, metadata !DIExpression()), !dbg !3662
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i32 0, i32 0), i32 noundef %7, i32 noundef 4) #25, !dbg !3663
  tail call fastcc void @rtio_submit() #24, !dbg !3668
  call void @llvm.dbg.value(metadata i32 0, metadata !3613, metadata !DIExpression()), !dbg !3660
  br label %51, !dbg !3669

51:                                               ; preds = %50, %97
  %52 = phi i32 [ 0, %50 ], [ %98, %97 ]
  call void @llvm.dbg.value(metadata i32 %52, metadata !3613, metadata !DIExpression()), !dbg !3660
  %53 = load %struct.rtio_cq*, %struct.rtio_cq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 3), align 4, !dbg !3670
  %54 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %53, i32 0, i32 0, i32 3, !dbg !3670
  %55 = tail call fastcc i32 @atomic_get(i32* noundef nonnull %54) #24, !dbg !3670
  %56 = load %struct.rtio_cq*, %struct.rtio_cq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 3), align 4, !dbg !3670
  %57 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %56, i32 0, i32 0, i32 1, !dbg !3670
  %58 = load i32, i32* %57, align 4, !dbg !3670
  %59 = add i32 %58, %55, !dbg !3670
  call void @llvm.dbg.value(metadata i32 %59, metadata !3620, metadata !DIExpression()), !dbg !3671
  %60 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %56, i32 0, i32 0, i32 2, !dbg !3670
  %61 = tail call fastcc i32 @atomic_get(i32* noundef nonnull %60) #24, !dbg !3670
  %62 = icmp eq i32 %59, %61, !dbg !3670
  call void @llvm.dbg.value(metadata i1 %62, metadata !3622, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3671
  br i1 %62, label %63, label %66, !dbg !3670

63:                                               ; preds = %51
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_cq* %71, i32 %74), metadata !3617, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !3672
  %64 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 4) #24, !dbg !3673
  %65 = zext i8 %64 to i32, !dbg !3673
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.2, i32 0, i32 0), i32 noundef %65) #25, !dbg !3673
  tail call fastcc void @k_msleep(i32 noundef 100) #24, !dbg !3680
  br label %97, !dbg !3681, !llvm.loop !3682

66:                                               ; preds = %51
  %67 = load %struct.rtio_cq*, %struct.rtio_cq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 3), align 4, !dbg !3684
  %68 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %67, i32 0, i32 0, i32 1, !dbg !3684
  %69 = load i32, i32* %68, align 4, !dbg !3684
  %70 = add i32 %69, 1, !dbg !3684
  store i32 %70, i32* %68, align 4, !dbg !3684
  %71 = load %struct.rtio_cq*, %struct.rtio_cq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 3), align 4, !dbg !3670
  %72 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %71, i32 0, i32 0, i32 4, !dbg !3670
  %73 = load i32, i32* %72, align 4, !dbg !3670
  %74 = and i32 %73, %59, !dbg !3670
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_cq* %71, i32 %74), metadata !3617, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !3672
  %75 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 4) #24, !dbg !3687
  %76 = zext i8 %75 to i32, !dbg !3687
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.3, i32 0, i32 0), i32 noundef %76, i32 noundef %52) #25, !dbg !3687
  %77 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %71, i32 0, i32 1, i32 %74, i32 0, !dbg !3692
  %78 = load i32, i32* %77, align 4, !dbg !3692
  %79 = icmp slt i32 %78, 0, !dbg !3694
  br i1 %79, label %80, label %83, !dbg !3695

80:                                               ; preds = %66
  %81 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #24, !dbg !3696
  %82 = zext i8 %81 to i32, !dbg !3696
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4, i32 0, i32 0), i32 noundef %82) #25, !dbg !3696
  br label %83, !dbg !3702

83:                                               ; preds = %80, %66
  %84 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %71, i32 0, i32 1, i32 %74, i32 1, !dbg !3703
  %85 = load i8*, i8** %84, align 4, !dbg !3703
  %86 = getelementptr inbounds [4 x i8*], [4 x i8*]* %1, i32 0, i32 %52, !dbg !3704
  store i8* %85, i8** %86, align 4, !dbg !3705
  %87 = load %struct.rtio_cq*, %struct.rtio_cq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 3), align 4, !dbg !3706
  %88 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %87, i32 0, i32 0, i32 1, !dbg !3706
  %89 = load i32, i32* %88, align 4, !dbg !3706
  %90 = icmp eq i32 %89, 0, !dbg !3706
  br i1 %90, label %95, label %91, !dbg !3709

91:                                               ; preds = %83
  %92 = add i32 %89, -1, !dbg !3710
  store i32 %92, i32* %88, align 4, !dbg !3710
  %93 = load %struct.rtio_cq*, %struct.rtio_cq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 3), align 4, !dbg !3710
  %94 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %93, i32 0, i32 0, i32 3, !dbg !3710
  tail call fastcc void @atomic_add(i32* noundef nonnull %94, i32 noundef 1) #24, !dbg !3710
  br label %95, !dbg !3710

95:                                               ; preds = %91, %83
  %96 = add nsw i32 %52, 1, !dbg !3712
  call void @llvm.dbg.value(metadata i32 %96, metadata !3613, metadata !DIExpression()), !dbg !3660
  br label %97, !dbg !3683

97:                                               ; preds = %95, %63
  %98 = phi i32 [ %52, %63 ], [ %96, %95 ], !dbg !3660
  call void @llvm.dbg.value(metadata i32 %98, metadata !3613, metadata !DIExpression()), !dbg !3660
  %99 = icmp slt i32 %98, 4, !dbg !3713
  br i1 %99, label %51, label %100, !dbg !3669

100:                                              ; preds = %97
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5, i32 0, i32 0), i32 noundef %7, i32 noundef 4) #25, !dbg !3714
  call void @llvm.dbg.value(metadata i32 0, metadata !3613, metadata !DIExpression()), !dbg !3660
  %101 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 4) #24, !dbg !3637
  %102 = zext i8 %101 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !3613, metadata !DIExpression()), !dbg !3660
  br label %103, !dbg !3719

103:                                              ; preds = %100, %103
  %104 = phi i32 [ 0, %100 ], [ %107, %103 ]
  call void @llvm.dbg.value(metadata i32 %104, metadata !3613, metadata !DIExpression()), !dbg !3660
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i32 0, i32 0), metadata !3623, metadata !DIExpression()), !dbg !3720
  call void @llvm.dbg.value(metadata i1 false, metadata !3628, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3720
  call void @llvm.dbg.value(metadata i32 0, metadata !3629, metadata !DIExpression()), !dbg !3720
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i32 0, i32 0), i32 noundef %102, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i32 0, i32 0)) #25, !dbg !3721
  %105 = getelementptr inbounds [4 x i8*], [4 x i8*]* %1, i32 0, i32 %104, !dbg !3725
  %106 = load i8*, i8** %105, align 4, !dbg !3725
  tail call void @z_log_minimal_hexdump_print(i32 noundef 4, i8* noundef %106, i32 noundef 16) #25, !dbg !3725
  %107 = add nuw nsw i32 %104, 1, !dbg !3726
  call void @llvm.dbg.value(metadata i32 %107, metadata !3613, metadata !DIExpression()), !dbg !3660
  %108 = icmp eq i32 %107, 4, !dbg !3727
  br i1 %108, label %109, label %103, !dbg !3719, !llvm.loop !3728

109:                                              ; preds = %103
  tail call fastcc void @k_msleep(i32 noundef 300) #24, !dbg !3730
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8, i32 0, i32 0), i32 noundef %7, i32 noundef 4) #25, !dbg !3731
  call void @llvm.dbg.value(metadata i32 0, metadata !3613, metadata !DIExpression()), !dbg !3660
  %110 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3736
  br label %111, !dbg !3737

111:                                              ; preds = %109, %150
  %112 = phi %struct.rtio_sq* [ %110, %109 ], [ %151, %150 ], !dbg !3736
  %113 = phi i32 [ 0, %109 ], [ %152, %150 ]
  call void @llvm.dbg.value(metadata i32 %113, metadata !3613, metadata !DIExpression()), !dbg !3660
  %114 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %112, i32 0, i32 0, i32 2, !dbg !3736
  %115 = tail call fastcc i32 @atomic_get(i32* noundef nonnull %114) #24, !dbg !3736
  %116 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3736
  %117 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %116, i32 0, i32 0, i32 0, !dbg !3736
  %118 = load i32, i32* %117, align 4, !dbg !3736
  %119 = add i32 %118, %115, !dbg !3736
  call void @llvm.dbg.value(metadata i32 %119, metadata !3634, metadata !DIExpression()), !dbg !3738
  %120 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %116, i32 0, i32 0, i32 3, !dbg !3736
  %121 = tail call fastcc i32 @atomic_get(i32* noundef nonnull %120) #24, !dbg !3736
  %122 = sub i32 %119, %121, !dbg !3736
  %123 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3736
  %124 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %123, i32 0, i32 0, i32 4, !dbg !3736
  %125 = load i32, i32* %124, align 4, !dbg !3736
  %126 = add i32 %125, 1, !dbg !3736
  %127 = icmp ult i32 %122, %126, !dbg !3736
  call void @llvm.dbg.value(metadata i1 %127, metadata !3636, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3738
  br i1 %127, label %128, label %137, !dbg !3736

128:                                              ; preds = %111
  %129 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %123, i32 0, i32 0, i32 0, !dbg !3739
  %130 = load i32, i32* %129, align 4, !dbg !3739
  %131 = add i32 %130, 1, !dbg !3739
  store i32 %131, i32* %129, align 4, !dbg !3739
  %132 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3736
  %133 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %132, i32 0, i32 0, i32 4, !dbg !3736
  %134 = load i32, i32* %133, align 4, !dbg !3736
  %135 = and i32 %134, %119, !dbg !3736
  %136 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %132, i32 0, i32 1, i32 %135, !dbg !3736
  br label %137, !dbg !3736

137:                                              ; preds = %111, %128
  %138 = phi %struct.rtio_sqe* [ %136, %128 ], [ null, %111 ], !dbg !3736
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %138, metadata !3630, metadata !DIExpression()), !dbg !3742
  %139 = getelementptr inbounds [4 x i8*], [4 x i8*]* %1, i32 0, i32 %113, !dbg !3743
  %140 = load i8*, i8** %139, align 4, !dbg !3743
  tail call fastcc void @rtio_sqe_prep_read(%struct.rtio_sqe* noundef %138, %struct.rtio_iodev* noundef %2, i8* noundef %140, i8* noundef %140) #24, !dbg !3744
  %141 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3745
  %142 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %141, i32 0, i32 0, i32 0, !dbg !3745
  %143 = load i32, i32* %142, align 4, !dbg !3745
  %144 = icmp eq i32 %143, 0, !dbg !3745
  br i1 %144, label %150, label %145, !dbg !3748

145:                                              ; preds = %137
  %146 = add i32 %143, -1, !dbg !3749
  store i32 %146, i32* %142, align 4, !dbg !3749
  %147 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3749
  %148 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %147, i32 0, i32 0, i32 2, !dbg !3749
  tail call fastcc void @atomic_add(i32* noundef nonnull %148, i32 noundef 1) #24, !dbg !3749
  %149 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3736
  br label %150, !dbg !3749

150:                                              ; preds = %145, %137
  %151 = phi %struct.rtio_sq* [ %149, %145 ], [ %141, %137 ]
  %152 = add nuw nsw i32 %113, 1, !dbg !3751
  call void @llvm.dbg.value(metadata i32 %152, metadata !3613, metadata !DIExpression()), !dbg !3660
  %153 = icmp eq i32 %152, 4, !dbg !3752
  br i1 %153, label %154, label %111, !dbg !3737, !llvm.loop !3753

154:                                              ; preds = %150
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #23, !dbg !3755
  br label %50, !dbg !3642, !llvm.loop !3756
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) unnamed_addr #4 !dbg !3757 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3762, metadata !DIExpression()), !dbg !3763
  %2 = add i32 %0, -1, !dbg !3764
  %3 = icmp ult i32 %2, 4, !dbg !3764
  %4 = shl i32 %2, 3, !dbg !3764
  %5 = lshr i32 1145657157, %4, !dbg !3764
  %6 = trunc i32 %5 to i8, !dbg !3764
  %7 = select i1 %3, i8 %6, i8 63, !dbg !3764
  ret i8 %7, !dbg !3765
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_get(i32* nocapture noundef readonly %0) unnamed_addr #5 !dbg !3766 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !3774, metadata !DIExpression()), !dbg !3775
  %2 = load atomic i32, i32* %0 seq_cst, align 4, !dbg !3776
  ret i32 %2, !dbg !3777
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @rtio_sqe_prep_read(%struct.rtio_sqe* nocapture noundef writeonly %0, %struct.rtio_iodev* noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #6 !dbg !3778 {
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %0, metadata !3782, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata %struct.rtio_iodev* %1, metadata !3783, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i8 -1, metadata !3784, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i8* %2, metadata !3785, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i32 16, metadata !3786, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i8* %3, metadata !3787, metadata !DIExpression()), !dbg !3788
  %5 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %0, i32 0, i32 0, !dbg !3789
  store i8 1, i8* %5, align 4, !dbg !3790
  %6 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %0, i32 0, i32 1, !dbg !3791
  store i8 -1, i8* %6, align 1, !dbg !3792
  %7 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %0, i32 0, i32 3, !dbg !3793
  store %struct.rtio_iodev* %1, %struct.rtio_iodev** %7, align 4, !dbg !3794
  %8 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %0, i32 0, i32 5, i32 0, i32 0, !dbg !3795
  store i32 16, i32* %8, align 4, !dbg !3796
  %9 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %0, i32 0, i32 5, i32 0, i32 1, !dbg !3797
  store i8* %2, i8** %9, align 4, !dbg !3798
  %10 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %0, i32 0, i32 4, !dbg !3799
  store i8* %3, i8** %10, align 4, !dbg !3800
  ret void, !dbg !3801
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_add(i32* nocapture noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3802 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !3807, metadata !DIExpression()), !dbg !3809
  call void @llvm.dbg.value(metadata i32 %1, metadata !3808, metadata !DIExpression()), !dbg !3809
  %3 = atomicrmw add i32* %0, i32 %1 seq_cst, align 4, !dbg !3810
  ret void, !dbg !3811
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #7

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: noinline nounwind optsize
define internal fastcc void @rtio_submit() unnamed_addr #1 !dbg !3812 {
  call void @llvm.dbg.value(metadata %struct.rtio* @ez_io, metadata !3817, metadata !DIExpression()), !dbg !3819
  call void @llvm.dbg.value(metadata i32 4, metadata !3818, metadata !DIExpression()), !dbg !3819
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3820, !srcloc !3822
  tail call fastcc void @z_impl_rtio_submit() #24, !dbg !3823
  ret void, !dbg !3824
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_msleep(i32 noundef %0) unnamed_addr #1 !dbg !3825 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3829, metadata !DIExpression()), !dbg !3830
  %2 = zext i32 %0 to i64
  %3 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %2) #24, !dbg !3831
  %4 = insertvalue [1 x i64] poison, i64 %3, 0, !dbg !3832
  tail call fastcc void @k_sleep([1 x i64] %4) #24, !dbg !3832
  ret void, !dbg !3833
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #7

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #4 !dbg !3834 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !3839, metadata !DIExpression()), !dbg !3840
  call void @llvm.dbg.value(metadata i64 %0, metadata !3841, metadata !DIExpression()), !dbg !3858
  call void @llvm.dbg.value(metadata i32 1000, metadata !3846, metadata !DIExpression()), !dbg !3858
  call void @llvm.dbg.value(metadata i32 10000, metadata !3847, metadata !DIExpression()), !dbg !3858
  call void @llvm.dbg.value(metadata i8 1, metadata !3848, metadata !DIExpression()), !dbg !3858
  call void @llvm.dbg.value(metadata i8 0, metadata !3849, metadata !DIExpression()), !dbg !3858
  call void @llvm.dbg.value(metadata i8 1, metadata !3850, metadata !DIExpression()), !dbg !3858
  call void @llvm.dbg.value(metadata i8 0, metadata !3851, metadata !DIExpression()), !dbg !3858
  call void @llvm.dbg.value(metadata i8 1, metadata !3852, metadata !DIExpression()), !dbg !3858
  call void @llvm.dbg.value(metadata i8 0, metadata !3853, metadata !DIExpression()), !dbg !3858
  call void @llvm.dbg.value(metadata i64 0, metadata !3854, metadata !DIExpression()), !dbg !3858
  call void @llvm.dbg.value(metadata i64 0, metadata !3854, metadata !DIExpression()), !dbg !3858
  %2 = mul i64 %0, 10, !dbg !3860
  ret i64 %2, !dbg !3866
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sleep([1 x i64] %0) unnamed_addr #1 !dbg !3867 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3876, metadata !DIExpression()), !dbg !3877
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3878, !srcloc !3880
  %2 = tail call i32 @z_impl_k_sleep([1 x i64] %0) #25, !dbg !3881
  ret void, !dbg !3882
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_rtio_submit() unnamed_addr #1 !dbg !3883 {
  call void @llvm.dbg.value(metadata %struct.rtio* @ez_io, metadata !3885, metadata !DIExpression()), !dbg !3892
  call void @llvm.dbg.value(metadata i32 4, metadata !3886, metadata !DIExpression()), !dbg !3892
  %1 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3893
  %2 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %1, i32 0, i32 0, i32 0, !dbg !3893
  %3 = load i32, i32* %2, align 4, !dbg !3893
  %4 = icmp eq i32 %3, 0, !dbg !3893
  br i1 %4, label %8, label %5, !dbg !3894

5:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 %3, metadata !3888, metadata !DIExpression()), !dbg !3895
  store i32 0, i32* %2, align 4, !dbg !3896
  %6 = load %struct.rtio_sq*, %struct.rtio_sq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 2), align 4, !dbg !3896
  %7 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %6, i32 0, i32 0, i32 2, !dbg !3896
  tail call fastcc void @atomic_add(i32* noundef nonnull %7, i32 noundef %3) #24, !dbg !3896
  br label %8, !dbg !3896

8:                                                ; preds = %5, %0
  %9 = load %struct.rtio_executor*, %struct.rtio_executor** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 0), align 4, !dbg !3897
  %10 = getelementptr inbounds %struct.rtio_executor, %struct.rtio_executor* %9, i32 0, i32 0, !dbg !3898
  %11 = load %struct.rtio_executor_api*, %struct.rtio_executor_api** %10, align 4, !dbg !3898
  %12 = getelementptr inbounds %struct.rtio_executor_api, %struct.rtio_executor_api* %11, i32 0, i32 0, !dbg !3899
  %13 = load i32 (%struct.rtio*)*, i32 (%struct.rtio*)** %12, align 4, !dbg !3899
  %14 = tail call i32 %13(%struct.rtio* noundef nonnull @ez_io) #25, !dbg !3900
  call void @llvm.dbg.value(metadata i32 %14, metadata !3887, metadata !DIExpression()), !dbg !3892
  %15 = icmp eq i32 %14, 0, !dbg !3901
  br i1 %15, label %16, label %38, !dbg !3903

16:                                               ; preds = %8
  %17 = load %struct.rtio_cq*, %struct.rtio_cq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 3), align 4, !dbg !3904
  %18 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %17, i32 0, i32 0, i32 2, !dbg !3904
  %19 = load i32, i32* %18, align 4, !dbg !3904
  %20 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %17, i32 0, i32 0, i32 3, !dbg !3904
  %21 = load i32, i32* %20, align 4, !dbg !3904
  %22 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %17, i32 0, i32 0, i32 1, !dbg !3904
  %23 = load i32, i32* %22, align 4, !dbg !3904
  %24 = add i32 %21, %23, !dbg !3904
  %25 = sub i32 %19, %24, !dbg !3904
  %26 = icmp ult i32 %25, 4, !dbg !3906
  br i1 %26, label %27, label %38, !dbg !3907

27:                                               ; preds = %16, %27
  tail call fastcc void @k_yield() #24, !dbg !3908
  %28 = load %struct.rtio_cq*, %struct.rtio_cq** getelementptr inbounds (%struct.rtio, %struct.rtio* @ez_io, i32 0, i32 3), align 4, !dbg !3904
  %29 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %28, i32 0, i32 0, i32 2, !dbg !3904
  %30 = load i32, i32* %29, align 4, !dbg !3904
  %31 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %28, i32 0, i32 0, i32 3, !dbg !3904
  %32 = load i32, i32* %31, align 4, !dbg !3904
  %33 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %28, i32 0, i32 0, i32 1, !dbg !3904
  %34 = load i32, i32* %33, align 4, !dbg !3904
  %35 = add i32 %32, %34, !dbg !3904
  %36 = sub i32 %30, %35, !dbg !3904
  %37 = icmp ult i32 %36, 4, !dbg !3906
  br i1 %37, label %27, label %38, !dbg !3907, !llvm.loop !3910

38:                                               ; preds = %27, %16, %8
  ret void, !dbg !3912
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !3913 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3914, !srcloc !3916
  tail call void @z_impl_k_yield() #25, !dbg !3917
  ret void, !dbg !3918
}

; Function Attrs: noinline nounwind optsize
define internal void @vnd_sensor_iodev_submit(%struct.rtio_sqe* noundef %0, %struct.rtio* noundef %1) #1 !dbg !3919 {
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %0, metadata !3921, metadata !DIExpression()), !dbg !3930
  call void @llvm.dbg.value(metadata %struct.rtio* %1, metadata !3922, metadata !DIExpression()), !dbg !3930
  %3 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %0, i32 0, i32 3, !dbg !3931
  %4 = bitcast %struct.rtio_iodev** %3 to %struct.vnd_sensor_data**, !dbg !3931
  %5 = load %struct.vnd_sensor_data*, %struct.vnd_sensor_data** %4, align 4, !dbg !3931
  call void @llvm.dbg.value(metadata %struct.vnd_sensor_data* %5, metadata !3923, metadata !DIExpression()), !dbg !3930
  %6 = getelementptr inbounds %struct.vnd_sensor_data, %struct.vnd_sensor_data* %5, i32 0, i32 2, !dbg !3932
  %7 = load %struct.device*, %struct.device** %6, align 8, !dbg !3932
  call void @llvm.dbg.value(metadata %struct.device* %7, metadata !3924, metadata !DIExpression()), !dbg !3930
  %8 = getelementptr inbounds %struct.vnd_sensor_data, %struct.vnd_sensor_data* %5, i32 0, i32 0, i32 1, !dbg !3933
  %9 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %8, align 4, !dbg !3933
  %10 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %9, i32 0, i32 0, i32 2, !dbg !3933
  %11 = tail call fastcc i32 @atomic_get.13(i32* noundef nonnull %10) #24, !dbg !3933
  %12 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %8, align 4, !dbg !3933
  %13 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %12, i32 0, i32 0, i32 0, !dbg !3933
  %14 = load i32, i32* %13, align 4, !dbg !3933
  %15 = add i32 %14, %11, !dbg !3933
  call void @llvm.dbg.value(metadata i32 %15, metadata !3927, metadata !DIExpression()), !dbg !3934
  %16 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %12, i32 0, i32 0, i32 3, !dbg !3933
  %17 = tail call fastcc i32 @atomic_get.13(i32* noundef nonnull %16) #24, !dbg !3933
  %18 = sub i32 %15, %17, !dbg !3933
  %19 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %8, align 4, !dbg !3933
  %20 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %19, i32 0, i32 0, i32 4, !dbg !3933
  %21 = load i32, i32* %20, align 4, !dbg !3933
  %22 = add i32 %21, 1, !dbg !3933
  %23 = icmp ult i32 %18, %22, !dbg !3933
  call void @llvm.dbg.value(metadata i1 %23, metadata !3929, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3934
  br i1 %23, label %24, label %42, !dbg !3933

24:                                               ; preds = %2
  %25 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %19, i32 0, i32 0, i32 0, !dbg !3935
  %26 = load i32, i32* %25, align 4, !dbg !3935
  %27 = add i32 %26, 1, !dbg !3935
  store i32 %27, i32* %25, align 4, !dbg !3935
  %28 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %8, align 4, !dbg !3933
  %29 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %28, i32 0, i32 0, i32 4, !dbg !3933
  %30 = load i32, i32* %29, align 4, !dbg !3933
  %31 = and i32 %30, %15, !dbg !3933
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_iodev_sq* %28, i32 %31), metadata !3925, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !3930
  %32 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %28, i32 0, i32 1, i32 %31, i32 0, !dbg !3938
  store %struct.rtio_sqe* %0, %struct.rtio_sqe** %32, align 4, !dbg !3941
  %33 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %28, i32 0, i32 1, i32 %31, i32 1, !dbg !3942
  store %struct.rtio* %1, %struct.rtio** %33, align 4, !dbg !3943
  %34 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %8, align 4, !dbg !3944
  %35 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %34, i32 0, i32 0, i32 0, !dbg !3944
  %36 = load i32, i32* %35, align 4, !dbg !3944
  %37 = icmp eq i32 %36, 0, !dbg !3944
  br i1 %37, label %47, label %38, !dbg !3947

38:                                               ; preds = %24
  %39 = add i32 %36, -1, !dbg !3948
  store i32 %39, i32* %35, align 4, !dbg !3948
  %40 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %8, align 4, !dbg !3948
  %41 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %40, i32 0, i32 0, i32 2, !dbg !3948
  tail call fastcc void @atomic_add.14(i32* noundef nonnull %41) #24, !dbg !3948
  br label %47, !dbg !3948

42:                                               ; preds = %2
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_iodev_sq* %28, i32 %31), metadata !3925, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !3930
  %43 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.15(i32 noundef 1) #24, !dbg !3950
  %44 = zext i8 %43 to i32, !dbg !3950
  %45 = getelementptr inbounds %struct.device, %struct.device* %7, i32 0, i32 0, !dbg !3950
  %46 = load i8*, i8** %45, align 4, !dbg !3950
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.16, i32 0, i32 0), i32 noundef %44, i8* noundef %46) #25, !dbg !3950
  tail call fastcc void @rtio_sqe_err(%struct.rtio* noundef %1, %struct.rtio_sqe* noundef nonnull %0, i32 noundef -11) #24, !dbg !3956
  br label %47

47:                                               ; preds = %24, %38, %42
  ret void, !dbg !3957
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_get.13(i32* nocapture noundef readonly %0) unnamed_addr #5 !dbg !3958 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !3960, metadata !DIExpression()), !dbg !3961
  %2 = load atomic i32, i32* %0 seq_cst, align 4, !dbg !3962
  ret i32 %2, !dbg !3963
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_add.14(i32* nocapture noundef %0) unnamed_addr #5 !dbg !3964 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !3966, metadata !DIExpression()), !dbg !3968
  call void @llvm.dbg.value(metadata i32 1, metadata !3967, metadata !DIExpression()), !dbg !3968
  %2 = atomicrmw add i32* %0, i32 1 seq_cst, align 4, !dbg !3969
  ret void, !dbg !3970
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.15(i32 noundef %0) unnamed_addr #4 !dbg !3971 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3973, metadata !DIExpression()), !dbg !3974
  %2 = add i32 %0, -1, !dbg !3975
  %3 = icmp ult i32 %2, 4, !dbg !3975
  %4 = shl i32 %2, 3, !dbg !3975
  %5 = lshr i32 1145657157, %4, !dbg !3975
  %6 = trunc i32 %5 to i8, !dbg !3975
  %7 = select i1 %3, i8 %6, i8 63, !dbg !3975
  ret i8 %7, !dbg !3976
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @rtio_sqe_err(%struct.rtio* noundef %0, %struct.rtio_sqe* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !3977 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !3979, metadata !DIExpression()), !dbg !3982
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %1, metadata !3980, metadata !DIExpression()), !dbg !3982
  call void @llvm.dbg.value(metadata i32 %2, metadata !3981, metadata !DIExpression()), !dbg !3982
  %4 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 0, !dbg !3983
  %5 = load %struct.rtio_executor*, %struct.rtio_executor** %4, align 4, !dbg !3983
  %6 = getelementptr inbounds %struct.rtio_executor, %struct.rtio_executor* %5, i32 0, i32 0, !dbg !3984
  %7 = load %struct.rtio_executor_api*, %struct.rtio_executor_api** %6, align 4, !dbg !3984
  %8 = getelementptr inbounds %struct.rtio_executor_api, %struct.rtio_executor_api* %7, i32 0, i32 2, !dbg !3985
  %9 = load void (%struct.rtio*, %struct.rtio_sqe*, i32)*, void (%struct.rtio*, %struct.rtio_sqe*, i32)** %8, align 4, !dbg !3985
  tail call void %9(%struct.rtio* noundef %0, %struct.rtio_sqe* noundef %1, i32 noundef %2) #25, !dbg !3986
  ret void, !dbg !3987
}

; Function Attrs: noinline nounwind optsize
define internal i32 @vnd_sensor_init(%struct.device* noundef %0) #1 !dbg !3988 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3990, metadata !DIExpression()), !dbg !3995
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !3996
  %3 = bitcast i8** %2 to %struct.vnd_sensor_config**, !dbg !3996
  %4 = load %struct.vnd_sensor_config*, %struct.vnd_sensor_config** %3, align 4, !dbg !3996
  call void @llvm.dbg.value(metadata %struct.vnd_sensor_config* %4, metadata !3991, metadata !DIExpression()), !dbg !3995
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !3997
  %6 = bitcast i8** %5 to %struct.vnd_sensor_data**, !dbg !3997
  %7 = load %struct.vnd_sensor_data*, %struct.vnd_sensor_data** %6, align 4, !dbg !3997
  call void @llvm.dbg.value(metadata %struct.vnd_sensor_data* %7, metadata !3993, metadata !DIExpression()), !dbg !3995
  %8 = getelementptr inbounds %struct.vnd_sensor_config, %struct.vnd_sensor_config* %4, i32 0, i32 0, !dbg !3998
  %9 = load i32, i32* %8, align 4, !dbg !3998
  call void @llvm.dbg.value(metadata i32 %9, metadata !3994, metadata !DIExpression()), !dbg !3995
  %10 = getelementptr inbounds %struct.vnd_sensor_data, %struct.vnd_sensor_data* %7, i32 0, i32 2, !dbg !3999
  store %struct.device* %0, %struct.device** %10, align 8, !dbg !4000
  %11 = getelementptr inbounds %struct.vnd_sensor_data, %struct.vnd_sensor_data* %7, i32 0, i32 1, !dbg !4001
  tail call void @k_timer_init(%struct.k_timer* noundef nonnull %11, void (%struct.k_timer*)* noundef nonnull @vnd_sensor_timer_expiry, void (%struct.k_timer*)* noundef null) #25, !dbg !4002
  %12 = zext i32 %9 to i64, !dbg !4003
  %13 = tail call fastcc i64 @k_ms_to_ticks_ceil64.18(i64 noundef %12) #24, !dbg !4003
  %14 = insertvalue [1 x i64] poison, i64 %13, 0, !dbg !4004
  tail call fastcc void @k_timer_start(%struct.k_timer* noundef nonnull %11, [1 x i64] %14, [1 x i64] %14) #24, !dbg !4004
  ret i32 0, !dbg !4005
}

; Function Attrs: noinline nounwind optsize
define internal void @vnd_sensor_timer_expiry(%struct.k_timer* nocapture noundef readonly %0) #1 !dbg !4006 {
  call void @llvm.dbg.value(metadata %struct.k_timer* %0, metadata !4008, metadata !DIExpression()), !dbg !4010
  %2 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 -1, i32 4, !dbg !4011
  call void @llvm.dbg.value(metadata %struct.k_timeout_t* %2, metadata !4009, metadata !DIExpression()), !dbg !4010
  %3 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %2, i32 9, !dbg !4012
  %4 = bitcast %struct.k_timeout_t* %3 to %struct.device**, !dbg !4012
  %5 = load %struct.device*, %struct.device** %4, align 8, !dbg !4012
  tail call fastcc void @vnd_sensor_handle_int(%struct.device* noundef %5) #24, !dbg !4013
  ret void, !dbg !4014
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64.18(i64 noundef %0) unnamed_addr #4 !dbg !4015 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !4017, metadata !DIExpression()), !dbg !4018
  call void @llvm.dbg.value(metadata i64 %0, metadata !4019, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i32 1000, metadata !4022, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i32 10000, metadata !4023, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i8 1, metadata !4024, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i8 0, metadata !4025, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i8 1, metadata !4026, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i8 0, metadata !4027, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i8 1, metadata !4028, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i8 0, metadata !4029, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i64 0, metadata !4030, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i64 0, metadata !4030, metadata !DIExpression()), !dbg !4034
  %2 = mul i64 %0, 10, !dbg !4036
  ret i64 %2, !dbg !4042
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_timer_start(%struct.k_timer* noundef %0, [1 x i64] %1, [1 x i64] %2) unnamed_addr #1 !dbg !4043 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !4048, metadata !DIExpression()), !dbg !4050
  call void @llvm.dbg.value(metadata i64 undef, metadata !4049, metadata !DIExpression()), !dbg !4050
  call void @llvm.dbg.value(metadata %struct.k_timer* %0, metadata !4047, metadata !DIExpression()), !dbg !4050
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4051, !srcloc !4053
  tail call void @z_impl_k_timer_start(%struct.k_timer* noundef %0, [1 x i64] %1, [1 x i64] %2) #25, !dbg !4054
  ret void, !dbg !4055
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @vnd_sensor_handle_int(%struct.device* nocapture noundef readonly %0) unnamed_addr #1 !dbg !4056 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !4060, metadata !DIExpression()), !dbg !4066
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !4067
  %3 = bitcast i8** %2 to %struct.vnd_sensor_data**, !dbg !4067
  %4 = load %struct.vnd_sensor_data*, %struct.vnd_sensor_data** %3, align 4, !dbg !4067
  call void @llvm.dbg.value(metadata %struct.vnd_sensor_data* %4, metadata !4061, metadata !DIExpression()), !dbg !4066
  %5 = getelementptr inbounds %struct.vnd_sensor_data, %struct.vnd_sensor_data* %4, i32 0, i32 0, i32 1, !dbg !4068
  %6 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %5, align 4, !dbg !4068
  %7 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %6, i32 0, i32 0, i32 3, !dbg !4068
  %8 = tail call fastcc i32 @atomic_get.13(i32* noundef nonnull %7) #24, !dbg !4068
  %9 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %5, align 4, !dbg !4068
  %10 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %9, i32 0, i32 0, i32 1, !dbg !4068
  %11 = load i32, i32* %10, align 4, !dbg !4068
  %12 = add i32 %11, %8, !dbg !4068
  call void @llvm.dbg.value(metadata i32 %12, metadata !4063, metadata !DIExpression()), !dbg !4069
  %13 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %9, i32 0, i32 0, i32 2, !dbg !4068
  %14 = tail call fastcc i32 @atomic_get.13(i32* noundef nonnull %13) #24, !dbg !4068
  %15 = icmp eq i32 %12, %14, !dbg !4068
  call void @llvm.dbg.value(metadata i1 %15, metadata !4065, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4069
  br i1 %15, label %37, label %16, !dbg !4068

16:                                               ; preds = %1
  %17 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %5, align 4, !dbg !4070
  %18 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %17, i32 0, i32 0, i32 1, !dbg !4070
  %19 = load i32, i32* %18, align 4, !dbg !4070
  %20 = add i32 %19, 1, !dbg !4070
  store i32 %20, i32* %18, align 4, !dbg !4070
  %21 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %5, align 4, !dbg !4068
  %22 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %21, i32 0, i32 0, i32 4, !dbg !4068
  %23 = load i32, i32* %22, align 4, !dbg !4068
  %24 = and i32 %23, %12, !dbg !4068
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_iodev_sq* %21, i32 %24), metadata !4062, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !4066
  %25 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %21, i32 0, i32 1, i32 %24, i32 0, !dbg !4073
  %26 = load %struct.rtio_sqe*, %struct.rtio_sqe** %25, align 4, !dbg !4073
  %27 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %21, i32 0, i32 1, i32 %24, i32 1, !dbg !4076
  %28 = load %struct.rtio*, %struct.rtio** %27, align 4, !dbg !4076
  tail call fastcc void @vnd_sensor_iodev_execute(%struct.device* noundef nonnull %0, %struct.rtio_sqe* noundef %26, %struct.rtio* noundef %28) #24, !dbg !4077
  %29 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %5, align 4, !dbg !4078
  %30 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %29, i32 0, i32 0, i32 1, !dbg !4078
  %31 = load i32, i32* %30, align 4, !dbg !4078
  %32 = icmp eq i32 %31, 0, !dbg !4078
  br i1 %32, label %42, label %33, !dbg !4081

33:                                               ; preds = %16
  %34 = add i32 %31, -1, !dbg !4082
  store i32 %34, i32* %30, align 4, !dbg !4082
  %35 = load %struct.rtio_iodev_sq*, %struct.rtio_iodev_sq** %5, align 4, !dbg !4082
  %36 = getelementptr inbounds %struct.rtio_iodev_sq, %struct.rtio_iodev_sq* %35, i32 0, i32 0, i32 3, !dbg !4082
  tail call fastcc void @atomic_add.14(i32* noundef nonnull %36) #24, !dbg !4082
  br label %42, !dbg !4082

37:                                               ; preds = %1
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_iodev_sq* %21, i32 %24), metadata !4062, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !4066
  %38 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.15(i32 noundef 1) #24, !dbg !4084
  %39 = zext i8 %38 to i32, !dbg !4084
  %40 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 0, !dbg !4084
  %41 = load i8*, i8** %40, align 4, !dbg !4084
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.19, i32 0, i32 0), i32 noundef %39, i8* noundef %41) #25, !dbg !4084
  br label %42

42:                                               ; preds = %16, %33, %37
  ret void, !dbg !4090
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @vnd_sensor_iodev_execute(%struct.device* nocapture noundef readonly %0, %struct.rtio_sqe* noundef %1, %struct.rtio* noundef %2) unnamed_addr #1 !dbg !4091 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !4095, metadata !DIExpression()), !dbg !4099
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %1, metadata !4096, metadata !DIExpression()), !dbg !4099
  call void @llvm.dbg.value(metadata %struct.rtio* %2, metadata !4097, metadata !DIExpression()), !dbg !4099
  %4 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %1, i32 0, i32 0, !dbg !4100
  %5 = load i8, i8* %4, align 4, !dbg !4100
  %6 = icmp eq i8 %5, 1, !dbg !4102
  br i1 %6, label %12, label %7, !dbg !4103

7:                                                ; preds = %3
  %8 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.15(i32 noundef 1) #24, !dbg !4104
  %9 = zext i8 %8 to i32, !dbg !4104
  %10 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 0, !dbg !4104
  %11 = load i8*, i8** %10, align 4, !dbg !4104
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4.20, i32 0, i32 0), i32 noundef %9, i8* noundef %11) #25, !dbg !4104
  call void @llvm.dbg.value(metadata i32 %17, metadata !4098, metadata !DIExpression()), !dbg !4099
  br label %19, !dbg !4110

12:                                               ; preds = %3
  %13 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %1, i32 0, i32 5, i32 0, i32 1, !dbg !4111
  %14 = load i8*, i8** %13, align 4, !dbg !4111
  %15 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %1, i32 0, i32 5, i32 0, i32 0, !dbg !4113
  %16 = load i32, i32* %15, align 4, !dbg !4113
  %17 = tail call fastcc i32 @vnd_sensor_iodev_read(%struct.device* noundef %0, i8* noundef %14, i32 noundef %16) #24, !dbg !4114
  call void @llvm.dbg.value(metadata i32 %17, metadata !4098, metadata !DIExpression()), !dbg !4099
  %18 = icmp slt i32 %17, 0, !dbg !4115
  br i1 %18, label %19, label %21, !dbg !4110

19:                                               ; preds = %7, %12
  %20 = phi i32 [ -22, %7 ], [ %17, %12 ]
  tail call fastcc void @rtio_sqe_err(%struct.rtio* noundef %2, %struct.rtio_sqe* noundef nonnull %1, i32 noundef %20) #24, !dbg !4117
  br label %22, !dbg !4119

21:                                               ; preds = %12
  tail call fastcc void @rtio_sqe_ok(%struct.rtio* noundef %2, %struct.rtio_sqe* noundef nonnull %1) #24, !dbg !4120
  br label %22

22:                                               ; preds = %21, %19
  ret void, !dbg !4122
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @vnd_sensor_iodev_read(%struct.device* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !4123 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !4127, metadata !DIExpression()), !dbg !4136
  call void @llvm.dbg.value(metadata i8* %1, metadata !4128, metadata !DIExpression()), !dbg !4136
  call void @llvm.dbg.value(metadata i32 %2, metadata !4129, metadata !DIExpression()), !dbg !4136
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !4137
  %5 = bitcast i8** %4 to %struct.vnd_sensor_config**, !dbg !4137
  %6 = load %struct.vnd_sensor_config*, %struct.vnd_sensor_config** %5, align 4, !dbg !4137
  call void @llvm.dbg.value(metadata %struct.vnd_sensor_config* %6, metadata !4130, metadata !DIExpression()), !dbg !4136
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !4138
  %8 = bitcast i8** %7 to %struct.vnd_sensor_data**, !dbg !4138
  %9 = load %struct.vnd_sensor_data*, %struct.vnd_sensor_data** %8, align 4, !dbg !4138
  call void @llvm.dbg.value(metadata %struct.vnd_sensor_data* %9, metadata !4131, metadata !DIExpression()), !dbg !4136
  %10 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.15(i32 noundef 4) #24, !dbg !4139
  %11 = zext i8 %10 to i32, !dbg !4139
  %12 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 0, !dbg !4139
  %13 = load i8*, i8** %12, align 4, !dbg !4139
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.5.21, i32 0, i32 0), i32 noundef %11, i8* noundef %13, i32 noundef %2, i8* noundef %1) #25, !dbg !4139
  %14 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !4144, !srcloc !4153
  %15 = extractvalue { i32, i32 } %14, 0, !dbg !4144
  call void @llvm.dbg.value(metadata i32 %15, metadata !4150, metadata !DIExpression()) #23, !dbg !4154
  call void @llvm.dbg.value(metadata i32 undef, metadata !4151, metadata !DIExpression()) #23, !dbg !4154
  call void @llvm.dbg.value(metadata i32 %15, metadata !4133, metadata !DIExpression()), !dbg !4136
  %16 = getelementptr inbounds %struct.vnd_sensor_data, %struct.vnd_sensor_data* %9, i32 0, i32 4, !dbg !4155
  %17 = load i32, i32* %16, align 4, !dbg !4156
  %18 = add i32 %17, 1, !dbg !4156
  store i32 %18, i32* %16, align 4, !dbg !4156
  call void @llvm.dbg.value(metadata i32 %17, metadata !4132, metadata !DIExpression()), !dbg !4136
  call void @llvm.dbg.value(metadata i32 %15, metadata !4157, metadata !DIExpression()) #23, !dbg !4162
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !4164, !srcloc !4165
  %19 = getelementptr inbounds %struct.vnd_sensor_config, %struct.vnd_sensor_config* %6, i32 0, i32 1, !dbg !4166
  %20 = load i32, i32* %19, align 4, !dbg !4166
  %21 = icmp ugt i32 %20, %2, !dbg !4168
  br i1 %21, label %26, label %22, !dbg !4169

22:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !4134, metadata !DIExpression()), !dbg !4170
  %23 = icmp ult i32 %20, %2, !dbg !4171
  %24 = select i1 %23, i32 %20, i32 %2, !dbg !4171
  %25 = icmp eq i32 %24, 0, !dbg !4173
  br i1 %25, label %42, label %30, !dbg !4174

26:                                               ; preds = %3
  %27 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.15(i32 noundef 1) #24, !dbg !4175
  %28 = zext i8 %27 to i32, !dbg !4175
  %29 = load i8*, i8** %12, align 4, !dbg !4175
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6.22, i32 0, i32 0), i32 noundef %28, i8* noundef %29) #25, !dbg !4175
  br label %42, !dbg !4181

30:                                               ; preds = %22, %30
  %31 = phi i32 [ %38, %30 ], [ %20, %22 ]
  %32 = phi i32 [ %37, %30 ], [ 0, %22 ]
  call void @llvm.dbg.value(metadata i32 %32, metadata !4134, metadata !DIExpression()), !dbg !4170
  %33 = mul i32 %31, %17, !dbg !4182
  %34 = add i32 %33, %32, !dbg !4184
  %35 = trunc i32 %34 to i8, !dbg !4185
  %36 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !4186
  store i8 %35, i8* %36, align 1, !dbg !4187
  %37 = add nuw nsw i32 %32, 1, !dbg !4188
  call void @llvm.dbg.value(metadata i32 %37, metadata !4134, metadata !DIExpression()), !dbg !4170
  %38 = load i32, i32* %19, align 4, !dbg !4171
  %39 = icmp ult i32 %38, %2, !dbg !4171
  %40 = select i1 %39, i32 %38, i32 %2, !dbg !4171
  %41 = icmp ult i32 %37, %40, !dbg !4173
  br i1 %41, label %30, label %42, !dbg !4174, !llvm.loop !4189

42:                                               ; preds = %30, %22, %26
  %43 = phi i32 [ -12, %26 ], [ 0, %22 ], [ 0, %30 ], !dbg !4136
  ret i32 %43, !dbg !4191
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @rtio_sqe_ok(%struct.rtio* noundef %0, %struct.rtio_sqe* noundef %1) unnamed_addr #1 !dbg !4192 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !4194, metadata !DIExpression()), !dbg !4197
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %1, metadata !4195, metadata !DIExpression()), !dbg !4197
  call void @llvm.dbg.value(metadata i32 0, metadata !4196, metadata !DIExpression()), !dbg !4197
  %3 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 0, !dbg !4198
  %4 = load %struct.rtio_executor*, %struct.rtio_executor** %3, align 4, !dbg !4198
  %5 = getelementptr inbounds %struct.rtio_executor, %struct.rtio_executor* %4, i32 0, i32 0, !dbg !4199
  %6 = load %struct.rtio_executor_api*, %struct.rtio_executor_api** %5, align 4, !dbg !4199
  %7 = getelementptr inbounds %struct.rtio_executor_api, %struct.rtio_executor_api* %6, i32 0, i32 1, !dbg !4200
  %8 = load void (%struct.rtio*, %struct.rtio_sqe*, i32)*, void (%struct.rtio*, %struct.rtio_sqe*, i32)** %7, align 4, !dbg !4200
  tail call void %8(%struct.rtio* noundef %0, %struct.rtio_sqe* noundef %1, i32 noundef 0) #25, !dbg !4201
  ret void, !dbg !4202
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) local_unnamed_addr #1 !dbg !4203 {
  %6 = alloca [16 x i8], align 1
  %7 = alloca [16 x i8], align 1
  %8 = extractvalue [1 x i32] %4, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4218, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i8* %0, metadata !4214, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i32 %1, metadata !4215, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i32 %2, metadata !4216, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i8* %3, metadata !4217, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i8* %0, metadata !4219, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i8* %0, metadata !4220, metadata !DIExpression()), !dbg !4281
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !4282
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #23, !dbg !4282
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !4223, metadata !DIExpression()), !dbg !4283
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !4284
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #23, !dbg !4284
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !4225, metadata !DIExpression()), !dbg !4285
  call void @llvm.dbg.value(metadata i32 0, metadata !4226, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i32 0, metadata !4227, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i32 0, metadata !4228, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i32 -1, metadata !4229, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i8 0, metadata !4232, metadata !DIExpression()), !dbg !4281
  %12 = and i32 %2, 4, !dbg !4286
  %13 = icmp eq i32 %12, 0, !dbg !4287
  call void @llvm.dbg.value(metadata i1 %13, metadata !4233, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4281
  %14 = lshr i32 %2, 3, !dbg !4288
  %15 = and i32 %14, 7, !dbg !4288
  %16 = add nuw nsw i32 %15, 1, !dbg !4289
  call void @llvm.dbg.value(metadata i32 %16, metadata !4234, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i8 0, metadata !4235, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i8* %0, metadata !4236, metadata !DIExpression()), !dbg !4281
  %17 = ptrtoint i8* %0 to i32, !dbg !4290
  %18 = and i32 %17, 3, !dbg !4292
  %19 = icmp eq i32 %18, 0, !dbg !4292
  br i1 %19, label %20, label %316, !dbg !4293

20:                                               ; preds = %5
  %21 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4294
  call void @llvm.dbg.value(metadata i8* %21, metadata !4220, metadata !DIExpression()), !dbg !4281
  %22 = icmp eq i8* %0, null, !dbg !4295
  %23 = and i32 %1, 7, !dbg !4297
  %24 = sub nuw nsw i32 8, %23, !dbg !4297
  %25 = select i1 %22, i32 %23, i32 0, !dbg !4297
  %26 = getelementptr i8, i8* %21, i32 %25, !dbg !4297
  %27 = select i1 %22, i32 %24, i32 %1, !dbg !4297
  call void @llvm.dbg.value(metadata i32 %27, metadata !4215, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i8* %26, metadata !4220, metadata !DIExpression()), !dbg !4281
  br i1 %22, label %33, label %28, !dbg !4298

28:                                               ; preds = %20
  %29 = ptrtoint i8* %26 to i32, !dbg !4300
  %30 = sub i32 4, %17, !dbg !4300
  %31 = add i32 %30, %29, !dbg !4301
  %32 = icmp ugt i32 %31, %27, !dbg !4302
  br i1 %32, label %316, label %33, !dbg !4303

33:                                               ; preds = %28, %20
  %34 = getelementptr inbounds i8, i8* %3, i32 -1, !dbg !4304
  call void @llvm.dbg.value(metadata i8* %34, metadata !4217, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i8* %3, metadata !4231, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i32 4, metadata !4222, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i32 4, metadata !4221, metadata !DIExpression()), !dbg !4281
  %35 = and i32 %2, 2
  %36 = icmp ne i32 %35, 0
  %37 = sub i32 8, %17
  br label %130, !dbg !4305

38:                                               ; preds = %63, %216
  %39 = phi i8 [ %221, %216 ], [ %64, %63 ]
  %40 = phi i8* [ %220, %216 ], [ %65, %63 ]
  %41 = phi i8* [ %218, %216 ], [ %66, %63 ]
  %42 = phi i8* [ %40, %216 ], [ %67, %63 ]
  %43 = phi i8* [ %219, %216 ], [ %68, %63 ]
  %44 = phi i32 [ %113, %216 ], [ %69, %63 ]
  %45 = phi i32 [ %112, %216 ], [ %70, %63 ]
  %46 = phi i1 [ %110, %216 ], [ %71, %63 ]
  call void @llvm.dbg.value(metadata i8* %41, metadata !4218, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i8* %42, metadata !4217, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i8* %43, metadata !4220, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i32 %44, metadata !4221, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i32 %45, metadata !4222, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i32 %72, metadata !4229, metadata !DIExpression()), !dbg !4281
  br i1 %46, label %73, label %47, !dbg !4306

47:                                               ; preds = %38
  %48 = icmp eq i8 %39, 37, !dbg !4307
  %49 = zext i1 %48 to i32, !dbg !4311
  %50 = add nsw i32 %72, %49, !dbg !4311
  %51 = select i1 %48, i32 4, i32 %45, !dbg !4311
  %52 = select i1 %48, i32 4, i32 %44, !dbg !4311
  call void @llvm.dbg.value(metadata i32 %52, metadata !4221, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i32 %51, metadata !4222, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i8 poison, metadata !4232, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i32 %50, metadata !4229, metadata !DIExpression()), !dbg !4281
  br label %53, !dbg !4312

53:                                               ; preds = %73, %47, %74, %76, %77, %78, %106, %104
  %54 = phi i32 [ %72, %106 ], [ %72, %104 ], [ %72, %78 ], [ %72, %77 ], [ %72, %76 ], [ %75, %74 ], [ %50, %47 ], [ %72, %73 ]
  %55 = phi i1 [ false, %106 ], [ false, %104 ], [ true, %78 ], [ true, %77 ], [ true, %76 ], [ false, %74 ], [ %48, %47 ], [ true, %73 ]
  %56 = phi i32 [ %45, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %45, %76 ], [ %45, %74 ], [ %51, %47 ], [ 8, %73 ]
  %57 = phi i32 [ %44, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %44, %76 ], [ %44, %74 ], [ %52, %47 ], [ 8, %73 ]
  %58 = phi i8* [ %43, %106 ], [ %105, %104 ], [ %43, %78 ], [ %43, %77 ], [ %43, %76 ], [ %43, %74 ], [ %43, %47 ], [ %43, %73 ]
  %59 = phi i8* [ %41, %106 ], [ %93, %104 ], [ %41, %78 ], [ %41, %77 ], [ %41, %76 ], [ %41, %74 ], [ %41, %47 ], [ %41, %73 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4218, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i8* %40, metadata !4217, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i8* %58, metadata !4220, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i32 %57, metadata !4221, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i32 %56, metadata !4222, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i8 poison, metadata !4232, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i32 %54, metadata !4229, metadata !DIExpression()), !dbg !4281
  %60 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !4313
  call void @llvm.dbg.value(metadata i8* %60, metadata !4217, metadata !DIExpression()), !dbg !4281
  %61 = load i8, i8* %60, align 1, !dbg !4315
  %62 = icmp eq i8 %61, 0, !dbg !4316
  br i1 %62, label %223, label %63, !dbg !4317, !llvm.loop !4318

63:                                               ; preds = %190, %53
  %64 = phi i8 [ %61, %53 ], [ %197, %190 ]
  %65 = phi i8* [ %60, %53 ], [ %196, %190 ]
  %66 = phi i8* [ %59, %53 ], [ %143, %190 ]
  %67 = phi i8* [ %40, %53 ], [ %141, %190 ]
  %68 = phi i8* [ %58, %53 ], [ %195, %190 ]
  %69 = phi i32 [ %57, %53 ], [ %139, %190 ]
  %70 = phi i32 [ %56, %53 ], [ %138, %190 ]
  %71 = phi i1 [ %55, %53 ], [ %134, %190 ]
  %72 = phi i32 [ %54, %53 ], [ %132, %190 ]
  br label %38, !dbg !4306

73:                                               ; preds = %38
  switch i8 %39, label %106 [
    i8 37, label %74
    i8 35, label %76
    i8 45, label %76
    i8 43, label %76
    i8 32, label %76
    i8 48, label %76
    i8 49, label %76
    i8 50, label %76
    i8 51, label %76
    i8 52, label %76
    i8 53, label %76
    i8 54, label %76
    i8 55, label %76
    i8 56, label %76
    i8 57, label %76
    i8 46, label %76
    i8 104, label %76
    i8 108, label %76
    i8 76, label %76
    i8 42, label %108
    i8 106, label %53
    i8 122, label %77
    i8 116, label %78
    i8 99, label %79
    i8 100, label %79
    i8 105, label %79
    i8 111, label %79
    i8 117, label %79
    i8 120, label %79
    i8 88, label %79
    i8 115, label %109
    i8 112, label %107
    i8 110, label %107
    i8 97, label %87
    i8 65, label %87
    i8 101, label %87
    i8 69, label %87
    i8 102, label %87
    i8 70, label %87
    i8 103, label %87
    i8 71, label %87
  ], !dbg !4321

74:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !4232, metadata !DIExpression()), !dbg !4281
  %75 = add nsw i32 %72, -1, !dbg !4322
  call void @llvm.dbg.value(metadata i32 %75, metadata !4229, metadata !DIExpression()), !dbg !4281
  br label %53, !dbg !4323

76:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73
  br label %53, !dbg !4324

77:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !4222, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i32 4, metadata !4221, metadata !DIExpression()), !dbg !4281
  br label %53, !dbg !4325

78:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !4222, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i32 4, metadata !4221, metadata !DIExpression()), !dbg !4281
  br label %53, !dbg !4326

79:                                               ; preds = %73, %73, %73, %73, %73, %73, %73
  %80 = load i8, i8* %42, align 1, !dbg !4327
  %81 = icmp eq i8 %80, 108, !dbg !4329
  br i1 %81, label %82, label %109, !dbg !4330

82:                                               ; preds = %79
  %83 = getelementptr inbounds i8, i8* %42, i32 -1, !dbg !4331
  %84 = load i8, i8* %83, align 1, !dbg !4331
  %85 = icmp eq i8 %84, 108, !dbg !4334
  %86 = select i1 %85, i32 8, i32 4
  br label %109

87:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73
  %88 = ptrtoint i8* %41 to i32, !dbg !4335
  %89 = add i32 %88, 7, !dbg !4335
  %90 = and i32 %89, -8, !dbg !4335
  %91 = inttoptr i32 %90 to i8*, !dbg !4335
  %92 = inttoptr i32 %90 to double*, !dbg !4335
  %93 = getelementptr inbounds i8, i8* %91, i32 8, !dbg !4335
  %94 = load double, double* %92, align 8, !dbg !4335
  call void @llvm.dbg.value(metadata i8* %93, metadata !4218, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i32 8, metadata !4221, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i32 8, metadata !4222, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata double %94, metadata !4249, metadata !DIExpression()), !dbg !4337
  %95 = ptrtoint i8* %43 to i32, !dbg !4338
  %96 = add i32 %95, 7, !dbg !4338
  %97 = and i32 %96, -8, !dbg !4338
  %98 = inttoptr i32 %97 to i8*, !dbg !4339
  call void @llvm.dbg.value(metadata i8* %98, metadata !4220, metadata !DIExpression()), !dbg !4281
  br i1 %22, label %104, label %99, !dbg !4340

99:                                               ; preds = %87
  %100 = add i32 %37, %97, !dbg !4341
  %101 = icmp ugt i32 %100, %194, !dbg !4345
  br i1 %101, label %316, label %102, !dbg !4346

102:                                              ; preds = %99
  %103 = inttoptr i32 %97 to double*, !dbg !4347
  store double %94, double* %103, align 8, !dbg !4347
  br label %104

104:                                              ; preds = %102, %87
  %105 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4350
  call void @llvm.dbg.value(metadata i8* %105, metadata !4220, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i8 poison, metadata !4232, metadata !DIExpression()), !dbg !4281
  br label %53

106:                                              ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !4232, metadata !DIExpression()), !dbg !4281
  br label %53, !dbg !4351

107:                                              ; preds = %73, %73
  br label %109, !dbg !4352

108:                                              ; preds = %73
  br label %109, !dbg !4352

109:                                              ; preds = %73, %108, %107, %79, %82
  %110 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ true, %108 ], [ false, %73 ]
  %111 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ false, %108 ], [ true, %73 ]
  %112 = phi i32 [ %86, %82 ], [ %45, %79 ], [ 4, %107 ], [ %45, %108 ], [ 4, %73 ], !dbg !4281
  %113 = phi i32 [ %86, %82 ], [ %44, %79 ], [ 4, %107 ], [ %44, %108 ], [ 4, %73 ], !dbg !4281
  call void @llvm.dbg.value(metadata i32 %113, metadata !4221, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i32 %112, metadata !4222, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i8 poison, metadata !4235, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i8 poison, metadata !4232, metadata !DIExpression()), !dbg !4281
  %114 = ptrtoint i8* %43 to i32, !dbg !4352
  %115 = add i32 %114, -1, !dbg !4352
  %116 = add i32 %115, %112, !dbg !4352
  %117 = sub i32 0, %112, !dbg !4352
  %118 = and i32 %116, %117, !dbg !4352
  %119 = inttoptr i32 %118 to i8*, !dbg !4353
  call void @llvm.dbg.value(metadata i8* %119, metadata !4220, metadata !DIExpression()), !dbg !4281
  br i1 %22, label %124, label %120, !dbg !4354

120:                                              ; preds = %109
  %121 = sub i32 %113, %17, !dbg !4356
  %122 = add i32 %121, %118, !dbg !4357
  %123 = icmp ugt i32 %122, %194, !dbg !4358
  br i1 %123, label %316, label %124, !dbg !4359

124:                                              ; preds = %120, %109
  br i1 %111, label %125, label %199, !dbg !4360

125:                                              ; preds = %124
  %126 = inttoptr i32 %118 to i8*, !dbg !4353
  %127 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !4361
  call void @llvm.dbg.value(metadata i8* %127, metadata !4218, metadata !DIExpression()), !dbg !4281
  %128 = bitcast i8* %41 to i8**, !dbg !4361
  %129 = load i8*, i8** %128, align 4, !dbg !4361
  call void @llvm.dbg.value(metadata i8* %129, metadata !4231, metadata !DIExpression()), !dbg !4281
  br label %130, !dbg !4362

130:                                              ; preds = %125, %33
  %131 = phi i32 [ 0, %33 ], [ %191, %125 ], !dbg !4363
  %132 = phi i32 [ -1, %33 ], [ %72, %125 ], !dbg !4364
  %133 = phi i8* [ %3, %33 ], [ %129, %125 ], !dbg !4281
  %134 = phi i1 [ false, %33 ], [ %110, %125 ]
  %135 = phi i32 [ 0, %33 ], [ %192, %125 ], !dbg !4365
  %136 = phi i32 [ %16, %33 ], [ %147, %125 ], !dbg !4281
  %137 = phi i32 [ 0, %33 ], [ %193, %125 ], !dbg !4366
  %138 = phi i32 [ 4, %33 ], [ %112, %125 ], !dbg !4281
  %139 = phi i32 [ 4, %33 ], [ %113, %125 ], !dbg !4281
  %140 = phi i8* [ %26, %33 ], [ %126, %125 ], !dbg !4281
  %141 = phi i8* [ %34, %33 ], [ %40, %125 ], !dbg !4281
  %142 = phi i32 [ %27, %33 ], [ %194, %125 ], !dbg !4367
  %143 = phi i8* [ %9, %33 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i8* %143, metadata !4218, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i32 %142, metadata !4215, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i8* %141, metadata !4217, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i8* %140, metadata !4220, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i32 %139, metadata !4221, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i32 %138, metadata !4222, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i32 %137, metadata !4226, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i32 %136, metadata !4234, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i32 %135, metadata !4227, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i8 poison, metadata !4232, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i8* %133, metadata !4231, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i32 %132, metadata !4229, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i32 %131, metadata !4228, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.label(metadata !4280), !dbg !4369
  br i1 %22, label %146, label %144, !dbg !4370

144:                                              ; preds = %130
  %145 = bitcast i8* %140 to i8**, !dbg !4371
  store i8* %133, i8** %145, align 4, !dbg !4374
  br label %146, !dbg !4375

146:                                              ; preds = %144, %130
  %147 = add nsw i32 %136, -1, !dbg !4376
  call void @llvm.dbg.value(metadata i32 %147, metadata !4234, metadata !DIExpression()), !dbg !4281
  %148 = icmp sgt i32 %136, 0, !dbg !4377
  br i1 %148, label %152, label %149, !dbg !4378

149:                                              ; preds = %146
  %150 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %133) #24, !dbg !4379
  %151 = zext i1 %150 to i32, !dbg !4379
  br label %152, !dbg !4378

152:                                              ; preds = %146, %149
  %153 = phi i32 [ %151, %149 ], [ 1, %146 ], !dbg !4378
  %154 = icmp eq i32 %153, 0, !dbg !4378
  call void @llvm.dbg.value(metadata i1 %154, metadata !4258, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4380
  call void @llvm.dbg.value(metadata i1 %36, metadata !4261, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4380
  %155 = or i1 %36, %154, !dbg !4381
  br i1 %155, label %156, label %190, !dbg !4381

156:                                              ; preds = %152
  %157 = ptrtoint i8* %140 to i32, !dbg !4382
  %158 = sub i32 %157, %17, !dbg !4382
  %159 = lshr i32 %158, 2, !dbg !4383
  call void @llvm.dbg.value(metadata i32 %159, metadata !4262, metadata !DIExpression()), !dbg !4384
  %160 = icmp ugt i32 %158, 511
  %161 = select i1 %36, i1 %160, i1 false, !dbg !4385
  %162 = icmp ugt i32 %137, 15
  %163 = select i1 %161, i1 true, i1 %162, !dbg !4385
  br i1 %163, label %316, label %164, !dbg !4385

164:                                              ; preds = %156
  br i1 %22, label %175, label %165, !dbg !4387

165:                                              ; preds = %164
  %166 = trunc i32 %159 to i8, !dbg !4388
  %167 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %137, !dbg !4391
  store i8 %166, i8* %167, align 1, !dbg !4392
  %168 = trunc i32 %132 to i8, !dbg !4393
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %137, !dbg !4394
  store i8 %168, i8* %169, align 1, !dbg !4395
  br i1 %154, label %173, label %170, !dbg !4396

170:                                              ; preds = %165
  %171 = or i8 %166, -128, !dbg !4397
  store i8 %171, i8* %167, align 1, !dbg !4397
  %172 = add i32 %131, 1, !dbg !4400
  call void @llvm.dbg.value(metadata i32 %172, metadata !4228, metadata !DIExpression()), !dbg !4281
  br label %185, !dbg !4401

173:                                              ; preds = %165
  %174 = add i32 %135, 1, !dbg !4402
  call void @llvm.dbg.value(metadata i32 %174, metadata !4227, metadata !DIExpression()), !dbg !4281
  br label %185

175:                                              ; preds = %164
  br i1 %154, label %178, label %176, !dbg !4404

176:                                              ; preds = %175
  %177 = add i32 %142, 1, !dbg !4405
  call void @llvm.dbg.value(metadata i32 %177, metadata !4215, metadata !DIExpression()), !dbg !4281
  br label %185, !dbg !4408

178:                                              ; preds = %175
  br i1 %13, label %181, label %179, !dbg !4409

179:                                              ; preds = %178
  %180 = add i32 %142, 2, !dbg !4410
  call void @llvm.dbg.value(metadata i32 %180, metadata !4215, metadata !DIExpression()), !dbg !4281
  br label %185, !dbg !4413

181:                                              ; preds = %178
  %182 = tail call i32 @strlen(i8* noundef %133) #25, !dbg !4414
  %183 = add i32 %142, 2, !dbg !4416
  %184 = add i32 %183, %182, !dbg !4417
  call void @llvm.dbg.value(metadata i32 %184, metadata !4215, metadata !DIExpression()), !dbg !4281
  br label %185

185:                                              ; preds = %173, %170, %179, %181, %176
  %186 = phi i32 [ %172, %170 ], [ %131, %173 ], [ %131, %176 ], [ %131, %179 ], [ %131, %181 ], !dbg !4281
  %187 = phi i32 [ %135, %170 ], [ %174, %173 ], [ %135, %176 ], [ %135, %179 ], [ %135, %181 ], !dbg !4281
  %188 = phi i32 [ %142, %170 ], [ %142, %173 ], [ %177, %176 ], [ %180, %179 ], [ %184, %181 ], !dbg !4281
  call void @llvm.dbg.value(metadata i32 %188, metadata !4215, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i32 %187, metadata !4227, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i32 %186, metadata !4228, metadata !DIExpression()), !dbg !4281
  %189 = add nuw nsw i32 %137, 1, !dbg !4418
  call void @llvm.dbg.value(metadata i32 undef, metadata !4215, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i32 undef, metadata !4226, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i32 undef, metadata !4227, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i32 undef, metadata !4228, metadata !DIExpression()), !dbg !4281
  br label %190

190:                                              ; preds = %185, %152
  %191 = phi i32 [ %131, %152 ], [ %186, %185 ], !dbg !4363
  %192 = phi i32 [ %135, %152 ], [ %187, %185 ], !dbg !4365
  %193 = phi i32 [ %137, %152 ], [ %189, %185 ], !dbg !4366
  %194 = phi i32 [ %142, %152 ], [ %188, %185 ], !dbg !4367
  call void @llvm.dbg.value(metadata i32 %194, metadata !4215, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i32 %193, metadata !4226, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i32 %192, metadata !4227, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i32 %191, metadata !4228, metadata !DIExpression()), !dbg !4281
  %195 = getelementptr inbounds i8, i8* %140, i32 4, !dbg !4419
  call void @llvm.dbg.value(metadata i8* %195, metadata !4220, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i8* %143, metadata !4218, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i8* %141, metadata !4217, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i32 %139, metadata !4221, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i32 %138, metadata !4222, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i8 poison, metadata !4235, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i8 poison, metadata !4232, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i32 %132, metadata !4229, metadata !DIExpression()), !dbg !4281
  %196 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !4313
  call void @llvm.dbg.value(metadata i8* %196, metadata !4217, metadata !DIExpression()), !dbg !4281
  %197 = load i8, i8* %196, align 1, !dbg !4315
  %198 = icmp eq i8 %197, 0, !dbg !4316
  br i1 %198, label %223, label %63, !dbg !4317

199:                                              ; preds = %124
  switch i32 %113, label %316 [
    i32 4, label %200
    i32 8, label %206
  ], !dbg !4420

200:                                              ; preds = %199
  %201 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !4421
  call void @llvm.dbg.value(metadata i8* %201, metadata !4218, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i32 undef, metadata !4265, metadata !DIExpression()), !dbg !4422
  br i1 %22, label %216, label %202, !dbg !4423

202:                                              ; preds = %200
  %203 = bitcast i8* %41 to i32*, !dbg !4421
  %204 = load i32, i32* %203, align 4, !dbg !4421
  call void @llvm.dbg.value(metadata i32 %204, metadata !4265, metadata !DIExpression()), !dbg !4422
  %205 = inttoptr i32 %118 to i32*, !dbg !4424
  store i32 %204, i32* %205, align 4, !dbg !4427
  br label %216, !dbg !4428

206:                                              ; preds = %199
  %207 = ptrtoint i8* %41 to i32, !dbg !4429
  %208 = add i32 %207, 7, !dbg !4429
  %209 = and i32 %208, -8, !dbg !4429
  %210 = inttoptr i32 %209 to i8*, !dbg !4429
  %211 = getelementptr inbounds i8, i8* %210, i32 8, !dbg !4429
  call void @llvm.dbg.value(metadata i8* %211, metadata !4218, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i64 undef, metadata !4271, metadata !DIExpression()), !dbg !4430
  br i1 %22, label %216, label %212, !dbg !4431

212:                                              ; preds = %206
  %213 = inttoptr i32 %209 to i64*, !dbg !4429
  %214 = load i64, i64* %213, align 8, !dbg !4429
  call void @llvm.dbg.value(metadata i64 %214, metadata !4271, metadata !DIExpression()), !dbg !4430
  %215 = inttoptr i32 %118 to i64*, !dbg !4432
  store i64 %214, i64* %215, align 8, !dbg !4437
  br label %216, !dbg !4438

216:                                              ; preds = %206, %212, %200, %202
  %217 = phi i32 [ 4, %202 ], [ 4, %200 ], [ 8, %212 ], [ 8, %206 ]
  %218 = phi i8* [ %201, %202 ], [ %201, %200 ], [ %211, %212 ], [ %211, %206 ], !dbg !4439
  %219 = getelementptr inbounds i8, i8* %119, i32 %217, !dbg !4439
  call void @llvm.dbg.value(metadata i8* %218, metadata !4218, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i8* %40, metadata !4217, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i8* %219, metadata !4220, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i32 %113, metadata !4221, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i32 %112, metadata !4222, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i8 poison, metadata !4235, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i8 poison, metadata !4232, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i32 %72, metadata !4229, metadata !DIExpression()), !dbg !4281
  %220 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !4313
  call void @llvm.dbg.value(metadata i8* %220, metadata !4217, metadata !DIExpression()), !dbg !4281
  %221 = load i8, i8* %220, align 1, !dbg !4315
  %222 = icmp eq i8 %221, 0, !dbg !4316
  br i1 %222, label %223, label %38, !dbg !4317

223:                                              ; preds = %190, %216, %53
  %224 = phi i8* [ %219, %216 ], [ %58, %53 ], [ %195, %190 ], !dbg !4440
  %225 = ptrtoint i8* %224 to i32, !dbg !4441
  %226 = sub i32 %225, %17, !dbg !4441
  %227 = lshr i32 %226, 2, !dbg !4443
  %228 = icmp ugt i32 %226, 1023, !dbg !4444
  br i1 %228, label %316, label %229, !dbg !4445

229:                                              ; preds = %223
  br i1 %22, label %230, label %233, !dbg !4446

230:                                              ; preds = %229
  %231 = add i32 %194, -8, !dbg !4447
  %232 = add i32 %231, %226, !dbg !4450
  br label %316, !dbg !4451

233:                                              ; preds = %229
  %234 = trunc i32 %227 to i8, !dbg !4452
  store i8 %234, i8* %0, align 1, !dbg !4453
  %235 = trunc i32 %192 to i8, !dbg !4454
  %236 = select i1 %13, i8 %235, i8 0
  %237 = select i1 %13, i8 0, i8 %235
  %238 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4456
  store i8 %236, i8* %238, align 1, !dbg !4458
  %239 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !4459
  store i8 %237, i8* %239, align 1, !dbg !4460
  %240 = trunc i32 %191 to i8, !dbg !4461
  %241 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4462
  store i8 %240, i8* %241, align 1, !dbg !4463
  %242 = icmp eq i32 %191, 0, !dbg !4464
  %243 = xor i1 %242, true, !dbg !4465
  %244 = icmp ne i32 %193, 0
  %245 = select i1 %243, i1 %244, i1 false, !dbg !4465
  call void @llvm.dbg.value(metadata i8* %224, metadata !4220, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i32 0, metadata !4230, metadata !DIExpression()), !dbg !4281
  br i1 %245, label %246, label %265, !dbg !4465

246:                                              ; preds = %233
  %247 = sub i32 1, %17
  br label %248, !dbg !4466

248:                                              ; preds = %246, %261
  %249 = phi i8* [ %224, %246 ], [ %262, %261 ]
  %250 = phi i32 [ 0, %246 ], [ %263, %261 ]
  call void @llvm.dbg.value(metadata i8* %249, metadata !4220, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i32 %250, metadata !4230, metadata !DIExpression()), !dbg !4281
  %251 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %250, !dbg !4467
  %252 = load i8, i8* %251, align 1, !dbg !4467
  %253 = icmp sgt i8 %252, -1, !dbg !4469
  br i1 %253, label %261, label %254, !dbg !4470

254:                                              ; preds = %248
  call void @llvm.dbg.value(metadata i8 %252, metadata !4274, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 127, DW_OP_and, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4471
  %255 = ptrtoint i8* %249 to i32, !dbg !4472
  %256 = add i32 %247, %255, !dbg !4474
  %257 = icmp ugt i32 %256, %194, !dbg !4475
  br i1 %257, label %316, label %258, !dbg !4476

258:                                              ; preds = %254
  %259 = and i8 %252, 127, !dbg !4477
  call void @llvm.dbg.value(metadata i8 %259, metadata !4274, metadata !DIExpression()), !dbg !4471
  %260 = getelementptr inbounds i8, i8* %249, i32 1, !dbg !4478
  call void @llvm.dbg.value(metadata i8* %260, metadata !4220, metadata !DIExpression()), !dbg !4281
  store i8 %259, i8* %249, align 1, !dbg !4479
  br label %261

261:                                              ; preds = %258, %248
  %262 = phi i8* [ %260, %258 ], [ %249, %248 ], !dbg !4419
  call void @llvm.dbg.value(metadata i8* %262, metadata !4220, metadata !DIExpression()), !dbg !4281
  %263 = add nuw i32 %250, 1, !dbg !4480
  call void @llvm.dbg.value(metadata i32 %263, metadata !4230, metadata !DIExpression()), !dbg !4281
  %264 = icmp eq i32 %263, %193, !dbg !4481
  br i1 %264, label %265, label %248, !dbg !4466, !llvm.loop !4482

265:                                              ; preds = %261, %233
  %266 = phi i8* [ %224, %233 ], [ %262, %261 ], !dbg !4419
  call void @llvm.dbg.value(metadata i8* %266, metadata !4220, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i32 0, metadata !4230, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i8* %133, metadata !4231, metadata !DIExpression()), !dbg !4281
  %267 = icmp eq i32 %193, 0, !dbg !4484
  br i1 %267, label %312, label %268, !dbg !4487

268:                                              ; preds = %265
  %269 = sub i32 1, %17
  br label %270, !dbg !4487

270:                                              ; preds = %268, %307
  %271 = phi i8* [ %266, %268 ], [ %309, %307 ]
  %272 = phi i8* [ %133, %268 ], [ %308, %307 ]
  %273 = phi i32 [ 0, %268 ], [ %310, %307 ]
  call void @llvm.dbg.value(metadata i8* %271, metadata !4220, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i8* %272, metadata !4231, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i32 %273, metadata !4230, metadata !DIExpression()), !dbg !4281
  br i1 %242, label %278, label %274, !dbg !4488

274:                                              ; preds = %270
  %275 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !4491
  %276 = load i8, i8* %275, align 1, !dbg !4491
  %277 = icmp sgt i8 %276, -1, !dbg !4492
  br i1 %277, label %278, label %307, !dbg !4493

278:                                              ; preds = %274, %270
  br i1 %13, label %283, label %279, !dbg !4494

279:                                              ; preds = %278
  call void @llvm.dbg.value(metadata i32 0, metadata !4221, metadata !DIExpression()), !dbg !4281
  %280 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %273, !dbg !4495
  %281 = load i8, i8* %280, align 1, !dbg !4495
  %282 = getelementptr inbounds i8, i8* %271, i32 1, !dbg !4498
  call void @llvm.dbg.value(metadata i8* %282, metadata !4220, metadata !DIExpression()), !dbg !4281
  store i8 %281, i8* %271, align 1, !dbg !4499
  br label %293, !dbg !4500

283:                                              ; preds = %278
  %284 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !4501
  %285 = load i8, i8* %284, align 1, !dbg !4501
  %286 = zext i8 %285 to i32, !dbg !4501
  %287 = shl nuw nsw i32 %286, 2, !dbg !4503
  %288 = getelementptr inbounds i8, i8* %0, i32 %287, !dbg !4504
  %289 = bitcast i8* %288 to i8**, !dbg !4505
  %290 = load i8*, i8** %289, align 4, !dbg !4505
  call void @llvm.dbg.value(metadata i8* %290, metadata !4231, metadata !DIExpression()), !dbg !4281
  store i8* null, i8** %289, align 4, !dbg !4506
  %291 = tail call i32 @strlen(i8* noundef %290) #25, !dbg !4507
  %292 = add i32 %291, 1, !dbg !4508
  call void @llvm.dbg.value(metadata i32 %292, metadata !4221, metadata !DIExpression()), !dbg !4281
  br label %293

293:                                              ; preds = %283, %279
  %294 = phi i8* [ %272, %279 ], [ %290, %283 ], !dbg !4281
  %295 = phi i32 [ 0, %279 ], [ %292, %283 ], !dbg !4509
  %296 = phi i8* [ %282, %279 ], [ %271, %283 ], !dbg !4281
  call void @llvm.dbg.value(metadata i8* %296, metadata !4220, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i32 %295, metadata !4221, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i8* %294, metadata !4231, metadata !DIExpression()), !dbg !4281
  %297 = ptrtoint i8* %296 to i32, !dbg !4510
  %298 = add i32 %269, %295, !dbg !4512
  %299 = add i32 %298, %297, !dbg !4513
  %300 = icmp ugt i32 %299, %194, !dbg !4514
  br i1 %300, label %316, label %301, !dbg !4515

301:                                              ; preds = %293
  %302 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !4516
  %303 = load i8, i8* %302, align 1, !dbg !4516
  %304 = getelementptr inbounds i8, i8* %296, i32 1, !dbg !4517
  call void @llvm.dbg.value(metadata i8* %304, metadata !4220, metadata !DIExpression()), !dbg !4281
  store i8 %303, i8* %296, align 1, !dbg !4518
  %305 = tail call i8* @memcpy(i8* noundef nonnull %304, i8* noundef %294, i32 noundef %295) #25, !dbg !4519
  %306 = getelementptr inbounds i8, i8* %304, i32 %295, !dbg !4520
  call void @llvm.dbg.value(metadata i8* %306, metadata !4220, metadata !DIExpression()), !dbg !4281
  br label %307, !dbg !4521

307:                                              ; preds = %274, %301
  %308 = phi i8* [ %272, %274 ], [ %294, %301 ], !dbg !4522
  %309 = phi i8* [ %271, %274 ], [ %306, %301 ], !dbg !4281
  call void @llvm.dbg.value(metadata i8* %309, metadata !4220, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i8* %308, metadata !4231, metadata !DIExpression()), !dbg !4281
  %310 = add nuw i32 %273, 1, !dbg !4523
  call void @llvm.dbg.value(metadata i32 %310, metadata !4230, metadata !DIExpression()), !dbg !4281
  %311 = icmp eq i32 %310, %193, !dbg !4484
  br i1 %311, label %312, label %270, !dbg !4487, !llvm.loop !4524

312:                                              ; preds = %307, %265
  %313 = phi i8* [ %266, %265 ], [ %309, %307 ], !dbg !4419
  %314 = ptrtoint i8* %313 to i32, !dbg !4526
  %315 = sub i32 %314, %17, !dbg !4526
  br label %316, !dbg !4527

316:                                              ; preds = %156, %199, %120, %99, %254, %293, %223, %28, %5, %312, %230
  %317 = phi i32 [ %232, %230 ], [ %315, %312 ], [ -14, %5 ], [ -28, %28 ], [ -22, %223 ], [ -28, %293 ], [ -28, %254 ], [ -28, %120 ], [ -22, %199 ], [ -28, %99 ], [ -22, %156 ], !dbg !4281
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #23, !dbg !4528
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #23, !dbg !4528
  ret i32 %317, !dbg !4528
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @ptr_in_rodata(i8* noundef readnone %0) unnamed_addr #4 !dbg !4529 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4533, metadata !DIExpression()), !dbg !4534
  %2 = tail call fastcc zeroext i1 @linker_is_in_rodata(i8* noundef %0) #24, !dbg !4535
  ret i1 %2, !dbg !4536
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @linker_is_in_rodata(i8* noundef readnone %0) unnamed_addr #4 !dbg !4537 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4542, metadata !DIExpression()), !dbg !4543
  %2 = icmp uge i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_start, i32 0, i32 0), !dbg !4544
  %3 = icmp ult i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_end, i32 0, i32 0), !dbg !4545
  %4 = and i1 %2, %3, !dbg !4545
  ret i1 %4, !dbg !4546
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, ...) local_unnamed_addr #1 !dbg !4547 {
  %5 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4551, metadata !DIExpression()), !dbg !4557
  call void @llvm.dbg.value(metadata i32 %1, metadata !4552, metadata !DIExpression()), !dbg !4557
  call void @llvm.dbg.value(metadata i32 %2, metadata !4553, metadata !DIExpression()), !dbg !4557
  call void @llvm.dbg.value(metadata i8* %3, metadata !4554, metadata !DIExpression()), !dbg !4557
  %6 = bitcast %struct.__va_list* %5 to i8*, !dbg !4558
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #23, !dbg !4558
  call void @llvm.dbg.declare(metadata %struct.__va_list* %5, metadata !4555, metadata !DIExpression()), !dbg !4559
  call void @llvm.va_start(i8* nonnull %6), !dbg !4560
  %7 = bitcast %struct.__va_list* %5 to i32*, !dbg !4561
  %8 = load i32, i32* %7, align 4, !dbg !4561
  %9 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !4561
  %10 = call i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %9) #24, !dbg !4561
  call void @llvm.dbg.value(metadata i32 %10, metadata !4556, metadata !DIExpression()), !dbg !4557
  call void @llvm.va_end(i8* nonnull %6), !dbg !4562
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #23, !dbg !4563
  ret i32 %10, !dbg !4564
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #8

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #8

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbpprintf_external(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #1 !dbg !4565 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4577, metadata !DIExpression()), !dbg !4596
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4578, metadata !DIExpression()), !dbg !4596
  call void @llvm.dbg.value(metadata i8* %2, metadata !4579, metadata !DIExpression()), !dbg !4596
  call void @llvm.dbg.value(metadata i8* %3, metadata !4580, metadata !DIExpression()), !dbg !4596
  call void @llvm.dbg.value(metadata i8* %3, metadata !4581, metadata !DIExpression()), !dbg !4596
  call void @llvm.dbg.value(metadata i8* %3, metadata !4582, metadata !DIExpression()), !dbg !4596
  %5 = icmp eq i8* %3, null, !dbg !4597
  br i1 %5, label %45, label %6, !dbg !4599

6:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 undef, metadata !4591, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4596
  %7 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !4600
  %8 = load i8, i8* %7, align 1, !dbg !4600
  %9 = zext i8 %8 to i32, !dbg !4601
  call void @llvm.dbg.value(metadata i32 %9, metadata !4592, metadata !DIExpression()), !dbg !4596
  call void @llvm.dbg.value(metadata i8 undef, metadata !4593, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4596
  call void @llvm.dbg.value(metadata i8 undef, metadata !4594, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4596
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 undef), metadata !4588, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4596
  call void @llvm.dbg.value(metadata i32 0, metadata !4590, metadata !DIExpression()), !dbg !4596
  %10 = icmp eq i8 %8, 0, !dbg !4602
  br i1 %10, label %39, label %11, !dbg !4605

11:                                               ; preds = %6
  %12 = load i8, i8* %3, align 1, !dbg !4606
  call void @llvm.dbg.value(metadata i8 %12, metadata !4591, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4596
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 %12), metadata !4588, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4596
  %13 = zext i8 %12 to i32, !dbg !4607
  call void @llvm.dbg.value(metadata i32 %13, metadata !4591, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4596
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %13), metadata !4588, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4596
  %14 = shl nuw nsw i32 %13, 2, !dbg !4608
  call void @llvm.dbg.value(metadata i32 %14, metadata !4591, metadata !DIExpression()), !dbg !4596
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %14), metadata !4588, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4596
  %15 = getelementptr inbounds i8, i8* %3, i32 %14, !dbg !4609
  call void @llvm.dbg.value(metadata !DIArgList(i8* %15, i8 undef, i8 undef), metadata !4588, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4596
  %16 = getelementptr inbounds i8, i8* %3, i32 2, !dbg !4610
  %17 = load i8, i8* %16, align 1, !dbg !4610
  call void @llvm.dbg.value(metadata i8 %17, metadata !4593, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4596
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 %17, i8 undef), metadata !4588, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4596
  %18 = zext i8 %17 to i32, !dbg !4611
  call void @llvm.dbg.value(metadata i32 %18, metadata !4593, metadata !DIExpression()), !dbg !4596
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i32 %18, i8 undef), metadata !4588, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4596
  %19 = getelementptr inbounds i8, i8* %15, i32 %18, !dbg !4612
  call void @llvm.dbg.value(metadata !DIArgList(i8* %19, i8 undef), metadata !4588, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4596
  %20 = getelementptr inbounds i8, i8* %3, i32 3, !dbg !4613
  %21 = load i8, i8* %20, align 1, !dbg !4613
  call void @llvm.dbg.value(metadata i8 %21, metadata !4594, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4596
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 %21, i8 undef, i8 undef), metadata !4588, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4596
  %22 = zext i8 %21 to i32, !dbg !4614
  call void @llvm.dbg.value(metadata i32 %22, metadata !4594, metadata !DIExpression()), !dbg !4596
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %22, i8 undef, i8 undef), metadata !4588, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4596
  %23 = shl nuw nsw i32 %22, 1, !dbg !4615
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %23, i8 undef, i8 undef), metadata !4588, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4596
  %24 = getelementptr inbounds i8, i8* %19, i32 %23, !dbg !4616
  call void @llvm.dbg.value(metadata i8* %24, metadata !4588, metadata !DIExpression()), !dbg !4596
  br label %25, !dbg !4605

25:                                               ; preds = %11, %25
  %26 = phi i8* [ %36, %25 ], [ %24, %11 ]
  %27 = phi i32 [ %37, %25 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8* %26, metadata !4588, metadata !DIExpression()), !dbg !4596
  call void @llvm.dbg.value(metadata i32 %27, metadata !4590, metadata !DIExpression()), !dbg !4596
  %28 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !4617
  call void @llvm.dbg.value(metadata i8* %28, metadata !4588, metadata !DIExpression()), !dbg !4596
  %29 = load i8, i8* %26, align 1, !dbg !4619
  %30 = zext i8 %29 to i32, !dbg !4619
  call void @llvm.dbg.value(metadata i32 %30, metadata !4595, metadata !DIExpression()), !dbg !4596
  %31 = shl nuw nsw i32 %30, 2, !dbg !4620
  %32 = getelementptr inbounds i8, i8* %3, i32 %31, !dbg !4621
  %33 = bitcast i8* %32 to i8**, !dbg !4622
  call void @llvm.dbg.value(metadata i8** %33, metadata !4589, metadata !DIExpression()), !dbg !4596
  store i8* %28, i8** %33, align 4, !dbg !4623
  %34 = tail call i32 @strlen(i8* noundef nonnull %28) #25, !dbg !4624
  %35 = add i32 %34, 1, !dbg !4625
  %36 = getelementptr inbounds i8, i8* %28, i32 %35, !dbg !4626
  call void @llvm.dbg.value(metadata i8* %36, metadata !4588, metadata !DIExpression()), !dbg !4596
  %37 = add nuw nsw i32 %27, 1, !dbg !4627
  call void @llvm.dbg.value(metadata i32 %37, metadata !4590, metadata !DIExpression()), !dbg !4596
  %38 = icmp eq i32 %37, %9, !dbg !4602
  br i1 %38, label %39, label %25, !dbg !4605, !llvm.loop !4628

39:                                               ; preds = %25, %6
  %40 = getelementptr inbounds i8, i8* %3, i32 8, !dbg !4630
  call void @llvm.dbg.value(metadata i8* %40, metadata !4581, metadata !DIExpression()), !dbg !4596
  %41 = getelementptr inbounds i8, i8* %3, i32 4, !dbg !4631
  %42 = bitcast i8* %41 to i8**, !dbg !4631
  %43 = load i8*, i8** %42, align 1, !dbg !4631
  %44 = tail call fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* noundef %1, i8* noundef %2, i8* noundef %43, i8* noundef nonnull %40) #24, !dbg !4632
  br label %45, !dbg !4633

45:                                               ; preds = %4, %39
  %46 = phi i32 [ %44, %39 ], [ -22, %4 ], !dbg !4596
  ret i32 %46, !dbg !4634
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3, i8* noundef %4) unnamed_addr #1 !dbg !4635 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4639, metadata !DIExpression()), !dbg !4649
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4640, metadata !DIExpression()), !dbg !4649
  call void @llvm.dbg.value(metadata i8* %2, metadata !4641, metadata !DIExpression()), !dbg !4649
  call void @llvm.dbg.value(metadata i8* %3, metadata !4642, metadata !DIExpression()), !dbg !4649
  call void @llvm.dbg.value(metadata i8* %4, metadata !4643, metadata !DIExpression()), !dbg !4649
  call void @llvm.dbg.value(metadata i8* %4, metadata !4644, metadata !DIExpression()), !dbg !4649
  %6 = ptrtoint i8* %4 to i32, !dbg !4650
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !4650
  %8 = tail call i32 %1(i32 (...)* noundef %0, i8* noundef %2, i8* noundef %3, [1 x i32] %7) #25, !dbg !4650
  ret i32 %8, !dbg !4651
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @is_ptr(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #9 !dbg !4652 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4656, metadata !DIExpression()), !dbg !4661
  call void @llvm.dbg.value(metadata i32 %1, metadata !4657, metadata !DIExpression()), !dbg !4661
  call void @llvm.dbg.value(metadata i8 0, metadata !4659, metadata !DIExpression()), !dbg !4661
  call void @llvm.dbg.value(metadata i32 0, metadata !4660, metadata !DIExpression()), !dbg !4661
  call void @llvm.dbg.value(metadata i8 poison, metadata !4659, metadata !DIExpression()), !dbg !4661
  call void @llvm.dbg.value(metadata i8* %0, metadata !4656, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4661
  %3 = load i8, i8* %0, align 1, !dbg !4662
  call void @llvm.dbg.value(metadata i8 %3, metadata !4658, metadata !DIExpression()), !dbg !4661
  %4 = icmp eq i8 %3, 0, !dbg !4663
  br i1 %4, label %29, label %5, !dbg !4664

5:                                                ; preds = %2, %22
  %6 = phi i8 [ %27, %22 ], [ %3, %2 ]
  %7 = phi i8* [ %10, %22 ], [ %0, %2 ]
  %8 = phi i32 [ %24, %22 ], [ 0, %2 ]
  %9 = phi i1 [ %26, %22 ], [ false, %2 ]
  %10 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !4665
  call void @llvm.dbg.value(metadata i32 %8, metadata !4660, metadata !DIExpression()), !dbg !4661
  br i1 %9, label %11, label %22, !dbg !4666

11:                                               ; preds = %5
  %12 = icmp eq i32 %8, %1, !dbg !4668
  br i1 %12, label %13, label %17, !dbg !4672

13:                                               ; preds = %11
  %14 = icmp eq i8 %6, 112, !dbg !4673
  br i1 %14, label %29, label %15, !dbg !4676

15:                                               ; preds = %13
  %16 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #24, !dbg !4677
  br i1 %16, label %29, label %22, !dbg !4679

17:                                               ; preds = %11
  %18 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #24, !dbg !4680
  %19 = xor i1 %18, true, !dbg !4682
  %20 = zext i1 %18 to i32, !dbg !4682
  %21 = add nsw i32 %8, %20, !dbg !4682
  br label %22, !dbg !4682

22:                                               ; preds = %17, %15, %5
  %23 = phi i1 [ true, %15 ], [ false, %5 ], [ %19, %17 ]
  %24 = phi i32 [ %1, %15 ], [ %8, %5 ], [ %21, %17 ], !dbg !4661
  call void @llvm.dbg.value(metadata i32 %24, metadata !4660, metadata !DIExpression()), !dbg !4661
  call void @llvm.dbg.value(metadata i8 poison, metadata !4659, metadata !DIExpression()), !dbg !4661
  %25 = icmp eq i8 %6, 37, !dbg !4683
  %26 = xor i1 %25, %23, !dbg !4685
  call void @llvm.dbg.value(metadata i8* %10, metadata !4656, metadata !DIExpression()), !dbg !4661
  call void @llvm.dbg.value(metadata i8* %10, metadata !4656, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4661
  %27 = load i8, i8* %10, align 1, !dbg !4662
  call void @llvm.dbg.value(metadata i8 %27, metadata !4658, metadata !DIExpression()), !dbg !4661
  %28 = icmp eq i8 %27, 0, !dbg !4663
  br i1 %28, label %29, label %5, !dbg !4664, !llvm.loop !4686

29:                                               ; preds = %13, %15, %22, %2
  %30 = phi i1 [ false, %2 ], [ false, %22 ], [ false, %15 ], [ true, %13 ], !dbg !4661
  ret i1 %30, !dbg !4688
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %0) unnamed_addr #4 !dbg !4689 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !4693, metadata !DIExpression()), !dbg !4694
  %2 = add i8 %0, -64, !dbg !4695
  %3 = icmp ult i8 %2, 59, !dbg !4695
  ret i1 %3, !dbg !4696
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package_convert(i8* noundef %0, i32 noundef %1, i32 (i8*, i32, i8*)* noundef %2, i8* noundef %3, i32 noundef %4, i16* noundef %5, i32 noundef %6) local_unnamed_addr #1 !dbg !4697 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  %10 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4705, metadata !DIExpression()), !dbg !4774
  call void @llvm.dbg.value(metadata i32 %1, metadata !4706, metadata !DIExpression()), !dbg !4774
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %2, metadata !4707, metadata !DIExpression()), !dbg !4774
  call void @llvm.dbg.value(metadata i8* %3, metadata !4708, metadata !DIExpression()), !dbg !4774
  call void @llvm.dbg.value(metadata i32 %4, metadata !4709, metadata !DIExpression()), !dbg !4774
  call void @llvm.dbg.value(metadata i16* %5, metadata !4710, metadata !DIExpression()), !dbg !4774
  call void @llvm.dbg.value(metadata i32 %6, metadata !4711, metadata !DIExpression()), !dbg !4774
  call void @llvm.dbg.value(metadata i8* %0, metadata !4712, metadata !DIExpression()), !dbg !4774
  %11 = bitcast i8* %0 to i32*, !dbg !4775
  call void @llvm.dbg.value(metadata i32* %11, metadata !4713, metadata !DIExpression()), !dbg !4774
  %12 = and i32 %4, 8, !dbg !4776
  %13 = icmp eq i32 %12, 0, !dbg !4777
  call void @llvm.dbg.value(metadata i1 %13, metadata !4717, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4774
  call void @llvm.dbg.value(metadata i8* %0, metadata !4720, metadata !DIExpression()), !dbg !4774
  %14 = icmp eq i32 %1, 0, !dbg !4778
  br i1 %14, label %15, label %17, !dbg !4779

15:                                               ; preds = %7
  %16 = tail call fastcc i32 @get_package_len(i8* noundef %0) #24, !dbg !4780
  br label %17, !dbg !4779

17:                                               ; preds = %7, %15
  %18 = phi i32 [ %16, %15 ], [ %1, %7 ], !dbg !4779
  call void @llvm.dbg.value(metadata i32 %18, metadata !4706, metadata !DIExpression()), !dbg !4774
  %19 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4781
  %20 = load i8, i8* %19, align 1, !dbg !4781
  %21 = zext i8 %20 to i32, !dbg !4782
  call void @llvm.dbg.value(metadata i32 %21, metadata !4715, metadata !DIExpression()), !dbg !4774
  %22 = icmp ne i8 %20, 0, !dbg !4783
  %23 = and i32 %4, 1, !dbg !4784
  %24 = icmp ne i32 %23, 0, !dbg !4784
  %25 = and i1 %24, %22, !dbg !4784
  call void @llvm.dbg.value(metadata i1 %25, metadata !4719, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4774
  %26 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !4785
  %27 = load i8, i8* %26, align 1, !dbg !4785
  %28 = zext i8 %27 to i32, !dbg !4786
  call void @llvm.dbg.value(metadata i32 %28, metadata !4716, metadata !DIExpression()), !dbg !4774
  %29 = icmp ne i8 %27, 0, !dbg !4787
  %30 = and i32 %4, 2, !dbg !4788
  %31 = icmp ne i32 %30, 0, !dbg !4788
  %32 = and i1 %31, %29, !dbg !4788
  call void @llvm.dbg.value(metadata i1 %32, metadata !4718, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4774
  %33 = select i1 %32, i1 true, i1 %25, !dbg !4789
  br i1 %33, label %38, label %34, !dbg !4789

34:                                               ; preds = %17
  %35 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4791
  br i1 %35, label %267, label %36, !dbg !4794

36:                                               ; preds = %34
  %37 = tail call i32 %2(i8* noundef nonnull %0, i32 noundef %18, i8* noundef %3) #25, !dbg !4795
  br label %267, !dbg !4797

38:                                               ; preds = %17
  %39 = load i8, i8* %0, align 1, !dbg !4798
  %40 = zext i8 %39 to i32, !dbg !4799
  %41 = shl nuw nsw i32 %40, 2, !dbg !4800
  call void @llvm.dbg.value(metadata i32 %41, metadata !4714, metadata !DIExpression()), !dbg !4774
  %42 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4801
  %43 = bitcast i8* %42 to i8**, !dbg !4802
  %44 = load i8*, i8** %43, align 4, !dbg !4802
  call void @llvm.dbg.value(metadata i8* %44, metadata !4723, metadata !DIExpression()), !dbg !4774
  %45 = getelementptr inbounds i8, i8* %0, i32 %41, !dbg !4803
  call void @llvm.dbg.value(metadata i8* %45, metadata !4724, metadata !DIExpression()), !dbg !4774
  call void @llvm.dbg.value(metadata i32 0, metadata !4725, metadata !DIExpression()), !dbg !4774
  %46 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4804
  br i1 %46, label %47, label %132, !dbg !4805

47:                                               ; preds = %38
  call void @llvm.dbg.value(metadata i32 %18, metadata !4722, metadata !DIExpression()), !dbg !4774
  br i1 %25, label %48, label %73, !dbg !4806

48:                                               ; preds = %47
  call void @llvm.dbg.value(metadata i32 %18, metadata !4722, metadata !DIExpression()), !dbg !4774
  call void @llvm.dbg.value(metadata i8* %45, metadata !4724, metadata !DIExpression()), !dbg !4774
  call void @llvm.dbg.value(metadata i32 0, metadata !4725, metadata !DIExpression()), !dbg !4774
  call void @llvm.dbg.value(metadata i32 0, metadata !4726, metadata !DIExpression()), !dbg !4807
  %49 = icmp ne i16* %5, null
  br label %50, !dbg !4808

50:                                               ; preds = %48, %67
  %51 = phi i32 [ %18, %48 ], [ %69, %67 ]
  %52 = phi i8* [ %45, %48 ], [ %70, %67 ]
  %53 = phi i32 [ 0, %48 ], [ %68, %67 ]
  %54 = phi i32 [ 0, %48 ], [ %71, %67 ]
  call void @llvm.dbg.value(metadata i32 %51, metadata !4722, metadata !DIExpression()), !dbg !4774
  call void @llvm.dbg.value(metadata i8* %52, metadata !4724, metadata !DIExpression()), !dbg !4774
  call void @llvm.dbg.value(metadata i32 %53, metadata !4725, metadata !DIExpression()), !dbg !4774
  call void @llvm.dbg.value(metadata i32 %54, metadata !4726, metadata !DIExpression()), !dbg !4807
  %55 = load i8, i8* %52, align 1, !dbg !4809
  %56 = zext i8 %55 to i32, !dbg !4810
  %57 = getelementptr inbounds i32, i32* %11, i32 %56, !dbg !4810
  %58 = bitcast i32* %57 to i8**, !dbg !4811
  %59 = load i8*, i8** %58, align 4, !dbg !4811
  call void @llvm.dbg.value(metadata i8* %59, metadata !4732, metadata !DIExpression()), !dbg !4812
  %60 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %59, i16 noundef zeroext 0) #24, !dbg !4813
  call void @llvm.dbg.value(metadata i32 %60, metadata !4735, metadata !DIExpression()), !dbg !4812
  %61 = icmp ult i32 %53, %6
  %62 = select i1 %49, i1 %61, i1 false, !dbg !4814
  br i1 %62, label %63, label %67, !dbg !4814

63:                                               ; preds = %50
  %64 = trunc i32 %60 to i16, !dbg !4816
  %65 = add nuw i32 %53, 1, !dbg !4818
  call void @llvm.dbg.value(metadata i32 %65, metadata !4725, metadata !DIExpression()), !dbg !4774
  %66 = getelementptr inbounds i16, i16* %5, i32 %53, !dbg !4819
  store i16 %64, i16* %66, align 2, !dbg !4820
  br label %67, !dbg !4821

67:                                               ; preds = %63, %50
  %68 = phi i32 [ %65, %63 ], [ %53, %50 ], !dbg !4774
  call void @llvm.dbg.value(metadata i32 %68, metadata !4725, metadata !DIExpression()), !dbg !4774
  %69 = add nsw i32 %60, %51, !dbg !4822
  call void @llvm.dbg.value(metadata i32 %69, metadata !4722, metadata !DIExpression()), !dbg !4774
  %70 = getelementptr inbounds i8, i8* %52, i32 1, !dbg !4823
  call void @llvm.dbg.value(metadata i8* %70, metadata !4724, metadata !DIExpression()), !dbg !4774
  %71 = add nuw nsw i32 %54, 1, !dbg !4824
  call void @llvm.dbg.value(metadata i32 %71, metadata !4726, metadata !DIExpression()), !dbg !4807
  %72 = icmp eq i32 %71, %21, !dbg !4825
  br i1 %72, label %79, label %50, !dbg !4808, !llvm.loop !4826

73:                                               ; preds = %47
  %74 = and i32 %4, 4
  %75 = icmp ne i32 %74, 0
  %76 = and i1 %75, %22, !dbg !4828
  %77 = select i1 %76, i32 %21, i32 0, !dbg !4828
  %78 = getelementptr i8, i8* %45, i32 %77, !dbg !4828
  br label %79, !dbg !4828

79:                                               ; preds = %67, %73
  %80 = phi i32 [ 0, %73 ], [ %68, %67 ], !dbg !4831
  %81 = phi i8* [ %78, %73 ], [ %70, %67 ], !dbg !4774
  %82 = phi i32 [ %18, %73 ], [ %69, %67 ], !dbg !4832
  call void @llvm.dbg.value(metadata i1 undef, metadata !4736, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4833
  call void @llvm.dbg.value(metadata i32 0, metadata !4737, metadata !DIExpression()), !dbg !4834
  call void @llvm.dbg.value(metadata i32 %82, metadata !4722, metadata !DIExpression()), !dbg !4774
  call void @llvm.dbg.value(metadata i8* %81, metadata !4724, metadata !DIExpression()), !dbg !4774
  call void @llvm.dbg.value(metadata i32 %80, metadata !4725, metadata !DIExpression()), !dbg !4774
  %83 = icmp eq i8 %27, 0, !dbg !4835
  br i1 %83, label %267, label %84, !dbg !4836

84:                                               ; preds = %79
  %85 = and i32 %4, 5, !dbg !4837
  %86 = icmp eq i32 %85, 0, !dbg !4838
  call void @llvm.dbg.value(metadata i1 %86, metadata !4736, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4833
  %87 = icmp eq i32 %30, 0
  %88 = icmp eq i32 %23, 0
  %89 = icmp ne i16* %5, null
  %90 = select i1 %86, i32 -2, i32 -1
  br label %91, !dbg !4836

91:                                               ; preds = %84, %127
  %92 = phi i32 [ %82, %84 ], [ %129, %127 ]
  %93 = phi i8* [ %81, %84 ], [ %97, %127 ]
  %94 = phi i32 [ %80, %84 ], [ %128, %127 ]
  %95 = phi i32 [ 0, %84 ], [ %130, %127 ]
  call void @llvm.dbg.value(metadata i32 %92, metadata !4722, metadata !DIExpression()), !dbg !4774
  call void @llvm.dbg.value(metadata i8* %93, metadata !4724, metadata !DIExpression()), !dbg !4774
  call void @llvm.dbg.value(metadata i32 %94, metadata !4725, metadata !DIExpression()), !dbg !4774
  call void @llvm.dbg.value(metadata i32 %95, metadata !4737, metadata !DIExpression()), !dbg !4834
  %96 = getelementptr inbounds i8, i8* %93, i32 1, !dbg !4839
  call void @llvm.dbg.value(metadata i8* %96, metadata !4724, metadata !DIExpression()), !dbg !4774
  call void @llvm.dbg.value(metadata i8 undef, metadata !4739, metadata !DIExpression()), !dbg !4840
  %97 = getelementptr inbounds i8, i8* %93, i32 2, !dbg !4841
  call void @llvm.dbg.value(metadata i8* %97, metadata !4724, metadata !DIExpression()), !dbg !4774
  %98 = load i8, i8* %96, align 1, !dbg !4842
  call void @llvm.dbg.value(metadata i8 %98, metadata !4742, metadata !DIExpression()), !dbg !4840
  %99 = zext i8 %98 to i32, !dbg !4843
  %100 = getelementptr inbounds i32, i32* %11, i32 %99, !dbg !4843
  %101 = bitcast i32* %100 to i8**, !dbg !4844
  %102 = load i8*, i8** %101, align 4, !dbg !4844
  call void @llvm.dbg.value(metadata i8* %102, metadata !4743, metadata !DIExpression()), !dbg !4840
  %103 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %102) #24, !dbg !4845
  call void @llvm.dbg.value(metadata i1 %103, metadata !4744, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4840
  br i1 %13, label %110, label %104, !dbg !4846

104:                                              ; preds = %91
  %105 = load i8, i8* %93, align 1, !dbg !4848
  call void @llvm.dbg.value(metadata i8 %105, metadata !4739, metadata !DIExpression()), !dbg !4840
  %106 = zext i8 %105 to i32, !dbg !4849
  %107 = tail call zeroext i1 @is_ptr(i8* noundef %44, i32 noundef %106) #24, !dbg !4850
  br i1 %107, label %108, label %110, !dbg !4851

108:                                              ; preds = %104
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([168 x i8], [168 x i8]* @.str.1.25, i32 0, i32 0), i32 noundef 87, i8* noundef %44, i32 noundef %106) #25, !dbg !4852
  %109 = add nsw i32 %92, -2, !dbg !4858
  call void @llvm.dbg.value(metadata i32 %109, metadata !4722, metadata !DIExpression()), !dbg !4774
  br label %127, !dbg !4859

110:                                              ; preds = %104, %91
  br i1 %103, label %111, label %114, !dbg !4860

111:                                              ; preds = %110
  br i1 %88, label %112, label %115, !dbg !4861

112:                                              ; preds = %111
  %113 = add i32 %92, %90, !dbg !4863
  call void @llvm.dbg.value(metadata i32 %113, metadata !4722, metadata !DIExpression()), !dbg !4774
  br label %127, !dbg !4866

114:                                              ; preds = %110
  br i1 %87, label %127, label %115, !dbg !4867

115:                                              ; preds = %114, %111
  call void @llvm.dbg.label(metadata !4770), !dbg !4868
  %116 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %102, i16 noundef zeroext 0) #24, !dbg !4869
  call void @llvm.dbg.value(metadata i32 %116, metadata !4745, metadata !DIExpression()), !dbg !4840
  %117 = icmp ult i32 %94, %6
  %118 = select i1 %89, i1 %117, i1 false, !dbg !4870
  br i1 %118, label %119, label %123, !dbg !4870

119:                                              ; preds = %115
  %120 = trunc i32 %116 to i16, !dbg !4872
  %121 = add nuw i32 %94, 1, !dbg !4874
  call void @llvm.dbg.value(metadata i32 %121, metadata !4725, metadata !DIExpression()), !dbg !4774
  %122 = getelementptr inbounds i16, i16* %5, i32 %94, !dbg !4875
  store i16 %120, i16* %122, align 2, !dbg !4876
  br label %123, !dbg !4877

123:                                              ; preds = %119, %115
  %124 = phi i32 [ %121, %119 ], [ %94, %115 ], !dbg !4774
  call void @llvm.dbg.value(metadata i32 %124, metadata !4725, metadata !DIExpression()), !dbg !4774
  %125 = add i32 %92, -1, !dbg !4878
  %126 = add i32 %125, %116, !dbg !4879
  call void @llvm.dbg.value(metadata i32 %126, metadata !4722, metadata !DIExpression()), !dbg !4774
  br label %127, !dbg !4880

127:                                              ; preds = %112, %123, %114, %108
  %128 = phi i32 [ %94, %108 ], [ %124, %123 ], [ %94, %112 ], [ %94, %114 ], !dbg !4774
  %129 = phi i32 [ %109, %108 ], [ %126, %123 ], [ %113, %112 ], [ %92, %114 ], !dbg !4840
  call void @llvm.dbg.value(metadata i32 %129, metadata !4722, metadata !DIExpression()), !dbg !4774
  call void @llvm.dbg.value(metadata i32 %128, metadata !4725, metadata !DIExpression()), !dbg !4774
  %130 = add nuw nsw i32 %95, 1, !dbg !4881
  call void @llvm.dbg.value(metadata i8* %97, metadata !4724, metadata !DIExpression()), !dbg !4774
  call void @llvm.dbg.value(metadata i32 %130, metadata !4737, metadata !DIExpression()), !dbg !4834
  %131 = icmp eq i32 %130, %28, !dbg !4835
  br i1 %131, label %267, label %91, !dbg !4836, !llvm.loop !4882

132:                                              ; preds = %38
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !4747, metadata !DIExpression()), !dbg !4884
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !4748, metadata !DIExpression()), !dbg !4885
  br i1 %25, label %133, label %135, !dbg !4886

133:                                              ; preds = %132
  call void @llvm.dbg.value(metadata i8 %20, metadata !4749, metadata !DIExpression()), !dbg !4774
  call void @llvm.dbg.value(metadata i8 0, metadata !4750, metadata !DIExpression()), !dbg !4774
  %134 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !4887
  call void @llvm.dbg.value(metadata i8* %134, metadata !4751, metadata !DIExpression()), !dbg !4774
  br label %140, !dbg !4890

135:                                              ; preds = %132
  %136 = and i32 %4, 4
  %137 = icmp ne i32 %136, 0
  %138 = and i1 %137, %22, !dbg !4891
  %139 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0
  br i1 %138, label %140, label %145, !dbg !4891

140:                                              ; preds = %133, %135
  %141 = phi i8 [ 0, %135 ], [ %20, %133 ]
  %142 = phi i8 [ %20, %135 ], [ 0, %133 ]
  %143 = phi i8* [ %139, %135 ], [ %134, %133 ]
  call void @llvm.dbg.value(metadata i8* null, metadata !4751, metadata !DIExpression()), !dbg !4774
  call void @llvm.dbg.value(metadata i8 undef, metadata !4750, metadata !DIExpression()), !dbg !4774
  call void @llvm.dbg.value(metadata i8 0, metadata !4749, metadata !DIExpression()), !dbg !4774
  %144 = call i8* @memcpy(i8* noundef nonnull %143, i8* noundef nonnull %45, i32 noundef %21) #25, !dbg !4893
  br label %145, !dbg !4896

145:                                              ; preds = %135, %140
  %146 = phi i8 [ %142, %140 ], [ 0, %135 ]
  %147 = phi i8 [ %141, %140 ], [ 0, %135 ]
  %148 = getelementptr inbounds i8, i8* %45, i32 %21, !dbg !4897
  call void @llvm.dbg.value(metadata i8* %148, metadata !4724, metadata !DIExpression()), !dbg !4774
  call void @llvm.dbg.value(metadata i32 0, metadata !4753, metadata !DIExpression()), !dbg !4898
  call void @llvm.dbg.value(metadata i8 %146, metadata !4750, metadata !DIExpression()), !dbg !4774
  call void @llvm.dbg.value(metadata i8 %147, metadata !4749, metadata !DIExpression()), !dbg !4774
  %149 = icmp eq i8 %27, 0, !dbg !4899
  br i1 %149, label %150, label %152, !dbg !4900

150:                                              ; preds = %145
  %151 = and i32 %4, 4, !dbg !4901
  br label %157, !dbg !4900

152:                                              ; preds = %145
  %153 = icmp eq i32 %30, 0
  %154 = icmp eq i32 %23, 0
  %155 = and i32 %4, 4
  %156 = icmp eq i32 %155, 0
  br label %176, !dbg !4900

157:                                              ; preds = %215, %150
  %158 = phi i32 [ %151, %150 ], [ %155, %215 ], !dbg !4901
  %159 = phi i8 [ %147, %150 ], [ %216, %215 ], !dbg !4902
  %160 = phi i8 [ %146, %150 ], [ %217, %215 ], !dbg !4903
  %161 = phi i8* [ %148, %150 ], [ %183, %215 ], !dbg !4774
  call void @llvm.dbg.value(metadata i8 undef, metadata !4746, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 8)), !dbg !4774
  %162 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4904
  %163 = load i8, i8* %162, align 1, !dbg !4904
  %164 = zext i8 %159 to i32, !dbg !4905
  %165 = add i8 %163, %159, !dbg !4906
  call void @llvm.dbg.value(metadata i8 %165, metadata !4746, metadata !DIExpression(DW_OP_LLVM_fragment, 8, 8)), !dbg !4774
  %166 = icmp eq i32 %30, 0, !dbg !4907
  %167 = lshr i8 %160, 1, !dbg !4908
  %168 = select i1 %166, i8 %167, i8 0, !dbg !4908
  call void @llvm.dbg.value(metadata i8 %168, metadata !4746, metadata !DIExpression(DW_OP_LLVM_fragment, 24, 8)), !dbg !4774
  %169 = icmp eq i32 %23, 0, !dbg !4909
  %170 = icmp eq i32 %158, 0, !dbg !4901
  %171 = select i1 %170, i8 0, i8 %160, !dbg !4901
  %172 = select i1 %169, i8 %171, i8 0, !dbg !4901
  call void @llvm.dbg.value(metadata i8 %172, metadata !4746, metadata !DIExpression(DW_OP_LLVM_fragment, 16, 8)), !dbg !4774
  call void @llvm.dbg.declare(metadata %struct.cbprintf_package_desc* undef, metadata !4761, metadata !DIExpression()), !dbg !4910
  %173 = load i32, i32* %11, align 1, !dbg !4911
  store i8 %165, i8* %162, align 1, !dbg !4912
  store i8 %172, i8* %19, align 1, !dbg !4912
  store i8 %168, i8* %26, align 1, !dbg !4912
  %174 = call i32 %2(i8* noundef nonnull %0, i32 noundef %41, i8* noundef %3) #25, !dbg !4913
  call void @llvm.dbg.value(metadata i32 %174, metadata !4752, metadata !DIExpression()), !dbg !4774
  %175 = icmp slt i32 %174, 0, !dbg !4914
  br i1 %175, label %267, label %220, !dbg !4916

176:                                              ; preds = %152, %215
  %177 = phi i8* [ %148, %152 ], [ %183, %215 ]
  %178 = phi i32 [ 0, %152 ], [ %218, %215 ]
  %179 = phi i8 [ %146, %152 ], [ %217, %215 ]
  %180 = phi i8 [ %147, %152 ], [ %216, %215 ]
  call void @llvm.dbg.value(metadata i8* %177, metadata !4724, metadata !DIExpression()), !dbg !4774
  call void @llvm.dbg.value(metadata i32 %178, metadata !4753, metadata !DIExpression()), !dbg !4898
  call void @llvm.dbg.value(metadata i8 %179, metadata !4750, metadata !DIExpression()), !dbg !4774
  call void @llvm.dbg.value(metadata i8 %180, metadata !4749, metadata !DIExpression()), !dbg !4774
  %181 = getelementptr inbounds i8, i8* %177, i32 1, !dbg !4917
  call void @llvm.dbg.value(metadata i8* %181, metadata !4724, metadata !DIExpression()), !dbg !4774
  %182 = load i8, i8* %177, align 1, !dbg !4918
  call void @llvm.dbg.value(metadata i8 %182, metadata !4755, metadata !DIExpression()), !dbg !4919
  %183 = getelementptr inbounds i8, i8* %177, i32 2, !dbg !4920
  call void @llvm.dbg.value(metadata i8* %183, metadata !4724, metadata !DIExpression()), !dbg !4774
  %184 = load i8, i8* %181, align 1, !dbg !4921
  call void @llvm.dbg.value(metadata i8 %184, metadata !4758, metadata !DIExpression()), !dbg !4919
  %185 = zext i8 %184 to i32, !dbg !4922
  %186 = getelementptr inbounds i32, i32* %11, i32 %185, !dbg !4922
  %187 = bitcast i32* %186 to i8**, !dbg !4923
  %188 = load i8*, i8** %187, align 4, !dbg !4923
  call void @llvm.dbg.value(metadata i8* %188, metadata !4759, metadata !DIExpression()), !dbg !4919
  %189 = call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %188) #24, !dbg !4924
  call void @llvm.dbg.value(metadata i1 %189, metadata !4760, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4919
  br i1 %13, label %193, label %190, !dbg !4925

190:                                              ; preds = %176
  %191 = zext i8 %182 to i32, !dbg !4927
  %192 = call zeroext i1 @is_ptr(i8* noundef %44, i32 noundef %191) #24, !dbg !4928
  br i1 %192, label %215, label %193, !dbg !4929

193:                                              ; preds = %190, %176
  br i1 %189, label %194, label %200, !dbg !4930

194:                                              ; preds = %193
  br i1 %154, label %197, label %195, !dbg !4931

195:                                              ; preds = %194
  %196 = add i8 %180, 1, !dbg !4934
  call void @llvm.dbg.value(metadata i8 %196, metadata !4749, metadata !DIExpression()), !dbg !4774
  br label %208, !dbg !4937

197:                                              ; preds = %194
  br i1 %156, label %215, label %198, !dbg !4938

198:                                              ; preds = %197
  %199 = add i8 %179, 1, !dbg !4939
  call void @llvm.dbg.value(metadata i8 %199, metadata !4750, metadata !DIExpression()), !dbg !4774
  br label %208, !dbg !4942

200:                                              ; preds = %193
  br i1 %153, label %203, label %201, !dbg !4943

201:                                              ; preds = %200
  %202 = add i8 %180, 1, !dbg !4945
  call void @llvm.dbg.value(metadata i8 %202, metadata !4749, metadata !DIExpression()), !dbg !4774
  br label %208, !dbg !4948

203:                                              ; preds = %200
  %204 = add i8 %179, 1, !dbg !4949
  call void @llvm.dbg.value(metadata i8 %204, metadata !4750, metadata !DIExpression()), !dbg !4774
  %205 = zext i8 %179 to i32, !dbg !4951
  %206 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %205, !dbg !4951
  store i8 %182, i8* %206, align 1, !dbg !4952
  %207 = add i8 %179, 2, !dbg !4953
  call void @llvm.dbg.value(metadata i8 %207, metadata !4750, metadata !DIExpression()), !dbg !4774
  br label %208

208:                                              ; preds = %201, %203, %195, %198
  %209 = phi i8 [ %179, %198 ], [ %180, %195 ], [ %204, %203 ], [ %180, %201 ]
  %210 = phi [16 x i8]* [ %9, %198 ], [ %8, %195 ], [ %9, %203 ], [ %8, %201 ]
  %211 = phi i8 [ %180, %198 ], [ %196, %195 ], [ %180, %203 ], [ %202, %201 ]
  %212 = phi i8 [ %199, %198 ], [ %179, %195 ], [ %207, %203 ], [ %179, %201 ]
  %213 = zext i8 %209 to i32, !dbg !4954
  %214 = getelementptr inbounds [16 x i8], [16 x i8]* %210, i32 0, i32 %213, !dbg !4954
  store i8 %184, i8* %214, align 1, !dbg !4954
  br label %215, !dbg !4955

215:                                              ; preds = %208, %197, %190
  %216 = phi i8 [ %180, %190 ], [ %180, %197 ], [ %211, %208 ], !dbg !4774
  %217 = phi i8 [ %179, %190 ], [ %179, %197 ], [ %212, %208 ], !dbg !4903
  call void @llvm.dbg.value(metadata i8 %217, metadata !4750, metadata !DIExpression()), !dbg !4774
  call void @llvm.dbg.value(metadata i8 %216, metadata !4749, metadata !DIExpression()), !dbg !4774
  %218 = add nuw nsw i32 %178, 1, !dbg !4955
  call void @llvm.dbg.value(metadata i8* %183, metadata !4724, metadata !DIExpression()), !dbg !4774
  call void @llvm.dbg.value(metadata i32 %218, metadata !4753, metadata !DIExpression()), !dbg !4898
  %219 = icmp eq i32 %218, %28, !dbg !4899
  br i1 %219, label %157, label %176, !dbg !4900, !llvm.loop !4956

220:                                              ; preds = %157
  %221 = zext i8 %160 to i32, !dbg !4908
  call void @llvm.dbg.value(metadata i32 %174, metadata !4722, metadata !DIExpression()), !dbg !4774
  store i32 %173, i32* %11, align 1, !dbg !4958
  %222 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !4959
  %223 = call i32 %2(i8* noundef nonnull %222, i32 noundef %221, i8* noundef %3) #25, !dbg !4960
  call void @llvm.dbg.value(metadata i32 %223, metadata !4752, metadata !DIExpression()), !dbg !4774
  %224 = icmp slt i32 %223, 0, !dbg !4961
  br i1 %224, label %267, label %225, !dbg !4963

225:                                              ; preds = %220
  call void @llvm.dbg.value(metadata !DIArgList(i32 %174, i32 %223), metadata !4722, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4774
  %226 = mul nsw i32 %28, -2
  %227 = add i32 %18, %226, !dbg !4964
  %228 = add nuw nsw i32 %41, %21, !dbg !4964
  %229 = sub i32 %227, %228, !dbg !4964
  call void @llvm.dbg.value(metadata i32 %229, metadata !4762, metadata !DIExpression()), !dbg !4774
  %230 = call i32 %2(i8* noundef %161, i32 noundef %229, i8* noundef %3) #25, !dbg !4965
  call void @llvm.dbg.value(metadata i32 %230, metadata !4752, metadata !DIExpression()), !dbg !4774
  %231 = icmp slt i32 %230, 0, !dbg !4966
  br i1 %231, label %267, label %232, !dbg !4968

232:                                              ; preds = %225
  %233 = add nuw nsw i32 %223, %174, !dbg !4969
  call void @llvm.dbg.value(metadata i32 %233, metadata !4722, metadata !DIExpression()), !dbg !4774
  %234 = add nuw nsw i32 %233, %230, !dbg !4970
  call void @llvm.dbg.value(metadata i32 %234, metadata !4722, metadata !DIExpression()), !dbg !4774
  call void @llvm.dbg.value(metadata i32 0, metadata !4763, metadata !DIExpression()), !dbg !4971
  %235 = icmp eq i8 %159, 0, !dbg !4972
  br i1 %235, label %264, label %236, !dbg !4973

236:                                              ; preds = %232
  %237 = icmp eq i16* %5, null
  br label %238, !dbg !4973

238:                                              ; preds = %236, %259
  %239 = phi i32 [ 0, %236 ], [ %262, %259 ]
  %240 = phi i32 [ %234, %236 ], [ %261, %259 ]
  call void @llvm.dbg.value(metadata i32 %239, metadata !4763, metadata !DIExpression()), !dbg !4971
  call void @llvm.dbg.value(metadata i32 %240, metadata !4722, metadata !DIExpression()), !dbg !4774
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4974
  %241 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %239, !dbg !4975
  %242 = load i8, i8* %241, align 1, !dbg !4975
  call void @llvm.dbg.value(metadata i8 %242, metadata !4765, metadata !DIExpression()), !dbg !4976
  store i8 %242, i8* %10, align 1, !dbg !4977
  %243 = zext i8 %242 to i32, !dbg !4978
  %244 = getelementptr inbounds i32, i32* %11, i32 %243, !dbg !4978
  %245 = bitcast i32* %244 to i8**, !dbg !4979
  %246 = load i8*, i8** %245, align 4, !dbg !4979
  call void @llvm.dbg.value(metadata i8* %246, metadata !4768, metadata !DIExpression()), !dbg !4976
  br i1 %237, label %250, label %247, !dbg !4980

247:                                              ; preds = %238
  %248 = getelementptr inbounds i16, i16* %5, i32 %239, !dbg !4981
  %249 = load i16, i16* %248, align 2, !dbg !4981
  br label %250, !dbg !4980

250:                                              ; preds = %238, %247
  %251 = phi i16 [ %249, %247 ], [ 0, %238 ], !dbg !4980
  call void @llvm.dbg.value(metadata i32 undef, metadata !4769, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4976
  call void @llvm.dbg.value(metadata i8* %10, metadata !4765, metadata !DIExpression(DW_OP_deref)), !dbg !4976
  %252 = call i32 %2(i8* noundef nonnull %10, i32 noundef 1, i8* noundef %3) #25, !dbg !4982
  call void @llvm.dbg.value(metadata i32 %252, metadata !4752, metadata !DIExpression()), !dbg !4774
  %253 = icmp slt i32 %252, 0, !dbg !4983
  br i1 %253, label %257, label %254, !dbg !4985

254:                                              ; preds = %250
  call void @llvm.dbg.value(metadata i16 %251, metadata !4769, metadata !DIExpression()), !dbg !4976
  call void @llvm.dbg.value(metadata !DIArgList(i32 %240, i32 %252), metadata !4722, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4774
  %255 = call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef nonnull %2, i8* noundef %3, i8* noundef %246, i16 noundef zeroext %251) #24, !dbg !4986
  call void @llvm.dbg.value(metadata i32 %255, metadata !4752, metadata !DIExpression()), !dbg !4774
  %256 = icmp slt i32 %255, 0, !dbg !4987
  br i1 %256, label %257, label %259, !dbg !4989

257:                                              ; preds = %254, %250
  %258 = phi i32 [ %255, %254 ], [ %252, %250 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4722, metadata !DIExpression()), !dbg !4774
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4990
  call void @llvm.dbg.value(metadata i32 undef, metadata !4722, metadata !DIExpression()), !dbg !4774
  br label %267

259:                                              ; preds = %254
  %260 = add nsw i32 %252, %240, !dbg !4991
  call void @llvm.dbg.value(metadata i32 %260, metadata !4722, metadata !DIExpression()), !dbg !4774
  %261 = add nsw i32 %260, %255, !dbg !4992
  call void @llvm.dbg.value(metadata i32 %261, metadata !4722, metadata !DIExpression()), !dbg !4774
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4990
  %262 = add nuw nsw i32 %239, 1, !dbg !4993
  call void @llvm.dbg.value(metadata i32 %262, metadata !4763, metadata !DIExpression()), !dbg !4971
  %263 = icmp eq i32 %262, %164, !dbg !4972
  br i1 %263, label %264, label %238, !dbg !4973, !llvm.loop !4994

264:                                              ; preds = %259, %232
  %265 = phi i32 [ %234, %232 ], [ %261, %259 ], !dbg !4970
  call void @llvm.dbg.value(metadata i32 %265, metadata !4722, metadata !DIExpression()), !dbg !4774
  %266 = call i32 %2(i8* noundef null, i32 noundef 0, i8* noundef %3) #25, !dbg !4996
  br label %267, !dbg !4997

267:                                              ; preds = %127, %79, %257, %264, %157, %220, %225, %34, %36
  %268 = phi i32 [ %18, %36 ], [ %18, %34 ], [ %265, %264 ], [ %174, %157 ], [ %223, %220 ], [ %230, %225 ], [ %258, %257 ], [ %82, %79 ], [ %129, %127 ], !dbg !4774
  ret i32 %268, !dbg !4998
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_package_len(i8* noundef %0) unnamed_addr #1 !dbg !4999 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5003, metadata !DIExpression()), !dbg !5011
  call void @llvm.dbg.value(metadata i8* %0, metadata !5004, metadata !DIExpression()), !dbg !5011
  call void @llvm.dbg.value(metadata i8* %0, metadata !5005, metadata !DIExpression()), !dbg !5011
  %2 = load i8, i8* %0, align 1, !dbg !5012
  %3 = zext i8 %2 to i32, !dbg !5012
  %4 = shl nuw nsw i32 %3, 2, !dbg !5013
  call void @llvm.dbg.value(metadata i32 %4, metadata !5006, metadata !DIExpression()), !dbg !5011
  %5 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !5014
  %6 = load i8, i8* %5, align 1, !dbg !5014
  %7 = zext i8 %6 to i32, !dbg !5014
  call void @llvm.dbg.value(metadata i32 %7, metadata !5007, metadata !DIExpression()), !dbg !5011
  %8 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !5015
  %9 = load i8, i8* %8, align 1, !dbg !5015
  %10 = zext i8 %9 to i32, !dbg !5015
  call void @llvm.dbg.value(metadata i32 %10, metadata !5008, metadata !DIExpression()), !dbg !5011
  %11 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !5016
  call void @llvm.dbg.value(metadata i8* %11, metadata !5004, metadata !DIExpression()), !dbg !5011
  %12 = getelementptr inbounds i8, i8* %11, i32 %10, !dbg !5017
  call void @llvm.dbg.value(metadata i8* %12, metadata !5004, metadata !DIExpression()), !dbg !5011
  call void @llvm.dbg.value(metadata i32 0, metadata !5009, metadata !DIExpression()), !dbg !5018
  %13 = icmp eq i8 %6, 0, !dbg !5019
  br i1 %13, label %14, label %19, !dbg !5021

14:                                               ; preds = %19, %1
  %15 = phi i8* [ %12, %1 ], [ %25, %19 ], !dbg !5011
  %16 = ptrtoint i8* %15 to i32, !dbg !5022
  %17 = ptrtoint i8* %0 to i32, !dbg !5022
  %18 = sub i32 %16, %17, !dbg !5022
  ret i32 %18, !dbg !5023

19:                                               ; preds = %1, %19
  %20 = phi i32 [ %26, %19 ], [ 0, %1 ]
  %21 = phi i8* [ %25, %19 ], [ %12, %1 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !5009, metadata !DIExpression()), !dbg !5018
  call void @llvm.dbg.value(metadata i8* %21, metadata !5004, metadata !DIExpression()), !dbg !5011
  %22 = getelementptr inbounds i8, i8* %21, i32 1, !dbg !5024
  call void @llvm.dbg.value(metadata i8* %22, metadata !5004, metadata !DIExpression()), !dbg !5011
  %23 = tail call i32 @strlen(i8* noundef nonnull %22) #25, !dbg !5026
  %24 = add i32 %23, 1, !dbg !5027
  %25 = getelementptr inbounds i8, i8* %22, i32 %24, !dbg !5028
  call void @llvm.dbg.value(metadata i8* %25, metadata !5004, metadata !DIExpression()), !dbg !5011
  %26 = add nuw nsw i32 %20, 1, !dbg !5029
  call void @llvm.dbg.value(metadata i32 %26, metadata !5009, metadata !DIExpression()), !dbg !5018
  %27 = icmp eq i32 %26, %7, !dbg !5019
  br i1 %27, label %14, label %19, !dbg !5021, !llvm.loop !5030
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef readonly %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3) unnamed_addr #1 !dbg !5032 {
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %0, metadata !5036, metadata !DIExpression()), !dbg !5040
  call void @llvm.dbg.value(metadata i8* %1, metadata !5037, metadata !DIExpression()), !dbg !5040
  call void @llvm.dbg.value(metadata i8* %2, metadata !5038, metadata !DIExpression()), !dbg !5040
  call void @llvm.dbg.value(metadata i16 %3, metadata !5039, metadata !DIExpression()), !dbg !5040
  %5 = icmp eq i32 (i8*, i32, i8*)* %0, null, !dbg !5041
  br i1 %5, label %6, label %9, !dbg !5043

6:                                                ; preds = %4
  %7 = tail call i32 @strlen(i8* noundef %2) #25, !dbg !5044
  %8 = add i32 %7, 1, !dbg !5046
  br label %20, !dbg !5047

9:                                                ; preds = %4
  %10 = icmp eq i16 %3, 0, !dbg !5048
  br i1 %10, label %13, label %11, !dbg !5049

11:                                               ; preds = %9
  %12 = zext i16 %3 to i32, !dbg !5049
  br label %16, !dbg !5049

13:                                               ; preds = %9
  %14 = tail call i32 @strlen(i8* noundef %2) #25, !dbg !5050
  %15 = add i32 %14, 1, !dbg !5051
  br label %16, !dbg !5049

16:                                               ; preds = %13, %11
  %17 = phi i32 [ %12, %11 ], [ %15, %13 ], !dbg !5049
  %18 = and i32 %17, 65535, !dbg !5052
  call void @llvm.dbg.value(metadata i32 %17, metadata !5039, metadata !DIExpression()), !dbg !5040
  %19 = tail call i32 %0(i8* noundef %2, i32 noundef %18, i8* noundef %1) #25, !dbg !5053
  br label %20, !dbg !5054

20:                                               ; preds = %16, %6
  %21 = phi i32 [ %8, %6 ], [ %19, %16 ], !dbg !5040
  ret i32 %21, !dbg !5055
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !5056 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5058, metadata !DIExpression()), !dbg !5059
  ret i32 0, !dbg !5060
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #6 !dbg !5061 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !5065, metadata !DIExpression()), !dbg !5066
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !5067
  ret void, !dbg !5068
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #10 !dbg !5069 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !5072
  ret i8* %1, !dbg !5073
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !5074 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !5085, metadata !DIExpression()), !dbg !5096
  call void @llvm.dbg.value(metadata i8* %0, metadata !5084, metadata !DIExpression()), !dbg !5096
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #24, !dbg !5097
  ret void, !dbg !5099
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !5100 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5104, metadata !DIExpression()), !dbg !5106
  call void @llvm.dbg.value(metadata i8* %1, metadata !5105, metadata !DIExpression()), !dbg !5106
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !5107
  %4 = tail call i32 %3(i32 noundef %0) #25, !dbg !5107
  ret i32 %4, !dbg !5108
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !5109 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !5116, metadata !DIExpression()), !dbg !5117
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5113, metadata !DIExpression()), !dbg !5117
  call void @llvm.dbg.value(metadata i8* %1, metadata !5114, metadata !DIExpression()), !dbg !5117
  call void @llvm.dbg.value(metadata i8* %2, metadata !5115, metadata !DIExpression()), !dbg !5117
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #25, !dbg !5118
  ret void, !dbg !5119
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !5120 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5124, metadata !DIExpression()), !dbg !5127
  call void @llvm.dbg.value(metadata i32 %1, metadata !5125, metadata !DIExpression()), !dbg !5127
  call void @llvm.dbg.value(metadata i32 0, metadata !5126, metadata !DIExpression()), !dbg !5127
  %3 = icmp eq i32 %1, 0, !dbg !5128
  br i1 %3, label %13, label %4, !dbg !5131

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !5126, metadata !DIExpression()), !dbg !5127
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !5132
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !5134
  %8 = load i8, i8* %7, align 1, !dbg !5134
  %9 = zext i8 %8 to i32, !dbg !5134
  %10 = tail call i32 %6(i32 noundef %9) #25, !dbg !5132
  %11 = add nuw i32 %5, 1, !dbg !5135
  call void @llvm.dbg.value(metadata i32 %11, metadata !5126, metadata !DIExpression()), !dbg !5127
  %12 = icmp eq i32 %11, %1, !dbg !5128
  br i1 %12, label %13, label %4, !dbg !5131, !llvm.loop !5136

13:                                               ; preds = %4, %2
  ret void, !dbg !5138
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5139 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5143, metadata !DIExpression()), !dbg !5145
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !5146
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5146
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !5144, metadata !DIExpression()), !dbg !5147
  call void @llvm.va_start(i8* nonnull %3), !dbg !5148
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !5149
  %5 = load i32, i32* %4, align 4, !dbg !5149
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !5149
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #24, !dbg !5149
  call void @llvm.va_end(i8* nonnull %3), !dbg !5150
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5151
  ret void, !dbg !5151
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !5152 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5156, metadata !DIExpression()), !dbg !5161
  call void @llvm.dbg.value(metadata i32 %1, metadata !5157, metadata !DIExpression()), !dbg !5161
  call void @llvm.dbg.value(metadata i8* %2, metadata !5158, metadata !DIExpression()), !dbg !5161
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !5162
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !5162
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !5159, metadata !DIExpression()), !dbg !5163
  call void @llvm.va_start(i8* nonnull %5), !dbg !5164
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !5165
  %7 = load i32, i32* %6, align 4, !dbg !5165
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !5165
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #24, !dbg !5165
  call void @llvm.dbg.value(metadata i32 %9, metadata !5160, metadata !DIExpression()), !dbg !5161
  call void @llvm.va_end(i8* nonnull %5), !dbg !5166
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !5167
  ret i32 %9, !dbg !5168
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !5169 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !5176, metadata !DIExpression()), !dbg !5183
  call void @llvm.dbg.value(metadata i8* %0, metadata !5173, metadata !DIExpression()), !dbg !5183
  call void @llvm.dbg.value(metadata i32 %1, metadata !5174, metadata !DIExpression()), !dbg !5183
  call void @llvm.dbg.value(metadata i8* %2, metadata !5175, metadata !DIExpression()), !dbg !5183
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !5184
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #23, !dbg !5184
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !5177, metadata !DIExpression()), !dbg !5185
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !5186
  store i8* %0, i8** %7, align 4, !dbg !5186
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !5186
  store i32 %1, i32* %8, align 4, !dbg !5186
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !5186
  store i32 0, i32* %9, align 4, !dbg !5186
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #24, !dbg !5187
  %10 = load i32, i32* %9, align 4, !dbg !5188
  %11 = load i32, i32* %8, align 4, !dbg !5190
  %12 = icmp slt i32 %10, %11, !dbg !5191
  br i1 %12, label %13, label %15, !dbg !5192

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !5193
  store i8 0, i8* %14, align 1, !dbg !5195
  br label %15, !dbg !5196

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #23, !dbg !5197
  ret i32 %10, !dbg !5198
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #11 !dbg !5199 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5204, metadata !DIExpression()), !dbg !5206
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !5205, metadata !DIExpression()), !dbg !5206
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !5207
  %4 = load i8*, i8** %3, align 4, !dbg !5207
  %5 = icmp eq i8* %4, null, !dbg !5209
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !5210
  br i1 %5, label %12, label %8, !dbg !5211

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !5212
  %10 = load i32, i32* %9, align 4, !dbg !5212
  %11 = icmp slt i32 %7, %10, !dbg !5213
  br i1 %11, label %15, label %12, !dbg !5214

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !5215
  %14 = add nsw i32 %7, 1, !dbg !5217
  store i32 %14, i32* %13, align 4, !dbg !5217
  br label %25, !dbg !5218

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !5219
  %17 = icmp eq i32 %7, %16, !dbg !5221
  br i1 %17, label %18, label %21, !dbg !5222

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !5223
  store i32 %19, i32* %6, align 4, !dbg !5223
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !5225
  store i8 0, i8* %20, align 1, !dbg !5226
  br label %25, !dbg !5227

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !5228
  %23 = add nsw i32 %7, 1, !dbg !5230
  store i32 %23, i32* %6, align 4, !dbg !5230
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !5231
  store i8 %22, i8* %24, align 1, !dbg !5232
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !5233
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #2 !dbg !5234 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !5244, metadata !DIExpression()), !dbg !5248
  call void @llvm.dbg.value(metadata i8* %1, metadata !5245, metadata !DIExpression()), !dbg !5248
  call void @llvm.dbg.value(metadata i8* %2, metadata !5246, metadata !DIExpression()), !dbg !5248
  call void @llvm.dbg.value(metadata i8* %3, metadata !5247, metadata !DIExpression()), !dbg !5248
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #25, !dbg !5249
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #26, !dbg !5250
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #24, !dbg !5251
  unreachable, !dbg !5252
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #12 !dbg !5253 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #26, !dbg !5357
  ret %struct.k_thread* %1, !dbg !5358
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !5359 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !5363, metadata !DIExpression()), !dbg !5364
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !5365, !srcloc !5367
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !5368
  ret void, !dbg !5369
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #12 !dbg !5370 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !5371, !srcloc !5373
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !5374
  ret %struct.k_thread* %1, !dbg !5375
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !5376 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !5389, metadata !DIExpression()), !dbg !5515
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5386, metadata !DIExpression()), !dbg !5515
  call void @llvm.dbg.value(metadata i8* %1, metadata !5387, metadata !DIExpression()), !dbg !5515
  call void @llvm.dbg.value(metadata i8* %2, metadata !5388, metadata !DIExpression()), !dbg !5515
  call void @llvm.dbg.value(metadata i32 %4, metadata !5390, metadata !DIExpression()), !dbg !5515
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !5516
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #23, !dbg !5516
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !5391, metadata !DIExpression()), !dbg !5517
  call void @llvm.dbg.value(metadata i32 0, metadata !5395, metadata !DIExpression()), !dbg !5515
  call void @llvm.dbg.value(metadata i1 undef, metadata !5397, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5515
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !5518

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !5518

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !5519
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !5389, metadata !DIExpression()), !dbg !5515
  call void @llvm.dbg.value(metadata i8* %30, metadata !5388, metadata !DIExpression()), !dbg !5515
  call void @llvm.dbg.value(metadata i32 %29, metadata !5395, metadata !DIExpression()), !dbg !5515
  %31 = load i8, i8* %30, align 1, !dbg !5520
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !5518

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !5520
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !5521
  call void @llvm.dbg.value(metadata i8* %34, metadata !5388, metadata !DIExpression()), !dbg !5515
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #25, !dbg !5521
  call void @llvm.dbg.value(metadata i32 %35, metadata !5399, metadata !DIExpression()), !dbg !5522
  %36 = icmp slt i32 %35, 0, !dbg !5523
  %37 = add i32 %29, 1, !dbg !5521
  call void @llvm.dbg.value(metadata i32 undef, metadata !5395, metadata !DIExpression()), !dbg !5515
  br i1 %36, label %365, label %28, !llvm.loop !5525

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #23, !dbg !5527
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !5404, metadata !DIExpression()), !dbg !5528
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !5528
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !5447, metadata !DIExpression()), !dbg !5529
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !5450, metadata !DIExpression()), !dbg !5529
  call void @llvm.dbg.value(metadata i8* %30, metadata !5453, metadata !DIExpression()), !dbg !5529
  call void @llvm.dbg.value(metadata i32 -1, metadata !5454, metadata !DIExpression()), !dbg !5529
  call void @llvm.dbg.value(metadata i32 -1, metadata !5455, metadata !DIExpression()), !dbg !5529
  call void @llvm.dbg.value(metadata i8* null, metadata !5456, metadata !DIExpression()), !dbg !5529
  call void @llvm.dbg.value(metadata i8* %14, metadata !5457, metadata !DIExpression()), !dbg !5529
  call void @llvm.dbg.value(metadata i8 0, metadata !5458, metadata !DIExpression()), !dbg !5529
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #24, !dbg !5530
  call void @llvm.dbg.value(metadata i8* %39, metadata !5388, metadata !DIExpression()), !dbg !5515
  %40 = load i24, i24* %15, align 8, !dbg !5531
  %41 = and i24 %40, 256, !dbg !5531
  %42 = icmp eq i24 %41, 0, !dbg !5531
  br i1 %42, label %51, label %43, !dbg !5533

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !5534
  call void @llvm.dbg.value(metadata i8* %44, metadata !5389, metadata !DIExpression()), !dbg !5515
  %45 = bitcast i8* %27 to i32*, !dbg !5534
  %46 = load i32, i32* %45, align 4, !dbg !5534
  call void @llvm.dbg.value(metadata i32 %46, metadata !5454, metadata !DIExpression()), !dbg !5529
  %47 = icmp slt i32 %46, 0, !dbg !5536
  br i1 %47, label %48, label %56, !dbg !5538

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !5539
  store i24 %49, i24* %15, align 8, !dbg !5539
  %50 = sub nsw i32 0, %46, !dbg !5541
  call void @llvm.dbg.value(metadata i32 %50, metadata !5454, metadata !DIExpression()), !dbg !5529
  br label %56, !dbg !5542

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !5543
  %53 = icmp eq i24 %52, 0, !dbg !5543
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !5545
  br label %56, !dbg !5545

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !5546
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !5529
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !5389, metadata !DIExpression()), !dbg !5515
  call void @llvm.dbg.value(metadata i32 %58, metadata !5454, metadata !DIExpression()), !dbg !5529
  %60 = and i24 %57, 1024, !dbg !5546
  %61 = icmp eq i24 %60, 0, !dbg !5546
  br i1 %61, label %69, label %62, !dbg !5547

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !5548
  call void @llvm.dbg.value(metadata i8* %63, metadata !5389, metadata !DIExpression()), !dbg !5515
  %64 = bitcast i8* %59 to i32*, !dbg !5548
  %65 = load i32, i32* %64, align 4, !dbg !5548
  call void @llvm.dbg.value(metadata i32 %65, metadata !5459, metadata !DIExpression()), !dbg !5549
  %66 = icmp slt i32 %65, 0, !dbg !5550
  br i1 %66, label %67, label %74, !dbg !5552

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !5553
  store i24 %68, i24* %15, align 8, !dbg !5553
  br label %74, !dbg !5555

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !5556
  %71 = icmp eq i24 %70, 0, !dbg !5556
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !5558
  br label %74, !dbg !5558

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !5559
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !5529
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !5529
  call void @llvm.dbg.value(metadata i8* %77, metadata !5389, metadata !DIExpression()), !dbg !5515
  call void @llvm.dbg.value(metadata i32 %76, metadata !5455, metadata !DIExpression()), !dbg !5529
  store i32 0, i32* %16, align 4, !dbg !5560
  store i32 0, i32* %17, align 8, !dbg !5561
  %78 = lshr i24 %75, 16, !dbg !5559
  call void @llvm.dbg.value(metadata i24 %78, metadata !5462, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5529
  %79 = lshr i24 %75, 11, !dbg !5562
  %80 = and i24 %79, 15, !dbg !5562
  %81 = zext i24 %80 to i32, !dbg !5562
  call void @llvm.dbg.value(metadata i32 %81, metadata !5463, metadata !DIExpression()), !dbg !5529
  %82 = trunc i24 %78 to i3, !dbg !5563
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !5563

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !5564

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5567
  call void @llvm.dbg.value(metadata i8* %85, metadata !5389, metadata !DIExpression()), !dbg !5515
  %86 = bitcast i8* %77 to i32*, !dbg !5567
  %87 = load i32, i32* %86, align 4, !dbg !5567
  %88 = sext i32 %87 to i64, !dbg !5567
  store i64 %88, i64* %20, align 8, !dbg !5569
  br label %115, !dbg !5570

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5571
  call void @llvm.dbg.value(metadata i8* %90, metadata !5389, metadata !DIExpression()), !dbg !5515
  %91 = bitcast i8* %77 to i32*, !dbg !5571
  %92 = load i32, i32* %91, align 4, !dbg !5571
  %93 = sext i32 %92 to i64, !dbg !5571
  store i64 %93, i64* %20, align 8, !dbg !5574
  br label %115, !dbg !5575

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !5576
  %96 = add i32 %95, 7, !dbg !5576
  %97 = and i32 %96, -8, !dbg !5576
  %98 = inttoptr i32 %97 to i8*, !dbg !5576
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !5576
  call void @llvm.dbg.value(metadata i8* %99, metadata !5389, metadata !DIExpression()), !dbg !5515
  %100 = inttoptr i32 %97 to i64*, !dbg !5576
  %101 = load i64, i64* %100, align 8, !dbg !5576
  store i64 %101, i64* %20, align 8, !dbg !5577
  br label %115, !dbg !5578

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !5579
  %104 = add i32 %103, 7, !dbg !5579
  %105 = and i32 %104, -8, !dbg !5579
  %106 = inttoptr i32 %105 to i8*, !dbg !5579
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !5579
  call void @llvm.dbg.value(metadata i8* %107, metadata !5389, metadata !DIExpression()), !dbg !5515
  %108 = inttoptr i32 %105 to i64*, !dbg !5579
  %109 = load i64, i64* %108, align 8, !dbg !5579
  store i64 %109, i64* %20, align 8, !dbg !5580
  br label %115, !dbg !5581

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5582
  call void @llvm.dbg.value(metadata i8* %111, metadata !5389, metadata !DIExpression()), !dbg !5515
  %112 = bitcast i8* %77 to i32*, !dbg !5582
  %113 = load i32, i32* %112, align 4, !dbg !5582
  %114 = sext i32 %113 to i64, !dbg !5583
  store i64 %114, i64* %20, align 8, !dbg !5584
  br label %115, !dbg !5585

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !5586
  call void @llvm.dbg.value(metadata i8* %117, metadata !5389, metadata !DIExpression()), !dbg !5515
  %118 = trunc i24 %79 to i4, !dbg !5587
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !5587

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !5588
  %121 = ashr exact i64 %120, 56, !dbg !5588
  store i64 %121, i64* %20, align 8, !dbg !5591
  br label %177, !dbg !5592

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !5593
  %124 = ashr exact i64 %123, 48, !dbg !5593
  store i64 %124, i64* %20, align 8, !dbg !5596
  br label %177, !dbg !5597

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !5598

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5601
  call void @llvm.dbg.value(metadata i8* %127, metadata !5389, metadata !DIExpression()), !dbg !5515
  %128 = bitcast i8* %77 to i32*, !dbg !5601
  %129 = load i32, i32* %128, align 4, !dbg !5601
  %130 = zext i32 %129 to i64, !dbg !5601
  store i64 %130, i64* %20, align 8, !dbg !5603
  br label %157, !dbg !5604

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5605
  call void @llvm.dbg.value(metadata i8* %132, metadata !5389, metadata !DIExpression()), !dbg !5515
  call void @llvm.dbg.value(metadata i8* %132, metadata !5389, metadata !DIExpression()), !dbg !5515
  %133 = bitcast i8* %77 to i32*, !dbg !5605
  %134 = load i32, i32* %133, align 4, !dbg !5605
  %135 = zext i32 %134 to i64, !dbg !5605
  store i64 %135, i64* %20, align 8, !dbg !5605
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !5607
  %138 = add i32 %137, 7, !dbg !5607
  %139 = and i32 %138, -8, !dbg !5607
  %140 = inttoptr i32 %139 to i8*, !dbg !5607
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !5607
  call void @llvm.dbg.value(metadata i8* %141, metadata !5389, metadata !DIExpression()), !dbg !5515
  %142 = inttoptr i32 %139 to i64*, !dbg !5607
  %143 = load i64, i64* %142, align 8, !dbg !5607
  store i64 %143, i64* %20, align 8, !dbg !5608
  br label %157, !dbg !5609

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !5610
  %146 = add i32 %145, 7, !dbg !5610
  %147 = and i32 %146, -8, !dbg !5610
  %148 = inttoptr i32 %147 to i8*, !dbg !5610
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !5610
  call void @llvm.dbg.value(metadata i8* %149, metadata !5389, metadata !DIExpression()), !dbg !5515
  %150 = inttoptr i32 %147 to i64*, !dbg !5610
  %151 = load i64, i64* %150, align 8, !dbg !5610
  store i64 %151, i64* %20, align 8, !dbg !5611
  br label %157, !dbg !5612

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5613
  call void @llvm.dbg.value(metadata i8* %153, metadata !5389, metadata !DIExpression()), !dbg !5515
  %154 = bitcast i8* %77 to i32*, !dbg !5613
  %155 = load i32, i32* %154, align 4, !dbg !5613
  %156 = zext i32 %155 to i64, !dbg !5614
  store i64 %156, i64* %20, align 8, !dbg !5615
  br label %157, !dbg !5616

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !5617
  call void @llvm.dbg.value(metadata i8* %159, metadata !5389, metadata !DIExpression()), !dbg !5515
  %160 = trunc i24 %79 to i4, !dbg !5618
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !5618

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !5619
  store i64 %162, i64* %20, align 8, !dbg !5622
  br label %177, !dbg !5623

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !5624
  store i64 %164, i64* %20, align 8, !dbg !5627
  br label %177, !dbg !5628

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !5629
  %167 = add i32 %166, 7, !dbg !5629
  %168 = and i32 %167, -8, !dbg !5629
  %169 = inttoptr i32 %168 to i8*, !dbg !5629
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !5629
  call void @llvm.dbg.value(metadata i8* %170, metadata !5389, metadata !DIExpression()), !dbg !5515
  call void @llvm.dbg.value(metadata i8* %170, metadata !5389, metadata !DIExpression()), !dbg !5515
  %171 = inttoptr i32 %168 to double*, !dbg !5629
  %172 = load double, double* %171, align 8, !dbg !5629
  store double %172, double* %19, align 8, !dbg !5629
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5633
  call void @llvm.dbg.value(metadata i8* %174, metadata !5389, metadata !DIExpression()), !dbg !5515
  %175 = bitcast i8* %77 to i8**, !dbg !5633
  %176 = load i8*, i8** %175, align 4, !dbg !5633
  store i8* %176, i8** %18, align 8, !dbg !5636
  br label %177, !dbg !5637

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !5529
  call void @llvm.dbg.value(metadata i8* %178, metadata !5389, metadata !DIExpression()), !dbg !5515
  %179 = and i24 %75, 3, !dbg !5638
  %180 = icmp eq i24 %179, 0, !dbg !5638
  br i1 %180, label %185, label %181, !dbg !5638

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #24, !dbg !5639
  call void @llvm.dbg.value(metadata i32 %182, metadata !5464, metadata !DIExpression()), !dbg !5640
  %183 = icmp slt i32 %182, 0, !dbg !5641
  %184 = add i32 %182, %29, !dbg !5639
  call void @llvm.dbg.value(metadata i32 undef, metadata !5395, metadata !DIExpression()), !dbg !5515
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !5643
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !5644

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #25, !dbg !5645
  call void @llvm.dbg.value(metadata i32 %188, metadata !5468, metadata !DIExpression()), !dbg !5646
  %189 = icmp slt i32 %188, 0, !dbg !5647
  %190 = add i32 %29, 1, !dbg !5645
  call void @llvm.dbg.value(metadata i32 undef, metadata !5395, metadata !DIExpression()), !dbg !5515
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !5649
  call void @llvm.dbg.value(metadata i8* %192, metadata !5456, metadata !DIExpression()), !dbg !5529
  %193 = icmp sgt i32 %76, -1, !dbg !5650
  br i1 %193, label %194, label %196, !dbg !5652

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #25, !dbg !5653
  call void @llvm.dbg.value(metadata i32 %195, metadata !5471, metadata !DIExpression()), !dbg !5655
  br label %241, !dbg !5656

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #25, !dbg !5657
  call void @llvm.dbg.value(metadata i32 %197, metadata !5471, metadata !DIExpression()), !dbg !5655
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !5456, metadata !DIExpression()), !dbg !5529
  %199 = load i64, i64* %20, align 8, !dbg !5659
  %200 = trunc i64 %199 to i8, !dbg !5660
  store i8 %200, i8* %10, align 1, !dbg !5661
  call void @llvm.dbg.value(metadata i8* %23, metadata !5457, metadata !DIExpression()), !dbg !5529
  br label %245, !dbg !5662

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !5663
  %203 = icmp eq i24 %202, 0, !dbg !5663
  %204 = trunc i24 %75 to i8, !dbg !5665
  %205 = shl i8 %204, 1, !dbg !5665
  %206 = and i8 %205, 32, !dbg !5665
  %207 = select i1 %203, i8 %206, i8 43, !dbg !5665
  call void @llvm.dbg.value(metadata i8 %207, metadata !5458, metadata !DIExpression()), !dbg !5529
  %208 = load i64, i64* %20, align 8, !dbg !5666
  call void @llvm.dbg.value(metadata i64 %208, metadata !5396, metadata !DIExpression()), !dbg !5515
  %209 = icmp slt i64 %208, 0, !dbg !5667
  br i1 %209, label %210, label %212, !dbg !5669

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !5458, metadata !DIExpression()), !dbg !5529
  %211 = sub nsw i64 0, %208, !dbg !5670
  store i64 %211, i64* %20, align 8, !dbg !5672
  br label %212, !dbg !5673

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !5529
  call void @llvm.dbg.value(metadata i8 %213, metadata !5458, metadata !DIExpression()), !dbg !5529
  %214 = load i64, i64* %20, align 8, !dbg !5674
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !5675
  call void @llvm.dbg.value(metadata i8* %215, metadata !5456, metadata !DIExpression()), !dbg !5529
  br label %216, !dbg !5676

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !5677
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !5678
  call void @llvm.dbg.value(metadata i8* %218, metadata !5456, metadata !DIExpression()), !dbg !5529
  call void @llvm.dbg.value(metadata i8 %217, metadata !5458, metadata !DIExpression()), !dbg !5529
  call void @llvm.dbg.label(metadata !5514), !dbg !5679
  %219 = icmp sgt i32 %76, -1, !dbg !5680
  br i1 %219, label %222, label %220, !dbg !5681

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !5682
  br label %245, !dbg !5681

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !5684
  %224 = sub i32 %22, %223, !dbg !5684
  call void @llvm.dbg.value(metadata i32 %224, metadata !5473, metadata !DIExpression()), !dbg !5685
  %225 = load i24, i24* %15, align 8, !dbg !5686
  %226 = and i24 %225, -65, !dbg !5686
  store i24 %226, i24* %15, align 8, !dbg !5686
  %227 = icmp ugt i32 %76, %224, !dbg !5687
  br i1 %227, label %228, label %245, !dbg !5689

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !5690
  store i32 %229, i32* %16, align 4, !dbg !5692
  br label %245, !dbg !5693

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !5694
  %232 = icmp eq i8* %231, null, !dbg !5696
  br i1 %232, label %245, label %233, !dbg !5697

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !5698
  %235 = zext i32 %234 to i64, !dbg !5698
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !5700
  call void @llvm.dbg.value(metadata i8* %236, metadata !5456, metadata !DIExpression()), !dbg !5529
  %237 = load i24, i24* %15, align 8, !dbg !5701
  %238 = or i24 %237, 1048576, !dbg !5701
  store i24 %238, i24* %15, align 8, !dbg !5701
  store i8 120, i8* %21, align 1, !dbg !5702
  br label %216, !dbg !5703

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !5704
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #24, !dbg !5707
  br label %363, !dbg !5708

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !5709
  call void @llvm.dbg.value(metadata i32 %242, metadata !5471, metadata !DIExpression()), !dbg !5655
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !5710
  call void @llvm.dbg.value(metadata i32 -1, metadata !5455, metadata !DIExpression()), !dbg !5529
  call void @llvm.dbg.value(metadata i32 %29, metadata !5395, metadata !DIExpression()), !dbg !5515
  call void @llvm.dbg.value(metadata i8* %192, metadata !5456, metadata !DIExpression()), !dbg !5529
  call void @llvm.dbg.value(metadata i8* %243, metadata !5457, metadata !DIExpression()), !dbg !5529
  call void @llvm.dbg.value(metadata i8 0, metadata !5458, metadata !DIExpression()), !dbg !5529
  %244 = icmp eq i8* %192, null, !dbg !5711
  br i1 %244, label %363, label %245, !dbg !5713, !llvm.loop !5525

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !5682
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !5476, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5529
  call void @llvm.dbg.value(metadata i32 0, metadata !5477, metadata !DIExpression()), !dbg !5529
  %250 = zext i8 %249 to i32, !dbg !5714
  %251 = icmp eq i8 %249, 0, !dbg !5716
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !5476, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5529
  call void @llvm.dbg.value(metadata i32 undef, metadata !5476, metadata !DIExpression()), !dbg !5529
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !5476, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5529
  call void @llvm.dbg.value(metadata i32 undef, metadata !5476, metadata !DIExpression()), !dbg !5529
  %252 = icmp sgt i32 %58, 0, !dbg !5717
  br i1 %252, label %253, label %302, !dbg !5718

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !5682
  %255 = icmp eq i24 %254, 0, !dbg !5682
  %256 = ptrtoint i8* %248 to i32, !dbg !5719
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !5476, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5529
  %257 = ptrtoint i8* %247 to i32, !dbg !5719
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !5476, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5529
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !5476, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5529
  %258 = xor i1 %251, true, !dbg !5720
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !5476, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5529
  %259 = sext i1 %258 to i32, !dbg !5720
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !5476, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5529
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !5476, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5529
  %260 = lshr i24 %246, 19, !dbg !5721
  %261 = and i24 %260, 1, !dbg !5721
  %262 = select i1 %255, i24 %261, i24 2, !dbg !5721
  %263 = zext i24 %262 to i32, !dbg !5721
  %264 = add i32 %257, %259, !dbg !5721
  %265 = add i32 %256, %263, !dbg !5721
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !5476, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5529
  %266 = and i24 %246, 4194304, !dbg !5722
  %267 = icmp eq i24 %266, 0, !dbg !5722
  %268 = load i32, i32* %16, align 4, !dbg !5724
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !5476, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5529
  call void @llvm.dbg.value(metadata i32 undef, metadata !5476, metadata !DIExpression()), !dbg !5529
  %269 = load i32, i32* %17, align 8, !dbg !5725
  %270 = select i1 %267, i32 0, i32 %269, !dbg !5725
  call void @llvm.dbg.value(metadata i32 undef, metadata !5476, metadata !DIExpression()), !dbg !5529
  %271 = add i32 %264, %58, !dbg !5725
  %272 = add i32 %265, %268, !dbg !5725
  %273 = add i32 %272, %270, !dbg !5726
  %274 = sub i32 %271, %273, !dbg !5726
  call void @llvm.dbg.value(metadata i32 %274, metadata !5454, metadata !DIExpression()), !dbg !5529
  %275 = and i24 %246, 4, !dbg !5727
  %276 = icmp eq i24 %275, 0, !dbg !5727
  br i1 %276, label %277, label %302, !dbg !5728

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !5478, metadata !DIExpression()), !dbg !5729
  %278 = and i24 %246, 64, !dbg !5730
  %279 = icmp eq i24 %278, 0, !dbg !5730
  %280 = select i1 %279, i1 true, i1 %251, !dbg !5731
  %281 = select i1 %279, i8 %249, i8 0, !dbg !5731
  %282 = select i1 %279, i32 32, i32 48, !dbg !5731
  br i1 %280, label %287, label %283, !dbg !5731

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #25, !dbg !5732
  call void @llvm.dbg.value(metadata i32 %284, metadata !5483, metadata !DIExpression()), !dbg !5733
  %285 = icmp slt i32 %284, 0, !dbg !5734
  %286 = add i32 %29, 1, !dbg !5732
  call void @llvm.dbg.value(metadata i32 undef, metadata !5395, metadata !DIExpression()), !dbg !5515
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !5529
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !5519
  call void @llvm.dbg.value(metadata i32 %290, metadata !5395, metadata !DIExpression()), !dbg !5515
  call void @llvm.dbg.value(metadata i8 undef, metadata !5478, metadata !DIExpression()), !dbg !5729
  call void @llvm.dbg.value(metadata i8 %288, metadata !5458, metadata !DIExpression()), !dbg !5529
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !5736
  %292 = add i32 %291, -1, !dbg !5736
  br label %293, !dbg !5736

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !5737
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !5519
  call void @llvm.dbg.value(metadata i32 %295, metadata !5395, metadata !DIExpression()), !dbg !5515
  call void @llvm.dbg.value(metadata i32 %294, metadata !5454, metadata !DIExpression()), !dbg !5529
  call void @llvm.dbg.value(metadata i32 %294, metadata !5454, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5529
  %296 = icmp sgt i32 %294, 0, !dbg !5738
  br i1 %296, label %297, label %302, !dbg !5736

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !5739
  call void @llvm.dbg.value(metadata i32 %298, metadata !5454, metadata !DIExpression()), !dbg !5529
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #25, !dbg !5740
  call void @llvm.dbg.value(metadata i32 %299, metadata !5489, metadata !DIExpression()), !dbg !5741
  %300 = icmp slt i32 %299, 0, !dbg !5742
  %301 = add i32 %295, 1, !dbg !5740
  call void @llvm.dbg.value(metadata i32 undef, metadata !5395, metadata !DIExpression()), !dbg !5515
  br i1 %300, label %361, label %293, !llvm.loop !5744

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !5529
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !5529
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !5519
  call void @llvm.dbg.value(metadata i32 %305, metadata !5395, metadata !DIExpression()), !dbg !5515
  call void @llvm.dbg.value(metadata i32 %304, metadata !5454, metadata !DIExpression()), !dbg !5529
  call void @llvm.dbg.value(metadata i8 %303, metadata !5458, metadata !DIExpression()), !dbg !5529
  %306 = icmp eq i8 %303, 0, !dbg !5746
  br i1 %306, label %312, label %307, !dbg !5747

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !5748
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #25, !dbg !5749
  call void @llvm.dbg.value(metadata i32 %309, metadata !5492, metadata !DIExpression()), !dbg !5750
  %310 = icmp slt i32 %309, 0, !dbg !5751
  %311 = add i32 %305, 1, !dbg !5749
  call void @llvm.dbg.value(metadata i32 undef, metadata !5395, metadata !DIExpression()), !dbg !5515
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !5519
  call void @llvm.dbg.value(metadata i32 %313, metadata !5395, metadata !DIExpression()), !dbg !5515
  %314 = lshr i24 %246, 20, !dbg !5753
  %315 = lshr i24 %246, 19, !dbg !5754
  %316 = or i24 %314, %315, !dbg !5755
  %317 = and i24 %316, 1, !dbg !5755
  %318 = icmp eq i24 %317, 0, !dbg !5755
  br i1 %318, label %323, label %319, !dbg !5756

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !5757
  call void @llvm.dbg.value(metadata i32 %320, metadata !5496, metadata !DIExpression()), !dbg !5758
  %321 = icmp slt i32 %320, 0, !dbg !5759
  %322 = add i32 %313, 1, !dbg !5757
  call void @llvm.dbg.value(metadata i32 undef, metadata !5395, metadata !DIExpression()), !dbg !5515
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !5519
  call void @llvm.dbg.value(metadata i32 %324, metadata !5395, metadata !DIExpression()), !dbg !5515
  %325 = and i24 %246, 1048576, !dbg !5761
  %326 = icmp eq i24 %325, 0, !dbg !5761
  br i1 %326, label %333, label %327, !dbg !5762

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !5763
  %329 = zext i8 %328 to i32, !dbg !5763
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #25, !dbg !5763
  call void @llvm.dbg.value(metadata i32 %330, metadata !5502, metadata !DIExpression()), !dbg !5764
  %331 = icmp slt i32 %330, 0, !dbg !5765
  %332 = add i32 %324, 1, !dbg !5763
  call void @llvm.dbg.value(metadata i32 undef, metadata !5395, metadata !DIExpression()), !dbg !5515
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !5519
  call void @llvm.dbg.value(metadata i32 %334, metadata !5395, metadata !DIExpression()), !dbg !5515
  %335 = load i32, i32* %16, align 4, !dbg !5767
  call void @llvm.dbg.value(metadata i32 %335, metadata !5477, metadata !DIExpression()), !dbg !5529
  br label %336, !dbg !5768

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !5769
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !5519
  call void @llvm.dbg.value(metadata i32 %338, metadata !5395, metadata !DIExpression()), !dbg !5515
  call void @llvm.dbg.value(metadata i32 %337, metadata !5477, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5529
  %339 = icmp sgt i32 %337, 0, !dbg !5770
  br i1 %339, label %340, label %345, !dbg !5768

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !5771
  call void @llvm.dbg.value(metadata i32 %341, metadata !5477, metadata !DIExpression()), !dbg !5529
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !5772
  call void @llvm.dbg.value(metadata i32 %342, metadata !5506, metadata !DIExpression()), !dbg !5773
  %343 = icmp slt i32 %342, 0, !dbg !5774
  %344 = add i32 %338, 1, !dbg !5772
  call void @llvm.dbg.value(metadata i32 undef, metadata !5395, metadata !DIExpression()), !dbg !5515
  br i1 %343, label %361, label %336, !llvm.loop !5776

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #24, !dbg !5778
  call void @llvm.dbg.value(metadata i32 %346, metadata !5509, metadata !DIExpression()), !dbg !5779
  %347 = icmp slt i32 %346, 0, !dbg !5780
  call void @llvm.dbg.value(metadata i32 undef, metadata !5395, metadata !DIExpression()), !dbg !5515
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !5778
  call void @llvm.dbg.value(metadata i32 %349, metadata !5395, metadata !DIExpression()), !dbg !5515
  call void @llvm.dbg.value(metadata i32 %304, metadata !5454, metadata !DIExpression()), !dbg !5529
  %350 = icmp sgt i32 %304, 0, !dbg !5782
  br i1 %350, label %351, label %363, !dbg !5783

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !5783
  %353 = add i32 %352, %338, !dbg !5783
  br label %354, !dbg !5783

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !5395, metadata !DIExpression()), !dbg !5515
  call void @llvm.dbg.value(metadata i32 %355, metadata !5454, metadata !DIExpression()), !dbg !5529
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #25, !dbg !5784
  call void @llvm.dbg.value(metadata i32 %356, metadata !5511, metadata !DIExpression()), !dbg !5785
  %357 = icmp slt i32 %356, 0, !dbg !5786
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !5788
  call void @llvm.dbg.value(metadata i32 undef, metadata !5395, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5515
  call void @llvm.dbg.value(metadata i32 %359, metadata !5454, metadata !DIExpression()), !dbg !5529
  %360 = icmp sgt i32 %355, 1, !dbg !5782
  br i1 %360, label %354, label %363, !dbg !5783, !llvm.loop !5789

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !5395, metadata !DIExpression()), !dbg !5515
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !5526
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !5519
  call void @llvm.dbg.value(metadata i32 %364, metadata !5395, metadata !DIExpression()), !dbg !5515
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !5526
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !5515
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #23, !dbg !5791
  ret i32 %366, !dbg !5791
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #13

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5792 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5796, metadata !DIExpression()), !dbg !5798
  call void @llvm.dbg.value(metadata i8* %1, metadata !5797, metadata !DIExpression()), !dbg !5798
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !5799
  store i24 0, i24* %3, align 4, !dbg !5799
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5799
  store i8 0, i8* %4, align 1, !dbg !5799
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5799
  store i32 0, i32* %5, align 4, !dbg !5799
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5799
  store i32 0, i32* %6, align 4, !dbg !5799
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5800
  call void @llvm.dbg.value(metadata i8* %7, metadata !5797, metadata !DIExpression()), !dbg !5798
  %8 = load i8, i8* %7, align 1, !dbg !5801
  %9 = icmp eq i8 %8, 37, !dbg !5803
  br i1 %9, label %10, label %12, !dbg !5804

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5805
  call void @llvm.dbg.value(metadata i8* %11, metadata !5797, metadata !DIExpression()), !dbg !5798
  store i8 37, i8* %4, align 1, !dbg !5807
  br label %18, !dbg !5808

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #24, !dbg !5809
  call void @llvm.dbg.value(metadata i8* %13, metadata !5797, metadata !DIExpression()), !dbg !5798
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #24, !dbg !5810
  call void @llvm.dbg.value(metadata i8* %14, metadata !5797, metadata !DIExpression()), !dbg !5798
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #24, !dbg !5811
  call void @llvm.dbg.value(metadata i8* %15, metadata !5797, metadata !DIExpression()), !dbg !5798
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #24, !dbg !5812
  call void @llvm.dbg.value(metadata i8* %16, metadata !5797, metadata !DIExpression()), !dbg !5798
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #24, !dbg !5813
  call void @llvm.dbg.value(metadata i8* %17, metadata !5797, metadata !DIExpression()), !dbg !5798
  br label %18, !dbg !5814

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !5798
  ret i8* %19, !dbg !5815
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !5816 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5820, metadata !DIExpression()), !dbg !5827
  call void @llvm.dbg.value(metadata i8* %1, metadata !5821, metadata !DIExpression()), !dbg !5827
  call void @llvm.dbg.value(metadata i8* %2, metadata !5822, metadata !DIExpression()), !dbg !5827
  call void @llvm.dbg.value(metadata i8* %3, metadata !5823, metadata !DIExpression()), !dbg !5827
  call void @llvm.dbg.value(metadata i32 0, metadata !5824, metadata !DIExpression()), !dbg !5827
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !5828

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !5829
  call void @llvm.dbg.value(metadata i32 %9, metadata !5824, metadata !DIExpression()), !dbg !5827
  call void @llvm.dbg.value(metadata i8* %8, metadata !5822, metadata !DIExpression()), !dbg !5827
  %10 = icmp ult i8* %8, %3, !dbg !5830
  br i1 %10, label %11, label %13, !dbg !5831

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !5832
  br label %17, !dbg !5831

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !5833

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !5834
  %16 = icmp eq i8 %15, 0, !dbg !5833
  br i1 %16, label %24, label %17, !dbg !5828

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !5832
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !5835
  call void @llvm.dbg.value(metadata i8* %19, metadata !5822, metadata !DIExpression()), !dbg !5827
  %20 = zext i8 %18 to i32, !dbg !5836
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #25, !dbg !5837
  call void @llvm.dbg.value(metadata i32 %21, metadata !5825, metadata !DIExpression()), !dbg !5838
  %22 = icmp slt i32 %21, 0, !dbg !5839
  %23 = add i32 %9, 1, !dbg !5841
  call void @llvm.dbg.value(metadata i32 undef, metadata !5824, metadata !DIExpression()), !dbg !5827
  br i1 %22, label %24, label %7, !llvm.loop !5842

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !5827
  ret i32 %25, !dbg !5844
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #14 !dbg !5845 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !5849, metadata !DIExpression()), !dbg !5859
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !5850, metadata !DIExpression()), !dbg !5859
  call void @llvm.dbg.value(metadata i8* %2, metadata !5851, metadata !DIExpression()), !dbg !5859
  call void @llvm.dbg.value(metadata i8* %3, metadata !5852, metadata !DIExpression()), !dbg !5859
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !5860
  %6 = load i8, i8* %5, align 1, !dbg !5860
  %7 = zext i8 %6 to i32, !dbg !5861
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #24, !dbg !5862
  %9 = icmp eq i32 %8, 0, !dbg !5862
  call void @llvm.dbg.value(metadata i1 %9, metadata !5853, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5859
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #24, !dbg !5863
  call void @llvm.dbg.value(metadata i32 %10, metadata !5854, metadata !DIExpression()), !dbg !5859
  %11 = ptrtoint i8* %3 to i32, !dbg !5864
  %12 = ptrtoint i8* %2 to i32, !dbg !5864
  %13 = sub i32 %11, %12, !dbg !5864
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !5865
  call void @llvm.dbg.value(metadata i8* %14, metadata !5856, metadata !DIExpression()), !dbg !5859
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !5866

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !5859
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !5849, metadata !DIExpression()), !dbg !5859
  call void @llvm.dbg.value(metadata i8* %18, metadata !5856, metadata !DIExpression()), !dbg !5859
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !5867
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !5868
  call void @llvm.dbg.value(metadata i32 %25, metadata !5857, metadata !DIExpression()), !dbg !5869
  %26 = icmp ult i32 %25, 10, !dbg !5870
  %27 = select i1 %26, i32 48, i32 %16, !dbg !5871
  %28 = add i32 %27, %25, !dbg !5869
  %29 = trunc i32 %28 to i8, !dbg !5871
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !5872
  call void @llvm.dbg.value(metadata i8* %30, metadata !5856, metadata !DIExpression()), !dbg !5859
  store i8 %29, i8* %30, align 1, !dbg !5873
  call void @llvm.dbg.value(metadata i64 %22, metadata !5849, metadata !DIExpression()), !dbg !5859
  %31 = icmp uge i64 %19, %15, !dbg !5874
  %32 = icmp ugt i8* %30, %2, !dbg !5875
  %33 = and i1 %31, %32, !dbg !5875
  br i1 %33, label %17, label %34, !dbg !5876, !llvm.loop !5877

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !5879
  %36 = load i24, i24* %35, align 4, !dbg !5879
  %37 = and i24 %36, 32, !dbg !5879
  %38 = icmp eq i24 %37, 0, !dbg !5879
  br i1 %38, label %44, label %39, !dbg !5881

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !5882

40:                                               ; preds = %39
  br label %41, !dbg !5884

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !5888
  store i24 %43, i24* %35, align 4, !dbg !5888
  br label %44, !dbg !5889

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !5889
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #11 !dbg !5890 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5896, metadata !DIExpression()), !dbg !5899
  call void @llvm.dbg.value(metadata i8* %1, metadata !5897, metadata !DIExpression()), !dbg !5899
  call void @llvm.dbg.value(metadata i32 %2, metadata !5898, metadata !DIExpression()), !dbg !5899
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5900
  %5 = load i24, i24* %4, align 4, !dbg !5900
  %6 = lshr i24 %5, 11, !dbg !5900
  %7 = and i24 %6, 15, !dbg !5900
  %8 = zext i24 %7 to i32, !dbg !5900
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !5901

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !5902
  store i32 %2, i32* %10, align 4, !dbg !5904
  br label %28, !dbg !5905

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !5906
  store i8 %12, i8* %1, align 1, !dbg !5907
  br label %28, !dbg !5908

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !5909
  %15 = bitcast i8* %1 to i16*, !dbg !5910
  store i16 %14, i16* %15, align 2, !dbg !5911
  br label %28, !dbg !5912

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !5913
  store i32 %2, i32* %17, align 4, !dbg !5914
  br label %28, !dbg !5915

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !5916
  %20 = bitcast i8* %1 to i64*, !dbg !5917
  store i64 %19, i64* %20, align 8, !dbg !5918
  br label %28, !dbg !5919

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !5920
  %23 = bitcast i8* %1 to i64*, !dbg !5921
  store i64 %22, i64* %23, align 8, !dbg !5922
  br label %28, !dbg !5923

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !5924
  store i32 %2, i32* %25, align 4, !dbg !5925
  br label %28, !dbg !5926

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !5927
  store i32 %2, i32* %27, align 4, !dbg !5928
  br label %28, !dbg !5929

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !5930
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #4 !dbg !5931 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5934, metadata !DIExpression()), !dbg !5935
  %2 = add i32 %0, -65, !dbg !5936
  %3 = icmp ult i32 %2, 26, !dbg !5937
  %4 = zext i1 %3 to i32, !dbg !5937
  ret i32 %4, !dbg !5938
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #4 !dbg !5939 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5943, metadata !DIExpression()), !dbg !5944
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !5945

2:                                                ; preds = %1
  br label %4, !dbg !5946

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !5948

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !5949
  ret i32 %5, !dbg !5950
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #14 !dbg !5951 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5953, metadata !DIExpression()), !dbg !5956
  call void @llvm.dbg.value(metadata i8* %1, metadata !5954, metadata !DIExpression()), !dbg !5956
  call void @llvm.dbg.value(metadata i8 1, metadata !5955, metadata !DIExpression()), !dbg !5956
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !5957

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !5955, metadata !DIExpression()), !dbg !5956
  call void @llvm.dbg.value(metadata i8* %5, metadata !5954, metadata !DIExpression()), !dbg !5956
  %6 = load i8, i8* %5, align 1, !dbg !5958
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !5960

7:                                                ; preds = %4
  br label %11, !dbg !5961

8:                                                ; preds = %4
  br label %11, !dbg !5963

9:                                                ; preds = %4
  br label %11, !dbg !5964

10:                                               ; preds = %4
  br label %11, !dbg !5965

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5966
  %14 = or i24 %13, %12, !dbg !5966
  store i24 %14, i24* %3, align 4, !dbg !5966
  call void @llvm.dbg.value(metadata i8 poison, metadata !5955, metadata !DIExpression()), !dbg !5956
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !5954, metadata !DIExpression()), !dbg !5956
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !5955, metadata !DIExpression()), !dbg !5956
  call void @llvm.dbg.value(metadata i8* %15, metadata !5954, metadata !DIExpression()), !dbg !5956
  %17 = load i24, i24* %3, align 4, !dbg !5967
  %18 = and i24 %17, 68, !dbg !5969
  %19 = icmp eq i24 %18, 68, !dbg !5969
  br i1 %19, label %20, label %22, !dbg !5969

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5970
  store i24 %21, i24* %3, align 4, !dbg !5970
  br label %22, !dbg !5972

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5973
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5974 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5976, metadata !DIExpression()), !dbg !5980
  call void @llvm.dbg.value(metadata i8* %1, metadata !5977, metadata !DIExpression()), !dbg !5980
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5981
  %5 = load i24, i24* %4, align 4, !dbg !5982
  %6 = or i24 %5, 128, !dbg !5982
  store i24 %6, i24* %4, align 4, !dbg !5982
  call void @llvm.dbg.value(metadata i8* %1, metadata !5977, metadata !DIExpression()), !dbg !5980
  %7 = load i8, i8* %1, align 1, !dbg !5983
  %8 = icmp eq i8 %7, 42, !dbg !5985
  br i1 %8, label %9, label %12, !dbg !5986

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5987
  store i24 %10, i24* %4, align 4, !dbg !5987
  call void @llvm.dbg.value(metadata i8* %1, metadata !5977, metadata !DIExpression()), !dbg !5980
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5989
  call void @llvm.dbg.value(metadata i8* %11, metadata !5977, metadata !DIExpression()), !dbg !5980
  store i8* %11, i8** %3, align 4, !dbg !5989
  br label %29, !dbg !5990

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5978, metadata !DIExpression()), !dbg !5980
  call void @llvm.dbg.value(metadata i8** %3, metadata !5977, metadata !DIExpression(DW_OP_deref)), !dbg !5980
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !5991
  call void @llvm.dbg.value(metadata i32 %13, metadata !5979, metadata !DIExpression()), !dbg !5980
  %14 = load i8*, i8** %3, align 4, !dbg !5992
  call void @llvm.dbg.value(metadata i8* %14, metadata !5977, metadata !DIExpression()), !dbg !5980
  %15 = icmp eq i8* %14, %1, !dbg !5994
  br i1 %15, label %29, label %16, !dbg !5995

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5996
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5998
  store i32 %13, i32* %18, align 4, !dbg !5999
  %19 = lshr i32 %13, 31, !dbg !6000
  %20 = lshr i24 %17, 1, !dbg !6001
  %21 = and i24 %20, 1, !dbg !6001
  %22 = zext i24 %21 to i32, !dbg !6001
  %23 = or i32 %19, %22, !dbg !6001
  %24 = trunc i32 %23 to i24, !dbg !6001
  %25 = shl nuw nsw i24 %24, 1, !dbg !6001
  %26 = and i24 %17, -131, !dbg !6001
  %27 = or i24 %26, 128, !dbg !6001
  %28 = or i24 %25, %27, !dbg !6001
  store i24 %28, i24* %4, align 4, !dbg !6001
  br label %29, !dbg !6002

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5980
  ret i8* %30, !dbg !6003
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !6004 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6006, metadata !DIExpression()), !dbg !6009
  call void @llvm.dbg.value(metadata i8* %1, metadata !6007, metadata !DIExpression()), !dbg !6009
  %4 = load i8, i8* %1, align 1, !dbg !6010
  %5 = icmp eq i8 %4, 46, !dbg !6011
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !6012
  %7 = load i24, i24* %6, align 4, !dbg !6013
  %8 = select i1 %5, i24 512, i24 0, !dbg !6013
  %9 = and i24 %7, -513, !dbg !6013
  %10 = or i24 %9, %8, !dbg !6013
  store i24 %10, i24* %6, align 4, !dbg !6013
  br i1 %5, label %11, label %32, !dbg !6014

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !6007, metadata !DIExpression()), !dbg !6009
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6015
  call void @llvm.dbg.value(metadata i8* %12, metadata !6007, metadata !DIExpression()), !dbg !6009
  store i8* %12, i8** %3, align 4, !dbg !6015
  %13 = load i8, i8* %12, align 1, !dbg !6016
  %14 = icmp eq i8 %13, 42, !dbg !6018
  br i1 %14, label %15, label %18, !dbg !6019

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !6020
  store i24 %16, i24* %6, align 4, !dbg !6020
  call void @llvm.dbg.value(metadata i8* %12, metadata !6007, metadata !DIExpression()), !dbg !6009
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6022
  call void @llvm.dbg.value(metadata i8* %17, metadata !6007, metadata !DIExpression()), !dbg !6009
  store i8* %17, i8** %3, align 4, !dbg !6022
  br label %32, !dbg !6023

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !6007, metadata !DIExpression(DW_OP_deref)), !dbg !6009
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !6024
  call void @llvm.dbg.value(metadata i32 %19, metadata !6008, metadata !DIExpression()), !dbg !6009
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !6025
  store i32 %19, i32* %20, align 4, !dbg !6026
  %21 = lshr i32 %19, 31, !dbg !6027
  %22 = load i24, i24* %6, align 4, !dbg !6028
  %23 = lshr i24 %22, 1, !dbg !6028
  %24 = and i24 %23, 1, !dbg !6028
  %25 = zext i24 %24 to i32, !dbg !6028
  %26 = or i32 %21, %25, !dbg !6028
  %27 = trunc i32 %26 to i24, !dbg !6028
  %28 = shl nuw nsw i24 %27, 1, !dbg !6028
  %29 = and i24 %22, -3, !dbg !6028
  %30 = or i24 %28, %29, !dbg !6028
  store i24 %30, i24* %6, align 4, !dbg !6028
  %31 = load i8*, i8** %3, align 4, !dbg !6029
  call void @llvm.dbg.value(metadata i8* %31, metadata !6007, metadata !DIExpression()), !dbg !6009
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !6009
  ret i8* %33, !dbg !6030
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #11 !dbg !6031 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6033, metadata !DIExpression()), !dbg !6035
  call void @llvm.dbg.value(metadata i8* %1, metadata !6034, metadata !DIExpression()), !dbg !6035
  %3 = load i8, i8* %1, align 1, !dbg !6036
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !6037

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6038
  call void @llvm.dbg.value(metadata i8* %5, metadata !6034, metadata !DIExpression()), !dbg !6035
  %6 = load i8, i8* %5, align 1, !dbg !6041
  %7 = icmp eq i8 %6, 104, !dbg !6042
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !6043
  %9 = load i24, i24* %8, align 4, !dbg !6043
  %10 = and i24 %9, -30721, !dbg !6043
  br i1 %7, label %11, label %14, !dbg !6044

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !6045
  store i24 %12, i24* %8, align 4, !dbg !6045
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6047
  call void @llvm.dbg.value(metadata i8* %13, metadata !6034, metadata !DIExpression()), !dbg !6035
  br label %56, !dbg !6048

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !6049
  store i24 %15, i24* %8, align 4, !dbg !6049
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6051
  call void @llvm.dbg.value(metadata i8* %17, metadata !6034, metadata !DIExpression()), !dbg !6035
  %18 = load i8, i8* %17, align 1, !dbg !6053
  %19 = icmp eq i8 %18, 108, !dbg !6054
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !6055
  %21 = load i24, i24* %20, align 4, !dbg !6055
  %22 = and i24 %21, -30721, !dbg !6055
  br i1 %19, label %23, label %26, !dbg !6056

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !6057
  store i24 %24, i24* %20, align 4, !dbg !6057
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6059
  call void @llvm.dbg.value(metadata i8* %25, metadata !6034, metadata !DIExpression()), !dbg !6035
  br label %56, !dbg !6060

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !6061
  store i24 %27, i24* %20, align 4, !dbg !6061
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !6063
  %30 = load i24, i24* %29, align 4, !dbg !6064
  %31 = and i24 %30, -30721, !dbg !6064
  %32 = or i24 %31, 10240, !dbg !6064
  store i24 %32, i24* %29, align 4, !dbg !6064
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6065
  call void @llvm.dbg.value(metadata i8* %33, metadata !6034, metadata !DIExpression()), !dbg !6035
  br label %56, !dbg !6066

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !6067
  %36 = load i24, i24* %35, align 4, !dbg !6068
  %37 = and i24 %36, -30721, !dbg !6068
  %38 = or i24 %37, 12288, !dbg !6068
  store i24 %38, i24* %35, align 4, !dbg !6068
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6069
  call void @llvm.dbg.value(metadata i8* %39, metadata !6034, metadata !DIExpression()), !dbg !6035
  br label %56, !dbg !6070

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !6071
  %42 = load i24, i24* %41, align 4, !dbg !6072
  %43 = and i24 %42, -30721, !dbg !6072
  %44 = or i24 %43, 14336, !dbg !6072
  store i24 %44, i24* %41, align 4, !dbg !6072
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6073
  call void @llvm.dbg.value(metadata i8* %45, metadata !6034, metadata !DIExpression()), !dbg !6035
  br label %56, !dbg !6074

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !6075
  %48 = load i24, i24* %47, align 4, !dbg !6076
  %49 = and i24 %48, -30723, !dbg !6076
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6077
  call void @llvm.dbg.value(metadata i8* %50, metadata !6034, metadata !DIExpression()), !dbg !6035
  %51 = or i24 %49, 16386, !dbg !6078
  store i24 %51, i24* %47, align 4, !dbg !6078
  br label %56, !dbg !6079

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !6080
  %54 = load i24, i24* %53, align 4, !dbg !6081
  %55 = and i24 %54, -30721, !dbg !6081
  store i24 %55, i24* %53, align 4, !dbg !6081
  br label %56, !dbg !6082

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !6034, metadata !DIExpression()), !dbg !6035
  ret i8* %57, !dbg !6083
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #11 !dbg !6084 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6086, metadata !DIExpression()), !dbg !6091
  call void @llvm.dbg.value(metadata i8* %1, metadata !6087, metadata !DIExpression()), !dbg !6091
  call void @llvm.dbg.value(metadata i8 0, metadata !6088, metadata !DIExpression()), !dbg !6091
  call void @llvm.dbg.value(metadata i8* %1, metadata !6087, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6091
  %3 = load i8, i8* %1, align 1, !dbg !6092
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !6093
  store i8 %3, i8* %4, align 1, !dbg !6094
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !6095

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !6096

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !6097
  %9 = load i24, i24* %8, align 4, !dbg !6097
  %10 = and i24 %9, -458753, !dbg !6097
  %11 = or i24 %10, %7, !dbg !6097
  call void @llvm.dbg.label(metadata !6089), !dbg !6098
  %12 = and i24 %9, 30720, !dbg !6099
  %13 = icmp eq i24 %12, 16384, !dbg !6099
  %14 = zext i1 %13 to i24, !dbg !6101
  %15 = or i24 %11, %14, !dbg !6101
  %16 = icmp eq i8 %3, 99, !dbg !6102
  br i1 %16, label %17, label %43, !dbg !6104

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !6105
  %19 = icmp ne i24 %18, 0, !dbg !6105
  call void @llvm.dbg.value(metadata i1 %19, metadata !6088, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6091
  br label %43, !dbg !6107

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !6108
  %22 = load i24, i24* %21, align 4, !dbg !6109
  %23 = and i24 %22, -458753, !dbg !6109
  %24 = or i24 %23, 262144, !dbg !6109
  call void @llvm.dbg.value(metadata i8 1, metadata !6088, metadata !DIExpression()), !dbg !6091
  br label %43, !dbg !6110

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !6113
  %27 = load i24, i24* %26, align 4, !dbg !6114
  %28 = and i24 %27, -458753, !dbg !6114
  %29 = or i24 %28, 196608, !dbg !6114
  %30 = and i24 %27, 30720, !dbg !6115
  %31 = icmp eq i24 %30, 16384, !dbg !6115
  br label %43, !dbg !6117

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !6118
  %34 = load i24, i24* %33, align 4, !dbg !6119
  %35 = and i24 %34, -458753, !dbg !6119
  %36 = or i24 %35, 196608, !dbg !6119
  %37 = and i24 %34, 30720, !dbg !6120
  %38 = icmp ne i24 %37, 0, !dbg !6120
  br label %43, !dbg !6122

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !6123
  %41 = load i24, i24* %40, align 4, !dbg !6124
  %42 = or i24 %41, 1, !dbg !6124
  br label %43, !dbg !6125

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !6126
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !6127
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6128
  call void @llvm.dbg.value(metadata i8* %48, metadata !6087, metadata !DIExpression()), !dbg !6091
  call void @llvm.dbg.value(metadata i8 poison, metadata !6088, metadata !DIExpression()), !dbg !6091
  %49 = lshr i24 %44, 1, !dbg !6126
  %50 = and i24 %49, 1, !dbg !6126
  %51 = zext i24 %50 to i32, !dbg !6126
  %52 = or i32 %51, %47, !dbg !6126
  %53 = trunc i32 %52 to i24, !dbg !6126
  %54 = shl nuw nsw i24 %53, 1, !dbg !6126
  %55 = and i24 %44, -3, !dbg !6126
  %56 = or i24 %54, %55, !dbg !6126
  store i24 %56, i24* %46, align 4, !dbg !6126
  ret i8* %48, !dbg !6129
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #14 !dbg !6130 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !6134, metadata !DIExpression()), !dbg !6137
  %2 = load i8*, i8** %0, align 4, !dbg !6138
  call void @llvm.dbg.value(metadata i8* %2, metadata !6135, metadata !DIExpression()), !dbg !6137
  call void @llvm.dbg.value(metadata i32 0, metadata !6136, metadata !DIExpression()), !dbg !6137
  %3 = load i8, i8* %2, align 1, !dbg !6139
  %4 = zext i8 %3 to i32, !dbg !6140
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #24, !dbg !6141
  %6 = icmp eq i32 %5, 0, !dbg !6142
  br i1 %6, label %19, label %7, !dbg !6142

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6136, metadata !DIExpression()), !dbg !6137
  call void @llvm.dbg.value(metadata i8* %10, metadata !6135, metadata !DIExpression()), !dbg !6137
  %11 = mul i32 %9, 10, !dbg !6143
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6145
  call void @llvm.dbg.value(metadata i8* %12, metadata !6135, metadata !DIExpression()), !dbg !6137
  %13 = add i32 %11, -48, !dbg !6146
  %14 = add i32 %13, %8, !dbg !6147
  call void @llvm.dbg.value(metadata i32 %14, metadata !6136, metadata !DIExpression()), !dbg !6137
  %15 = load i8, i8* %12, align 1, !dbg !6139
  %16 = zext i8 %15 to i32, !dbg !6140
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #24, !dbg !6141
  %18 = icmp eq i32 %17, 0, !dbg !6142
  br i1 %18, label %19, label %7, !dbg !6142, !llvm.loop !6148

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !6137
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !6137
  store i8* %20, i8** %0, align 4, !dbg !6150
  ret i32 %21, !dbg !6151
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #4 !dbg !6152 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6154, metadata !DIExpression()), !dbg !6155
  %2 = add i32 %0, -48, !dbg !6156
  %3 = icmp ult i32 %2, 10, !dbg !6157
  %4 = zext i1 %3 to i32, !dbg !6157
  ret i32 %4, !dbg !6158
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !6159 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #23, !dbg !6161, !srcloc !6162
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #23, !dbg !6163, !srcloc !6164
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #23, !dbg !6165, !srcloc !6166
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #23, !dbg !6167, !srcloc !6168
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #23, !dbg !6169, !srcloc !6170
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,97\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #23, !dbg !6171, !srcloc !6172
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #23, !dbg !6173, !srcloc !6174
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #23, !dbg !6175, !srcloc !6176
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,512\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #23, !dbg !6177, !srcloc !6178
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #23, !dbg !6179, !srcloc !6180
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #23, !dbg !6181, !srcloc !6182
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #23, !dbg !6183, !srcloc !6184
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #23, !dbg !6185, !srcloc !6186
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #23, !dbg !6187, !srcloc !6188
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #23, !dbg !6189, !srcloc !6190
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #23, !dbg !6191, !srcloc !6192
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #23, !dbg !6193, !srcloc !6194
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DOMAIN_NAME\0A\09.equ\09CONFIG_LOG_DOMAIN_NAME,1\0A\09.type\09CONFIG_LOG_DOMAIN_NAME,%object", ""() #23, !dbg !6195, !srcloc !6196
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #23, !dbg !6197, !srcloc !6198
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #23, !dbg !6199, !srcloc !6200
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #23, !dbg !6201, !srcloc !6202
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #23, !dbg !6203, !srcloc !6204
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #23, !dbg !6205, !srcloc !6206
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #23, !dbg !6207, !srcloc !6208
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #23, !dbg !6209, !srcloc !6210
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #23, !dbg !6211, !srcloc !6212
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #23, !dbg !6213, !srcloc !6214
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #23, !dbg !6215, !srcloc !6216
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #23, !dbg !6217, !srcloc !6218
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #23, !dbg !6219, !srcloc !6220
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,%object", ""() #23, !dbg !6221, !srcloc !6222
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #23, !dbg !6223, !srcloc !6224
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #23, !dbg !6225, !srcloc !6226
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #23, !dbg !6227, !srcloc !6228
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LIS3MDL_MAGN_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LIS3MDL_MAGN_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LIS3MDL_MAGN_ENABLED,%object", ""() #23, !dbg !6229, !srcloc !6230
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,%object", ""() #23, !dbg !6231, !srcloc !6232
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,%object", ""() #23, !dbg !6233, !srcloc !6234
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,%object", ""() #23, !dbg !6235, !srcloc !6236
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #23, !dbg !6237, !srcloc !6238
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !6239, !srcloc !6240
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #23, !dbg !6241, !srcloc !6242
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #23, !dbg !6243, !srcloc !6244
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #23, !dbg !6245, !srcloc !6246
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,%object", ""() #23, !dbg !6247, !srcloc !6248
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #23, !dbg !6249, !srcloc !6250
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #23, !dbg !6251, !srcloc !6252
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED,%object", ""() #23, !dbg !6253, !srcloc !6254
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #23, !dbg !6255, !srcloc !6256
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #23, !dbg !6257, !srcloc !6258
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #23, !dbg !6259, !srcloc !6260
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED,%object", ""() #23, !dbg !6261, !srcloc !6262
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #23, !dbg !6263, !srcloc !6264
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #23, !dbg !6265, !srcloc !6266
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !6267, !srcloc !6268
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #23, !dbg !6269, !srcloc !6270
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #23, !dbg !6271, !srcloc !6272
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_VND_SENSOR_ENABLED\0A\09.equ\09CONFIG_DT_HAS_VND_SENSOR_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_VND_SENSOR_ENABLED,%object", ""() #23, !dbg !6273, !srcloc !6274
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #23, !dbg !6275, !srcloc !6276
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #23, !dbg !6277, !srcloc !6278
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #23, !dbg !6279, !srcloc !6280
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #23, !dbg !6281, !srcloc !6282
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,%object", ""() #23, !dbg !6283, !srcloc !6284
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,3\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,%object", ""() #23, !dbg !6285, !srcloc !6286
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #23, !dbg !6287, !srcloc !6288
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #23, !dbg !6289, !srcloc !6290
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #23, !dbg !6291, !srcloc !6292
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #23, !dbg !6293, !srcloc !6294
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #23, !dbg !6295, !srcloc !6296
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #23, !dbg !6297, !srcloc !6298
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #23, !dbg !6299, !srcloc !6300
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #23, !dbg !6301, !srcloc !6302
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #23, !dbg !6303, !srcloc !6304
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #23, !dbg !6305, !srcloc !6306
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #23, !dbg !6307, !srcloc !6308
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #23, !dbg !6309, !srcloc !6310
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #23, !dbg !6311, !srcloc !6312
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #23, !dbg !6313, !srcloc !6314
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #23, !dbg !6315, !srcloc !6316
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #23, !dbg !6317, !srcloc !6318
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #23, !dbg !6319, !srcloc !6320
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #23, !dbg !6321, !srcloc !6322
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #23, !dbg !6323, !srcloc !6324
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #23, !dbg !6325, !srcloc !6326
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #23, !dbg !6327, !srcloc !6328
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #23, !dbg !6329, !srcloc !6330
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #23, !dbg !6331, !srcloc !6332
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #23, !dbg !6333, !srcloc !6334
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #23, !dbg !6335, !srcloc !6336
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #23, !dbg !6337, !srcloc !6338
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #23, !dbg !6339, !srcloc !6340
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #23, !dbg !6341, !srcloc !6342
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #23, !dbg !6343, !srcloc !6344
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_STM32_SENSOR_MEZ\0A\09.equ\09CONFIG_BOARD_96B_STM32_SENSOR_MEZ,1\0A\09.type\09CONFIG_BOARD_96B_STM32_SENSOR_MEZ,%object", ""() #23, !dbg !6345, !srcloc !6346
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #23, !dbg !6347, !srcloc !6348
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #23, !dbg !6349, !srcloc !6350
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #23, !dbg !6351, !srcloc !6352
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #23, !dbg !6353, !srcloc !6354
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #23, !dbg !6355, !srcloc !6356
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F446XX\0A\09.equ\09CONFIG_SOC_STM32F446XX,1\0A\09.type\09CONFIG_SOC_STM32F446XX,%object", ""() #23, !dbg !6357, !srcloc !6358
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_SOC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_SOC_LOG_LEVEL_INF,%object", ""() #23, !dbg !6359, !srcloc !6360
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL\0A\09.equ\09CONFIG_SOC_LOG_LEVEL,3\0A\09.type\09CONFIG_SOC_LOG_LEVEL,%object", ""() #23, !dbg !6361, !srcloc !6362
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #23, !dbg !6363, !srcloc !6364
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #23, !dbg !6365, !srcloc !6366
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #23, !dbg !6367, !srcloc !6368
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #23, !dbg !6369, !srcloc !6370
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #23, !dbg !6371, !srcloc !6372
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #23, !dbg !6373, !srcloc !6374
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #23, !dbg !6375, !srcloc !6376
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #23, !dbg !6377, !srcloc !6378
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #23, !dbg !6379, !srcloc !6380
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #23, !dbg !6381, !srcloc !6382
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #23, !dbg !6383, !srcloc !6384
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #23, !dbg !6385, !srcloc !6386
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #23, !dbg !6387, !srcloc !6388
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #23, !dbg !6389, !srcloc !6390
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #23, !dbg !6391, !srcloc !6392
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #23, !dbg !6393, !srcloc !6394
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #23, !dbg !6395, !srcloc !6396
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #23, !dbg !6397, !srcloc !6398
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #23, !dbg !6399, !srcloc !6400
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #23, !dbg !6401, !srcloc !6402
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #23, !dbg !6403, !srcloc !6404
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #23, !dbg !6405, !srcloc !6406
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #23, !dbg !6407, !srcloc !6408
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #23, !dbg !6409, !srcloc !6410
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #23, !dbg !6411, !srcloc !6412
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #23, !dbg !6413, !srcloc !6414
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #23, !dbg !6415, !srcloc !6416
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #23, !dbg !6417, !srcloc !6418
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARCH_LOG_LEVEL_INF,%object", ""() #23, !dbg !6419, !srcloc !6420
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL,3\0A\09.type\09CONFIG_ARCH_LOG_LEVEL,%object", ""() #23, !dbg !6421, !srcloc !6422
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #23, !dbg !6423, !srcloc !6424
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,128\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #23, !dbg !6425, !srcloc !6426
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #23, !dbg !6427, !srcloc !6428
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #23, !dbg !6429, !srcloc !6430
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #23, !dbg !6431, !srcloc !6432
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #23, !dbg !6433, !srcloc !6434
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #23, !dbg !6435, !srcloc !6436
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #23, !dbg !6437, !srcloc !6438
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #23, !dbg !6439, !srcloc !6440
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #23, !dbg !6441, !srcloc !6442
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #23, !dbg !6443, !srcloc !6444
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #23, !dbg !6445, !srcloc !6446
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #23, !dbg !6447, !srcloc !6448
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #23, !dbg !6449, !srcloc !6450
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #23, !dbg !6451, !srcloc !6452
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #23, !dbg !6453, !srcloc !6454
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #23, !dbg !6455, !srcloc !6456
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #23, !dbg !6457, !srcloc !6458
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #23, !dbg !6459, !srcloc !6460
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #23, !dbg !6461, !srcloc !6462
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #23, !dbg !6463, !srcloc !6464
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #23, !dbg !6465, !srcloc !6466
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #23, !dbg !6467, !srcloc !6468
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #23, !dbg !6469, !srcloc !6470
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !6471, !srcloc !6472
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #23, !dbg !6473, !srcloc !6474
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #23, !dbg !6475, !srcloc !6476
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #23, !dbg !6477, !srcloc !6478
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #23, !dbg !6479, !srcloc !6480
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #23, !dbg !6481, !srcloc !6482
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #23, !dbg !6483, !srcloc !6484
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL_INF\0A\09.equ\09CONFIG_MPU_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_MPU_LOG_LEVEL_INF,%object", ""() #23, !dbg !6485, !srcloc !6486
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL\0A\09.equ\09CONFIG_MPU_LOG_LEVEL,3\0A\09.type\09CONFIG_MPU_LOG_LEVEL,%object", ""() #23, !dbg !6487, !srcloc !6488
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #23, !dbg !6489, !srcloc !6490
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #23, !dbg !6491, !srcloc !6492
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #23, !dbg !6493, !srcloc !6494
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL_INF,%object", ""() #23, !dbg !6495, !srcloc !6496
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL,3\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL,%object", ""() #23, !dbg !6497, !srcloc !6498
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #23, !dbg !6499, !srcloc !6500
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #23, !dbg !6501, !srcloc !6502
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #23, !dbg !6503, !srcloc !6504
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #23, !dbg !6505, !srcloc !6506
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #23, !dbg !6507, !srcloc !6508
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #23, !dbg !6509, !srcloc !6510
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #23, !dbg !6511, !srcloc !6512
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #23, !dbg !6513, !srcloc !6514
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #23, !dbg !6515, !srcloc !6516
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #23, !dbg !6517, !srcloc !6518
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #23, !dbg !6519, !srcloc !6520
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #23, !dbg !6521, !srcloc !6522
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #23, !dbg !6523, !srcloc !6524
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #23, !dbg !6525, !srcloc !6526
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #23, !dbg !6527, !srcloc !6528
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #23, !dbg !6529, !srcloc !6530
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #23, !dbg !6531, !srcloc !6532
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #23, !dbg !6533, !srcloc !6534
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #23, !dbg !6535, !srcloc !6536
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #23, !dbg !6537, !srcloc !6538
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #23, !dbg !6539, !srcloc !6540
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #23, !dbg !6541, !srcloc !6542
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #23, !dbg !6543, !srcloc !6544
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #23, !dbg !6545, !srcloc !6546
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #23, !dbg !6547, !srcloc !6548
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #23, !dbg !6549, !srcloc !6550
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #23, !dbg !6551, !srcloc !6552
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #23, !dbg !6553, !srcloc !6554
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #23, !dbg !6555, !srcloc !6556
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #23, !dbg !6557, !srcloc !6558
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #23, !dbg !6559, !srcloc !6560
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #23, !dbg !6561, !srcloc !6562
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #23, !dbg !6563, !srcloc !6564
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #23, !dbg !6565, !srcloc !6566
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #23, !dbg !6567, !srcloc !6568
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #23, !dbg !6569, !srcloc !6570
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !6571, !srcloc !6572
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #23, !dbg !6573, !srcloc !6574
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #23, !dbg !6575, !srcloc !6576
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #23, !dbg !6577, !srcloc !6578
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #23, !dbg !6579, !srcloc !6580
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #23, !dbg !6581, !srcloc !6582
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,%object", ""() #23, !dbg !6583, !srcloc !6584
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL,%object", ""() #23, !dbg !6585, !srcloc !6586
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #23, !dbg !6587, !srcloc !6588
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #23, !dbg !6589, !srcloc !6590
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #23, !dbg !6591, !srcloc !6592
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_ASYNC\0A\09.equ\09CONFIG_SERIAL_SUPPORT_ASYNC,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_ASYNC,%object", ""() #23, !dbg !6593, !srcloc !6594
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #23, !dbg !6595, !srcloc !6596
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_LOG_LEVEL_INF,%object", ""() #23, !dbg !6597, !srcloc !6598
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL\0A\09.equ\09CONFIG_UART_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_LOG_LEVEL,%object", ""() #23, !dbg !6599, !srcloc !6600
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #23, !dbg !6601, !srcloc !6602
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #23, !dbg !6603, !srcloc !6604
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #23, !dbg !6605, !srcloc !6606
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_INTC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_INTC_LOG_LEVEL_INF,%object", ""() #23, !dbg !6607, !srcloc !6608
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL\0A\09.equ\09CONFIG_INTC_LOG_LEVEL,3\0A\09.type\09CONFIG_INTC_LOG_LEVEL,%object", ""() #23, !dbg !6609, !srcloc !6610
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #23, !dbg !6611, !srcloc !6612
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #23, !dbg !6613, !srcloc !6614
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #23, !dbg !6615, !srcloc !6616
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #23, !dbg !6617, !srcloc !6618
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #23, !dbg !6619, !srcloc !6620
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #23, !dbg !6621, !srcloc !6622
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #23, !dbg !6623, !srcloc !6624
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #23, !dbg !6625, !srcloc !6626
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #23, !dbg !6627, !srcloc !6628
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #23, !dbg !6629, !srcloc !6630
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #23, !dbg !6631, !srcloc !6632
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #23, !dbg !6633, !srcloc !6634
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #23, !dbg !6635, !srcloc !6636
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #23, !dbg !6637, !srcloc !6638
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #23, !dbg !6639, !srcloc !6640
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #23, !dbg !6641, !srcloc !6642
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_GPIO_LOG_LEVEL_INF,%object", ""() #23, !dbg !6643, !srcloc !6644
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL,3\0A\09.type\09CONFIG_GPIO_LOG_LEVEL,%object", ""() #23, !dbg !6645, !srcloc !6646
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #23, !dbg !6647, !srcloc !6648
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL_INF\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL_INF,%object", ""() #23, !dbg !6649, !srcloc !6650
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL,3\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL,%object", ""() #23, !dbg !6651, !srcloc !6652
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,%object", ""() #23, !dbg !6653, !srcloc !6654
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,3\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,%object", ""() #23, !dbg !6655, !srcloc !6656
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,16000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #23, !dbg !6657, !srcloc !6658
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #23, !dbg !6659, !srcloc !6660
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #23, !dbg !6661, !srcloc !6662
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL_INF,%object", ""() #23, !dbg !6663, !srcloc !6664
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL,3\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL,%object", ""() #23, !dbg !6665, !srcloc !6666
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #23, !dbg !6667, !srcloc !6668
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #23, !dbg !6669, !srcloc !6670
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_USBC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_USBC_LOG_LEVEL_INF,%object", ""() #23, !dbg !6671, !srcloc !6672
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL\0A\09.equ\09CONFIG_USBC_LOG_LEVEL,3\0A\09.type\09CONFIG_USBC_LOG_LEVEL,%object", ""() #23, !dbg !6673, !srcloc !6674
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #23, !dbg !6675, !srcloc !6676
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #23, !dbg !6677, !srcloc !6678
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #23, !dbg !6679, !srcloc !6680
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #23, !dbg !6681, !srcloc !6682
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #23, !dbg !6683, !srcloc !6684
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #23, !dbg !6685, !srcloc !6686
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #23, !dbg !6687, !srcloc !6688
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #23, !dbg !6689, !srcloc !6690
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #23, !dbg !6691, !srcloc !6692
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #23, !dbg !6693, !srcloc !6694
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #23, !dbg !6695, !srcloc !6696
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #23, !dbg !6697, !srcloc !6698
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #23, !dbg !6699, !srcloc !6700
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #23, !dbg !6701, !srcloc !6702
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #23, !dbg !6703, !srcloc !6704
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #23, !dbg !6705, !srcloc !6706
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #23, !dbg !6707, !srcloc !6708
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,%object", ""() #23, !dbg !6709, !srcloc !6710
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,3\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,%object", ""() #23, !dbg !6711, !srcloc !6712
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #23, !dbg !6713, !srcloc !6714
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #23, !dbg !6715, !srcloc !6716
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #23, !dbg !6717, !srcloc !6718
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #23, !dbg !6719, !srcloc !6720
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #23, !dbg !6721, !srcloc !6722
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #23, !dbg !6723, !srcloc !6724
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #23, !dbg !6725, !srcloc !6726
  tail call void asm sideeffect ".globl\09CONFIG_LOG\0A\09.equ\09CONFIG_LOG,1\0A\09.type\09CONFIG_LOG,%object", ""() #23, !dbg !6727, !srcloc !6728
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MODE_MINIMAL\0A\09.equ\09CONFIG_LOG_MODE_MINIMAL,1\0A\09.type\09CONFIG_LOG_MODE_MINIMAL,%object", ""() #23, !dbg !6729, !srcloc !6730
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_LEVEL\0A\09.equ\09CONFIG_LOG_DEFAULT_LEVEL,4\0A\09.type\09CONFIG_LOG_DEFAULT_LEVEL,%object", ""() #23, !dbg !6731, !srcloc !6732
  tail call void asm sideeffect ".globl\09CONFIG_LOG_OVERRIDE_LEVEL\0A\09.equ\09CONFIG_LOG_OVERRIDE_LEVEL,0\0A\09.type\09CONFIG_LOG_OVERRIDE_LEVEL,%object", ""() #23, !dbg !6733, !srcloc !6734
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MAX_LEVEL\0A\09.equ\09CONFIG_LOG_MAX_LEVEL,4\0A\09.type\09CONFIG_LOG_MAX_LEVEL,%object", ""() #23, !dbg !6735, !srcloc !6736
  tail call void asm sideeffect ".globl\09CONFIG_LOG_USE_VLA\0A\09.equ\09CONFIG_LOG_USE_VLA,1\0A\09.type\09CONFIG_LOG_USE_VLA,%object", ""() #23, !dbg !6737, !srcloc !6738
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #23, !dbg !6739, !srcloc !6740
  tail call void asm sideeffect ".globl\09CONFIG_RTIO\0A\09.equ\09CONFIG_RTIO,1\0A\09.type\09CONFIG_RTIO,%object", ""() #23, !dbg !6741, !srcloc !6742
  tail call void asm sideeffect ".globl\09CONFIG_RTIO_EXECUTOR_SIMPLE\0A\09.equ\09CONFIG_RTIO_EXECUTOR_SIMPLE,1\0A\09.type\09CONFIG_RTIO_EXECUTOR_SIMPLE,%object", ""() #23, !dbg !6743, !srcloc !6744
  tail call void asm sideeffect ".globl\09CONFIG_RTIO_EXECUTOR_CONCURRENT\0A\09.equ\09CONFIG_RTIO_EXECUTOR_CONCURRENT,1\0A\09.type\09CONFIG_RTIO_EXECUTOR_CONCURRENT,%object", ""() #23, !dbg !6745, !srcloc !6746
  tail call void asm sideeffect ".globl\09CONFIG_RTIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_RTIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_RTIO_LOG_LEVEL_INF,%object", ""() #23, !dbg !6747, !srcloc !6748
  tail call void asm sideeffect ".globl\09CONFIG_RTIO_LOG_LEVEL\0A\09.equ\09CONFIG_RTIO_LOG_LEVEL,3\0A\09.type\09CONFIG_RTIO_LOG_LEVEL,%object", ""() #23, !dbg !6749, !srcloc !6750
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #23, !dbg !6751, !srcloc !6752
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !6753, !srcloc !6754
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #23, !dbg !6755, !srcloc !6756
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !6757, !srcloc !6758
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !6759, !srcloc !6760
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #23, !dbg !6761, !srcloc !6762
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #23, !dbg !6763, !srcloc !6764
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #23, !dbg !6765, !srcloc !6766
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #23, !dbg !6767, !srcloc !6768
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #23, !dbg !6769, !srcloc !6770
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #23, !dbg !6771, !srcloc !6772
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #23, !dbg !6773, !srcloc !6774
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #23, !dbg !6775, !srcloc !6776
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #23, !dbg !6777, !srcloc !6778
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #23, !dbg !6779, !srcloc !6780
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #23, !dbg !6781, !srcloc !6782
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #23, !dbg !6783, !srcloc !6784
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #23, !dbg !6785, !srcloc !6786
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #23, !dbg !6787, !srcloc !6788
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #23, !dbg !6789, !srcloc !6790
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #23, !dbg !6791, !srcloc !6792
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #23, !dbg !6793, !srcloc !6794
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #23, !dbg !6795, !srcloc !6796
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #23, !dbg !6797, !srcloc !6798
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #23, !dbg !6799, !srcloc !6800
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #23, !dbg !6801, !srcloc !6802
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #23, !dbg !6803, !srcloc !6804
  ret void, !dbg !6805
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !6806 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6808, metadata !DIExpression()), !dbg !6810
  tail call fastcc void @LL_FLASH_EnableInstCache() #24, !dbg !6811
  tail call fastcc void @LL_FLASH_EnableDataCache() #24, !dbg !6812
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !6813, !srcloc !6819
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !6813
  call void @llvm.dbg.value(metadata i32 %3, metadata !6816, metadata !DIExpression()) #23, !dbg !6820
  call void @llvm.dbg.value(metadata i32 undef, metadata !6817, metadata !DIExpression()) #23, !dbg !6820
  call void @llvm.dbg.value(metadata i32 %3, metadata !6809, metadata !DIExpression()), !dbg !6810
  call void @llvm.dbg.value(metadata i32 %3, metadata !6821, metadata !DIExpression()) #23, !dbg !6824
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !6826, !srcloc !6827
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !6828
  ret i32 0, !dbg !6829
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #15 !dbg !6830 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6832
  %2 = or i32 %1, 512, !dbg !6832
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6832
  ret void, !dbg !6833
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #15 !dbg !6834 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6835
  %2 = or i32 %1, 1024, !dbg !6835
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6835
  ret void, !dbg !6836
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #4 !dbg !6837 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6839, metadata !DIExpression()), !dbg !6840
  ret i32 0, !dbg !6841
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !6842 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6845, metadata !DIExpression()), !dbg !6853
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !6854
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !6854
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !6846, metadata !DIExpression()), !dbg !6855
  call void @llvm.va_start(i8* nonnull %3), !dbg !6856
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !6857
  %5 = load i32, i32* %4, align 4, !dbg !6857
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !6857
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !6857
  call void @llvm.va_end(i8* nonnull %3), !dbg !6858
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !6859
  ret void, !dbg !6859
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !6860 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !6865, metadata !DIExpression()), !dbg !6866
  call void @llvm.dbg.value(metadata i8* %0, metadata !6864, metadata !DIExpression()), !dbg !6866
  tail call void @vprintk(i8* noundef %0, [1 x i32] %1) #25, !dbg !6867
  ret void, !dbg !6868
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_hexdump_print(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6869 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6873, metadata !DIExpression()), !dbg !6877
  call void @llvm.dbg.value(metadata i8* %1, metadata !6874, metadata !DIExpression()), !dbg !6877
  call void @llvm.dbg.value(metadata i32 %2, metadata !6875, metadata !DIExpression()), !dbg !6877
  call void @llvm.dbg.value(metadata i8* %1, metadata !6876, metadata !DIExpression()), !dbg !6877
  %4 = icmp eq i32 %2, 0, !dbg !6878
  br i1 %4, label %14, label %5, !dbg !6879

5:                                                ; preds = %3
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.35(i32 noundef %0) #24, !dbg !6877
  %7 = zext i8 %6 to i32
  br label %8, !dbg !6879

8:                                                ; preds = %8, %5
  %9 = phi i8* [ %1, %5 ], [ %12, %8 ]
  %10 = phi i32 [ %2, %5 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !6876, metadata !DIExpression()), !dbg !6877
  call void @llvm.dbg.value(metadata i32 %10, metadata !6875, metadata !DIExpression()), !dbg !6877
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.36, i32 0, i32 0), i32 noundef %7) #25, !dbg !6880
  tail call fastcc void @minimal_hexdump_line_print(i8* noundef %9, i32 noundef %10) #24, !dbg !6882
  %11 = add i32 %10, -8
  %12 = getelementptr inbounds i8, i8* %9, i32 8
  %13 = icmp ult i32 %10, 9, !dbg !6883
  call void @llvm.dbg.value(metadata i32 %11, metadata !6875, metadata !DIExpression()), !dbg !6877
  call void @llvm.dbg.value(metadata i8* %12, metadata !6876, metadata !DIExpression()), !dbg !6877
  br i1 %13, label %14, label %8, !dbg !6883, !llvm.loop !6884

14:                                               ; preds = %8, %3
  ret void, !dbg !6886
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.35(i32 noundef %0) unnamed_addr #4 !dbg !6887 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6889, metadata !DIExpression()), !dbg !6890
  %2 = add i32 %0, -1, !dbg !6891
  %3 = icmp ult i32 %2, 4, !dbg !6891
  %4 = shl i32 %2, 3, !dbg !6891
  %5 = lshr i32 1145657157, %4, !dbg !6891
  %6 = trunc i32 %5 to i8, !dbg !6891
  %7 = select i1 %3, i8 %6, i8 63, !dbg !6891
  ret i8 %7, !dbg !6892
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @minimal_hexdump_line_print(i8* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !6893 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6897, metadata !DIExpression()), !dbg !6908
  call void @llvm.dbg.value(metadata i32 %1, metadata !6898, metadata !DIExpression()), !dbg !6908
  call void @llvm.dbg.value(metadata i32 0, metadata !6899, metadata !DIExpression()), !dbg !6909
  br label %4, !dbg !6910

3:                                                ; preds = %12
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.37, i32 0, i32 0)) #25, !dbg !6911
  call void @llvm.dbg.value(metadata i32 0, metadata !6901, metadata !DIExpression()), !dbg !6912
  br label %16, !dbg !6913

4:                                                ; preds = %2, %12
  %5 = phi i32 [ 0, %2 ], [ %13, %12 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !6899, metadata !DIExpression()), !dbg !6909
  %6 = icmp ult i32 %5, %1, !dbg !6914
  br i1 %6, label %7, label %11, !dbg !6918

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !6919
  %9 = load i8, i8* %8, align 1, !dbg !6919
  %10 = zext i8 %9 to i32, !dbg !6921
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.38, i32 0, i32 0), i32 noundef %10) #25, !dbg !6922
  br label %12, !dbg !6923

11:                                               ; preds = %4
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.39, i32 0, i32 0)) #25, !dbg !6924
  br label %12

12:                                               ; preds = %7, %11
  %13 = add nuw nsw i32 %5, 1, !dbg !6926
  call void @llvm.dbg.value(metadata i32 %13, metadata !6899, metadata !DIExpression()), !dbg !6909
  %14 = icmp eq i32 %13, 8, !dbg !6927
  br i1 %14, label %3, label %4, !dbg !6910, !llvm.loop !6928

15:                                               ; preds = %27
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.40, i32 0, i32 0)) #25, !dbg !6930
  ret void, !dbg !6931

16:                                               ; preds = %3, %27
  %17 = phi i32 [ 0, %3 ], [ %28, %27 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !6901, metadata !DIExpression()), !dbg !6912
  %18 = icmp ult i32 %17, %1, !dbg !6932
  br i1 %18, label %19, label %26, !dbg !6933

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %0, i32 %17, !dbg !6934
  %21 = load i8, i8* %20, align 1, !dbg !6934
  call void @llvm.dbg.value(metadata i8 %21, metadata !6903, metadata !DIExpression()), !dbg !6935
  %22 = zext i8 %21 to i32, !dbg !6936
  %23 = tail call fastcc i32 @isprint(i32 noundef %22) #24, !dbg !6937
  %24 = icmp eq i32 %23, 0, !dbg !6938
  %25 = select i1 %24, i32 46, i32 %22, !dbg !6937
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.41, i32 0, i32 0), i32 noundef %25) #25, !dbg !6939
  br label %27, !dbg !6940

26:                                               ; preds = %16
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.42, i32 0, i32 0)) #25, !dbg !6941
  br label %27

27:                                               ; preds = %19, %26
  %28 = add nuw nsw i32 %17, 1, !dbg !6943
  call void @llvm.dbg.value(metadata i32 %28, metadata !6901, metadata !DIExpression()), !dbg !6912
  %29 = icmp eq i32 %28, 8, !dbg !6944
  br i1 %29, label %15, label %16, !dbg !6913, !llvm.loop !6945
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #4 !dbg !6947 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6949, metadata !DIExpression()), !dbg !6950
  %2 = add i32 %0, -32, !dbg !6951
  %3 = icmp ult i32 %2, 95, !dbg !6951
  %4 = zext i1 %3 to i32, !dbg !6951
  ret i32 %4, !dbg !6952
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !6953 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7002, metadata !DIExpression()), !dbg !7004
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !7003, metadata !DIExpression()), !dbg !7004
  %3 = icmp eq %struct.__esf* %1, null, !dbg !7005
  br i1 %3, label %5, label %4, !dbg !7007

4:                                                ; preds = %2
  tail call fastcc void @esf_dump(%struct.__esf* noundef nonnull %1) #24, !dbg !7008
  br label %5, !dbg !7010

5:                                                ; preds = %4, %2
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #25, !dbg !7011
  ret void, !dbg !7012
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @esf_dump(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7013 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7017, metadata !DIExpression()), !dbg !7018
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7019
  %3 = load i32, i32* %2, align 4, !dbg !7019
  %4 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 1, i32 0, !dbg !7019
  %5 = load i32, i32* %4, align 4, !dbg !7019
  %6 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 2, i32 0, !dbg !7019
  %7 = load i32, i32* %6, align 4, !dbg !7019
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.43, i32 0, i32 0), i32 noundef 69, i32 noundef %3, i32 noundef %5, i32 noundef %7) #25, !dbg !7019
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 3, i32 0, !dbg !7024
  %9 = load i32, i32* %8, align 4, !dbg !7024
  %10 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 4, i32 0, !dbg !7024
  %11 = load i32, i32* %10, align 4, !dbg !7024
  %12 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 5, i32 0, !dbg !7024
  %13 = load i32, i32* %12, align 4, !dbg !7024
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.44, i32 0, i32 0), i32 noundef 69, i32 noundef %9, i32 noundef %11, i32 noundef %13) #25, !dbg !7024
  %14 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 7, !dbg !7029
  %15 = load i32, i32* %14, align 4, !dbg !7029
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 69, i32 noundef %15) #25, !dbg !7029
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7034
  %17 = load i32, i32* %16, align 4, !dbg !7034
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.46, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #25, !dbg !7034
  ret void, !dbg !7039
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !7040 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7057, metadata !DIExpression()), !dbg !7060
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !7058, metadata !DIExpression()), !dbg !7060
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7061
  %4 = load i32, i32* %3, align 4, !dbg !7061
  call void @llvm.dbg.value(metadata i32 %4, metadata !7059, metadata !DIExpression()), !dbg !7060
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #24, !dbg !7062
  ret void, !dbg !7063
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #2 !dbg !7064 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !7068, metadata !DIExpression()), !dbg !7071
  call void @llvm.dbg.value(metadata i8* %0, metadata !7069, metadata !DIExpression()), !dbg !7071
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !7072
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #23, !dbg !7072
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !7070, metadata !DIExpression()), !dbg !7073
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !7073
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !7074
  %5 = bitcast i8* %4 to i32*, !dbg !7074
  %6 = load i32, i32* %5, align 4, !dbg !7074
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !7075
  store i32 %6, i32* %7, align 4, !dbg !7076
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #24, !dbg !7077
  unreachable, !dbg !7078
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !7079 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7082, metadata !DIExpression()), !dbg !7083
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #24, !dbg !7084
  ret void, !dbg !7085
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !7086 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7090, metadata !DIExpression()), !dbg !7091
  %2 = icmp sgt i32 %0, -1, !dbg !7092
  br i1 %2, label %3, label %8, !dbg !7094

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !7095, !srcloc !7097
  %4 = and i32 %0, 31, !dbg !7098
  %5 = shl nuw i32 1, %4, !dbg !7099
  %6 = lshr i32 %0, 5, !dbg !7100
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !7101
  store volatile i32 %5, i32* %7, align 4, !dbg !7102
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !7103, !srcloc !7104
  br label %8, !dbg !7105

8:                                                ; preds = %3, %1
  ret void, !dbg !7106
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !7107 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7109, metadata !DIExpression()), !dbg !7110
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #24, !dbg !7111
  ret void, !dbg !7112
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !7113 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7115, metadata !DIExpression()), !dbg !7116
  %2 = icmp sgt i32 %0, -1, !dbg !7117
  br i1 %2, label %3, label %8, !dbg !7119

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !7120
  %5 = shl nuw i32 1, %4, !dbg !7122
  %6 = lshr i32 %0, 5, !dbg !7123
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !7124
  store volatile i32 %5, i32* %7, align 4, !dbg !7125
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7126, !srcloc !7130
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7131, !srcloc !7134
  br label %8, !dbg !7135

8:                                                ; preds = %3, %1
  ret void, !dbg !7136
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #5 !dbg !7137 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7141, metadata !DIExpression()), !dbg !7142
  %2 = lshr i32 %0, 5, !dbg !7143
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !7144
  %4 = load volatile i32, i32* %3, align 4, !dbg !7144
  %5 = and i32 %0, 31, !dbg !7145
  %6 = shl nuw i32 1, %5, !dbg !7145
  %7 = and i32 %4, %6, !dbg !7146
  ret i32 %7, !dbg !7147
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #15 !dbg !7148 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7152, metadata !DIExpression()), !dbg !7155
  call void @llvm.dbg.value(metadata i32 %1, metadata !7153, metadata !DIExpression()), !dbg !7155
  call void @llvm.dbg.value(metadata i32 %2, metadata !7154, metadata !DIExpression()), !dbg !7155
  %4 = add i32 %1, 1, !dbg !7156
  call void @llvm.dbg.value(metadata i32 %4, metadata !7153, metadata !DIExpression()), !dbg !7155
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #24, !dbg !7159
  ret void, !dbg !7160
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !7161 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7165, metadata !DIExpression()), !dbg !7167
  call void @llvm.dbg.value(metadata i32 %1, metadata !7166, metadata !DIExpression()), !dbg !7167
  %3 = trunc i32 %1 to i8, !dbg !7168
  %4 = shl i8 %3, 4, !dbg !7168
  %5 = and i32 %0, 15, !dbg !7170
  %6 = add nsw i32 %5, -4, !dbg !7170
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !7170
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7170
  %9 = icmp slt i32 %0, 0, !dbg !7170
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !7170
  store volatile i8 %4, i8* %10, align 1, !dbg !7168
  ret void, !dbg !7171
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !7172 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7174, metadata !DIExpression()), !dbg !7175
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #25, !dbg !7176
  ret void, !dbg !7177
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !7178 {
  tail call void @z_SysNmiOnReset() #25, !dbg !7180
  tail call void @z_arm_int_exit() #25, !dbg !7181
  ret void, !dbg !7182
}

; Function Attrs: optsize
declare !dbg !7183 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !7184 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #2 !dbg !7186 {
  tail call fastcc void @relocate_vector_table() #24, !dbg !7188
  tail call fastcc void @z_arm_floating_point_init() #24, !dbg !7189
  tail call void @z_bss_zero() #25, !dbg !7190
  tail call void @z_data_copy() #25, !dbg !7191
  tail call void @z_arm_interrupt_init() #25, !dbg !7192
  tail call void @z_cstart() #27, !dbg !7193
  unreachable, !dbg !7193
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !7194 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !7195
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7196, !srcloc !7199
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7200, !srcloc !7203
  ret void, !dbg !7204
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !7205 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !7206
  %2 = and i32 %1, -15728641, !dbg !7206
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !7206
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #23, !dbg !7207, !srcloc !7214
  call void @llvm.dbg.value(metadata i32 %3, metadata !7212, metadata !DIExpression()) #23, !dbg !7215
  %4 = and i32 %3, -5, !dbg !7216
  call void @llvm.dbg.value(metadata i32 %4, metadata !7217, metadata !DIExpression()) #23, !dbg !7222
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #23, !dbg !7224, !srcloc !7225
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7226, !srcloc !7203
  ret void, !dbg !7228
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !7229 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7232, metadata !DIExpression()), !dbg !7233
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7234
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !7235
  store i32 %0, i32* %3, align 4, !dbg !7236
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !7237
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !7238
  store i32 %4, i32* %5, align 4, !dbg !7239
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7240
  %7 = or i32 %6, 268435456, !dbg !7240
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7240
  call void @llvm.dbg.value(metadata i32 0, metadata !7241, metadata !DIExpression()) #23, !dbg !7244
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !7246, !srcloc !7247
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7248
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !7249
  %10 = load i32, i32* %9, align 4, !dbg !7249
  ret i32 %10, !dbg !7250
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #6 !dbg !7251 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7361, metadata !DIExpression()), !dbg !7369
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !7362, metadata !DIExpression()), !dbg !7369
  call void @llvm.dbg.value(metadata i8* %2, metadata !7363, metadata !DIExpression()), !dbg !7369
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !7364, metadata !DIExpression()), !dbg !7369
  call void @llvm.dbg.value(metadata i8* %4, metadata !7365, metadata !DIExpression()), !dbg !7369
  call void @llvm.dbg.value(metadata i8* %5, metadata !7366, metadata !DIExpression()), !dbg !7369
  call void @llvm.dbg.value(metadata i8* %6, metadata !7367, metadata !DIExpression()), !dbg !7369
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !7370
  call void @llvm.dbg.value(metadata i8* %8, metadata !7368, metadata !DIExpression()), !dbg !7369
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !7371
  %10 = bitcast i8* %9 to i32*, !dbg !7371
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !7372
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !7373
  %12 = bitcast i8* %8 to i32*, !dbg !7374
  store i32 %11, i32* %12, align 4, !dbg !7375
  %13 = ptrtoint i8* %4 to i32, !dbg !7376
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !7377
  %15 = bitcast i8* %14 to i32*, !dbg !7377
  store i32 %13, i32* %15, align 4, !dbg !7378
  %16 = ptrtoint i8* %5 to i32, !dbg !7379
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !7380
  %18 = bitcast i8* %17 to i32*, !dbg !7380
  store i32 %16, i32* %18, align 4, !dbg !7381
  %19 = ptrtoint i8* %6 to i32, !dbg !7382
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !7383
  %21 = bitcast i8* %20 to i32*, !dbg !7383
  store i32 %19, i32* %21, align 4, !dbg !7384
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !7385
  %23 = bitcast i8* %22 to i32*, !dbg !7385
  store i32 16777216, i32* %23, align 4, !dbg !7386
  %24 = ptrtoint i8* %8 to i32, !dbg !7387
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !7388
  store i32 %24, i32* %25, align 8, !dbg !7389
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !7390
  store i32 0, i32* %26, align 4, !dbg !7391
  ret void, !dbg !7392
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !7393 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7398, metadata !DIExpression()), !dbg !7404
  call void @llvm.dbg.value(metadata i32 %1, metadata !7399, metadata !DIExpression()), !dbg !7404
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7405
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !7400, metadata !DIExpression()), !dbg !7404
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !7406
  br i1 %4, label %19, label %5, !dbg !7408

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !7403, metadata !DIExpression()), !dbg !7404
  %6 = icmp eq i32 %0, -22, !dbg !7409
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !7409
  %8 = load i32, i32* %7, align 4, !dbg !7409
  br i1 %6, label %16, label %9, !dbg !7411

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !7409
  %11 = icmp ule i32 %10, %0, !dbg !7409
  %12 = icmp ugt i32 %8, %0, !dbg !7409
  %13 = and i1 %12, %11, !dbg !7409
  %14 = icmp ugt i32 %8, %1, !dbg !7409
  %15 = and i1 %14, %13, !dbg !7409
  br i1 %15, label %18, label %19, !dbg !7409

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !7409
  br i1 %17, label %18, label %19, !dbg !7411

18:                                               ; preds = %9, %16
  br label %19, !dbg !7412

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !7404
  ret i32 %20, !dbg !7414
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #2 !dbg !7415 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7419, metadata !DIExpression()), !dbg !7422
  call void @llvm.dbg.value(metadata i8* %1, metadata !7420, metadata !DIExpression()), !dbg !7422
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !7421, metadata !DIExpression()), !dbg !7422
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7423
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #25, !dbg !7424
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #23, !dbg !7425, !srcloc !7426
  unreachable, !dbg !7427
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !7428 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !7446, metadata !DIExpression()), !dbg !7456
  call void @llvm.dbg.value(metadata i32 %1, metadata !7447, metadata !DIExpression()), !dbg !7456
  call void @llvm.dbg.value(metadata i32 %2, metadata !7448, metadata !DIExpression()), !dbg !7456
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !7449, metadata !DIExpression()), !dbg !7456
  call void @llvm.dbg.value(metadata i32 0, metadata !7450, metadata !DIExpression()), !dbg !7456
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7457
  %9 = and i32 %8, 511, !dbg !7458
  call void @llvm.dbg.value(metadata i32 %9, metadata !7451, metadata !DIExpression()), !dbg !7456
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #23, !dbg !7459
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #23, !dbg !7459
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !7460
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #23, !dbg !7460
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !7455, metadata !DIExpression()), !dbg !7461
  call void @llvm.dbg.value(metadata i32 0, metadata !7462, metadata !DIExpression()) #23, !dbg !7465
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !7467, !srcloc !7468
  call void @llvm.dbg.value(metadata i8* %6, metadata !7453, metadata !DIExpression(DW_OP_deref)), !dbg !7456
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #24, !dbg !7469
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !7454, metadata !DIExpression()), !dbg !7456
  call void @llvm.dbg.value(metadata i8* %5, metadata !7452, metadata !DIExpression(DW_OP_deref)), !dbg !7456
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #24, !dbg !7470
  call void @llvm.dbg.value(metadata i32 %12, metadata !7450, metadata !DIExpression()), !dbg !7456
  %13 = load i8, i8* %5, align 1, !dbg !7471, !range !7473
  call void @llvm.dbg.value(metadata i8 %13, metadata !7452, metadata !DIExpression()), !dbg !7456
  %14 = icmp eq i8 %13, 0, !dbg !7471
  br i1 %14, label %15, label %32, !dbg !7474

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !7475
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #25, !dbg !7476
  %18 = load i8, i8* %6, align 1, !dbg !7477, !range !7473
  call void @llvm.dbg.value(metadata i8 %18, metadata !7453, metadata !DIExpression()), !dbg !7456
  %19 = icmp eq i8 %18, 0, !dbg !7477
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !7479
  %21 = load i32, i32* %20, align 4, !dbg !7479
  br i1 %19, label %27, label %22, !dbg !7480

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !7481
  %24 = icmp eq i32 %23, 0, !dbg !7484
  br i1 %24, label %25, label %31, !dbg !7485

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !7486
  br label %29, !dbg !7488

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !7489
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !7479
  br label %31, !dbg !7491

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #25, !dbg !7491
  br label %32, !dbg !7492

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #23, !dbg !7492
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #23, !dbg !7492
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #23, !dbg !7492
  ret void, !dbg !7492
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #1 !dbg !7493 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7498, metadata !DIExpression()), !dbg !7504
  call void @llvm.dbg.value(metadata i32 %1, metadata !7499, metadata !DIExpression()), !dbg !7504
  call void @llvm.dbg.value(metadata i32 %2, metadata !7500, metadata !DIExpression()), !dbg !7504
  call void @llvm.dbg.value(metadata i8* %3, metadata !7501, metadata !DIExpression()), !dbg !7504
  call void @llvm.dbg.value(metadata i8 0, metadata !7502, metadata !DIExpression()), !dbg !7504
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !7503, metadata !DIExpression()), !dbg !7504
  store i8 0, i8* %3, align 1, !dbg !7505
  %5 = icmp ugt i32 %2, -16777217, !dbg !7506
  br i1 %5, label %6, label %17, !dbg !7508

6:                                                ; preds = %4
  %7 = and i32 %2, 12, !dbg !7509
  %8 = icmp eq i32 %7, 8, !dbg !7509
  br i1 %8, label %9, label %10, !dbg !7509

9:                                                ; preds = %6
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.60, i32 0, i32 0), i32 noundef 69) #25, !dbg !7511
  br label %17, !dbg !7517

10:                                               ; preds = %6
  %11 = and i32 %2, 8, !dbg !7518
  %12 = icmp eq i32 %11, 0, !dbg !7518
  br i1 %12, label %13, label %14, !dbg !7519

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %0, metadata !7503, metadata !DIExpression()), !dbg !7504
  store i8 1, i8* %3, align 1, !dbg !7522
  br label %14

14:                                               ; preds = %10, %13
  %15 = phi i32 [ %0, %13 ], [ %1, %10 ]
  %16 = inttoptr i32 %15 to %struct.__esf*, !dbg !7504
  call void @llvm.dbg.value(metadata %struct.__esf* %16, metadata !7503, metadata !DIExpression()), !dbg !7504
  br label %17, !dbg !7525

17:                                               ; preds = %4, %14, %9
  %18 = phi %struct.__esf* [ %16, %14 ], [ null, %9 ], [ null, %4 ], !dbg !7504
  ret %struct.__esf* %18, !dbg !7526
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !7527 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7531, metadata !DIExpression()), !dbg !7535
  call void @llvm.dbg.value(metadata i32 %1, metadata !7532, metadata !DIExpression()), !dbg !7535
  call void @llvm.dbg.value(metadata i8* %2, metadata !7533, metadata !DIExpression()), !dbg !7535
  call void @llvm.dbg.value(metadata i32 0, metadata !7534, metadata !DIExpression()), !dbg !7535
  store i8 0, i8* %2, align 1, !dbg !7536
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !7537

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #24, !dbg !7538
  call void @llvm.dbg.value(metadata i32 %5, metadata !7534, metadata !DIExpression()), !dbg !7535
  br label %12, !dbg !7540

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !7541
  call void @llvm.dbg.value(metadata i32 %7, metadata !7534, metadata !DIExpression()), !dbg !7535
  br label %12, !dbg !7542

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !7543
  call void @llvm.dbg.value(metadata i32 0, metadata !7534, metadata !DIExpression()), !dbg !7535
  br label %12, !dbg !7544

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #24, !dbg !7545
  call void @llvm.dbg.value(metadata i32 0, metadata !7534, metadata !DIExpression()), !dbg !7535
  br label %12, !dbg !7546

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #24, !dbg !7547
  br label %12, !dbg !7548

11:                                               ; preds = %3
  tail call fastcc void @reserved_exception(i32 noundef %1) #24, !dbg !7549
  br label %12, !dbg !7550

12:                                               ; preds = %4, %6, %8, %9, %10, %11
  %13 = phi i32 [ 0, %11 ], [ 0, %10 ], [ 0, %9 ], [ 0, %8 ], [ %7, %6 ], [ %5, %4 ], !dbg !7535
  call void @llvm.dbg.value(metadata i32 %13, metadata !7534, metadata !DIExpression()), !dbg !7535
  ret i32 %13, !dbg !7551
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !7552 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7556, metadata !DIExpression()), !dbg !7559
  call void @llvm.dbg.value(metadata i8* %1, metadata !7557, metadata !DIExpression()), !dbg !7559
  call void @llvm.dbg.value(metadata i32 0, metadata !7558, metadata !DIExpression()), !dbg !7559
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1.55, i32 0, i32 0), i32 noundef 69) #25, !dbg !7560
  store i8 0, i8* %1, align 1, !dbg !7565
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7566
  %4 = and i32 %3, 2, !dbg !7568
  %5 = icmp eq i32 %4, 0, !dbg !7569
  br i1 %5, label %7, label %6, !dbg !7570

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.56, i32 0, i32 0), i32 noundef 69) #25, !dbg !7571
  br label %36, !dbg !7577

7:                                                ; preds = %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7578
  %9 = icmp sgt i32 %8, -1, !dbg !7580
  br i1 %9, label %11, label %10, !dbg !7581

10:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3.57, i32 0, i32 0), i32 noundef 69) #25, !dbg !7582
  br label %36, !dbg !7588

11:                                               ; preds = %7
  %12 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7589
  %13 = and i32 %12, 1073741824, !dbg !7591
  %14 = icmp eq i32 %13, 0, !dbg !7592
  br i1 %14, label %36, label %15, !dbg !7593

15:                                               ; preds = %11
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.4.58, i32 0, i32 0), i32 noundef 69) #25, !dbg !7594
  %16 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #24, !dbg !7600
  br i1 %16, label %17, label %21, !dbg !7602

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7603
  %19 = load i32, i32* %18, align 4, !dbg !7603
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5.59, i32 0, i32 0), i32 noundef 69, i32 noundef %19) #25, !dbg !7603
  %20 = load i32, i32* %18, align 4, !dbg !7609
  call void @llvm.dbg.value(metadata i32 %20, metadata !7558, metadata !DIExpression()), !dbg !7559
  br label %36, !dbg !7610

21:                                               ; preds = %15
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7611
  %23 = and i32 %22, 255, !dbg !7613
  %24 = icmp eq i32 %23, 0, !dbg !7614
  br i1 %24, label %27, label %25, !dbg !7615

25:                                               ; preds = %21
  %26 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !7616
  call void @llvm.dbg.value(metadata i32 %26, metadata !7558, metadata !DIExpression()), !dbg !7559
  br label %36, !dbg !7618

27:                                               ; preds = %21
  %28 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7619
  %29 = and i32 %28, 65280, !dbg !7621
  %30 = icmp eq i32 %29, 0, !dbg !7622
  br i1 %30, label %32, label %31, !dbg !7623

31:                                               ; preds = %27
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !7624
  call void @llvm.dbg.value(metadata i32 0, metadata !7558, metadata !DIExpression()), !dbg !7559
  br label %36, !dbg !7626

32:                                               ; preds = %27
  %33 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7627
  %34 = icmp ult i32 %33, 65536, !dbg !7629
  br i1 %34, label %36, label %35, !dbg !7630

35:                                               ; preds = %32
  tail call fastcc void @usage_fault() #24, !dbg !7631
  call void @llvm.dbg.value(metadata i32 0, metadata !7558, metadata !DIExpression()), !dbg !7559
  br label %36, !dbg !7633

36:                                               ; preds = %10, %11, %17, %31, %32, %35, %25, %6
  %37 = phi i32 [ 0, %6 ], [ 0, %10 ], [ %20, %17 ], [ %26, %25 ], [ 0, %31 ], [ 0, %35 ], [ 0, %32 ], [ 0, %11 ], !dbg !7559
  call void @llvm.dbg.value(metadata i32 %37, metadata !7558, metadata !DIExpression()), !dbg !7559
  ret i32 %37, !dbg !7634
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !7635 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7637, metadata !DIExpression()), !dbg !7650
  call void @llvm.dbg.value(metadata i32 %1, metadata !7638, metadata !DIExpression()), !dbg !7650
  call void @llvm.dbg.value(metadata i8* %2, metadata !7639, metadata !DIExpression()), !dbg !7650
  call void @llvm.dbg.value(metadata i32 0, metadata !7640, metadata !DIExpression()), !dbg !7650
  call void @llvm.dbg.value(metadata i32 -22, metadata !7641, metadata !DIExpression()), !dbg !7650
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.52, i32 0, i32 0), i32 noundef 69) #25, !dbg !7651
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7656
  %5 = and i32 %4, 16, !dbg !7658
  %6 = icmp eq i32 %5, 0, !dbg !7659
  br i1 %6, label %8, label %7, !dbg !7660

7:                                                ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.7.53, i32 0, i32 0), i32 noundef 69) #25, !dbg !7661
  br label %8, !dbg !7667

8:                                                ; preds = %7, %3
  %9 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7668
  %10 = and i32 %9, 8, !dbg !7670
  %11 = icmp eq i32 %10, 0, !dbg !7671
  br i1 %11, label %13, label %12, !dbg !7672

12:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.51, i32 0, i32 0), i32 noundef 69) #25, !dbg !7673
  br label %13, !dbg !7679

13:                                               ; preds = %12, %8
  %14 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7680
  %15 = and i32 %14, 2, !dbg !7681
  %16 = icmp eq i32 %15, 0, !dbg !7682
  br i1 %16, label %27, label %17, !dbg !7683

17:                                               ; preds = %13
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.54, i32 0, i32 0), i32 noundef 69) #25, !dbg !7684
  %18 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !7689
  call void @llvm.dbg.value(metadata i32 %18, metadata !7642, metadata !DIExpression()), !dbg !7690
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7691
  %20 = and i32 %19, 128, !dbg !7693
  %21 = icmp eq i32 %20, 0, !dbg !7694
  br i1 %21, label %27, label %22, !dbg !7695

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %18, metadata !7641, metadata !DIExpression()), !dbg !7650
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.10, i32 0, i32 0), i32 noundef 69, i32 noundef %18) #25, !dbg !7696
  %23 = icmp eq i32 %1, 0, !dbg !7702
  br i1 %23, label %27, label %24, !dbg !7704

24:                                               ; preds = %22
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7705
  %26 = and i32 %25, -129, !dbg !7705
  store volatile i32 %26, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7705
  br label %27, !dbg !7707

27:                                               ; preds = %17, %24, %22, %13
  %28 = phi i32 [ -22, %13 ], [ %18, %24 ], [ %18, %22 ], [ -22, %17 ], !dbg !7650
  call void @llvm.dbg.value(metadata i32 %28, metadata !7641, metadata !DIExpression()), !dbg !7650
  %29 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7708
  %30 = and i32 %29, 1, !dbg !7710
  %31 = icmp eq i32 %30, 0, !dbg !7711
  br i1 %31, label %33, label %32, !dbg !7712

32:                                               ; preds = %27
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11, i32 0, i32 0), i32 noundef 69) #25, !dbg !7713
  br label %33, !dbg !7719

33:                                               ; preds = %32, %27
  %34 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7720
  %35 = and i32 %34, 32, !dbg !7722
  %36 = icmp eq i32 %35, 0, !dbg !7723
  br i1 %36, label %38, label %37, !dbg !7724

37:                                               ; preds = %33
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.12, i32 0, i32 0), i32 noundef 69) #25, !dbg !7725
  br label %38, !dbg !7731

38:                                               ; preds = %37, %33
  %39 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7732
  %40 = and i32 %39, 16, !dbg !7733
  %41 = icmp eq i32 %40, 0, !dbg !7733
  br i1 %41, label %42, label %46, !dbg !7734

42:                                               ; preds = %38
  %43 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7735
  %44 = and i32 %43, 2, !dbg !7736
  %45 = icmp eq i32 %44, 0, !dbg !7736
  br i1 %45, label %55, label %46, !dbg !7737

46:                                               ; preds = %42, %38
  %47 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7738
  %48 = and i32 %47, 2048, !dbg !7739
  %49 = icmp eq i32 %48, 0, !dbg !7739
  br i1 %49, label %55, label %50, !dbg !7740

50:                                               ; preds = %46
  %51 = ptrtoint %struct.__esf* %0 to i32, !dbg !7741
  %52 = tail call i32 @z_check_thread_stack_fail(i32 noundef %28, i32 noundef %51) #25, !dbg !7742
  call void @llvm.dbg.value(metadata i32 %52, metadata !7645, metadata !DIExpression()), !dbg !7743
  %53 = icmp eq i32 %52, 0, !dbg !7744
  br i1 %53, label %55, label %54, !dbg !7746

54:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %52, metadata !7747, metadata !DIExpression()) #23, !dbg !7750
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %52) #23, !dbg !7753, !srcloc !7754
  call void @llvm.dbg.value(metadata i32 2, metadata !7640, metadata !DIExpression()), !dbg !7650
  br label %55, !dbg !7755

55:                                               ; preds = %54, %50, %46, %42
  %56 = phi i32 [ 0, %46 ], [ 0, %42 ], [ 2, %54 ], [ 0, %50 ], !dbg !7650
  call void @llvm.dbg.value(metadata i32 %56, metadata !7640, metadata !DIExpression()), !dbg !7650
  %57 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7756
  %58 = and i32 %57, 32, !dbg !7758
  %59 = icmp eq i32 %58, 0, !dbg !7759
  br i1 %59, label %63, label %60, !dbg !7760

60:                                               ; preds = %55
  %61 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7761
  %62 = and i32 %61, -8193, !dbg !7761
  store volatile i32 %62, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7761
  br label %63, !dbg !7763

63:                                               ; preds = %60, %55
  %64 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7764
  %65 = or i32 %64, 255, !dbg !7764
  store volatile i32 %65, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7764
  store i8 0, i8* %2, align 1, !dbg !7765
  ret i32 %56, !dbg !7766
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !7767 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7771, metadata !DIExpression()), !dbg !7778
  call void @llvm.dbg.value(metadata i32 %0, metadata !7772, metadata !DIExpression()), !dbg !7778
  call void @llvm.dbg.value(metadata i8* %1, metadata !7773, metadata !DIExpression()), !dbg !7778
  call void @llvm.dbg.value(metadata i32 0, metadata !7774, metadata !DIExpression()), !dbg !7778
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i32 0, i32 0), i32 noundef 69) #25, !dbg !7779
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7784
  %4 = and i32 %3, 4096, !dbg !7786
  %5 = icmp eq i32 %4, 0, !dbg !7786
  br i1 %5, label %7, label %6, !dbg !7787

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.14, i32 0, i32 0), i32 noundef 69) #25, !dbg !7788
  br label %7, !dbg !7794

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7795
  %9 = and i32 %8, 2048, !dbg !7797
  %10 = icmp eq i32 %9, 0, !dbg !7797
  br i1 %10, label %12, label %11, !dbg !7798

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.51, i32 0, i32 0), i32 noundef 69) #25, !dbg !7799
  br label %12, !dbg !7805

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7806
  %14 = and i32 %13, 512, !dbg !7807
  %15 = icmp eq i32 %14, 0, !dbg !7807
  br i1 %15, label %26, label %16, !dbg !7808

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #25, !dbg !7809
  %17 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !7814
  call void @llvm.dbg.value(metadata i32 %17, metadata !7775, metadata !DIExpression()), !dbg !7815
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7816
  %19 = and i32 %18, 32768, !dbg !7818
  %20 = icmp eq i32 %19, 0, !dbg !7819
  br i1 %20, label %26, label %21, !dbg !7820

21:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.16, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #25, !dbg !7821
  %22 = icmp eq i32 %0, 0, !dbg !7827
  br i1 %22, label %26, label %23, !dbg !7829

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7830
  %25 = and i32 %24, -32769, !dbg !7830
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7830
  br label %26, !dbg !7832

26:                                               ; preds = %16, %23, %21, %12
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7833
  %28 = and i32 %27, 1024, !dbg !7835
  %29 = icmp eq i32 %28, 0, !dbg !7835
  br i1 %29, label %31, label %30, !dbg !7836

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.17, i32 0, i32 0), i32 noundef 69) #25, !dbg !7837
  br label %31, !dbg !7843

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7844
  %33 = and i32 %32, 256, !dbg !7846
  %34 = icmp eq i32 %33, 0, !dbg !7847
  br i1 %34, label %35, label %39, !dbg !7848

35:                                               ; preds = %31
  %36 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7849
  %37 = and i32 %36, 8192, !dbg !7851
  %38 = icmp eq i32 %37, 0, !dbg !7851
  br i1 %38, label %41, label %39, !dbg !7852

39:                                               ; preds = %35, %31
  %40 = phi i8* [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.18, i32 0, i32 0), %31 ], [ getelementptr inbounds ([52 x i8], [52 x i8]* @.str.12, i32 0, i32 0), %35 ]
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef %40, i32 noundef 69) #25, !dbg !7853
  br label %41, !dbg !7854

41:                                               ; preds = %39, %35
  %42 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7854
  %43 = or i32 %42, 65280, !dbg !7854
  store volatile i32 %43, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7854
  store i8 0, i8* %1, align 1, !dbg !7855
  ret void, !dbg !7856
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #1 !dbg !7857 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7863, metadata !DIExpression()), !dbg !7865
  call void @llvm.dbg.value(metadata i32 0, metadata !7864, metadata !DIExpression()), !dbg !7865
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.19, i32 0, i32 0), i32 noundef 69) #25, !dbg !7866
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7871
  %2 = and i32 %1, 33554432, !dbg !7873
  %3 = icmp eq i32 %2, 0, !dbg !7874
  br i1 %3, label %5, label %4, !dbg !7875

4:                                                ; preds = %0
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.20, i32 0, i32 0), i32 noundef 69) #25, !dbg !7876
  br label %5, !dbg !7882

5:                                                ; preds = %4, %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7883
  %7 = and i32 %6, 16777216, !dbg !7885
  %8 = icmp eq i32 %7, 0, !dbg !7886
  br i1 %8, label %10, label %9, !dbg !7887

9:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.21, i32 0, i32 0), i32 noundef 69) #25, !dbg !7888
  br label %10, !dbg !7894

10:                                               ; preds = %9, %5
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7895
  %12 = and i32 %11, 524288, !dbg !7897
  %13 = icmp eq i32 %12, 0, !dbg !7898
  br i1 %13, label %15, label %14, !dbg !7899

14:                                               ; preds = %10
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.22, i32 0, i32 0), i32 noundef 69) #25, !dbg !7900
  br label %15, !dbg !7906

15:                                               ; preds = %14, %10
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7907
  %17 = and i32 %16, 262144, !dbg !7909
  %18 = icmp eq i32 %17, 0, !dbg !7910
  br i1 %18, label %20, label %19, !dbg !7911

19:                                               ; preds = %15
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.23.50, i32 0, i32 0), i32 noundef 69) #25, !dbg !7912
  br label %20, !dbg !7918

20:                                               ; preds = %19, %15
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7919
  %22 = and i32 %21, 131072, !dbg !7921
  %23 = icmp eq i32 %22, 0, !dbg !7922
  br i1 %23, label %25, label %24, !dbg !7923

24:                                               ; preds = %20
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.24, i32 0, i32 0), i32 noundef 69) #25, !dbg !7924
  br label %25, !dbg !7930

25:                                               ; preds = %24, %20
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7931
  %27 = and i32 %26, 65536, !dbg !7933
  %28 = icmp eq i32 %27, 0, !dbg !7934
  br i1 %28, label %30, label %29, !dbg !7935

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.25, i32 0, i32 0), i32 noundef 69) #25, !dbg !7936
  br label %30, !dbg !7942

30:                                               ; preds = %29, %25
  %31 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7943
  %32 = or i32 %31, -65536, !dbg !7943
  store volatile i32 %32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7943
  ret void, !dbg !7944
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #1 !dbg !7945 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7949, metadata !DIExpression()), !dbg !7951
  call void @llvm.dbg.value(metadata i8* %0, metadata !7950, metadata !DIExpression()), !dbg !7951
  store i8 0, i8* %0, align 1, !dbg !7952
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.26, i32 0, i32 0), i32 noundef 69) #25, !dbg !7953
  ret void, !dbg !7958
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @reserved_exception(i32 noundef %0) unnamed_addr #1 !dbg !7959 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7963, metadata !DIExpression()), !dbg !7965
  call void @llvm.dbg.value(metadata i32 %0, metadata !7964, metadata !DIExpression()), !dbg !7965
  %2 = icmp slt i32 %0, 16, !dbg !7966
  %3 = select i1 %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.28.49, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.29, i32 0, i32 0), !dbg !7966
  %4 = add nsw i32 %0, -16, !dbg !7966
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.27, i32 0, i32 0), i32 noundef 69, i8* noundef %3, i32 noundef %4) #25, !dbg !7966
  ret void, !dbg !7971
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7972 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7976, metadata !DIExpression()), !dbg !7979
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7980
  %3 = load i32, i32* %2, align 4, !dbg !7980
  %4 = inttoptr i32 %3 to i16*, !dbg !7981
  call void @llvm.dbg.value(metadata i16* %4, metadata !7977, metadata !DIExpression()), !dbg !7979
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7982
  %6 = or i32 %5, 256, !dbg !7982
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7982
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7983, !srcloc !7986
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7987, !srcloc !7990
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !7991
  %8 = load i16, i16* %7, align 2, !dbg !7992
  call void @llvm.dbg.value(metadata i16 %8, metadata !7978, metadata !DIExpression()), !dbg !7979
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7993
  %10 = and i32 %9, -257, !dbg !7993
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7993
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7994, !srcloc !7986
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7996, !srcloc !7990
  %11 = icmp eq i16 %8, -8446, !dbg !7998
  ret i1 %11, !dbg !8000
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #15 !dbg !8001 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8002
  %2 = or i32 %1, 16, !dbg !8002
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8002
  ret void, !dbg !8003
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #15 !dbg !8004 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8007, metadata !DIExpression()), !dbg !8008
  br label %1, !dbg !8009

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !8007, metadata !DIExpression()), !dbg !8008
  tail call fastcc void @__NVIC_SetPriority.63(i32 noundef %2) #24, !dbg !8011
  %3 = add nuw nsw i32 %2, 1, !dbg !8014
  call void @llvm.dbg.value(metadata i32 %3, metadata !8007, metadata !DIExpression()), !dbg !8008
  %4 = icmp eq i32 %3, 97, !dbg !8015
  br i1 %4, label %5, label %1, !dbg !8009, !llvm.loop !8016

5:                                                ; preds = %1
  ret void, !dbg !8018
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.63(i32 noundef %0) unnamed_addr #15 !dbg !8019 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8021, metadata !DIExpression()), !dbg !8023
  call void @llvm.dbg.value(metadata i32 1, metadata !8022, metadata !DIExpression()), !dbg !8023
  %2 = and i32 %0, 15, !dbg !8024
  %3 = add nsw i32 %2, -4, !dbg !8024
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !8024
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !8024
  %6 = icmp slt i32 %0, 0, !dbg !8024
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !8024
  store volatile i8 16, i8* %7, align 1, !dbg !8025
  ret void, !dbg !8027
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !8028 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8134, metadata !DIExpression()), !dbg !8135
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8136
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !8138
  br i1 %3, label %4, label %12, !dbg !8139

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !8140, !srcloc !8152
  call void @llvm.dbg.value(metadata i32 %5, metadata !8143, metadata !DIExpression()) #23, !dbg !8153
  %6 = icmp eq i32 %5, 0, !dbg !8154
  br i1 %6, label %12, label %7, !dbg !8155

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8156
  %9 = or i32 %8, 268435456, !dbg !8156
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8156
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8158
  %11 = and i32 %10, -32769, !dbg !8158
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8158
  br label %12, !dbg !8159

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !8160
  ret void, !dbg !8161
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !8162 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #25, !dbg !8163
  ret void, !dbg !8164
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !645 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !760, metadata !DIExpression()), !dbg !8165
  call void @llvm.dbg.value(metadata i8 0, metadata !761, metadata !DIExpression()), !dbg !8165
  call void @llvm.dbg.value(metadata i32 64, metadata !763, metadata !DIExpression()), !dbg !8165
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !8166
  %3 = load i32, i32* %2, align 4, !dbg !8166
  %4 = add i32 %3, -64, !dbg !8168
  call void @llvm.dbg.value(metadata i32 %4, metadata !762, metadata !DIExpression()), !dbg !8165
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !8169
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !8170
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !8171
  call void @llvm.dbg.value(metadata i8 1, metadata !761, metadata !DIExpression()), !dbg !8165
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #25, !dbg !8172
  ret void, !dbg !8173
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !8174 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !8175
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !8176, !srcloc !8179
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !8180, !srcloc !8183
  ret void, !dbg !8184
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !8185 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #23, !dbg !8186, !srcloc !8189
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !8190
  ret void, !dbg !8191
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !8192 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8207, metadata !DIExpression()), !dbg !8211
  call void @llvm.dbg.value(metadata i8 %1, metadata !8208, metadata !DIExpression()), !dbg !8211
  call void @llvm.dbg.value(metadata i32 %2, metadata !8209, metadata !DIExpression()), !dbg !8211
  call void @llvm.dbg.value(metadata i32 %3, metadata !8210, metadata !DIExpression()), !dbg !8211
  tail call fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !8212
  ret void, !dbg !8214
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !8215 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8220, metadata !DIExpression()), !dbg !8225
  call void @llvm.dbg.value(metadata i8 %1, metadata !8221, metadata !DIExpression()), !dbg !8225
  call void @llvm.dbg.value(metadata i32 undef, metadata !8222, metadata !DIExpression()), !dbg !8225
  call void @llvm.dbg.value(metadata i32 undef, metadata !8223, metadata !DIExpression()), !dbg !8225
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !8226
  call void @llvm.dbg.value(metadata i8 %3, metadata !8224, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8225
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #24, !dbg !8227
  call void @llvm.dbg.value(metadata i32 %4, metadata !8224, metadata !DIExpression()), !dbg !8225
  %5 = trunc i32 %4 to i8, !dbg !8228
  store i8 %5, i8* @static_regions_num, align 1, !dbg !8229
  ret void, !dbg !8230
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #1 !dbg !8231 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8235, metadata !DIExpression()), !dbg !8241
  call void @llvm.dbg.value(metadata i8 %1, metadata !8236, metadata !DIExpression()), !dbg !8241
  call void @llvm.dbg.value(metadata i8 %2, metadata !8237, metadata !DIExpression()), !dbg !8241
  call void @llvm.dbg.value(metadata i1 %3, metadata !8238, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8241
  %5 = zext i8 %2 to i32, !dbg !8242
  call void @llvm.dbg.value(metadata i32 %5, metadata !8240, metadata !DIExpression()), !dbg !8241
  call void @llvm.dbg.value(metadata i32 0, metadata !8239, metadata !DIExpression()), !dbg !8241
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !8240, metadata !DIExpression()), !dbg !8241
  call void @llvm.dbg.value(metadata i32 0, metadata !8239, metadata !DIExpression()), !dbg !8241
  %7 = icmp eq i8 %1, 0, !dbg !8243
  br i1 %7, label %30, label %8, !dbg !8246

8:                                                ; preds = %4, %26
  %9 = phi i32 [ %27, %26 ], [ %5, %4 ]
  %10 = phi i32 [ %28, %26 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8240, metadata !DIExpression()), !dbg !8241
  call void @llvm.dbg.value(metadata i32 %10, metadata !8239, metadata !DIExpression()), !dbg !8241
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !8247
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !8250
  %13 = load i32, i32* %12, align 4, !dbg !8250
  %14 = icmp eq i32 %13, 0, !dbg !8251
  br i1 %14, label %26, label %15, !dbg !8252

15:                                               ; preds = %8
  br i1 %3, label %16, label %20, !dbg !8253

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !8255
  %18 = icmp eq i32 %17, 0, !dbg !8255
  br i1 %18, label %19, label %20, !dbg !8256

19:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.72, i32 0, i32 0), i32 noundef 69, i32 noundef %10) #25, !dbg !8257
  br label %30, !dbg !8263

20:                                               ; preds = %16, %15
  %21 = trunc i32 %9 to i8, !dbg !8264
  %22 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %21, %struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !8265
  call void @llvm.dbg.value(metadata i32 %22, metadata !8240, metadata !DIExpression()), !dbg !8241
  %23 = icmp eq i32 %22, -22, !dbg !8266
  br i1 %23, label %30, label %24, !dbg !8268

24:                                               ; preds = %20
  %25 = add nsw i32 %22, 1, !dbg !8269
  call void @llvm.dbg.value(metadata i32 %25, metadata !8240, metadata !DIExpression()), !dbg !8241
  br label %26, !dbg !8270

26:                                               ; preds = %8, %24
  %27 = phi i32 [ %9, %8 ], [ %25, %24 ], !dbg !8241
  call void @llvm.dbg.value(metadata i32 %27, metadata !8240, metadata !DIExpression()), !dbg !8241
  %28 = add nuw nsw i32 %10, 1, !dbg !8271
  call void @llvm.dbg.value(metadata i32 %28, metadata !8239, metadata !DIExpression()), !dbg !8241
  %29 = icmp eq i32 %28, %6, !dbg !8243
  br i1 %29, label %30, label %8, !dbg !8246, !llvm.loop !8272

30:                                               ; preds = %20, %26, %4, %19
  %31 = phi i32 [ -22, %19 ], [ %5, %4 ], [ -22, %20 ], [ %27, %26 ], !dbg !8241
  ret i32 %31, !dbg !8274
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #16 !dbg !8275 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8279, metadata !DIExpression()), !dbg !8281
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !8282
  %3 = load i32, i32* %2, align 4, !dbg !8282
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !8283, !range !8284
  %5 = icmp ult i32 %4, 2, !dbg !8283
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !8285
  br i1 %7, label %8, label %15, !dbg !8285

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !8286
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !8287
  %11 = load i32, i32* %10, align 4, !dbg !8287
  %12 = and i32 %11, %9, !dbg !8288
  %13 = icmp eq i32 %12, 0, !dbg !8289
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !8280, metadata !DIExpression()), !dbg !8281
  ret i32 %16, !dbg !8290
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #1 !dbg !8291 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !8295, metadata !DIExpression()), !dbg !8298
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !8296, metadata !DIExpression()), !dbg !8298
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !8299
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #23, !dbg !8299
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !8297, metadata !DIExpression()), !dbg !8300
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !8301
  %6 = load i32, i32* %5, align 4, !dbg !8301
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !8302
  store i32 %6, i32* %7, align 4, !dbg !8303
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !8304
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !8305
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !8306
  %11 = load i32, i32* %10, align 4, !dbg !8306
  call fastcc void @get_region_attr_from_mpu_partition_info(%union.anon* noundef nonnull %8, %union.anon* noundef nonnull %9, i32 noundef %11) #24, !dbg !8307
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #24, !dbg !8308
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #23, !dbg !8309
  ret i32 %12, !dbg !8310
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%union.anon* nocapture noundef writeonly %0, %union.anon* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #17 !dbg !8311 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !8318, metadata !DIExpression()), !dbg !8322
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !8319, metadata !DIExpression()), !dbg !8322
  call void @llvm.dbg.value(metadata i32 undef, metadata !8320, metadata !DIExpression()), !dbg !8322
  call void @llvm.dbg.value(metadata i32 %2, metadata !8321, metadata !DIExpression()), !dbg !8322
  %4 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !8323
  %5 = load i32, i32* %4, align 4, !dbg !8323
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #24, !dbg !8324
  %7 = or i32 %6, %5, !dbg !8325
  %8 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !8326
  store i32 %7, i32* %8, align 4, !dbg !8327
  ret void, !dbg !8328
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #1 !dbg !8329 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !8333, metadata !DIExpression()), !dbg !8335
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !8334, metadata !DIExpression()), !dbg !8335
  %3 = zext i8 %0 to i32, !dbg !8336
  %4 = icmp ugt i8 %0, 7, !dbg !8338
  br i1 %4, label %5, label %6, !dbg !8339

5:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.1.73, i32 0, i32 0), i32 noundef 69, i32 noundef %3) #25, !dbg !8340
  br label %7, !dbg !8346

6:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #24, !dbg !8347
  br label %7, !dbg !8348

7:                                                ; preds = %6, %5
  %8 = phi i32 [ -22, %5 ], [ %3, %6 ], !dbg !8335
  ret i32 %8, !dbg !8349
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !8350 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8354, metadata !DIExpression()), !dbg !8356
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !8355, metadata !DIExpression()), !dbg !8356
  tail call fastcc void @set_region_number(i32 noundef %0) #24, !dbg !8357
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !8358
  %4 = load i32, i32* %3, align 4, !dbg !8358
  %5 = and i32 %4, -32, !dbg !8359
  %6 = or i32 %5, %0, !dbg !8360
  %7 = or i32 %6, 16, !dbg !8360
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !8361
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !8362
  %9 = load i32, i32* %8, align 4, !dbg !8362
  %10 = or i32 %9, 1, !dbg !8363
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !8364
  ret void, !dbg !8365
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #15 !dbg !8366 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8369, metadata !DIExpression()), !dbg !8370
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !8371
  ret void, !dbg !8372
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #12 !dbg !8373 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8377, metadata !DIExpression()), !dbg !8378
  %2 = icmp ult i32 %0, 33, !dbg !8379
  br i1 %2, label %11, label %3, !dbg !8381

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !8382
  br i1 %4, label %11, label %5, !dbg !8384

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !8385
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !8386, !range !8284
  %8 = mul nsw i32 %7, -2, !dbg !8387
  %9 = add nsw i32 %8, 62, !dbg !8387
  %10 = and i32 %9, 62, !dbg !8388
  br label %11, !dbg !8389

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !8378
  ret i32 %12, !dbg !8390
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #3

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #1 !dbg !8391 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8395, metadata !DIExpression()), !dbg !8397
  call void @llvm.dbg.value(metadata i8 %1, metadata !8396, metadata !DIExpression()), !dbg !8397
  tail call fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !8398
  ret void, !dbg !8400
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !8401 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8405, metadata !DIExpression()), !dbg !8412
  call void @llvm.dbg.value(metadata i8 %1, metadata !8406, metadata !DIExpression()), !dbg !8412
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !8413
  call void @llvm.dbg.value(metadata i8 %3, metadata !8407, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8412
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #24, !dbg !8414
  call void @llvm.dbg.value(metadata i32 %4, metadata !8407, metadata !DIExpression()), !dbg !8412
  %5 = icmp ne i32 %4, -22, !dbg !8415
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !8416
  call void @llvm.dbg.value(metadata i32 %4, metadata !8408, metadata !DIExpression()), !dbg !8417
  br i1 %7, label %8, label %12, !dbg !8416

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8408, metadata !DIExpression()), !dbg !8417
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #24, !dbg !8418
  %10 = add i32 %9, 1, !dbg !8421
  call void @llvm.dbg.value(metadata i32 %10, metadata !8408, metadata !DIExpression()), !dbg !8417
  %11 = icmp eq i32 %10, 8, !dbg !8422
  br i1 %11, label %12, label %8, !dbg !8423, !llvm.loop !8424

12:                                               ; preds = %8, %2
  ret void, !dbg !8426
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #15 !dbg !8427 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8430, metadata !DIExpression()), !dbg !8431
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !8432
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !8433
  ret void, !dbg !8434
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !8435 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !8440
  %2 = icmp ugt i32 %1, 8, !dbg !8442
  br i1 %2, label %14, label %3, !dbg !8443

3:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #24, !dbg !8444
  call void @llvm.dbg.value(metadata i32 0, metadata !8439, metadata !DIExpression()), !dbg !8445
  %4 = icmp eq i32 %1, 0, !dbg !8446
  br i1 %4, label %12, label %5, !dbg !8449

5:                                                ; preds = %3
  %6 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %7, !dbg !8449

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %10, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8439, metadata !DIExpression()), !dbg !8445
  %9 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %6, i32 %8, !dbg !8450
  tail call fastcc void @region_init(i32 noundef %8, %struct.arm_mpu_region* noundef %9) #24, !dbg !8452
  %10 = add nuw i32 %8, 1, !dbg !8453
  call void @llvm.dbg.value(metadata i32 %10, metadata !8439, metadata !DIExpression()), !dbg !8445
  %11 = icmp eq i32 %10, %1, !dbg !8446
  br i1 %11, label %12, label %7, !dbg !8449, !llvm.loop !8454

12:                                               ; preds = %7, %3
  %13 = trunc i32 %1 to i8, !dbg !8456
  store i8 %13, i8* @static_regions_num, align 1, !dbg !8457
  tail call void @arm_core_mpu_enable() #24, !dbg !8458
  br label %14, !dbg !8459

14:                                               ; preds = %0, %12
  %15 = phi i32 [ 0, %12 ], [ -1, %0 ], !dbg !8445
  ret i32 %15, !dbg !8460
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !8461 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8468, metadata !DIExpression()), !dbg !8471
  call void @llvm.dbg.value(metadata i8* %1, metadata !8469, metadata !DIExpression()), !dbg !8471
  call void @llvm.dbg.value(metadata i8* %0, metadata !8470, metadata !DIExpression()), !dbg !8471
  %3 = load i8, i8* %1, align 1, !dbg !8472
  %4 = icmp eq i8 %3, 0, !dbg !8473
  br i1 %4, label %13, label %5, !dbg !8474

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !8468, metadata !DIExpression()), !dbg !8471
  call void @llvm.dbg.value(metadata i8* %8, metadata !8469, metadata !DIExpression()), !dbg !8471
  store i8 %6, i8* %7, align 1, !dbg !8475
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8477
  call void @llvm.dbg.value(metadata i8* %9, metadata !8468, metadata !DIExpression()), !dbg !8471
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8478
  call void @llvm.dbg.value(metadata i8* %10, metadata !8469, metadata !DIExpression()), !dbg !8471
  %11 = load i8, i8* %10, align 1, !dbg !8472
  %12 = icmp eq i8 %11, 0, !dbg !8473
  br i1 %12, label %13, label %5, !dbg !8474, !llvm.loop !8479

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !8481
  ret i8* %0, !dbg !8482
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !8483 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8487, metadata !DIExpression()), !dbg !8491
  call void @llvm.dbg.value(metadata i8* %1, metadata !8488, metadata !DIExpression()), !dbg !8491
  call void @llvm.dbg.value(metadata i32 %2, metadata !8489, metadata !DIExpression()), !dbg !8491
  call void @llvm.dbg.value(metadata i8* %0, metadata !8490, metadata !DIExpression()), !dbg !8491
  %4 = icmp eq i32 %2, 0, !dbg !8492
  br i1 %4, label %22, label %5, !dbg !8493

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !8487, metadata !DIExpression()), !dbg !8491
  call void @llvm.dbg.value(metadata i32 %7, metadata !8489, metadata !DIExpression()), !dbg !8491
  call void @llvm.dbg.value(metadata i8* %8, metadata !8488, metadata !DIExpression()), !dbg !8491
  %9 = load i8, i8* %8, align 1, !dbg !8494
  %10 = icmp eq i8 %9, 0, !dbg !8495
  br i1 %10, label %16, label %11, !dbg !8496

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !8497
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8499
  call void @llvm.dbg.value(metadata i8* %12, metadata !8488, metadata !DIExpression()), !dbg !8491
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8500
  call void @llvm.dbg.value(metadata i8* %13, metadata !8487, metadata !DIExpression()), !dbg !8491
  %14 = add i32 %7, -1, !dbg !8501
  call void @llvm.dbg.value(metadata i32 %14, metadata !8489, metadata !DIExpression()), !dbg !8491
  %15 = icmp eq i32 %14, 0, !dbg !8492
  br i1 %15, label %22, label %5, !dbg !8493, !llvm.loop !8502

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !8487, metadata !DIExpression()), !dbg !8491
  call void @llvm.dbg.value(metadata i32 %18, metadata !8489, metadata !DIExpression()), !dbg !8491
  store i8 0, i8* %17, align 1, !dbg !8504
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8506
  call void @llvm.dbg.value(metadata i8* %19, metadata !8487, metadata !DIExpression()), !dbg !8491
  %20 = add i32 %18, -1, !dbg !8507
  call void @llvm.dbg.value(metadata i32 %20, metadata !8489, metadata !DIExpression()), !dbg !8491
  %21 = icmp eq i32 %20, 0, !dbg !8508
  br i1 %21, label %22, label %16, !dbg !8509, !llvm.loop !8510

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !8512
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #9 !dbg !8513 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8517, metadata !DIExpression()), !dbg !8520
  call void @llvm.dbg.value(metadata i32 %1, metadata !8518, metadata !DIExpression()), !dbg !8520
  call void @llvm.dbg.value(metadata i32 %1, metadata !8519, metadata !DIExpression()), !dbg !8520
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !8521

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !8517, metadata !DIExpression()), !dbg !8520
  %6 = load i8, i8* %5, align 1, !dbg !8522
  %7 = icmp eq i8 %6, %3, !dbg !8523
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !8524
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !8525
  call void @llvm.dbg.value(metadata i8* %10, metadata !8517, metadata !DIExpression()), !dbg !8520
  br i1 %9, label %11, label %4, !dbg !8524, !llvm.loop !8527

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !8529
  ret i8* %12, !dbg !8530
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #9 !dbg !8531 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8533, metadata !DIExpression()), !dbg !8536
  call void @llvm.dbg.value(metadata i32 %1, metadata !8534, metadata !DIExpression()), !dbg !8536
  call void @llvm.dbg.value(metadata i8* null, metadata !8535, metadata !DIExpression()), !dbg !8536
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !8537

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !8536
  call void @llvm.dbg.value(metadata i8* %6, metadata !8535, metadata !DIExpression()), !dbg !8536
  call void @llvm.dbg.value(metadata i8* %5, metadata !8533, metadata !DIExpression()), !dbg !8536
  %7 = load i8, i8* %5, align 1, !dbg !8538
  %8 = icmp eq i8 %7, %3, !dbg !8541
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !8542
  call void @llvm.dbg.value(metadata i8* %9, metadata !8535, metadata !DIExpression()), !dbg !8536
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !8543
  call void @llvm.dbg.value(metadata i8* %10, metadata !8533, metadata !DIExpression()), !dbg !8536
  %11 = icmp eq i8 %7, 0, !dbg !8544
  br i1 %11, label %12, label %4, !dbg !8544, !llvm.loop !8545

12:                                               ; preds = %4
  ret i8* %9, !dbg !8547
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #9 !dbg !8548 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8552, metadata !DIExpression()), !dbg !8554
  call void @llvm.dbg.value(metadata i32 0, metadata !8553, metadata !DIExpression()), !dbg !8554
  %2 = load i8, i8* %0, align 1, !dbg !8555
  %3 = icmp eq i8 %2, 0, !dbg !8556
  br i1 %3, label %11, label %4, !dbg !8557

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !8553, metadata !DIExpression()), !dbg !8554
  call void @llvm.dbg.value(metadata i8* %6, metadata !8552, metadata !DIExpression()), !dbg !8554
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8558
  call void @llvm.dbg.value(metadata i8* %7, metadata !8552, metadata !DIExpression()), !dbg !8554
  %8 = add i32 %5, 1, !dbg !8560
  call void @llvm.dbg.value(metadata i32 %8, metadata !8553, metadata !DIExpression()), !dbg !8554
  %9 = load i8, i8* %7, align 1, !dbg !8555
  %10 = icmp eq i8 %9, 0, !dbg !8556
  br i1 %10, label %11, label %4, !dbg !8557, !llvm.loop !8561

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !8554
  ret i32 %12, !dbg !8563
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #9 !dbg !8564 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8568, metadata !DIExpression()), !dbg !8571
  call void @llvm.dbg.value(metadata i32 %1, metadata !8569, metadata !DIExpression()), !dbg !8571
  call void @llvm.dbg.value(metadata i32 0, metadata !8570, metadata !DIExpression()), !dbg !8571
  %3 = load i8, i8* %0, align 1, !dbg !8572
  %4 = icmp ne i8 %3, 0, !dbg !8573
  %5 = icmp ne i32 %1, 0, !dbg !8574
  %6 = and i1 %4, %5, !dbg !8574
  br i1 %6, label %7, label %16, !dbg !8575

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8570, metadata !DIExpression()), !dbg !8571
  call void @llvm.dbg.value(metadata i8* %9, metadata !8568, metadata !DIExpression()), !dbg !8571
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8576
  call void @llvm.dbg.value(metadata i8* %10, metadata !8568, metadata !DIExpression()), !dbg !8571
  %11 = add nuw i32 %8, 1, !dbg !8578
  call void @llvm.dbg.value(metadata i32 %11, metadata !8570, metadata !DIExpression()), !dbg !8571
  %12 = load i8, i8* %10, align 1, !dbg !8572
  %13 = icmp ne i8 %12, 0, !dbg !8573
  %14 = icmp ult i32 %11, %1, !dbg !8574
  %15 = select i1 %13, i1 %14, i1 false, !dbg !8574
  br i1 %15, label %7, label %16, !dbg !8575, !llvm.loop !8579

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !8571
  ret i32 %17, !dbg !8581
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #9 !dbg !8582 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8586, metadata !DIExpression()), !dbg !8588
  call void @llvm.dbg.value(metadata i8* %1, metadata !8587, metadata !DIExpression()), !dbg !8588
  %3 = load i8, i8* %0, align 1, !dbg !8589
  %4 = load i8, i8* %1, align 1, !dbg !8590
  %5 = icmp ne i8 %3, %4, !dbg !8591
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !8592
  br i1 %7, label %18, label %8, !dbg !8592

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !8587, metadata !DIExpression()), !dbg !8588
  call void @llvm.dbg.value(metadata i8* %10, metadata !8586, metadata !DIExpression()), !dbg !8588
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8593
  call void @llvm.dbg.value(metadata i8* %11, metadata !8586, metadata !DIExpression()), !dbg !8588
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8595
  call void @llvm.dbg.value(metadata i8* %12, metadata !8587, metadata !DIExpression()), !dbg !8588
  %13 = load i8, i8* %11, align 1, !dbg !8589
  %14 = load i8, i8* %12, align 1, !dbg !8590
  %15 = icmp ne i8 %13, %14, !dbg !8591
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !8592
  br i1 %17, label %18, label %8, !dbg !8592, !llvm.loop !8596

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !8589
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !8590
  %21 = zext i8 %19 to i32, !dbg !8599
  %22 = zext i8 %20 to i32, !dbg !8600
  %23 = sub nsw i32 %21, %22, !dbg !8601
  ret i32 %23, !dbg !8602
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #9 !dbg !8603 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8607, metadata !DIExpression()), !dbg !8610
  call void @llvm.dbg.value(metadata i8* %1, metadata !8608, metadata !DIExpression()), !dbg !8610
  call void @llvm.dbg.value(metadata i32 %2, metadata !8609, metadata !DIExpression()), !dbg !8610
  %4 = icmp eq i32 %2, 0, !dbg !8611
  br i1 %4, label %23, label %5, !dbg !8611

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !8609, metadata !DIExpression()), !dbg !8610
  call void @llvm.dbg.value(metadata i8* %7, metadata !8608, metadata !DIExpression()), !dbg !8610
  call void @llvm.dbg.value(metadata i8* %8, metadata !8607, metadata !DIExpression()), !dbg !8610
  %9 = load i8, i8* %8, align 1, !dbg !8612
  %10 = load i8, i8* %7, align 1, !dbg !8613
  %11 = icmp ne i8 %9, %10, !dbg !8614
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !8615
  br i1 %13, label %19, label %14, !dbg !8615

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8616
  call void @llvm.dbg.value(metadata i8* %15, metadata !8607, metadata !DIExpression()), !dbg !8610
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8618
  call void @llvm.dbg.value(metadata i8* %16, metadata !8608, metadata !DIExpression()), !dbg !8610
  %17 = add i32 %6, -1, !dbg !8619
  call void @llvm.dbg.value(metadata i32 %17, metadata !8609, metadata !DIExpression()), !dbg !8610
  %18 = icmp eq i32 %17, 0, !dbg !8611
  br i1 %18, label %23, label %5, !dbg !8611, !llvm.loop !8620

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !8623
  %21 = zext i8 %10 to i32, !dbg !8624
  %22 = sub nsw i32 %20, %21, !dbg !8625
  br label %23, !dbg !8626

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !8626
  ret i32 %24, !dbg !8627
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #14 !dbg !8628 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8632, metadata !DIExpression()), !dbg !8637
  call void @llvm.dbg.value(metadata i8* %1, metadata !8633, metadata !DIExpression()), !dbg !8637
  call void @llvm.dbg.value(metadata i8** %2, metadata !8634, metadata !DIExpression()), !dbg !8637
  %4 = icmp eq i8* %0, null, !dbg !8638
  br i1 %4, label %5, label %7, !dbg !8638

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !8639
  br label %7, !dbg !8638

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !8638
  call void @llvm.dbg.value(metadata i8* %8, metadata !8635, metadata !DIExpression()), !dbg !8637
  %9 = load i8, i8* %8, align 1, !dbg !8640
  %10 = icmp eq i8 %9, 0, !dbg !8640
  br i1 %10, label %33, label %11, !dbg !8641

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8635, metadata !DIExpression()), !dbg !8637
  %14 = zext i8 %12 to i32, !dbg !8640
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #24, !dbg !8642
  %16 = icmp eq i8* %15, null, !dbg !8641
  br i1 %16, label %21, label %17, !dbg !8643

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8644
  call void @llvm.dbg.value(metadata i8* %18, metadata !8635, metadata !DIExpression()), !dbg !8637
  %19 = load i8, i8* %18, align 1, !dbg !8640
  %20 = icmp eq i8 %19, 0, !dbg !8640
  br i1 %20, label %33, label %11, !dbg !8641, !llvm.loop !8646

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !8636, metadata !DIExpression()), !dbg !8637
  %24 = zext i8 %22 to i32, !dbg !8648
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #24, !dbg !8649
  %26 = icmp eq i8* %25, null, !dbg !8650
  br i1 %26, label %27, label %31, !dbg !8651

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8652
  call void @llvm.dbg.value(metadata i8* %28, metadata !8636, metadata !DIExpression()), !dbg !8637
  %29 = load i8, i8* %28, align 1, !dbg !8648
  %30 = icmp eq i8 %29, 0, !dbg !8648
  br i1 %30, label %33, label %21, !dbg !8654, !llvm.loop !8655

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !8657
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8660
  br label %33, !dbg !8661

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !8637
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !8637
  store i8* %34, i8** %2, align 4, !dbg !8637
  ret i8* %35, !dbg !8662
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !8663 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8665, metadata !DIExpression()), !dbg !8667
  call void @llvm.dbg.value(metadata i8* %1, metadata !8666, metadata !DIExpression()), !dbg !8667
  %3 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !8668
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !8669
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #24, !dbg !8670
  ret i8* %0, !dbg !8671
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !8672 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8674, metadata !DIExpression()), !dbg !8679
  call void @llvm.dbg.value(metadata i8* %1, metadata !8675, metadata !DIExpression()), !dbg !8679
  call void @llvm.dbg.value(metadata i32 %2, metadata !8676, metadata !DIExpression()), !dbg !8679
  call void @llvm.dbg.value(metadata i8* %0, metadata !8677, metadata !DIExpression()), !dbg !8679
  %4 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !8680
  call void @llvm.dbg.value(metadata i32 %4, metadata !8678, metadata !DIExpression()), !dbg !8679
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !8681
  call void @llvm.dbg.value(metadata i8* %5, metadata !8674, metadata !DIExpression()), !dbg !8679
  call void @llvm.dbg.value(metadata i8* %1, metadata !8675, metadata !DIExpression()), !dbg !8679
  call void @llvm.dbg.value(metadata i32 %2, metadata !8676, metadata !DIExpression()), !dbg !8679
  call void @llvm.dbg.value(metadata i32 %2, metadata !8676, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8679
  %6 = icmp eq i32 %2, 0, !dbg !8682
  br i1 %6, label %18, label %7, !dbg !8683

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !8684
  call void @llvm.dbg.value(metadata i8* %9, metadata !8674, metadata !DIExpression()), !dbg !8679
  call void @llvm.dbg.value(metadata i8* %10, metadata !8675, metadata !DIExpression()), !dbg !8679
  %12 = load i8, i8* %10, align 1, !dbg !8685
  %13 = icmp eq i8 %12, 0, !dbg !8686
  br i1 %13, label %18, label %14, !dbg !8687

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8688
  call void @llvm.dbg.value(metadata i8* %15, metadata !8675, metadata !DIExpression()), !dbg !8679
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8690
  call void @llvm.dbg.value(metadata i8* %16, metadata !8674, metadata !DIExpression()), !dbg !8679
  store i8 %12, i8* %9, align 1, !dbg !8691
  call void @llvm.dbg.value(metadata i32 %11, metadata !8676, metadata !DIExpression()), !dbg !8679
  call void @llvm.dbg.value(metadata i32 %11, metadata !8676, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8679
  %17 = icmp eq i32 %11, 0, !dbg !8682
  br i1 %17, label %18, label %7, !dbg !8683, !llvm.loop !8692

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !8679
  store i8 0, i8* %19, align 1, !dbg !8694
  ret i8* %0, !dbg !8695
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #9 !dbg !8696 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8700, metadata !DIExpression()), !dbg !8705
  call void @llvm.dbg.value(metadata i8* %1, metadata !8701, metadata !DIExpression()), !dbg !8705
  call void @llvm.dbg.value(metadata i32 %2, metadata !8702, metadata !DIExpression()), !dbg !8705
  call void @llvm.dbg.value(metadata i8* %0, metadata !8703, metadata !DIExpression()), !dbg !8705
  call void @llvm.dbg.value(metadata i8* %1, metadata !8704, metadata !DIExpression()), !dbg !8705
  %4 = icmp eq i32 %2, 0, !dbg !8706
  br i1 %4, label %31, label %5, !dbg !8708

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8704, metadata !DIExpression()), !dbg !8705
  call void @llvm.dbg.value(metadata i8* %0, metadata !8703, metadata !DIExpression()), !dbg !8705
  call void @llvm.dbg.value(metadata i32 %2, metadata !8702, metadata !DIExpression()), !dbg !8705
  %6 = add i32 %2, -1, !dbg !8709
  call void @llvm.dbg.value(metadata i32 %6, metadata !8702, metadata !DIExpression()), !dbg !8705
  %7 = icmp eq i32 %6, 0, !dbg !8710
  br i1 %7, label %23, label %8, !dbg !8711

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !8712
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !8712
  br label %11, !dbg !8712

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8704, metadata !DIExpression()), !dbg !8705
  call void @llvm.dbg.value(metadata i8* %14, metadata !8703, metadata !DIExpression()), !dbg !8705
  %15 = load i8, i8* %14, align 1, !dbg !8713
  %16 = load i8, i8* %13, align 1, !dbg !8714
  %17 = icmp eq i8 %15, %16, !dbg !8715
  br i1 %17, label %18, label %23, !dbg !8712

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !8716
  call void @llvm.dbg.value(metadata i8* %19, metadata !8703, metadata !DIExpression()), !dbg !8705
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8718
  call void @llvm.dbg.value(metadata i8* %20, metadata !8704, metadata !DIExpression()), !dbg !8705
  call void @llvm.dbg.value(metadata i32 %12, metadata !8702, metadata !DIExpression()), !dbg !8705
  %21 = add i32 %12, -1, !dbg !8709
  call void @llvm.dbg.value(metadata i32 %21, metadata !8702, metadata !DIExpression()), !dbg !8705
  %22 = icmp eq i32 %21, 0, !dbg !8710
  br i1 %22, label %23, label %11, !dbg !8711, !llvm.loop !8719

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !8705
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !8705
  %26 = load i8, i8* %24, align 1, !dbg !8721
  %27 = zext i8 %26 to i32, !dbg !8721
  %28 = load i8, i8* %25, align 1, !dbg !8722
  %29 = zext i8 %28 to i32, !dbg !8722
  %30 = sub nsw i32 %27, %29, !dbg !8723
  br label %31, !dbg !8724

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !8705
  ret i32 %32, !dbg !8725
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #14 !dbg !8726 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8730, metadata !DIExpression()), !dbg !8735
  call void @llvm.dbg.value(metadata i8* %1, metadata !8731, metadata !DIExpression()), !dbg !8735
  call void @llvm.dbg.value(metadata i32 %2, metadata !8732, metadata !DIExpression()), !dbg !8735
  call void @llvm.dbg.value(metadata i8* %0, metadata !8733, metadata !DIExpression()), !dbg !8735
  call void @llvm.dbg.value(metadata i8* %1, metadata !8734, metadata !DIExpression()), !dbg !8735
  %4 = ptrtoint i8* %0 to i32, !dbg !8736
  %5 = ptrtoint i8* %1 to i32, !dbg !8736
  %6 = sub i32 %4, %5, !dbg !8736
  %7 = icmp ult i32 %6, %2, !dbg !8738
  br i1 %7, label %10, label %8, !dbg !8739

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8734, metadata !DIExpression()), !dbg !8735
  call void @llvm.dbg.value(metadata i8* %0, metadata !8733, metadata !DIExpression()), !dbg !8735
  call void @llvm.dbg.value(metadata i32 %2, metadata !8732, metadata !DIExpression()), !dbg !8735
  %9 = icmp eq i32 %2, 0, !dbg !8740
  br i1 %9, label %26, label %17, !dbg !8742

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !8732, metadata !DIExpression()), !dbg !8735
  %12 = add i32 %11, -1, !dbg !8743
  call void @llvm.dbg.value(metadata i32 %12, metadata !8732, metadata !DIExpression()), !dbg !8735
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !8746
  %14 = load i8, i8* %13, align 1, !dbg !8746
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !8747
  store i8 %14, i8* %15, align 1, !dbg !8748
  %16 = icmp eq i32 %12, 0, !dbg !8749
  br i1 %16, label %26, label %10, !dbg !8750, !llvm.loop !8751

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !8734, metadata !DIExpression()), !dbg !8735
  call void @llvm.dbg.value(metadata i8* %19, metadata !8733, metadata !DIExpression()), !dbg !8735
  call void @llvm.dbg.value(metadata i32 %20, metadata !8732, metadata !DIExpression()), !dbg !8735
  %21 = load i8, i8* %18, align 1, !dbg !8753
  store i8 %21, i8* %19, align 1, !dbg !8755
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !8756
  call void @llvm.dbg.value(metadata i8* %22, metadata !8733, metadata !DIExpression()), !dbg !8735
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !8757
  call void @llvm.dbg.value(metadata i8* %23, metadata !8734, metadata !DIExpression()), !dbg !8735
  %24 = add i32 %20, -1, !dbg !8758
  call void @llvm.dbg.value(metadata i32 %24, metadata !8732, metadata !DIExpression()), !dbg !8735
  %25 = icmp eq i32 %24, 0, !dbg !8740
  br i1 %25, label %26, label %17, !dbg !8742, !llvm.loop !8759

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !8761
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !8762 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8768, metadata !DIExpression()), !dbg !8773
  call void @llvm.dbg.value(metadata i8* %1, metadata !8769, metadata !DIExpression()), !dbg !8773
  call void @llvm.dbg.value(metadata i32 %2, metadata !8770, metadata !DIExpression()), !dbg !8773
  call void @llvm.dbg.value(metadata i8* %0, metadata !8771, metadata !DIExpression()), !dbg !8773
  call void @llvm.dbg.value(metadata i8* %1, metadata !8772, metadata !DIExpression()), !dbg !8773
  %4 = icmp eq i32 %2, 0, !dbg !8774
  br i1 %4, label %14, label %5, !dbg !8775

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !8772, metadata !DIExpression()), !dbg !8773
  call void @llvm.dbg.value(metadata i8* %7, metadata !8771, metadata !DIExpression()), !dbg !8773
  call void @llvm.dbg.value(metadata i32 %8, metadata !8770, metadata !DIExpression()), !dbg !8773
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8776
  call void @llvm.dbg.value(metadata i8* %9, metadata !8772, metadata !DIExpression()), !dbg !8773
  %10 = load i8, i8* %6, align 1, !dbg !8778
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8779
  call void @llvm.dbg.value(metadata i8* %11, metadata !8771, metadata !DIExpression()), !dbg !8773
  store i8 %10, i8* %7, align 1, !dbg !8780
  %12 = add i32 %8, -1, !dbg !8781
  call void @llvm.dbg.value(metadata i32 %12, metadata !8770, metadata !DIExpression()), !dbg !8773
  %13 = icmp eq i32 %12, 0, !dbg !8774
  br i1 %13, label %14, label %5, !dbg !8775, !llvm.loop !8782

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !8784
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #18 !dbg !8785 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8789, metadata !DIExpression()), !dbg !8794
  call void @llvm.dbg.value(metadata i32 %1, metadata !8790, metadata !DIExpression()), !dbg !8794
  call void @llvm.dbg.value(metadata i32 %2, metadata !8791, metadata !DIExpression()), !dbg !8794
  call void @llvm.dbg.value(metadata i8* %0, metadata !8792, metadata !DIExpression()), !dbg !8794
  %4 = trunc i32 %1 to i8, !dbg !8795
  call void @llvm.dbg.value(metadata i8 %4, metadata !8793, metadata !DIExpression()), !dbg !8794
  call void @llvm.dbg.value(metadata i32 %2, metadata !8791, metadata !DIExpression()), !dbg !8794
  call void @llvm.dbg.value(metadata i8* %0, metadata !8792, metadata !DIExpression()), !dbg !8794
  %5 = icmp eq i32 %2, 0, !dbg !8796
  br i1 %5, label %12, label %6, !dbg !8797

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !8791, metadata !DIExpression()), !dbg !8794
  call void @llvm.dbg.value(metadata i8* %8, metadata !8792, metadata !DIExpression()), !dbg !8794
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8798
  call void @llvm.dbg.value(metadata i8* %9, metadata !8792, metadata !DIExpression()), !dbg !8794
  store i8 %4, i8* %8, align 1, !dbg !8800
  %10 = add i32 %7, -1, !dbg !8801
  call void @llvm.dbg.value(metadata i32 %10, metadata !8791, metadata !DIExpression()), !dbg !8794
  %11 = icmp eq i32 %10, 0, !dbg !8796
  br i1 %11, label %12, label %6, !dbg !8797, !llvm.loop !8802

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !8804
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #9 !dbg !8805 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8809, metadata !DIExpression()), !dbg !8815
  call void @llvm.dbg.value(metadata i32 %1, metadata !8810, metadata !DIExpression()), !dbg !8815
  call void @llvm.dbg.value(metadata i32 %2, metadata !8811, metadata !DIExpression()), !dbg !8815
  %4 = icmp eq i32 %2, 0, !dbg !8816
  br i1 %4, label %17, label %5, !dbg !8817

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !8818

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !8819
  call void @llvm.dbg.value(metadata i8* %9, metadata !8812, metadata !DIExpression()), !dbg !8819
  call void @llvm.dbg.value(metadata i32 %8, metadata !8811, metadata !DIExpression()), !dbg !8815
  call void @llvm.dbg.value(metadata i8* %9, metadata !8812, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8819
  %10 = load i8, i8* %9, align 1, !dbg !8820
  %11 = icmp eq i8 %10, %6, !dbg !8823
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !8824
  call void @llvm.dbg.value(metadata i8* %12, metadata !8812, metadata !DIExpression()), !dbg !8819
  call void @llvm.dbg.value(metadata i32 %13, metadata !8811, metadata !DIExpression()), !dbg !8815
  br i1 %15, label %16, label %7, !dbg !8824, !llvm.loop !8825

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !8827

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !8815
  ret i8* %19, !dbg !8828
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #6 !dbg !8829 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !8831, metadata !DIExpression()), !dbg !8832
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !8833
  ret void, !dbg !8834
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #4 !dbg !8835 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8837, metadata !DIExpression()), !dbg !8838
  ret i32 -1, !dbg !8839
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8840 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8844, metadata !DIExpression()), !dbg !8846
  call void @llvm.dbg.value(metadata i32* %1, metadata !8845, metadata !DIExpression()), !dbg !8846
  %3 = ptrtoint i32* %1 to i32, !dbg !8847
  %4 = and i32 %3, -2, !dbg !8847
  %5 = icmp eq i32 %4, 2, !dbg !8847
  br i1 %5, label %6, label %9, !dbg !8847

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8848
  %8 = tail call i32 %7(i32 noundef %0) #25, !dbg !8848
  br label %9, !dbg !8849

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !8849
  ret i32 %10, !dbg !8850
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8851 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8853, metadata !DIExpression()), !dbg !8855
  call void @llvm.dbg.value(metadata i32* %1, metadata !8854, metadata !DIExpression()), !dbg !8855
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !8856
  ret i32 %3, !dbg !8857
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !8858 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8861, metadata !DIExpression()), !dbg !8863
  call void @llvm.dbg.value(metadata i32* %1, metadata !8862, metadata !DIExpression()), !dbg !8863
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8864, !srcloc !8866
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !8867
  ret i32 %3, !dbg !8868
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !8869 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8874, metadata !DIExpression()), !dbg !8878
  call void @llvm.dbg.value(metadata i32* %1, metadata !8875, metadata !DIExpression()), !dbg !8878
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !8879
  call void @llvm.dbg.value(metadata i32 %3, metadata !8876, metadata !DIExpression()), !dbg !8878
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #24, !dbg !8880
  call void @llvm.dbg.value(metadata i32 %4, metadata !8877, metadata !DIExpression()), !dbg !8878
  %5 = icmp ne i32 %3, %4, !dbg !8881
  %6 = sext i1 %5 to i32, !dbg !8882
  ret i32 %6, !dbg !8883
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !8884 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8888, metadata !DIExpression()), !dbg !8892
  call void @llvm.dbg.value(metadata i32 %1, metadata !8889, metadata !DIExpression()), !dbg !8892
  call void @llvm.dbg.value(metadata i32 %2, metadata !8890, metadata !DIExpression()), !dbg !8892
  call void @llvm.dbg.value(metadata i32* %3, metadata !8891, metadata !DIExpression()), !dbg !8892
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !8893
  ret i32 %5, !dbg !8894
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !8895 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8897, metadata !DIExpression()), !dbg !8901
  call void @llvm.dbg.value(metadata i32 %1, metadata !8898, metadata !DIExpression()), !dbg !8901
  call void @llvm.dbg.value(metadata i32 %2, metadata !8899, metadata !DIExpression()), !dbg !8901
  call void @llvm.dbg.value(metadata i32* %3, metadata !8900, metadata !DIExpression()), !dbg !8901
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8902, !srcloc !8904
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !8905
  ret i32 %5, !dbg !8906
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !8907 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8909, metadata !DIExpression()), !dbg !8917
  call void @llvm.dbg.value(metadata i32 %1, metadata !8910, metadata !DIExpression()), !dbg !8917
  call void @llvm.dbg.value(metadata i32 %2, metadata !8911, metadata !DIExpression()), !dbg !8917
  call void @llvm.dbg.value(metadata i32* %3, metadata !8912, metadata !DIExpression()), !dbg !8917
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !8918
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !8920
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !8920
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !8920
  br i1 %11, label %33, label %12, !dbg !8920

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !8917
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !8917
  call void @llvm.dbg.value(metadata i8* %14, metadata !8915, metadata !DIExpression()), !dbg !8917
  call void @llvm.dbg.value(metadata i32 %13, metadata !8913, metadata !DIExpression()), !dbg !8917
  call void @llvm.dbg.value(metadata i32 %1, metadata !8914, metadata !DIExpression()), !dbg !8917
  br label %15, !dbg !8921

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !8923
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !8917
  call void @llvm.dbg.value(metadata i8* %17, metadata !8915, metadata !DIExpression()), !dbg !8917
  call void @llvm.dbg.value(metadata i32 %16, metadata !8914, metadata !DIExpression()), !dbg !8917
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8924
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8927
  call void @llvm.dbg.value(metadata i8* %19, metadata !8915, metadata !DIExpression()), !dbg !8917
  %20 = load i8, i8* %17, align 1, !dbg !8928
  %21 = zext i8 %20 to i32, !dbg !8929
  %22 = tail call i32 %18(i32 noundef %21) #25, !dbg !8924
  %23 = icmp eq i32 %22, -1, !dbg !8930
  br i1 %23, label %30, label %24, !dbg !8931

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !8932
  call void @llvm.dbg.value(metadata i32 %25, metadata !8914, metadata !DIExpression()), !dbg !8917
  %26 = icmp eq i32 %25, 0, !dbg !8933
  br i1 %26, label %27, label %15, !dbg !8934, !llvm.loop !8935

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !8937
  call void @llvm.dbg.value(metadata i32 %28, metadata !8913, metadata !DIExpression()), !dbg !8917
  %29 = icmp eq i32 %28, 0, !dbg !8938
  br i1 %29, label %30, label %12, !dbg !8939, !llvm.loop !8940

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !8917
  call void @llvm.dbg.value(metadata i32 %31, metadata !8913, metadata !DIExpression()), !dbg !8917
  call void @llvm.dbg.label(metadata !8916), !dbg !8943
  %32 = sub i32 %2, %31, !dbg !8944
  br label %33, !dbg !8945

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !8917
  ret i32 %34, !dbg !8946
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !8947 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8951, metadata !DIExpression()), !dbg !8952
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !8953
  %3 = icmp eq i32 %2, -1, !dbg !8955
  br i1 %3, label %8, label %4, !dbg !8956

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !8957
  %6 = icmp eq i32 %5, -1, !dbg !8958
  %7 = sext i1 %6 to i32, !dbg !8957
  br label %8, !dbg !8959

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !8952
  ret i32 %9, !dbg !8960
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @rtio_simple_submit(%struct.rtio* noundef %0) #1 !dbg !8961 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9052, metadata !DIExpression()), !dbg !9058
  %2 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 2, !dbg !9059
  %3 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9059
  %4 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %3, i32 0, i32 0, i32 3, !dbg !9059
  %5 = tail call fastcc i32 @atomic_get.90(i32* noundef nonnull %4) #24, !dbg !9059
  %6 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9059
  %7 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %6, i32 0, i32 0, i32 1, !dbg !9059
  %8 = load i32, i32* %7, align 4, !dbg !9059
  %9 = add i32 %8, %5, !dbg !9059
  call void @llvm.dbg.value(metadata i32 %9, metadata !9055, metadata !DIExpression()), !dbg !9060
  %10 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %6, i32 0, i32 0, i32 2, !dbg !9059
  %11 = tail call fastcc i32 @atomic_get.90(i32* noundef nonnull %10) #24, !dbg !9059
  %12 = icmp eq i32 %9, %11, !dbg !9059
  call void @llvm.dbg.value(metadata i1 %12, metadata !9057, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9060
  br i1 %12, label %23, label %13, !dbg !9059

13:                                               ; preds = %1
  %14 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9061
  %15 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %14, i32 0, i32 0, i32 1, !dbg !9061
  %16 = load i32, i32* %15, align 4, !dbg !9061
  %17 = add i32 %16, 1, !dbg !9061
  store i32 %17, i32* %15, align 4, !dbg !9061
  %18 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9059
  %19 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %18, i32 0, i32 0, i32 4, !dbg !9059
  %20 = load i32, i32* %19, align 4, !dbg !9059
  %21 = and i32 %20, %9, !dbg !9059
  %22 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %18, i32 0, i32 1, i32 %21, !dbg !9059
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %22, metadata !9053, metadata !DIExpression()), !dbg !9058
  tail call fastcc void @rtio_iodev_submit(%struct.rtio_sqe* noundef nonnull %22, %struct.rtio* noundef nonnull %0) #24, !dbg !9064
  br label %23, !dbg !9067

23:                                               ; preds = %1, %13
  ret i32 0, !dbg !9068
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_get.90(i32* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9069 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !9071, metadata !DIExpression()), !dbg !9072
  %2 = load atomic i32, i32* %0 seq_cst, align 4, !dbg !9073
  ret i32 %2, !dbg !9074
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @rtio_iodev_submit(%struct.rtio_sqe* noundef %0, %struct.rtio* noundef %1) unnamed_addr #1 !dbg !9075 {
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %0, metadata !9077, metadata !DIExpression()), !dbg !9079
  call void @llvm.dbg.value(metadata %struct.rtio* %1, metadata !9078, metadata !DIExpression()), !dbg !9079
  %3 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %0, i32 0, i32 3, !dbg !9080
  %4 = load %struct.rtio_iodev*, %struct.rtio_iodev** %3, align 4, !dbg !9080
  %5 = getelementptr inbounds %struct.rtio_iodev, %struct.rtio_iodev* %4, i32 0, i32 0, !dbg !9081
  %6 = load %struct.rtio_iodev_api*, %struct.rtio_iodev_api** %5, align 4, !dbg !9081
  %7 = getelementptr inbounds %struct.rtio_iodev_api, %struct.rtio_iodev_api* %6, i32 0, i32 0, !dbg !9082
  %8 = load void (%struct.rtio_sqe*, %struct.rtio*)*, void (%struct.rtio_sqe*, %struct.rtio*)** %7, align 4, !dbg !9082
  tail call void %8(%struct.rtio_sqe* noundef %0, %struct.rtio* noundef %1) #25, !dbg !9083
  ret void, !dbg !9084
}

; Function Attrs: noinline nounwind optsize
define dso_local void @rtio_simple_ok(%struct.rtio* noundef %0, %struct.rtio_sqe* nocapture noundef readonly %1, i32 noundef %2) #1 !dbg !9085 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9087, metadata !DIExpression()), !dbg !9091
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %1, metadata !9088, metadata !DIExpression()), !dbg !9091
  call void @llvm.dbg.value(metadata i32 %2, metadata !9089, metadata !DIExpression()), !dbg !9091
  %4 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %1, i32 0, i32 4, !dbg !9092
  %5 = load i8*, i8** %4, align 4, !dbg !9092
  call void @llvm.dbg.value(metadata i8* %5, metadata !9090, metadata !DIExpression()), !dbg !9091
  %6 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 2, !dbg !9093
  %7 = load %struct.rtio_sq*, %struct.rtio_sq** %6, align 4, !dbg !9093
  %8 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %7, i32 0, i32 0, i32 1, !dbg !9093
  %9 = load i32, i32* %8, align 4, !dbg !9093
  %10 = icmp eq i32 %9, 0, !dbg !9093
  br i1 %10, label %15, label %11, !dbg !9096

11:                                               ; preds = %3
  %12 = add i32 %9, -1, !dbg !9097
  store i32 %12, i32* %8, align 4, !dbg !9097
  %13 = load %struct.rtio_sq*, %struct.rtio_sq** %6, align 4, !dbg !9097
  %14 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %13, i32 0, i32 0, i32 3, !dbg !9097
  tail call fastcc void @atomic_add.93(i32* noundef nonnull %14) #24, !dbg !9097
  br label %15, !dbg !9097

15:                                               ; preds = %11, %3
  tail call fastcc void @rtio_cqe_submit(%struct.rtio* noundef nonnull %0, i32 noundef %2, i8* noundef %5) #24, !dbg !9099
  %16 = tail call i32 @rtio_simple_submit(%struct.rtio* noundef nonnull %0) #24, !dbg !9100
  ret void, !dbg !9101
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_add.93(i32* nocapture noundef %0) unnamed_addr #5 !dbg !9102 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !9104, metadata !DIExpression()), !dbg !9106
  call void @llvm.dbg.value(metadata i32 1, metadata !9105, metadata !DIExpression()), !dbg !9106
  %2 = atomicrmw add i32* %0, i32 1 seq_cst, align 4, !dbg !9107
  ret void, !dbg !9108
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @rtio_cqe_submit(%struct.rtio* nocapture noundef %0, i32 noundef %1, i8* noundef %2) unnamed_addr #5 !dbg !9109 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9113, metadata !DIExpression()), !dbg !9121
  call void @llvm.dbg.value(metadata i32 %1, metadata !9114, metadata !DIExpression()), !dbg !9121
  call void @llvm.dbg.value(metadata i8* %2, metadata !9115, metadata !DIExpression()), !dbg !9121
  %4 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 3, !dbg !9122
  %5 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9122
  %6 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %5, i32 0, i32 0, i32 2, !dbg !9122
  %7 = tail call fastcc i32 @atomic_get.90(i32* noundef nonnull %6) #24, !dbg !9122
  %8 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9122
  %9 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %8, i32 0, i32 0, i32 0, !dbg !9122
  %10 = load i32, i32* %9, align 4, !dbg !9122
  %11 = add i32 %10, %7, !dbg !9122
  call void @llvm.dbg.value(metadata i32 %11, metadata !9118, metadata !DIExpression()), !dbg !9123
  %12 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %8, i32 0, i32 0, i32 3, !dbg !9122
  %13 = tail call fastcc i32 @atomic_get.90(i32* noundef nonnull %12) #24, !dbg !9122
  %14 = sub i32 %11, %13, !dbg !9122
  %15 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9122
  %16 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %15, i32 0, i32 0, i32 4, !dbg !9122
  %17 = load i32, i32* %16, align 4, !dbg !9122
  %18 = add i32 %17, 1, !dbg !9122
  %19 = icmp ult i32 %14, %18, !dbg !9122
  call void @llvm.dbg.value(metadata i1 %19, metadata !9120, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9123
  br i1 %19, label %22, label %20, !dbg !9122

20:                                               ; preds = %3
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_cq* %26, i32 %29), metadata !9116, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !9121
  %21 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 1, !dbg !9124
  tail call fastcc void @atomic_inc(i32* noundef nonnull %21) #24, !dbg !9127
  br label %40, !dbg !9128

22:                                               ; preds = %3
  %23 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %15, i32 0, i32 0, i32 0, !dbg !9129
  %24 = load i32, i32* %23, align 4, !dbg !9129
  %25 = add i32 %24, 1, !dbg !9129
  store i32 %25, i32* %23, align 4, !dbg !9129
  %26 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9122
  %27 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %26, i32 0, i32 0, i32 4, !dbg !9122
  %28 = load i32, i32* %27, align 4, !dbg !9122
  %29 = and i32 %28, %11, !dbg !9122
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_cq* %26, i32 %29), metadata !9116, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !9121
  %30 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %26, i32 0, i32 1, i32 %29, i32 0, !dbg !9132
  store i32 %1, i32* %30, align 4, !dbg !9134
  %31 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %26, i32 0, i32 1, i32 %29, i32 1, !dbg !9135
  store i8* %2, i8** %31, align 4, !dbg !9136
  %32 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9137
  %33 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %32, i32 0, i32 0, i32 0, !dbg !9137
  %34 = load i32, i32* %33, align 4, !dbg !9137
  %35 = icmp eq i32 %34, 0, !dbg !9137
  br i1 %35, label %40, label %36, !dbg !9140

36:                                               ; preds = %22
  %37 = add i32 %34, -1, !dbg !9141
  store i32 %37, i32* %33, align 4, !dbg !9141
  %38 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9141
  %39 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %38, i32 0, i32 0, i32 2, !dbg !9141
  tail call fastcc void @atomic_add.93(i32* noundef nonnull %39) #24, !dbg !9141
  br label %40, !dbg !9141

40:                                               ; preds = %22, %36, %20
  ret void, !dbg !9143
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_inc(i32* nocapture noundef %0) unnamed_addr #5 !dbg !9144 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !9148, metadata !DIExpression()), !dbg !9149
  tail call fastcc void @atomic_add.93(i32* noundef %0) #24, !dbg !9150
  ret void, !dbg !9151
}

; Function Attrs: noinline nounwind optsize
define dso_local void @rtio_simple_err(%struct.rtio* noundef %0, %struct.rtio_sqe* nocapture noundef readonly %1, i32 noundef %2) #1 !dbg !9152 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9154, metadata !DIExpression()), !dbg !9169
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %1, metadata !9155, metadata !DIExpression()), !dbg !9169
  call void @llvm.dbg.value(metadata i32 %2, metadata !9156, metadata !DIExpression()), !dbg !9169
  %4 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %1, i32 0, i32 4, !dbg !9170
  call void @llvm.dbg.value(metadata i8* undef, metadata !9158, metadata !DIExpression()), !dbg !9169
  %5 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %1, i32 0, i32 2, !dbg !9171
  %6 = load i16, i16* %5, align 2, !dbg !9171
  %7 = and i16 %6, 1, !dbg !9172
  %8 = icmp eq i16 %7, 0, !dbg !9173
  call void @llvm.dbg.value(metadata i1 %8, metadata !9159, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9169
  %9 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 2, !dbg !9174
  %10 = load %struct.rtio_sq*, %struct.rtio_sq** %9, align 4, !dbg !9174
  %11 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %10, i32 0, i32 0, i32 1, !dbg !9174
  %12 = load i32, i32* %11, align 4, !dbg !9174
  %13 = icmp eq i32 %12, 0, !dbg !9174
  br i1 %13, label %18, label %14, !dbg !9177

14:                                               ; preds = %3
  %15 = add i32 %12, -1, !dbg !9178
  store i32 %15, i32* %11, align 4, !dbg !9178
  %16 = load %struct.rtio_sq*, %struct.rtio_sq** %9, align 4, !dbg !9178
  %17 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %16, i32 0, i32 0, i32 3, !dbg !9178
  tail call fastcc void @atomic_add.93(i32* noundef nonnull %17) #24, !dbg !9178
  br label %18, !dbg !9178

18:                                               ; preds = %14, %3
  %19 = load i8*, i8** %4, align 4, !dbg !9180
  tail call fastcc void @rtio_cqe_submit(%struct.rtio* noundef nonnull %0, i32 noundef %2, i8* noundef %19) #24, !dbg !9181
  br i1 %8, label %69, label %20, !dbg !9182

20:                                               ; preds = %18
  %21 = load %struct.rtio_sq*, %struct.rtio_sq** %9, align 4, !dbg !9183
  %22 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %21, i32 0, i32 0, i32 3, !dbg !9183
  %23 = tail call fastcc i32 @atomic_get.90(i32* noundef nonnull %22) #24, !dbg !9183
  %24 = load %struct.rtio_sq*, %struct.rtio_sq** %9, align 4, !dbg !9183
  %25 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %24, i32 0, i32 0, i32 1, !dbg !9183
  %26 = load i32, i32* %25, align 4, !dbg !9183
  %27 = add i32 %26, %23, !dbg !9183
  call void @llvm.dbg.value(metadata i32 %27, metadata !9160, metadata !DIExpression()), !dbg !9184
  %28 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %24, i32 0, i32 0, i32 2, !dbg !9183
  %29 = tail call fastcc i32 @atomic_get.90(i32* noundef nonnull %28) #24, !dbg !9183
  %30 = icmp eq i32 %27, %29, !dbg !9183
  call void @llvm.dbg.value(metadata i1 %30, metadata !9164, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9184
  br i1 %30, label %71, label %31, !dbg !9183

31:                                               ; preds = %20, %56
  %32 = phi i32 [ %63, %56 ], [ %27, %20 ]
  %33 = load %struct.rtio_sq*, %struct.rtio_sq** %9, align 4, !dbg !9185
  %34 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %33, i32 0, i32 0, i32 1, !dbg !9185
  %35 = load i32, i32* %34, align 4, !dbg !9185
  %36 = add i32 %35, 1, !dbg !9185
  store i32 %36, i32* %34, align 4, !dbg !9185
  %37 = load %struct.rtio_sq*, %struct.rtio_sq** %9, align 4, !dbg !9185
  %38 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %37, i32 0, i32 0, i32 4, !dbg !9185
  %39 = load i32, i32* %38, align 4, !dbg !9185
  %40 = and i32 %39, %32, !dbg !9185
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_sq* %37, i32 %40), metadata !9157, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 20, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !9169
  %41 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %37, i32 0, i32 1, i32 %40, i32 2, !dbg !9186
  %42 = load i16, i16* %41, align 2, !dbg !9186
  %43 = and i16 %42, 1, !dbg !9187
  %44 = icmp eq i16 %43, 0, !dbg !9188
  br i1 %44, label %67, label %45, !dbg !9189

45:                                               ; preds = %31
  %46 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %37, i32 0, i32 1, i32 %40, i32 4, !dbg !9190
  %47 = load i8*, i8** %46, align 4, !dbg !9190
  call void @llvm.dbg.value(metadata i8* %47, metadata !9158, metadata !DIExpression()), !dbg !9169
  %48 = load %struct.rtio_sq*, %struct.rtio_sq** %9, align 4, !dbg !9191
  %49 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %48, i32 0, i32 0, i32 1, !dbg !9191
  %50 = load i32, i32* %49, align 4, !dbg !9191
  %51 = icmp eq i32 %50, 0, !dbg !9191
  br i1 %51, label %56, label %52, !dbg !9194

52:                                               ; preds = %45
  %53 = add i32 %50, -1, !dbg !9195
  store i32 %53, i32* %49, align 4, !dbg !9195
  %54 = load %struct.rtio_sq*, %struct.rtio_sq** %9, align 4, !dbg !9195
  %55 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %54, i32 0, i32 0, i32 3, !dbg !9195
  tail call fastcc void @atomic_add.93(i32* noundef nonnull %55) #24, !dbg !9195
  br label %56, !dbg !9195

56:                                               ; preds = %52, %45
  tail call fastcc void @rtio_cqe_submit(%struct.rtio* noundef nonnull %0, i32 noundef -140, i8* noundef %47) #24, !dbg !9197
  %57 = load %struct.rtio_sq*, %struct.rtio_sq** %9, align 4, !dbg !9198
  %58 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %57, i32 0, i32 0, i32 3, !dbg !9198
  %59 = tail call fastcc i32 @atomic_get.90(i32* noundef nonnull %58) #24, !dbg !9198
  %60 = load %struct.rtio_sq*, %struct.rtio_sq** %9, align 4, !dbg !9198
  %61 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %60, i32 0, i32 0, i32 1, !dbg !9198
  %62 = load i32, i32* %61, align 4, !dbg !9198
  %63 = add i32 %62, %59, !dbg !9198
  call void @llvm.dbg.value(metadata i32 %63, metadata !9165, metadata !DIExpression()), !dbg !9199
  %64 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %60, i32 0, i32 0, i32 2, !dbg !9198
  %65 = tail call fastcc i32 @atomic_get.90(i32* noundef nonnull %64) #24, !dbg !9198
  %66 = icmp eq i32 %63, %65, !dbg !9198
  call void @llvm.dbg.value(metadata i1 %66, metadata !9168, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9199
  br i1 %66, label %71, label %31, !dbg !9198

67:                                               ; preds = %31
  %68 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %37, i32 0, i32 1, i32 %40, !dbg !9185
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %68, metadata !9157, metadata !DIExpression()), !dbg !9169
  tail call fastcc void @rtio_iodev_submit(%struct.rtio_sqe* noundef nonnull %68, %struct.rtio* noundef nonnull %0) #24, !dbg !9200
  br label %71, !dbg !9203

69:                                               ; preds = %18
  %70 = tail call i32 @rtio_simple_submit(%struct.rtio* noundef nonnull %0) #24, !dbg !9204
  br label %71

71:                                               ; preds = %56, %20, %67, %69
  ret void, !dbg !9206
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @rtio_concurrent_submit(%struct.rtio* noundef %0) local_unnamed_addr #1 !dbg !9207 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9209, metadata !DIExpression()), !dbg !9240
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.98, i32 0, i32 0), i32 noundef 73) #25, !dbg !9241
  %2 = bitcast %struct.rtio* %0 to %struct.rtio_concurrent_executor**, !dbg !9246
  %3 = load %struct.rtio_concurrent_executor*, %struct.rtio_concurrent_executor** %2, align 4, !dbg !9246
  call void @llvm.dbg.value(metadata %struct.rtio_concurrent_executor* %3, metadata !9210, metadata !DIExpression()), !dbg !9240
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9247, metadata !DIExpression()) #23, !dbg !9254
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !9256, !srcloc !9262
  call void @llvm.dbg.value(metadata i32 undef, metadata !9259, metadata !DIExpression()) #23, !dbg !9263
  call void @llvm.dbg.value(metadata i32 undef, metadata !9260, metadata !DIExpression()) #23, !dbg !9263
  call void @llvm.dbg.value(metadata i32 undef, metadata !9253, metadata !DIExpression()) #23, !dbg !9254
  call void @llvm.dbg.value(metadata i32 undef, metadata !9213, metadata !DIExpression()), !dbg !9240
  %5 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %3, i32 0, i32 6, !dbg !9264
  %6 = load %struct.rtio_sqe*, %struct.rtio_sqe** %5, align 4, !dbg !9264
  %7 = icmp eq %struct.rtio_sqe* %6, null, !dbg !9265
  %8 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 2, !dbg !9266
  %9 = load %struct.rtio_sq*, %struct.rtio_sq** %8, align 4, !dbg !9266
  br i1 %7, label %10, label %26, !dbg !9267

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %9, i32 0, i32 0, i32 3, !dbg !9268
  %12 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %11) #24, !dbg !9268
  %13 = load %struct.rtio_sq*, %struct.rtio_sq** %8, align 4, !dbg !9268
  %14 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %13, i32 0, i32 0, i32 1, !dbg !9268
  %15 = load i32, i32* %14, align 4, !dbg !9268
  %16 = add i32 %15, %12, !dbg !9268
  call void @llvm.dbg.value(metadata i32 %16, metadata !9218, metadata !DIExpression()), !dbg !9269
  %17 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %13, i32 0, i32 0, i32 2, !dbg !9268
  %18 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %17) #24, !dbg !9268
  %19 = icmp eq i32 %16, %18, !dbg !9268
  call void @llvm.dbg.value(metadata i1 %19, metadata !9222, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9269
  br i1 %19, label %45, label %20, !dbg !9268

20:                                               ; preds = %10
  %21 = load %struct.rtio_sq*, %struct.rtio_sq** %8, align 4, !dbg !9268
  %22 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %21, i32 0, i32 0, i32 4, !dbg !9268
  %23 = load i32, i32* %22, align 4, !dbg !9268
  %24 = and i32 %23, %16, !dbg !9268
  %25 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %21, i32 0, i32 1, i32 %24, !dbg !9268
  br label %47, !dbg !9268

26:                                               ; preds = %1
  %27 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %9, i32 0, i32 1, i32 0, !dbg !9270
  %28 = ptrtoint %struct.rtio_sqe* %6 to i32, !dbg !9270
  %29 = ptrtoint %struct.rtio_sqe* %27 to i32, !dbg !9270
  %30 = sub i32 %28, %29, !dbg !9270
  %31 = sdiv exact i32 %30, 20, !dbg !9270
  call void @llvm.dbg.value(metadata i32 %31, metadata !9223, metadata !DIExpression()), !dbg !9271
  %32 = add nsw i32 %31, 1, !dbg !9270
  %33 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %9, i32 0, i32 0, i32 4, !dbg !9270
  %34 = load i32, i32* %33, align 4, !dbg !9270
  %35 = and i32 %32, %34, !dbg !9270
  %36 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %9, i32 0, i32 0, i32 2, !dbg !9270
  %37 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %36) #24, !dbg !9270
  %38 = load %struct.rtio_sq*, %struct.rtio_sq** %8, align 4, !dbg !9270
  %39 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %38, i32 0, i32 0, i32 4, !dbg !9270
  %40 = load i32, i32* %39, align 4, !dbg !9270
  %41 = and i32 %40, %37, !dbg !9270
  %42 = icmp eq i32 %35, %41, !dbg !9270
  call void @llvm.dbg.value(metadata i1 %42, metadata !9226, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9271
  %43 = and i32 %32, %40, !dbg !9270
  %44 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %38, i32 0, i32 1, i32 %43, !dbg !9270
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* undef, metadata !9211, metadata !DIExpression()), !dbg !9240
  br i1 %42, label %45, label %47

45:                                               ; preds = %26, %10
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %48, metadata !9211, metadata !DIExpression()), !dbg !9240
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %48, metadata !9212, metadata !DIExpression()), !dbg !9240
  %46 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %3, i32 0, i32 5, !dbg !9272
  store %struct.rtio_sqe* null, %struct.rtio_sqe** %46, align 4, !dbg !9273
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %112, metadata !9211, metadata !DIExpression()), !dbg !9240
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %111, metadata !9212, metadata !DIExpression()), !dbg !9240
  br label %140, !dbg !9274

47:                                               ; preds = %20, %26
  %48 = phi %struct.rtio_sqe* [ %44, %26 ], [ %25, %20 ], !dbg !9266
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %48, metadata !9211, metadata !DIExpression()), !dbg !9240
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %48, metadata !9212, metadata !DIExpression()), !dbg !9240
  %49 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %3, i32 0, i32 8
  %50 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %3, i32 0, i32 7
  %51 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 2
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %48, metadata !9211, metadata !DIExpression()), !dbg !9240
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %48, metadata !9212, metadata !DIExpression()), !dbg !9240
  %52 = tail call fastcc zeroext i1 @conex_task_free(%struct.rtio_concurrent_executor* noundef %3) #24, !dbg !9275
  br i1 %52, label %55, label %110, !dbg !9276

53:                                               ; preds = %89
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %109, metadata !9211, metadata !DIExpression()), !dbg !9240
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %90, metadata !9212, metadata !DIExpression()), !dbg !9240
  %54 = tail call fastcc zeroext i1 @conex_task_free(%struct.rtio_concurrent_executor* noundef %3) #24, !dbg !9275
  br i1 %54, label %55, label %110, !dbg !9276

55:                                               ; preds = %47, %53
  %56 = phi %struct.rtio_sqe* [ %109, %53 ], [ %48, %47 ]
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %56, metadata !9211, metadata !DIExpression()), !dbg !9240
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.100, i32 0, i32 0), i32 noundef 73, %struct.rtio_sqe* noundef nonnull %56) #25, !dbg !9277
  %57 = tail call fastcc zeroext i16 @conex_task_next(%struct.rtio_concurrent_executor* noundef %3) #24, !dbg !9282
  call void @llvm.dbg.value(metadata i16 %57, metadata !9227, metadata !DIExpression()), !dbg !9283
  %58 = zext i16 %57 to i32, !dbg !9284
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.101, i32 0, i32 0), i32 noundef 73, i32 noundef %58) #25, !dbg !9284
  %59 = load %struct.rtio_sqe**, %struct.rtio_sqe*** %49, align 4, !dbg !9289
  %60 = getelementptr inbounds %struct.rtio_sqe*, %struct.rtio_sqe** %59, i32 %58, !dbg !9290
  store %struct.rtio_sqe* %56, %struct.rtio_sqe** %60, align 4, !dbg !9291
  %61 = load i8*, i8** %50, align 4, !dbg !9292
  %62 = getelementptr inbounds i8, i8* %61, i32 %58, !dbg !9293
  store i8 2, i8* %62, align 1, !dbg !9294
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4.102, i32 0, i32 0), i32 noundef 73, %struct.rtio_sqe* noundef nonnull %56) #25, !dbg !9295
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %56, metadata !9211, metadata !DIExpression()), !dbg !9240
  br label %63, !dbg !9300

63:                                               ; preds = %55, %69
  %64 = phi %struct.rtio_sqe* [ %56, %55 ], [ %88, %69 ]
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %64, metadata !9211, metadata !DIExpression()), !dbg !9240
  %65 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %64, i32 0, i32 2, !dbg !9301
  %66 = load i16, i16* %65, align 2, !dbg !9301
  %67 = and i16 %66, 1, !dbg !9302
  %68 = icmp eq i16 %67, 0, !dbg !9300
  br i1 %68, label %89, label %69, !dbg !9303

69:                                               ; preds = %63
  %70 = load %struct.rtio_sq*, %struct.rtio_sq** %51, align 4, !dbg !9304
  %71 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %70, i32 0, i32 1, i32 0, !dbg !9304
  %72 = ptrtoint %struct.rtio_sqe* %64 to i32, !dbg !9304
  %73 = ptrtoint %struct.rtio_sqe* %71 to i32, !dbg !9304
  %74 = sub i32 %72, %73, !dbg !9304
  %75 = sdiv exact i32 %74, 20, !dbg !9304
  call void @llvm.dbg.value(metadata i32 %75, metadata !9229, metadata !DIExpression()), !dbg !9305
  %76 = add nsw i32 %75, 1, !dbg !9304
  %77 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %70, i32 0, i32 0, i32 4, !dbg !9304
  %78 = load i32, i32* %77, align 4, !dbg !9304
  %79 = and i32 %76, %78, !dbg !9304
  %80 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %70, i32 0, i32 0, i32 2, !dbg !9304
  %81 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %80) #24, !dbg !9304
  %82 = load %struct.rtio_sq*, %struct.rtio_sq** %51, align 4, !dbg !9304
  %83 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %82, i32 0, i32 0, i32 4, !dbg !9304
  %84 = load i32, i32* %83, align 4, !dbg !9304
  %85 = and i32 %84, %81, !dbg !9304
  %86 = icmp eq i32 %79, %85, !dbg !9304
  call void @llvm.dbg.value(metadata i1 %86, metadata !9232, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9305
  %87 = and i32 %76, %84, !dbg !9304
  %88 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %82, i32 0, i32 1, i32 %87, !dbg !9304
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* undef, metadata !9211, metadata !DIExpression()), !dbg !9240
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* undef, metadata !9211, metadata !DIExpression()), !dbg !9240
  br i1 %86, label %89, label %63, !dbg !9300

89:                                               ; preds = %63, %69
  %90 = phi %struct.rtio_sqe* [ null, %69 ], [ %64, %63 ], !dbg !9240
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5.103, i32 0, i32 0), i32 noundef 73, %struct.rtio_sqe* noundef %90) #25, !dbg !9306
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %90, metadata !9212, metadata !DIExpression()), !dbg !9240
  %91 = load %struct.rtio_sq*, %struct.rtio_sq** %51, align 4, !dbg !9311
  %92 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %91, i32 0, i32 1, i32 0, !dbg !9311
  %93 = ptrtoint %struct.rtio_sqe* %90 to i32, !dbg !9311
  %94 = ptrtoint %struct.rtio_sqe* %92 to i32, !dbg !9311
  %95 = sub i32 %93, %94, !dbg !9311
  %96 = sdiv exact i32 %95, 20, !dbg !9311
  call void @llvm.dbg.value(metadata i32 %96, metadata !9233, metadata !DIExpression()), !dbg !9312
  %97 = add nsw i32 %96, 1, !dbg !9311
  %98 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %91, i32 0, i32 0, i32 4, !dbg !9311
  %99 = load i32, i32* %98, align 4, !dbg !9311
  %100 = and i32 %97, %99, !dbg !9311
  %101 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %91, i32 0, i32 0, i32 2, !dbg !9311
  %102 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %101) #24, !dbg !9311
  %103 = load %struct.rtio_sq*, %struct.rtio_sq** %51, align 4, !dbg !9311
  %104 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %103, i32 0, i32 0, i32 4, !dbg !9311
  %105 = load i32, i32* %104, align 4, !dbg !9311
  %106 = and i32 %105, %102, !dbg !9311
  %107 = icmp eq i32 %100, %106, !dbg !9311
  call void @llvm.dbg.value(metadata i1 %107, metadata !9235, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9312
  %108 = and i32 %97, %105, !dbg !9311
  %109 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %103, i32 0, i32 1, i32 %108, !dbg !9311
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* undef, metadata !9211, metadata !DIExpression()), !dbg !9240
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* undef, metadata !9211, metadata !DIExpression()), !dbg !9240
  br i1 %107, label %110, label %53, !dbg !9313

110:                                              ; preds = %89, %53, %47
  %111 = phi %struct.rtio_sqe* [ %48, %47 ], [ %90, %53 ], [ %90, %89 ], !dbg !9240
  %112 = phi %struct.rtio_sqe* [ %48, %47 ], [ null, %89 ], [ %109, %53 ], !dbg !9240
  %113 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %3, i32 0, i32 5, !dbg !9272
  store %struct.rtio_sqe* %112, %struct.rtio_sqe** %113, align 4, !dbg !9273
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %112, metadata !9211, metadata !DIExpression()), !dbg !9240
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %111, metadata !9212, metadata !DIExpression()), !dbg !9240
  %114 = icmp eq %struct.rtio_sqe* %112, null, !dbg !9314
  br i1 %114, label %140, label %115, !dbg !9274

115:                                              ; preds = %110
  %116 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 2
  %117 = load %struct.rtio_sq*, %struct.rtio_sq** %116, align 4, !dbg !9315
  %118 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %117, i32 0, i32 0, i32 4
  %119 = load i32, i32* %118, align 4, !dbg !9315
  br label %120, !dbg !9274

120:                                              ; preds = %115, %120
  %121 = phi i32 [ %119, %115 ], [ %135, %120 ], !dbg !9315
  %122 = phi %struct.rtio_sq* [ %117, %115 ], [ %133, %120 ], !dbg !9315
  %123 = phi %struct.rtio_sqe* [ %112, %115 ], [ %139, %120 ]
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %123, metadata !9211, metadata !DIExpression()), !dbg !9240
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %123, metadata !9212, metadata !DIExpression()), !dbg !9240
  %124 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %122, i32 0, i32 1, i32 0, !dbg !9315
  %125 = ptrtoint %struct.rtio_sqe* %123 to i32, !dbg !9315
  %126 = ptrtoint %struct.rtio_sqe* %124 to i32, !dbg !9315
  %127 = sub i32 %125, %126, !dbg !9315
  %128 = sdiv exact i32 %127, 20, !dbg !9315
  call void @llvm.dbg.value(metadata i32 %128, metadata !9236, metadata !DIExpression()), !dbg !9316
  %129 = add nsw i32 %128, 1, !dbg !9315
  %130 = and i32 %129, %121, !dbg !9315
  %131 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %122, i32 0, i32 0, i32 2, !dbg !9315
  %132 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %131) #24, !dbg !9315
  %133 = load %struct.rtio_sq*, %struct.rtio_sq** %116, align 4, !dbg !9315
  %134 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %133, i32 0, i32 0, i32 4, !dbg !9315
  %135 = load i32, i32* %134, align 4, !dbg !9315
  %136 = and i32 %135, %132, !dbg !9315
  %137 = icmp eq i32 %130, %136, !dbg !9315
  call void @llvm.dbg.value(metadata i1 %137, metadata !9239, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9316
  %138 = and i32 %129, %135, !dbg !9315
  %139 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %133, i32 0, i32 1, i32 %138, !dbg !9315
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* undef, metadata !9211, metadata !DIExpression()), !dbg !9240
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* undef, metadata !9211, metadata !DIExpression()), !dbg !9240
  br i1 %137, label %140, label %120, !dbg !9274

140:                                              ; preds = %120, %45, %110
  %141 = phi %struct.rtio_sqe* [ %111, %110 ], [ null, %45 ], [ %123, %120 ], !dbg !9240
  %142 = extractvalue { i32, i32 } %4, 0, !dbg !9256
  call void @llvm.dbg.value(metadata i32 %142, metadata !9259, metadata !DIExpression()) #23, !dbg !9263
  call void @llvm.dbg.value(metadata i32 %142, metadata !9253, metadata !DIExpression()) #23, !dbg !9254
  call void @llvm.dbg.value(metadata i32 %142, metadata !9213, metadata !DIExpression()), !dbg !9240
  store %struct.rtio_sqe* %141, %struct.rtio_sqe** %5, align 4, !dbg !9317
  tail call fastcc void @conex_resume(%struct.rtio* noundef nonnull %0, %struct.rtio_concurrent_executor* noundef %3) #24, !dbg !9318
  call void @llvm.dbg.value(metadata i32 undef, metadata !9319, metadata !DIExpression()) #23, !dbg !9325
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9324, metadata !DIExpression()) #23, !dbg !9325
  call void @llvm.dbg.value(metadata i32 undef, metadata !9327, metadata !DIExpression()) #23, !dbg !9330
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %142) #23, !dbg !9332, !srcloc !9333
  ret i32 0, !dbg !9334
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_get.99(i32* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9335 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !9337, metadata !DIExpression()), !dbg !9338
  %2 = load atomic i32, i32* %0 seq_cst, align 4, !dbg !9339
  ret i32 %2, !dbg !9340
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @conex_task_free(%struct.rtio_concurrent_executor* nocapture noundef readonly %0) unnamed_addr #10 !dbg !9341 {
  call void @llvm.dbg.value(metadata %struct.rtio_concurrent_executor* %0, metadata !9345, metadata !DIExpression()), !dbg !9346
  %2 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %0, i32 0, i32 2, !dbg !9347
  %3 = load i16, i16* %2, align 4, !dbg !9347
  %4 = zext i16 %3 to i32, !dbg !9348
  %5 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %0, i32 0, i32 3, !dbg !9349
  %6 = load i16, i16* %5, align 2, !dbg !9349
  %7 = zext i16 %6 to i32, !dbg !9350
  %8 = sub nsw i32 %4, %7, !dbg !9351
  %9 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %0, i32 0, i32 4, !dbg !9352
  %10 = load i16, i16* %9, align 4, !dbg !9352
  %11 = zext i16 %10 to i32, !dbg !9353
  %12 = icmp sle i32 %8, %11, !dbg !9354
  ret i1 %12, !dbg !9355
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc zeroext i16 @conex_task_next(%struct.rtio_concurrent_executor* nocapture noundef %0) unnamed_addr #11 !dbg !9356 {
  call void @llvm.dbg.value(metadata %struct.rtio_concurrent_executor* %0, metadata !9360, metadata !DIExpression()), !dbg !9362
  %2 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %0, i32 0, i32 2, !dbg !9363
  %3 = load i16, i16* %2, align 4, !dbg !9363
  call void @llvm.dbg.value(metadata i16 %3, metadata !9361, metadata !DIExpression()), !dbg !9362
  %4 = add i16 %3, 1, !dbg !9364
  store i16 %4, i16* %2, align 4, !dbg !9364
  ret i16 %3, !dbg !9365
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @conex_resume(%struct.rtio* noundef %0, %struct.rtio_concurrent_executor* nocapture noundef readonly %1) unnamed_addr #1 !dbg !9366 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9370, metadata !DIExpression()), !dbg !9374
  call void @llvm.dbg.value(metadata %struct.rtio_concurrent_executor* %1, metadata !9371, metadata !DIExpression()), !dbg !9374
  %3 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %1, i32 0, i32 3, !dbg !9375
  %4 = load i16, i16* %3, align 2, !dbg !9375
  call void @llvm.dbg.value(metadata i16 %4, metadata !9372, metadata !DIExpression()), !dbg !9376
  %5 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %1, i32 0, i32 2
  call void @llvm.dbg.value(metadata i16 %4, metadata !9372, metadata !DIExpression()), !dbg !9376
  %6 = load i16, i16* %5, align 4, !dbg !9377
  %7 = icmp ult i16 %4, %6, !dbg !9379
  br i1 %7, label %8, label %13, !dbg !9380

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %1, i32 0, i32 7
  %10 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %1, i32 0, i32 4
  %11 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %1, i32 0, i32 8
  %12 = zext i16 %4 to i32, !dbg !9380
  br label %14, !dbg !9380

13:                                               ; preds = %35, %2
  ret void, !dbg !9381

14:                                               ; preds = %8, %35
  %15 = phi i16 [ %6, %8 ], [ %36, %35 ]
  %16 = phi i32 [ %12, %8 ], [ %37, %35 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !9372, metadata !DIExpression()), !dbg !9376
  %17 = load i8*, i8** %9, align 4, !dbg !9382
  %18 = load i16, i16* %10, align 4, !dbg !9385
  %19 = trunc i32 %16 to i16, !dbg !9386
  %20 = and i16 %18, %19, !dbg !9386
  %21 = zext i16 %20 to i32, !dbg !9386
  %22 = getelementptr inbounds i8, i8* %17, i32 %21, !dbg !9387
  %23 = load i8, i8* %22, align 1, !dbg !9387
  %24 = and i8 %23, 2, !dbg !9388
  %25 = icmp eq i8 %24, 0, !dbg !9388
  br i1 %25, label %35, label %26, !dbg !9389

26:                                               ; preds = %14
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.6.104, i32 0, i32 0), i32 noundef 73, i32 noundef %16) #25, !dbg !9390
  %27 = load i8*, i8** %9, align 4, !dbg !9396
  %28 = getelementptr inbounds i8, i8* %27, i32 %16, !dbg !9397
  %29 = load i8, i8* %28, align 1, !dbg !9398
  %30 = and i8 %29, -3, !dbg !9398
  store i8 %30, i8* %28, align 1, !dbg !9398
  %31 = load %struct.rtio_sqe**, %struct.rtio_sqe*** %11, align 4, !dbg !9399
  %32 = getelementptr inbounds %struct.rtio_sqe*, %struct.rtio_sqe** %31, i32 %16, !dbg !9400
  %33 = load %struct.rtio_sqe*, %struct.rtio_sqe** %32, align 4, !dbg !9400
  tail call fastcc void @rtio_iodev_submit.105(%struct.rtio_sqe* noundef %33, %struct.rtio* noundef %0) #24, !dbg !9401
  %34 = load i16, i16* %5, align 4, !dbg !9377
  br label %35, !dbg !9402

35:                                               ; preds = %14, %26
  %36 = phi i16 [ %15, %14 ], [ %34, %26 ], !dbg !9377
  %37 = add nuw nsw i32 %16, 1, !dbg !9403
  call void @llvm.dbg.value(metadata i32 %37, metadata !9372, metadata !DIExpression()), !dbg !9376
  %38 = zext i16 %36 to i32, !dbg !9379
  %39 = icmp ult i32 %37, %38, !dbg !9379
  br i1 %39, label %14, label %13, !dbg !9380, !llvm.loop !9404
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @rtio_iodev_submit.105(%struct.rtio_sqe* noundef %0, %struct.rtio* noundef %1) unnamed_addr #1 !dbg !9406 {
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %0, metadata !9408, metadata !DIExpression()), !dbg !9410
  call void @llvm.dbg.value(metadata %struct.rtio* %1, metadata !9409, metadata !DIExpression()), !dbg !9410
  %3 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %0, i32 0, i32 3, !dbg !9411
  %4 = load %struct.rtio_iodev*, %struct.rtio_iodev** %3, align 4, !dbg !9411
  %5 = getelementptr inbounds %struct.rtio_iodev, %struct.rtio_iodev* %4, i32 0, i32 0, !dbg !9412
  %6 = load %struct.rtio_iodev_api*, %struct.rtio_iodev_api** %5, align 4, !dbg !9412
  %7 = getelementptr inbounds %struct.rtio_iodev_api, %struct.rtio_iodev_api* %6, i32 0, i32 0, !dbg !9413
  %8 = load void (%struct.rtio_sqe*, %struct.rtio*)*, void (%struct.rtio_sqe*, %struct.rtio*)** %7, align 4, !dbg !9413
  tail call void %8(%struct.rtio_sqe* noundef %0, %struct.rtio* noundef %1) #25, !dbg !9414
  ret void, !dbg !9415
}

; Function Attrs: noinline nounwind optsize
define dso_local void @rtio_concurrent_ok(%struct.rtio* noundef %0, %struct.rtio_sqe* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !9416 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9418, metadata !DIExpression()), !dbg !9430
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %1, metadata !9419, metadata !DIExpression()), !dbg !9430
  call void @llvm.dbg.value(metadata i32 %2, metadata !9420, metadata !DIExpression()), !dbg !9430
  %4 = bitcast %struct.rtio* %0 to %struct.rtio_concurrent_executor**, !dbg !9431
  %5 = load %struct.rtio_concurrent_executor*, %struct.rtio_concurrent_executor** %4, align 4, !dbg !9431
  call void @llvm.dbg.value(metadata %struct.rtio_concurrent_executor* %5, metadata !9423, metadata !DIExpression()), !dbg !9430
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9247, metadata !DIExpression()) #23, !dbg !9432
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !9434, !srcloc !9262
  call void @llvm.dbg.value(metadata i32 undef, metadata !9259, metadata !DIExpression()) #23, !dbg !9436
  call void @llvm.dbg.value(metadata i32 undef, metadata !9260, metadata !DIExpression()) #23, !dbg !9436
  call void @llvm.dbg.value(metadata i32 undef, metadata !9253, metadata !DIExpression()) #23, !dbg !9432
  call void @llvm.dbg.value(metadata i32 undef, metadata !9422, metadata !DIExpression()), !dbg !9430
  %7 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %1, i32 0, i32 4, !dbg !9437
  %8 = load i8*, i8** %7, align 4, !dbg !9437
  tail call fastcc void @rtio_cqe_submit.106(%struct.rtio* noundef %0, i32 noundef %2, i8* noundef %8) #24, !dbg !9438
  %9 = tail call fastcc zeroext i16 @conex_task_id(%struct.rtio_concurrent_executor* noundef %5, %struct.rtio_sqe* noundef %1) #24, !dbg !9439
  call void @llvm.dbg.value(metadata i16 %9, metadata !9424, metadata !DIExpression()), !dbg !9430
  %10 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %1, i32 0, i32 2, !dbg !9440
  %11 = load i16, i16* %10, align 2, !dbg !9440
  %12 = and i16 %11, 1, !dbg !9441
  %13 = icmp eq i16 %12, 0, !dbg !9441
  br i1 %13, label %40, label %14, !dbg !9442

14:                                               ; preds = %3
  %15 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 2, !dbg !9443
  %16 = load %struct.rtio_sq*, %struct.rtio_sq** %15, align 4, !dbg !9443
  %17 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %16, i32 0, i32 1, i32 0, !dbg !9443
  %18 = ptrtoint %struct.rtio_sqe* %1 to i32, !dbg !9443
  %19 = ptrtoint %struct.rtio_sqe* %17 to i32, !dbg !9443
  %20 = sub i32 %18, %19, !dbg !9443
  %21 = sdiv exact i32 %20, 20, !dbg !9443
  call void @llvm.dbg.value(metadata i32 %21, metadata !9425, metadata !DIExpression()), !dbg !9444
  %22 = add nsw i32 %21, 1, !dbg !9443
  %23 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %16, i32 0, i32 0, i32 4, !dbg !9443
  %24 = load i32, i32* %23, align 4, !dbg !9443
  %25 = and i32 %22, %24, !dbg !9443
  %26 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %16, i32 0, i32 0, i32 2, !dbg !9443
  %27 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %26) #24, !dbg !9443
  %28 = load %struct.rtio_sq*, %struct.rtio_sq** %15, align 4, !dbg !9443
  %29 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %28, i32 0, i32 0, i32 4, !dbg !9443
  %30 = load i32, i32* %29, align 4, !dbg !9443
  %31 = and i32 %30, %27, !dbg !9443
  %32 = icmp eq i32 %25, %31, !dbg !9443
  call void @llvm.dbg.value(metadata i1 %32, metadata !9429, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9444
  %33 = and i32 %22, %30, !dbg !9443
  %34 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %28, i32 0, i32 1, i32 %33, !dbg !9443
  %35 = select i1 %32, %struct.rtio_sqe* null, %struct.rtio_sqe* %34, !dbg !9443
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %35, metadata !9421, metadata !DIExpression()), !dbg !9430
  tail call fastcc void @rtio_iodev_submit.105(%struct.rtio_sqe* noundef %35, %struct.rtio* noundef nonnull %0) #24, !dbg !9445
  %36 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %5, i32 0, i32 8, !dbg !9446
  %37 = load %struct.rtio_sqe**, %struct.rtio_sqe*** %36, align 4, !dbg !9446
  %38 = zext i16 %9 to i32, !dbg !9447
  %39 = getelementptr inbounds %struct.rtio_sqe*, %struct.rtio_sqe** %37, i32 %38, !dbg !9447
  store %struct.rtio_sqe* %35, %struct.rtio_sqe** %39, align 4, !dbg !9448
  br label %47, !dbg !9449

40:                                               ; preds = %3
  %41 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %5, i32 0, i32 7, !dbg !9450
  %42 = load i8*, i8** %41, align 4, !dbg !9450
  %43 = zext i16 %9 to i32, !dbg !9452
  %44 = getelementptr inbounds i8, i8* %42, i32 %43, !dbg !9452
  %45 = load i8, i8* %44, align 1, !dbg !9453
  %46 = or i8 %45, 1, !dbg !9453
  store i8 %46, i8* %44, align 1, !dbg !9453
  br label %47

47:                                               ; preds = %40, %14
  %48 = extractvalue { i32, i32 } %6, 0, !dbg !9434
  call void @llvm.dbg.value(metadata i32 %48, metadata !9259, metadata !DIExpression()) #23, !dbg !9436
  call void @llvm.dbg.value(metadata i32 %48, metadata !9253, metadata !DIExpression()) #23, !dbg !9432
  call void @llvm.dbg.value(metadata i32 %48, metadata !9422, metadata !DIExpression()), !dbg !9430
  tail call fastcc void @conex_sweep_resume(%struct.rtio* noundef nonnull %0, %struct.rtio_concurrent_executor* noundef nonnull %5) #24, !dbg !9454
  call void @llvm.dbg.value(metadata i32 undef, metadata !9319, metadata !DIExpression()) #23, !dbg !9455
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9324, metadata !DIExpression()) #23, !dbg !9455
  call void @llvm.dbg.value(metadata i32 undef, metadata !9327, metadata !DIExpression()) #23, !dbg !9457
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %48) #23, !dbg !9459, !srcloc !9333
  ret void, !dbg !9460
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @rtio_cqe_submit.106(%struct.rtio* nocapture noundef %0, i32 noundef %1, i8* noundef %2) unnamed_addr #5 !dbg !9461 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9465, metadata !DIExpression()), !dbg !9473
  call void @llvm.dbg.value(metadata i32 %1, metadata !9466, metadata !DIExpression()), !dbg !9473
  call void @llvm.dbg.value(metadata i8* %2, metadata !9467, metadata !DIExpression()), !dbg !9473
  %4 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 3, !dbg !9474
  %5 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9474
  %6 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %5, i32 0, i32 0, i32 2, !dbg !9474
  %7 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %6) #24, !dbg !9474
  %8 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9474
  %9 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %8, i32 0, i32 0, i32 0, !dbg !9474
  %10 = load i32, i32* %9, align 4, !dbg !9474
  %11 = add i32 %10, %7, !dbg !9474
  call void @llvm.dbg.value(metadata i32 %11, metadata !9470, metadata !DIExpression()), !dbg !9475
  %12 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %8, i32 0, i32 0, i32 3, !dbg !9474
  %13 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %12) #24, !dbg !9474
  %14 = sub i32 %11, %13, !dbg !9474
  %15 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9474
  %16 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %15, i32 0, i32 0, i32 4, !dbg !9474
  %17 = load i32, i32* %16, align 4, !dbg !9474
  %18 = add i32 %17, 1, !dbg !9474
  %19 = icmp ult i32 %14, %18, !dbg !9474
  call void @llvm.dbg.value(metadata i1 %19, metadata !9472, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9475
  br i1 %19, label %22, label %20, !dbg !9474

20:                                               ; preds = %3
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_cq* %26, i32 %29), metadata !9468, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !9473
  %21 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 1, !dbg !9476
  tail call fastcc void @atomic_inc.109(i32* noundef nonnull %21) #24, !dbg !9479
  br label %40, !dbg !9480

22:                                               ; preds = %3
  %23 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %15, i32 0, i32 0, i32 0, !dbg !9481
  %24 = load i32, i32* %23, align 4, !dbg !9481
  %25 = add i32 %24, 1, !dbg !9481
  store i32 %25, i32* %23, align 4, !dbg !9481
  %26 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9474
  %27 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %26, i32 0, i32 0, i32 4, !dbg !9474
  %28 = load i32, i32* %27, align 4, !dbg !9474
  %29 = and i32 %28, %11, !dbg !9474
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_cq* %26, i32 %29), metadata !9468, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !9473
  %30 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %26, i32 0, i32 1, i32 %29, i32 0, !dbg !9484
  store i32 %1, i32* %30, align 4, !dbg !9486
  %31 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %26, i32 0, i32 1, i32 %29, i32 1, !dbg !9487
  store i8* %2, i8** %31, align 4, !dbg !9488
  %32 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9489
  %33 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %32, i32 0, i32 0, i32 0, !dbg !9489
  %34 = load i32, i32* %33, align 4, !dbg !9489
  %35 = icmp eq i32 %34, 0, !dbg !9489
  br i1 %35, label %40, label %36, !dbg !9492

36:                                               ; preds = %22
  %37 = add i32 %34, -1, !dbg !9493
  store i32 %37, i32* %33, align 4, !dbg !9493
  %38 = load %struct.rtio_cq*, %struct.rtio_cq** %4, align 4, !dbg !9493
  %39 = getelementptr inbounds %struct.rtio_cq, %struct.rtio_cq* %38, i32 0, i32 0, i32 2, !dbg !9493
  tail call fastcc void @atomic_add.108(i32* noundef nonnull %39) #24, !dbg !9493
  br label %40, !dbg !9493

40:                                               ; preds = %22, %36, %20
  ret void, !dbg !9495
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define internal fastcc zeroext i16 @conex_task_id(%struct.rtio_concurrent_executor* nocapture noundef readonly %0, %struct.rtio_sqe* noundef readnone %1) unnamed_addr #9 !dbg !9496 {
  call void @llvm.dbg.value(metadata %struct.rtio_concurrent_executor* %0, metadata !9500, metadata !DIExpression()), !dbg !9503
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %1, metadata !9501, metadata !DIExpression()), !dbg !9503
  %3 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %0, i32 0, i32 3, !dbg !9504
  %4 = load i16, i16* %3, align 2, !dbg !9504
  call void @llvm.dbg.value(metadata i16 %4, metadata !9502, metadata !DIExpression()), !dbg !9503
  %5 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %0, i32 0, i32 2
  %6 = load i16, i16* %5, align 4
  call void @llvm.dbg.value(metadata i16 %4, metadata !9502, metadata !DIExpression()), !dbg !9503
  %7 = icmp ult i16 %4, %6, !dbg !9505
  br i1 %7, label %8, label %23, !dbg !9508

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %0, i32 0, i32 8, !dbg !9509
  %10 = load %struct.rtio_sqe**, %struct.rtio_sqe*** %9, align 4
  %11 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %0, i32 0, i32 4
  %12 = load i16, i16* %11, align 4
  br label %13, !dbg !9508

13:                                               ; preds = %8, %20
  %14 = phi i16 [ %4, %8 ], [ %21, %20 ]
  call void @llvm.dbg.value(metadata i16 %14, metadata !9502, metadata !DIExpression()), !dbg !9503
  %15 = and i16 %12, %14, !dbg !9512
  %16 = zext i16 %15 to i32, !dbg !9512
  %17 = getelementptr inbounds %struct.rtio_sqe*, %struct.rtio_sqe** %10, i32 %16, !dbg !9513
  %18 = load %struct.rtio_sqe*, %struct.rtio_sqe** %17, align 4, !dbg !9513
  %19 = icmp eq %struct.rtio_sqe* %18, %1, !dbg !9514
  br i1 %19, label %23, label %20, !dbg !9515

20:                                               ; preds = %13
  %21 = add nuw i16 %14, 1, !dbg !9516
  call void @llvm.dbg.value(metadata i16 %21, metadata !9502, metadata !DIExpression()), !dbg !9503
  %22 = icmp ult i16 %21, %6, !dbg !9505
  br i1 %22, label %13, label %23, !dbg !9508, !llvm.loop !9517

23:                                               ; preds = %20, %13, %2
  %24 = phi i16 [ %4, %2 ], [ %14, %13 ], [ %6, %20 ], !dbg !9503
  ret i16 %24, !dbg !9519
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @conex_sweep_resume(%struct.rtio* noundef %0, %struct.rtio_concurrent_executor* nocapture noundef %1) unnamed_addr #1 !dbg !9520 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9522, metadata !DIExpression()), !dbg !9524
  call void @llvm.dbg.value(metadata %struct.rtio_concurrent_executor* %1, metadata !9523, metadata !DIExpression()), !dbg !9524
  tail call fastcc void @conex_sweep(%struct.rtio* noundef %0, %struct.rtio_concurrent_executor* noundef %1) #24, !dbg !9525
  tail call fastcc void @conex_resume(%struct.rtio* noundef %0, %struct.rtio_concurrent_executor* noundef %1) #24, !dbg !9526
  ret void, !dbg !9527
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @conex_sweep(%struct.rtio* nocapture noundef readonly %0, %struct.rtio_concurrent_executor* nocapture noundef %1) unnamed_addr #1 !dbg !9528 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9530, metadata !DIExpression()), !dbg !9534
  call void @llvm.dbg.value(metadata %struct.rtio_concurrent_executor* %1, metadata !9531, metadata !DIExpression()), !dbg !9534
  %3 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %1, i32 0, i32 3, !dbg !9535
  %4 = load i16, i16* %3, align 2, !dbg !9535
  call void @llvm.dbg.value(metadata i16 %4, metadata !9532, metadata !DIExpression()), !dbg !9536
  %5 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %1, i32 0, i32 7, !dbg !9537
  %6 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %1, i32 0, i32 2
  call void @llvm.dbg.value(metadata i16 %4, metadata !9532, metadata !DIExpression()), !dbg !9536
  %7 = load i16, i16* %6, align 4, !dbg !9541
  %8 = icmp ult i16 %4, %7, !dbg !9542
  br i1 %8, label %9, label %30, !dbg !9543

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %1, i32 0, i32 4
  %11 = zext i16 %4 to i32, !dbg !9543
  br label %12, !dbg !9543

12:                                               ; preds = %9, %23
  %13 = phi i32 [ %11, %9 ], [ %26, %23 ]
  call void @llvm.dbg.value(metadata i32 %13, metadata !9532, metadata !DIExpression()), !dbg !9536
  %14 = load i8*, i8** %5, align 4, !dbg !9537
  %15 = load i16, i16* %10, align 4, !dbg !9544
  %16 = trunc i32 %13 to i16, !dbg !9545
  %17 = and i16 %15, %16, !dbg !9545
  %18 = zext i16 %17 to i32, !dbg !9545
  %19 = getelementptr inbounds i8, i8* %14, i32 %18, !dbg !9546
  %20 = load i8, i8* %19, align 1, !dbg !9546
  %21 = and i8 %20, 1, !dbg !9547
  %22 = icmp eq i8 %21, 0, !dbg !9547
  br i1 %22, label %30, label %23, !dbg !9548

23:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7.107, i32 0, i32 0), i32 noundef 73, i32 noundef %13) #25, !dbg !9549
  tail call fastcc void @conex_sweep_task(%struct.rtio* noundef %0) #24, !dbg !9555
  %24 = load i16, i16* %3, align 2, !dbg !9556
  %25 = add i16 %24, 1, !dbg !9556
  store i16 %25, i16* %3, align 2, !dbg !9556
  %26 = add nuw nsw i32 %13, 1, !dbg !9557
  call void @llvm.dbg.value(metadata i32 %26, metadata !9532, metadata !DIExpression()), !dbg !9536
  %27 = load i16, i16* %6, align 4, !dbg !9541
  %28 = zext i16 %27 to i32, !dbg !9542
  %29 = icmp ult i32 %26, %28, !dbg !9542
  br i1 %29, label %12, label %30, !dbg !9543, !llvm.loop !9558

30:                                               ; preds = %23, %12, %2
  ret void, !dbg !9560
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @conex_sweep_task(%struct.rtio* nocapture noundef readonly %0) unnamed_addr #15 !dbg !9561 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9563, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.value(metadata %struct.rtio_concurrent_executor* undef, metadata !9564, metadata !DIExpression()), !dbg !9573
  %2 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 2, !dbg !9574
  %3 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9574
  %4 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %3, i32 0, i32 0, i32 3, !dbg !9574
  %5 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %4) #24, !dbg !9574
  %6 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9574
  %7 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %6, i32 0, i32 0, i32 1, !dbg !9574
  %8 = load i32, i32* %7, align 4, !dbg !9574
  %9 = add i32 %8, %5, !dbg !9574
  call void @llvm.dbg.value(metadata i32 %9, metadata !9566, metadata !DIExpression()), !dbg !9575
  %10 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %6, i32 0, i32 0, i32 2, !dbg !9574
  %11 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %10) #24, !dbg !9574
  %12 = icmp eq i32 %9, %11, !dbg !9574
  call void @llvm.dbg.value(metadata i1 %12, metadata !9568, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9575
  br i1 %12, label %48, label %13, !dbg !9574

13:                                               ; preds = %1, %37
  %14 = phi i32 [ %44, %37 ], [ %9, %1 ]
  %15 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9573
  %16 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %15, i32 0, i32 0, i32 1, !dbg !9573
  %17 = load i32, i32* %16, align 4, !dbg !9573
  %18 = add i32 %17, 1, !dbg !9573
  store i32 %18, i32* %16, align 4, !dbg !9573
  %19 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9573
  %20 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %19, i32 0, i32 0, i32 4, !dbg !9573
  %21 = load i32, i32* %20, align 4, !dbg !9573
  %22 = and i32 %21, %14, !dbg !9573
  call void @llvm.dbg.value(metadata !DIArgList(%struct.rtio_sq* %19, i32 %22), metadata !9565, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 20, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 20, DW_OP_stack_value)), !dbg !9573
  %23 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %19, i32 0, i32 1, i32 %22, i32 2, !dbg !9576
  %24 = load i16, i16* %23, align 2, !dbg !9576
  %25 = and i16 %24, 1, !dbg !9577
  %26 = icmp eq i16 %25, 0, !dbg !9578
  br i1 %26, label %48, label %27, !dbg !9579

27:                                               ; preds = %13
  %28 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9580
  %29 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %28, i32 0, i32 0, i32 1, !dbg !9580
  %30 = load i32, i32* %29, align 4, !dbg !9580
  %31 = icmp eq i32 %30, 0, !dbg !9580
  br i1 %31, label %37, label %32, !dbg !9583

32:                                               ; preds = %27
  %33 = add i32 %30, -1, !dbg !9584
  store i32 %33, i32* %29, align 4, !dbg !9584
  %34 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9584
  %35 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %34, i32 0, i32 0, i32 3, !dbg !9584
  tail call fastcc void @atomic_add.108(i32* noundef nonnull %35) #24, !dbg !9584
  %36 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9586
  br label %37, !dbg !9584

37:                                               ; preds = %32, %27
  %38 = phi %struct.rtio_sq* [ %36, %32 ], [ %28, %27 ], !dbg !9586
  %39 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %38, i32 0, i32 0, i32 3, !dbg !9586
  %40 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %39) #24, !dbg !9586
  %41 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9586
  %42 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %41, i32 0, i32 0, i32 1, !dbg !9586
  %43 = load i32, i32* %42, align 4, !dbg !9586
  %44 = add i32 %43, %40, !dbg !9586
  call void @llvm.dbg.value(metadata i32 %44, metadata !9569, metadata !DIExpression()), !dbg !9587
  %45 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %41, i32 0, i32 0, i32 2, !dbg !9586
  %46 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %45) #24, !dbg !9586
  %47 = icmp eq i32 %44, %46, !dbg !9586
  call void @llvm.dbg.value(metadata i1 %47, metadata !9572, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9587
  br i1 %47, label %48, label %13, !dbg !9586

48:                                               ; preds = %37, %13, %1
  %49 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9588
  %50 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %49, i32 0, i32 0, i32 1, !dbg !9588
  %51 = load i32, i32* %50, align 4, !dbg !9588
  %52 = icmp eq i32 %51, 0, !dbg !9588
  br i1 %52, label %57, label %53, !dbg !9591

53:                                               ; preds = %48
  %54 = add i32 %51, -1, !dbg !9592
  store i32 %54, i32* %50, align 4, !dbg !9592
  %55 = load %struct.rtio_sq*, %struct.rtio_sq** %2, align 4, !dbg !9592
  %56 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %55, i32 0, i32 0, i32 3, !dbg !9592
  tail call fastcc void @atomic_add.108(i32* noundef nonnull %56) #24, !dbg !9592
  br label %57, !dbg !9592

57:                                               ; preds = %53, %48
  ret void, !dbg !9594
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_add.108(i32* nocapture noundef %0) unnamed_addr #5 !dbg !9595 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !9597, metadata !DIExpression()), !dbg !9599
  call void @llvm.dbg.value(metadata i32 1, metadata !9598, metadata !DIExpression()), !dbg !9599
  %2 = atomicrmw add i32* %0, i32 1 seq_cst, align 4, !dbg !9600
  ret void, !dbg !9601
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_inc.109(i32* nocapture noundef %0) unnamed_addr #5 !dbg !9602 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !9604, metadata !DIExpression()), !dbg !9605
  tail call fastcc void @atomic_add.108(i32* noundef %0) #24, !dbg !9606
  ret void, !dbg !9607
}

; Function Attrs: noinline nounwind optsize
define dso_local void @rtio_concurrent_err(%struct.rtio* noundef %0, %struct.rtio_sqe* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !9608 {
  call void @llvm.dbg.value(metadata %struct.rtio* %0, metadata !9610, metadata !DIExpression()), !dbg !9626
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %1, metadata !9611, metadata !DIExpression()), !dbg !9626
  call void @llvm.dbg.value(metadata i32 %2, metadata !9612, metadata !DIExpression()), !dbg !9626
  %4 = bitcast %struct.rtio* %0 to %struct.rtio_concurrent_executor**, !dbg !9627
  %5 = load %struct.rtio_concurrent_executor*, %struct.rtio_concurrent_executor** %4, align 4, !dbg !9627
  call void @llvm.dbg.value(metadata %struct.rtio_concurrent_executor* %5, metadata !9615, metadata !DIExpression()), !dbg !9626
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9247, metadata !DIExpression()) #23, !dbg !9628
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !9630, !srcloc !9262
  call void @llvm.dbg.value(metadata i32 undef, metadata !9259, metadata !DIExpression()) #23, !dbg !9632
  call void @llvm.dbg.value(metadata i32 undef, metadata !9260, metadata !DIExpression()) #23, !dbg !9632
  call void @llvm.dbg.value(metadata i32 undef, metadata !9253, metadata !DIExpression()) #23, !dbg !9628
  call void @llvm.dbg.value(metadata i32 undef, metadata !9614, metadata !DIExpression()), !dbg !9626
  %7 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %1, i32 0, i32 4, !dbg !9633
  %8 = load i8*, i8** %7, align 4, !dbg !9633
  tail call fastcc void @rtio_cqe_submit.106(%struct.rtio* noundef %0, i32 noundef %2, i8* noundef %8) #24, !dbg !9634
  %9 = tail call fastcc zeroext i16 @conex_task_id(%struct.rtio_concurrent_executor* noundef %5, %struct.rtio_sqe* noundef %1) #24, !dbg !9635
  call void @llvm.dbg.value(metadata i16 %9, metadata !9616, metadata !DIExpression()), !dbg !9626
  %10 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %1, i32 0, i32 2, !dbg !9636
  %11 = load i16, i16* %10, align 2, !dbg !9636
  %12 = and i16 %11, 1, !dbg !9637
  %13 = icmp eq i16 %12, 0, !dbg !9637
  br i1 %13, label %64, label %14, !dbg !9638

14:                                               ; preds = %3
  %15 = getelementptr inbounds %struct.rtio, %struct.rtio* %0, i32 0, i32 2, !dbg !9639
  %16 = load %struct.rtio_sq*, %struct.rtio_sq** %15, align 4, !dbg !9639
  %17 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %16, i32 0, i32 1, i32 0, !dbg !9639
  %18 = ptrtoint %struct.rtio_sqe* %1 to i32, !dbg !9639
  %19 = ptrtoint %struct.rtio_sqe* %17 to i32, !dbg !9639
  %20 = sub i32 %18, %19, !dbg !9639
  %21 = sdiv exact i32 %20, 20, !dbg !9639
  call void @llvm.dbg.value(metadata i32 %21, metadata !9617, metadata !DIExpression()), !dbg !9640
  %22 = add nsw i32 %21, 1, !dbg !9639
  %23 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %16, i32 0, i32 0, i32 4, !dbg !9639
  %24 = load i32, i32* %23, align 4, !dbg !9639
  %25 = and i32 %22, %24, !dbg !9639
  %26 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %16, i32 0, i32 0, i32 2, !dbg !9639
  %27 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %26) #24, !dbg !9639
  %28 = load %struct.rtio_sq*, %struct.rtio_sq** %15, align 4, !dbg !9639
  %29 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %28, i32 0, i32 0, i32 4, !dbg !9639
  %30 = load i32, i32* %29, align 4, !dbg !9639
  %31 = and i32 %30, %27, !dbg !9639
  %32 = icmp eq i32 %25, %31, !dbg !9639
  call void @llvm.dbg.value(metadata i1 %32, metadata !9621, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9640
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* undef, metadata !9613, metadata !DIExpression()), !dbg !9626
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* undef, metadata !9613, metadata !DIExpression()), !dbg !9626
  br i1 %32, label %64, label %33, !dbg !9641

33:                                               ; preds = %14
  %34 = and i32 %22, %30, !dbg !9639
  %35 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %28, i32 0, i32 1, i32 %34, !dbg !9639
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %35, metadata !9613, metadata !DIExpression()), !dbg !9626
  br label %36, !dbg !9642

36:                                               ; preds = %33, %42
  %37 = phi %struct.rtio_sqe* [ %63, %42 ], [ %35, %33 ]
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* %37, metadata !9613, metadata !DIExpression()), !dbg !9626
  %38 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %37, i32 0, i32 2, !dbg !9643
  %39 = load i16, i16* %38, align 2, !dbg !9643
  %40 = and i16 %39, 1, !dbg !9644
  %41 = icmp eq i16 %40, 0, !dbg !9641
  br i1 %41, label %64, label %42, !dbg !9642

42:                                               ; preds = %36
  %43 = getelementptr inbounds %struct.rtio_sqe, %struct.rtio_sqe* %37, i32 0, i32 4, !dbg !9645
  %44 = load i8*, i8** %43, align 4, !dbg !9645
  tail call fastcc void @rtio_cqe_submit.106(%struct.rtio* noundef nonnull %0, i32 noundef -140, i8* noundef %44) #24, !dbg !9646
  %45 = load %struct.rtio_sq*, %struct.rtio_sq** %15, align 4, !dbg !9647
  %46 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %45, i32 0, i32 1, i32 0, !dbg !9647
  %47 = ptrtoint %struct.rtio_sqe* %37 to i32, !dbg !9647
  %48 = ptrtoint %struct.rtio_sqe* %46 to i32, !dbg !9647
  %49 = sub i32 %47, %48, !dbg !9647
  %50 = sdiv exact i32 %49, 20, !dbg !9647
  call void @llvm.dbg.value(metadata i32 %50, metadata !9622, metadata !DIExpression()), !dbg !9648
  %51 = add nsw i32 %50, 1, !dbg !9647
  %52 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %45, i32 0, i32 0, i32 4, !dbg !9647
  %53 = load i32, i32* %52, align 4, !dbg !9647
  %54 = and i32 %51, %53, !dbg !9647
  %55 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %45, i32 0, i32 0, i32 2, !dbg !9647
  %56 = tail call fastcc i32 @atomic_get.99(i32* noundef nonnull %55) #24, !dbg !9647
  %57 = load %struct.rtio_sq*, %struct.rtio_sq** %15, align 4, !dbg !9647
  %58 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %57, i32 0, i32 0, i32 4, !dbg !9647
  %59 = load i32, i32* %58, align 4, !dbg !9647
  %60 = and i32 %59, %56, !dbg !9647
  %61 = icmp eq i32 %54, %60, !dbg !9647
  call void @llvm.dbg.value(metadata i1 %61, metadata !9625, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9648
  %62 = and i32 %51, %59, !dbg !9647
  %63 = getelementptr inbounds %struct.rtio_sq, %struct.rtio_sq* %57, i32 0, i32 1, i32 %62, !dbg !9647
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* undef, metadata !9613, metadata !DIExpression()), !dbg !9626
  call void @llvm.dbg.value(metadata %struct.rtio_sqe* undef, metadata !9613, metadata !DIExpression()), !dbg !9626
  br i1 %61, label %64, label %36, !dbg !9641

64:                                               ; preds = %42, %36, %14, %3
  %65 = extractvalue { i32, i32 } %6, 0, !dbg !9630
  call void @llvm.dbg.value(metadata i32 %65, metadata !9259, metadata !DIExpression()) #23, !dbg !9632
  call void @llvm.dbg.value(metadata i32 %65, metadata !9253, metadata !DIExpression()) #23, !dbg !9628
  call void @llvm.dbg.value(metadata i32 %65, metadata !9614, metadata !DIExpression()), !dbg !9626
  %66 = getelementptr inbounds %struct.rtio_concurrent_executor, %struct.rtio_concurrent_executor* %5, i32 0, i32 7, !dbg !9649
  %67 = load i8*, i8** %66, align 4, !dbg !9649
  %68 = zext i16 %9 to i32, !dbg !9650
  %69 = getelementptr inbounds i8, i8* %67, i32 %68, !dbg !9650
  %70 = load i8, i8* %69, align 1, !dbg !9651
  %71 = or i8 %70, 1, !dbg !9651
  store i8 %71, i8* %69, align 1, !dbg !9651
  tail call fastcc void @conex_sweep_resume(%struct.rtio* noundef nonnull %0, %struct.rtio_concurrent_executor* noundef %5) #24, !dbg !9652
  call void @llvm.dbg.value(metadata i32 undef, metadata !9319, metadata !DIExpression()) #23, !dbg !9653
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9324, metadata !DIExpression()) #23, !dbg !9653
  call void @llvm.dbg.value(metadata i32 undef, metadata !9327, metadata !DIExpression()) #23, !dbg !9655
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %65) #23, !dbg !9657, !srcloc !9333
  ret void, !dbg !9658
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !9659 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9661, metadata !DIExpression()), !dbg !9662
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #24, !dbg !9663
  ret void, !dbg !9664
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !9665 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9669, metadata !DIExpression()), !dbg !9675
  call void @llvm.dbg.value(metadata i32 %1, metadata !9670, metadata !DIExpression()), !dbg !9675
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !9671, metadata !DIExpression()), !dbg !9675
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !9676
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !9676
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !9676
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !9672, metadata !DIExpression()), !dbg !9675
  call void @llvm.dbg.value(metadata i32 %0, metadata !9674, metadata !DIExpression()), !dbg !9675
  %7 = icmp slt i32 %0, %1, !dbg !9677
  br i1 %7, label %8, label %22, !dbg !9680

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9674, metadata !DIExpression()), !dbg !9675
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #24, !dbg !9681
  %11 = icmp eq i32 %10, 0, !dbg !9681
  br i1 %11, label %19, label %12, !dbg !9684

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #24, !dbg !9685
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !9687
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !9687
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !9689
  br i1 %15, label %19, label %16, !dbg !9690

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !9691
  %18 = load i8*, i8** %17, align 4, !dbg !9691
  tail call void %14(i32 noundef %9, i8* noundef %18) #25, !dbg !9692
  br label %19, !dbg !9693

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !9694
  call void @llvm.dbg.value(metadata i32 %20, metadata !9674, metadata !DIExpression()), !dbg !9675
  %21 = icmp eq i32 %20, %1, !dbg !9677
  br i1 %21, label %22, label %8, !dbg !9680, !llvm.loop !9695

22:                                               ; preds = %19, %3
  ret void, !dbg !9697
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #5 !dbg !9698 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9700, metadata !DIExpression()), !dbg !9701
  %2 = shl nuw i32 1, %0, !dbg !9702
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #24, !dbg !9705
  ret i32 %3, !dbg !9706
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #15 !dbg !9707 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9711, metadata !DIExpression()), !dbg !9712
  %2 = shl nuw i32 1, %0, !dbg !9713
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #24, !dbg !9716
  ret void, !dbg !9717
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #15 !dbg !9718 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9721, metadata !DIExpression()), !dbg !9722
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !9723
  ret void, !dbg !9724
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #5 !dbg !9725 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9727, metadata !DIExpression()), !dbg !9728
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !9729
  %3 = and i32 %2, %0, !dbg !9729
  %4 = icmp eq i32 %3, %0, !dbg !9730
  %5 = zext i1 %4 to i32, !dbg !9730
  ret i32 %5, !dbg !9731
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !9732 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9734, metadata !DIExpression()), !dbg !9735
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #24, !dbg !9736
  ret void, !dbg !9737
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !9738 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9740, metadata !DIExpression()), !dbg !9741
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #24, !dbg !9742
  ret void, !dbg !9743
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !9744 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9746, metadata !DIExpression()), !dbg !9747
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #24, !dbg !9748
  ret void, !dbg !9749
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !9750 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9752, metadata !DIExpression()), !dbg !9753
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #24, !dbg !9754
  ret void, !dbg !9755
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !9756 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9758, metadata !DIExpression()), !dbg !9759
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #24, !dbg !9760
  ret void, !dbg !9761
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !9762 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9764, metadata !DIExpression()), !dbg !9765
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #24, !dbg !9766
  ret void, !dbg !9767
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !9768 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9770, metadata !DIExpression()), !dbg !9771
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #24, !dbg !9772
  ret void, !dbg !9773
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !9774 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9776, metadata !DIExpression()), !dbg !9777
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #24, !dbg !9778
  ret void, !dbg !9779
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !9780 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9782, metadata !DIExpression()), !dbg !9783
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #24, !dbg !9784
  ret void, !dbg !9785
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !9786 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9788, metadata !DIExpression()), !dbg !9789
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #24, !dbg !9790
  ret void, !dbg !9791
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !9792 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9794, metadata !DIExpression()), !dbg !9795
  tail call fastcc void @__stm32_exti_connect_irqs() #24, !dbg !9796
  ret i32 0, !dbg !9797
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !1150 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !1154, metadata !DIExpression()), !dbg !9798
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #25, !dbg !9799
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #25, !dbg !9801
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #25, !dbg !9803
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #25, !dbg !9805
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #25, !dbg !9807
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #25, !dbg !9809
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #25, !dbg !9811
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #25, !dbg !9813
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #25, !dbg !9815
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #25, !dbg !9817
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #25, !dbg !9819
  ret void, !dbg !9821
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !9822 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9824, metadata !DIExpression()), !dbg !9826
  call void @llvm.dbg.value(metadata i32 0, metadata !9825, metadata !DIExpression()), !dbg !9826
  %2 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !9827
  %3 = load i32, i32* %2, align 4, !dbg !9827
  call void @llvm.dbg.value(metadata i32 %3, metadata !9825, metadata !DIExpression()), !dbg !9826
  %4 = shl nuw i32 1, %0, !dbg !9828
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %4) #24, !dbg !9829
  tail call void @arch_irq_enable(i32 noundef %3) #25, !dbg !9830
  ret void, !dbg !9831
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !9832 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9834, metadata !DIExpression()), !dbg !9835
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9836
  %3 = or i32 %2, %0, !dbg !9836
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9836
  ret void, !dbg !9837
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #15 !dbg !9838 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9840, metadata !DIExpression()), !dbg !9841
  %2 = icmp slt i32 %0, 32, !dbg !9842
  br i1 %2, label %3, label %5, !dbg !9844

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !9845
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #24, !dbg !9847
  br label %5, !dbg !9848

5:                                                ; preds = %1, %3
  ret void, !dbg !9849
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !9850 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9852, metadata !DIExpression()), !dbg !9853
  %2 = xor i32 %0, -1, !dbg !9854
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9854
  %4 = and i32 %3, %2, !dbg !9854
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9854
  ret void, !dbg !9855
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #15 !dbg !9856 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9860, metadata !DIExpression()), !dbg !9862
  call void @llvm.dbg.value(metadata i32 %1, metadata !9861, metadata !DIExpression()), !dbg !9862
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !9863

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !9864
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #24, !dbg !9866
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #24, !dbg !9867
  br label %11, !dbg !9868

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !9869
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #24, !dbg !9870
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #24, !dbg !9871
  br label %11, !dbg !9872

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !9873
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #24, !dbg !9874
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #24, !dbg !9875
  br label %11, !dbg !9876

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !9877
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #24, !dbg !9878
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #24, !dbg !9879
  br label %11, !dbg !9880

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !9881
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !9882 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9884, metadata !DIExpression()), !dbg !9885
  %2 = xor i32 %0, -1, !dbg !9886
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9886
  %4 = and i32 %3, %2, !dbg !9886
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9886
  ret void, !dbg !9887
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !9888 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9890, metadata !DIExpression()), !dbg !9891
  %2 = xor i32 %0, -1, !dbg !9892
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9892
  %4 = and i32 %3, %2, !dbg !9892
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9892
  ret void, !dbg !9893
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !9894 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9896, metadata !DIExpression()), !dbg !9897
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9898
  %3 = or i32 %2, %0, !dbg !9898
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9898
  ret void, !dbg !9899
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !9900 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9902, metadata !DIExpression()), !dbg !9903
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9904
  %3 = or i32 %2, %0, !dbg !9904
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9904
  ret void, !dbg !9905
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #11 !dbg !9906 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9910, metadata !DIExpression()), !dbg !9916
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !9911, metadata !DIExpression()), !dbg !9916
  call void @llvm.dbg.value(metadata i8* %2, metadata !9912, metadata !DIExpression()), !dbg !9916
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_39, metadata !9913, metadata !DIExpression()), !dbg !9916
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !9915, metadata !DIExpression()), !dbg !9916
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !9917
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !9917
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !9919
  br i1 %6, label %7, label %9, !dbg !9920

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !9921
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !9922
  store i8* %2, i8** %8, align 4, !dbg !9923
  br label %9, !dbg !9924

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !9916
  ret i32 %10, !dbg !9925
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #6 !dbg !9926 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9928, metadata !DIExpression()), !dbg !9931
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_39, metadata !9929, metadata !DIExpression()), !dbg !9931
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !9930, metadata !DIExpression()), !dbg !9931
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !9932
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !9933
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !9934
  store i8* null, i8** %3, align 4, !dbg !9935
  ret void, !dbg !9936
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !9937 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9939, metadata !DIExpression()), !dbg !9944
  call void @llvm.dbg.value(metadata i8* %1, metadata !9940, metadata !DIExpression()), !dbg !9944
  call void @llvm.dbg.value(metadata i8* %1, metadata !9941, metadata !DIExpression()), !dbg !9944
  %3 = bitcast i8* %1 to i32*, !dbg !9945
  %4 = load i32, i32* %3, align 4, !dbg !9945
  %5 = add i32 %4, -169, !dbg !9945
  %6 = icmp ult i32 %5, -121, !dbg !9945
  br i1 %6, label %15, label %7, !dbg !9947

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !9948
  %9 = inttoptr i32 %8 to i32*, !dbg !9949
  call void @llvm.dbg.value(metadata i32* %9, metadata !9942, metadata !DIExpression()), !dbg !9944
  %10 = load volatile i32, i32* %9, align 4, !dbg !9950
  call void @llvm.dbg.value(metadata i32 %10, metadata !9943, metadata !DIExpression()), !dbg !9944
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9951
  %12 = bitcast i8* %11 to i32*, !dbg !9951
  %13 = load i32, i32* %12, align 4, !dbg !9951
  %14 = or i32 %13, %10, !dbg !9952
  call void @llvm.dbg.value(metadata i32 %14, metadata !9943, metadata !DIExpression()), !dbg !9944
  store volatile i32 %14, i32* %9, align 4, !dbg !9953
  br label %15, !dbg !9954

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !9944
  ret i32 %16, !dbg !9955
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !9956 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9958, metadata !DIExpression()), !dbg !9963
  call void @llvm.dbg.value(metadata i8* %1, metadata !9959, metadata !DIExpression()), !dbg !9963
  call void @llvm.dbg.value(metadata i8* %1, metadata !9960, metadata !DIExpression()), !dbg !9963
  %3 = bitcast i8* %1 to i32*, !dbg !9964
  %4 = load i32, i32* %3, align 4, !dbg !9964
  %5 = add i32 %4, -169, !dbg !9964
  %6 = icmp ult i32 %5, -121, !dbg !9964
  br i1 %6, label %16, label %7, !dbg !9966

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !9967
  %9 = inttoptr i32 %8 to i32*, !dbg !9968
  call void @llvm.dbg.value(metadata i32* %9, metadata !9961, metadata !DIExpression()), !dbg !9963
  %10 = load volatile i32, i32* %9, align 4, !dbg !9969
  call void @llvm.dbg.value(metadata i32 %10, metadata !9962, metadata !DIExpression()), !dbg !9963
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9970
  %12 = bitcast i8* %11 to i32*, !dbg !9970
  %13 = load i32, i32* %12, align 4, !dbg !9970
  %14 = xor i32 %13, -1, !dbg !9971
  %15 = and i32 %10, %14, !dbg !9972
  call void @llvm.dbg.value(metadata i32 %15, metadata !9962, metadata !DIExpression()), !dbg !9963
  store volatile i32 %15, i32* %9, align 4, !dbg !9973
  br label %16, !dbg !9974

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !9963
  ret i32 %17, !dbg !9975
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !9976 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9978, metadata !DIExpression()), !dbg !9986
  call void @llvm.dbg.value(metadata i8* %1, metadata !9979, metadata !DIExpression()), !dbg !9986
  call void @llvm.dbg.value(metadata i32* %2, metadata !9980, metadata !DIExpression()), !dbg !9986
  call void @llvm.dbg.value(metadata i8* %1, metadata !9981, metadata !DIExpression()), !dbg !9986
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !9987
  call void @llvm.dbg.value(metadata i32 %4, metadata !9982, metadata !DIExpression()), !dbg !9986
  call void @llvm.dbg.value(metadata i32 undef, metadata !9983, metadata !DIExpression()), !dbg !9986
  call void @llvm.dbg.value(metadata i32 undef, metadata !9984, metadata !DIExpression()), !dbg !9986
  call void @llvm.dbg.value(metadata i32 %4, metadata !9985, metadata !DIExpression()), !dbg !9986
  %5 = bitcast i8* %1 to i32*, !dbg !9988
  %6 = load i32, i32* %5, align 4, !dbg !9988
  switch i32 %6, label %21 [
    i32 48, label %19
    i32 52, label %19
    i32 56, label %19
    i32 64, label %7
    i32 68, label %9
    i32 168, label %19
    i32 6, label %19
    i32 1, label %11
    i32 2, label %14
    i32 4, label %17
    i32 5, label %18
  ], !dbg !9989

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #24, !dbg !9990
  call void @llvm.dbg.value(metadata i32 %8, metadata !9983, metadata !DIExpression()), !dbg !9986
  br label %19, !dbg !9991

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 1) #24, !dbg !9993
  call void @llvm.dbg.value(metadata i32 %10, metadata !9984, metadata !DIExpression()), !dbg !9986
  br label %19, !dbg !9994

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #25, !dbg !9995
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12, i32 noundef 2) #24, !dbg !9996
  br label %19, !dbg !9997

14:                                               ; preds = %3
  %15 = tail call i32 @get_pllsrc_frequency() #25, !dbg !9998
  %16 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %15, i32 noundef 8) #24, !dbg !9999
  br label %19, !dbg !10000

17:                                               ; preds = %3
  br label %19, !dbg !10001

18:                                               ; preds = %3
  br label %19, !dbg !10002

19:                                               ; preds = %3, %3, %3, %3, %3, %18, %17, %14, %11, %9, %7
  %20 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ %16, %14 ], [ 0, %17 ], [ 32000, %18 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %20, i32* %2, align 4, !dbg !10003
  br label %21, !dbg !10004

21:                                               ; preds = %19, %3
  %22 = phi i32 [ -134, %3 ], [ 0, %19 ], !dbg !9986
  ret i32 %22, !dbg !10004
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #15 !dbg !10005 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10007, metadata !DIExpression()), !dbg !10015
  call void @llvm.dbg.value(metadata i8* %1, metadata !10008, metadata !DIExpression()), !dbg !10015
  call void @llvm.dbg.value(metadata i8* %2, metadata !10009, metadata !DIExpression()), !dbg !10015
  call void @llvm.dbg.value(metadata i8* %1, metadata !10010, metadata !DIExpression()), !dbg !10015
  %4 = bitcast i8* %1 to i32*, !dbg !10016
  %5 = load i32, i32* %4, align 4, !dbg !10016
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #24, !dbg !10017
  call void @llvm.dbg.value(metadata i32 %6, metadata !10014, metadata !DIExpression()), !dbg !10015
  %7 = icmp slt i32 %6, 0, !dbg !10018
  br i1 %7, label %22, label %8, !dbg !10020

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !10010, metadata !DIExpression()), !dbg !10015
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10021
  %10 = bitcast i8* %9 to i32*, !dbg !10021
  %11 = load i32, i32* %10, align 4, !dbg !10021
  %12 = lshr i32 %11, 16, !dbg !10021
  %13 = and i32 %12, 7, !dbg !10021
  %14 = lshr i32 %11, 8, !dbg !10022
  %15 = and i32 %14, 31, !dbg !10022
  %16 = shl i32 %13, %15, !dbg !10023
  call void @llvm.dbg.value(metadata i32 %16, metadata !10013, metadata !DIExpression()), !dbg !10015
  %17 = and i32 %11, 255, !dbg !10024
  %18 = or i32 %17, 1073887232, !dbg !10025
  %19 = inttoptr i32 %18 to i32*, !dbg !10026
  call void @llvm.dbg.value(metadata i32* %19, metadata !10011, metadata !DIExpression()), !dbg !10015
  %20 = load volatile i32, i32* %19, align 4, !dbg !10027
  call void @llvm.dbg.value(metadata i32 %20, metadata !10012, metadata !DIExpression()), !dbg !10015
  %21 = or i32 %16, %20, !dbg !10028
  call void @llvm.dbg.value(metadata i32 %21, metadata !10012, metadata !DIExpression()), !dbg !10015
  store volatile i32 %21, i32* %19, align 4, !dbg !10029
  br label %22, !dbg !10030

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !10015
  ret i32 %23, !dbg !10031
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #4 !dbg !10032 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10036, metadata !DIExpression()), !dbg !10038
  call void @llvm.dbg.value(metadata i32 0, metadata !10037, metadata !DIExpression()), !dbg !10038
  %2 = add i32 %0, -1, !dbg !10039
  %3 = icmp ult i32 %2, 6, !dbg !10039
  br i1 %3, label %4, label %7, !dbg !10039

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !10039
  %6 = load i32, i32* %5, align 4, !dbg !10039
  call void @llvm.dbg.value(metadata i32 %6, metadata !10037, metadata !DIExpression()), !dbg !10038
  br label %7, !dbg !10040

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !10038
  ret i32 %8, !dbg !10041
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !10042 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10046, metadata !DIExpression()), !dbg !10048
  call void @llvm.dbg.value(metadata i32 %1, metadata !10047, metadata !DIExpression()), !dbg !10048
  %3 = udiv i32 %0, %1, !dbg !10049
  ret i32 %3, !dbg !10050
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !10051 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10055, metadata !DIExpression()), !dbg !10059
  call void @llvm.dbg.value(metadata i32 8, metadata !10056, metadata !DIExpression()), !dbg !10059
  call void @llvm.dbg.value(metadata i32 84, metadata !10057, metadata !DIExpression()), !dbg !10059
  call void @llvm.dbg.value(metadata i32 %1, metadata !10058, metadata !DIExpression()), !dbg !10059
  %3 = mul i32 %0, 84, !dbg !10060
  %4 = shl nsw i32 %1, 3, !dbg !10061
  %5 = udiv i32 %3, %4, !dbg !10062
  ret i32 %5, !dbg !10063
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !10064 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !10066, metadata !DIExpression()), !dbg !10069
  tail call void @config_enable_default_clocks() #25, !dbg !10070
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #25, !dbg !10071
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #24, !dbg !10071
  %4 = lshr i32 %3, 4, !dbg !10071
  %5 = and i32 %4, 15, !dbg !10071
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !10071
  %7 = load i8, i8* %6, align 1, !dbg !10071
  %8 = zext i8 %7 to i32, !dbg !10071
  %9 = lshr i32 %2, %8, !dbg !10071
  call void @llvm.dbg.value(metadata i32 %9, metadata !10067, metadata !DIExpression()), !dbg !10069
  call void @llvm.dbg.value(metadata !DIArgList(i32 84000000, i8 undef), metadata !10068, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !10069
  %10 = icmp ult i32 %9, 84000000, !dbg !10072
  br i1 %10, label %11, label %13, !dbg !10074

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #25, !dbg !10075
  br label %13, !dbg !10077

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #24, !dbg !10078
  tail call fastcc void @set_up_plls() #24, !dbg !10079
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !10080
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #24, !dbg !10083
  br label %14, !dbg !10084

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !10085
  %16 = icmp eq i32 %15, 8, !dbg !10086
  br i1 %16, label %17, label %14, !dbg !10084, !llvm.loop !10087

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 83999999, !dbg !10089
  br i1 %18, label %19, label %21, !dbg !10091

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #25, !dbg !10092
  br label %21, !dbg !10094

21:                                               ; preds = %19, %17
  store i32 84000000, i32* @SystemCoreClock, align 4, !dbg !10095
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #24, !dbg !10096
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #24, !dbg !10097
  ret i32 0, !dbg !10098
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #5 !dbg !10099 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10101
  %2 = and i32 %1, 240, !dbg !10101
  ret i32 %2, !dbg !10102
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #15 !dbg !10103 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #24, !dbg !10104
  tail call fastcc void @LL_RCC_HSE_Enable() #24, !dbg !10109
  br label %1, !dbg !10110

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #24, !dbg !10111
  %3 = icmp eq i32 %2, 1, !dbg !10112
  br i1 %3, label %4, label %1, !dbg !10110, !llvm.loop !10113

4:                                                ; preds = %1
  tail call fastcc void @LL_RCC_LSI_Enable() #24, !dbg !10115
  br label %5, !dbg !10118

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #24, !dbg !10119
  %7 = icmp eq i32 %6, 1, !dbg !10120
  br i1 %7, label %8, label %5, !dbg !10118, !llvm.loop !10121

8:                                                ; preds = %5
  ret void, !dbg !10123
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !10124 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !10125
  %2 = icmp eq i32 %1, 8, !dbg !10127
  br i1 %2, label %3, label %4, !dbg !10128

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !10129
  tail call fastcc void @stm32_clock_switch_to_hsi() #24, !dbg !10131
  br label %4, !dbg !10132

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #24, !dbg !10133
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10134
  %6 = and i32 %5, -196609, !dbg !10134
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10134
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10135
  %8 = and i32 %7, -251658241, !dbg !10135
  %9 = or i32 %8, 134217728, !dbg !10135
  store volatile i32 %9, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10135
  tail call void @config_pll_sysclock() #25, !dbg !10136
  tail call fastcc void @LL_RCC_PLL_Enable() #24, !dbg !10137
  br label %10, !dbg !10138

10:                                               ; preds = %10, %4
  %11 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #24, !dbg !10139
  %12 = icmp eq i32 %11, 1, !dbg !10140
  br i1 %12, label %13, label %10, !dbg !10138, !llvm.loop !10141

13:                                               ; preds = %10
  ret void, !dbg !10143
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #15 !dbg !10144 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10146, metadata !DIExpression()), !dbg !10147
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10148
  %2 = and i32 %1, -241, !dbg !10148
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10148
  ret void, !dbg !10149
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #15 !dbg !10150 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10152, metadata !DIExpression()), !dbg !10153
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10154
  %3 = and i32 %2, -4, !dbg !10154
  %4 = or i32 %3, %0, !dbg !10154
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10154
  ret void, !dbg !10155
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #5 !dbg !10156 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10157
  %2 = and i32 %1, 12, !dbg !10157
  ret i32 %2, !dbg !10158
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #15 !dbg !10159 {
  call void @llvm.dbg.value(metadata i32 4096, metadata !10161, metadata !DIExpression()), !dbg !10162
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10163
  %2 = and i32 %1, -7169, !dbg !10163
  %3 = or i32 %2, 4096, !dbg !10163
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10163
  ret void, !dbg !10164
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #15 !dbg !10165 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10167, metadata !DIExpression()), !dbg !10168
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10169
  %2 = and i32 %1, -57345, !dbg !10169
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10169
  ret void, !dbg !10170
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #15 !dbg !10171 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !10172
  %2 = icmp eq i32 %1, 1, !dbg !10174
  br i1 %2, label %7, label %3, !dbg !10175

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #24, !dbg !10176
  br label %4, !dbg !10178

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !10179
  %6 = icmp eq i32 %5, 1, !dbg !10180
  br i1 %6, label %7, label %4, !dbg !10178, !llvm.loop !10181

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #24, !dbg !10183
  br label %8, !dbg !10184

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !10185
  %10 = icmp eq i32 %9, 0, !dbg !10186
  br i1 %10, label %11, label %8, !dbg !10184, !llvm.loop !10187

11:                                               ; preds = %8
  ret void, !dbg !10189
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #15 !dbg !10190 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10191
  %2 = and i32 %1, -16777217, !dbg !10191
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10191
  ret void, !dbg !10192
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #15 !dbg !10193 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10194
  %2 = or i32 %1, 16777216, !dbg !10194
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10194
  ret void, !dbg !10195
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #5 !dbg !10196 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10197
  %2 = lshr i32 %1, 25, !dbg !10198
  %3 = and i32 %2, 1, !dbg !10198
  ret i32 %3, !dbg !10199
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #5 !dbg !10200 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10201
  %2 = lshr i32 %1, 1, !dbg !10202
  %3 = and i32 %2, 1, !dbg !10202
  ret i32 %3, !dbg !10203
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #15 !dbg !10204 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10205
  %2 = or i32 %1, 1, !dbg !10205
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10205
  ret void, !dbg !10206
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #15 !dbg !10207 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10208
  %2 = and i32 %1, -262145, !dbg !10208
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10208
  ret void, !dbg !10209
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #15 !dbg !10210 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10211
  %2 = or i32 %1, 65536, !dbg !10211
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10211
  ret void, !dbg !10212
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #5 !dbg !10213 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10214
  %2 = lshr i32 %1, 17, !dbg !10215
  %3 = and i32 %2, 1, !dbg !10215
  ret i32 %3, !dbg !10216
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #15 !dbg !10217 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10218
  %2 = or i32 %1, 1, !dbg !10218
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10218
  ret void, !dbg !10219
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #5 !dbg !10220 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10221
  %2 = lshr i32 %1, 1, !dbg !10222
  %3 = and i32 %2, 1, !dbg !10222
  ret i32 %3, !dbg !10223
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #4 !dbg !10224 {
  ret i32 16000000, !dbg !10226
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #15 !dbg !10230 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #24, !dbg !10231
  ret void, !dbg !10232
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #15 !dbg !10233 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !10237, metadata !DIExpression()), !dbg !10241
  call void @llvm.dbg.value(metadata i32 8, metadata !10238, metadata !DIExpression()), !dbg !10241
  call void @llvm.dbg.value(metadata i32 84, metadata !10239, metadata !DIExpression()), !dbg !10241
  call void @llvm.dbg.value(metadata i32 0, metadata !10240, metadata !DIExpression()), !dbg !10241
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10242
  %2 = and i32 %1, -4227072, !dbg !10242
  %3 = or i32 %2, 4199688, !dbg !10242
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10242
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10243
  %5 = and i32 %4, -196609, !dbg !10243
  store volatile i32 %5, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10243
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10244
  %7 = and i32 %6, -1879048193, !dbg !10244
  store volatile i32 %7, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10244
  ret void, !dbg !10245
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #19 !dbg !10246 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #24, !dbg !10247
  ret void, !dbg !10248
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #19 !dbg !10249 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !10252, metadata !DIExpression()), !dbg !10254
  %2 = bitcast i32* %1 to i8*, !dbg !10255
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !10255
  call void @llvm.dbg.declare(metadata i32* %1, metadata !10253, metadata !DIExpression()), !dbg !10256
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10257
  %4 = or i32 %3, 268435456, !dbg !10257
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10257
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10258
  %6 = and i32 %5, 268435456, !dbg !10258
  store volatile i32 %6, i32* %1, align 4, !dbg !10259
  %7 = load volatile i32, i32* %1, align 4, !dbg !10260
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !10261
  ret void, !dbg !10261
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !10262 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10264, metadata !DIExpression()), !dbg !10265
  %2 = tail call fastcc zeroext i1 @device_is_ready() #24, !dbg !10266
  br i1 %2, label %3, label %4, !dbg !10268

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #24, !dbg !10269
  br label %4, !dbg !10270

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !10265
  ret i32 %5, !dbg !10271
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !10272 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_51, metadata !10277, metadata !DIExpression()), !dbg !10278
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !10279, !srcloc !10281
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #24, !dbg !10282
  ret i1 %1, !dbg !10283
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !10284 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !10285
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !10286
  ret void, !dbg !10287
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !10288 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10290, metadata !DIExpression()), !dbg !10291
  %2 = icmp eq i32 %0, 10, !dbg !10292
  br i1 %2, label %3, label %4, !dbg !10294

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #24, !dbg !10295
  br label %4, !dbg !10297

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !10298
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #24, !dbg !10299
  ret i32 %0, !dbg !10300
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !10301 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_51, metadata !10304, metadata !DIExpression()), !dbg !10306
  call void @llvm.dbg.value(metadata i8 %0, metadata !10305, metadata !DIExpression()), !dbg !10306
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !10307, !srcloc !10309
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #24, !dbg !10310
  ret void, !dbg !10311
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !10312 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_51, metadata !10314, metadata !DIExpression()), !dbg !10317
  call void @llvm.dbg.value(metadata i8 %0, metadata !10315, metadata !DIExpression()), !dbg !10317
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_51, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !10318
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !10316, metadata !DIExpression()), !dbg !10317
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !10319
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !10319
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_51, i8 noundef zeroext %0) #25, !dbg !10320
  ret void, !dbg !10321
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !10322 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_51, metadata !10324, metadata !DIExpression()), !dbg !10325
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_51) #25, !dbg !10326
  ret i1 %1, !dbg !10327
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #4 !dbg !10328 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !10375, metadata !DIExpression()), !dbg !10378
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !10376, metadata !DIExpression()), !dbg !10378
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !10377, metadata !DIExpression()), !dbg !10378
  ret void, !dbg !10379
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !10380 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10382, metadata !DIExpression()), !dbg !10387
  call void @llvm.dbg.value(metadata i8 %1, metadata !10383, metadata !DIExpression()), !dbg !10387
  call void @llvm.dbg.value(metadata i32 %2, metadata !10384, metadata !DIExpression()), !dbg !10387
  %5 = bitcast i32* %4 to i8*, !dbg !10388
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !10388
  call void @llvm.dbg.value(metadata i32* %4, metadata !10386, metadata !DIExpression(DW_OP_deref)), !dbg !10387
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #24, !dbg !10389
  call void @llvm.dbg.value(metadata i32 %6, metadata !10385, metadata !DIExpression()), !dbg !10387
  %7 = icmp eq i32 %6, 0, !dbg !10390
  br i1 %7, label %8, label %31, !dbg !10392

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !10385, metadata !DIExpression()), !dbg !10387
  %9 = and i32 %2, 131072, !dbg !10393
  %10 = icmp eq i32 %9, 0, !dbg !10395
  br i1 %10, label %28, label %11, !dbg !10396

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !10397
  %13 = icmp eq i32 %12, 0, !dbg !10400
  br i1 %13, label %18, label %14, !dbg !10401

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !10402
  %16 = shl nuw i32 1, %15, !dbg !10402
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #24, !dbg !10404
  br label %25, !dbg !10405

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !10406
  %20 = icmp eq i32 %19, 0, !dbg !10408
  %21 = zext i8 %1 to i32, !dbg !10387
  br i1 %20, label %25, label %22, !dbg !10409

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !10410
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #24, !dbg !10412
  br label %25, !dbg !10413

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !10414
  %27 = load i32, i32* %4, align 4, !dbg !10415
  call void @llvm.dbg.value(metadata i32 %30, metadata !10386, metadata !DIExpression()), !dbg !10387
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #24, !dbg !10416
  br label %31, !dbg !10417

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !10414
  %30 = load i32, i32* %4, align 4, !dbg !10415
  call void @llvm.dbg.value(metadata i32 %30, metadata !10386, metadata !DIExpression()), !dbg !10387
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #24, !dbg !10416
  call void @llvm.dbg.value(metadata i32 0, metadata !10385, metadata !DIExpression()), !dbg !10387
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !10418
  ret i32 %6, !dbg !10418
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #5 !dbg !10419 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10423, metadata !DIExpression()), !dbg !10428
  call void @llvm.dbg.value(metadata i32* %1, metadata !10424, metadata !DIExpression()), !dbg !10428
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10429
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10429
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10429
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10425, metadata !DIExpression()), !dbg !10428
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10430
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10430
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10430
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10427, metadata !DIExpression()), !dbg !10428
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #24, !dbg !10431
  store i32 %9, i32* %1, align 4, !dbg !10432
  ret i32 0, !dbg !10433
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #15 !dbg !10434 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10436, metadata !DIExpression()), !dbg !10442
  call void @llvm.dbg.value(metadata i32 %1, metadata !10437, metadata !DIExpression()), !dbg !10442
  call void @llvm.dbg.value(metadata i32 %2, metadata !10438, metadata !DIExpression()), !dbg !10442
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10443
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !10443
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !10443
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !10439, metadata !DIExpression()), !dbg !10442
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !10444
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !10444
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !10444
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !10440, metadata !DIExpression()), !dbg !10442
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #24, !dbg !10445
  call void @llvm.dbg.value(metadata i32 %10, metadata !10441, metadata !DIExpression()), !dbg !10442
  %11 = xor i32 %1, -1, !dbg !10446
  %12 = and i32 %10, %11, !dbg !10447
  %13 = and i32 %2, %1, !dbg !10448
  %14 = or i32 %12, %13, !dbg !10449
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #24, !dbg !10450
  ret i32 0, !dbg !10451
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !10452 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10454, metadata !DIExpression()), !dbg !10458
  call void @llvm.dbg.value(metadata i32 %1, metadata !10455, metadata !DIExpression()), !dbg !10458
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10459
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10459
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10459
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10456, metadata !DIExpression()), !dbg !10458
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10460
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10460
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10460
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10457, metadata !DIExpression()), !dbg !10458
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !10461
  store volatile i32 %1, i32* %9, align 4, !dbg !10461
  ret i32 0, !dbg !10462
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !10463 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10465, metadata !DIExpression()), !dbg !10469
  call void @llvm.dbg.value(metadata i32 %1, metadata !10466, metadata !DIExpression()), !dbg !10469
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10470
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10470
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10470
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10467, metadata !DIExpression()), !dbg !10469
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10471
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10471
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10471
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10468, metadata !DIExpression()), !dbg !10469
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #24, !dbg !10472
  ret i32 0, !dbg !10473
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !10474 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10476, metadata !DIExpression()), !dbg !10480
  call void @llvm.dbg.value(metadata i32 %1, metadata !10477, metadata !DIExpression()), !dbg !10480
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10481
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10481
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10481
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10478, metadata !DIExpression()), !dbg !10480
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10482
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10482
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10482
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10479, metadata !DIExpression()), !dbg !10480
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !10483
  %10 = load volatile i32, i32* %9, align 4, !dbg !10483
  %11 = xor i32 %10, %1, !dbg !10483
  store volatile i32 %11, i32* %9, align 4, !dbg !10483
  ret i32 0, !dbg !10484
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !10485 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10487, metadata !DIExpression()), !dbg !10497
  call void @llvm.dbg.value(metadata i8 %1, metadata !10488, metadata !DIExpression()), !dbg !10497
  call void @llvm.dbg.value(metadata i32 %2, metadata !10489, metadata !DIExpression()), !dbg !10497
  call void @llvm.dbg.value(metadata i32 %3, metadata !10490, metadata !DIExpression()), !dbg !10497
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10498
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !10498
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !10498
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !10491, metadata !DIExpression()), !dbg !10497
  call void @llvm.dbg.value(metadata i8* undef, metadata !10492, metadata !DIExpression()), !dbg !10497
  call void @llvm.dbg.value(metadata i32 0, metadata !10494, metadata !DIExpression()), !dbg !10497
  call void @llvm.dbg.value(metadata i32 0, metadata !10495, metadata !DIExpression()), !dbg !10497
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !10499

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !10500
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #24, !dbg !10504
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !10505
  %12 = load i32, i32* %11, align 4, !dbg !10505
  %13 = icmp eq i32 %10, %12, !dbg !10506
  br i1 %13, label %14, label %29, !dbg !10507

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #25, !dbg !10508
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #25, !dbg !10510
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #25, !dbg !10511
  br label %29, !dbg !10512

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10513
  %17 = load i8*, i8** %16, align 4, !dbg !10513
  call void @llvm.dbg.value(metadata i8* %17, metadata !10492, metadata !DIExpression()), !dbg !10497
  %18 = zext i8 %1 to i32, !dbg !10514
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #25, !dbg !10516
  %20 = icmp eq i32 %19, 0, !dbg !10517
  br i1 %20, label %21, label %29, !dbg !10518

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !10519
  %23 = load i32, i32* %22, align 4, !dbg !10519
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #24, !dbg !10520
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !10521

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !10494, metadata !DIExpression()), !dbg !10497
  br label %27, !dbg !10522

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !10494, metadata !DIExpression()), !dbg !10497
  br label %27, !dbg !10524

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !10494, metadata !DIExpression()), !dbg !10497
  br label %27, !dbg !10525

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !10497
  call void @llvm.dbg.value(metadata i32 %28, metadata !10494, metadata !DIExpression()), !dbg !10497
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #25, !dbg !10526
  tail call void @stm32_exti_enable(i32 noundef %18) #25, !dbg !10527
  br label %29, !dbg !10527

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !10497
  call void @llvm.dbg.value(metadata i32 %30, metadata !10495, metadata !DIExpression()), !dbg !10497
  call void @llvm.dbg.label(metadata !10496), !dbg !10528
  ret i32 %30, !dbg !10529
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #14 !dbg !10530 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10532, metadata !DIExpression()), !dbg !10536
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !10533, metadata !DIExpression()), !dbg !10536
  call void @llvm.dbg.value(metadata i1 %2, metadata !10534, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10536
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10537
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !10537
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !10537
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !10535, metadata !DIExpression()), !dbg !10536
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !10538
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #24, !dbg !10539
  ret i32 %8, !dbg !10540
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #14 !dbg !10541 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10547, metadata !DIExpression()), !dbg !10550
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !10548, metadata !DIExpression()), !dbg !10550
  call void @llvm.dbg.value(metadata i1 %2, metadata !10549, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10550
  %4 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #24, !dbg !10551
  br i1 %4, label %10, label %5, !dbg !10553

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !10554
  %7 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef %6) #24, !dbg !10557
  %8 = or i1 %7, %2, !dbg !10558
  %9 = select i1 %8, i32 0, i32 -22, !dbg !10558
  br i1 %2, label %11, label %13, !dbg !10558

10:                                               ; preds = %3
  br i1 %2, label %11, label %13, !dbg !10559

11:                                               ; preds = %10, %5
  %12 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !10560
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef %12) #24, !dbg !10563
  br label %13, !dbg !10564

13:                                               ; preds = %5, %11, %10
  %14 = phi i32 [ %9, %5 ], [ -22, %10 ], [ 0, %11 ], !dbg !10550
  ret i32 %14, !dbg !10565
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !10566 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10570, metadata !DIExpression()), !dbg !10571
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10572
  %3 = icmp eq %struct._snode* %2, null, !dbg !10572
  ret i1 %3, !dbg !10572
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #14 !dbg !10573 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10577, metadata !DIExpression()), !dbg !10581
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10578, metadata !DIExpression()), !dbg !10581
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10579, metadata !DIExpression()), !dbg !10581
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10582
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10580, metadata !DIExpression()), !dbg !10581
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10579, metadata !DIExpression()), !dbg !10581
  %4 = icmp eq %struct._snode* %3, null, !dbg !10584
  br i1 %4, label %15, label %5, !dbg !10582

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10580, metadata !DIExpression()), !dbg !10581
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10579, metadata !DIExpression()), !dbg !10581
  %6 = icmp eq %struct._snode* %3, %1, !dbg !10586
  br i1 %6, label %9, label %11, !dbg !10589

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10580, metadata !DIExpression()), !dbg !10581
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10579, metadata !DIExpression()), !dbg !10581
  %8 = icmp eq %struct._snode* %13, %1, !dbg !10586
  br i1 %8, label %9, label %11, !dbg !10589, !llvm.loop !10590

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #24, !dbg !10591
  br label %15, !dbg !10591

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10580, metadata !DIExpression()), !dbg !10581
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10579, metadata !DIExpression()), !dbg !10581
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #24, !dbg !10584
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10580, metadata !DIExpression()), !dbg !10581
  %14 = icmp eq %struct._snode* %13, null, !dbg !10584
  br i1 %14, label %15, label %7, !dbg !10582, !llvm.loop !10590

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !10593
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #11 !dbg !10594 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10598, metadata !DIExpression()), !dbg !10600
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10599, metadata !DIExpression()), !dbg !10600
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10601
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #24, !dbg !10601
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #24, !dbg !10601
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !10602
  %5 = icmp eq %struct._snode* %4, null, !dbg !10602
  br i1 %5, label %6, label %8, !dbg !10601

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10604
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #24, !dbg !10604
  br label %8, !dbg !10604

8:                                                ; preds = %6, %2
  ret void, !dbg !10601
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !10606 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10610, metadata !DIExpression()), !dbg !10611
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10612
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10612
  ret %struct._snode* %3, !dbg !10613
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #6 !dbg !10614 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10618, metadata !DIExpression()), !dbg !10620
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10619, metadata !DIExpression()), !dbg !10620
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10621
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10622
  ret void, !dbg !10623
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #6 !dbg !10624 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10626, metadata !DIExpression()), !dbg !10628
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10627, metadata !DIExpression()), !dbg !10628
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10629
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10630
  ret void, !dbg !10631
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !10632 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10634, metadata !DIExpression()), !dbg !10635
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10636
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10636
  ret %struct._snode* %3, !dbg !10637
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #6 !dbg !10638 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10640, metadata !DIExpression()), !dbg !10642
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10641, metadata !DIExpression()), !dbg !10642
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10643
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10644
  ret void, !dbg !10645
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #11 !dbg !10646 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10650, metadata !DIExpression()), !dbg !10653
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10651, metadata !DIExpression()), !dbg !10653
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !10652, metadata !DIExpression()), !dbg !10653
  %4 = icmp eq %struct._snode* %1, null, !dbg !10654
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #24, !dbg !10656
  br i1 %4, label %6, label %11, !dbg !10657

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #24, !dbg !10658
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !10660
  %8 = icmp eq %struct._snode* %7, %2, !dbg !10660
  br i1 %8, label %9, label %15, !dbg !10658

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10662
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #24, !dbg !10662
  br label %15, !dbg !10662

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #24, !dbg !10664
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !10666
  %13 = icmp eq %struct._snode* %12, %2, !dbg !10666
  br i1 %13, label %14, label %15, !dbg !10664

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #24, !dbg !10668
  br label %15, !dbg !10668

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #24, !dbg !10657
  ret void, !dbg !10657
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #10 !dbg !10670 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10674, metadata !DIExpression()), !dbg !10675
  %2 = icmp eq %struct._snode* %0, null, !dbg !10676
  br i1 %2, label %5, label %3, !dbg !10676

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #24, !dbg !10676
  br label %5, !dbg !10676

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !10676
  ret %struct._snode* %6, !dbg !10676
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !10677 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10679, metadata !DIExpression()), !dbg !10680
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #24, !dbg !10681
  ret %struct._snode* %2, !dbg !10681
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !10682 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10684, metadata !DIExpression()), !dbg !10685
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10686
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10686
  ret %struct._snode* %3, !dbg !10687
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !10688 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10690, metadata !DIExpression()), !dbg !10693
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #24, !dbg !10694, !range !10695
  call void @llvm.dbg.value(metadata i32 %2, metadata !10691, metadata !DIExpression()), !dbg !10693
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #24, !dbg !10696
  call void @llvm.dbg.value(metadata i32 %3, metadata !10692, metadata !DIExpression()), !dbg !10693
  ret i32 %3, !dbg !10697
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !10698 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10700, metadata !DIExpression()), !dbg !10703
  call void @llvm.dbg.value(metadata i8* %1, metadata !10701, metadata !DIExpression()), !dbg !10703
  call void @llvm.dbg.value(metadata i8* %1, metadata !10702, metadata !DIExpression()), !dbg !10703
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !10704
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !10704
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10705
  %6 = bitcast i8* %5 to %struct.device**, !dbg !10705
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !10705
  %8 = shl nuw i32 1, %0, !dbg !10706
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #24, !dbg !10707
  ret void, !dbg !10708
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10709 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !10713, metadata !DIExpression()), !dbg !10719
  call void @llvm.dbg.value(metadata i32 %1, metadata !10714, metadata !DIExpression()), !dbg !10719
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10715, metadata !DIExpression()), !dbg !10719
  %4 = bitcast i64* %3 to i8*, !dbg !10720
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #23, !dbg !10720
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !10717, metadata !DIExpression()), !dbg !10719
  store i64 70368744177732, i64* %3, align 8, !dbg !10721
  call void @llvm.dbg.value(metadata i64* %3, metadata !10717, metadata !DIExpression(DW_OP_deref)), !dbg !10719
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #24, !dbg !10722
  call void @llvm.dbg.value(metadata i32 %5, metadata !10718, metadata !DIExpression()), !dbg !10719
  %6 = icmp eq i32 %5, 0, !dbg !10723
  br i1 %6, label %7, label %8, !dbg !10725

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #24, !dbg !10726
  br label %8, !dbg !10727

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #23, !dbg !10728
  ret void, !dbg !10728
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !10729 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10731, metadata !DIExpression()), !dbg !10734
  call void @llvm.dbg.value(metadata i8* %0, metadata !10732, metadata !DIExpression()), !dbg !10734
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_8, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !10735
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !10733, metadata !DIExpression()), !dbg !10734
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !10736
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !10736
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_8, i8* noundef %0) #25, !dbg !10737
  ret i32 %5, !dbg !10738
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10739 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10741, metadata !DIExpression()), !dbg !10744
  call void @llvm.dbg.value(metadata i32 %1, metadata !10742, metadata !DIExpression()), !dbg !10744
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #24, !dbg !10745
  call void @llvm.dbg.value(metadata i32 %3, metadata !10743, metadata !DIExpression()), !dbg !10744
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #24, !dbg !10746
  ret void, !dbg !10747
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #4 !dbg !10748 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10752, metadata !DIExpression()), !dbg !10753
  %2 = sdiv i32 %0, 4, !dbg !10754
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !10755
  %6 = add nsw i32 %5, 16, !dbg !10756
  %7 = shl i32 15, %6, !dbg !10757
  %8 = or i32 %7, %2, !dbg !10758
  ret i32 %8, !dbg !10759
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10760 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10764, metadata !DIExpression()), !dbg !10766
  call void @llvm.dbg.value(metadata i32 %1, metadata !10765, metadata !DIExpression()), !dbg !10766
  %3 = and i32 %1, 255, !dbg !10767
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !10767
  %5 = load volatile i32, i32* %4, align 4, !dbg !10767
  %6 = lshr i32 %1, 16, !dbg !10767
  %7 = xor i32 %6, -1, !dbg !10767
  %8 = and i32 %5, %7, !dbg !10767
  call void @llvm.dbg.value(metadata i32 %6, metadata !10768, metadata !DIExpression()) #23, !dbg !10772
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !10774, !srcloc !10775
  call void @llvm.dbg.value(metadata i32 %9, metadata !10771, metadata !DIExpression()) #23, !dbg !10772
  call void @llvm.dbg.value(metadata i32 %9, metadata !10776, metadata !DIExpression()) #23, !dbg !10781
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #23, !dbg !10783, !range !8284
  %11 = shl i32 %0, %10, !dbg !10767
  %12 = or i32 %11, %8, !dbg !10767
  store volatile i32 %12, i32* %4, align 4, !dbg !10767
  ret void, !dbg !10784
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10785 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10789, metadata !DIExpression()), !dbg !10794
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !10790, metadata !DIExpression()), !dbg !10794
  call void @llvm.dbg.value(metadata i32 %2, metadata !10791, metadata !DIExpression()), !dbg !10794
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10795
  %5 = icmp eq %struct._snode* %4, null, !dbg !10795
  br i1 %5, label %21, label %6, !dbg !10795

6:                                                ; preds = %3, %19
  %7 = phi %struct._snode* [ %8, %19 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #24, !dbg !10797
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10793, metadata !DIExpression()), !dbg !10794
  call void @llvm.dbg.value(metadata %struct._snode* %7, metadata !10792, metadata !DIExpression()), !dbg !10794
  %9 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !10798
  %10 = bitcast %struct._snode* %9 to i32*, !dbg !10798
  %11 = load i32, i32* %10, align 4, !dbg !10798
  %12 = and i32 %11, %2, !dbg !10802
  %13 = icmp eq i32 %12, 0, !dbg !10802
  br i1 %13, label %19, label %14, !dbg !10803

14:                                               ; preds = %6
  %15 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %15, metadata !10792, metadata !DIExpression()), !dbg !10794
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !10804
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !10804
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !10804
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %15, i32 noundef %12) #25, !dbg !10806
  br label %19, !dbg !10807

19:                                               ; preds = %6, %14
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10792, metadata !DIExpression()), !dbg !10794
  %20 = icmp eq %struct._snode* %8, null, !dbg !10808
  br i1 %20, label %21, label %6, !dbg !10808

21:                                               ; preds = %19, %3
  ret void, !dbg !10809
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !10810 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10812, metadata !DIExpression()), !dbg !10813
  %2 = and i32 %0, 255, !dbg !10814
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !10814
  %4 = load volatile i32, i32* %3, align 4, !dbg !10814
  %5 = lshr i32 %0, 16, !dbg !10814
  %6 = and i32 %4, %5, !dbg !10814
  call void @llvm.dbg.value(metadata i32 %5, metadata !10768, metadata !DIExpression()) #23, !dbg !10815
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #28, !dbg !10817, !srcloc !10775
  call void @llvm.dbg.value(metadata i32 %7, metadata !10771, metadata !DIExpression()) #23, !dbg !10815
  call void @llvm.dbg.value(metadata i32 %7, metadata !10776, metadata !DIExpression()) #23, !dbg !10818
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !10820, !range !8284
  %9 = lshr i32 %6, %8, !dbg !10821
  ret i32 %9, !dbg !10822
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10823 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10828, metadata !DIExpression()), !dbg !10830
  call void @llvm.dbg.value(metadata i32 %1, metadata !10829, metadata !DIExpression()), !dbg !10830
  %3 = shl i32 %1, 16, !dbg !10831
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !10831
  store volatile i32 %3, i32* %4, align 4, !dbg !10831
  ret void, !dbg !10832
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #5 !dbg !10833 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10837, metadata !DIExpression()), !dbg !10838
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10839
  %3 = load volatile i32, i32* %2, align 4, !dbg !10839
  ret i32 %3, !dbg !10840
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10841 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10843, metadata !DIExpression()), !dbg !10845
  call void @llvm.dbg.value(metadata i32 %1, metadata !10844, metadata !DIExpression()), !dbg !10845
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10846
  store volatile i32 %1, i32* %3, align 4, !dbg !10846
  ret void, !dbg !10847
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #5 !dbg !10848 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10850, metadata !DIExpression()), !dbg !10851
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !10852
  %3 = load volatile i32, i32* %2, align 4, !dbg !10852
  ret i32 %3, !dbg !10853
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #11 !dbg !10854 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10858, metadata !DIExpression()), !dbg !10860
  call void @llvm.dbg.value(metadata i32* %1, metadata !10859, metadata !DIExpression()), !dbg !10860
  %3 = and i32 %0, 131072, !dbg !10861
  %4 = icmp eq i32 %3, 0, !dbg !10863
  br i1 %4, label %22, label %5, !dbg !10864

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !10865
  %6 = and i32 %0, 2, !dbg !10867
  %7 = icmp eq i32 %6, 0, !dbg !10869
  br i1 %7, label %11, label %8, !dbg !10870

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !10871
  %10 = icmp eq i32 %9, 0, !dbg !10871
  br i1 %10, label %33, label %11, !dbg !10874

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !10875
  store i32 %12, i32* %1, align 4, !dbg !10875
  %13 = and i32 %0, 16, !dbg !10876
  %14 = icmp eq i32 %13, 0, !dbg !10878
  br i1 %14, label %17, label %15, !dbg !10879

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !10880
  br label %31, !dbg !10882

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !10883
  %19 = icmp eq i32 %18, 0, !dbg !10885
  br i1 %19, label %33, label %20, !dbg !10886

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !10887
  br label %31, !dbg !10889

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !10890
  %24 = icmp eq i32 %23, 0, !dbg !10892
  br i1 %24, label %31, label %25, !dbg !10893

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !10894
  %27 = icmp eq i32 %26, 0, !dbg !10897
  br i1 %27, label %28, label %31, !dbg !10898

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !10899
  br label %33, !dbg !10900

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !10860
  ret i32 %34, !dbg !10900
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !10901 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10905, metadata !DIExpression()), !dbg !10916
  call void @llvm.dbg.value(metadata i32 %1, metadata !10906, metadata !DIExpression()), !dbg !10916
  call void @llvm.dbg.value(metadata i32 %2, metadata !10907, metadata !DIExpression()), !dbg !10916
  call void @llvm.dbg.value(metadata i32 %3, metadata !10908, metadata !DIExpression()), !dbg !10916
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10917
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !10917
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !10917
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !10909, metadata !DIExpression()), !dbg !10916
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !10918
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !10918
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !10918
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !10910, metadata !DIExpression()), !dbg !10916
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #24, !dbg !10919
  call void @llvm.dbg.value(metadata i32 %11, metadata !10911, metadata !DIExpression()), !dbg !10916
  %12 = and i32 %2, 48, !dbg !10920
  call void @llvm.dbg.value(metadata i32 %12, metadata !10912, metadata !DIExpression()), !dbg !10916
  call void @llvm.dbg.value(metadata i32 %2, metadata !10913, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !10916
  call void @llvm.dbg.value(metadata i32 %2, metadata !10914, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !10916
  call void @llvm.dbg.value(metadata i32 %2, metadata !10915, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !10916
  %13 = lshr i32 %2, 6, !dbg !10921
  %14 = and i32 %13, 1, !dbg !10921
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #24, !dbg !10922
  %15 = lshr i32 %2, 7, !dbg !10923
  %16 = and i32 %15, 3, !dbg !10923
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #24, !dbg !10924
  %17 = lshr i32 %2, 9, !dbg !10925
  %18 = and i32 %17, 3, !dbg !10925
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #24, !dbg !10926
  %19 = icmp eq i32 %12, 32, !dbg !10927
  br i1 %19, label %20, label %24, !dbg !10929

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !10930
  br i1 %21, label %22, label %23, !dbg !10933

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !10934
  br label %24, !dbg !10936

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !10937
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !10939
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #24, !dbg !10940
  ret void, !dbg !10941
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #4 !dbg !10942 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10944, metadata !DIExpression()), !dbg !10946
  %2 = shl nuw i32 1, %0, !dbg !10947
  call void @llvm.dbg.value(metadata i32 %2, metadata !10945, metadata !DIExpression()), !dbg !10946
  ret i32 %2, !dbg !10948
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !10949 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10953, metadata !DIExpression()), !dbg !10956
  call void @llvm.dbg.value(metadata i32 %1, metadata !10954, metadata !DIExpression()), !dbg !10956
  call void @llvm.dbg.value(metadata i32 %2, metadata !10955, metadata !DIExpression()), !dbg !10956
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !10957
  %5 = load volatile i32, i32* %4, align 4, !dbg !10957
  %6 = xor i32 %1, -1, !dbg !10957
  %7 = and i32 %5, %6, !dbg !10957
  %8 = mul i32 %2, %1, !dbg !10957
  %9 = or i32 %7, %8, !dbg !10957
  store volatile i32 %9, i32* %4, align 4, !dbg !10957
  ret void, !dbg !10958
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10959 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10961, metadata !DIExpression()), !dbg !10964
  call void @llvm.dbg.value(metadata i32 %1, metadata !10962, metadata !DIExpression()), !dbg !10964
  call void @llvm.dbg.value(metadata i32 %2, metadata !10963, metadata !DIExpression()), !dbg !10964
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !10965
  %5 = load volatile i32, i32* %4, align 4, !dbg !10965
  call void @llvm.dbg.value(metadata i32 %1, metadata !10768, metadata !DIExpression()) #23, !dbg !10966
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !10968, !srcloc !10775
  call void @llvm.dbg.value(metadata i32 %6, metadata !10771, metadata !DIExpression()) #23, !dbg !10966
  call void @llvm.dbg.value(metadata i32 %6, metadata !10776, metadata !DIExpression()) #23, !dbg !10969
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !10971, !range !8284
  %8 = shl nuw nsw i32 %7, 1, !dbg !10965
  %9 = shl i32 3, %8, !dbg !10965
  %10 = xor i32 %9, -1, !dbg !10965
  %11 = and i32 %5, %10, !dbg !10965
  call void @llvm.dbg.value(metadata i32 %1, metadata !10768, metadata !DIExpression()) #23, !dbg !10972
  call void @llvm.dbg.value(metadata i32 %6, metadata !10771, metadata !DIExpression()) #23, !dbg !10972
  call void @llvm.dbg.value(metadata i32 %6, metadata !10776, metadata !DIExpression()) #23, !dbg !10974
  %12 = shl i32 %2, %8, !dbg !10965
  %13 = or i32 %11, %12, !dbg !10965
  store volatile i32 %13, i32* %4, align 4, !dbg !10965
  ret void, !dbg !10976
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10977 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10979, metadata !DIExpression()), !dbg !10982
  call void @llvm.dbg.value(metadata i32 %1, metadata !10980, metadata !DIExpression()), !dbg !10982
  call void @llvm.dbg.value(metadata i32 %2, metadata !10981, metadata !DIExpression()), !dbg !10982
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !10983
  %5 = load volatile i32, i32* %4, align 4, !dbg !10983
  call void @llvm.dbg.value(metadata i32 %1, metadata !10768, metadata !DIExpression()) #23, !dbg !10984
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !10986, !srcloc !10775
  call void @llvm.dbg.value(metadata i32 %6, metadata !10771, metadata !DIExpression()) #23, !dbg !10984
  call void @llvm.dbg.value(metadata i32 %6, metadata !10776, metadata !DIExpression()) #23, !dbg !10987
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !10989, !range !8284
  %8 = shl nuw nsw i32 %7, 1, !dbg !10983
  %9 = shl i32 3, %8, !dbg !10983
  %10 = xor i32 %9, -1, !dbg !10983
  %11 = and i32 %5, %10, !dbg !10983
  call void @llvm.dbg.value(metadata i32 %1, metadata !10768, metadata !DIExpression()) #23, !dbg !10990
  call void @llvm.dbg.value(metadata i32 %6, metadata !10771, metadata !DIExpression()) #23, !dbg !10990
  call void @llvm.dbg.value(metadata i32 %6, metadata !10776, metadata !DIExpression()) #23, !dbg !10992
  %12 = shl i32 %2, %8, !dbg !10983
  %13 = or i32 %11, %12, !dbg !10983
  store volatile i32 %13, i32* %4, align 4, !dbg !10983
  ret void, !dbg !10994
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10995 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10997, metadata !DIExpression()), !dbg !11000
  call void @llvm.dbg.value(metadata i32 %1, metadata !10998, metadata !DIExpression()), !dbg !11000
  call void @llvm.dbg.value(metadata i32 %2, metadata !10999, metadata !DIExpression()), !dbg !11000
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !11001
  %5 = load volatile i32, i32* %4, align 4, !dbg !11001
  call void @llvm.dbg.value(metadata i32 %1, metadata !10768, metadata !DIExpression()) #23, !dbg !11002
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !11004, !srcloc !10775
  call void @llvm.dbg.value(metadata i32 %6, metadata !10771, metadata !DIExpression()) #23, !dbg !11002
  call void @llvm.dbg.value(metadata i32 %6, metadata !10776, metadata !DIExpression()) #23, !dbg !11005
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !11007, !range !8284
  %8 = shl nuw nsw i32 %7, 2, !dbg !11001
  %9 = shl i32 15, %8, !dbg !11001
  %10 = xor i32 %9, -1, !dbg !11001
  %11 = and i32 %5, %10, !dbg !11001
  call void @llvm.dbg.value(metadata i32 %1, metadata !10768, metadata !DIExpression()) #23, !dbg !11008
  call void @llvm.dbg.value(metadata i32 %6, metadata !10771, metadata !DIExpression()) #23, !dbg !11008
  call void @llvm.dbg.value(metadata i32 %6, metadata !10776, metadata !DIExpression()) #23, !dbg !11010
  %12 = shl i32 %2, %8, !dbg !11001
  %13 = or i32 %11, %12, !dbg !11001
  store volatile i32 %13, i32* %4, align 4, !dbg !11001
  ret void, !dbg !11012
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11013 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11015, metadata !DIExpression()), !dbg !11018
  call void @llvm.dbg.value(metadata i32 %1, metadata !11016, metadata !DIExpression()), !dbg !11018
  call void @llvm.dbg.value(metadata i32 %2, metadata !11017, metadata !DIExpression()), !dbg !11018
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !11019
  %5 = load volatile i32, i32* %4, align 4, !dbg !11019
  %6 = lshr i32 %1, 8, !dbg !11019
  call void @llvm.dbg.value(metadata i32 %6, metadata !10768, metadata !DIExpression()) #23, !dbg !11020
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !11022, !srcloc !10775
  call void @llvm.dbg.value(metadata i32 %7, metadata !10771, metadata !DIExpression()) #23, !dbg !11020
  call void @llvm.dbg.value(metadata i32 %7, metadata !10776, metadata !DIExpression()) #23, !dbg !11023
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !11025, !range !8284
  %9 = shl nuw nsw i32 %8, 2, !dbg !11019
  %10 = shl i32 15, %9, !dbg !11019
  %11 = xor i32 %10, -1, !dbg !11019
  %12 = and i32 %5, %11, !dbg !11019
  call void @llvm.dbg.value(metadata i32 %6, metadata !10768, metadata !DIExpression()) #23, !dbg !11026
  call void @llvm.dbg.value(metadata i32 %7, metadata !10771, metadata !DIExpression()) #23, !dbg !11026
  call void @llvm.dbg.value(metadata i32 %7, metadata !10776, metadata !DIExpression()) #23, !dbg !11028
  %13 = shl i32 %2, %9, !dbg !11019
  %14 = or i32 %12, %13, !dbg !11019
  store volatile i32 %14, i32* %4, align 4, !dbg !11019
  ret void, !dbg !11030
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11031 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11033, metadata !DIExpression()), !dbg !11036
  call void @llvm.dbg.value(metadata i32 %1, metadata !11034, metadata !DIExpression()), !dbg !11036
  call void @llvm.dbg.value(metadata i32 %2, metadata !11035, metadata !DIExpression()), !dbg !11036
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !11037
  %5 = load volatile i32, i32* %4, align 4, !dbg !11037
  call void @llvm.dbg.value(metadata i32 %1, metadata !10768, metadata !DIExpression()) #23, !dbg !11038
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !11040, !srcloc !10775
  call void @llvm.dbg.value(metadata i32 %6, metadata !10771, metadata !DIExpression()) #23, !dbg !11038
  call void @llvm.dbg.value(metadata i32 %6, metadata !10776, metadata !DIExpression()) #23, !dbg !11041
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !11043, !range !8284
  %8 = shl nuw nsw i32 %7, 1, !dbg !11037
  %9 = shl i32 3, %8, !dbg !11037
  %10 = xor i32 %9, -1, !dbg !11037
  %11 = and i32 %5, %10, !dbg !11037
  call void @llvm.dbg.value(metadata i32 %1, metadata !10768, metadata !DIExpression()) #23, !dbg !11044
  call void @llvm.dbg.value(metadata i32 %6, metadata !10771, metadata !DIExpression()) #23, !dbg !11044
  call void @llvm.dbg.value(metadata i32 %6, metadata !10776, metadata !DIExpression()) #23, !dbg !11046
  %12 = shl i32 %2, %8, !dbg !11037
  %13 = or i32 %11, %12, !dbg !11037
  store volatile i32 %13, i32* %4, align 4, !dbg !11037
  ret void, !dbg !11048
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !11049 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11051, metadata !DIExpression()), !dbg !11054
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11055
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !11055
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !11055
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !11052, metadata !DIExpression()), !dbg !11054
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !11056
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !11057
  %6 = tail call fastcc zeroext i1 @device_is_ready.130() #24, !dbg !11058
  br i1 %6, label %7, label %11, !dbg !11060

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #24, !dbg !11061
  call void @llvm.dbg.value(metadata i32 %8, metadata !11053, metadata !DIExpression()), !dbg !11054
  %9 = icmp slt i32 %8, 0, !dbg !11062
  %10 = select i1 %9, i32 %8, i32 0, !dbg !11064
  br label %11, !dbg !11064

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !11054
  ret i32 %12, !dbg !11065
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.130() unnamed_addr #1 !dbg !11066 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !11070, metadata !DIExpression()), !dbg !11071
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11072, !srcloc !11074
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.131() #24, !dbg !11075
  ret i1 %1, !dbg !11076
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* nocapture noundef readonly %0) unnamed_addr #1 !dbg !11077 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11081, metadata !DIExpression()), !dbg !11086
  call void @llvm.dbg.value(metadata i8 1, metadata !11082, metadata !DIExpression()), !dbg !11086
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* undef, metadata !11083, metadata !DIExpression()), !dbg !11086
  call void @llvm.dbg.value(metadata i32 0, metadata !11084, metadata !DIExpression()), !dbg !11086
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !11085, metadata !DIExpression()), !dbg !11086
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11087
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !11087
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !11087
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !11083, metadata !DIExpression()), !dbg !11086
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !11088
  %6 = bitcast %struct.vnd_sensor_config* %5 to i8*, !dbg !11091
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #24, !dbg !11092
  call void @llvm.dbg.value(metadata i32 %7, metadata !11084, metadata !DIExpression()), !dbg !11086
  call void @llvm.dbg.value(metadata i32 %7, metadata !11084, metadata !DIExpression()), !dbg !11086
  ret i32 %7, !dbg !11093
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.131() unnamed_addr #1 !dbg !11094 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !11096, metadata !DIExpression()), !dbg !11097
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_8) #25, !dbg !11098
  ret i1 %1, !dbg !11099
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !11100 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11104, metadata !DIExpression()), !dbg !11112
  call void @llvm.dbg.value(metadata i32 %1, metadata !11105, metadata !DIExpression()), !dbg !11112
  call void @llvm.dbg.value(metadata i32 %2, metadata !11106, metadata !DIExpression()), !dbg !11112
  call void @llvm.dbg.value(metadata i32 %3, metadata !11107, metadata !DIExpression()), !dbg !11112
  call void @llvm.dbg.value(metadata i32 0, metadata !11108, metadata !DIExpression()), !dbg !11112
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #24, !dbg !11113
  %5 = icmp eq i32 %3, 17, !dbg !11114
  br i1 %5, label %6, label %14, !dbg !11115

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !11116
  call void @llvm.dbg.value(metadata i32 %7, metadata !11109, metadata !DIExpression()), !dbg !11117
  %8 = icmp eq i32 %7, 0, !dbg !11118
  %9 = shl nuw i32 1, %1, !dbg !11120
  br i1 %8, label %12, label %10, !dbg !11121

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !11122
  br label %14, !dbg !11124

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !11125
  br label %14, !dbg !11128

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !11129
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #19 !dbg !11130 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11132, metadata !DIExpression()), !dbg !11136
  call void @llvm.dbg.value(metadata i8* %1, metadata !11133, metadata !DIExpression()), !dbg !11136
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11137
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11137
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11137
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11134, metadata !DIExpression()), !dbg !11136
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11138
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11138
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #24, !dbg !11140
  %9 = icmp eq i32 %8, 0, !dbg !11140
  br i1 %9, label %12, label %10, !dbg !11141

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11142
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #24, !dbg !11144
  br label %12, !dbg !11145

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11146
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #24, !dbg !11148
  %15 = icmp eq i32 %14, 0, !dbg !11148
  br i1 %15, label %19, label %16, !dbg !11149

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11150
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #24, !dbg !11151
  store i8 %18, i8* %1, align 1, !dbg !11152
  br label %19, !dbg !11153

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !11136
  ret i32 %20, !dbg !11154
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !11155 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11157, metadata !DIExpression()), !dbg !11161
  call void @llvm.dbg.value(metadata i8 %1, metadata !11158, metadata !DIExpression()), !dbg !11161
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11162
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11162
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11162
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11159, metadata !DIExpression()), !dbg !11161
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !11163

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11164
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #24, !dbg !11167
  %10 = icmp eq i32 %9, 0, !dbg !11167
  br i1 %10, label %18, label %11, !dbg !11168

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11169, !srcloc !11176
  call void @llvm.dbg.value(metadata i32 undef, metadata !11172, metadata !DIExpression()) #23, !dbg !11177
  call void @llvm.dbg.value(metadata i32 undef, metadata !11173, metadata !DIExpression()) #23, !dbg !11177
  call void @llvm.dbg.value(metadata i32 undef, metadata !11160, metadata !DIExpression()), !dbg !11161
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11178
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #24, !dbg !11180
  %15 = icmp eq i32 %14, 0, !dbg !11180
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !11169
  br i1 %15, label %17, label %19, !dbg !11181

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !11172, metadata !DIExpression()) #23, !dbg !11177
  call void @llvm.dbg.value(metadata i32 %16, metadata !11160, metadata !DIExpression()), !dbg !11161
  call void @llvm.dbg.value(metadata i32 undef, metadata !11182, metadata !DIExpression()) #23, !dbg !11185
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !11187, !srcloc !11188
  br label %18, !dbg !11189

18:                                               ; preds = %17, %7
  br label %7, !dbg !11164, !llvm.loop !11190

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !11169
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11192
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #24, !dbg !11193
  call void @llvm.dbg.value(metadata i32 %20, metadata !11182, metadata !DIExpression()) #23, !dbg !11194
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !11196, !srcloc !11188
  ret void, !dbg !11197
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #19 !dbg !11198 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11200, metadata !DIExpression()), !dbg !11203
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11204
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11204
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11204
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11201, metadata !DIExpression()), !dbg !11203
  call void @llvm.dbg.value(metadata i32 0, metadata !11202, metadata !DIExpression()), !dbg !11203
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11205
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11205
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #24, !dbg !11207
  %8 = icmp ne i32 %7, 0, !dbg !11207
  %9 = zext i1 %8 to i32, !dbg !11208
  call void @llvm.dbg.value(metadata i32 %9, metadata !11202, metadata !DIExpression()), !dbg !11203
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11209
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #24, !dbg !11211
  %12 = icmp eq i32 %11, 0, !dbg !11211
  %13 = or i32 %9, 2, !dbg !11212
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !11212
  call void @llvm.dbg.value(metadata i32 %14, metadata !11202, metadata !DIExpression()), !dbg !11203
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11213
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #24, !dbg !11215
  %17 = icmp eq i32 %16, 0, !dbg !11215
  %18 = or i32 %14, 4, !dbg !11216
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !11216
  call void @llvm.dbg.value(metadata i32 %19, metadata !11202, metadata !DIExpression()), !dbg !11203
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11217
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #24, !dbg !11219
  %22 = icmp eq i32 %21, 0, !dbg !11219
  %23 = or i32 %19, 8, !dbg !11220
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !11220
  call void @llvm.dbg.value(metadata i32 %24, metadata !11202, metadata !DIExpression()), !dbg !11203
  %25 = and i32 %24, 8, !dbg !11221
  %26 = icmp eq i32 %25, 0, !dbg !11221
  br i1 %26, label %29, label %27, !dbg !11223

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11224
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #24, !dbg !11226
  br label %29, !dbg !11227

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !11228
  %31 = icmp eq i32 %30, 0, !dbg !11228
  br i1 %31, label %34, label %32, !dbg !11230

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11231
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #24, !dbg !11233
  br label %34, !dbg !11234

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !11235
  %36 = icmp eq i32 %35, 0, !dbg !11235
  br i1 %36, label %39, label %37, !dbg !11237

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11238
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #24, !dbg !11240
  br label %39, !dbg !11241

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !11242
  %41 = icmp eq i32 %40, 0, !dbg !11242
  br i1 %41, label %44, label %42, !dbg !11244

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11245
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #24, !dbg !11247
  br label %44, !dbg !11248

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11249
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #24, !dbg !11250
  ret i32 %24, !dbg !11251
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !11252 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11254, metadata !DIExpression()), !dbg !11263
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !11255, metadata !DIExpression()), !dbg !11263
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11264
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11264
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11264
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11256, metadata !DIExpression()), !dbg !11263
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11265
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !11265
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !11265
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !11257, metadata !DIExpression()), !dbg !11263
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !11266
  %10 = load i8, i8* %9, align 4, !dbg !11266
  %11 = zext i8 %10 to i32, !dbg !11267
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #24, !dbg !11268
  call void @llvm.dbg.value(metadata i32 %12, metadata !11259, metadata !DIExpression()), !dbg !11263
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !11269
  %14 = load i8, i8* %13, align 1, !dbg !11269
  %15 = zext i8 %14 to i32, !dbg !11270
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #24, !dbg !11271
  call void @llvm.dbg.value(metadata i32 %16, metadata !11260, metadata !DIExpression()), !dbg !11263
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !11272
  %18 = load i8, i8* %17, align 2, !dbg !11272
  %19 = zext i8 %18 to i32, !dbg !11273
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #24, !dbg !11274
  call void @llvm.dbg.value(metadata i32 %20, metadata !11261, metadata !DIExpression()), !dbg !11263
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !11275
  %22 = load i8, i8* %21, align 1, !dbg !11275
  %23 = zext i8 %22 to i32, !dbg !11276
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #24, !dbg !11277
  call void @llvm.dbg.value(metadata i32 %24, metadata !11262, metadata !DIExpression()), !dbg !11263
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !11278

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !11280
  br i1 %26, label %69, label %27, !dbg !11282

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !11283

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !11284
  br i1 %29, label %65, label %30, !dbg !11284

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !11286
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !11263
  br i1 %31, label %38, label %34, !dbg !11288

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !11289
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
    i32 1073761280, label %36
    i32 1073762304, label %36
    i32 1073812480, label %36
  ], !dbg !11289

36:                                               ; preds = %34, %34, %34, %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !11292
  br i1 %37, label %38, label %69, !dbg !11293

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11294
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #24, !dbg !11295
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #24, !dbg !11296
  %41 = icmp eq i32 %12, %40, !dbg !11298
  br i1 %41, label %43, label %42, !dbg !11299

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #24, !dbg !11300
  br label %43, !dbg !11302

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #24, !dbg !11303
  %45 = icmp eq i32 %16, %44, !dbg !11305
  br i1 %45, label %47, label %46, !dbg !11306

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #24, !dbg !11307
  br label %47, !dbg !11309

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #24, !dbg !11310
  %49 = icmp eq i32 %20, %48, !dbg !11312
  br i1 %49, label %51, label %50, !dbg !11313

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #24, !dbg !11314
  br label %51, !dbg !11316

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #24, !dbg !11317
  %53 = icmp eq i32 %24, %52, !dbg !11319
  br i1 %53, label %55, label %54, !dbg !11320

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #24, !dbg !11321
  br label %55, !dbg !11323

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !11324
  %57 = load i32, i32* %56, align 4, !dbg !11324
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !11326
  %59 = load i32, i32* %58, align 4, !dbg !11326
  %60 = icmp eq i32 %57, %59, !dbg !11327
  br i1 %60, label %63, label %61, !dbg !11328

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #24, !dbg !11329
  %62 = load i32, i32* %56, align 4, !dbg !11331
  store i32 %62, i32* %58, align 4, !dbg !11332
  br label %63, !dbg !11333

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !11334
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #24, !dbg !11335
  br label %69, !dbg !11336

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !11284
  %67 = and i8 %66, 1, !dbg !11284
  %68 = icmp eq i8 %67, 0, !dbg !11284
  br i1 %68, label %30, label %69, !dbg !11284

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !11263
  ret i32 %70, !dbg !11337
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #20 !dbg !11338 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11340, metadata !DIExpression()), !dbg !11343
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !11341, metadata !DIExpression()), !dbg !11343
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11344
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !11344
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !11344
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !11342, metadata !DIExpression()), !dbg !11343
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !11345
  %7 = load i32, i32* %6, align 4, !dbg !11345
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !11346
  store i32 %7, i32* %8, align 4, !dbg !11347
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !11348, !range !11349
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #24, !dbg !11350
  %11 = trunc i32 %10 to i8, !dbg !11350
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !11351
  store i8 %11, i8* %12, align 4, !dbg !11352
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #24, !dbg !11353, !range !11354
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #24, !dbg !11355
  %15 = trunc i32 %14 to i8, !dbg !11355
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !11356
  store i8 %15, i8* %16, align 1, !dbg !11357
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #24, !dbg !11358
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !11359, !range !11349
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #24, !dbg !11360
  %20 = trunc i32 %19 to i8, !dbg !11360
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !11361
  store i8 %20, i8* %21, align 2, !dbg !11362
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #24, !dbg !11363, !range !11364
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #24, !dbg !11365
  %24 = trunc i32 %23 to i8, !dbg !11365
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !11366
  store i8 %24, i8* %25, align 1, !dbg !11367
  ret i32 0, !dbg !11368
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #5 !dbg !11369 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11373, metadata !DIExpression()), !dbg !11375
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11376
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11376
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11376
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11374, metadata !DIExpression()), !dbg !11375
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11377
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11377
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #24, !dbg !11378
  ret i32 %7, !dbg !11379
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #4 !dbg !11380 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11384, metadata !DIExpression()), !dbg !11385
  %2 = icmp eq i32 %0, 1024, !dbg !11386
  %3 = select i1 %2, i32 2, i32 0, !dbg !11386
  %4 = icmp eq i32 %0, 1536, !dbg !11386
  %5 = select i1 %4, i32 1, i32 %3, !dbg !11386
  ret i32 %5, !dbg !11387
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #5 !dbg !11388 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11390, metadata !DIExpression()), !dbg !11392
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11393
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11393
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11393
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11391, metadata !DIExpression()), !dbg !11392
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11394
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11394
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #24, !dbg !11395
  ret i32 %7, !dbg !11396
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #12 !dbg !11397 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11401, metadata !DIExpression()), !dbg !11402
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !11403
  %3 = icmp ult i32 %2, 4, !dbg !11403
  br i1 %3, label %4, label %7, !dbg !11403

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !11403
  %6 = load i32, i32* %5, align 4, !dbg !11403
  br label %7, !dbg !11403

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !11404
  ret i32 %8, !dbg !11406
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #5 !dbg !11407 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11409, metadata !DIExpression()), !dbg !11411
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11412
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11412
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11412
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11410, metadata !DIExpression()), !dbg !11411
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11413
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11413
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #24, !dbg !11414
  ret i32 %7, !dbg !11415
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !11416 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11420, metadata !DIExpression()), !dbg !11422
  call void @llvm.dbg.value(metadata i32 %1, metadata !11421, metadata !DIExpression()), !dbg !11422
  %3 = icmp eq i32 %0, 4096, !dbg !11423
  %4 = icmp eq i32 %1, 0, !dbg !11423
  %5 = select i1 %4, i32 4, i32 3, !dbg !11423
  %6 = select i1 %4, i32 3, i32 2, !dbg !11423
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !11423
  ret i32 %7, !dbg !11424
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #5 !dbg !11425 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11427, metadata !DIExpression()), !dbg !11429
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11430
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11430
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11430
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11428, metadata !DIExpression()), !dbg !11429
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11431
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11431
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #24, !dbg !11432
  ret i32 %7, !dbg !11433
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #4 !dbg !11434 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11438, metadata !DIExpression()), !dbg !11439
  %2 = icmp eq i32 %0, 768, !dbg !11440
  %3 = zext i1 %2 to i32, !dbg !11439
  ret i32 %3, !dbg !11442
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !11443 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11448, metadata !DIExpression()), !dbg !11449
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11450
  %3 = load volatile i32, i32* %2, align 4, !dbg !11450
  %4 = and i32 %3, 768, !dbg !11450
  ret i32 %4, !dbg !11451
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !11452 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11454, metadata !DIExpression()), !dbg !11455
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11456
  %3 = load volatile i32, i32* %2, align 4, !dbg !11456
  %4 = and i32 %3, 4096, !dbg !11456
  ret i32 %4, !dbg !11457
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !11458 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11460, metadata !DIExpression()), !dbg !11461
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11462
  %3 = load volatile i32, i32* %2, align 4, !dbg !11462
  %4 = and i32 %3, 12288, !dbg !11462
  ret i32 %4, !dbg !11463
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !11464 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11466, metadata !DIExpression()), !dbg !11467
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11468
  %3 = load volatile i32, i32* %2, align 4, !dbg !11468
  %4 = and i32 %3, 1536, !dbg !11468
  ret i32 %4, !dbg !11469
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #4 !dbg !11470 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11474, metadata !DIExpression()), !dbg !11475
  %2 = icmp eq i32 %0, 2, !dbg !11476
  %3 = select i1 %2, i32 1024, i32 0, !dbg !11476
  %4 = icmp eq i32 %0, 1, !dbg !11476
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !11476
  ret i32 %5, !dbg !11477
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #4 !dbg !11478 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11482, metadata !DIExpression()), !dbg !11483
  %2 = icmp ult i32 %0, 3, !dbg !11484
  br i1 %2, label %3, label %6, !dbg !11484

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !11484
  %5 = load i32, i32* %4, align 4, !dbg !11484
  br label %6, !dbg !11484

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !11485
  ret i32 %7, !dbg !11487
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !11488 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11492, metadata !DIExpression()), !dbg !11494
  call void @llvm.dbg.value(metadata i32 %1, metadata !11493, metadata !DIExpression()), !dbg !11494
  %3 = icmp eq i32 %0, 4, !dbg !11495
  %4 = icmp eq i32 %1, 0, !dbg !11495
  %5 = select i1 %4, i32 0, i32 4096, !dbg !11495
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !11495
  ret i32 %6, !dbg !11496
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #4 !dbg !11497 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11501, metadata !DIExpression()), !dbg !11502
  %2 = icmp eq i32 %0, 1, !dbg !11503
  %3 = select i1 %2, i32 768, i32 0, !dbg !11502
  ret i32 %3, !dbg !11505
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11506 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11510, metadata !DIExpression()), !dbg !11511
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11512
  %3 = load volatile i32, i32* %2, align 4, !dbg !11512
  %4 = and i32 %3, -8193, !dbg !11512
  store volatile i32 %4, i32* %2, align 4, !dbg !11512
  ret void, !dbg !11513
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !11514 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11518, metadata !DIExpression()), !dbg !11521
  call void @llvm.dbg.value(metadata i32 %1, metadata !11519, metadata !DIExpression()), !dbg !11521
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11522
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11522
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11522
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11520, metadata !DIExpression()), !dbg !11521
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11523
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11523
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !11524
  ret void, !dbg !11525
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !11526 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11528, metadata !DIExpression()), !dbg !11531
  call void @llvm.dbg.value(metadata i32 %1, metadata !11529, metadata !DIExpression()), !dbg !11531
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11532
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11532
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11532
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11530, metadata !DIExpression()), !dbg !11531
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11533
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11533
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !11534
  ret void, !dbg !11535
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !11536 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11538, metadata !DIExpression()), !dbg !11541
  call void @llvm.dbg.value(metadata i32 %1, metadata !11539, metadata !DIExpression()), !dbg !11541
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11542
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11542
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11542
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11540, metadata !DIExpression()), !dbg !11541
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11543
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11543
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !11544
  ret void, !dbg !11545
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !11546 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11548, metadata !DIExpression()), !dbg !11551
  call void @llvm.dbg.value(metadata i32 %1, metadata !11549, metadata !DIExpression()), !dbg !11551
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11552
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11552
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11552
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11550, metadata !DIExpression()), !dbg !11551
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11553
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11553
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !11554
  ret void, !dbg !11555
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !11556 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11558, metadata !DIExpression()), !dbg !11563
  call void @llvm.dbg.value(metadata i32 %1, metadata !11559, metadata !DIExpression()), !dbg !11563
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11564
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !11564
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !11564
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !11560, metadata !DIExpression()), !dbg !11563
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11565
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !11565
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !11565
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !11561, metadata !DIExpression()), !dbg !11563
  %10 = bitcast i32* %3 to i8*, !dbg !11566
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #23, !dbg !11566
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !11567
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !11567
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !11571
  %14 = bitcast %struct.vnd_sensor_config** %13 to i8**, !dbg !11571
  %15 = load i8*, i8** %14, align 4, !dbg !11571
  call void @llvm.dbg.value(metadata i32* %3, metadata !11562, metadata !DIExpression(DW_OP_deref)), !dbg !11563
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #24, !dbg !11572
  %17 = icmp slt i32 %16, 0, !dbg !11573
  br i1 %17, label %18, label %21, !dbg !11574

18:                                               ; preds = %2
  %19 = call fastcc zeroext i8 @z_log_minimal_level_to_char.134(i32 noundef 1) #24, !dbg !11575
  %20 = zext i8 %19 to i32, !dbg !11575
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.5.135, i32 0, i32 0), i32 noundef %20) #25, !dbg !11575
  br label %26, !dbg !11581

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !11582
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11582
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %23) #24, !dbg !11583
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11584
  %25 = load i32, i32* %3, align 4, !dbg !11585
  call void @llvm.dbg.value(metadata i32 %25, metadata !11562, metadata !DIExpression()), !dbg !11563
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %24, i32 noundef %25, i32 noundef %1) #24, !dbg !11586
  br label %26, !dbg !11587

26:                                               ; preds = %21, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #23, !dbg !11587
  ret void, !dbg !11587
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11588 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11590, metadata !DIExpression()), !dbg !11591
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11592
  %3 = load volatile i32, i32* %2, align 4, !dbg !11592
  %4 = or i32 %3, 8192, !dbg !11592
  store volatile i32 %4, i32* %2, align 4, !dbg !11592
  ret void, !dbg !11593
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !11594 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11596, metadata !DIExpression()), !dbg !11600
  call void @llvm.dbg.value(metadata i8* %1, metadata !11597, metadata !DIExpression()), !dbg !11600
  call void @llvm.dbg.value(metadata i32* %2, metadata !11598, metadata !DIExpression()), !dbg !11600
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11601
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !11601
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !11601
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !11599, metadata !DIExpression()), !dbg !11600
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !11602
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !11602
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !11604
  br i1 %9, label %12, label %10, !dbg !11605

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #25, !dbg !11606
  br label %12, !dbg !11607

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !11600
  ret i32 %13, !dbg !11608
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.134(i32 noundef %0) unnamed_addr #4 !dbg !11609 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11611, metadata !DIExpression()), !dbg !11612
  %2 = icmp eq i32 %0, 2, !dbg !11613
  %3 = select i1 %2, i8 87, i8 63, !dbg !11613
  %4 = icmp eq i32 %0, 1, !dbg !11613
  %5 = select i1 %4, i8 69, i8 %3, !dbg !11613
  ret i8 %5, !dbg !11614
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11615 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11619, metadata !DIExpression()), !dbg !11621
  call void @llvm.dbg.value(metadata i32 0, metadata !11620, metadata !DIExpression()), !dbg !11621
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11622
  %3 = load volatile i32, i32* %2, align 4, !dbg !11622
  %4 = and i32 %3, -32769, !dbg !11622
  store volatile i32 %4, i32* %2, align 4, !dbg !11622
  ret void, !dbg !11623
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !11624 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11628, metadata !DIExpression()), !dbg !11632
  call void @llvm.dbg.value(metadata i32 %1, metadata !11629, metadata !DIExpression()), !dbg !11632
  call void @llvm.dbg.value(metadata i32 0, metadata !11630, metadata !DIExpression()), !dbg !11632
  call void @llvm.dbg.value(metadata i32 %2, metadata !11631, metadata !DIExpression()), !dbg !11632
  %4 = zext i32 %1 to i64, !dbg !11633
  %5 = mul nuw nsw i64 %4, 25, !dbg !11633
  %6 = zext i32 %2 to i64, !dbg !11633
  %7 = shl nuw nsw i64 %6, 2, !dbg !11633
  %8 = udiv i64 %5, %7, !dbg !11633
  %9 = trunc i64 %8 to i32, !dbg !11633
  %10 = udiv i32 %9, 100, !dbg !11633
  %11 = shl nuw nsw i32 %10, 4, !dbg !11633
  %12 = mul i32 %10, -100, !dbg !11633
  %13 = add i32 %12, %9, !dbg !11633
  %14 = shl i32 %13, 4, !dbg !11633
  %15 = add i32 %14, 50, !dbg !11633
  %16 = udiv i32 %15, 100, !dbg !11633
  %17 = and i32 %16, 240, !dbg !11633
  %18 = add nuw nsw i32 %17, %11, !dbg !11633
  %19 = and i32 %16, 15, !dbg !11633
  %20 = and i32 %18, 65520, !dbg !11636
  %21 = or i32 %20, %19, !dbg !11636
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !11637
  store volatile i32 %21, i32* %22, align 4, !dbg !11638
  ret void, !dbg !11639
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !11640 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11642, metadata !DIExpression()), !dbg !11644
  call void @llvm.dbg.value(metadata i32 %1, metadata !11643, metadata !DIExpression()), !dbg !11644
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11645
  %4 = load volatile i32, i32* %3, align 4, !dbg !11645
  %5 = and i32 %4, -769, !dbg !11645
  %6 = or i32 %5, %1, !dbg !11645
  store volatile i32 %6, i32* %3, align 4, !dbg !11645
  ret void, !dbg !11646
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !11647 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11649, metadata !DIExpression()), !dbg !11651
  call void @llvm.dbg.value(metadata i32 %1, metadata !11650, metadata !DIExpression()), !dbg !11651
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11652
  %4 = load volatile i32, i32* %3, align 4, !dbg !11652
  %5 = and i32 %4, -4097, !dbg !11652
  %6 = or i32 %5, %1, !dbg !11652
  store volatile i32 %6, i32* %3, align 4, !dbg !11652
  ret void, !dbg !11653
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !11654 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11656, metadata !DIExpression()), !dbg !11658
  call void @llvm.dbg.value(metadata i32 %1, metadata !11657, metadata !DIExpression()), !dbg !11658
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11659
  %4 = load volatile i32, i32* %3, align 4, !dbg !11659
  %5 = and i32 %4, -12289, !dbg !11659
  %6 = or i32 %5, %1, !dbg !11659
  store volatile i32 %6, i32* %3, align 4, !dbg !11659
  ret void, !dbg !11660
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !11661 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11663, metadata !DIExpression()), !dbg !11665
  call void @llvm.dbg.value(metadata i32 %1, metadata !11664, metadata !DIExpression()), !dbg !11665
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11666
  %4 = load volatile i32, i32* %3, align 4, !dbg !11666
  %5 = and i32 %4, -1537, !dbg !11666
  %6 = or i32 %5, %1, !dbg !11666
  store volatile i32 %6, i32* %3, align 4, !dbg !11666
  ret void, !dbg !11667
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !11668 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11670, metadata !DIExpression()), !dbg !11671
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11672
  %3 = load volatile i32, i32* %2, align 4, !dbg !11672
  %4 = lshr i32 %3, 3, !dbg !11673
  %5 = and i32 %4, 1, !dbg !11673
  ret i32 %5, !dbg !11674
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !11675 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11677, metadata !DIExpression()), !dbg !11678
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11679
  %3 = load volatile i32, i32* %2, align 4, !dbg !11679
  %4 = and i32 %3, 1, !dbg !11679
  ret i32 %4, !dbg !11680
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !11681 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11683, metadata !DIExpression()), !dbg !11684
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11685
  %3 = load volatile i32, i32* %2, align 4, !dbg !11685
  %4 = lshr i32 %3, 1, !dbg !11686
  %5 = and i32 %4, 1, !dbg !11686
  ret i32 %5, !dbg !11687
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !11688 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11690, metadata !DIExpression()), !dbg !11691
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11692
  %3 = load volatile i32, i32* %2, align 4, !dbg !11692
  %4 = lshr i32 %3, 8, !dbg !11693
  %5 = and i32 %4, 1, !dbg !11693
  ret i32 %5, !dbg !11694
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11695 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11697, metadata !DIExpression()), !dbg !11698
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11699
  store volatile i32 -257, i32* %2, align 4, !dbg !11699
  ret void, !dbg !11700
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !11701 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11703, metadata !DIExpression()), !dbg !11705
  %3 = bitcast i32* %2 to i8*, !dbg !11706
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11706
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11704, metadata !DIExpression()), !dbg !11707
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11708
  %5 = load volatile i32, i32* %4, align 4, !dbg !11708
  store volatile i32 %5, i32* %2, align 4, !dbg !11709
  %6 = load volatile i32, i32* %2, align 4, !dbg !11710
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11711
  %8 = load volatile i32, i32* %7, align 4, !dbg !11711
  store volatile i32 %8, i32* %2, align 4, !dbg !11712
  %9 = load volatile i32, i32* %2, align 4, !dbg !11713
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11714
  ret void, !dbg !11714
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !11715 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11717, metadata !DIExpression()), !dbg !11719
  %3 = bitcast i32* %2 to i8*, !dbg !11720
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11720
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11718, metadata !DIExpression()), !dbg !11721
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11722
  %5 = load volatile i32, i32* %4, align 4, !dbg !11722
  store volatile i32 %5, i32* %2, align 4, !dbg !11723
  %6 = load volatile i32, i32* %2, align 4, !dbg !11724
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11725
  %8 = load volatile i32, i32* %7, align 4, !dbg !11725
  store volatile i32 %8, i32* %2, align 4, !dbg !11726
  %9 = load volatile i32, i32* %2, align 4, !dbg !11727
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11728
  ret void, !dbg !11728
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !11729 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11731, metadata !DIExpression()), !dbg !11733
  %3 = bitcast i32* %2 to i8*, !dbg !11734
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11734
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11732, metadata !DIExpression()), !dbg !11735
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11736
  %5 = load volatile i32, i32* %4, align 4, !dbg !11736
  store volatile i32 %5, i32* %2, align 4, !dbg !11737
  %6 = load volatile i32, i32* %2, align 4, !dbg !11738
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11739
  %8 = load volatile i32, i32* %7, align 4, !dbg !11739
  store volatile i32 %8, i32* %2, align 4, !dbg !11740
  %9 = load volatile i32, i32* %2, align 4, !dbg !11741
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11742
  ret void, !dbg !11742
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !11743 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11745, metadata !DIExpression()), !dbg !11747
  %3 = bitcast i32* %2 to i8*, !dbg !11748
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11748
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11746, metadata !DIExpression()), !dbg !11749
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11750
  %5 = load volatile i32, i32* %4, align 4, !dbg !11750
  store volatile i32 %5, i32* %2, align 4, !dbg !11751
  %6 = load volatile i32, i32* %2, align 4, !dbg !11752
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11753
  %8 = load volatile i32, i32* %7, align 4, !dbg !11753
  store volatile i32 %8, i32* %2, align 4, !dbg !11754
  %9 = load volatile i32, i32* %2, align 4, !dbg !11755
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11756
  ret void, !dbg !11756
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !11757 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11759, metadata !DIExpression()), !dbg !11760
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11761
  %3 = load volatile i32, i32* %2, align 4, !dbg !11761
  %4 = lshr i32 %3, 7, !dbg !11762
  %5 = and i32 %4, 1, !dbg !11762
  ret i32 %5, !dbg !11763
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !11764 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11768, metadata !DIExpression()), !dbg !11770
  call void @llvm.dbg.value(metadata i8 %1, metadata !11769, metadata !DIExpression()), !dbg !11770
  %3 = zext i8 %1 to i32, !dbg !11771
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11772
  store volatile i32 %3, i32* %4, align 4, !dbg !11773
  ret void, !dbg !11774
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !11775 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11777, metadata !DIExpression()), !dbg !11778
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11779
  %3 = load volatile i32, i32* %2, align 4, !dbg !11779
  %4 = lshr i32 %3, 5, !dbg !11780
  %5 = and i32 %4, 1, !dbg !11780
  ret i32 %5, !dbg !11781
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !11782 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11786, metadata !DIExpression()), !dbg !11787
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11788
  %3 = load volatile i32, i32* %2, align 4, !dbg !11788
  %4 = trunc i32 %3 to i8, !dbg !11789
  ret i8 %4, !dbg !11790
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !11791 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11793, metadata !DIExpression()), !dbg !11799
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11800
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11800
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11800
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11794, metadata !DIExpression()), !dbg !11799
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11801
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !11801
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !11801
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !11795, metadata !DIExpression()), !dbg !11799
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #24, !dbg !11802
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !11803
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !11803
  %10 = tail call fastcc zeroext i1 @device_is_ready.142(%struct.device* noundef %9) #24, !dbg !11805
  br i1 %10, label %14, label %11, !dbg !11806

11:                                               ; preds = %1
  %12 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.134(i32 noundef 1) #24, !dbg !11807
  %13 = zext i8 %12 to i32, !dbg !11807
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.6.143, i32 0, i32 0), i32 noundef %13) #25, !dbg !11807
  br label %62, !dbg !11813

14:                                               ; preds = %1
  %15 = load %struct.device*, %struct.device** %8, align 4, !dbg !11814
  %16 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !11815
  %17 = bitcast %struct.vnd_sensor_config** %16 to i8**, !dbg !11815
  %18 = load i8*, i8** %17, align 4, !dbg !11815
  %19 = tail call fastcc i32 @clock_control_on.144(%struct.device* noundef %15, i8* noundef %18) #24, !dbg !11816
  call void @llvm.dbg.value(metadata i32 %19, metadata !11798, metadata !DIExpression()), !dbg !11799
  %20 = icmp eq i32 %19, 0, !dbg !11817
  br i1 %20, label %24, label %21, !dbg !11819

21:                                               ; preds = %14
  %22 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.134(i32 noundef 1) #24, !dbg !11820
  %23 = zext i8 %22 to i32, !dbg !11820
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.7.145, i32 0, i32 0), i32 noundef %23) #25, !dbg !11820
  br label %62, !dbg !11826

24:                                               ; preds = %14
  %25 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !11827
  %26 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %25, align 4, !dbg !11827
  %27 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %26) #24, !dbg !11828
  call void @llvm.dbg.value(metadata i32 %27, metadata !11798, metadata !DIExpression()), !dbg !11799
  %28 = icmp slt i32 %27, 0, !dbg !11829
  br i1 %28, label %62, label %29, !dbg !11831

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11832
  %31 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11832
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %31) #24, !dbg !11833
  %32 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11834
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %32) #24, !dbg !11835
  %33 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !11836
  %34 = load i32, i32* %33, align 4, !dbg !11836
  %35 = icmp ult i32 %34, 3, !dbg !11838
  br i1 %35, label %39, label %36, !dbg !11838

36:                                               ; preds = %29
  %37 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.134(i32 noundef 2) #24, !dbg !11839
  %38 = zext i8 %37 to i32, !dbg !11839
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.8.146, i32 0, i32 0), i32 noundef %38, i32 noundef %34) #25, !dbg !11839
  call void @llvm.dbg.value(metadata i32 0, metadata !11796, metadata !DIExpression()), !dbg !11799
  call void @llvm.dbg.value(metadata i32 0, metadata !11797, metadata !DIExpression()), !dbg !11799
  br label %44

39:                                               ; preds = %29
  %40 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init, i32 0, i32 %34, !dbg !11838
  %41 = load i32, i32* %40, align 4, !dbg !11838
  %42 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init.9, i32 0, i32 %34, !dbg !11838
  %43 = load i32, i32* %42, align 4, !dbg !11838
  br label %44, !dbg !11838

44:                                               ; preds = %39, %36
  %45 = phi i32 [ 0, %36 ], [ %41, %39 ], !dbg !11848
  %46 = phi i32 [ 0, %36 ], [ %43, %39 ], !dbg !11848
  call void @llvm.dbg.value(metadata i32 %46, metadata !11797, metadata !DIExpression()), !dbg !11799
  call void @llvm.dbg.value(metadata i32 %45, metadata !11796, metadata !DIExpression()), !dbg !11799
  %47 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11849
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %47, i32 noundef %46, i32 noundef %45) #24, !dbg !11850
  %48 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !11851
  %49 = load i8, i8* %48, align 4, !dbg !11851, !range !7473
  %50 = icmp eq i8 %49, 0, !dbg !11851
  br i1 %50, label %52, label %51, !dbg !11853

51:                                               ; preds = %44
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #24, !dbg !11854
  br label %52, !dbg !11856

52:                                               ; preds = %51, %44
  %53 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !11857
  %54 = load i32, i32* %53, align 4, !dbg !11857
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %54) #24, !dbg !11858
  %55 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !11859
  %56 = load i8, i8* %55, align 4, !dbg !11859, !range !7473
  %57 = icmp eq i8 %56, 0, !dbg !11859
  br i1 %57, label %60, label %58, !dbg !11861

58:                                               ; preds = %52
  %59 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11862
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %59) #24, !dbg !11864
  br label %60, !dbg !11865

60:                                               ; preds = %58, %52
  %61 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11866
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %61) #24, !dbg !11867
  br label %62, !dbg !11868

62:                                               ; preds = %24, %60, %21, %11
  %63 = phi i32 [ %19, %21 ], [ 0, %60 ], [ -19, %11 ], [ %27, %24 ], !dbg !11799
  ret i32 %63, !dbg !11869
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #11 !dbg !11870 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11874, metadata !DIExpression()), !dbg !11878
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11879
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !11879
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !11879
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !11875, metadata !DIExpression()), !dbg !11878
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !11876, metadata !DIExpression()), !dbg !11878
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !11880
  store %struct.device* @__device_dts_ord_8, %struct.device** %5, align 4, !dbg !11881
  ret void, !dbg !11882
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.142(%struct.device* noundef %0) unnamed_addr #1 !dbg !11883 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11887, metadata !DIExpression()), !dbg !11888
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11889, !srcloc !11891
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.147(%struct.device* noundef %0) #24, !dbg !11892
  ret i1 %2, !dbg !11893
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.144(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !11894 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11896, metadata !DIExpression()), !dbg !11899
  call void @llvm.dbg.value(metadata i8* %1, metadata !11897, metadata !DIExpression()), !dbg !11899
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11900
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !11900
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !11900
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !11898, metadata !DIExpression()), !dbg !11899
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !11901
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !11901
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #25, !dbg !11902
  ret i32 %8, !dbg !11903
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !11904 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !11908, metadata !DIExpression()), !dbg !11912
  call void @llvm.dbg.value(metadata i8 0, metadata !11909, metadata !DIExpression()), !dbg !11912
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !11913
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !11913
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !11911, metadata !DIExpression(DW_OP_deref)), !dbg !11912
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #25, !dbg !11914
  call void @llvm.dbg.value(metadata i32 %4, metadata !11910, metadata !DIExpression()), !dbg !11912
  %5 = icmp slt i32 %4, 0, !dbg !11915
  br i1 %5, label %9, label %6, !dbg !11917

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !11918
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !11911, metadata !DIExpression()), !dbg !11912
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #24, !dbg !11919
  br label %9, !dbg !11920

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !11912
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !11921
  ret i32 %10, !dbg !11921
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11922 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11924, metadata !DIExpression()), !dbg !11928
  call void @llvm.dbg.value(metadata i32 12, metadata !11925, metadata !DIExpression()), !dbg !11928
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !11929

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !11930, metadata !DIExpression()) #23, !dbg !11936
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #23, !dbg !11939, !srcloc !11940
  call void @llvm.dbg.value(metadata i32 %4, metadata !11935, metadata !DIExpression()) #23, !dbg !11936
  %5 = or i32 %4, 12, !dbg !11941
  call void @llvm.dbg.value(metadata i32 %5, metadata !11926, metadata !DIExpression()), !dbg !11942
  call void @llvm.dbg.value(metadata i32 %5, metadata !11943, metadata !DIExpression()) #23, !dbg !11950
  call void @llvm.dbg.value(metadata i32* %2, metadata !11948, metadata !DIExpression()) #23, !dbg !11950
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #23, !dbg !11952, !srcloc !11953
  call void @llvm.dbg.value(metadata i32 %6, metadata !11949, metadata !DIExpression()) #23, !dbg !11950
  %7 = icmp eq i32 %6, 0, !dbg !11929
  br i1 %7, label %8, label %3, !dbg !11941, !llvm.loop !11954

8:                                                ; preds = %3
  ret void, !dbg !11955
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !11956 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11958, metadata !DIExpression()), !dbg !11962
  call void @llvm.dbg.value(metadata i32 %1, metadata !11959, metadata !DIExpression()), !dbg !11962
  call void @llvm.dbg.value(metadata i32 %2, metadata !11960, metadata !DIExpression()), !dbg !11962
  call void @llvm.dbg.value(metadata i32 0, metadata !11961, metadata !DIExpression()), !dbg !11962
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11963
  %5 = load volatile i32, i32* %4, align 4, !dbg !11963
  %6 = and i32 %5, -5633, !dbg !11963
  %7 = or i32 %2, %1, !dbg !11963
  %8 = or i32 %7, %6, !dbg !11963
  store volatile i32 %8, i32* %4, align 4, !dbg !11963
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11964
  %10 = load volatile i32, i32* %9, align 4, !dbg !11964
  %11 = and i32 %10, -12289, !dbg !11964
  store volatile i32 %11, i32* %9, align 4, !dbg !11964
  ret void, !dbg !11965
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11966 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11968, metadata !DIExpression()), !dbg !11969
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11970
  %3 = load volatile i32, i32* %2, align 4, !dbg !11970
  %4 = or i32 %3, 8, !dbg !11970
  store volatile i32 %4, i32* %2, align 4, !dbg !11970
  ret void, !dbg !11971
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !11972 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !11976, metadata !DIExpression()), !dbg !11979
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !11977, metadata !DIExpression()), !dbg !11979
  call void @llvm.dbg.value(metadata i32 0, metadata !11978, metadata !DIExpression()), !dbg !11979
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !11980
  %3 = load %struct.vnd_sensor_config*, %struct.vnd_sensor_config** %2, align 4, !dbg !11980
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !11981
  %5 = load i8, i8* %4, align 4, !dbg !11981
  %6 = tail call i32 @pinctrl_configure_pins(%struct.vnd_sensor_config* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #25, !dbg !11982
  ret i32 %6, !dbg !11983
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.147(%struct.device* noundef %0) unnamed_addr #1 !dbg !11984 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11986, metadata !DIExpression()), !dbg !11987
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !11988
  ret i1 %2, !dbg !11989
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #15 !dbg !11990 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11992, metadata !DIExpression()), !dbg !11993
  tail call fastcc void @__NVIC_SetPriority.149() #24, !dbg !11994
  store i32 8399, i32* @last_load, align 4, !dbg !11995
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11996
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11997
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11998
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11999
  %3 = or i32 %2, 7, !dbg !11999
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11999
  ret i32 0, !dbg !12000
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.149() unnamed_addr #15 !dbg !12001 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !12003, metadata !DIExpression()), !dbg !12005
  call void @llvm.dbg.value(metadata i32 1, metadata !12004, metadata !DIExpression()), !dbg !12005
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !12006
  ret void, !dbg !12009
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !12010 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12012, metadata !DIExpression()), !dbg !12014
  %2 = tail call fastcc i32 @elapsed() #24, !dbg !12015
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !12016
  %4 = load i32, i32* @cycle_count, align 4, !dbg !12017
  %5 = add i32 %4, %3, !dbg !12017
  store i32 %5, i32* @cycle_count, align 4, !dbg !12017
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !12018
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !12019
  %7 = sub i32 %5, %6, !dbg !12022
  %8 = udiv i32 %7, 8400, !dbg !12023
  call void @llvm.dbg.value(metadata i32 %8, metadata !12013, metadata !DIExpression()), !dbg !12014
  %9 = mul nuw i32 %8, 8400, !dbg !12024
  %10 = add i32 %9, %6, !dbg !12025
  store i32 %10, i32* @announced_cycles, align 4, !dbg !12025
  tail call void @sys_clock_announce(i32 noundef %8) #25, !dbg !12026
  tail call void @z_arm_int_exit() #25, !dbg !12027
  ret void, !dbg !12028
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #15 !dbg !12029 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12034
  call void @llvm.dbg.value(metadata i32 %1, metadata !12031, metadata !DIExpression()), !dbg !12035
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12036
  call void @llvm.dbg.value(metadata i32 %2, metadata !12032, metadata !DIExpression()), !dbg !12035
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12037
  call void @llvm.dbg.value(metadata i32 %3, metadata !12033, metadata !DIExpression()), !dbg !12035
  %4 = and i32 %2, 65536, !dbg !12038
  %5 = icmp ne i32 %4, 0, !dbg !12038
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !12040
  %8 = load i32, i32* @last_load, align 4, !dbg !12035
  br i1 %7, label %9, label %13, !dbg !12040

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !12041
  %11 = add i32 %10, %8, !dbg !12041
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !12041
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12043
  br label %13, !dbg !12044

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !12045
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !12046
  %16 = add i32 %14, %15, !dbg !12047
  ret i32 %16, !dbg !12048
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !12049 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12053, metadata !DIExpression()), !dbg !12066
  call void @llvm.dbg.value(metadata i1 %1, metadata !12054, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12066
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !12067
  br i1 %4, label %5, label %8, !dbg !12067

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12069
  %7 = and i32 %6, -2, !dbg !12069
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12069
  store i32 -16777216, i32* @last_load, align 4, !dbg !12071
  br label %54, !dbg !12072

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !12073
  call void @llvm.dbg.value(metadata i32 %9, metadata !12058, metadata !DIExpression()), !dbg !12066
  br i1 %3, label %18, label %10, !dbg !12074

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !12074
  call void @llvm.dbg.value(metadata i32 undef, metadata !12053, metadata !DIExpression()), !dbg !12066
  %12 = icmp slt i32 %11, 1, !dbg !12075
  br i1 %12, label %18, label %13, !dbg !12075

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !12075
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !12075
  %16 = mul nuw nsw i32 %15, 8400, !dbg !12075
  %17 = add nuw nsw i32 %16, 8399, !dbg !12075
  br label %18, !dbg !12075

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !12053, metadata !DIExpression()), !dbg !12066
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12076, metadata !DIExpression()) #23, !dbg !12083
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12085, !srcloc !12091
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !12085
  call void @llvm.dbg.value(metadata i32 %21, metadata !12088, metadata !DIExpression()) #23, !dbg !12092
  call void @llvm.dbg.value(metadata i32 undef, metadata !12089, metadata !DIExpression()) #23, !dbg !12092
  call void @llvm.dbg.value(metadata i32 %21, metadata !12082, metadata !DIExpression()) #23, !dbg !12083
  call void @llvm.dbg.value(metadata i32 %21, metadata !12059, metadata !DIExpression()), !dbg !12066
  %22 = tail call fastcc i32 @elapsed() #24, !dbg !12093
  call void @llvm.dbg.value(metadata i32 %22, metadata !12064, metadata !DIExpression()), !dbg !12066
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12094
  call void @llvm.dbg.value(metadata i32 %23, metadata !12056, metadata !DIExpression()), !dbg !12066
  %24 = load i32, i32* @cycle_count, align 4, !dbg !12095
  %25 = add i32 %24, %22, !dbg !12095
  store i32 %25, i32* @cycle_count, align 4, !dbg !12095
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !12096
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !12097
  %27 = sub i32 %25, %26, !dbg !12098
  call void @llvm.dbg.value(metadata i32 %27, metadata !12065, metadata !DIExpression()), !dbg !12066
  %28 = icmp slt i32 %27, 0, !dbg !12099
  br i1 %28, label %38, label %29, !dbg !12101

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !12055, metadata !DIExpression()), !dbg !12066
  call void @llvm.dbg.value(metadata i32 undef, metadata !12055, metadata !DIExpression()), !dbg !12066
  %30 = add nuw i32 %19, %27, !dbg !12102
  %31 = urem i32 %30, 8400, !dbg !12104
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !12055, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !12066
  %32 = sub nuw nsw i32 %19, %31, !dbg !12105
  call void @llvm.dbg.value(metadata i32 %32, metadata !12055, metadata !DIExpression()), !dbg !12066
  %33 = icmp ugt i32 %32, 1024, !dbg !12106
  br i1 %33, label %34, label %36, !dbg !12106

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !12055, metadata !DIExpression()), !dbg !12066
  %35 = icmp ugt i32 %32, 16766400, !dbg !12107
  br i1 %35, label %38, label %36, !dbg !12109

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1024, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1024, %18 ], [ 16766400, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !12110
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12111
  call void @llvm.dbg.value(metadata i32 %40, metadata !12057, metadata !DIExpression()), !dbg !12066
  %41 = add nsw i32 %39, -1, !dbg !12112
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !12113
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12114
  %42 = icmp ult i32 %23, %40, !dbg !12115
  br i1 %42, label %43, label %48, !dbg !12117

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !12118
  %45 = add i32 %23, %9, !dbg !12120
  %46 = sub i32 %45, %40, !dbg !12121
  %47 = add i32 %46, %44, !dbg !12118
  br label %52, !dbg !12122

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !12123
  %50 = load i32, i32* @cycle_count, align 4, !dbg !12125
  %51 = add i32 %49, %50, !dbg !12125
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !12126
  store i32 %53, i32* @cycle_count, align 4, !dbg !12126
  call void @llvm.dbg.value(metadata i32 %21, metadata !12127, metadata !DIExpression()) #23, !dbg !12133
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12132, metadata !DIExpression()) #23, !dbg !12133
  call void @llvm.dbg.value(metadata i32 %21, metadata !12135, metadata !DIExpression()) #23, !dbg !12138
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #23, !dbg !12140, !srcloc !12141
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !12142
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !12143 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12076, metadata !DIExpression()) #23, !dbg !12147
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12149, !srcloc !12091
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !12149
  call void @llvm.dbg.value(metadata i32 %2, metadata !12088, metadata !DIExpression()) #23, !dbg !12151
  call void @llvm.dbg.value(metadata i32 undef, metadata !12089, metadata !DIExpression()) #23, !dbg !12151
  call void @llvm.dbg.value(metadata i32 %2, metadata !12082, metadata !DIExpression()) #23, !dbg !12147
  call void @llvm.dbg.value(metadata i32 %2, metadata !12145, metadata !DIExpression()), !dbg !12152
  %3 = tail call fastcc i32 @elapsed() #24, !dbg !12153
  %4 = load i32, i32* @cycle_count, align 4, !dbg !12154
  %5 = add i32 %4, %3, !dbg !12155
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !12156
  %7 = sub i32 %5, %6, !dbg !12157
  call void @llvm.dbg.value(metadata i32 %7, metadata !12146, metadata !DIExpression()), !dbg !12152
  call void @llvm.dbg.value(metadata i32 %2, metadata !12127, metadata !DIExpression()) #23, !dbg !12158
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12132, metadata !DIExpression()) #23, !dbg !12158
  call void @llvm.dbg.value(metadata i32 %2, metadata !12135, metadata !DIExpression()) #23, !dbg !12160
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !12162, !srcloc !12141
  %8 = udiv i32 %7, 8400, !dbg !12163
  ret i32 %8, !dbg !12164
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !12165 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12076, metadata !DIExpression()) #23, !dbg !12169
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12171, !srcloc !12091
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !12171
  call void @llvm.dbg.value(metadata i32 %2, metadata !12088, metadata !DIExpression()) #23, !dbg !12173
  call void @llvm.dbg.value(metadata i32 undef, metadata !12089, metadata !DIExpression()) #23, !dbg !12173
  call void @llvm.dbg.value(metadata i32 %2, metadata !12082, metadata !DIExpression()) #23, !dbg !12169
  call void @llvm.dbg.value(metadata i32 %2, metadata !12167, metadata !DIExpression()), !dbg !12174
  %3 = tail call fastcc i32 @elapsed() #24, !dbg !12175
  %4 = load i32, i32* @cycle_count, align 4, !dbg !12176
  %5 = add i32 %4, %3, !dbg !12177
  call void @llvm.dbg.value(metadata i32 %5, metadata !12168, metadata !DIExpression()), !dbg !12174
  call void @llvm.dbg.value(metadata i32 %2, metadata !12127, metadata !DIExpression()) #23, !dbg !12178
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12132, metadata !DIExpression()) #23, !dbg !12178
  call void @llvm.dbg.value(metadata i32 %2, metadata !12135, metadata !DIExpression()) #23, !dbg !12180
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !12182, !srcloc !12141
  ret i32 %5, !dbg !12183
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #15 !dbg !12184 {
  %1 = load i32, i32* @last_load, align 4, !dbg !12185
  %2 = icmp eq i32 %1, -16777216, !dbg !12187
  br i1 %2, label %3, label %6, !dbg !12188

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12189
  %5 = or i32 %4, 1, !dbg !12189
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12189
  br label %6, !dbg !12191

6:                                                ; preds = %3, %0
  ret void, !dbg !12192
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #15 !dbg !12193 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12194
  %2 = and i32 %1, -2, !dbg !12194
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12194
  ret void, !dbg !12195
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #14 !dbg !12196 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !12222, metadata !DIExpression()), !dbg !12225
  call void @llvm.dbg.value(metadata i8 %1, metadata !12223, metadata !DIExpression()), !dbg !12225
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !12224, metadata !DIExpression()), !dbg !12225
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !12226
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12226
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !12225
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12227
  %8 = load i8, i8* %6, align 4, !dbg !12228
  %9 = zext i8 %8 to i32, !dbg !12229
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !12229
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !12230
  br i1 %11, label %18, label %24, !dbg !12231

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !12225
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12227
  %14 = load i8, i8* %6, align 4, !dbg !12228
  %15 = zext i8 %14 to i32, !dbg !12229
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !12229
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !12230
  br i1 %17, label %18, label %24, !dbg !12231, !llvm.loop !12232

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !12234
  %21 = load i8, i8* %20, align 1, !dbg !12234
  %22 = icmp eq i8 %21, %1, !dbg !12237
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !12238
  br i1 %22, label %24, label %12, !dbg !12239

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !12225
  ret i32 %25, !dbg !12240
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct.vnd_sensor_config* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12241 {
  call void @llvm.dbg.value(metadata %struct.vnd_sensor_config* %0, metadata !12252, metadata !DIExpression()), !dbg !12268
  call void @llvm.dbg.value(metadata i8 %1, metadata !12253, metadata !DIExpression()), !dbg !12268
  call void @llvm.dbg.value(metadata i32 %2, metadata !12254, metadata !DIExpression()), !dbg !12268
  call void @llvm.dbg.value(metadata i32 0, metadata !12257, metadata !DIExpression()), !dbg !12268
  call void @llvm.dbg.value(metadata i32 0, metadata !12258, metadata !DIExpression()), !dbg !12268
  call void @llvm.dbg.value(metadata i8 0, metadata !12259, metadata !DIExpression()), !dbg !12269
  %4 = icmp eq i8 %1, 0, !dbg !12270
  br i1 %4, label %35, label %5, !dbg !12271

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !12270
  br label %9, !dbg !12271

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !12259, metadata !DIExpression()), !dbg !12269
  call void @llvm.dbg.value(metadata i32 %29, metadata !12257, metadata !DIExpression()), !dbg !12268
  %8 = icmp eq i32 %34, %6, !dbg !12270
  br i1 %8, label %35, label %9, !dbg !12271, !llvm.loop !12272

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !12259, metadata !DIExpression()), !dbg !12269
  call void @llvm.dbg.value(metadata i32 %11, metadata !12257, metadata !DIExpression()), !dbg !12268
  %12 = getelementptr inbounds %struct.vnd_sensor_config, %struct.vnd_sensor_config* %0, i32 %10, i32 0, !dbg !12274
  %13 = load i32, i32* %12, align 4, !dbg !12274
  call void @llvm.dbg.value(metadata i32 %13, metadata !12256, metadata !DIExpression()), !dbg !12268
  %14 = and i32 %13, 31, !dbg !12275
  %15 = icmp ult i32 %14, 16, !dbg !12276
  br i1 %15, label %16, label %20, !dbg !12277

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct.vnd_sensor_config, %struct.vnd_sensor_config* %0, i32 %10, i32 1, !dbg !12278
  %18 = load i32, i32* %17, align 4, !dbg !12278
  %19 = or i32 %18, 32, !dbg !12280
  call void @llvm.dbg.value(metadata i32 %19, metadata !12257, metadata !DIExpression()), !dbg !12268
  br label %28, !dbg !12281

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !12282

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct.vnd_sensor_config, %struct.vnd_sensor_config* %0, i32 %10, i32 1, !dbg !12283
  %23 = load i32, i32* %22, align 4, !dbg !12283
  call void @llvm.dbg.value(metadata i32 %23, metadata !12261, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !12284
  %24 = lshr i32 %23, 7, !dbg !12285
  %25 = and i32 %24, 16, !dbg !12285
  %26 = or i32 %25, %23, !dbg !12285
  call void @llvm.dbg.value(metadata i32 %26, metadata !12257, metadata !DIExpression()), !dbg !12268
  br label %28, !dbg !12286

27:                                               ; preds = %20
  br label %28, !dbg !12287

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ 48, %20 ], [ %11, %27 ], !dbg !12268
  call void @llvm.dbg.value(metadata i32 %29, metadata !12257, metadata !DIExpression()), !dbg !12268
  %30 = lshr i32 %13, 5, !dbg !12287
  %31 = and i32 %30, 255, !dbg !12287
  call void @llvm.dbg.value(metadata i32 %31, metadata !12255, metadata !DIExpression()), !dbg !12268
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #24, !dbg !12288
  call void @llvm.dbg.value(metadata i32 %32, metadata !12258, metadata !DIExpression()), !dbg !12268
  %33 = icmp slt i32 %32, 0, !dbg !12289
  %34 = add nuw nsw i32 %10, 1, !dbg !12291
  call void @llvm.dbg.value(metadata i32 %34, metadata !12259, metadata !DIExpression()), !dbg !12269
  br i1 %33, label %35, label %7, !dbg !12292

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !12293
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !12294 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12298, metadata !DIExpression()), !dbg !12302
  call void @llvm.dbg.value(metadata i32 %1, metadata !12299, metadata !DIExpression()), !dbg !12302
  call void @llvm.dbg.value(metadata i32 %2, metadata !12300, metadata !DIExpression()), !dbg !12302
  %4 = icmp ugt i32 %0, 175, !dbg !12303
  br i1 %4, label %16, label %5, !dbg !12305

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !12306
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !12307
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !12307
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !12301, metadata !DIExpression()), !dbg !12302
  %9 = add nsw i32 %6, -8, !dbg !12308
  %10 = icmp ult i32 %9, 3, !dbg !12308
  br i1 %10, label %16, label %11, !dbg !12310

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.154(%struct.device* noundef %8) #24, !dbg !12311
  br i1 %12, label %13, label %16, !dbg !12312

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !12313
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #25, !dbg !12314
  br label %16, !dbg !12315

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !12302
  ret i32 %17, !dbg !12316
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.154(%struct.device* noundef %0) unnamed_addr #1 !dbg !12317 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12321, metadata !DIExpression()), !dbg !12322
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !12323, !srcloc !12325
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.155(%struct.device* noundef %0) #24, !dbg !12326
  ret i1 %2, !dbg !12327
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.155(%struct.device* noundef %0) unnamed_addr #1 !dbg !12328 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12330, metadata !DIExpression()), !dbg !12331
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !12332
  ret i1 %2, !dbg !12333
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #4 !dbg !12334 {
  ret void, !dbg !12335
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #5 !dbg !12336 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12338, metadata !DIExpression()), !dbg !12343
  call void @llvm.dbg.value(metadata i32 0, metadata !12339, metadata !DIExpression()), !dbg !12343
  call void @llvm.dbg.value(metadata i32 2, metadata !12340, metadata !DIExpression()), !dbg !12343
  call void @llvm.dbg.value(metadata i32 0, metadata !12341, metadata !DIExpression()), !dbg !12343
  call void @llvm.dbg.value(metadata i32 2, metadata !12342, metadata !DIExpression()), !dbg !12343
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12344
  %2 = and i32 %1, 12, !dbg !12345
  call void @llvm.dbg.value(metadata i32 %2, metadata !12338, metadata !DIExpression()), !dbg !12343
  %3 = icmp eq i32 %2, 8, !dbg !12346
  br i1 %3, label %4, label %18, !dbg !12346

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12347
  call void @llvm.dbg.value(metadata i32 %5, metadata !12341, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !12343
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12349
  %7 = and i32 %6, 63, !dbg !12350
  call void @llvm.dbg.value(metadata i32 %7, metadata !12342, metadata !DIExpression()), !dbg !12343
  %8 = udiv i32 16000000, %7, !dbg !12351
  %9 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12351
  %10 = lshr i32 %9, 6, !dbg !12351
  %11 = and i32 %10, 511, !dbg !12351
  %12 = mul i32 %11, %8, !dbg !12351
  call void @llvm.dbg.value(metadata i32 %12, metadata !12339, metadata !DIExpression()), !dbg !12343
  call void @llvm.dbg.value(metadata i32 %12, metadata !12339, metadata !DIExpression()), !dbg !12343
  call void @llvm.dbg.value(metadata i32 %12, metadata !12339, metadata !DIExpression()), !dbg !12343
  %13 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12353
  %14 = lshr i32 %13, 15, !dbg !12354
  %15 = and i32 %14, 6, !dbg !12354
  %16 = add nuw nsw i32 %15, 2, !dbg !12354
  call void @llvm.dbg.value(metadata i32 %16, metadata !12340, metadata !DIExpression()), !dbg !12343
  %17 = udiv i32 %12, %16, !dbg !12355
  br label %18, !dbg !12356

18:                                               ; preds = %0, %4
  %19 = phi i32 [ %17, %4 ], [ 16000000, %0 ]
  store i32 %19, i32* @SystemCoreClock, align 4, !dbg !12357
  %20 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12358
  %21 = lshr i32 %20, 4, !dbg !12359
  %22 = and i32 %21, 15, !dbg !12359
  %23 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %22, !dbg !12360
  %24 = load i8, i8* %23, align 1, !dbg !12360
  %25 = zext i8 %24 to i32, !dbg !12360
  call void @llvm.dbg.value(metadata i32 %25, metadata !12338, metadata !DIExpression()), !dbg !12343
  %26 = lshr i32 %19, %25, !dbg !12361
  store i32 %26, i32* @SystemCoreClock, align 4, !dbg !12361
  ret void, !dbg !12362
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_PeriphCLKConfig(%struct.RCC_PeriphCLKInitTypeDef* noundef readonly %0) local_unnamed_addr #1 !dbg !12363 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_PeriphCLKInitTypeDef* %0, metadata !12405, metadata !DIExpression()), !dbg !12419
  call void @llvm.dbg.value(metadata i32 0, metadata !12406, metadata !DIExpression()), !dbg !12419
  call void @llvm.dbg.value(metadata i32 0, metadata !12407, metadata !DIExpression()), !dbg !12419
  call void @llvm.dbg.value(metadata i32 0, metadata !12408, metadata !DIExpression()), !dbg !12419
  call void @llvm.dbg.value(metadata i32 0, metadata !12409, metadata !DIExpression()), !dbg !12419
  call void @llvm.dbg.value(metadata i32 0, metadata !12410, metadata !DIExpression()), !dbg !12419
  call void @llvm.dbg.value(metadata i32 0, metadata !12411, metadata !DIExpression()), !dbg !12419
  call void @llvm.dbg.value(metadata i32 0, metadata !12412, metadata !DIExpression()), !dbg !12419
  call void @llvm.dbg.value(metadata i32 0, metadata !12413, metadata !DIExpression()), !dbg !12419
  call void @llvm.dbg.value(metadata i32 0, metadata !12414, metadata !DIExpression()), !dbg !12419
  %3 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 0, !dbg !12420
  %4 = load i32, i32* %3, align 4, !dbg !12420
  %5 = and i32 %4, 1, !dbg !12422
  %6 = icmp eq i32 %5, 0, !dbg !12423
  br i1 %6, label %17, label %7, !dbg !12424

7:                                                ; preds = %1
  %8 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12425
  %9 = and i32 %8, -100663297, !dbg !12425
  %10 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 7, !dbg !12425
  %11 = load i32, i32* %10, align 4, !dbg !12425
  %12 = or i32 %9, %11, !dbg !12425
  store volatile i32 %12, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12425
  %13 = load i32, i32* %10, align 4, !dbg !12427
  %14 = icmp eq i32 %13, 0, !dbg !12429
  %15 = zext i1 %14 to i32, !dbg !12430
  %16 = load i32, i32* %3, align 4, !dbg !12431
  br label %17, !dbg !12430

17:                                               ; preds = %7, %1
  %18 = phi i32 [ %4, %1 ], [ %16, %7 ], !dbg !12431
  %19 = phi i32 [ 0, %1 ], [ %15, %7 ], !dbg !12419
  call void @llvm.dbg.value(metadata i32 %19, metadata !12413, metadata !DIExpression()), !dbg !12419
  %20 = and i32 %18, 2, !dbg !12433
  %21 = icmp eq i32 %20, 0, !dbg !12434
  br i1 %21, label %32, label %22, !dbg !12435

22:                                               ; preds = %17
  %23 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12436
  %24 = and i32 %23, -402653185, !dbg !12436
  %25 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 8, !dbg !12436
  %26 = load i32, i32* %25, align 4, !dbg !12436
  %27 = or i32 %24, %26, !dbg !12436
  store volatile i32 %27, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12436
  %28 = load i32, i32* %25, align 4, !dbg !12438
  %29 = icmp eq i32 %28, 0, !dbg !12440
  %30 = select i1 %29, i32 1, i32 %19, !dbg !12441
  %31 = load i32, i32* %3, align 4, !dbg !12442
  br label %32, !dbg !12441

32:                                               ; preds = %22, %17
  %33 = phi i32 [ %18, %17 ], [ %31, %22 ], !dbg !12442
  %34 = phi i32 [ %19, %17 ], [ %30, %22 ], !dbg !12419
  call void @llvm.dbg.value(metadata i32 %34, metadata !12413, metadata !DIExpression()), !dbg !12419
  %35 = and i32 %33, 4, !dbg !12444
  %36 = icmp eq i32 %35, 0, !dbg !12445
  br i1 %36, label %49, label %37, !dbg !12446

37:                                               ; preds = %32
  %38 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12447
  %39 = and i32 %38, -3145729, !dbg !12447
  %40 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !12447
  %41 = load i32, i32* %40, align 4, !dbg !12447
  %42 = or i32 %39, %41, !dbg !12447
  store volatile i32 %42, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12447
  %43 = load i32, i32* %40, align 4, !dbg !12449
  %44 = icmp eq i32 %43, 1048576, !dbg !12451
  %45 = select i1 %44, i32 1, i32 %34, !dbg !12452
  call void @llvm.dbg.value(metadata i32 %45, metadata !12413, metadata !DIExpression()), !dbg !12419
  %46 = icmp eq i32 %43, 0, !dbg !12453
  %47 = zext i1 %46 to i32, !dbg !12455
  %48 = load i32, i32* %3, align 4, !dbg !12456
  br label %49, !dbg !12455

49:                                               ; preds = %37, %32
  %50 = phi i32 [ %33, %32 ], [ %48, %37 ], !dbg !12456
  %51 = phi i32 [ %34, %32 ], [ %45, %37 ], !dbg !12419
  %52 = phi i32 [ 0, %32 ], [ %47, %37 ], !dbg !12419
  call void @llvm.dbg.value(metadata i32 %52, metadata !12414, metadata !DIExpression()), !dbg !12419
  call void @llvm.dbg.value(metadata i32 %51, metadata !12413, metadata !DIExpression()), !dbg !12419
  %53 = and i32 %50, 8, !dbg !12458
  %54 = icmp eq i32 %53, 0, !dbg !12459
  br i1 %54, label %67, label %55, !dbg !12460

55:                                               ; preds = %49
  %56 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12461
  %57 = and i32 %56, -12582913, !dbg !12461
  %58 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !12461
  %59 = load i32, i32* %58, align 4, !dbg !12461
  %60 = or i32 %57, %59, !dbg !12461
  store volatile i32 %60, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12461
  %61 = load i32, i32* %58, align 4, !dbg !12463
  %62 = icmp eq i32 %61, 4194304, !dbg !12465
  %63 = select i1 %62, i32 1, i32 %51, !dbg !12466
  call void @llvm.dbg.value(metadata i32 %63, metadata !12413, metadata !DIExpression()), !dbg !12419
  %64 = icmp eq i32 %61, 0, !dbg !12467
  %65 = select i1 %64, i32 1, i32 %52, !dbg !12469
  %66 = load i32, i32* %3, align 4, !dbg !12470
  br label %67, !dbg !12469

67:                                               ; preds = %55, %49
  %68 = phi i32 [ %50, %49 ], [ %66, %55 ], !dbg !12470
  %69 = phi i32 [ %51, %49 ], [ %63, %55 ], !dbg !12419
  %70 = phi i32 [ %52, %49 ], [ %65, %55 ], !dbg !12419
  call void @llvm.dbg.value(metadata i32 %70, metadata !12414, metadata !DIExpression()), !dbg !12419
  call void @llvm.dbg.value(metadata i32 %69, metadata !12413, metadata !DIExpression()), !dbg !12419
  %71 = and i32 %68, 32, !dbg !12471
  %72 = icmp eq i32 %71, 0, !dbg !12472
  br i1 %72, label %131, label %73, !dbg !12473

73:                                               ; preds = %67
  %74 = bitcast i32* %2 to i8*, !dbg !12474
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %74), !dbg !12474
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12415, metadata !DIExpression()), !dbg !12474
  store volatile i32 0, i32* %2, align 4, !dbg !12474
  %75 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12474
  %76 = or i32 %75, 268435456, !dbg !12474
  store volatile i32 %76, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12474
  %77 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12474
  %78 = and i32 %77, 268435456, !dbg !12474
  store volatile i32 %78, i32* %2, align 4, !dbg !12474
  %79 = load volatile i32, i32* %2, align 4, !dbg !12474
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %74), !dbg !12475
  %80 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12476
  %81 = or i32 %80, 256, !dbg !12476
  store volatile i32 %81, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12476
  %82 = tail call i32 @HAL_GetTick() #25, !dbg !12477
  call void @llvm.dbg.value(metadata i32 %82, metadata !12406, metadata !DIExpression()), !dbg !12419
  br label %83, !dbg !12478

83:                                               ; preds = %87, %73
  %84 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12479
  %85 = and i32 %84, 256, !dbg !12480
  %86 = icmp eq i32 %85, 0, !dbg !12481
  br i1 %86, label %87, label %91, !dbg !12478

87:                                               ; preds = %83
  %88 = tail call i32 @HAL_GetTick() #25, !dbg !12482
  %89 = sub i32 %88, %82, !dbg !12485
  %90 = icmp ugt i32 %89, 2, !dbg !12486
  br i1 %90, label %439, label %83, !dbg !12487, !llvm.loop !12488

91:                                               ; preds = %83
  %92 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12490
  %93 = and i32 %92, 768, !dbg !12491
  call void @llvm.dbg.value(metadata i32 %93, metadata !12407, metadata !DIExpression()), !dbg !12419
  %94 = icmp eq i32 %93, 0, !dbg !12492
  br i1 %94, label %116, label %95, !dbg !12494

95:                                               ; preds = %91
  %96 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 9, !dbg !12495
  %97 = load i32, i32* %96, align 4, !dbg !12495
  %98 = and i32 %97, 768, !dbg !12496
  %99 = icmp eq i32 %93, %98, !dbg !12497
  br i1 %99, label %116, label %100, !dbg !12498

100:                                              ; preds = %95
  %101 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12499
  %102 = and i32 %101, -769, !dbg !12501
  call void @llvm.dbg.value(metadata i32 %102, metadata !12407, metadata !DIExpression()), !dbg !12419
  store volatile i32 1, i32* inttoptr (i32 1111952960 to i32*), align 64, !dbg !12502
  store volatile i32 0, i32* inttoptr (i32 1111952960 to i32*), align 64, !dbg !12503
  store volatile i32 %102, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12504
  %103 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12505
  %104 = and i32 %103, 1, !dbg !12505
  %105 = icmp eq i32 %104, 0, !dbg !12505
  br i1 %105, label %116, label %106, !dbg !12507

106:                                              ; preds = %100
  %107 = tail call i32 @HAL_GetTick() #25, !dbg !12508
  call void @llvm.dbg.value(metadata i32 %107, metadata !12406, metadata !DIExpression()), !dbg !12419
  br label %108, !dbg !12510

108:                                              ; preds = %112, %106
  %109 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12511
  %110 = and i32 %109, 2, !dbg !12512
  %111 = icmp eq i32 %110, 0, !dbg !12512
  br i1 %111, label %112, label %116, !dbg !12510

112:                                              ; preds = %108
  %113 = tail call i32 @HAL_GetTick() #25, !dbg !12513
  %114 = sub i32 %113, %107, !dbg !12516
  %115 = icmp ugt i32 %114, 5000, !dbg !12517
  br i1 %115, label %439, label %108, !dbg !12518, !llvm.loop !12519

116:                                              ; preds = %108, %91, %95, %100
  %117 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 9, !dbg !12521
  %118 = load i32, i32* %117, align 4, !dbg !12521
  %119 = and i32 %118, 768, !dbg !12521
  %120 = icmp eq i32 %119, 768, !dbg !12521
  %121 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12521
  %122 = and i32 %121, -2031617, !dbg !12521
  %123 = and i32 %118, 268434687, !dbg !12521
  %124 = select i1 %120, i32 %123, i32 0, !dbg !12521
  %125 = or i32 %122, %124, !dbg !12521
  store volatile i32 %125, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12521
  %126 = load i32, i32* %117, align 4, !dbg !12521
  %127 = and i32 %126, 4095, !dbg !12521
  %128 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12521
  %129 = or i32 %128, %127, !dbg !12521
  store volatile i32 %129, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12521
  %130 = load i32, i32* %3, align 4, !dbg !12523
  br label %131, !dbg !12525

131:                                              ; preds = %116, %67
  %132 = phi i32 [ %130, %116 ], [ %68, %67 ], !dbg !12523
  %133 = and i32 %132, 16, !dbg !12526
  %134 = icmp eq i32 %133, 0, !dbg !12527
  br i1 %134, label %140, label %135, !dbg !12528

135:                                              ; preds = %131
  %136 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 15, !dbg !12529
  %137 = load i8, i8* %136, align 4, !dbg !12529
  %138 = zext i8 %137 to i32, !dbg !12529
  store volatile i32 %138, i32* inttoptr (i32 1111953888 to i32*), align 32, !dbg !12529
  %139 = load i32, i32* %3, align 4, !dbg !12531
  br label %140, !dbg !12533

140:                                              ; preds = %135, %131
  %141 = phi i32 [ %139, %135 ], [ %132, %131 ], !dbg !12531
  %142 = and i32 %141, 128, !dbg !12534
  %143 = icmp eq i32 %142, 0, !dbg !12535
  br i1 %143, label %151, label %144, !dbg !12536

144:                                              ; preds = %140
  %145 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12537
  %146 = and i32 %145, -12582913, !dbg !12537
  %147 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 12, !dbg !12537
  %148 = load i32, i32* %147, align 4, !dbg !12537
  %149 = or i32 %146, %148, !dbg !12537
  store volatile i32 %149, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12537
  %150 = load i32, i32* %3, align 4, !dbg !12539
  br label %151, !dbg !12541

151:                                              ; preds = %144, %140
  %152 = phi i32 [ %150, %144 ], [ %141, %140 ], !dbg !12539
  %153 = and i32 %152, 64, !dbg !12542
  %154 = icmp eq i32 %153, 0, !dbg !12543
  br i1 %154, label %162, label %155, !dbg !12544

155:                                              ; preds = %151
  %156 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12545
  %157 = and i32 %156, -67108865, !dbg !12545
  %158 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 11, !dbg !12545
  %159 = load i32, i32* %158, align 4, !dbg !12545
  %160 = or i32 %157, %159, !dbg !12545
  store volatile i32 %160, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12545
  %161 = load i32, i32* %3, align 4, !dbg !12547
  br label %162, !dbg !12549

162:                                              ; preds = %155, %151
  %163 = phi i32 [ %161, %155 ], [ %152, %151 ], !dbg !12547
  %164 = and i32 %163, 256, !dbg !12550
  %165 = icmp eq i32 %164, 0, !dbg !12551
  br i1 %165, label %176, label %166, !dbg !12552

166:                                              ; preds = %162
  %167 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12553
  %168 = and i32 %167, -134217729, !dbg !12553
  %169 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 14, !dbg !12553
  %170 = load i32, i32* %169, align 4, !dbg !12553
  %171 = or i32 %168, %170, !dbg !12553
  store volatile i32 %171, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12553
  %172 = load i32, i32* %169, align 4, !dbg !12555
  %173 = icmp eq i32 %172, 134217728, !dbg !12557
  %174 = select i1 %173, i32 1, i32 %70, !dbg !12558
  %175 = load i32, i32* %3, align 4, !dbg !12559
  br label %176, !dbg !12558

176:                                              ; preds = %166, %162
  %177 = phi i32 [ %163, %162 ], [ %175, %166 ], !dbg !12559
  %178 = phi i32 [ %70, %162 ], [ %174, %166 ], !dbg !12419
  call void @llvm.dbg.value(metadata i32 %178, metadata !12414, metadata !DIExpression()), !dbg !12419
  %179 = and i32 %177, 512, !dbg !12561
  %180 = icmp eq i32 %179, 0, !dbg !12562
  br i1 %180, label %188, label %181, !dbg !12563

181:                                              ; preds = %176
  %182 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12564
  %183 = and i32 %182, -268435457, !dbg !12564
  %184 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 10, !dbg !12564
  %185 = load i32, i32* %184, align 4, !dbg !12564
  %186 = or i32 %183, %185, !dbg !12564
  store volatile i32 %186, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12564
  %187 = load i32, i32* %3, align 4, !dbg !12566
  br label %188, !dbg !12568

188:                                              ; preds = %181, %176
  %189 = phi i32 [ %187, %181 ], [ %177, %176 ], !dbg !12566
  %190 = and i32 %189, 1024, !dbg !12569
  %191 = icmp eq i32 %190, 0, !dbg !12570
  br i1 %191, label %204, label %192, !dbg !12571

192:                                              ; preds = %188
  %193 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12572
  %194 = and i32 %193, -536870913, !dbg !12572
  %195 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 13, !dbg !12572
  %196 = load i32, i32* %195, align 4, !dbg !12572
  %197 = or i32 %194, %196, !dbg !12572
  store volatile i32 %197, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12572
  %198 = load i32, i32* %195, align 4, !dbg !12574
  %199 = icmp eq i32 %198, 536870912, !dbg !12576
  %200 = icmp eq i32 %69, 1
  %201 = select i1 %199, i1 true, i1 %200, !dbg !12577
  call void @llvm.dbg.value(metadata i32 %69, metadata !12413, metadata !DIExpression()), !dbg !12419
  br i1 %201, label %209, label %202, !dbg !12577

202:                                              ; preds = %192
  %203 = load i32, i32* %3, align 4, !dbg !12578
  br label %206, !dbg !12577

204:                                              ; preds = %188
  call void @llvm.dbg.value(metadata i32 %69, metadata !12413, metadata !DIExpression()), !dbg !12419
  %205 = icmp eq i32 %69, 1, !dbg !12580
  br i1 %205, label %209, label %206, !dbg !12581

206:                                              ; preds = %202, %204
  %207 = phi i32 [ %203, %202 ], [ %189, %204 ], !dbg !12578
  %208 = icmp eq i32 %207, 2048, !dbg !12582
  br i1 %208, label %209, label %356, !dbg !12583

209:                                              ; preds = %192, %206, %204
  store volatile i32 0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !12584
  %210 = tail call i32 @HAL_GetTick() #25, !dbg !12586
  call void @llvm.dbg.value(metadata i32 %210, metadata !12406, metadata !DIExpression()), !dbg !12419
  br label %211, !dbg !12587

211:                                              ; preds = %215, %209
  %212 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12588
  %213 = and i32 %212, 134217728, !dbg !12588
  %214 = icmp eq i32 %213, 0, !dbg !12588
  br i1 %214, label %219, label %215, !dbg !12587

215:                                              ; preds = %211
  %216 = tail call i32 @HAL_GetTick() #25, !dbg !12589
  %217 = sub i32 %216, %210, !dbg !12592
  %218 = icmp ugt i32 %217, 2, !dbg !12593
  br i1 %218, label %439, label %211, !dbg !12594, !llvm.loop !12595

219:                                              ; preds = %211
  %220 = load i32, i32* %3, align 4, !dbg !12597
  %221 = and i32 %220, 1, !dbg !12599
  %222 = icmp eq i32 %221, 0, !dbg !12600
  br i1 %222, label %227, label %223, !dbg !12601

223:                                              ; preds = %219
  %224 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 7, !dbg !12602
  %225 = load i32, i32* %224, align 4, !dbg !12602
  %226 = icmp eq i32 %225, 0, !dbg !12603
  br i1 %226, label %234, label %227, !dbg !12604

227:                                              ; preds = %223, %219
  %228 = and i32 %220, 2, !dbg !12605
  %229 = icmp eq i32 %228, 0, !dbg !12606
  br i1 %229, label %252, label %230, !dbg !12607

230:                                              ; preds = %227
  %231 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 8, !dbg !12608
  %232 = load i32, i32* %231, align 4, !dbg !12608
  %233 = icmp eq i32 %232, 0, !dbg !12609
  br i1 %233, label %234, label %252, !dbg !12610

234:                                              ; preds = %230, %223
  %235 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12611
  %236 = and i32 %235, 196608, !dbg !12613
  call void @llvm.dbg.value(metadata i32 %236, metadata !12408, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !12419
  %237 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12614
  %238 = and i32 %237, 251658240, !dbg !12615
  call void @llvm.dbg.value(metadata i32 %238, metadata !12409, metadata !DIExpression()), !dbg !12419
  %239 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !12616
  %240 = load i32, i32* %239, align 4, !dbg !12616
  %241 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !12616
  %242 = load i32, i32* %241, align 4, !dbg !12616
  %243 = shl i32 %242, 6, !dbg !12616
  %244 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 4, !dbg !12616
  %245 = load i32, i32* %244, align 4, !dbg !12616
  %246 = shl i32 %245, 28, !dbg !12616
  %247 = or i32 %240, %236, !dbg !12616
  %248 = or i32 %247, %238, !dbg !12616
  %249 = or i32 %248, %243, !dbg !12616
  %250 = or i32 %249, %246, !dbg !12616
  store volatile i32 %250, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12616
  %251 = load i32, i32* %3, align 4, !dbg !12617
  br label %252, !dbg !12619

252:                                              ; preds = %234, %230, %227
  %253 = phi i32 [ %251, %234 ], [ %220, %230 ], [ %220, %227 ], !dbg !12617
  %254 = and i32 %253, 4, !dbg !12620
  %255 = icmp eq i32 %254, 0, !dbg !12621
  br i1 %255, label %260, label %256, !dbg !12622

256:                                              ; preds = %252
  %257 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !12623
  %258 = load i32, i32* %257, align 4, !dbg !12623
  %259 = icmp eq i32 %258, 1048576, !dbg !12624
  br i1 %259, label %267, label %260, !dbg !12625

260:                                              ; preds = %256, %252
  %261 = and i32 %253, 8, !dbg !12626
  %262 = icmp eq i32 %261, 0, !dbg !12627
  br i1 %262, label %291, label %263, !dbg !12628

263:                                              ; preds = %260
  %264 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !12629
  %265 = load i32, i32* %264, align 4, !dbg !12629
  %266 = icmp eq i32 %265, 4194304, !dbg !12630
  br i1 %266, label %267, label %291, !dbg !12631

267:                                              ; preds = %263, %256
  %268 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12632
  %269 = and i32 %268, 196608, !dbg !12634
  call void @llvm.dbg.value(metadata i32 %269, metadata !12408, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !12419
  %270 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12635
  %271 = and i32 %270, 1879048192, !dbg !12636
  call void @llvm.dbg.value(metadata i32 %271, metadata !12410, metadata !DIExpression()), !dbg !12419
  %272 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !12637
  %273 = load i32, i32* %272, align 4, !dbg !12637
  %274 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !12637
  %275 = load i32, i32* %274, align 4, !dbg !12637
  %276 = shl i32 %275, 6, !dbg !12637
  %277 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 3, !dbg !12637
  %278 = load i32, i32* %277, align 4, !dbg !12637
  %279 = shl i32 %278, 24, !dbg !12637
  %280 = or i32 %273, %269, !dbg !12637
  %281 = or i32 %280, %271, !dbg !12637
  %282 = or i32 %281, %276, !dbg !12637
  %283 = or i32 %282, %279, !dbg !12637
  store volatile i32 %283, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12637
  %284 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12638
  %285 = and i32 %284, -32, !dbg !12638
  %286 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 3, !dbg !12638
  %287 = load i32, i32* %286, align 4, !dbg !12638
  %288 = add i32 %287, -1, !dbg !12638
  %289 = or i32 %288, %285, !dbg !12638
  store volatile i32 %289, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12638
  %290 = load i32, i32* %3, align 4, !dbg !12639
  br label %291, !dbg !12641

291:                                              ; preds = %267, %263, %260
  %292 = phi i32 [ %290, %267 ], [ %253, %263 ], [ %253, %260 ], !dbg !12639
  %293 = and i32 %292, 1024, !dbg !12642
  %294 = icmp eq i32 %293, 0, !dbg !12643
  br i1 %294, label %321, label %295, !dbg !12644

295:                                              ; preds = %291
  %296 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 13, !dbg !12645
  %297 = load i32, i32* %296, align 4, !dbg !12645
  %298 = icmp eq i32 %297, 536870912, !dbg !12646
  br i1 %298, label %299, label %321, !dbg !12647

299:                                              ; preds = %295
  %300 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12648
  call void @llvm.dbg.value(metadata i32 %300, metadata !12409, metadata !DIExpression(DW_OP_constu, 15, DW_OP_shr, DW_OP_constu, 6, DW_OP_and, DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !12419
  %301 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12650
  %302 = and i32 %301, 1879048192, !dbg !12651
  call void @llvm.dbg.value(metadata i32 %302, metadata !12410, metadata !DIExpression()), !dbg !12419
  %303 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !12652
  %304 = load i32, i32* %303, align 4, !dbg !12652
  %305 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !12652
  %306 = load i32, i32* %305, align 4, !dbg !12652
  %307 = shl i32 %306, 6, !dbg !12652
  %308 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 2, !dbg !12652
  %309 = load i32, i32* %308, align 4, !dbg !12652
  %310 = shl i32 %309, 15, !dbg !12652
  %311 = add i32 %310, -65536, !dbg !12652
  %312 = and i32 %311, -65536, !dbg !12652
  %313 = shl i32 %300, 9, !dbg !12652
  %314 = and i32 %313, 100663296, !dbg !12652
  %315 = add nuw nsw i32 %314, 33554432, !dbg !12652
  %316 = or i32 %302, %304, !dbg !12652
  %317 = or i32 %316, %315, !dbg !12652
  %318 = or i32 %317, %307, !dbg !12652
  %319 = or i32 %318, %312, !dbg !12652
  store volatile i32 %319, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12652
  %320 = load i32, i32* %3, align 4, !dbg !12653
  br label %321, !dbg !12655

321:                                              ; preds = %299, %295, %291
  %322 = phi i32 [ %320, %299 ], [ %292, %295 ], [ %292, %291 ], !dbg !12653
  %323 = and i32 %322, 2048, !dbg !12656
  %324 = icmp eq i32 %323, 0, !dbg !12657
  br i1 %324, label %346, label %325, !dbg !12658

325:                                              ; preds = %321
  %326 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !12659
  %327 = load i32, i32* %326, align 4, !dbg !12659
  %328 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !12659
  %329 = load i32, i32* %328, align 4, !dbg !12659
  %330 = shl i32 %329, 6, !dbg !12659
  %331 = or i32 %330, %327, !dbg !12659
  %332 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 2, !dbg !12659
  %333 = load i32, i32* %332, align 4, !dbg !12659
  %334 = shl i32 %333, 15, !dbg !12659
  %335 = add i32 %334, -65536, !dbg !12659
  %336 = and i32 %335, -65536, !dbg !12659
  %337 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 3, !dbg !12659
  %338 = load i32, i32* %337, align 4, !dbg !12659
  %339 = shl i32 %338, 24, !dbg !12659
  %340 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 4, !dbg !12659
  %341 = load i32, i32* %340, align 4, !dbg !12659
  %342 = shl i32 %341, 28, !dbg !12659
  %343 = or i32 %331, %339, !dbg !12659
  %344 = or i32 %343, %336, !dbg !12659
  %345 = or i32 %344, %342, !dbg !12659
  store volatile i32 %345, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12659
  br label %346, !dbg !12661

346:                                              ; preds = %325, %321
  store volatile i32 1, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !12662
  %347 = tail call i32 @HAL_GetTick() #25, !dbg !12663
  call void @llvm.dbg.value(metadata i32 %347, metadata !12406, metadata !DIExpression()), !dbg !12419
  br label %348, !dbg !12664

348:                                              ; preds = %352, %346
  %349 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12665
  %350 = and i32 %349, 134217728, !dbg !12666
  %351 = icmp eq i32 %350, 0, !dbg !12666
  br i1 %351, label %352, label %356, !dbg !12664

352:                                              ; preds = %348
  %353 = tail call i32 @HAL_GetTick() #25, !dbg !12667
  %354 = sub i32 %353, %347, !dbg !12670
  %355 = icmp ugt i32 %354, 2, !dbg !12671
  br i1 %355, label %439, label %348, !dbg !12672, !llvm.loop !12673

356:                                              ; preds = %348, %206
  %357 = icmp eq i32 %178, 1, !dbg !12675
  br i1 %357, label %358, label %439, !dbg !12677

358:                                              ; preds = %356
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !12678
  %359 = tail call i32 @HAL_GetTick() #25, !dbg !12680
  call void @llvm.dbg.value(metadata i32 %359, metadata !12406, metadata !DIExpression()), !dbg !12419
  br label %360, !dbg !12681

360:                                              ; preds = %364, %358
  %361 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12682
  %362 = and i32 %361, 536870912, !dbg !12682
  %363 = icmp eq i32 %362, 0, !dbg !12682
  br i1 %363, label %368, label %364, !dbg !12681

364:                                              ; preds = %360
  %365 = tail call i32 @HAL_GetTick() #25, !dbg !12683
  %366 = sub i32 %365, %359, !dbg !12686
  %367 = icmp ugt i32 %366, 2, !dbg !12687
  br i1 %367, label %439, label %360, !dbg !12688, !llvm.loop !12689

368:                                              ; preds = %360
  %369 = load i32, i32* %3, align 4, !dbg !12691
  %370 = and i32 %369, 4, !dbg !12693
  %371 = icmp eq i32 %370, 0, !dbg !12694
  br i1 %371, label %376, label %372, !dbg !12695

372:                                              ; preds = %368
  %373 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !12696
  %374 = load i32, i32* %373, align 4, !dbg !12696
  %375 = icmp eq i32 %374, 0, !dbg !12697
  br i1 %375, label %383, label %376, !dbg !12698

376:                                              ; preds = %372, %368
  %377 = and i32 %369, 8, !dbg !12699
  %378 = icmp eq i32 %377, 0, !dbg !12700
  br i1 %378, label %405, label %379, !dbg !12701

379:                                              ; preds = %376
  %380 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !12702
  %381 = load i32, i32* %380, align 4, !dbg !12702
  %382 = icmp eq i32 %381, 0, !dbg !12703
  br i1 %382, label %383, label %405, !dbg !12704

383:                                              ; preds = %379, %372
  %384 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12705
  %385 = and i32 %384, 196608, !dbg !12707
  call void @llvm.dbg.value(metadata i32 %385, metadata !12411, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !12419
  %386 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 0, !dbg !12708
  %387 = load i32, i32* %386, align 4, !dbg !12708
  %388 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 1, !dbg !12708
  %389 = load i32, i32* %388, align 4, !dbg !12708
  %390 = shl i32 %389, 6, !dbg !12708
  %391 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 3, !dbg !12708
  %392 = load i32, i32* %391, align 4, !dbg !12708
  %393 = shl i32 %392, 24, !dbg !12708
  %394 = or i32 %385, %387, !dbg !12708
  %395 = or i32 %394, %390, !dbg !12708
  %396 = or i32 %395, %393, !dbg !12708
  store volatile i32 %396, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12708
  %397 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12709
  %398 = and i32 %397, -7937, !dbg !12709
  %399 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 4, !dbg !12709
  %400 = load i32, i32* %399, align 4, !dbg !12709
  %401 = shl i32 %400, 8, !dbg !12709
  %402 = add i32 %401, -256, !dbg !12709
  %403 = or i32 %402, %398, !dbg !12709
  store volatile i32 %403, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12709
  %404 = load i32, i32* %3, align 4, !dbg !12710
  br label %405, !dbg !12712

405:                                              ; preds = %383, %379, %376
  %406 = phi i32 [ %404, %383 ], [ %369, %379 ], [ %369, %376 ], !dbg !12710
  %407 = and i32 %406, 256, !dbg !12713
  %408 = icmp eq i32 %407, 0, !dbg !12714
  br i1 %408, label %429, label %409, !dbg !12715

409:                                              ; preds = %405
  %410 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 14, !dbg !12716
  %411 = load i32, i32* %410, align 4, !dbg !12716
  %412 = icmp eq i32 %411, 134217728, !dbg !12717
  br i1 %412, label %413, label %429, !dbg !12718

413:                                              ; preds = %409
  %414 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12719
  %415 = and i32 %414, 251658240, !dbg !12721
  call void @llvm.dbg.value(metadata i32 %415, metadata !12412, metadata !DIExpression()), !dbg !12419
  %416 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 0, !dbg !12722
  %417 = load i32, i32* %416, align 4, !dbg !12722
  %418 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 1, !dbg !12722
  %419 = load i32, i32* %418, align 4, !dbg !12722
  %420 = shl i32 %419, 6, !dbg !12722
  %421 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 2, !dbg !12722
  %422 = load i32, i32* %421, align 4, !dbg !12722
  %423 = shl i32 %422, 15, !dbg !12722
  %424 = add i32 %423, -65536, !dbg !12722
  %425 = and i32 %424, -65536, !dbg !12722
  %426 = or i32 %415, %417, !dbg !12722
  %427 = or i32 %426, %420, !dbg !12722
  %428 = or i32 %427, %425, !dbg !12722
  store volatile i32 %428, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12722
  br label %429, !dbg !12723

429:                                              ; preds = %413, %409, %405
  store volatile i32 1, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !12724
  %430 = tail call i32 @HAL_GetTick() #25, !dbg !12725
  call void @llvm.dbg.value(metadata i32 %430, metadata !12406, metadata !DIExpression()), !dbg !12419
  br label %431, !dbg !12726

431:                                              ; preds = %435, %429
  %432 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12727
  %433 = and i32 %432, 536870912, !dbg !12728
  %434 = icmp eq i32 %433, 0, !dbg !12728
  br i1 %434, label %435, label %439, !dbg !12726

435:                                              ; preds = %431
  %436 = tail call i32 @HAL_GetTick() #25, !dbg !12729
  %437 = sub i32 %436, %430, !dbg !12732
  %438 = icmp ugt i32 %437, 2, !dbg !12733
  br i1 %438, label %439, label %431, !dbg !12734, !llvm.loop !12735

439:                                              ; preds = %87, %112, %215, %352, %364, %431, %435, %356
  %440 = phi i32 [ 0, %356 ], [ 0, %431 ], [ 3, %435 ], [ 3, %364 ], [ 3, %352 ], [ 3, %215 ], [ 3, %112 ], [ 3, %87 ], !dbg !12419
  ret i32 %440, !dbg !12737
}

; Function Attrs: optsize
declare !dbg !12738 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCCEx_GetPeriphCLKConfig(%struct.RCC_PeriphCLKInitTypeDef* noundef writeonly %0) local_unnamed_addr #5 !dbg !12740 {
  call void @llvm.dbg.value(metadata %struct.RCC_PeriphCLKInitTypeDef* %0, metadata !12744, metadata !DIExpression()), !dbg !12746
  %2 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 0, !dbg !12747
  store i32 2047, i32* %2, align 4, !dbg !12748
  %3 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12749
  %4 = and i32 %3, 63, !dbg !12750
  %5 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !12751
  store i32 %4, i32* %5, align 4, !dbg !12752
  %6 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12753
  %7 = lshr i32 %6, 6, !dbg !12754
  %8 = and i32 %7, 511, !dbg !12754
  %9 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !12755
  store i32 %8, i32* %9, align 4, !dbg !12756
  %10 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12757
  %11 = lshr i32 %10, 15, !dbg !12758
  %12 = and i32 %11, 6, !dbg !12758
  %13 = add nuw nsw i32 %12, 2, !dbg !12758
  %14 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 2, !dbg !12759
  store i32 %13, i32* %14, align 4, !dbg !12760
  %15 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12761
  %16 = lshr i32 %15, 24, !dbg !12762
  %17 = and i32 %16, 15, !dbg !12762
  %18 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 3, !dbg !12763
  store i32 %17, i32* %18, align 4, !dbg !12764
  %19 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12765
  %20 = lshr i32 %19, 28, !dbg !12766
  %21 = and i32 %20, 7, !dbg !12766
  %22 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 4, !dbg !12767
  store i32 %21, i32* %22, align 4, !dbg !12768
  %23 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12769
  %24 = and i32 %23, 63, !dbg !12770
  %25 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 0, !dbg !12771
  store i32 %24, i32* %25, align 4, !dbg !12772
  %26 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12773
  %27 = lshr i32 %26, 6, !dbg !12774
  %28 = and i32 %27, 511, !dbg !12774
  %29 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 1, !dbg !12775
  store i32 %28, i32* %29, align 4, !dbg !12776
  %30 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12777
  %31 = lshr i32 %30, 15, !dbg !12778
  %32 = and i32 %31, 6, !dbg !12778
  %33 = add nuw nsw i32 %32, 2, !dbg !12778
  %34 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 2, !dbg !12779
  store i32 %33, i32* %34, align 4, !dbg !12780
  %35 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12781
  %36 = lshr i32 %35, 24, !dbg !12782
  %37 = and i32 %36, 15, !dbg !12782
  %38 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 3, !dbg !12783
  store i32 %37, i32* %38, align 4, !dbg !12784
  %39 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12785
  %40 = and i32 %39, 31, !dbg !12786
  %41 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 3, !dbg !12787
  store i32 %40, i32* %41, align 4, !dbg !12788
  %42 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12789
  %43 = lshr i32 %42, 8, !dbg !12790
  %44 = and i32 %43, 31, !dbg !12790
  %45 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 4, !dbg !12791
  store i32 %44, i32* %45, align 4, !dbg !12792
  %46 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12793
  %47 = and i32 %46, 3145728, !dbg !12793
  %48 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !12794
  store i32 %47, i32* %48, align 4, !dbg !12795
  %49 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12796
  %50 = and i32 %49, 12582912, !dbg !12796
  %51 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !12797
  store i32 %50, i32* %51, align 4, !dbg !12798
  %52 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12799
  %53 = and i32 %52, 100663296, !dbg !12799
  %54 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 7, !dbg !12800
  store i32 %53, i32* %54, align 4, !dbg !12801
  %55 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12802
  %56 = and i32 %55, 402653184, !dbg !12802
  %57 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 8, !dbg !12803
  store i32 %56, i32* %57, align 4, !dbg !12804
  %58 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12805
  %59 = and i32 %58, 2031616, !dbg !12806
  call void @llvm.dbg.value(metadata i32 %59, metadata !12745, metadata !DIExpression()), !dbg !12746
  %60 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12807
  %61 = and i32 %60, 768, !dbg !12808
  %62 = or i32 %61, %59, !dbg !12809
  %63 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 9, !dbg !12810
  store i32 %62, i32* %63, align 4, !dbg !12811
  %64 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12812
  %65 = and i32 %64, 67108864, !dbg !12812
  %66 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 11, !dbg !12813
  store i32 %65, i32* %66, align 4, !dbg !12814
  %67 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12815
  %68 = and i32 %67, 12582912, !dbg !12815
  %69 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 12, !dbg !12816
  store i32 %68, i32* %69, align 4, !dbg !12817
  %70 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12818
  %71 = and i32 %70, 134217728, !dbg !12818
  %72 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 14, !dbg !12819
  store i32 %71, i32* %72, align 4, !dbg !12820
  %73 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12821
  %74 = and i32 %73, 268435456, !dbg !12821
  %75 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 10, !dbg !12822
  store i32 %74, i32* %75, align 4, !dbg !12823
  %76 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12824
  %77 = and i32 %76, 536870912, !dbg !12824
  %78 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 13, !dbg !12825
  store i32 %77, i32* %78, align 4, !dbg !12826
  %79 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12827
  %80 = lshr i32 %79, 24, !dbg !12829
  %81 = trunc i32 %80 to i8, !dbg !12829
  %82 = and i8 %81, 1, !dbg !12829
  %83 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 15, !dbg !12830
  store i8 %82, i8* %83, align 4, !dbg !12832
  ret void, !dbg !12833
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCCEx_GetPeriphCLKFreq(i32 noundef %0) local_unnamed_addr #5 !dbg !12834 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12836, metadata !DIExpression()), !dbg !12843
  call void @llvm.dbg.value(metadata i32 0, metadata !12837, metadata !DIExpression()), !dbg !12843
  call void @llvm.dbg.value(metadata i32 0, metadata !12838, metadata !DIExpression()), !dbg !12843
  call void @llvm.dbg.value(metadata i32 0, metadata !12839, metadata !DIExpression()), !dbg !12843
  call void @llvm.dbg.value(metadata i32 0, metadata !12840, metadata !DIExpression()), !dbg !12843
  call void @llvm.dbg.value(metadata i32 0, metadata !12841, metadata !DIExpression()), !dbg !12843
  call void @llvm.dbg.value(metadata i32 0, metadata !12842, metadata !DIExpression()), !dbg !12843
  switch i32 %0, label %123 [
    i32 4, label %2
    i32 8, label %2
    i32 1, label %57
    i32 2, label %90
  ], !dbg !12844

2:                                                ; preds = %1, %1
  %3 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12845
  call void @llvm.dbg.value(metadata i32 %3, metadata !12840, metadata !DIExpression()), !dbg !12843
  call void @llvm.dbg.value(metadata i32 %3, metadata !12840, metadata !DIExpression(DW_OP_constu, 15728640, DW_OP_and, DW_OP_stack_value)), !dbg !12843
  %4 = lshr i32 %3, 20, !dbg !12848
  %5 = and i32 %4, 15, !dbg !12848
  switch i32 %5, label %123 [
    i32 0, label %6
    i32 1, label %24
    i32 4, label %24
    i32 2, label %41
    i32 8, label %41
    i32 3, label %54
    i32 12, label %55
  ], !dbg !12848

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12849
  call void @llvm.dbg.value(metadata i32 undef, metadata !12839, metadata !DIExpression()), !dbg !12843
  call void @llvm.dbg.value(metadata i32 undef, metadata !12839, metadata !DIExpression()), !dbg !12843
  %8 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12853
  %9 = and i32 %8, 63, !dbg !12853
  %10 = udiv i32 16000000, %9, !dbg !12853
  call void @llvm.dbg.value(metadata i32 %10, metadata !12839, metadata !DIExpression()), !dbg !12843
  %11 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12854
  %12 = lshr i32 %11, 24, !dbg !12855
  %13 = and i32 %12, 15, !dbg !12855
  call void @llvm.dbg.value(metadata i32 %13, metadata !12837, metadata !DIExpression()), !dbg !12843
  %14 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12856
  %15 = lshr i32 %14, 6, !dbg !12857
  %16 = and i32 %15, 511, !dbg !12857
  %17 = mul i32 %16, %10, !dbg !12858
  %18 = udiv i32 %17, %13, !dbg !12859
  call void @llvm.dbg.value(metadata i32 %18, metadata !12838, metadata !DIExpression()), !dbg !12843
  %19 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12860
  %20 = lshr i32 %19, 8, !dbg !12861
  %21 = and i32 %20, 31, !dbg !12861
  %22 = add nuw nsw i32 %21, 1, !dbg !12862
  call void @llvm.dbg.value(metadata i32 %22, metadata !12837, metadata !DIExpression()), !dbg !12843
  %23 = udiv i32 %18, %22, !dbg !12863
  call void @llvm.dbg.value(metadata i32 %23, metadata !12838, metadata !DIExpression()), !dbg !12843
  br label %123, !dbg !12864

24:                                               ; preds = %2, %2
  %25 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12865
  call void @llvm.dbg.value(metadata i32 undef, metadata !12839, metadata !DIExpression()), !dbg !12843
  call void @llvm.dbg.value(metadata i32 undef, metadata !12839, metadata !DIExpression()), !dbg !12843
  %26 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12868
  %27 = and i32 %26, 63, !dbg !12868
  %28 = udiv i32 16000000, %27, !dbg !12868
  call void @llvm.dbg.value(metadata i32 %28, metadata !12839, metadata !DIExpression()), !dbg !12843
  %29 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12869
  %30 = lshr i32 %29, 24, !dbg !12870
  %31 = and i32 %30, 15, !dbg !12870
  call void @llvm.dbg.value(metadata i32 %31, metadata !12837, metadata !DIExpression()), !dbg !12843
  %32 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12871
  %33 = lshr i32 %32, 6, !dbg !12872
  %34 = and i32 %33, 511, !dbg !12872
  %35 = mul i32 %34, %28, !dbg !12873
  %36 = udiv i32 %35, %31, !dbg !12874
  call void @llvm.dbg.value(metadata i32 %36, metadata !12838, metadata !DIExpression()), !dbg !12843
  %37 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12875
  %38 = and i32 %37, 31, !dbg !12876
  %39 = add nuw nsw i32 %38, 1, !dbg !12877
  call void @llvm.dbg.value(metadata i32 %39, metadata !12837, metadata !DIExpression()), !dbg !12843
  %40 = udiv i32 %36, %39, !dbg !12878
  call void @llvm.dbg.value(metadata i32 %40, metadata !12838, metadata !DIExpression()), !dbg !12843
  br label %123, !dbg !12879

41:                                               ; preds = %2, %2
  %42 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12880
  call void @llvm.dbg.value(metadata i32 undef, metadata !12839, metadata !DIExpression()), !dbg !12843
  call void @llvm.dbg.value(metadata i32 undef, metadata !12839, metadata !DIExpression()), !dbg !12843
  %43 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12883
  %44 = and i32 %43, 63, !dbg !12883
  %45 = udiv i32 16000000, %44, !dbg !12883
  call void @llvm.dbg.value(metadata i32 %45, metadata !12839, metadata !DIExpression()), !dbg !12843
  %46 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12884
  %47 = lshr i32 %46, 28, !dbg !12885
  %48 = and i32 %47, 7, !dbg !12885
  call void @llvm.dbg.value(metadata i32 %48, metadata !12837, metadata !DIExpression()), !dbg !12843
  %49 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12886
  %50 = lshr i32 %49, 6, !dbg !12887
  %51 = and i32 %50, 511, !dbg !12887
  %52 = mul i32 %51, %45, !dbg !12888
  %53 = udiv i32 %52, %48, !dbg !12889
  call void @llvm.dbg.value(metadata i32 %53, metadata !12838, metadata !DIExpression()), !dbg !12843
  br label %123, !dbg !12890

54:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 12288000, metadata !12838, metadata !DIExpression()), !dbg !12843
  br label %123, !dbg !12891

55:                                               ; preds = %2
  %56 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12893
  call void @llvm.dbg.value(metadata i32 16000000, metadata !12838, metadata !DIExpression()), !dbg !12843
  call void @llvm.dbg.value(metadata i32 16000000, metadata !12838, metadata !DIExpression()), !dbg !12843
  br label %123

57:                                               ; preds = %1
  %58 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12896
  call void @llvm.dbg.value(metadata i32 %58, metadata !12841, metadata !DIExpression(DW_OP_constu, 100663296, DW_OP_and, DW_OP_stack_value)), !dbg !12843
  %59 = lshr i32 %58, 25, !dbg !12898
  %60 = and i32 %59, 3, !dbg !12898
  switch i32 %60, label %89 [
    i32 1, label %123
    i32 0, label %61
    i32 2, label %74
    i32 3, label %87
  ], !dbg !12898

61:                                               ; preds = %57
  %62 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12899
  call void @llvm.dbg.value(metadata i32 undef, metadata !12839, metadata !DIExpression()), !dbg !12843
  call void @llvm.dbg.value(metadata i32 undef, metadata !12839, metadata !DIExpression()), !dbg !12843
  %63 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12903
  %64 = and i32 %63, 63, !dbg !12903
  %65 = udiv i32 16000000, %64, !dbg !12903
  call void @llvm.dbg.value(metadata i32 %65, metadata !12839, metadata !DIExpression()), !dbg !12843
  %66 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12904
  %67 = lshr i32 %66, 6, !dbg !12905
  %68 = and i32 %67, 511, !dbg !12905
  %69 = mul i32 %68, %65, !dbg !12906
  call void @llvm.dbg.value(metadata i32 %69, metadata !12842, metadata !DIExpression()), !dbg !12843
  %70 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12907
  %71 = lshr i32 %70, 28, !dbg !12908
  %72 = and i32 %71, 7, !dbg !12908
  %73 = udiv i32 %69, %72, !dbg !12909
  call void @llvm.dbg.value(metadata i32 %73, metadata !12838, metadata !DIExpression()), !dbg !12843
  br label %123, !dbg !12910

74:                                               ; preds = %57
  %75 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12911
  call void @llvm.dbg.value(metadata i32 undef, metadata !12839, metadata !DIExpression()), !dbg !12843
  call void @llvm.dbg.value(metadata i32 undef, metadata !12839, metadata !DIExpression()), !dbg !12843
  %76 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12914
  %77 = and i32 %76, 63, !dbg !12914
  %78 = udiv i32 16000000, %77, !dbg !12914
  call void @llvm.dbg.value(metadata i32 %78, metadata !12839, metadata !DIExpression()), !dbg !12843
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12915
  %80 = lshr i32 %79, 6, !dbg !12916
  %81 = and i32 %80, 511, !dbg !12916
  %82 = mul i32 %81, %78, !dbg !12917
  call void @llvm.dbg.value(metadata i32 %82, metadata !12842, metadata !DIExpression()), !dbg !12843
  %83 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12918
  %84 = lshr i32 %83, 28, !dbg !12919
  %85 = and i32 %84, 7, !dbg !12919
  %86 = udiv i32 %82, %85, !dbg !12920
  call void @llvm.dbg.value(metadata i32 %86, metadata !12838, metadata !DIExpression()), !dbg !12843
  br label %123, !dbg !12921

87:                                               ; preds = %57
  %88 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12922
  call void @llvm.dbg.value(metadata i32 16000000, metadata !12838, metadata !DIExpression()), !dbg !12843
  call void @llvm.dbg.value(metadata i32 16000000, metadata !12838, metadata !DIExpression()), !dbg !12843
  br label %123

89:                                               ; preds = %57
  unreachable

90:                                               ; preds = %1
  %91 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12925
  call void @llvm.dbg.value(metadata i32 %91, metadata !12841, metadata !DIExpression(DW_OP_constu, 402653184, DW_OP_and, DW_OP_stack_value)), !dbg !12843
  %92 = lshr i32 %91, 27, !dbg !12927
  %93 = and i32 %92, 3, !dbg !12927
  switch i32 %93, label %122 [
    i32 1, label %123
    i32 0, label %94
    i32 2, label %107
    i32 3, label %120
  ], !dbg !12927

94:                                               ; preds = %90
  %95 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12928
  call void @llvm.dbg.value(metadata i32 undef, metadata !12839, metadata !DIExpression()), !dbg !12843
  call void @llvm.dbg.value(metadata i32 undef, metadata !12839, metadata !DIExpression()), !dbg !12843
  %96 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12932
  %97 = and i32 %96, 63, !dbg !12932
  %98 = udiv i32 16000000, %97, !dbg !12932
  call void @llvm.dbg.value(metadata i32 %98, metadata !12839, metadata !DIExpression()), !dbg !12843
  %99 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12933
  %100 = lshr i32 %99, 6, !dbg !12934
  %101 = and i32 %100, 511, !dbg !12934
  %102 = mul i32 %101, %98, !dbg !12935
  call void @llvm.dbg.value(metadata i32 %102, metadata !12842, metadata !DIExpression()), !dbg !12843
  %103 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12936
  %104 = lshr i32 %103, 28, !dbg !12937
  %105 = and i32 %104, 7, !dbg !12937
  %106 = udiv i32 %102, %105, !dbg !12938
  call void @llvm.dbg.value(metadata i32 %106, metadata !12838, metadata !DIExpression()), !dbg !12843
  br label %123, !dbg !12939

107:                                              ; preds = %90
  %108 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12940
  call void @llvm.dbg.value(metadata i32 undef, metadata !12839, metadata !DIExpression()), !dbg !12843
  call void @llvm.dbg.value(metadata i32 undef, metadata !12839, metadata !DIExpression()), !dbg !12843
  %109 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12943
  %110 = and i32 %109, 63, !dbg !12943
  %111 = udiv i32 16000000, %110, !dbg !12943
  call void @llvm.dbg.value(metadata i32 %111, metadata !12839, metadata !DIExpression()), !dbg !12843
  %112 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12944
  %113 = lshr i32 %112, 6, !dbg !12945
  %114 = and i32 %113, 511, !dbg !12945
  %115 = mul i32 %114, %111, !dbg !12946
  call void @llvm.dbg.value(metadata i32 %115, metadata !12842, metadata !DIExpression()), !dbg !12843
  %116 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12947
  %117 = lshr i32 %116, 28, !dbg !12948
  %118 = and i32 %117, 7, !dbg !12948
  %119 = udiv i32 %115, %118, !dbg !12949
  call void @llvm.dbg.value(metadata i32 %119, metadata !12838, metadata !DIExpression()), !dbg !12843
  br label %123, !dbg !12950

120:                                              ; preds = %90
  %121 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12951
  call void @llvm.dbg.value(metadata i32 16000000, metadata !12838, metadata !DIExpression()), !dbg !12843
  call void @llvm.dbg.value(metadata i32 16000000, metadata !12838, metadata !DIExpression()), !dbg !12843
  br label %123

122:                                              ; preds = %90
  unreachable

123:                                              ; preds = %120, %90, %87, %57, %55, %94, %107, %61, %74, %6, %24, %41, %54, %2, %1
  %124 = phi i32 [ 0, %1 ], [ %119, %107 ], [ %106, %94 ], [ %86, %74 ], [ %73, %61 ], [ 0, %2 ], [ 12288000, %54 ], [ %53, %41 ], [ %40, %24 ], [ %23, %6 ], [ 16000000, %55 ], [ 12288000, %57 ], [ 16000000, %87 ], [ 12288000, %90 ], [ 16000000, %120 ], !dbg !12843
  call void @llvm.dbg.value(metadata i32 %124, metadata !12838, metadata !DIExpression()), !dbg !12843
  ret i32 %124, !dbg !12954
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCCEx_SelectLSEMode(i8 noundef zeroext %0) local_unnamed_addr #15 !dbg !12955 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !12959, metadata !DIExpression()), !dbg !12960
  %2 = icmp eq i8 %0, 1, !dbg !12961
  %3 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12963
  %4 = and i32 %3, -9, !dbg !12964
  %5 = select i1 %2, i32 8, i32 0, !dbg !12964
  %6 = or i32 %4, %5, !dbg !12964
  store volatile i32 %6, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12963
  ret void, !dbg !12965
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_EnablePLLI2S(%struct.rtio_spsc* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !12966 {
  call void @llvm.dbg.value(metadata %struct.rtio_spsc* %0, metadata !12971, metadata !DIExpression()), !dbg !12973
  store volatile i32 0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !12974
  %2 = tail call i32 @HAL_GetTick() #25, !dbg !12975
  call void @llvm.dbg.value(metadata i32 %2, metadata !12972, metadata !DIExpression()), !dbg !12973
  br label %3, !dbg !12976

3:                                                ; preds = %7, %1
  %4 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12977
  %5 = and i32 %4, 134217728, !dbg !12977
  %6 = icmp eq i32 %5, 0, !dbg !12977
  br i1 %6, label %11, label %7, !dbg !12976

7:                                                ; preds = %3
  %8 = tail call i32 @HAL_GetTick() #25, !dbg !12978
  %9 = sub i32 %8, %2, !dbg !12981
  %10 = icmp ugt i32 %9, 2, !dbg !12982
  br i1 %10, label %41, label %3, !dbg !12983, !llvm.loop !12984

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %0, i32 0, i32 0, !dbg !12986
  %13 = load i32, i32* %12, align 4, !dbg !12986
  %14 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %0, i32 0, i32 1, !dbg !12986
  %15 = load i32, i32* %14, align 4, !dbg !12986
  %16 = shl i32 %15, 6, !dbg !12986
  %17 = or i32 %16, %13, !dbg !12986
  %18 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %0, i32 0, i32 2, !dbg !12986
  %19 = load i32, i32* %18, align 4, !dbg !12986
  %20 = shl i32 %19, 15, !dbg !12986
  %21 = add i32 %20, -65536, !dbg !12986
  %22 = and i32 %21, -65536, !dbg !12986
  %23 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %0, i32 0, i32 3, !dbg !12986
  %24 = load i32, i32* %23, align 4, !dbg !12986
  %25 = shl i32 %24, 24, !dbg !12986
  %26 = getelementptr inbounds %struct.rtio_spsc, %struct.rtio_spsc* %0, i32 0, i32 4, !dbg !12986
  %27 = load i32, i32* %26, align 4, !dbg !12986
  %28 = shl i32 %27, 28, !dbg !12986
  %29 = or i32 %17, %25, !dbg !12986
  %30 = or i32 %29, %22, !dbg !12986
  %31 = or i32 %30, %28, !dbg !12986
  store volatile i32 %31, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12986
  store volatile i32 1, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !12987
  %32 = tail call i32 @HAL_GetTick() #25, !dbg !12988
  call void @llvm.dbg.value(metadata i32 %32, metadata !12972, metadata !DIExpression()), !dbg !12973
  br label %33, !dbg !12989

33:                                               ; preds = %37, %11
  %34 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12990
  %35 = and i32 %34, 134217728, !dbg !12991
  %36 = icmp eq i32 %35, 0, !dbg !12991
  br i1 %36, label %37, label %41, !dbg !12989

37:                                               ; preds = %33
  %38 = tail call i32 @HAL_GetTick() #25, !dbg !12992
  %39 = sub i32 %38, %32, !dbg !12995
  %40 = icmp ugt i32 %39, 2, !dbg !12996
  br i1 %40, label %41, label %33, !dbg !12997, !llvm.loop !12998

41:                                               ; preds = %7, %33, %37
  %42 = phi i32 [ 0, %33 ], [ 3, %37 ], [ 3, %7 ], !dbg !12973
  ret i32 %42, !dbg !13000
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_DisablePLLI2S() local_unnamed_addr #1 !dbg !13001 {
  store volatile i32 0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !13006
  %1 = tail call i32 @HAL_GetTick() #25, !dbg !13007
  call void @llvm.dbg.value(metadata i32 %1, metadata !13005, metadata !DIExpression()), !dbg !13008
  br label %2, !dbg !13009

2:                                                ; preds = %6, %0
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13010
  %4 = and i32 %3, 134217728, !dbg !13010
  %5 = icmp eq i32 %4, 0, !dbg !13011
  br i1 %5, label %10, label %6, !dbg !13009

6:                                                ; preds = %2
  %7 = tail call i32 @HAL_GetTick() #25, !dbg !13012
  %8 = sub i32 %7, %1, !dbg !13015
  %9 = icmp ugt i32 %8, 2, !dbg !13016
  br i1 %9, label %10, label %2, !dbg !13017, !llvm.loop !13018

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 3, %6 ], [ 0, %2 ], !dbg !13008
  ret i32 %11, !dbg !13020
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_EnablePLLSAI(%struct.RCC_PLLSAIInitTypeDef* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !13021 {
  call void @llvm.dbg.value(metadata %struct.RCC_PLLSAIInitTypeDef* %0, metadata !13026, metadata !DIExpression()), !dbg !13028
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !13029
  %2 = tail call i32 @HAL_GetTick() #25, !dbg !13030
  call void @llvm.dbg.value(metadata i32 %2, metadata !13027, metadata !DIExpression()), !dbg !13028
  br label %3, !dbg !13031

3:                                                ; preds = %7, %1
  %4 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13032
  %5 = and i32 %4, 536870912, !dbg !13032
  %6 = icmp eq i32 %5, 0, !dbg !13032
  br i1 %6, label %11, label %7, !dbg !13031

7:                                                ; preds = %3
  %8 = tail call i32 @HAL_GetTick() #25, !dbg !13033
  %9 = sub i32 %8, %2, !dbg !13036
  %10 = icmp ugt i32 %9, 2, !dbg !13037
  br i1 %10, label %37, label %3, !dbg !13038, !llvm.loop !13039

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 0, !dbg !13041
  %13 = load i32, i32* %12, align 4, !dbg !13041
  %14 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 1, !dbg !13041
  %15 = load i32, i32* %14, align 4, !dbg !13041
  %16 = shl i32 %15, 6, !dbg !13041
  %17 = or i32 %16, %13, !dbg !13041
  %18 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 2, !dbg !13041
  %19 = load i32, i32* %18, align 4, !dbg !13041
  %20 = shl i32 %19, 15, !dbg !13041
  %21 = add i32 %20, -65536, !dbg !13041
  %22 = and i32 %21, -65536, !dbg !13041
  %23 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 3, !dbg !13041
  %24 = load i32, i32* %23, align 4, !dbg !13041
  %25 = shl i32 %24, 24, !dbg !13041
  %26 = or i32 %17, %25, !dbg !13041
  %27 = or i32 %26, %22, !dbg !13041
  store volatile i32 %27, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !13041
  store volatile i32 1, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !13042
  %28 = tail call i32 @HAL_GetTick() #25, !dbg !13043
  call void @llvm.dbg.value(metadata i32 %28, metadata !13027, metadata !DIExpression()), !dbg !13028
  br label %29, !dbg !13044

29:                                               ; preds = %33, %11
  %30 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13045
  %31 = and i32 %30, 536870912, !dbg !13046
  %32 = icmp eq i32 %31, 0, !dbg !13046
  br i1 %32, label %33, label %37, !dbg !13044

33:                                               ; preds = %29
  %34 = tail call i32 @HAL_GetTick() #25, !dbg !13047
  %35 = sub i32 %34, %28, !dbg !13050
  %36 = icmp ugt i32 %35, 2, !dbg !13051
  br i1 %36, label %37, label %29, !dbg !13052, !llvm.loop !13053

37:                                               ; preds = %7, %29, %33
  %38 = phi i32 [ 0, %29 ], [ 3, %33 ], [ 3, %7 ], !dbg !13028
  ret i32 %38, !dbg !13055
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_DisablePLLSAI() local_unnamed_addr #1 !dbg !13056 {
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !13059
  %1 = tail call i32 @HAL_GetTick() #25, !dbg !13060
  call void @llvm.dbg.value(metadata i32 %1, metadata !13058, metadata !DIExpression()), !dbg !13061
  br label %2, !dbg !13062

2:                                                ; preds = %6, %0
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13063
  %4 = and i32 %3, 536870912, !dbg !13063
  %5 = icmp eq i32 %4, 0, !dbg !13063
  br i1 %5, label %10, label %6, !dbg !13062

6:                                                ; preds = %2
  %7 = tail call i32 @HAL_GetTick() #25, !dbg !13064
  %8 = sub i32 %7, %1, !dbg !13067
  %9 = icmp ugt i32 %8, 2, !dbg !13068
  br i1 %9, label %10, label %2, !dbg !13069, !llvm.loop !13070

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 3, %6 ], [ 0, %2 ], !dbg !13061
  ret i32 %11, !dbg !13072
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #5 !dbg !13073 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13075, metadata !DIExpression()), !dbg !13080
  call void @llvm.dbg.value(metadata i32 0, metadata !13076, metadata !DIExpression()), !dbg !13080
  call void @llvm.dbg.value(metadata i32 0, metadata !13077, metadata !DIExpression()), !dbg !13080
  call void @llvm.dbg.value(metadata i32 0, metadata !13078, metadata !DIExpression()), !dbg !13080
  call void @llvm.dbg.value(metadata i32 0, metadata !13079, metadata !DIExpression()), !dbg !13080
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13081
  %2 = lshr i32 %1, 2, !dbg !13082
  %3 = and i32 %2, 3, !dbg !13082
  switch i32 %3, label %37 [
    i32 0, label %38
    i32 1, label %38
    i32 2, label %4
    i32 3, label %21
  ], !dbg !13082

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13083
  %6 = and i32 %5, 63, !dbg !13086
  call void @llvm.dbg.value(metadata i32 %6, metadata !13075, metadata !DIExpression()), !dbg !13080
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13087
  %8 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13089
  %9 = lshr i32 %8, 6, !dbg !13089
  %10 = and i32 %9, 511, !dbg !13089
  %11 = zext i32 %10 to i64, !dbg !13089
  %12 = mul nuw nsw i64 %11, 16000000, !dbg !13089
  %13 = zext i32 %6 to i64, !dbg !13089
  %14 = udiv i64 %12, %13, !dbg !13089
  %15 = trunc i64 %14 to i32, !dbg !13089
  call void @llvm.dbg.value(metadata i32 %15, metadata !13076, metadata !DIExpression()), !dbg !13080
  call void @llvm.dbg.value(metadata i32 %15, metadata !13076, metadata !DIExpression()), !dbg !13080
  call void @llvm.dbg.value(metadata i32 %15, metadata !13076, metadata !DIExpression()), !dbg !13080
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13090
  %17 = lshr i32 %16, 15, !dbg !13091
  %18 = and i32 %17, 6, !dbg !13091
  %19 = add nuw nsw i32 %18, 2, !dbg !13091
  call void @llvm.dbg.value(metadata i32 %19, metadata !13077, metadata !DIExpression()), !dbg !13080
  %20 = udiv i32 %15, %19, !dbg !13092
  call void @llvm.dbg.value(metadata i32 %20, metadata !13079, metadata !DIExpression()), !dbg !13080
  br label %38, !dbg !13093

21:                                               ; preds = %0
  %22 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13094
  %23 = and i32 %22, 63, !dbg !13096
  call void @llvm.dbg.value(metadata i32 %23, metadata !13075, metadata !DIExpression()), !dbg !13080
  %24 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13097
  %25 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13099
  %26 = lshr i32 %25, 6, !dbg !13099
  %27 = and i32 %26, 511, !dbg !13099
  %28 = zext i32 %27 to i64, !dbg !13099
  %29 = mul nuw nsw i64 %28, 16000000, !dbg !13099
  %30 = zext i32 %23 to i64, !dbg !13099
  %31 = udiv i64 %29, %30, !dbg !13099
  %32 = trunc i64 %31 to i32, !dbg !13099
  call void @llvm.dbg.value(metadata i32 %32, metadata !13076, metadata !DIExpression()), !dbg !13080
  call void @llvm.dbg.value(metadata i32 %32, metadata !13076, metadata !DIExpression()), !dbg !13080
  call void @llvm.dbg.value(metadata i32 %32, metadata !13076, metadata !DIExpression()), !dbg !13080
  %33 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13100
  %34 = lshr i32 %33, 28, !dbg !13101
  %35 = and i32 %34, 7, !dbg !13101
  call void @llvm.dbg.value(metadata i32 %35, metadata !13078, metadata !DIExpression()), !dbg !13080
  %36 = udiv i32 %32, %35, !dbg !13102
  call void @llvm.dbg.value(metadata i32 %36, metadata !13079, metadata !DIExpression()), !dbg !13080
  br label %38, !dbg !13103

37:                                               ; preds = %0
  unreachable

38:                                               ; preds = %0, %0, %21, %4
  %39 = phi i32 [ %36, %21 ], [ %20, %4 ], [ 16000000, %0 ], [ 16000000, %0 ], !dbg !13104
  call void @llvm.dbg.value(metadata i32 %39, metadata !13079, metadata !DIExpression()), !dbg !13080
  ret i32 %39, !dbg !13105
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !13106 {
  %1 = tail call i32 @HAL_GetTick() #25, !dbg !13109
  call void @llvm.dbg.value(metadata i32 %1, metadata !13108, metadata !DIExpression()), !dbg !13110
  %2 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13111
  %3 = or i32 %2, 1, !dbg !13111
  store volatile i32 %3, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13111
  br label %4, !dbg !13112

4:                                                ; preds = %8, %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13113
  %6 = and i32 %5, 2, !dbg !13113
  %7 = icmp eq i32 %6, 0, !dbg !13114
  br i1 %7, label %8, label %12, !dbg !13112

8:                                                ; preds = %4
  %9 = tail call i32 @HAL_GetTick() #25, !dbg !13115
  %10 = sub i32 %9, %1, !dbg !13118
  %11 = icmp ugt i32 %10, 2, !dbg !13119
  br i1 %11, label %89, label %4, !dbg !13120, !llvm.loop !13121

12:                                               ; preds = %4
  %13 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13123
  %14 = or i32 %13, 128, !dbg !13123
  store volatile i32 %14, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13123
  %15 = tail call i32 @HAL_GetTick() #25, !dbg !13124
  call void @llvm.dbg.value(metadata i32 %15, metadata !13108, metadata !DIExpression()), !dbg !13110
  store volatile i32 0, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13125
  br label %16, !dbg !13126

16:                                               ; preds = %21, %12
  %17 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13127
  %18 = and i32 %17, 12, !dbg !13127
  %19 = icmp eq i32 %18, 0, !dbg !13128
  %20 = tail call i32 @HAL_GetTick() #25, !dbg !13110
  br i1 %19, label %24, label %21, !dbg !13126

21:                                               ; preds = %16
  %22 = sub i32 %20, %15, !dbg !13129
  %23 = icmp ugt i32 %22, 5000, !dbg !13132
  br i1 %23, label %89, label %16, !dbg !13133, !llvm.loop !13134

24:                                               ; preds = %16
  call void @llvm.dbg.value(metadata i32 %20, metadata !13108, metadata !DIExpression()), !dbg !13110
  %25 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13136
  %26 = and i32 %25, -851969, !dbg !13136
  store volatile i32 %26, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13136
  br label %27, !dbg !13137

27:                                               ; preds = %32, %24
  %28 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13138
  %29 = and i32 %28, 131072, !dbg !13138
  %30 = icmp eq i32 %29, 0, !dbg !13139
  %31 = tail call i32 @HAL_GetTick() #25, !dbg !13110
  br i1 %30, label %35, label %32, !dbg !13137

32:                                               ; preds = %27
  %33 = sub i32 %31, %20, !dbg !13140
  %34 = icmp ugt i32 %33, 100, !dbg !13143
  br i1 %34, label %89, label %27, !dbg !13144, !llvm.loop !13145

35:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %31, metadata !13108, metadata !DIExpression()), !dbg !13110
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13147
  %37 = and i32 %36, -16777217, !dbg !13147
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13147
  br label %38, !dbg !13148

38:                                               ; preds = %43, %35
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13149
  %40 = and i32 %39, 33554432, !dbg !13149
  %41 = icmp eq i32 %40, 0, !dbg !13150
  %42 = tail call i32 @HAL_GetTick() #25, !dbg !13110
  br i1 %41, label %46, label %43, !dbg !13148

43:                                               ; preds = %38
  %44 = sub i32 %42, %31, !dbg !13151
  %45 = icmp ugt i32 %44, 2, !dbg !13154
  br i1 %45, label %89, label %38, !dbg !13155, !llvm.loop !13156

46:                                               ; preds = %38
  call void @llvm.dbg.value(metadata i32 %42, metadata !13108, metadata !DIExpression()), !dbg !13110
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13158
  %48 = and i32 %47, -67108865, !dbg !13158
  store volatile i32 %48, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13158
  br label %49, !dbg !13159

49:                                               ; preds = %54, %46
  %50 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13160
  %51 = and i32 %50, 134217728, !dbg !13160
  %52 = icmp eq i32 %51, 0, !dbg !13161
  %53 = tail call i32 @HAL_GetTick() #25, !dbg !13110
  br i1 %52, label %57, label %54, !dbg !13159

54:                                               ; preds = %49
  %55 = sub i32 %53, %42, !dbg !13162
  %56 = icmp ugt i32 %55, 2, !dbg !13165
  br i1 %56, label %89, label %49, !dbg !13166, !llvm.loop !13167

57:                                               ; preds = %49
  call void @llvm.dbg.value(metadata i32 %53, metadata !13108, metadata !DIExpression()), !dbg !13110
  %58 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13169
  %59 = and i32 %58, -268435457, !dbg !13169
  store volatile i32 %59, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13169
  br label %60, !dbg !13170

60:                                               ; preds = %64, %57
  %61 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13171
  %62 = and i32 %61, 536870912, !dbg !13171
  %63 = icmp eq i32 %62, 0, !dbg !13172
  br i1 %63, label %68, label %64, !dbg !13170

64:                                               ; preds = %60
  %65 = tail call i32 @HAL_GetTick() #25, !dbg !13173
  %66 = sub i32 %65, %53, !dbg !13176
  %67 = icmp ugt i32 %66, 2, !dbg !13177
  br i1 %67, label %89, label %60, !dbg !13178, !llvm.loop !13179

68:                                               ; preds = %60
  store volatile i32 603992080, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13181
  store volatile i32 603992080, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13182
  store volatile i32 67121168, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !13183
  %69 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13184
  %70 = and i32 %69, -7937, !dbg !13184
  store volatile i32 %70, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13184
  %71 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13185
  %72 = and i32 %71, -8193, !dbg !13185
  store volatile i32 %72, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13185
  %73 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13186
  %74 = and i32 %73, -16385, !dbg !13186
  store volatile i32 %74, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13186
  %75 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13187
  %76 = or i32 %75, 10420224, !dbg !13187
  store volatile i32 %76, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13187
  %77 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13188
  %78 = or i32 %77, 2097152, !dbg !13188
  store volatile i32 %78, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13188
  %79 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13189
  %80 = or i32 %79, 4194304, !dbg !13189
  store volatile i32 %80, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13189
  %81 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !13190
  %82 = and i32 %81, -2, !dbg !13190
  store volatile i32 %82, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !13190
  %83 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !13191
  %84 = or i32 %83, 16777216, !dbg !13191
  store volatile i32 %84, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !13191
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !13192
  %85 = load i32, i32* @uwTickPrio, align 4, !dbg !13193
  %86 = tail call i32 @HAL_InitTick(i32 noundef %85) #25, !dbg !13195
  %87 = icmp ne i32 %86, 0, !dbg !13196
  %88 = zext i1 %87 to i32, !dbg !13197
  br label %89, !dbg !13197

89:                                               ; preds = %8, %21, %32, %43, %54, %64, %68
  %90 = phi i32 [ %88, %68 ], [ 3, %64 ], [ 3, %54 ], [ 3, %43 ], [ 3, %32 ], [ 3, %21 ], [ 3, %8 ], !dbg !13110
  ret i32 %90, !dbg !13198
}

; Function Attrs: optsize
declare !dbg !13199 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef readonly %0) local_unnamed_addr #1 !dbg !13202 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !13228, metadata !DIExpression()), !dbg !13239
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !13240
  br i1 %3, label %337, label %4, !dbg !13242

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !13243
  %6 = load i32, i32* %5, align 4, !dbg !13243
  %7 = and i32 %6, 1, !dbg !13245
  %8 = icmp eq i32 %7, 0, !dbg !13246
  br i1 %8, label %74, label %9, !dbg !13247

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13248
  %11 = and i32 %10, 12, !dbg !13248
  %12 = icmp eq i32 %11, 4, !dbg !13251
  br i1 %12, label %29, label %13, !dbg !13252

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13253
  %15 = and i32 %14, 12, !dbg !13253
  %16 = icmp eq i32 %15, 8, !dbg !13254
  br i1 %16, label %17, label %21, !dbg !13255

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13256
  %19 = and i32 %18, 4194304, !dbg !13257
  %20 = icmp eq i32 %19, 0, !dbg !13258
  br i1 %20, label %21, label %29, !dbg !13259

21:                                               ; preds = %17, %13
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13260
  %23 = and i32 %22, 12, !dbg !13260
  %24 = icmp eq i32 %23, 12, !dbg !13261
  br i1 %24, label %25, label %37, !dbg !13262

25:                                               ; preds = %21
  %26 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13263
  %27 = and i32 %26, 4194304, !dbg !13264
  %28 = icmp eq i32 %27, 0, !dbg !13265
  br i1 %28, label %37, label %29, !dbg !13266

29:                                               ; preds = %25, %17, %9
  %30 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13267
  %31 = and i32 %30, 131072, !dbg !13267
  %32 = icmp eq i32 %31, 0, !dbg !13267
  br i1 %32, label %74, label %33, !dbg !13270

33:                                               ; preds = %29
  %34 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !13271
  %35 = load i32, i32* %34, align 4, !dbg !13271
  %36 = icmp eq i32 %35, 0, !dbg !13272
  br i1 %36, label %337, label %74, !dbg !13273

37:                                               ; preds = %21, %25
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !13274
  %39 = load i32, i32* %38, align 4, !dbg !13274
  switch i32 %39, label %48 [
    i32 65536, label %40
    i32 327680, label %43
  ], !dbg !13278

40:                                               ; preds = %37
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13279
  %42 = or i32 %41, 65536, !dbg !13279
  br label %53, !dbg !13279

43:                                               ; preds = %37
  %44 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13281
  %45 = or i32 %44, 262144, !dbg !13281
  store volatile i32 %45, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13281
  %46 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13281
  %47 = or i32 %46, 65536, !dbg !13281
  br label %53, !dbg !13281

48:                                               ; preds = %37
  %49 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13284
  %50 = and i32 %49, -65537, !dbg !13284
  store volatile i32 %50, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13284
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13284
  %52 = and i32 %51, -262145, !dbg !13284
  br label %53

53:                                               ; preds = %43, %48, %40
  %54 = phi i32 [ %47, %43 ], [ %52, %48 ], [ %42, %40 ]
  store volatile i32 %54, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13286
  %55 = load i32, i32* %38, align 4, !dbg !13287
  %56 = icmp eq i32 %55, 0, !dbg !13289
  %57 = tail call i32 @HAL_GetTick() #25, !dbg !13290
  call void @llvm.dbg.value(metadata i32 %57, metadata !13229, metadata !DIExpression()), !dbg !13239
  call void @llvm.dbg.value(metadata i32 %57, metadata !13229, metadata !DIExpression()), !dbg !13239
  br i1 %56, label %66, label %58, !dbg !13291

58:                                               ; preds = %53, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13292
  %60 = and i32 %59, 131072, !dbg !13294
  %61 = icmp eq i32 %60, 0, !dbg !13294
  br i1 %61, label %62, label %74, !dbg !13295

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #25, !dbg !13296
  %64 = sub i32 %63, %57, !dbg !13299
  %65 = icmp ugt i32 %64, 100, !dbg !13300
  br i1 %65, label %337, label %58, !dbg !13301, !llvm.loop !13302

66:                                               ; preds = %53, %70
  %67 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13304
  %68 = and i32 %67, 131072, !dbg !13304
  %69 = icmp eq i32 %68, 0, !dbg !13304
  br i1 %69, label %74, label %70, !dbg !13306

70:                                               ; preds = %66
  %71 = tail call i32 @HAL_GetTick() #25, !dbg !13307
  %72 = sub i32 %71, %57, !dbg !13310
  %73 = icmp ugt i32 %72, 100, !dbg !13311
  br i1 %73, label %337, label %66, !dbg !13312, !llvm.loop !13313

74:                                               ; preds = %58, %66, %33, %29, %4
  %75 = load i32, i32* %5, align 4, !dbg !13315
  %76 = and i32 %75, 2, !dbg !13317
  %77 = icmp eq i32 %76, 0, !dbg !13318
  br i1 %77, label %137, label %78, !dbg !13319

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13320
  %80 = and i32 %79, 12, !dbg !13320
  %81 = icmp eq i32 %80, 0, !dbg !13323
  br i1 %81, label %98, label %82, !dbg !13324

82:                                               ; preds = %78
  %83 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13325
  %84 = and i32 %83, 12, !dbg !13325
  %85 = icmp eq i32 %84, 8, !dbg !13326
  br i1 %85, label %86, label %90, !dbg !13327

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13328
  %88 = and i32 %87, 4194304, !dbg !13329
  %89 = icmp eq i32 %88, 0, !dbg !13330
  br i1 %89, label %98, label %90, !dbg !13331

90:                                               ; preds = %86, %82
  %91 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13332
  %92 = and i32 %91, 12, !dbg !13332
  %93 = icmp eq i32 %92, 12, !dbg !13333
  br i1 %93, label %94, label %106, !dbg !13334

94:                                               ; preds = %90
  %95 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13335
  %96 = and i32 %95, 4194304, !dbg !13336
  %97 = icmp eq i32 %96, 0, !dbg !13337
  br i1 %97, label %98, label %106, !dbg !13338

98:                                               ; preds = %94, %86, %78
  %99 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13339
  %100 = and i32 %99, 2, !dbg !13339
  %101 = icmp eq i32 %100, 0, !dbg !13339
  br i1 %101, label %130, label %102, !dbg !13342

102:                                              ; preds = %98
  %103 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !13343
  %104 = load i32, i32* %103, align 4, !dbg !13343
  %105 = icmp eq i32 %104, 1, !dbg !13344
  br i1 %105, label %130, label %337, !dbg !13345

106:                                              ; preds = %94, %90
  %107 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !13346
  %108 = load i32, i32* %107, align 4, !dbg !13346
  %109 = icmp eq i32 %108, 0, !dbg !13349
  br i1 %109, label %120, label %110, !dbg !13350

110:                                              ; preds = %106
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !13351
  %111 = tail call i32 @HAL_GetTick() #25, !dbg !13353
  call void @llvm.dbg.value(metadata i32 %111, metadata !13229, metadata !DIExpression()), !dbg !13239
  br label %112, !dbg !13354

112:                                              ; preds = %116, %110
  %113 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13355
  %114 = and i32 %113, 2, !dbg !13356
  %115 = icmp eq i32 %114, 0, !dbg !13356
  br i1 %115, label %116, label %130, !dbg !13354

116:                                              ; preds = %112
  %117 = tail call i32 @HAL_GetTick() #25, !dbg !13357
  %118 = sub i32 %117, %111, !dbg !13360
  %119 = icmp ugt i32 %118, 2, !dbg !13361
  br i1 %119, label %337, label %112, !dbg !13362, !llvm.loop !13363

120:                                              ; preds = %106
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !13365
  %121 = tail call i32 @HAL_GetTick() #25, !dbg !13367
  call void @llvm.dbg.value(metadata i32 %121, metadata !13229, metadata !DIExpression()), !dbg !13239
  br label %122, !dbg !13368

122:                                              ; preds = %126, %120
  %123 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13369
  %124 = and i32 %123, 2, !dbg !13369
  %125 = icmp eq i32 %124, 0, !dbg !13369
  br i1 %125, label %137, label %126, !dbg !13368

126:                                              ; preds = %122
  %127 = tail call i32 @HAL_GetTick() #25, !dbg !13370
  %128 = sub i32 %127, %121, !dbg !13373
  %129 = icmp ugt i32 %128, 2, !dbg !13374
  br i1 %129, label %337, label %122, !dbg !13375, !llvm.loop !13376

130:                                              ; preds = %112, %98, %102
  %131 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13378
  %132 = and i32 %131, -249, !dbg !13378
  %133 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !13378
  %134 = load i32, i32* %133, align 4, !dbg !13378
  %135 = shl i32 %134, 3, !dbg !13378
  %136 = or i32 %135, %132, !dbg !13378
  store volatile i32 %136, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13378
  br label %137, !dbg !13379

137:                                              ; preds = %122, %130, %74
  %138 = load i32, i32* %5, align 4, !dbg !13379
  %139 = and i32 %138, 8, !dbg !13381
  %140 = icmp eq i32 %139, 0, !dbg !13382
  br i1 %140, label %165, label %141, !dbg !13383

141:                                              ; preds = %137
  %142 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !13384
  %143 = load i32, i32* %142, align 4, !dbg !13384
  %144 = icmp eq i32 %143, 0, !dbg !13387
  br i1 %144, label %155, label %145, !dbg !13388

145:                                              ; preds = %141
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !13389
  %146 = tail call i32 @HAL_GetTick() #25, !dbg !13391
  call void @llvm.dbg.value(metadata i32 %146, metadata !13229, metadata !DIExpression()), !dbg !13239
  br label %147, !dbg !13392

147:                                              ; preds = %151, %145
  %148 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !13393
  %149 = and i32 %148, 2, !dbg !13394
  %150 = icmp eq i32 %149, 0, !dbg !13394
  br i1 %150, label %151, label %165, !dbg !13392

151:                                              ; preds = %147
  %152 = tail call i32 @HAL_GetTick() #25, !dbg !13395
  %153 = sub i32 %152, %146, !dbg !13398
  %154 = icmp ugt i32 %153, 2, !dbg !13399
  br i1 %154, label %337, label %147, !dbg !13400, !llvm.loop !13401

155:                                              ; preds = %141
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !13403
  %156 = tail call i32 @HAL_GetTick() #25, !dbg !13405
  call void @llvm.dbg.value(metadata i32 %156, metadata !13229, metadata !DIExpression()), !dbg !13239
  br label %157, !dbg !13406

157:                                              ; preds = %161, %155
  %158 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !13407
  %159 = and i32 %158, 2, !dbg !13407
  %160 = icmp eq i32 %159, 0, !dbg !13407
  br i1 %160, label %165, label %161, !dbg !13406

161:                                              ; preds = %157
  %162 = tail call i32 @HAL_GetTick() #25, !dbg !13408
  %163 = sub i32 %162, %156, !dbg !13411
  %164 = icmp ugt i32 %163, 2, !dbg !13412
  br i1 %164, label %337, label %157, !dbg !13413, !llvm.loop !13414

165:                                              ; preds = %147, %157, %137
  %166 = load i32, i32* %5, align 4, !dbg !13416
  %167 = and i32 %166, 4, !dbg !13417
  %168 = icmp eq i32 %167, 0, !dbg !13418
  br i1 %168, label %237, label %169, !dbg !13419

169:                                              ; preds = %165
  call void @llvm.dbg.value(metadata i32 0, metadata !13231, metadata !DIExpression()), !dbg !13420
  %170 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13421
  %171 = and i32 %170, 268435456, !dbg !13421
  %172 = icmp eq i32 %171, 0, !dbg !13421
  br i1 %172, label %173, label %180, !dbg !13422

173:                                              ; preds = %169
  %174 = bitcast i32* %2 to i8*, !dbg !13423
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %174), !dbg !13423
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13235, metadata !DIExpression()), !dbg !13423
  store volatile i32 0, i32* %2, align 4, !dbg !13423
  %175 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13423
  %176 = or i32 %175, 268435456, !dbg !13423
  store volatile i32 %176, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13423
  %177 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13423
  %178 = and i32 %177, 268435456, !dbg !13423
  store volatile i32 %178, i32* %2, align 4, !dbg !13423
  %179 = load volatile i32, i32* %2, align 4, !dbg !13423
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %174), !dbg !13424
  call void @llvm.dbg.value(metadata i32 1, metadata !13231, metadata !DIExpression()), !dbg !13420
  br label %180, !dbg !13425

180:                                              ; preds = %173, %169
  call void @llvm.dbg.value(metadata i32 undef, metadata !13231, metadata !DIExpression()), !dbg !13420
  %181 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13426
  %182 = and i32 %181, 256, !dbg !13426
  %183 = icmp eq i32 %182, 0, !dbg !13426
  br i1 %183, label %184, label %196, !dbg !13428

184:                                              ; preds = %180
  %185 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13429
  %186 = or i32 %185, 256, !dbg !13429
  store volatile i32 %186, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13429
  %187 = tail call i32 @HAL_GetTick() #25, !dbg !13431
  call void @llvm.dbg.value(metadata i32 %187, metadata !13229, metadata !DIExpression()), !dbg !13239
  br label %188, !dbg !13432

188:                                              ; preds = %192, %184
  %189 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13433
  %190 = and i32 %189, 256, !dbg !13433
  %191 = icmp eq i32 %190, 0, !dbg !13433
  br i1 %191, label %192, label %196, !dbg !13432

192:                                              ; preds = %188
  %193 = tail call i32 @HAL_GetTick() #25, !dbg !13434
  %194 = sub i32 %193, %187, !dbg !13437
  %195 = icmp ugt i32 %194, 2, !dbg !13438
  br i1 %195, label %337, label %188, !dbg !13439, !llvm.loop !13440

196:                                              ; preds = %188, %180
  %197 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !13442
  %198 = load i32, i32* %197, align 4, !dbg !13442
  switch i32 %198, label %207 [
    i32 1, label %199
    i32 5, label %202
  ], !dbg !13445

199:                                              ; preds = %196
  %200 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13446
  %201 = or i32 %200, 1, !dbg !13446
  br label %212, !dbg !13446

202:                                              ; preds = %196
  %203 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13448
  %204 = or i32 %203, 4, !dbg !13448
  store volatile i32 %204, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13448
  %205 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13448
  %206 = or i32 %205, 1, !dbg !13448
  br label %212, !dbg !13448

207:                                              ; preds = %196
  %208 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13451
  %209 = and i32 %208, -2, !dbg !13451
  store volatile i32 %209, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13451
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13451
  %211 = and i32 %210, -5, !dbg !13451
  br label %212

212:                                              ; preds = %202, %207, %199
  %213 = phi i32 [ %206, %202 ], [ %211, %207 ], [ %201, %199 ]
  store volatile i32 %213, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13453
  %214 = load i32, i32* %197, align 4, !dbg !13454
  %215 = icmp eq i32 %214, 0, !dbg !13456
  %216 = tail call i32 @HAL_GetTick() #25, !dbg !13457
  call void @llvm.dbg.value(metadata i32 %216, metadata !13229, metadata !DIExpression()), !dbg !13239
  call void @llvm.dbg.value(metadata i32 %216, metadata !13229, metadata !DIExpression()), !dbg !13239
  br i1 %215, label %225, label %217, !dbg !13458

217:                                              ; preds = %212, %221
  %218 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13459
  %219 = and i32 %218, 2, !dbg !13461
  %220 = icmp eq i32 %219, 0, !dbg !13461
  br i1 %220, label %221, label %233, !dbg !13462

221:                                              ; preds = %217
  %222 = tail call i32 @HAL_GetTick() #25, !dbg !13463
  %223 = sub i32 %222, %216, !dbg !13466
  %224 = icmp ugt i32 %223, 5000, !dbg !13467
  br i1 %224, label %337, label %217, !dbg !13468, !llvm.loop !13469

225:                                              ; preds = %212, %229
  %226 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13471
  %227 = and i32 %226, 2, !dbg !13471
  %228 = icmp eq i32 %227, 0, !dbg !13471
  br i1 %228, label %233, label %229, !dbg !13473

229:                                              ; preds = %225
  %230 = tail call i32 @HAL_GetTick() #25, !dbg !13474
  %231 = sub i32 %230, %216, !dbg !13477
  %232 = icmp ugt i32 %231, 5000, !dbg !13478
  br i1 %232, label %337, label %225, !dbg !13479, !llvm.loop !13480

233:                                              ; preds = %217, %225
  br i1 %172, label %234, label %237, !dbg !13482

234:                                              ; preds = %233
  %235 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13483
  %236 = and i32 %235, -268435457, !dbg !13483
  store volatile i32 %236, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13483
  br label %237, !dbg !13486

237:                                              ; preds = %234, %233, %165
  %238 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !13487
  %239 = load i32, i32* %238, align 4, !dbg !13487
  %240 = icmp eq i32 %239, 0, !dbg !13489
  br i1 %240, label %336, label %241, !dbg !13490

241:                                              ; preds = %237
  %242 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13491
  %243 = and i32 %242, 12, !dbg !13491
  %244 = icmp eq i32 %243, 8, !dbg !13494
  br i1 %244, label %297, label %245, !dbg !13495

245:                                              ; preds = %241
  %246 = icmp eq i32 %239, 2, !dbg !13496
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !13499
  %247 = tail call i32 @HAL_GetTick() #25, !dbg !13499
  call void @llvm.dbg.value(metadata i32 %247, metadata !13229, metadata !DIExpression()), !dbg !13239
  call void @llvm.dbg.value(metadata i32 %247, metadata !13229, metadata !DIExpression()), !dbg !13239
  br i1 %246, label %248, label %289, !dbg !13500

248:                                              ; preds = %245, %252
  %249 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13501
  %250 = and i32 %249, 33554432, !dbg !13501
  %251 = icmp eq i32 %250, 0, !dbg !13501
  br i1 %251, label %256, label %252, !dbg !13503

252:                                              ; preds = %248
  %253 = tail call i32 @HAL_GetTick() #25, !dbg !13504
  %254 = sub i32 %253, %247, !dbg !13507
  %255 = icmp ugt i32 %254, 2, !dbg !13508
  br i1 %255, label %337, label %248, !dbg !13509, !llvm.loop !13510

256:                                              ; preds = %248
  %257 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !13512
  %258 = load i32, i32* %257, align 4, !dbg !13512
  %259 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !13512
  %260 = load i32, i32* %259, align 4, !dbg !13512
  %261 = or i32 %260, %258, !dbg !13512
  %262 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !13512
  %263 = load i32, i32* %262, align 4, !dbg !13512
  %264 = shl i32 %263, 6, !dbg !13512
  %265 = or i32 %261, %264, !dbg !13512
  %266 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !13512
  %267 = load i32, i32* %266, align 4, !dbg !13512
  %268 = shl i32 %267, 15, !dbg !13512
  %269 = add i32 %268, -65536, !dbg !13512
  %270 = and i32 %269, -65536, !dbg !13512
  %271 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !13512
  %272 = load i32, i32* %271, align 4, !dbg !13512
  %273 = shl i32 %272, 24, !dbg !13512
  %274 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !13512
  %275 = load i32, i32* %274, align 4, !dbg !13512
  %276 = shl i32 %275, 28, !dbg !13512
  %277 = or i32 %265, %273, !dbg !13512
  %278 = or i32 %277, %270, !dbg !13512
  %279 = or i32 %278, %276, !dbg !13512
  store volatile i32 %279, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13512
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !13513
  %280 = tail call i32 @HAL_GetTick() #25, !dbg !13514
  call void @llvm.dbg.value(metadata i32 %280, metadata !13229, metadata !DIExpression()), !dbg !13239
  br label %281, !dbg !13515

281:                                              ; preds = %285, %256
  %282 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13516
  %283 = and i32 %282, 33554432, !dbg !13517
  %284 = icmp eq i32 %283, 0, !dbg !13517
  br i1 %284, label %285, label %336, !dbg !13515

285:                                              ; preds = %281
  %286 = tail call i32 @HAL_GetTick() #25, !dbg !13518
  %287 = sub i32 %286, %280, !dbg !13521
  %288 = icmp ugt i32 %287, 2, !dbg !13522
  br i1 %288, label %337, label %281, !dbg !13523, !llvm.loop !13524

289:                                              ; preds = %245, %293
  %290 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13526
  %291 = and i32 %290, 33554432, !dbg !13526
  %292 = icmp eq i32 %291, 0, !dbg !13526
  br i1 %292, label %336, label %293, !dbg !13528

293:                                              ; preds = %289
  %294 = tail call i32 @HAL_GetTick() #25, !dbg !13529
  %295 = sub i32 %294, %247, !dbg !13532
  %296 = icmp ugt i32 %295, 2, !dbg !13533
  br i1 %296, label %337, label %289, !dbg !13534, !llvm.loop !13535

297:                                              ; preds = %241
  %298 = icmp eq i32 %239, 1, !dbg !13537
  br i1 %298, label %337, label %299, !dbg !13540

299:                                              ; preds = %297
  %300 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13541
  call void @llvm.dbg.value(metadata i32 %300, metadata !13230, metadata !DIExpression()), !dbg !13239
  %301 = and i32 %300, 4194304, !dbg !13543
  %302 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !13545
  %303 = load i32, i32* %302, align 4, !dbg !13545
  %304 = icmp eq i32 %301, %303, !dbg !13546
  br i1 %304, label %305, label %337, !dbg !13547

305:                                              ; preds = %299
  %306 = and i32 %300, 63, !dbg !13548
  %307 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !13549
  %308 = load i32, i32* %307, align 4, !dbg !13549
  %309 = icmp eq i32 %306, %308, !dbg !13550
  br i1 %309, label %310, label %337, !dbg !13551

310:                                              ; preds = %305
  %311 = and i32 %300, 32704, !dbg !13552
  %312 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !13553
  %313 = load i32, i32* %312, align 4, !dbg !13553
  %314 = shl i32 %313, 6, !dbg !13554
  %315 = icmp eq i32 %311, %314, !dbg !13555
  br i1 %315, label %316, label %337, !dbg !13556

316:                                              ; preds = %310
  %317 = and i32 %300, 196608, !dbg !13557
  %318 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !13558
  %319 = load i32, i32* %318, align 4, !dbg !13558
  %320 = shl i32 %319, 15, !dbg !13559
  %321 = add i32 %320, -65536, !dbg !13559
  %322 = and i32 %321, -65536, !dbg !13559
  %323 = icmp eq i32 %317, %322, !dbg !13560
  br i1 %323, label %324, label %337, !dbg !13561

324:                                              ; preds = %316
  %325 = and i32 %300, 251658240, !dbg !13562
  %326 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !13563
  %327 = load i32, i32* %326, align 4, !dbg !13563
  %328 = shl i32 %327, 24, !dbg !13564
  %329 = icmp eq i32 %325, %328, !dbg !13565
  br i1 %329, label %330, label %337, !dbg !13566

330:                                              ; preds = %324
  %331 = and i32 %300, 1879048192, !dbg !13567
  %332 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !13568
  %333 = load i32, i32* %332, align 4, !dbg !13568
  %334 = shl i32 %333, 28, !dbg !13569
  %335 = icmp eq i32 %331, %334, !dbg !13570
  br i1 %335, label %336, label %337, !dbg !13571

336:                                              ; preds = %289, %281, %330, %237
  br label %337, !dbg !13572

337:                                              ; preds = %62, %70, %116, %126, %151, %161, %192, %221, %229, %293, %252, %285, %299, %305, %310, %316, %324, %330, %297, %102, %33, %1, %336
  %338 = phi i32 [ 0, %336 ], [ 1, %1 ], [ 1, %33 ], [ 1, %102 ], [ 1, %297 ], [ 1, %330 ], [ 1, %324 ], [ 1, %316 ], [ 1, %310 ], [ 1, %305 ], [ 1, %299 ], [ 3, %285 ], [ 3, %252 ], [ 3, %293 ], [ 3, %229 ], [ 3, %221 ], [ 3, %192 ], [ 3, %161 ], [ 3, %151 ], [ 3, %126 ], [ 3, %116 ], [ 3, %70 ], [ 3, %62 ], !dbg !13239
  ret i32 %338, !dbg !13573
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* nocapture noundef writeonly %0) local_unnamed_addr #5 !dbg !13574 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !13578, metadata !DIExpression()), !dbg !13579
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !13580
  store i32 15, i32* %2, align 4, !dbg !13581
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13582
  %4 = and i32 %3, 262144, !dbg !13584
  %5 = icmp eq i32 %4, 0, !dbg !13585
  br i1 %5, label %8, label %6, !dbg !13586

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !13587
  store i32 327680, i32* %7, align 4, !dbg !13589
  br label %15, !dbg !13590

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13591
  %10 = and i32 %9, 65536, !dbg !13593
  %11 = icmp eq i32 %10, 0, !dbg !13594
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !13595
  br i1 %11, label %14, label %13, !dbg !13596

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !13597
  br label %15, !dbg !13599

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !13600
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13602
  %17 = and i32 %16, 1, !dbg !13604
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !13605
  store i32 %17, i32* %18, align 4, !dbg !13607
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13608
  %20 = lshr i32 %19, 3, !dbg !13609
  %21 = and i32 %20, 31, !dbg !13609
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !13610
  store i32 %21, i32* %22, align 4, !dbg !13611
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13612
  %24 = and i32 %23, 4, !dbg !13614
  %25 = icmp eq i32 %24, 0, !dbg !13615
  br i1 %25, label %28, label %26, !dbg !13616

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !13617
  store i32 5, i32* %27, align 4, !dbg !13619
  br label %35, !dbg !13620

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13621
  %30 = and i32 %29, 1, !dbg !13623
  %31 = icmp eq i32 %30, 0, !dbg !13624
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !13625
  br i1 %31, label %34, label %33, !dbg !13626

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !13627
  br label %35, !dbg !13629

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !13630
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !13632
  %37 = and i32 %36, 1, !dbg !13634
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !13635
  store i32 %37, i32* %38, align 4, !dbg !13637
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13638
  %40 = and i32 %39, 16777216, !dbg !13640
  %41 = icmp eq i32 %40, 0, !dbg !13641
  %42 = select i1 %41, i32 1, i32 2, !dbg !13642
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !13643
  store i32 %42, i32* %43, align 4, !dbg !13645
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13646
  %45 = and i32 %44, 4194304, !dbg !13647
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !13648
  store i32 %45, i32* %46, align 4, !dbg !13649
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13650
  %48 = and i32 %47, 63, !dbg !13651
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !13652
  store i32 %48, i32* %49, align 4, !dbg !13653
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13654
  %51 = lshr i32 %50, 6, !dbg !13655
  %52 = and i32 %51, 511, !dbg !13655
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !13656
  store i32 %52, i32* %53, align 4, !dbg !13657
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13658
  %55 = shl i32 %54, 1, !dbg !13659
  %56 = and i32 %55, 393216, !dbg !13659
  %57 = add nuw nsw i32 %56, 131072, !dbg !13659
  %58 = lshr exact i32 %57, 16, !dbg !13660
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !13661
  store i32 %58, i32* %59, align 4, !dbg !13662
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13663
  %61 = lshr i32 %60, 24, !dbg !13664
  %62 = and i32 %61, 15, !dbg !13664
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !13665
  store i32 %62, i32* %63, align 4, !dbg !13666
  %64 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13667
  %65 = lshr i32 %64, 28, !dbg !13668
  %66 = and i32 %65, 7, !dbg !13668
  %67 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !13669
  store i32 %66, i32* %67, align 4, !dbg !13670
  ret void, !dbg !13671
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #15 !dbg !13672 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13675, metadata !DIExpression()), !dbg !13676
  tail call fastcc void @LL_InitTick(i32 noundef %0) #24, !dbg !13677
  ret void, !dbg !13678
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #15 !dbg !13679 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13682, metadata !DIExpression()), !dbg !13684
  call void @llvm.dbg.value(metadata i32 1000, metadata !13683, metadata !DIExpression()), !dbg !13684
  %2 = udiv i32 %0, 1000, !dbg !13685
  %3 = add nsw i32 %2, -1, !dbg !13686
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !13687
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !13688
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13689
  ret void, !dbg !13690
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #19 !dbg !13691 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !13693, metadata !DIExpression()), !dbg !13695
  %3 = bitcast i32* %2 to i8*, !dbg !13696
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !13696
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13694, metadata !DIExpression()), !dbg !13697
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13698
  store volatile i32 %4, i32* %2, align 4, !dbg !13697
  %5 = load volatile i32, i32* %2, align 4, !dbg !13699
  %6 = icmp eq i32 %0, -1, !dbg !13700
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13693, metadata !DIExpression()), !dbg !13695
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !13695
  call void @llvm.dbg.value(metadata i32 %8, metadata !13693, metadata !DIExpression()), !dbg !13695
  br label %9, !dbg !13702

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !13693, metadata !DIExpression()), !dbg !13695
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13703
  call void @llvm.dbg.value(metadata i32 undef, metadata !13693, metadata !DIExpression()), !dbg !13695
  %12 = shl i32 %11, 15, !dbg !13695
  %13 = ashr i32 %12, 31, !dbg !13695
  %14 = add i32 %13, %10, !dbg !13695
  call void @llvm.dbg.value(metadata i32 %14, metadata !13693, metadata !DIExpression()), !dbg !13695
  %15 = icmp eq i32 %14, 0, !dbg !13702
  br i1 %15, label %16, label %9, !dbg !13702

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !13706
  ret void, !dbg !13706
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #6 !dbg !13707 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13709, metadata !DIExpression()), !dbg !13710
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !13711
  ret void, !dbg !13712
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #15 !dbg !13713 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13718, metadata !DIExpression()), !dbg !13723
  call void @llvm.dbg.value(metadata i32 0, metadata !13721, metadata !DIExpression()), !dbg !13723
  call void @llvm.dbg.value(metadata i32 0, metadata !13722, metadata !DIExpression()), !dbg !13723
  %2 = icmp eq i32 %0, 0, !dbg !13724
  br i1 %2, label %72, label %3, !dbg !13726

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !13727
  %5 = icmp eq i32 %4, 49152, !dbg !13730
  br i1 %5, label %6, label %21, !dbg !13731

6:                                                ; preds = %3
  %7 = icmp ult i32 %0, 150000001, !dbg !13732
  %8 = select i1 %7, i32 0, i32 5, !dbg !13735
  call void @llvm.dbg.value(metadata i32 %8, metadata !13721, metadata !DIExpression()), !dbg !13723
  %9 = add i32 %0, -120000001, !dbg !13736
  %10 = icmp ult i32 %9, 30000000, !dbg !13736
  %11 = select i1 %10, i32 4, i32 %8, !dbg !13736
  call void @llvm.dbg.value(metadata i32 %11, metadata !13721, metadata !DIExpression()), !dbg !13723
  %12 = icmp ult i32 %9, -30000000, !dbg !13738
  %13 = select i1 %12, i32 %11, i32 3, !dbg !13738
  call void @llvm.dbg.value(metadata i32 %13, metadata !13721, metadata !DIExpression()), !dbg !13723
  %14 = icmp ugt i32 %0, 60000000, !dbg !13740
  %15 = icmp eq i32 %13, 0
  %16 = and i1 %14, %15, !dbg !13742
  br i1 %16, label %21, label %17, !dbg !13742

17:                                               ; preds = %6
  %18 = icmp ugt i32 %0, 30000000, !dbg !13743
  %19 = and i1 %18, %15, !dbg !13746
  %20 = select i1 %19, i32 1, i32 %13, !dbg !13746
  br label %21, !dbg !13746

21:                                               ; preds = %17, %6, %3
  %22 = phi i32 [ 0, %3 ], [ 2, %6 ], [ %20, %17 ], !dbg !13723
  call void @llvm.dbg.value(metadata i32 %22, metadata !13721, metadata !DIExpression()), !dbg !13723
  %23 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !13747
  %24 = icmp eq i32 %23, 32768, !dbg !13749
  br i1 %24, label %25, label %45, !dbg !13750

25:                                               ; preds = %21
  %26 = icmp ugt i32 %0, 150000000, !dbg !13751
  %27 = icmp eq i32 %22, 0
  %28 = and i1 %26, %27, !dbg !13754
  %29 = select i1 %28, i32 5, i32 %22, !dbg !13754
  call void @llvm.dbg.value(metadata i32 %29, metadata !13721, metadata !DIExpression()), !dbg !13723
  %30 = icmp ugt i32 %0, 12000000, !dbg !13755
  %31 = icmp eq i32 %29, 0
  %32 = and i1 %30, %31, !dbg !13757
  %33 = select i1 %32, i32 4, i32 %29, !dbg !13757
  call void @llvm.dbg.value(metadata i32 %33, metadata !13721, metadata !DIExpression()), !dbg !13723
  %34 = icmp ugt i32 %0, 90000000, !dbg !13758
  %35 = icmp eq i32 %33, 0
  %36 = and i1 %34, %35, !dbg !13760
  %37 = select i1 %36, i32 3, i32 %33, !dbg !13760
  call void @llvm.dbg.value(metadata i32 %37, metadata !13721, metadata !DIExpression()), !dbg !13723
  %38 = icmp ugt i32 %0, 60000000, !dbg !13761
  %39 = icmp eq i32 %37, 0
  %40 = select i1 %38, i1 %39, i1 false, !dbg !13763
  br i1 %40, label %45, label %41, !dbg !13763

41:                                               ; preds = %25
  %42 = icmp ugt i32 %0, 30000000, !dbg !13764
  %43 = select i1 %42, i1 %39, i1 false, !dbg !13767
  %44 = select i1 %43, i32 1, i32 %37, !dbg !13767
  br label %45, !dbg !13767

45:                                               ; preds = %41, %25, %21
  %46 = phi i32 [ %22, %21 ], [ 2, %25 ], [ %44, %41 ], !dbg !13768
  call void @llvm.dbg.value(metadata i32 %46, metadata !13721, metadata !DIExpression()), !dbg !13723
  %47 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !13769
  %48 = icmp eq i32 %47, 16384, !dbg !13771
  br i1 %48, label %49, label %61, !dbg !13772

49:                                               ; preds = %45
  %50 = icmp ugt i32 %0, 90000000, !dbg !13773
  %51 = icmp eq i32 %46, 0
  %52 = select i1 %50, i1 %51, i1 false, !dbg !13776
  %53 = select i1 %52, i32 3, i32 %46, !dbg !13776
  call void @llvm.dbg.value(metadata i32 %53, metadata !13721, metadata !DIExpression()), !dbg !13723
  %54 = icmp ugt i32 %0, 60000000, !dbg !13777
  %55 = icmp eq i32 %53, 0
  %56 = select i1 %54, i1 %55, i1 false, !dbg !13779
  br i1 %56, label %61, label %57, !dbg !13779

57:                                               ; preds = %49
  %58 = icmp ugt i32 %0, 30000000, !dbg !13780
  %59 = select i1 %58, i1 %55, i1 false, !dbg !13783
  %60 = select i1 %59, i32 1, i32 %53, !dbg !13783
  br label %61, !dbg !13783

61:                                               ; preds = %57, %49, %45
  %62 = phi i32 [ %46, %45 ], [ 2, %49 ], [ %60, %57 ], !dbg !13768
  call void @llvm.dbg.value(metadata i32 %62, metadata !13721, metadata !DIExpression()), !dbg !13723
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %62) #24, !dbg !13784
  call void @llvm.dbg.value(metadata i32 2, metadata !13719, metadata !DIExpression()), !dbg !13723
  br label %63, !dbg !13785

63:                                               ; preds = %63, %61
  %64 = phi i32 [ 2, %61 ], [ %66, %63 ], !dbg !13768
  call void @llvm.dbg.value(metadata i32 %64, metadata !13719, metadata !DIExpression()), !dbg !13723
  %65 = tail call fastcc i32 @LL_FLASH_GetLatency() #24, !dbg !13786
  call void @llvm.dbg.value(metadata i32 %65, metadata !13720, metadata !DIExpression()), !dbg !13723
  %66 = add nsw i32 %64, -1, !dbg !13788
  call void @llvm.dbg.value(metadata i32 %66, metadata !13719, metadata !DIExpression()), !dbg !13723
  %67 = icmp ne i32 %65, %62, !dbg !13789
  %68 = icmp ne i32 %66, 0, !dbg !13790
  %69 = select i1 %67, i1 %68, i1 false, !dbg !13790
  br i1 %69, label %63, label %70, !dbg !13791, !llvm.loop !13792

70:                                               ; preds = %63
  %71 = zext i1 %67 to i32
  br label %72

72:                                               ; preds = %70, %1
  %73 = phi i32 [ 1, %1 ], [ %71, %70 ], !dbg !13794
  call void @llvm.dbg.value(metadata i32 %73, metadata !13722, metadata !DIExpression()), !dbg !13723
  ret i32 %73, !dbg !13795
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #5 !dbg !13796 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13798
  %2 = and i32 %1, 49152, !dbg !13798
  ret i32 %2, !dbg !13799
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #15 !dbg !13800 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13802, metadata !DIExpression()), !dbg !13803
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13804
  %3 = and i32 %2, -16, !dbg !13804
  %4 = or i32 %3, %0, !dbg !13804
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13804
  ret void, !dbg !13805
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #5 !dbg !13806 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13807
  %2 = and i32 %1, 15, !dbg !13807
  ret i32 %2, !dbg !13808
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !13809 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !13827, metadata !DIExpression()), !dbg !13831
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13828, metadata !DIExpression()), !dbg !13831
  call void @llvm.dbg.value(metadata i32 0, metadata !13829, metadata !DIExpression()), !dbg !13831
  call void @llvm.dbg.value(metadata i32 0, metadata !13830, metadata !DIExpression()), !dbg !13831
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !13832
  %4 = icmp eq i32 %3, 0, !dbg !13834
  br i1 %4, label %5, label %21, !dbg !13835

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #24, !dbg !13836
  call void @llvm.dbg.value(metadata i32 %6, metadata !13830, metadata !DIExpression()), !dbg !13831
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.164() #24, !dbg !13838
  %8 = icmp eq i32 %7, 1, !dbg !13840
  br i1 %8, label %13, label %9, !dbg !13841

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.165() #24, !dbg !13842
  br label %10, !dbg !13844

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.164() #24, !dbg !13845
  %12 = icmp eq i32 %11, 1, !dbg !13846
  br i1 %12, label %13, label %10, !dbg !13844, !llvm.loop !13847

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !13849
  %15 = load i32, i32* %14, align 4, !dbg !13849
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !13850
  %17 = load i32, i32* %16, align 4, !dbg !13850
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !13851
  %19 = load i32, i32* %18, align 4, !dbg !13851
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.166(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #24, !dbg !13852
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #24, !dbg !13853
  call void @llvm.dbg.value(metadata i32 %20, metadata !13829, metadata !DIExpression()), !dbg !13831
  br label %21, !dbg !13854

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !13855
  call void @llvm.dbg.value(metadata i32 %22, metadata !13829, metadata !DIExpression()), !dbg !13831
  ret i32 %22, !dbg !13856
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #5 !dbg !13857 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13861, metadata !DIExpression()), !dbg !13862
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.168() #24, !dbg !13863
  %2 = icmp ne i32 %1, 0, !dbg !13865
  call void @llvm.dbg.value(metadata i1 %2, metadata !13861, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13862
  %3 = tail call fastcc i32 @LL_RCC_PLLSAI_IsReady() #24, !dbg !13866
  %4 = icmp ne i32 %3, 0, !dbg !13868
  call void @llvm.dbg.value(metadata i1 undef, metadata !13861, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13862
  %5 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #24, !dbg !13869
  %6 = icmp ne i32 %5, 0, !dbg !13871
  %7 = select i1 %6, i1 true, i1 %4, !dbg !13872
  %8 = select i1 %7, i1 true, i1 %2, !dbg !13872
  %9 = zext i1 %8 to i32, !dbg !13872
  call void @llvm.dbg.value(metadata i32 %9, metadata !13861, metadata !DIExpression()), !dbg !13862
  ret i32 %9, !dbg !13873
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #10 !dbg !13874 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13878, metadata !DIExpression()), !dbg !13881
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13879, metadata !DIExpression()), !dbg !13881
  call void @llvm.dbg.value(metadata i32 0, metadata !13880, metadata !DIExpression()), !dbg !13881
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !13882
  %4 = load i32, i32* %3, align 4, !dbg !13882
  %5 = and i32 %4, 63, !dbg !13883
  %6 = udiv i32 %0, %5, !dbg !13884
  call void @llvm.dbg.value(metadata i32 %6, metadata !13880, metadata !DIExpression()), !dbg !13881
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !13885
  %8 = load i32, i32* %7, align 4, !dbg !13885
  %9 = and i32 %8, 511, !dbg !13886
  %10 = mul i32 %9, %6, !dbg !13887
  call void @llvm.dbg.value(metadata i32 %10, metadata !13880, metadata !DIExpression()), !dbg !13881
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !13888
  %12 = load i32, i32* %11, align 4, !dbg !13888
  %13 = lshr i32 %12, 15, !dbg !13889
  %14 = and i32 %13, 131070, !dbg !13889
  %15 = add nuw nsw i32 %14, 2, !dbg !13889
  %16 = udiv i32 %10, %15, !dbg !13890
  call void @llvm.dbg.value(metadata i32 %16, metadata !13880, metadata !DIExpression()), !dbg !13881
  ret i32 %16, !dbg !13891
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.164() unnamed_addr #5 !dbg !13892 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13893
  %2 = lshr i32 %1, 1, !dbg !13894
  %3 = and i32 %2, 1, !dbg !13894
  ret i32 %3, !dbg !13895
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.165() unnamed_addr #15 !dbg !13896 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13897
  %2 = or i32 %1, 1, !dbg !13897
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13897
  ret void, !dbg !13898
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.166(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #15 !dbg !13899 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13901, metadata !DIExpression()), !dbg !13905
  call void @llvm.dbg.value(metadata i32 %1, metadata !13902, metadata !DIExpression()), !dbg !13905
  call void @llvm.dbg.value(metadata i32 %2, metadata !13903, metadata !DIExpression()), !dbg !13905
  call void @llvm.dbg.value(metadata i32 %3, metadata !13904, metadata !DIExpression()), !dbg !13905
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13906
  %6 = and i32 %5, -4227072, !dbg !13906
  %7 = or i32 %1, %0, !dbg !13906
  %8 = shl i32 %2, 6, !dbg !13906
  %9 = or i32 %7, %8, !dbg !13906
  %10 = or i32 %9, %6, !dbg !13906
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13906
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13907
  %12 = and i32 %11, -196609, !dbg !13907
  %13 = or i32 %12, %3, !dbg !13907
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13907
  %14 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13908
  %15 = and i32 %14, -1879048193, !dbg !13908
  %16 = or i32 %15, %3, !dbg !13908
  store volatile i32 %16, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13908
  ret void, !dbg !13909
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #15 !dbg !13910 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13914, metadata !DIExpression()), !dbg !13918
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13915, metadata !DIExpression()), !dbg !13918
  call void @llvm.dbg.value(metadata i32 0, metadata !13916, metadata !DIExpression()), !dbg !13918
  call void @llvm.dbg.value(metadata i32 0, metadata !13917, metadata !DIExpression()), !dbg !13918
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !13919
  %4 = load i32, i32* %3, align 4, !dbg !13919
  %5 = lshr i32 %4, 4, !dbg !13919
  %6 = and i32 %5, 15, !dbg !13919
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !13919
  %8 = load i8, i8* %7, align 1, !dbg !13919
  %9 = zext i8 %8 to i32, !dbg !13919
  %10 = lshr i32 %0, %9, !dbg !13919
  call void @llvm.dbg.value(metadata i32 %10, metadata !13917, metadata !DIExpression()), !dbg !13918
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !13920
  %12 = icmp ult i32 %11, %10, !dbg !13922
  br i1 %12, label %13, label %16, !dbg !13923

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !13924
  call void @llvm.dbg.value(metadata i32 %14, metadata !13916, metadata !DIExpression()), !dbg !13918
  %15 = icmp eq i32 %14, 0, !dbg !13926
  br i1 %15, label %16, label %30, !dbg !13928

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.167() #24, !dbg !13929
  br label %17, !dbg !13931

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.168() #24, !dbg !13932
  %19 = icmp eq i32 %18, 1, !dbg !13933
  br i1 %19, label %20, label %17, !dbg !13931, !llvm.loop !13934

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !13936
  tail call fastcc void @LL_RCC_SetAHBPrescaler.169(i32 noundef %21) #24, !dbg !13937
  tail call fastcc void @LL_RCC_SetSysClkSource.170() #24, !dbg !13938
  br label %22, !dbg !13939

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.171() #24, !dbg !13940
  %24 = icmp eq i32 %23, 8, !dbg !13941
  br i1 %24, label %25, label %22, !dbg !13939, !llvm.loop !13942

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !13944
  %27 = load i32, i32* %26, align 4, !dbg !13944
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.172(i32 noundef %27) #24, !dbg !13945
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !13946
  %29 = load i32, i32* %28, align 4, !dbg !13946
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.173(i32 noundef %29) #24, !dbg !13947
  br label %30, !dbg !13948

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !13949
  %33 = icmp ugt i32 %32, %10, !dbg !13951
  br i1 %33, label %34, label %36, !dbg !13952

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !13953
  call void @llvm.dbg.value(metadata i32 %35, metadata !13916, metadata !DIExpression()), !dbg !13918
  br label %36, !dbg !13955

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !13918
  call void @llvm.dbg.value(metadata i32 %37, metadata !13916, metadata !DIExpression()), !dbg !13918
  %38 = icmp eq i32 %37, 0, !dbg !13956
  br i1 %38, label %39, label %40, !dbg !13958

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #24, !dbg !13959
  br label %40, !dbg !13961

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !13962
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.167() unnamed_addr #15 !dbg !13963 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13964
  %2 = or i32 %1, 16777216, !dbg !13964
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13964
  ret void, !dbg !13965
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.168() unnamed_addr #5 !dbg !13966 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13967
  %2 = lshr i32 %1, 25, !dbg !13968
  %3 = and i32 %2, 1, !dbg !13968
  ret i32 %3, !dbg !13969
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.169(i32 noundef %0) unnamed_addr #15 !dbg !13970 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13972, metadata !DIExpression()), !dbg !13973
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13974
  %3 = and i32 %2, -241, !dbg !13974
  %4 = or i32 %3, %0, !dbg !13974
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13974
  ret void, !dbg !13975
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.170() unnamed_addr #15 !dbg !13976 {
  call void @llvm.dbg.value(metadata i32 2, metadata !13978, metadata !DIExpression()), !dbg !13979
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13980
  %2 = and i32 %1, -4, !dbg !13980
  %3 = or i32 %2, 2, !dbg !13980
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13980
  ret void, !dbg !13981
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.171() unnamed_addr #5 !dbg !13982 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13983
  %2 = and i32 %1, 12, !dbg !13983
  ret i32 %2, !dbg !13984
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.172(i32 noundef %0) unnamed_addr #15 !dbg !13985 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13987, metadata !DIExpression()), !dbg !13988
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13989
  %3 = and i32 %2, -7169, !dbg !13989
  %4 = or i32 %3, %0, !dbg !13989
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13989
  ret void, !dbg !13990
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.173(i32 noundef %0) unnamed_addr #15 !dbg !13991 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13993, metadata !DIExpression()), !dbg !13994
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13995
  %3 = and i32 %2, -57345, !dbg !13995
  %4 = or i32 %3, %0, !dbg !13995
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13995
  ret void, !dbg !13996
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLSAI_IsReady() unnamed_addr #5 !dbg !13997 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13998
  %2 = lshr i32 %1, 29, !dbg !13999
  %3 = and i32 %2, 1, !dbg !13999
  ret i32 %3, !dbg !14000
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #5 !dbg !14001 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14002
  %2 = lshr i32 %1, 27, !dbg !14003
  %3 = and i32 %2, 1, !dbg !14003
  ret i32 %3, !dbg !14004
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #15 !dbg !14005 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14009, metadata !DIExpression()), !dbg !14015
  call void @llvm.dbg.value(metadata i32 %1, metadata !14010, metadata !DIExpression()), !dbg !14015
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !14011, metadata !DIExpression()), !dbg !14015
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !14012, metadata !DIExpression()), !dbg !14015
  call void @llvm.dbg.value(metadata i32 0, metadata !14013, metadata !DIExpression()), !dbg !14015
  call void @llvm.dbg.value(metadata i32 0, metadata !14014, metadata !DIExpression()), !dbg !14015
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !14016
  %6 = icmp eq i32 %5, 0, !dbg !14018
  br i1 %6, label %7, label %27, !dbg !14019

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #24, !dbg !14020
  call void @llvm.dbg.value(metadata i32 %8, metadata !14014, metadata !DIExpression()), !dbg !14015
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.174() #24, !dbg !14022
  %10 = icmp eq i32 %9, 1, !dbg !14024
  br i1 %10, label %19, label %11, !dbg !14025

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !14026
  br i1 %12, label %13, label %14, !dbg !14029

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #24, !dbg !14030
  br label %15, !dbg !14032

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.175() #24, !dbg !14033
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.176() #24, !dbg !14035
  br label %16, !dbg !14036

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.174() #24, !dbg !14037
  %18 = icmp eq i32 %17, 1, !dbg !14038
  br i1 %18, label %19, label %16, !dbg !14036, !llvm.loop !14039

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !14041
  %21 = load i32, i32* %20, align 4, !dbg !14041
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !14042
  %23 = load i32, i32* %22, align 4, !dbg !14042
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !14043
  %25 = load i32, i32* %24, align 4, !dbg !14043
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.166(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #24, !dbg !14044
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #24, !dbg !14045
  call void @llvm.dbg.value(metadata i32 %26, metadata !14013, metadata !DIExpression()), !dbg !14015
  br label %27, !dbg !14046

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !14047
  call void @llvm.dbg.value(metadata i32 %28, metadata !14013, metadata !DIExpression()), !dbg !14015
  ret i32 %28, !dbg !14048
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.174() unnamed_addr #5 !dbg !14049 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14050
  %2 = lshr i32 %1, 17, !dbg !14051
  %3 = and i32 %2, 1, !dbg !14051
  ret i32 %3, !dbg !14052
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #15 !dbg !14053 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14054
  %2 = or i32 %1, 262144, !dbg !14054
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14054
  ret void, !dbg !14055
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.175() unnamed_addr #15 !dbg !14056 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14057
  %2 = and i32 %1, -262145, !dbg !14057
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14057
  ret void, !dbg !14058
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.176() unnamed_addr #15 !dbg !14059 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14060
  %2 = or i32 %1, 65536, !dbg !14060
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14060
  ret void, !dbg !14061
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #21 !dbg !14062 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !14065, metadata !DIExpression()), !dbg !14081
  call void @llvm.dbg.value(metadata i32 undef, metadata !14065, metadata !DIExpression()), !dbg !14081
  call void @llvm.dbg.value(metadata i32 undef, metadata !14065, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !14081
  ret void, !dbg !14082
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !14083 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14087, metadata !DIExpression()), !dbg !14089
  %2 = icmp eq i8* %0, null, !dbg !14090
  br i1 %2, label %29, label %3, !dbg !14092

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !14093
  %5 = icmp eq i8 %4, 0, !dbg !14094
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !14095
  br i1 %6, label %29, label %8, !dbg !14095

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !14088, metadata !DIExpression()), !dbg !14089
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !14096

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !14088, metadata !DIExpression()), !dbg !14089
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #24, !dbg !14098
  br i1 %10, label %11, label %15, !dbg !14103

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !14104
  %13 = load i8*, i8** %12, align 4, !dbg !14104
  %14 = icmp eq i8* %13, %0, !dbg !14105
  br i1 %14, label %29, label %15, !dbg !14106

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !14107
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !14088, metadata !DIExpression()), !dbg !14089
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !14108
  br i1 %17, label %7, label %8, !dbg !14109, !llvm.loop !14110

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !14088, metadata !DIExpression()), !dbg !14089
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #24, !dbg !14112
  br i1 %20, label %21, label %26, !dbg !14116

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !14117
  %23 = load i8*, i8** %22, align 4, !dbg !14117
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #25, !dbg !14118
  %25 = icmp eq i32 %24, 0, !dbg !14119
  br i1 %25, label %29, label %26, !dbg !14120

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !14121
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !14088, metadata !DIExpression()), !dbg !14089
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !14122
  br i1 %28, label %29, label %18, !dbg !14096, !llvm.loop !14123

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !14089
  ret %struct.device* %30, !dbg !14125
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #10 !dbg !14126 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !14130, metadata !DIExpression()), !dbg !14131
  %2 = icmp eq %struct.device* %0, null, !dbg !14132
  br i1 %2, label %14, label %3, !dbg !14134

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !14135
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !14135
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !14136
  %7 = load i8, i8* %6, align 1, !dbg !14136
  %8 = and i8 %7, 1, !dbg !14136
  %9 = icmp eq i8 %8, 0, !dbg !14136
  br i1 %9, label %14, label %10, !dbg !14137

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !14138
  %12 = load i8, i8* %11, align 1, !dbg !14138
  %13 = icmp eq i8 %12, 0, !dbg !14139
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !14131
  ret i1 %15, !dbg !14140
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #6 !dbg !14141 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !14146, metadata !DIExpression()), !dbg !14147
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !14148
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !14149
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !14150 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !14158, metadata !DIExpression()), !dbg !14163
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !14159, metadata !DIExpression()), !dbg !14163
  call void @llvm.dbg.value(metadata i8* %2, metadata !14160, metadata !DIExpression()), !dbg !14163
  %5 = bitcast i32* %4 to i8*, !dbg !14164
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !14164
  call void @llvm.dbg.value(metadata i32 0, metadata !14161, metadata !DIExpression()), !dbg !14163
  store i32 0, i32* %4, align 4, !dbg !14165
  call void @llvm.dbg.value(metadata i32* %4, metadata !14161, metadata !DIExpression(DW_OP_deref)), !dbg !14163
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !14166
  call void @llvm.dbg.value(metadata i16* %6, metadata !14162, metadata !DIExpression()), !dbg !14163
  %7 = load i32, i32* %4, align 4, !dbg !14167
  call void @llvm.dbg.value(metadata i32 %7, metadata !14161, metadata !DIExpression()), !dbg !14163
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !14168
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !14169
  ret i32 %8, !dbg !14170
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !14171 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !14175, metadata !DIExpression()), !dbg !14181
  call void @llvm.dbg.value(metadata i32* %1, metadata !14176, metadata !DIExpression()), !dbg !14181
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !14182
  %4 = load i16*, i16** %3, align 4, !dbg !14182
  call void @llvm.dbg.value(metadata i16* %4, metadata !14177, metadata !DIExpression()), !dbg !14181
  %5 = icmp eq i16* %4, null, !dbg !14183
  br i1 %5, label %14, label %6, !dbg !14184

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !14185
  call void @llvm.dbg.value(metadata i32 %7, metadata !14178, metadata !DIExpression()), !dbg !14185
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !14186
  %9 = load i16, i16* %8, align 2, !dbg !14186
  %10 = add i16 %9, -32767, !dbg !14187
  %11 = icmp ult i16 %10, 2, !dbg !14187
  %12 = add i32 %7, 1, !dbg !14188
  call void @llvm.dbg.value(metadata i32 %12, metadata !14178, metadata !DIExpression()), !dbg !14185
  br i1 %11, label %13, label %6, !dbg !14187, !llvm.loop !14190

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !14193
  br label %14, !dbg !14194

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !14195
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !14196 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !14200, metadata !DIExpression()), !dbg !14211
  call void @llvm.dbg.value(metadata i32 %1, metadata !14201, metadata !DIExpression()), !dbg !14211
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !14202, metadata !DIExpression()), !dbg !14211
  call void @llvm.dbg.value(metadata i8* %3, metadata !14203, metadata !DIExpression()), !dbg !14211
  call void @llvm.dbg.value(metadata i32 0, metadata !14204, metadata !DIExpression()), !dbg !14212
  %5 = icmp eq i32 %1, 0, !dbg !14213
  br i1 %5, label %16, label %8, !dbg !14214

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !14204, metadata !DIExpression()), !dbg !14212
  %7 = icmp eq i32 %15, %1, !dbg !14213
  br i1 %7, label %16, label %8, !dbg !14214, !llvm.loop !14215

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !14204, metadata !DIExpression()), !dbg !14212
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !14217
  %11 = load i16, i16* %10, align 2, !dbg !14217
  call void @llvm.dbg.value(metadata i16 %11, metadata !14206, metadata !DIExpression()), !dbg !14218
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #24, !dbg !14219
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !14209, metadata !DIExpression()), !dbg !14218
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #25, !dbg !14220
  call void @llvm.dbg.value(metadata i32 %13, metadata !14210, metadata !DIExpression()), !dbg !14218
  %14 = icmp slt i32 %13, 0, !dbg !14221
  %15 = add nuw i32 %9, 1, !dbg !14223
  call void @llvm.dbg.value(metadata i32 %15, metadata !14204, metadata !DIExpression()), !dbg !14212
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !14224
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #4 !dbg !14225 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !14229, metadata !DIExpression()), !dbg !14232
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !14230, metadata !DIExpression()), !dbg !14232
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !14231, metadata !DIExpression()), !dbg !14232
  %2 = sext i16 %0 to i32, !dbg !14233
  %3 = icmp slt i16 %0, 1, !dbg !14235
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !14236
  %6 = add nsw i32 %2, -1, !dbg !14236
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !14236
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !14236
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !14230, metadata !DIExpression()), !dbg !14232
  ret %struct.device* %8, !dbg !14237
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !14238 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !14240, metadata !DIExpression()), !dbg !14245
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !14241, metadata !DIExpression()), !dbg !14245
  call void @llvm.dbg.value(metadata i8* %2, metadata !14242, metadata !DIExpression()), !dbg !14245
  %5 = bitcast i32* %4 to i8*, !dbg !14246
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !14246
  call void @llvm.dbg.value(metadata i32 0, metadata !14243, metadata !DIExpression()), !dbg !14245
  store i32 0, i32* %4, align 4, !dbg !14247
  call void @llvm.dbg.value(metadata i32* %4, metadata !14243, metadata !DIExpression(DW_OP_deref)), !dbg !14245
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !14248
  call void @llvm.dbg.value(metadata i16* %6, metadata !14244, metadata !DIExpression()), !dbg !14245
  %7 = load i32, i32* %4, align 4, !dbg !14249
  call void @llvm.dbg.value(metadata i32 %7, metadata !14243, metadata !DIExpression()), !dbg !14245
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !14250
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !14251
  ret i32 %8, !dbg !14252
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !14253 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !14255, metadata !DIExpression()), !dbg !14260
  call void @llvm.dbg.value(metadata i32* %1, metadata !14256, metadata !DIExpression()), !dbg !14260
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !14261
  %4 = load i16*, i16** %3, align 4, !dbg !14261
  call void @llvm.dbg.value(metadata i16* %4, metadata !14257, metadata !DIExpression()), !dbg !14260
  call void @llvm.dbg.value(metadata i32 0, metadata !14258, metadata !DIExpression()), !dbg !14260
  call void @llvm.dbg.value(metadata i32 0, metadata !14259, metadata !DIExpression()), !dbg !14260
  %5 = icmp eq i16* %4, null, !dbg !14262
  br i1 %5, label %22, label %6, !dbg !14264

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !14258, metadata !DIExpression()), !dbg !14260
  call void @llvm.dbg.value(metadata i16* %8, metadata !14257, metadata !DIExpression()), !dbg !14260
  %9 = load i16, i16* %8, align 2, !dbg !14265
  %10 = icmp eq i16 %9, -32768, !dbg !14269
  call void @llvm.dbg.value(metadata i32 undef, metadata !14258, metadata !DIExpression()), !dbg !14260
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !14270
  call void @llvm.dbg.value(metadata i16* %11, metadata !14257, metadata !DIExpression()), !dbg !14260
  %12 = zext i1 %10 to i32, !dbg !14271
  %13 = add i32 %7, %12, !dbg !14271
  call void @llvm.dbg.value(metadata i32 %13, metadata !14258, metadata !DIExpression()), !dbg !14260
  %14 = icmp eq i32 %13, 2, !dbg !14272
  br i1 %14, label %15, label %6, !dbg !14273

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !14260
  call void @llvm.dbg.value(metadata i32 %16, metadata !14259, metadata !DIExpression()), !dbg !14260
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !14274
  %18 = load i16, i16* %17, align 2, !dbg !14274
  %19 = icmp eq i16 %18, 32767, !dbg !14275
  %20 = add i32 %16, 1, !dbg !14276
  call void @llvm.dbg.value(metadata i32 %20, metadata !14259, metadata !DIExpression()), !dbg !14260
  br i1 %19, label %21, label %15, !dbg !14278, !llvm.loop !14279

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !14281
  br label %22, !dbg !14282

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !14283
  call void @llvm.dbg.value(metadata i16* %23, metadata !14257, metadata !DIExpression()), !dbg !14260
  ret i16* %23, !dbg !14284
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #10 !dbg !14285 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14288
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !14289
  ret i32* %2, !dbg !14290
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #4 !dbg !14291 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14439, metadata !DIExpression()), !dbg !14442
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !14440, metadata !DIExpression()), !dbg !14442
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14441, metadata !DIExpression()), !dbg !14442
  ret void, !dbg !14443
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !14444 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14448, metadata !DIExpression()), !dbg !14450
  call void @llvm.dbg.value(metadata i32 %1, metadata !14449, metadata !DIExpression()), !dbg !14450
  ret void, !dbg !14451
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !14452 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14456, metadata !DIExpression()), !dbg !14458
  call void @llvm.dbg.value(metadata i32 %1, metadata !14457, metadata !DIExpression()), !dbg !14458
  ret void, !dbg !14459
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !14460 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14464, metadata !DIExpression()), !dbg !14466
  call void @llvm.dbg.value(metadata i8* %1, metadata !14465, metadata !DIExpression()), !dbg !14466
  ret i32 -134, !dbg !14467
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !14468 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14472, metadata !DIExpression()), !dbg !14474
  call void @llvm.dbg.value(metadata i8* %1, metadata !14473, metadata !DIExpression()), !dbg !14474
  ret i32 -134, !dbg !14475
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !14476 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14479, metadata !DIExpression()), !dbg !14480
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14481, !srcloc !14487
  call void @llvm.dbg.value(metadata i32 undef, metadata !14484, metadata !DIExpression()) #23, !dbg !14488
  call void @llvm.dbg.value(metadata i32 undef, metadata !14485, metadata !DIExpression()) #23, !dbg !14488
  br label %3, !dbg !14489

3:                                                ; preds = %3, %1
  br label %3, !dbg !14490, !llvm.loop !14493
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !14496 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14500, metadata !DIExpression()), !dbg !14502
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !14501, metadata !DIExpression()), !dbg !14502
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.181, i32 0, i32 0), i32 noundef 69) #25, !dbg !14503
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !14508
  unreachable, !dbg !14508
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !14509 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14511, metadata !DIExpression()), !dbg !14512
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !14513
  unreachable, !dbg !14513
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !14514 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14516, metadata !DIExpression()), !dbg !14520
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !14517, metadata !DIExpression()), !dbg !14520
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14521, !srcloc !14487
  call void @llvm.dbg.value(metadata i32 undef, metadata !14484, metadata !DIExpression()) #23, !dbg !14523
  call void @llvm.dbg.value(metadata i32 undef, metadata !14485, metadata !DIExpression()) #23, !dbg !14523
  call void @llvm.dbg.value(metadata i32 undef, metadata !14518, metadata !DIExpression()), !dbg !14520
  %4 = tail call fastcc %struct.k_thread* @k_current_get.184() #26, !dbg !14524
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14519, metadata !DIExpression()), !dbg !14520
  %5 = tail call fastcc i8* @reason_to_str(i32 noundef %0) #24, !dbg !14525
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.185, i32 0, i32 0), i32 noundef 69, i32 noundef %0, i8* noundef %5, i32 noundef 0) #25, !dbg !14525
  %6 = icmp eq %struct.__esf* %1, null, !dbg !14530
  br i1 %6, label %15, label %7, !dbg !14532

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !14533, metadata !DIExpression()), !dbg !14538
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %1, i32 0, i32 0, i32 7, !dbg !14540
  %9 = load i32, i32* %8, align 4, !dbg !14540
  %10 = and i32 %9, 511, !dbg !14541
  %11 = icmp eq i32 %10, 0, !dbg !14542
  br i1 %11, label %13, label %12, !dbg !14543

12:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.186, i32 0, i32 0), i32 noundef 69) #25, !dbg !14544
  br label %13, !dbg !14550

13:                                               ; preds = %7, %12
  %14 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %4) #24, !dbg !14551
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.187, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %4, i8* noundef %14) #25, !dbg !14551
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #24, !dbg !14556
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !14533, metadata !DIExpression()), !dbg !14557
  br label %17, !dbg !14562

15:                                               ; preds = %2
  %16 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %4) #24, !dbg !14551
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.187, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %4, i8* noundef %16) #25, !dbg !14551
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #24, !dbg !14556
  br label %17, !dbg !14563

17:                                               ; preds = %15, %13
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !14521
  call void @llvm.dbg.value(metadata i32 %18, metadata !14484, metadata !DIExpression()) #23, !dbg !14523
  call void @llvm.dbg.value(metadata i32 %18, metadata !14518, metadata !DIExpression()), !dbg !14520
  call void @llvm.dbg.value(metadata i32 undef, metadata !14564, metadata !DIExpression()) #23, !dbg !14567
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !14569, !srcloc !14570
  tail call fastcc void @k_thread_abort.188(%struct.k_thread* noundef %4) #24, !dbg !14571
  ret void, !dbg !14574
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.184() unnamed_addr #12 !dbg !14575 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.196() #26, !dbg !14579
  ret %struct.k_thread* %1, !dbg !14580
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @reason_to_str(i32 noundef %0) unnamed_addr #4 !dbg !14581 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14585, metadata !DIExpression()), !dbg !14586
  %2 = icmp ult i32 %0, 5, !dbg !14587
  br i1 %2, label %3, label %6, !dbg !14587

3:                                                ; preds = %1
  %4 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table.reason_to_str, i32 0, i32 %0, !dbg !14587
  %5 = load i8*, i8** %4, align 4, !dbg !14587
  br label %6, !dbg !14587

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9.190, i32 0, i32 0), %1 ], !dbg !14588
  ret i8* %7, !dbg !14590
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @thread_name_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14591 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14595, metadata !DIExpression()), !dbg !14597
  %2 = icmp eq %struct.k_thread* %0, null, !dbg !14598
  br i1 %2, label %9, label %3, !dbg !14599

3:                                                ; preds = %1
  %4 = tail call i8* @k_thread_name_get(%struct.k_thread* noundef nonnull %0) #25, !dbg !14600
  call void @llvm.dbg.value(metadata i8* %4, metadata !14596, metadata !DIExpression()), !dbg !14597
  %5 = icmp eq i8* %4, null, !dbg !14601
  br i1 %5, label %9, label %6, !dbg !14603

6:                                                ; preds = %3
  %7 = load i8, i8* %4, align 1, !dbg !14604
  %8 = icmp eq i8 %7, 0, !dbg !14605
  br i1 %8, label %9, label %10, !dbg !14606

9:                                                ; preds = %1, %6, %3
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.189, i32 0, i32 0), metadata !14596, metadata !DIExpression()), !dbg !14597
  br label %10, !dbg !14607

10:                                               ; preds = %9, %6
  %11 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.189, i32 0, i32 0), %9 ], [ %4, %6 ], !dbg !14597
  call void @llvm.dbg.value(metadata i8* %11, metadata !14596, metadata !DIExpression()), !dbg !14597
  ret i8* %11, !dbg !14609
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.188(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14610 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14614, metadata !DIExpression()), !dbg !14615
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !14616, !srcloc !14618
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !14619
  ret void, !dbg !14620
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.196() unnamed_addr #12 !dbg !14621 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !14622, !srcloc !14624
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !14625
  ret %struct.k_thread* %1, !dbg !14626
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !14627 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14631, metadata !DIExpression()), !dbg !14634
  call void @llvm.dbg.value(metadata i32 %1, metadata !14632, metadata !DIExpression()), !dbg !14634
  call void @llvm.dbg.value(metadata i32 %2, metadata !14633, metadata !DIExpression()), !dbg !14634
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #25, !dbg !14635
  ret void, !dbg !14636
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !14637 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14641, metadata !DIExpression()), !dbg !14644
  call void @llvm.dbg.value(metadata i8* %1, metadata !14642, metadata !DIExpression()), !dbg !14644
  call void @llvm.dbg.value(metadata i32 %2, metadata !14643, metadata !DIExpression()), !dbg !14644
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #25, !dbg !14645
  ret void, !dbg !14646
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !14647 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #24, !dbg !14648
  ret void, !dbg !14649
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !14650 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14652, metadata !DIExpression()), !dbg !14653
  tail call fastcc void @init_idle_thread(i32 noundef %0) #24, !dbg !14654
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !14655
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !14656
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !14657
  %4 = trunc i32 %0 to i8, !dbg !14658
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !14659
  store i8 %4, i8* %5, align 4, !dbg !14660
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !14661
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #24, !dbg !14662
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !14663
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !14664
  store i8* %8, i8** %9, align 4, !dbg !14665
  ret void, !dbg !14666
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !14667 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14669, metadata !DIExpression()), !dbg !14675
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !14676
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14670, metadata !DIExpression()), !dbg !14675
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !14677
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !14671, metadata !DIExpression()), !dbg !14675
  call void @llvm.dbg.value(metadata i8* null, metadata !14674, metadata !DIExpression()), !dbg !14675
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !14678
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !14679
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #25, !dbg !14680
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #24, !dbg !14681
  ret void, !dbg !14682
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #4 !dbg !14683 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !14687, metadata !DIExpression()), !dbg !14688
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !14689
  ret i8* %2, !dbg !14690
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !14691 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14696, metadata !DIExpression()), !dbg !14697
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14698
  %3 = load i8, i8* %2, align 1, !dbg !14699
  %4 = and i8 %3, -5, !dbg !14699
  store i8 %4, i8* %2, align 1, !dbg !14699
  ret void, !dbg !14700
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #2 !dbg !14701 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #24, !dbg !14704
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #25, !dbg !14705
  %3 = ptrtoint i8* %2 to i32, !dbg !14714
  %4 = add i32 %3, 2048, !dbg !14715
  call void @llvm.dbg.value(metadata i32 %4, metadata !14709, metadata !DIExpression()) #23, !dbg !14716
  call void @llvm.dbg.value(metadata i32 %4, metadata !14717, metadata !DIExpression()) #23, !dbg !14720
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #23, !dbg !14722, !srcloc !14723
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !14724
  %6 = or i32 %5, 512, !dbg !14724
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !14724
  tail call fastcc void @__NVIC_SetPriority.205(i32 noundef -2, i32 noundef 255) #25, !dbg !14725
  tail call fastcc void @__NVIC_SetPriority.205(i32 noundef -5, i32 noundef 0) #25, !dbg !14728
  tail call fastcc void @__NVIC_SetPriority.205(i32 noundef -12, i32 noundef 0) #25, !dbg !14729
  tail call fastcc void @__NVIC_SetPriority.205(i32 noundef -11, i32 noundef 0) #25, !dbg !14730
  tail call fastcc void @__NVIC_SetPriority.205(i32 noundef -10, i32 noundef 0) #25, !dbg !14731
  tail call fastcc void @__NVIC_SetPriority.205(i32 noundef -4, i32 noundef 0) #25, !dbg !14732
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !14733
  %8 = or i32 %7, 458752, !dbg !14733
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !14733
  tail call void @z_arm_fault_init() #25, !dbg !14734
  tail call void @z_arm_cpu_idle_init() #25, !dbg !14735
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !14736
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !14739
  %9 = tail call i32 @z_arm_mpu_init() #25, !dbg !14740
  tail call void @z_arm_configure_static_mpu_regions() #25, !dbg !14741
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !14742
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #23, !dbg !14742
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !14703, metadata !DIExpression()), !dbg !14743
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #24, !dbg !14744
  call void @z_device_state_init() #25, !dbg !14745
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #24, !dbg !14746
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #24, !dbg !14747
  %11 = call fastcc i8* @prepare_multithreading() #24, !dbg !14748
  call fastcc void @switch_to_main_thread(i8* noundef %11) #29, !dbg !14749
  unreachable, !dbg !14749
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2476 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2480, metadata !DIExpression()), !dbg !14750
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !14751
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !14751
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2481, metadata !DIExpression()), !dbg !14750
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2481, metadata !DIExpression()), !dbg !14750
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !14752
  br i1 %7, label %8, label %35, !dbg !14753

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2481, metadata !DIExpression()), !dbg !14750
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !14754
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !14754
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2491, metadata !DIExpression()), !dbg !14755
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !14756
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !14756
  %14 = tail call i32 %13(%struct.device* noundef %11) #25, !dbg !14757
  call void @llvm.dbg.value(metadata i32 %14, metadata !2495, metadata !DIExpression()), !dbg !14755
  %15 = icmp eq %struct.device* %11, null, !dbg !14758
  br i1 %15, label %32, label %16, !dbg !14760

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !14761
  br i1 %17, label %26, label %18, !dbg !14764

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !14765
  call void @llvm.dbg.value(metadata i32 %19, metadata !2495, metadata !DIExpression()), !dbg !14755
  %20 = icmp ult i32 %19, 255, !dbg !14767
  %21 = select i1 %20, i32 %19, i32 255, !dbg !14767
  call void @llvm.dbg.value(metadata i32 %21, metadata !2495, metadata !DIExpression()), !dbg !14755
  %22 = trunc i32 %21 to i8, !dbg !14768
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !14769
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !14769
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !14770
  store i8 %22, i8* %25, align 1, !dbg !14771
  br label %26, !dbg !14772

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !14773
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !14773
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !14774
  %30 = load i8, i8* %29, align 1, !dbg !14775
  %31 = or i8 %30, 1, !dbg !14775
  store i8 %31, i8* %29, align 1, !dbg !14775
  br label %32, !dbg !14776

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !14777
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2481, metadata !DIExpression()), !dbg !14750
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !14752
  br i1 %34, label %8, label %35, !dbg !14753, !llvm.loop !14778

35:                                               ; preds = %32, %1
  ret void, !dbg !14780
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.205(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !14781 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14783, metadata !DIExpression()), !dbg !14785
  call void @llvm.dbg.value(metadata i32 %1, metadata !14784, metadata !DIExpression()), !dbg !14785
  %3 = trunc i32 %1 to i8, !dbg !14786
  %4 = shl i8 %3, 4, !dbg !14786
  %5 = and i32 %0, 15, !dbg !14789
  %6 = add nsw i32 %5, -4, !dbg !14790
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !14791
  store volatile i8 %4, i8* %7, align 1, !dbg !14792
  ret void, !dbg !14793
}

; Function Attrs: optsize
declare !dbg !14794 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #6 !dbg !14795 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14798, metadata !DIExpression()), !dbg !14799
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14800
  store i8 1, i8* %2, align 1, !dbg !14801
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !14802
  store i8 1, i8* %3, align 4, !dbg !14803
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !14804
  store i32 0, i32* %4, align 4, !dbg !14805
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !14806
  store i32 0, i32* %5, align 4, !dbg !14807
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !14808
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !14809
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14810
  ret void, !dbg !14811
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !14812 {
  tail call void @z_sched_init() #25, !dbg !14817
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14818
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.206, i32 0, i32 0)) #25, !dbg !14819
  call void @llvm.dbg.value(metadata i8* %1, metadata !14816, metadata !DIExpression()), !dbg !14820
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #24, !dbg !14821
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !14822
  tail call void @z_init_cpu(i32 noundef 0) #24, !dbg !14823
  ret i8* %1, !dbg !14824
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #2 !dbg !14825 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14829, metadata !DIExpression()), !dbg !14830
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #25, !dbg !14831
  unreachable, !dbg !14832
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !14833 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14835, metadata !DIExpression()), !dbg !14838
  call void @llvm.dbg.value(metadata i8* %1, metadata !14836, metadata !DIExpression()), !dbg !14838
  call void @llvm.dbg.value(metadata i8* %2, metadata !14837, metadata !DIExpression()), !dbg !14838
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !14839
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #24, !dbg !14840
  tail call void @boot_banner() #25, !dbg !14841
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #24, !dbg !14842
  tail call void @z_init_static_threads() #25, !dbg !14843
  tail call void @main() #25, !dbg !14844
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !14845
  %5 = and i8 %4, -2, !dbg !14845
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !14845
  ret void, !dbg !14846
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #4 !dbg !14847 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !14857, metadata !DIExpression()), !dbg !14859
  call void @llvm.dbg.value(metadata i8* %1, metadata !14858, metadata !DIExpression()), !dbg !14859
  ret void, !dbg !14860
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #4 !dbg !14861 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !14863, metadata !DIExpression()), !dbg !14865
  call void @llvm.dbg.value(metadata i8* %1, metadata !14864, metadata !DIExpression()), !dbg !14865
  ret void, !dbg !14866
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !14867 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !14868, !srcloc !14875
  call void @llvm.dbg.value(metadata i32 %1, metadata !14871, metadata !DIExpression()) #23, !dbg !14876
  %2 = icmp ne i32 %1, 0, !dbg !14877
  ret i1 %2, !dbg !14878
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #11 !dbg !14879 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14880
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !14881
  %3 = load i8, i8* %2, align 4, !dbg !14882
  %4 = or i8 %3, 1, !dbg !14882
  store i8 %4, i8* %2, align 4, !dbg !14882
  ret void, !dbg !14883
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #11 !dbg !14884 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14885
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !14886
  %3 = load i8, i8* %2, align 4, !dbg !14887
  %4 = and i8 %3, -2, !dbg !14887
  store i8 %4, i8* %2, align 4, !dbg !14887
  ret void, !dbg !14888
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #10 !dbg !14889 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14890
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !14891
  %3 = load i8, i8* %2, align 4, !dbg !14891
  %4 = and i8 %3, 1, !dbg !14892
  %5 = icmp ne i8 %4, 0, !dbg !14893
  ret i1 %5, !dbg !14894
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !14895 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14899, metadata !DIExpression()), !dbg !14901
  call void @llvm.dbg.value(metadata i8* %1, metadata !14900, metadata !DIExpression()), !dbg !14901
  ret i32 -88, !dbg !14902
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #4 !dbg !14903 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14907, metadata !DIExpression()), !dbg !14908
  ret i8* null, !dbg !14909
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #4 !dbg !14910 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14914, metadata !DIExpression()), !dbg !14917
  call void @llvm.dbg.value(metadata i8* %1, metadata !14915, metadata !DIExpression()), !dbg !14917
  call void @llvm.dbg.value(metadata i32 %2, metadata !14916, metadata !DIExpression()), !dbg !14917
  ret i32 -88, !dbg !14918
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2506 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2620, metadata !DIExpression()), !dbg !14919
  call void @llvm.dbg.value(metadata i8* %1, metadata !2621, metadata !DIExpression()), !dbg !14919
  call void @llvm.dbg.value(metadata i32 %2, metadata !2622, metadata !DIExpression()), !dbg !14919
  call void @llvm.dbg.value(metadata i32 0, metadata !2623, metadata !DIExpression()), !dbg !14919
  call void @llvm.dbg.value(metadata i8 undef, metadata !2625, metadata !DIExpression()), !dbg !14919
  %4 = icmp eq i8* %1, null, !dbg !14920
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !14922
  br i1 %6, label %46, label %7, !dbg !14922

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14923
  %9 = load i8, i8* %8, align 1, !dbg !14923
  call void @llvm.dbg.value(metadata i8 %9, metadata !2625, metadata !DIExpression()), !dbg !14919
  %10 = add i32 %2, -1, !dbg !14924
  call void @llvm.dbg.value(metadata i32 %10, metadata !2622, metadata !DIExpression()), !dbg !14919
  call void @llvm.dbg.value(metadata i8 0, metadata !2626, metadata !DIExpression()), !dbg !14925
  call void @llvm.dbg.value(metadata i8 %9, metadata !2625, metadata !DIExpression()), !dbg !14919
  call void @llvm.dbg.value(metadata i32 0, metadata !2623, metadata !DIExpression()), !dbg !14919
  %11 = icmp eq i8 %9, 0, !dbg !14926
  br i1 %11, label %12, label %15, !dbg !14928

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !14929
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !14930
  store i8 0, i8* %14, align 1, !dbg !14931
  br label %46, !dbg !14932

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2626, metadata !DIExpression()), !dbg !14925
  call void @llvm.dbg.value(metadata i8 %17, metadata !2625, metadata !DIExpression()), !dbg !14919
  call void @llvm.dbg.value(metadata i32 %18, metadata !2623, metadata !DIExpression()), !dbg !14919
  %19 = zext i8 %17 to i32, !dbg !14933
  %20 = zext i8 %16 to i32, !dbg !14934
  %21 = shl nuw i32 1, %20, !dbg !14934
  call void @llvm.dbg.value(metadata i32 %21, metadata !2624, metadata !DIExpression()), !dbg !14919
  %22 = and i32 %21, %19, !dbg !14936
  %23 = icmp eq i32 %22, 0, !dbg !14938
  br i1 %23, label %42, label %24, !dbg !14939

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !14940
  %26 = sub i32 %10, %18, !dbg !14941
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !14942
  %28 = load i8*, i8** %27, align 4, !dbg !14942
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !14943
  %30 = load i32, i32* %29, align 4, !dbg !14943
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #24, !dbg !14944
  %32 = add i32 %31, %18, !dbg !14945
  call void @llvm.dbg.value(metadata i32 %32, metadata !2623, metadata !DIExpression()), !dbg !14919
  %33 = trunc i32 %21 to i8, !dbg !14946
  %34 = xor i8 %33, -1, !dbg !14946
  %35 = and i8 %17, %34, !dbg !14946
  call void @llvm.dbg.value(metadata i8 %35, metadata !2625, metadata !DIExpression()), !dbg !14919
  %36 = icmp eq i8 %35, 0, !dbg !14947
  br i1 %36, label %12, label %37, !dbg !14949

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !14950
  %39 = sub i32 %10, %32, !dbg !14952
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.209, i32 0, i32 0), i32 noundef 1) #24, !dbg !14953
  %41 = add i32 %40, %32, !dbg !14954
  call void @llvm.dbg.value(metadata i32 %41, metadata !2623, metadata !DIExpression()), !dbg !14919
  br label %42, !dbg !14955

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !14919
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !14919
  call void @llvm.dbg.value(metadata i8 %44, metadata !2625, metadata !DIExpression()), !dbg !14919
  call void @llvm.dbg.value(metadata i32 %43, metadata !2623, metadata !DIExpression()), !dbg !14919
  %45 = add i8 %16, 1, !dbg !14956
  call void @llvm.dbg.value(metadata i8 %45, metadata !2626, metadata !DIExpression()), !dbg !14925
  br label %15, !dbg !14928

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.210, i32 0, i32 0), %3 ], !dbg !14919
  ret i8* %47, !dbg !14957
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !14958 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14962, metadata !DIExpression()), !dbg !14967
  call void @llvm.dbg.value(metadata i32 %1, metadata !14963, metadata !DIExpression()), !dbg !14967
  call void @llvm.dbg.value(metadata i8* %2, metadata !14964, metadata !DIExpression()), !dbg !14967
  call void @llvm.dbg.value(metadata i32 %3, metadata !14965, metadata !DIExpression()), !dbg !14967
  %5 = icmp ult i32 %1, %3, !dbg !14968
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !14968
  call void @llvm.dbg.value(metadata i32 %6, metadata !14966, metadata !DIExpression()), !dbg !14967
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #25, !dbg !14969
  ret i32 %6, !dbg !14970
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14971 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14975, metadata !DIExpression()), !dbg !14976
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #25, !dbg !14977
  ret void, !dbg !14978
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !14979 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14988, metadata !DIExpression()), !dbg !14999
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14989, metadata !DIExpression()), !dbg !14999
  call void @llvm.dbg.value(metadata i32 %2, metadata !14990, metadata !DIExpression()), !dbg !14999
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14991, metadata !DIExpression()), !dbg !14999
  call void @llvm.dbg.value(metadata i8* %4, metadata !14992, metadata !DIExpression()), !dbg !14999
  call void @llvm.dbg.value(metadata i8* %5, metadata !14993, metadata !DIExpression()), !dbg !14999
  call void @llvm.dbg.value(metadata i8* %6, metadata !14994, metadata !DIExpression()), !dbg !14999
  call void @llvm.dbg.value(metadata i32 %7, metadata !14995, metadata !DIExpression()), !dbg !14999
  call void @llvm.dbg.value(metadata i32 %8, metadata !14996, metadata !DIExpression()), !dbg !14999
  call void @llvm.dbg.value(metadata i8* undef, metadata !14997, metadata !DIExpression()), !dbg !14999
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !15000
  tail call fastcc void @z_waitq_init(%struct._wait_q_t* noundef nonnull %11) #24, !dbg !15001
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !15002
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #24, !dbg !15003
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #24, !dbg !15004
  call void @llvm.dbg.value(metadata i8* %13, metadata !14998, metadata !DIExpression()), !dbg !14999
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #25, !dbg !15005
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !15006
  store i8* null, i8** %14, align 4, !dbg !15007
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15008
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !15008
  br i1 %16, label %20, label %17, !dbg !15010

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 6, !dbg !15011
  %19 = load %struct.k_heap*, %struct.k_heap** %18, align 8, !dbg !15011
  br label %20, !dbg !15012

20:                                               ; preds = %10, %17
  %21 = phi %struct.k_heap* [ %19, %17 ], [ null, %10 ], !dbg !14999
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !15013
  store %struct.k_heap* %21, %struct.k_heap** %22, align 8, !dbg !15015
  ret i8* %13, !dbg !15016
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%struct._wait_q_t* noundef %0) unnamed_addr #6 !dbg !15017 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15022, metadata !DIExpression()), !dbg !15023
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !15024
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #24, !dbg !15025
  ret void, !dbg !15026
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #6 !dbg !15027 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !15032, metadata !DIExpression()), !dbg !15036
  call void @llvm.dbg.value(metadata i32 %1, metadata !15033, metadata !DIExpression()), !dbg !15036
  call void @llvm.dbg.value(metadata i32 %2, metadata !15034, metadata !DIExpression()), !dbg !15036
  call void @llvm.dbg.value(metadata i32 %3, metadata !15035, metadata !DIExpression()), !dbg !15036
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !15037
  store %struct._wait_q_t* null, %struct._wait_q_t** %5, align 8, !dbg !15038
  %6 = trunc i32 %3 to i8, !dbg !15039
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !15040
  store i8 %6, i8* %7, align 4, !dbg !15041
  %8 = trunc i32 %2 to i8, !dbg !15042
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !15043
  store i8 %8, i8* %9, align 1, !dbg !15044
  %10 = trunc i32 %1 to i8, !dbg !15045
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !15046
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !15046
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !15046
  store i8 %10, i8* %13, align 2, !dbg !15047
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !15048
  store i8 0, i8* %14, align 1, !dbg !15049
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #24, !dbg !15050
  ret void, !dbg !15051
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #6 !dbg !15052 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15056, metadata !DIExpression()), !dbg !15064
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !15057, metadata !DIExpression()), !dbg !15064
  call void @llvm.dbg.value(metadata i32 %2, metadata !15058, metadata !DIExpression()), !dbg !15064
  call void @llvm.dbg.value(metadata i32 0, metadata !15063, metadata !DIExpression()), !dbg !15064
  %4 = add i32 %2, 7, !dbg !15065
  %5 = and i32 %4, -8, !dbg !15065
  %6 = add i32 %5, 64, !dbg !15065
  call void @llvm.dbg.value(metadata i32 %6, metadata !15059, metadata !DIExpression()), !dbg !15064
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.220(%struct.z_thread_stack_element* noundef %1) #24, !dbg !15067
  call void @llvm.dbg.value(metadata i8* %7, metadata !15062, metadata !DIExpression()), !dbg !15064
  call void @llvm.dbg.value(metadata i32 %5, metadata !15060, metadata !DIExpression()), !dbg !15064
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !15068
  call void @llvm.dbg.value(metadata i8* %8, metadata !15061, metadata !DIExpression()), !dbg !15064
  call void @llvm.dbg.value(metadata i32 0, metadata !15063, metadata !DIExpression()), !dbg !15064
  %9 = ptrtoint i8* %7 to i32, !dbg !15069
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !15070
  store i32 %9, i32* %10, align 4, !dbg !15071
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !15072
  store i32 %5, i32* %11, align 4, !dbg !15073
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !15074
  store i32 0, i32* %12, align 4, !dbg !15075
  call void @llvm.dbg.value(metadata i8* %8, metadata !15061, metadata !DIExpression()), !dbg !15064
  ret i8* %8, !dbg !15076
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.220(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #4 !dbg !15077 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !15081, metadata !DIExpression()), !dbg !15082
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !15083
  ret i8* %2, !dbg !15084
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !15085 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !15090, metadata !DIExpression()), !dbg !15091
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !15092
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !15093
  ret void, !dbg !15094
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !15095 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15097, metadata !DIExpression()), !dbg !15098
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15099
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #24, !dbg !15100
  ret void, !dbg !15101
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !15102 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15106, metadata !DIExpression()), !dbg !15107
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15108
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !15109
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15110
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !15111
  ret void, !dbg !15112
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #6 !dbg !15113 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15118, metadata !DIExpression()), !dbg !15119
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15120
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !15121
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15122
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !15123
  ret void, !dbg !15124
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !15125 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !15142, metadata !DIExpression()), !dbg !15143
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15133, metadata !DIExpression()), !dbg !15143
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !15134, metadata !DIExpression()), !dbg !15143
  call void @llvm.dbg.value(metadata i32 %2, metadata !15135, metadata !DIExpression()), !dbg !15143
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !15136, metadata !DIExpression()), !dbg !15143
  call void @llvm.dbg.value(metadata i8* %4, metadata !15137, metadata !DIExpression()), !dbg !15143
  call void @llvm.dbg.value(metadata i8* %5, metadata !15138, metadata !DIExpression()), !dbg !15143
  call void @llvm.dbg.value(metadata i8* %6, metadata !15139, metadata !DIExpression()), !dbg !15143
  call void @llvm.dbg.value(metadata i32 %7, metadata !15140, metadata !DIExpression()), !dbg !15143
  call void @llvm.dbg.value(metadata i32 %8, metadata !15141, metadata !DIExpression()), !dbg !15143
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #24, !dbg !15144
  %13 = icmp eq i64 %11, -1, !dbg !15145
  br i1 %13, label %15, label %14, !dbg !15147

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #24, !dbg !15148
  br label %15, !dbg !15150

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !15151
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15152 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !15157, metadata !DIExpression()), !dbg !15158
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15156, metadata !DIExpression()), !dbg !15158
  %4 = icmp eq i64 %3, 0, !dbg !15159
  br i1 %4, label %5, label %6, !dbg !15161

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #24, !dbg !15162
  br label %7, !dbg !15164

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !15165
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !15167
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15168 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15172, metadata !DIExpression()), !dbg !15173
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !15174, !srcloc !15176
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #24, !dbg !15177
  ret void, !dbg !15178
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15179 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15182, metadata !DIExpression()), !dbg !15183
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15181, metadata !DIExpression()), !dbg !15183
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15184
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !15185
  ret void, !dbg !15186
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !15187 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !15189, metadata !DIExpression()), !dbg !15209
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %28, !dbg !15210

1:                                                ; preds = %2
  tail call void @k_sched_lock() #25, !dbg !15211
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !15207, metadata !DIExpression()), !dbg !15212
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %30, label %29, !dbg !15213

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %26, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !15189, metadata !DIExpression()), !dbg !15209
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !15214
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !15214
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !15217
  %7 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !15217
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !15218
  %9 = load i32, i32* %8, align 4, !dbg !15218
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !15219
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !15219
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !15220
  %13 = load i8*, i8** %12, align 4, !dbg !15220
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !15221
  %15 = load i8*, i8** %14, align 4, !dbg !15221
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !15222
  %17 = load i8*, i8** %16, align 4, !dbg !15222
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !15223
  %19 = load i32, i32* %18, align 4, !dbg !15223
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !15224
  %21 = load i32, i32* %20, align 4, !dbg !15224
  %22 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.z_thread_stack_element* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* undef) #24, !dbg !15225
  %23 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !15226
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %23, i32 0, i32 2, !dbg !15227
  %25 = bitcast i8** %24 to %struct._static_thread_data**, !dbg !15228
  store %struct._static_thread_data* %3, %struct._static_thread_data** %25, align 4, !dbg !15228
  %26 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !15229
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %26, metadata !15189, metadata !DIExpression()), !dbg !15209
  %27 = icmp ult %struct._static_thread_data* %26, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !15230
  br i1 %27, label %2, label %1, !dbg !15210, !llvm.loop !15232

28:                                               ; preds = %0
  tail call void @k_sched_lock() #25, !dbg !15211
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !15207, metadata !DIExpression()), !dbg !15212
  br label %29, !dbg !15213

29:                                               ; preds = %43, %28, %1
  tail call void @k_sched_unlock() #25, !dbg !15234
  ret void, !dbg !15235

30:                                               ; preds = %1, %43
  %31 = phi %struct._static_thread_data* [ %44, %43 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !15207, metadata !DIExpression()), !dbg !15212
  %32 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 9, !dbg !15236
  %33 = load i32, i32* %32, align 4, !dbg !15236
  %34 = icmp eq i32 %33, -1, !dbg !15240
  br i1 %34, label %43, label %35, !dbg !15241

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 0, !dbg !15242
  %37 = load %struct.k_thread*, %struct.k_thread** %36, align 4, !dbg !15242
  %38 = icmp sgt i32 %33, 0, !dbg !15244
  %39 = select i1 %38, i32 %33, i32 0, !dbg !15244
  %40 = zext i32 %39 to i64, !dbg !15244
  %41 = tail call fastcc i64 @k_ms_to_ticks_ceil64.223(i64 noundef %40) #24, !dbg !15244
  %42 = insertvalue [1 x i64] poison, i64 %41, 0, !dbg !15245
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %37, [1 x i64] %42) #24, !dbg !15245
  br label %43, !dbg !15246

43:                                               ; preds = %30, %35
  %44 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 1, !dbg !15247
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %44, metadata !15207, metadata !DIExpression()), !dbg !15212
  %45 = icmp ult %struct._static_thread_data* %44, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !15248
  br i1 %45, label %30, label %29, !dbg !15213, !llvm.loop !15250
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64.223(i64 noundef %0) unnamed_addr #4 !dbg !15252 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15254, metadata !DIExpression()), !dbg !15255
  call void @llvm.dbg.value(metadata i64 %0, metadata !15256, metadata !DIExpression()), !dbg !15271
  call void @llvm.dbg.value(metadata i32 1000, metadata !15259, metadata !DIExpression()), !dbg !15271
  call void @llvm.dbg.value(metadata i32 10000, metadata !15260, metadata !DIExpression()), !dbg !15271
  call void @llvm.dbg.value(metadata i8 1, metadata !15261, metadata !DIExpression()), !dbg !15271
  call void @llvm.dbg.value(metadata i8 0, metadata !15262, metadata !DIExpression()), !dbg !15271
  call void @llvm.dbg.value(metadata i8 1, metadata !15263, metadata !DIExpression()), !dbg !15271
  call void @llvm.dbg.value(metadata i8 0, metadata !15264, metadata !DIExpression()), !dbg !15271
  call void @llvm.dbg.value(metadata i8 1, metadata !15265, metadata !DIExpression()), !dbg !15271
  call void @llvm.dbg.value(metadata i8 0, metadata !15266, metadata !DIExpression()), !dbg !15271
  call void @llvm.dbg.value(metadata i64 0, metadata !15267, metadata !DIExpression()), !dbg !15271
  call void @llvm.dbg.value(metadata i64 0, metadata !15267, metadata !DIExpression()), !dbg !15271
  %2 = mul i64 %0, 10, !dbg !15273
  ret i64 %2, !dbg !15279
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #2 !dbg !15280 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !15282, metadata !DIExpression()), !dbg !15286
  call void @llvm.dbg.value(metadata i8* %1, metadata !15283, metadata !DIExpression()), !dbg !15286
  call void @llvm.dbg.value(metadata i8* %2, metadata !15284, metadata !DIExpression()), !dbg !15286
  call void @llvm.dbg.value(metadata i8* %3, metadata !15285, metadata !DIExpression()), !dbg !15286
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15287
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !15288
  %7 = load i8, i8* %6, align 4, !dbg !15289
  %8 = or i8 %7, 4, !dbg !15289
  store i8 %8, i8* %6, align 4, !dbg !15289
  tail call void @z_thread_essential_clear() #24, !dbg !15290
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !15291
  unreachable, !dbg !15291
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #4 !dbg !15292 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15296, metadata !DIExpression()), !dbg !15297
  ret i32 -134, !dbg !15298
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #4 !dbg !15299 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15303, metadata !DIExpression()), !dbg !15305
  call void @llvm.dbg.value(metadata i32 %1, metadata !15304, metadata !DIExpression()), !dbg !15305
  ret i32 -134, !dbg !15306
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct.k_spinlock* noundef readnone %1) local_unnamed_addr #4 !dbg !15307 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15314, metadata !DIExpression()), !dbg !15316
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !15315, metadata !DIExpression()), !dbg !15316
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !15317
  %4 = icmp eq %struct.k_spinlock* %1, null
  %5 = or i1 %3, %4, !dbg !15319
  %6 = select i1 %5, i32 -22, i32 0, !dbg !15316
  ret i32 %6, !dbg !15320
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock* noundef readnone %0) local_unnamed_addr #4 !dbg !15321 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15325, metadata !DIExpression()), !dbg !15326
  %2 = icmp eq %struct.k_spinlock* %0, null, !dbg !15327
  %3 = select i1 %2, i32 -22, i32 0, !dbg !15326
  ret i32 %3, !dbg !15329
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !15330 {
  tail call void @sys_clock_idle_exit() #25, !dbg !15332
  ret void, !dbg !15333
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #2 !dbg !15334 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15336, metadata !DIExpression()), !dbg !15339
  call void @llvm.dbg.value(metadata i8* %1, metadata !15337, metadata !DIExpression()), !dbg !15339
  call void @llvm.dbg.value(metadata i8* %2, metadata !15338, metadata !DIExpression()), !dbg !15339
  br label %4, !dbg !15340

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15341, !srcloc !15348
  call void @llvm.dbg.value(metadata i32 undef, metadata !15344, metadata !DIExpression()) #23, !dbg !15349
  call void @llvm.dbg.value(metadata i32 undef, metadata !15345, metadata !DIExpression()) #23, !dbg !15349
  tail call fastcc void @k_cpu_idle() #24, !dbg !15350
  br label %4, !dbg !15340, !llvm.loop !15351
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !15353 {
  tail call void @arch_cpu_idle() #25, !dbg !15354
  ret void, !dbg !15355
}

; Function Attrs: optsize
declare !dbg !15356 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #10 !dbg !15357 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15361, metadata !DIExpression()), !dbg !15365
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15362, metadata !DIExpression()), !dbg !15365
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15366
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !15366
  %5 = load i8, i8* %4, align 2, !dbg !15366
  call void @llvm.dbg.value(metadata i8 %5, metadata !15363, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !15365
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !15367
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !15367
  %8 = load i8, i8* %7, align 2, !dbg !15367
  call void @llvm.dbg.value(metadata i8 %8, metadata !15364, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !15365
  %9 = icmp eq i8 %8, %5, !dbg !15368
  %10 = sext i8 %5 to i32, !dbg !15370
  %11 = sext i8 %8 to i32, !dbg !15370
  %12 = sub nsw i32 %11, %10, !dbg !15370
  %13 = select i1 %9, i32 0, i32 %12, !dbg !15370
  ret i32 %13, !dbg !15371
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !15372 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !15376, metadata !DIExpression()), !dbg !15377
  %2 = tail call fastcc i32 @slice_time() #24, !dbg !15378
  %3 = icmp eq i32 %2, 0, !dbg !15380
  br i1 %3, label %8, label %4, !dbg !15381

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #25, !dbg !15382
  %6 = add i32 %5, %2, !dbg !15384
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15385
  %7 = tail call fastcc i32 @slice_time() #24, !dbg !15386
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #25, !dbg !15387
  br label %8, !dbg !15388

8:                                                ; preds = %4, %1
  ret void, !dbg !15389
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #10 !dbg !15390 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !15394, metadata !DIExpression()), !dbg !15396
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !15397
  call void @llvm.dbg.value(metadata i32 %1, metadata !15395, metadata !DIExpression()), !dbg !15396
  ret i32 %1, !dbg !15398
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15399 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15403, metadata !DIExpression()), !dbg !15412
  call void @llvm.dbg.value(metadata i32 %1, metadata !15404, metadata !DIExpression()), !dbg !15412
  call void @llvm.dbg.value(metadata i32 0, metadata !15405, metadata !DIExpression()), !dbg !15413
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15414, metadata !DIExpression()) #23, !dbg !15421
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15423, !srcloc !15429
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !15423
  call void @llvm.dbg.value(metadata i32 %4, metadata !15426, metadata !DIExpression()) #23, !dbg !15430
  call void @llvm.dbg.value(metadata i32 undef, metadata !15427, metadata !DIExpression()) #23, !dbg !15430
  call void @llvm.dbg.value(metadata i32 %4, metadata !15420, metadata !DIExpression()) #23, !dbg !15421
  call void @llvm.dbg.value(metadata i32 %4, metadata !15411, metadata !DIExpression()), !dbg !15413
  call void @llvm.dbg.value(metadata i32 undef, metadata !15405, metadata !DIExpression()), !dbg !15413
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15431
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #24, !dbg !15434
  %6 = icmp sgt i32 %0, 0, !dbg !15435
  %7 = icmp sgt i32 %5, 2, !dbg !15437
  %8 = select i1 %7, i32 %5, i32 2, !dbg !15437
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !15437
  store i32 %9, i32* @slice_ticks, align 4, !dbg !15438
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !15439
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !15440
  call void @llvm.dbg.value(metadata i32 %4, metadata !15441, metadata !DIExpression()) #23, !dbg !15447
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15446, metadata !DIExpression()) #23, !dbg !15447
  call void @llvm.dbg.value(metadata i32 %4, metadata !15449, metadata !DIExpression()) #23, !dbg !15452
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !15454, !srcloc !15455
  call void @llvm.dbg.value(metadata i32 1, metadata !15405, metadata !DIExpression()), !dbg !15413
  call void @llvm.dbg.value(metadata i32 undef, metadata !15405, metadata !DIExpression()), !dbg !15413
  ret void, !dbg !15456
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #4 !dbg !15457 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15459, metadata !DIExpression()), !dbg !15460
  call void @llvm.dbg.value(metadata i32 %0, metadata !15461, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15476
  call void @llvm.dbg.value(metadata i32 1000, metadata !15464, metadata !DIExpression()), !dbg !15476
  call void @llvm.dbg.value(metadata i32 10000, metadata !15465, metadata !DIExpression()), !dbg !15476
  call void @llvm.dbg.value(metadata i8 1, metadata !15466, metadata !DIExpression()), !dbg !15476
  call void @llvm.dbg.value(metadata i1 true, metadata !15467, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15476
  call void @llvm.dbg.value(metadata i1 true, metadata !15468, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15476
  call void @llvm.dbg.value(metadata i8 0, metadata !15469, metadata !DIExpression()), !dbg !15476
  call void @llvm.dbg.value(metadata i1 true, metadata !15470, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15476
  call void @llvm.dbg.value(metadata i1 false, metadata !15471, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15476
  call void @llvm.dbg.value(metadata i64 0, metadata !15472, metadata !DIExpression()), !dbg !15476
  call void @llvm.dbg.value(metadata i64 0, metadata !15472, metadata !DIExpression()), !dbg !15476
  %2 = mul i32 %0, 10, !dbg !15478
  ret i32 %2, !dbg !15484
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !15485 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15487, metadata !DIExpression()), !dbg !15489
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15414, metadata !DIExpression()) #23, !dbg !15490
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15492, !srcloc !15429
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15492
  call void @llvm.dbg.value(metadata i32 %3, metadata !15426, metadata !DIExpression()) #23, !dbg !15494
  call void @llvm.dbg.value(metadata i32 undef, metadata !15427, metadata !DIExpression()) #23, !dbg !15494
  call void @llvm.dbg.value(metadata i32 %3, metadata !15420, metadata !DIExpression()) #23, !dbg !15490
  call void @llvm.dbg.value(metadata i32 %3, metadata !15488, metadata !DIExpression()), !dbg !15489
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !15495
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15497
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !15498
  br i1 %6, label %7, label %8, !dbg !15499

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !15500
  call void @llvm.dbg.value(metadata i32 %3, metadata !15441, metadata !DIExpression()) #23, !dbg !15502
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15446, metadata !DIExpression()) #23, !dbg !15502
  call void @llvm.dbg.value(metadata i32 %3, metadata !15449, metadata !DIExpression()) #23, !dbg !15504
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !15506, !srcloc !15455
  br label %24, !dbg !15507

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !15508
  %9 = tail call fastcc i32 @slice_time() #24, !dbg !15509
  %10 = icmp eq i32 %9, 0, !dbg !15509
  br i1 %10, label %21, label %11, !dbg !15511

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #24, !dbg !15512
  br i1 %12, label %13, label %21, !dbg !15513

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15514
  %15 = icmp sgt i32 %14, %0, !dbg !15517
  br i1 %15, label %19, label %16, !dbg !15518

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !15519
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #24, !dbg !15519
  call void @llvm.dbg.value(metadata i32 %18, metadata !15488, metadata !DIExpression()), !dbg !15489
  br label %22, !dbg !15521

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !15522
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15522
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15524
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !15489
  call void @llvm.dbg.value(metadata i32 %23, metadata !15488, metadata !DIExpression()), !dbg !15489
  call void @llvm.dbg.value(metadata i32 %23, metadata !15441, metadata !DIExpression()) #23, !dbg !15526
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15446, metadata !DIExpression()) #23, !dbg !15526
  call void @llvm.dbg.value(metadata i32 %23, metadata !15449, metadata !DIExpression()) #23, !dbg !15528
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #23, !dbg !15530, !srcloc !15455
  br label %24, !dbg !15531

24:                                               ; preds = %22, %7
  ret void, !dbg !15531
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #10 !dbg !15532 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15536, metadata !DIExpression()), !dbg !15538
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #24, !dbg !15539
  %3 = icmp eq i32 %2, 0, !dbg !15539
  br i1 %3, label %16, label %4, !dbg !15540

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !15541
  br i1 %5, label %16, label %6, !dbg !15542

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15543
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !15543
  %9 = load i8, i8* %8, align 2, !dbg !15543
  %10 = sext i8 %9 to i32, !dbg !15544
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !15545
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #24, !dbg !15546
  br i1 %12, label %16, label %13, !dbg !15547

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #24, !dbg !15548
  %15 = xor i1 %14, true, !dbg !15549
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !15538
  call void @llvm.dbg.value(metadata i1 %17, metadata !15537, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15538
  ret i1 %17, !dbg !15550
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !15551 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15555, metadata !DIExpression()), !dbg !15557
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15558
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15556, metadata !DIExpression()), !dbg !15557
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #24, !dbg !15559
  br i1 %3, label %5, label %4, !dbg !15561

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #24, !dbg !15562
  br label %5, !dbg !15564

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !15555, metadata !DIExpression()), !dbg !15557
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !15565
  ret i32 %6, !dbg !15566
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15567 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15569, metadata !DIExpression()), !dbg !15571
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15572
  %3 = load i8, i8* %2, align 1, !dbg !15572
  call void @llvm.dbg.value(metadata i8 %3, metadata !15570, metadata !DIExpression()), !dbg !15571
  %4 = and i8 %3, 31, !dbg !15573
  %5 = icmp ne i8 %4, 0, !dbg !15574
  ret i1 %5, !dbg !15575
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15576 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15578, metadata !DIExpression()), !dbg !15579
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !15580
  br i1 %2, label %3, label %7, !dbg !15582

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15583, metadata !DIExpression()) #23, !dbg !15586
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15589
  %5 = load i8, i8* %4, align 1, !dbg !15590
  %6 = and i8 %5, 127, !dbg !15590
  store i8 %6, i8* %4, align 1, !dbg !15590
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15591, metadata !DIExpression()) #23, !dbg !15594
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15598
  br label %7, !dbg !15599

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15600, metadata !DIExpression()) #23, !dbg !15603
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15605
  %9 = load i8, i8* %8, align 1, !dbg !15606
  %10 = or i8 %9, -128, !dbg !15606
  store i8 %10, i8* %8, align 1, !dbg !15606
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15607, metadata !DIExpression()) #23, !dbg !15610
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15614, metadata !DIExpression()) #23, !dbg !15622
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15620, metadata !DIExpression()) #23, !dbg !15622
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15624
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !15621, metadata !DIExpression()) #23, !dbg !15622
  %12 = icmp eq %struct._dnode* %11, null, !dbg !15626
  br i1 %12, label %23, label %13, !dbg !15624

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !15621, metadata !DIExpression()) #23, !dbg !15622
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !15628
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !15621, metadata !DIExpression()) #23, !dbg !15622
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #25, !dbg !15629
  %17 = icmp sgt i32 %16, 0, !dbg !15632
  br i1 %17, label %18, label %20, !dbg !15633

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15634
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #25, !dbg !15636
  br label %25, !dbg !15637

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #25, !dbg !15626
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !15621, metadata !DIExpression()) #23, !dbg !15622
  %22 = icmp eq %struct._dnode* %21, null, !dbg !15626
  br i1 %22, label %23, label %13, !dbg !15624, !llvm.loop !15638

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15640
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #25, !dbg !15641
  br label %25, !dbg !15642

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15643
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !15644
  %28 = zext i1 %27 to i32, !dbg !15644
  tail call fastcc void @update_cache(i32 noundef %28) #24, !dbg !15645
  ret void, !dbg !15646
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15647 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15649, metadata !DIExpression()), !dbg !15650
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #24, !dbg !15651
  ret i1 %2, !dbg !15652
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #11 !dbg !15653 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !15655, metadata !DIExpression()), !dbg !15657
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15656, metadata !DIExpression()), !dbg !15657
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !15658
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #24, !dbg !15659
  ret void, !dbg !15660
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #10 !dbg !15661 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15665, metadata !DIExpression()), !dbg !15666
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #24, !dbg !15667
  br i1 %2, label %6, label %3, !dbg !15667

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15668
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15668
  br label %6, !dbg !15667

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !15667
  ret %struct._dnode* %7, !dbg !15669
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #11 !dbg !15670 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15674, metadata !DIExpression()), !dbg !15678
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15675, metadata !DIExpression()), !dbg !15678
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15679
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15679
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !15676, metadata !DIExpression()), !dbg !15678
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15680
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !15681
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15682
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !15683
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15684
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15685
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15686
  ret void, !dbg !15687
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #10 !dbg !15688 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15692, metadata !DIExpression()), !dbg !15694
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15693, metadata !DIExpression()), !dbg !15694
  %3 = icmp eq %struct._dnode* %1, null, !dbg !15695
  br i1 %3, label %6, label %4, !dbg !15696

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #24, !dbg !15697
  br label %6, !dbg !15696

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !15696
  ret %struct._dnode* %7, !dbg !15698
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #11 !dbg !15699 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15703, metadata !DIExpression()), !dbg !15706
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15704, metadata !DIExpression()), !dbg !15706
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15707
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15707
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !15705, metadata !DIExpression()), !dbg !15706
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15708
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !15709
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15710
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !15711
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15712
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15713
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15714
  ret void, !dbg !15715
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !15716 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15718, metadata !DIExpression()), !dbg !15720
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15721
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15728, metadata !DIExpression()) #23, !dbg !15730
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15731
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !15732
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !15732
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !15719, metadata !DIExpression()), !dbg !15720
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !15733, metadata !DIExpression()) #23, !dbg !15739
  call void @llvm.dbg.value(metadata i32 %0, metadata !15738, metadata !DIExpression()) #23, !dbg !15739
  %6 = icmp eq i32 %0, 0, !dbg !15742
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15744
  br i1 %6, label %8, label %15, !dbg !15745

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %7) #25, !dbg !15746
  br i1 %9, label %15, label %10, !dbg !15748

10:                                               ; preds = %8
  %11 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #25, !dbg !15749
  br i1 %11, label %15, label %12, !dbg !15751

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %7) #25, !dbg !15752
  %14 = icmp eq i32 %13, 0, !dbg !15752
  br i1 %14, label %18, label %15, !dbg !15754

15:                                               ; preds = %1, %10, %8, %12
  %16 = icmp eq %struct.k_thread* %5, %7, !dbg !15755
  br i1 %16, label %18, label %17, !dbg !15758

17:                                               ; preds = %15
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !15759
  br label %18, !dbg !15761

18:                                               ; preds = %12, %15, %17
  %19 = phi %struct.k_thread* [ %5, %17 ], [ %5, %15 ], [ %7, %12 ], !dbg !15744
  store %struct.k_thread* %19, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15744
  ret void, !dbg !15762
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #10 !dbg !15763 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15767, metadata !DIExpression()), !dbg !15770
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15768, metadata !DIExpression()), !dbg !15770
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #24, !dbg !15771
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !15769, metadata !DIExpression()), !dbg !15770
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15768, metadata !DIExpression()), !dbg !15770
  ret %struct.k_thread* %3, !dbg !15772
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15773 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15775, metadata !DIExpression()), !dbg !15776
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15777
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !15778
  %4 = xor i1 %3, true, !dbg !15779
  ret i1 %4, !dbg !15780
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15781 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15783, metadata !DIExpression()), !dbg !15784
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !15785
  %3 = load i16, i16* %2, align 2, !dbg !15785
  %4 = icmp ult i16 %3, 128, !dbg !15786
  %5 = zext i1 %4 to i32, !dbg !15786
  ret i32 %5, !dbg !15787
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15788 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15794, metadata !DIExpression()), !dbg !15795
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15796
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #24, !dbg !15797
  %4 = xor i1 %3, true, !dbg !15798
  ret i1 %4, !dbg !15799
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15800 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15806, metadata !DIExpression()), !dbg !15807
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15808
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15808
  %4 = icmp ne %struct._dnode* %3, null, !dbg !15809
  ret i1 %4, !dbg !15810
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #10 !dbg !15811 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15813, metadata !DIExpression()), !dbg !15815
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15814, metadata !DIExpression()), !dbg !15815
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15816
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15816
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !15817
  br i1 %5, label %9, label %6, !dbg !15818

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15819
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !15819
  br label %9, !dbg !15818

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !15818
  ret %struct._dnode* %10, !dbg !15820
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !15821 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15825, metadata !DIExpression()), !dbg !15826
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15827
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15827
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !15828
  ret i1 %4, !dbg !15829
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #11 !dbg !15830 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15834, metadata !DIExpression()), !dbg !15837
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15838
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15838
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !15835, metadata !DIExpression()), !dbg !15837
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15839
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15839
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !15836, metadata !DIExpression()), !dbg !15837
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !15840
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !15841
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !15842
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !15843
  tail call fastcc void @sys_dnode_init.226(%struct._dnode* noundef %0) #24, !dbg !15844
  ret void, !dbg !15845
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.226(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !15846 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15848, metadata !DIExpression()), !dbg !15849
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15850
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !15851
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15852
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !15853
  ret void, !dbg !15854
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15855 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15859, metadata !DIExpression()), !dbg !15861
  call void @llvm.dbg.value(metadata i32 128, metadata !15860, metadata !DIExpression()), !dbg !15861
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15862
  %3 = load i8, i8* %2, align 1, !dbg !15862
  %4 = icmp slt i8 %3, 0, !dbg !15863
  ret i1 %4, !dbg !15864
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !15865 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15869, metadata !DIExpression()), !dbg !15871
  call void @llvm.dbg.value(metadata i32 %1, metadata !15870, metadata !DIExpression()), !dbg !15871
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #24, !dbg !15872
  ret i1 %3, !dbg !15873
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #4 !dbg !15874 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15876, metadata !DIExpression()), !dbg !15877
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !15878
  ret i1 %2, !dbg !15879
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !15880 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15882, metadata !DIExpression()), !dbg !15884
  call void @llvm.dbg.value(metadata i32 %1, metadata !15883, metadata !DIExpression()), !dbg !15884
  %3 = icmp slt i32 %0, %1, !dbg !15885
  ret i1 %3, !dbg !15886
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15887 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15889, metadata !DIExpression()), !dbg !15893
  call void @llvm.dbg.value(metadata i32 0, metadata !15890, metadata !DIExpression()), !dbg !15894
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15414, metadata !DIExpression()) #23, !dbg !15895
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15897, !srcloc !15429
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15897
  call void @llvm.dbg.value(metadata i32 %3, metadata !15426, metadata !DIExpression()) #23, !dbg !15899
  call void @llvm.dbg.value(metadata i32 undef, metadata !15427, metadata !DIExpression()) #23, !dbg !15899
  call void @llvm.dbg.value(metadata i32 %3, metadata !15420, metadata !DIExpression()) #23, !dbg !15895
  call void @llvm.dbg.value(metadata i32 %3, metadata !15892, metadata !DIExpression()), !dbg !15894
  call void @llvm.dbg.value(metadata i32 undef, metadata !15890, metadata !DIExpression()), !dbg !15894
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !15900
  call void @llvm.dbg.value(metadata i32 %3, metadata !15441, metadata !DIExpression()) #23, !dbg !15905
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15446, metadata !DIExpression()) #23, !dbg !15905
  call void @llvm.dbg.value(metadata i32 %3, metadata !15449, metadata !DIExpression()) #23, !dbg !15907
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !15909, !srcloc !15455
  call void @llvm.dbg.value(metadata i32 1, metadata !15890, metadata !DIExpression()), !dbg !15894
  call void @llvm.dbg.value(metadata i32 undef, metadata !15890, metadata !DIExpression()), !dbg !15894
  ret void, !dbg !15910
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15911 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15913, metadata !DIExpression()), !dbg !15914
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !15915
  br i1 %2, label %24, label %3, !dbg !15917

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !15918
  br i1 %4, label %5, label %24, !dbg !15919

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15600, metadata !DIExpression()) #23, !dbg !15920
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15923
  %7 = load i8, i8* %6, align 1, !dbg !15924
  %8 = or i8 %7, -128, !dbg !15924
  store i8 %8, i8* %6, align 1, !dbg !15924
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15607, metadata !DIExpression()) #23, !dbg !15925
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15614, metadata !DIExpression()) #23, !dbg !15927
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15620, metadata !DIExpression()) #23, !dbg !15927
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15929
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !15621, metadata !DIExpression()) #23, !dbg !15927
  %10 = icmp eq %struct._dnode* %9, null, !dbg !15930
  br i1 %10, label %21, label %11, !dbg !15929

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !15621, metadata !DIExpression()) #23, !dbg !15927
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !15931
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !15621, metadata !DIExpression()) #23, !dbg !15927
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #25, !dbg !15932
  %15 = icmp sgt i32 %14, 0, !dbg !15933
  br i1 %15, label %16, label %18, !dbg !15934

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15935
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #25, !dbg !15936
  br label %23, !dbg !15937

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #25, !dbg !15930
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !15621, metadata !DIExpression()) #23, !dbg !15927
  %20 = icmp eq %struct._dnode* %19, null, !dbg !15930
  br i1 %20, label %21, label %11, !dbg !15929, !llvm.loop !15938

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15940
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #25, !dbg !15941
  br label %23, !dbg !15942

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !15943
  br label %24, !dbg !15944

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !15945
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15946 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15948, metadata !DIExpression()), !dbg !15949
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !15950
  br i1 %2, label %6, label %3, !dbg !15951

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #24, !dbg !15952
  %5 = xor i1 %4, true, !dbg !15951
  br label %6, !dbg !15951

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !15953
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15954 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15956, metadata !DIExpression()), !dbg !15960
  call void @llvm.dbg.value(metadata i32 0, metadata !15957, metadata !DIExpression()), !dbg !15961
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15414, metadata !DIExpression()) #23, !dbg !15962
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15964, !srcloc !15429
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15964
  call void @llvm.dbg.value(metadata i32 %3, metadata !15426, metadata !DIExpression()) #23, !dbg !15966
  call void @llvm.dbg.value(metadata i32 undef, metadata !15427, metadata !DIExpression()) #23, !dbg !15966
  call void @llvm.dbg.value(metadata i32 %3, metadata !15420, metadata !DIExpression()) #23, !dbg !15962
  call void @llvm.dbg.value(metadata i32 %3, metadata !15959, metadata !DIExpression()), !dbg !15961
  call void @llvm.dbg.value(metadata i32 undef, metadata !15957, metadata !DIExpression()), !dbg !15961
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #24, !dbg !15967
  call void @llvm.dbg.value(metadata i32 %3, metadata !15441, metadata !DIExpression()) #23, !dbg !15970
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15446, metadata !DIExpression()) #23, !dbg !15970
  call void @llvm.dbg.value(metadata i32 %3, metadata !15449, metadata !DIExpression()) #23, !dbg !15972
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !15974, !srcloc !15455
  call void @llvm.dbg.value(metadata i32 1, metadata !15957, metadata !DIExpression()), !dbg !15961
  call void @llvm.dbg.value(metadata i32 undef, metadata !15957, metadata !DIExpression()), !dbg !15961
  ret void, !dbg !15975
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15976 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15978, metadata !DIExpression()), !dbg !15980
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15414, metadata !DIExpression()) #23, !dbg !15981
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15983, !srcloc !15429
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15983
  call void @llvm.dbg.value(metadata i32 %3, metadata !15426, metadata !DIExpression()) #23, !dbg !15985
  call void @llvm.dbg.value(metadata i32 undef, metadata !15427, metadata !DIExpression()) #23, !dbg !15985
  call void @llvm.dbg.value(metadata i32 %3, metadata !15420, metadata !DIExpression()) #23, !dbg !15981
  call void @llvm.dbg.value(metadata i32 %3, metadata !15979, metadata !DIExpression()), !dbg !15980
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #24, !dbg !15986
  br i1 %4, label %5, label %6, !dbg !15988

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !15441, metadata !DIExpression()) #23, !dbg !15989
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15446, metadata !DIExpression()) #23, !dbg !15989
  call void @llvm.dbg.value(metadata i32 %3, metadata !15449, metadata !DIExpression()) #23, !dbg !15992
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !15994, !srcloc !15455
  br label %8, !dbg !15995

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.231(%struct.k_thread* noundef %0) #24, !dbg !15996
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !15997
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !15998
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #24, !dbg !15998
  br label %8, !dbg !15999

8:                                                ; preds = %6, %5
  ret void, !dbg !15999
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16000 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16002, metadata !DIExpression()), !dbg !16003
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16004
  %3 = load i8, i8* %2, align 1, !dbg !16004
  %4 = and i8 %3, 4, !dbg !16005
  %5 = icmp eq i8 %4, 0, !dbg !16006
  ret i1 %5, !dbg !16007
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.231(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !16008 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16010, metadata !DIExpression()), !dbg !16011
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16012
  %3 = load i8, i8* %2, align 1, !dbg !16013
  %4 = and i8 %3, -5, !dbg !16013
  store i8 %4, i8* %2, align 1, !dbg !16013
  ret void, !dbg !16014
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !16015 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !16018, metadata !DIExpression()), !dbg !16019
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16017, metadata !DIExpression()), !dbg !16019
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #24, !dbg !16020
  br i1 %4, label %5, label %9, !dbg !16022

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #24, !dbg !16023
  br i1 %6, label %7, label %9, !dbg !16024

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !16025, metadata !DIExpression()) #23, !dbg !16031
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16030, metadata !DIExpression()) #23, !dbg !16031
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !16034
  br label %10, !dbg !16035

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !15441, metadata !DIExpression()) #23, !dbg !16036
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15446, metadata !DIExpression()) #23, !dbg !16036
  call void @llvm.dbg.value(metadata i32 %3, metadata !15449, metadata !DIExpression()) #23, !dbg !16039
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !16041, !srcloc !15455
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !16042
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !16043 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16047, metadata !DIExpression()), !dbg !16048
  call void @llvm.dbg.value(metadata i32 %0, metadata !16049, metadata !DIExpression()), !dbg !16054
  %2 = icmp eq i32 %0, 0, !dbg !16056
  br i1 %2, label %3, label %6, !dbg !16057

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16058, !srcloc !16065
  call void @llvm.dbg.value(metadata i32 %4, metadata !16061, metadata !DIExpression()) #23, !dbg !16066
  %5 = icmp eq i32 %4, 0, !dbg !16067
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !16048
  ret i1 %7, !dbg !16068
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #10 !dbg !16069 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !16072
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16071, metadata !DIExpression()), !dbg !16073
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16074
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !16075
  ret i1 %3, !dbg !16076
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !16077 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16079, metadata !DIExpression()), !dbg !16081
  %2 = tail call i32 @arch_swap(i32 noundef %0) #25, !dbg !16082
  call void @llvm.dbg.value(metadata i32 %2, metadata !16080, metadata !DIExpression()), !dbg !16081
  ret i32 %2, !dbg !16083
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16084 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16086, metadata !DIExpression()), !dbg !16090
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !16091
  call void @llvm.dbg.value(metadata i32 0, metadata !16087, metadata !DIExpression()), !dbg !16092
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15414, metadata !DIExpression()) #23, !dbg !16093
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16095, !srcloc !15429
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !16095
  call void @llvm.dbg.value(metadata i32 %4, metadata !15426, metadata !DIExpression()) #23, !dbg !16097
  call void @llvm.dbg.value(metadata i32 undef, metadata !15427, metadata !DIExpression()) #23, !dbg !16097
  call void @llvm.dbg.value(metadata i32 %4, metadata !15420, metadata !DIExpression()) #23, !dbg !16093
  call void @llvm.dbg.value(metadata i32 %4, metadata !16089, metadata !DIExpression()), !dbg !16092
  call void @llvm.dbg.value(metadata i32 undef, metadata !16087, metadata !DIExpression()), !dbg !16092
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !16098
  br i1 %5, label %6, label %10, !dbg !16102

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15583, metadata !DIExpression()) #23, !dbg !16103
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16106
  %8 = load i8, i8* %7, align 1, !dbg !16107
  %9 = and i8 %8, 127, !dbg !16107
  store i8 %9, i8* %7, align 1, !dbg !16107
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15591, metadata !DIExpression()) #23, !dbg !16108
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !16110
  br label %10, !dbg !16111

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #24, !dbg !16112
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16113
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !16114
  %13 = zext i1 %12 to i32, !dbg !16114
  tail call fastcc void @update_cache(i32 noundef %13) #24, !dbg !16115
  call void @llvm.dbg.value(metadata i32 %4, metadata !15441, metadata !DIExpression()) #23, !dbg !16116
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15446, metadata !DIExpression()) #23, !dbg !16116
  call void @llvm.dbg.value(metadata i32 %4, metadata !15449, metadata !DIExpression()) #23, !dbg !16118
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !16120, !srcloc !15455
  call void @llvm.dbg.value(metadata i32 1, metadata !16087, metadata !DIExpression()), !dbg !16092
  call void @llvm.dbg.value(metadata i32 undef, metadata !16087, metadata !DIExpression()), !dbg !16092
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16121
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !16123
  br i1 %15, label %16, label %17, !dbg !16124

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !16125
  br label %17, !dbg !16127

17:                                               ; preds = %16, %10
  ret void, !dbg !16128
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16129 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16131, metadata !DIExpression()), !dbg !16132
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !16133
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !16134
  ret i32 %3, !dbg !16135
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !16136 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16138, metadata !DIExpression()), !dbg !16139
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16140
  %3 = load i8, i8* %2, align 1, !dbg !16141
  %4 = or i8 %3, 16, !dbg !16141
  store i8 %4, i8* %2, align 1, !dbg !16141
  ret void, !dbg !16142
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !16143 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16144, !srcloc !15429
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16144
  call void @llvm.dbg.value(metadata i32 %2, metadata !15426, metadata !DIExpression()) #23, !dbg !16146
  call void @llvm.dbg.value(metadata i32 undef, metadata !15427, metadata !DIExpression()) #23, !dbg !16146
  tail call void @z_reschedule_irqlock(i32 noundef %2) #24, !dbg !16147
  ret void, !dbg !16148
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !16149 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16151, metadata !DIExpression()), !dbg !16152
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #24, !dbg !16153
  br i1 %2, label %3, label %5, !dbg !16155

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !16156
  br label %6, !dbg !16158

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !15449, metadata !DIExpression()) #23, !dbg !16159
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #23, !dbg !16162, !srcloc !15455
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !16163
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16164 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16166, metadata !DIExpression()), !dbg !16168
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15414, metadata !DIExpression()) #23, !dbg !16169
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16171, !srcloc !15429
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16171
  call void @llvm.dbg.value(metadata i32 %3, metadata !15426, metadata !DIExpression()) #23, !dbg !16173
  call void @llvm.dbg.value(metadata i32 undef, metadata !15427, metadata !DIExpression()) #23, !dbg !16173
  call void @llvm.dbg.value(metadata i32 %3, metadata !15420, metadata !DIExpression()) #23, !dbg !16169
  call void @llvm.dbg.value(metadata i32 %3, metadata !16167, metadata !DIExpression()), !dbg !16168
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #24, !dbg !16174
  br i1 %4, label %6, label %5, !dbg !16176

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !15441, metadata !DIExpression()) #23, !dbg !16177
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15446, metadata !DIExpression()) #23, !dbg !16177
  call void @llvm.dbg.value(metadata i32 %3, metadata !15449, metadata !DIExpression()) #23, !dbg !16180
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !16182, !srcloc !15455
  br label %8, !dbg !16183

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !16184
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !16185
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !16186
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #24, !dbg !16186
  br label %8, !dbg !16187

8:                                                ; preds = %6, %5
  ret void, !dbg !16187
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16188 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16190, metadata !DIExpression()), !dbg !16191
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16192
  %3 = load i8, i8* %2, align 1, !dbg !16192
  %4 = and i8 %3, 16, !dbg !16193
  %5 = icmp ne i8 %4, 0, !dbg !16194
  ret i1 %5, !dbg !16195
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !16196 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16198, metadata !DIExpression()), !dbg !16199
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16200
  %3 = load i8, i8* %2, align 1, !dbg !16201
  %4 = and i8 %3, -17, !dbg !16201
  store i8 %4, i8* %2, align 1, !dbg !16201
  ret void, !dbg !16202
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16203 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16213, metadata !DIExpression()), !dbg !16217
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16211, metadata !DIExpression()), !dbg !16217
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !16212, metadata !DIExpression()), !dbg !16217
  call void @llvm.dbg.value(metadata i32 0, metadata !16214, metadata !DIExpression()), !dbg !16218
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15414, metadata !DIExpression()) #23, !dbg !16219
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16221, !srcloc !15429
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !16221
  call void @llvm.dbg.value(metadata i32 %5, metadata !15426, metadata !DIExpression()) #23, !dbg !16223
  call void @llvm.dbg.value(metadata i32 undef, metadata !15427, metadata !DIExpression()) #23, !dbg !16223
  call void @llvm.dbg.value(metadata i32 %5, metadata !15420, metadata !DIExpression()) #23, !dbg !16219
  call void @llvm.dbg.value(metadata i32 %5, metadata !16216, metadata !DIExpression()), !dbg !16218
  call void @llvm.dbg.value(metadata i32 undef, metadata !16214, metadata !DIExpression()), !dbg !16218
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) #24, !dbg !16224
  call void @llvm.dbg.value(metadata i32 %5, metadata !15441, metadata !DIExpression()) #23, !dbg !16227
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15446, metadata !DIExpression()) #23, !dbg !16227
  call void @llvm.dbg.value(metadata i32 %5, metadata !15449, metadata !DIExpression()) #23, !dbg !16229
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #23, !dbg !16231, !srcloc !15455
  call void @llvm.dbg.value(metadata i32 1, metadata !16214, metadata !DIExpression()), !dbg !16218
  call void @llvm.dbg.value(metadata i32 undef, metadata !16214, metadata !DIExpression()), !dbg !16218
  ret void, !dbg !16232
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !16233 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16237, metadata !DIExpression()), !dbg !16238
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16235, metadata !DIExpression()), !dbg !16238
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !16236, metadata !DIExpression()), !dbg !16238
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) #24, !dbg !16239
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #24, !dbg !16240
  ret void, !dbg !16241
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) unnamed_addr #1 !dbg !16242 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16246, metadata !DIExpression()), !dbg !16248
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !16247, metadata !DIExpression()), !dbg !16248
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #24, !dbg !16249
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #24, !dbg !16250
  %3 = icmp eq %struct._wait_q_t* %1, null, !dbg !16251
  br i1 %3, label %21, label %4, !dbg !16253

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16254
  store %struct._wait_q_t* %1, %struct._wait_q_t** %5, align 8, !dbg !16256
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %1, i32 0, i32 0, !dbg !16257
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !15614, metadata !DIExpression()) #23, !dbg !16258
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15620, metadata !DIExpression()) #23, !dbg !16258
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #25, !dbg !16260
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !15621, metadata !DIExpression()) #23, !dbg !16258
  %8 = icmp eq %struct._dnode* %7, null, !dbg !16261
  br i1 %8, label %19, label %9, !dbg !16260

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !15621, metadata !DIExpression()) #23, !dbg !16258
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !16262
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !15621, metadata !DIExpression()) #23, !dbg !16258
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #25, !dbg !16263
  %13 = icmp sgt i32 %12, 0, !dbg !16264
  br i1 %13, label %14, label %16, !dbg !16265

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16266
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #25, !dbg !16267
  br label %21, !dbg !16268

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #25, !dbg !16261
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !15621, metadata !DIExpression()) #23, !dbg !16258
  %18 = icmp eq %struct._dnode* %17, null, !dbg !16261
  br i1 %18, label %19, label %9, !dbg !16260, !llvm.loop !16269

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16271
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #25, !dbg !16272
  br label %21, !dbg !16273

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !16274
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !16275 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !16280, metadata !DIExpression()), !dbg !16281
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16279, metadata !DIExpression()), !dbg !16281
  %4 = icmp eq i64 %3, -1, !dbg !16282
  br i1 %4, label %6, label %5, !dbg !16284

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.232(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !16285
  br label %6, !dbg !16287

6:                                                ; preds = %5, %2
  ret void, !dbg !16288
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.232(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !16289 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16292, metadata !DIExpression()), !dbg !16293
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16291, metadata !DIExpression()), !dbg !16293
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !16294
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !16295
  ret void, !dbg !16296
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !16297 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16299, metadata !DIExpression()), !dbg !16307
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !16308
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !16308
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16300, metadata !DIExpression()), !dbg !16307
  call void @llvm.dbg.value(metadata i32 0, metadata !16301, metadata !DIExpression()), !dbg !16309
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15414, metadata !DIExpression()) #23, !dbg !16310
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16312, !srcloc !15429
  call void @llvm.dbg.value(metadata i32 undef, metadata !15426, metadata !DIExpression()) #23, !dbg !16314
  call void @llvm.dbg.value(metadata i32 undef, metadata !15427, metadata !DIExpression()) #23, !dbg !16314
  call void @llvm.dbg.value(metadata i32 undef, metadata !15420, metadata !DIExpression()) #23, !dbg !16310
  call void @llvm.dbg.value(metadata i32 undef, metadata !16303, metadata !DIExpression()), !dbg !16309
  call void @llvm.dbg.value(metadata i32 undef, metadata !16301, metadata !DIExpression()), !dbg !16309
  %5 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !16315
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !16316
  %7 = load i8, i8* %6, align 1, !dbg !16316
  %8 = and i8 %7, 40, !dbg !16317
  %9 = icmp eq i8 %8, 0, !dbg !16317
  call void @llvm.dbg.value(metadata i1 %9, metadata !16304, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16318
  br i1 %9, label %10, label %17, !dbg !16319

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !16320
  %12 = bitcast void (%struct._timeout*)** %11 to %struct._wait_q_t**, !dbg !16320
  %13 = load %struct._wait_q_t*, %struct._wait_q_t** %12, align 8, !dbg !16320
  %14 = icmp eq %struct._wait_q_t* %13, null, !dbg !16324
  br i1 %14, label %16, label %15, !dbg !16325

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #24, !dbg !16326
  br label %16, !dbg !16328

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.231(%struct.k_thread* noundef nonnull %3) #24, !dbg !16329
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #24, !dbg !16330
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #24, !dbg !16331
  br label %17, !dbg !16332

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !16312
  call void @llvm.dbg.value(metadata i32 %18, metadata !15426, metadata !DIExpression()) #23, !dbg !16314
  call void @llvm.dbg.value(metadata i32 %18, metadata !15420, metadata !DIExpression()) #23, !dbg !16310
  call void @llvm.dbg.value(metadata i32 %18, metadata !16303, metadata !DIExpression()), !dbg !16309
  call void @llvm.dbg.value(metadata i32 undef, metadata !15441, metadata !DIExpression()) #23, !dbg !16333
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15446, metadata !DIExpression()) #23, !dbg !16333
  call void @llvm.dbg.value(metadata i32 undef, metadata !15449, metadata !DIExpression()) #23, !dbg !16335
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !16337, !srcloc !15455
  call void @llvm.dbg.value(metadata i32 1, metadata !16301, metadata !DIExpression()), !dbg !16309
  call void @llvm.dbg.value(metadata i32 undef, metadata !16301, metadata !DIExpression()), !dbg !16309
  ret void, !dbg !16338
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !16339 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16341, metadata !DIExpression()), !dbg !16342
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !16343
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #24, !dbg !16344
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16345
  store %struct._wait_q_t* null, %struct._wait_q_t** %2, align 8, !dbg !16346
  ret void, !dbg !16347
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !16348 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16350, metadata !DIExpression()), !dbg !16351
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16352
  %3 = load i8, i8* %2, align 1, !dbg !16353
  %4 = and i8 %3, -3, !dbg !16353
  store i8 %4, i8* %2, align 1, !dbg !16353
  ret void, !dbg !16354
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16355 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16357, metadata !DIExpression()), !dbg !16358
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !16359
  br i1 %2, label %3, label %7, !dbg !16361

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15583, metadata !DIExpression()) #23, !dbg !16362
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16365
  %5 = load i8, i8* %4, align 1, !dbg !16366
  %6 = and i8 %5, 127, !dbg !16366
  store i8 %6, i8* %4, align 1, !dbg !16366
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15591, metadata !DIExpression()) #23, !dbg !16367
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !16369
  br label %7, !dbg !16370

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16371
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !16372
  %10 = zext i1 %9 to i32, !dbg !16372
  tail call fastcc void @update_cache(i32 noundef %10) #24, !dbg !16373
  ret void, !dbg !16374
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !16375 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16377, metadata !DIExpression()), !dbg !16378
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16379
  %3 = load i8, i8* %2, align 1, !dbg !16380
  %4 = or i8 %3, 2, !dbg !16380
  store i8 %4, i8* %2, align 1, !dbg !16380
  ret void, !dbg !16381
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #22 !dbg !16382 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16384, metadata !DIExpression()), !dbg !16388
  call void @llvm.dbg.value(metadata i32 0, metadata !16385, metadata !DIExpression()), !dbg !16389
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15414, metadata !DIExpression()) #23, !dbg !16390
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16392, !srcloc !15429
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16392
  call void @llvm.dbg.value(metadata i32 %3, metadata !15426, metadata !DIExpression()) #23, !dbg !16394
  call void @llvm.dbg.value(metadata i32 undef, metadata !15427, metadata !DIExpression()) #23, !dbg !16394
  call void @llvm.dbg.value(metadata i32 %3, metadata !15420, metadata !DIExpression()) #23, !dbg !16390
  call void @llvm.dbg.value(metadata i32 %3, metadata !16387, metadata !DIExpression()), !dbg !16389
  call void @llvm.dbg.value(metadata i32 undef, metadata !16385, metadata !DIExpression()), !dbg !16389
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #24, !dbg !16395
  call void @llvm.dbg.value(metadata i32 %3, metadata !15441, metadata !DIExpression()) #23, !dbg !16398
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15446, metadata !DIExpression()) #23, !dbg !16398
  call void @llvm.dbg.value(metadata i32 %3, metadata !15449, metadata !DIExpression()) #23, !dbg !16400
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !16402, !srcloc !15455
  call void @llvm.dbg.value(metadata i32 1, metadata !16385, metadata !DIExpression()), !dbg !16389
  call void @llvm.dbg.value(metadata i32 undef, metadata !16385, metadata !DIExpression()), !dbg !16389
  ret void, !dbg !16403
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16404 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16410, metadata !DIExpression()), !dbg !16415
  call void @llvm.dbg.value(metadata i32 %0, metadata !16408, metadata !DIExpression()), !dbg !16415
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !16409, metadata !DIExpression()), !dbg !16415
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16416
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %struct._wait_q_t* noundef %1, [1 x i64] %2) #24, !dbg !16417
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16418
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !16419
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !16420
  call void @llvm.dbg.value(metadata i32 %6, metadata !16411, metadata !DIExpression()), !dbg !16415
  call void @llvm.dbg.value(metadata i32 0, metadata !16412, metadata !DIExpression()), !dbg !16421
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15414, metadata !DIExpression()) #23, !dbg !16422
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16424, !srcloc !15429
  call void @llvm.dbg.value(metadata i32 undef, metadata !15426, metadata !DIExpression()) #23, !dbg !16426
  call void @llvm.dbg.value(metadata i32 undef, metadata !15427, metadata !DIExpression()) #23, !dbg !16426
  call void @llvm.dbg.value(metadata i32 undef, metadata !15420, metadata !DIExpression()) #23, !dbg !16422
  call void @llvm.dbg.value(metadata i32 undef, metadata !16414, metadata !DIExpression()), !dbg !16421
  call void @llvm.dbg.value(metadata i32 undef, metadata !16412, metadata !DIExpression()), !dbg !16421
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !16427
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16431
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !16432
  br i1 %10, label %11, label %12, !dbg !16433

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !16434
  br label %12, !dbg !16436

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !16424
  call void @llvm.dbg.value(metadata i32 %13, metadata !15426, metadata !DIExpression()) #23, !dbg !16426
  call void @llvm.dbg.value(metadata i32 %13, metadata !15420, metadata !DIExpression()) #23, !dbg !16422
  call void @llvm.dbg.value(metadata i32 %13, metadata !16414, metadata !DIExpression()), !dbg !16421
  call void @llvm.dbg.value(metadata i32 undef, metadata !15441, metadata !DIExpression()) #23, !dbg !16437
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15446, metadata !DIExpression()) #23, !dbg !16437
  call void @llvm.dbg.value(metadata i32 undef, metadata !15449, metadata !DIExpression()) #23, !dbg !16439
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #23, !dbg !16441, !srcloc !15455
  call void @llvm.dbg.value(metadata i32 1, metadata !16412, metadata !DIExpression()), !dbg !16421
  call void @llvm.dbg.value(metadata i32 undef, metadata !16412, metadata !DIExpression()), !dbg !16421
  ret i32 %6, !dbg !16442
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !16443 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16448, metadata !DIExpression()), !dbg !16451
  call void @llvm.dbg.value(metadata i64 undef, metadata !16450, metadata !DIExpression()), !dbg !16451
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16447, metadata !DIExpression()), !dbg !16451
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !16449, metadata !DIExpression()), !dbg !16451
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16452
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !16453
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15414, metadata !DIExpression()) #23, !dbg !16454
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16456, !srcloc !15429
  call void @llvm.dbg.value(metadata i32 undef, metadata !15426, metadata !DIExpression()) #23, !dbg !16458
  call void @llvm.dbg.value(metadata i32 undef, metadata !15427, metadata !DIExpression()) #23, !dbg !16458
  call void @llvm.dbg.value(metadata i32 undef, metadata !15420, metadata !DIExpression()) #23, !dbg !16454
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16459
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %struct._wait_q_t* noundef %2, [1 x i64] %3) #24, !dbg !16460
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !16025, metadata !DIExpression()) #23, !dbg !16461
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16030, metadata !DIExpression()) #23, !dbg !16461
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #25, !dbg !16463
  ret i32 %9, !dbg !16464
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !16465 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16469, metadata !DIExpression()), !dbg !16474
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16470, metadata !DIExpression()), !dbg !16474
  call void @llvm.dbg.value(metadata i32 0, metadata !16471, metadata !DIExpression()), !dbg !16475
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15414, metadata !DIExpression()) #23, !dbg !16476
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16478, !srcloc !15429
  call void @llvm.dbg.value(metadata i32 undef, metadata !15426, metadata !DIExpression()) #23, !dbg !16480
  call void @llvm.dbg.value(metadata i32 undef, metadata !15427, metadata !DIExpression()) #23, !dbg !16480
  call void @llvm.dbg.value(metadata i32 undef, metadata !15420, metadata !DIExpression()) #23, !dbg !16476
  call void @llvm.dbg.value(metadata i32 undef, metadata !16473, metadata !DIExpression()), !dbg !16475
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16470, metadata !DIExpression()), !dbg !16474
  call void @llvm.dbg.value(metadata i32 undef, metadata !16471, metadata !DIExpression()), !dbg !16475
  %3 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #24, !dbg !16481
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16470, metadata !DIExpression()), !dbg !16474
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !16484
  br i1 %5, label %7, label %6, !dbg !16486

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #24, !dbg !16487
  br label %7, !dbg !16489

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !16478
  call void @llvm.dbg.value(metadata i32 %8, metadata !15426, metadata !DIExpression()) #23, !dbg !16480
  call void @llvm.dbg.value(metadata i32 %8, metadata !15420, metadata !DIExpression()) #23, !dbg !16476
  call void @llvm.dbg.value(metadata i32 %8, metadata !16473, metadata !DIExpression()), !dbg !16475
  call void @llvm.dbg.value(metadata i32 undef, metadata !15441, metadata !DIExpression()) #23, !dbg !16490
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15446, metadata !DIExpression()) #23, !dbg !16490
  call void @llvm.dbg.value(metadata i32 undef, metadata !15449, metadata !DIExpression()) #23, !dbg !16492
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !16494, !srcloc !15455
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16470, metadata !DIExpression()), !dbg !16474
  call void @llvm.dbg.value(metadata i32 undef, metadata !16471, metadata !DIExpression()), !dbg !16475
  ret %struct.k_thread* %4, !dbg !16495
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !16496 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16498, metadata !DIExpression()), !dbg !16503
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16499, metadata !DIExpression()), !dbg !16503
  call void @llvm.dbg.value(metadata i32 0, metadata !16500, metadata !DIExpression()), !dbg !16504
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15414, metadata !DIExpression()) #23, !dbg !16505
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16507, !srcloc !15429
  call void @llvm.dbg.value(metadata i32 undef, metadata !15426, metadata !DIExpression()) #23, !dbg !16509
  call void @llvm.dbg.value(metadata i32 undef, metadata !15427, metadata !DIExpression()) #23, !dbg !16509
  call void @llvm.dbg.value(metadata i32 undef, metadata !15420, metadata !DIExpression()) #23, !dbg !16505
  call void @llvm.dbg.value(metadata i32 undef, metadata !16502, metadata !DIExpression()), !dbg !16504
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16499, metadata !DIExpression()), !dbg !16503
  call void @llvm.dbg.value(metadata i32 undef, metadata !16500, metadata !DIExpression()), !dbg !16504
  %3 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #24, !dbg !16510
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16499, metadata !DIExpression()), !dbg !16503
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !16513
  br i1 %5, label %8, label %6, !dbg !16515

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #24, !dbg !16516
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #24, !dbg !16518
  br label %8, !dbg !16519

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !16507
  call void @llvm.dbg.value(metadata i32 %9, metadata !15426, metadata !DIExpression()) #23, !dbg !16509
  call void @llvm.dbg.value(metadata i32 %9, metadata !15420, metadata !DIExpression()) #23, !dbg !16505
  call void @llvm.dbg.value(metadata i32 %9, metadata !16502, metadata !DIExpression()), !dbg !16504
  call void @llvm.dbg.value(metadata i32 undef, metadata !15441, metadata !DIExpression()) #23, !dbg !16520
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15446, metadata !DIExpression()) #23, !dbg !16520
  call void @llvm.dbg.value(metadata i32 undef, metadata !15449, metadata !DIExpression()) #23, !dbg !16522
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !16524, !srcloc !15455
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16499, metadata !DIExpression()), !dbg !16503
  call void @llvm.dbg.value(metadata i32 undef, metadata !16500, metadata !DIExpression()), !dbg !16504
  ret %struct.k_thread* %4, !dbg !16525
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16526 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16528, metadata !DIExpression()), !dbg !16529
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16384, metadata !DIExpression()) #23, !dbg !16530
  call void @llvm.dbg.value(metadata i32 0, metadata !16385, metadata !DIExpression()) #23, !dbg !16532
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15414, metadata !DIExpression()) #23, !dbg !16533
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16535, !srcloc !15429
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16535
  call void @llvm.dbg.value(metadata i32 %3, metadata !15426, metadata !DIExpression()) #23, !dbg !16537
  call void @llvm.dbg.value(metadata i32 undef, metadata !15427, metadata !DIExpression()) #23, !dbg !16537
  call void @llvm.dbg.value(metadata i32 %3, metadata !15420, metadata !DIExpression()) #23, !dbg !16533
  call void @llvm.dbg.value(metadata i32 %3, metadata !16387, metadata !DIExpression()) #23, !dbg !16532
  call void @llvm.dbg.value(metadata i32 undef, metadata !16385, metadata !DIExpression()) #23, !dbg !16532
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !16538
  call void @llvm.dbg.value(metadata i32 %3, metadata !15441, metadata !DIExpression()) #23, !dbg !16539
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15446, metadata !DIExpression()) #23, !dbg !16539
  call void @llvm.dbg.value(metadata i32 %3, metadata !15449, metadata !DIExpression()) #23, !dbg !16541
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !16543, !srcloc !15455
  call void @llvm.dbg.value(metadata i32 1, metadata !16385, metadata !DIExpression()) #23, !dbg !16532
  call void @llvm.dbg.value(metadata i32 undef, metadata !16385, metadata !DIExpression()) #23, !dbg !16532
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !16544
  ret void, !dbg !16545
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16546 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16548, metadata !DIExpression()), !dbg !16554
  call void @llvm.dbg.value(metadata i32 %1, metadata !16549, metadata !DIExpression()), !dbg !16554
  call void @llvm.dbg.value(metadata i8 0, metadata !16550, metadata !DIExpression()), !dbg !16554
  call void @llvm.dbg.value(metadata i32 0, metadata !16551, metadata !DIExpression()), !dbg !16555
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15414, metadata !DIExpression()) #23, !dbg !16556
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16558, !srcloc !15429
  call void @llvm.dbg.value(metadata i32 undef, metadata !15426, metadata !DIExpression()) #23, !dbg !16560
  call void @llvm.dbg.value(metadata i32 undef, metadata !15427, metadata !DIExpression()) #23, !dbg !16560
  call void @llvm.dbg.value(metadata i32 undef, metadata !15420, metadata !DIExpression()) #23, !dbg !16556
  call void @llvm.dbg.value(metadata i32 undef, metadata !16553, metadata !DIExpression()), !dbg !16555
  call void @llvm.dbg.value(metadata i8 poison, metadata !16550, metadata !DIExpression()), !dbg !16554
  call void @llvm.dbg.value(metadata i32 undef, metadata !16551, metadata !DIExpression()), !dbg !16555
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !16561
  call void @llvm.dbg.value(metadata i1 %6, metadata !16550, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16554
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !16564

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15583, metadata !DIExpression()) #23, !dbg !16565
  %11 = load i8, i8* %4, align 1, !dbg !16571
  %12 = and i8 %11, 127, !dbg !16571
  store i8 %12, i8* %4, align 1, !dbg !16571
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15591, metadata !DIExpression()) #23, !dbg !16572
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !16574
  store i8 %9, i8* %8, align 2, !dbg !16575
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15600, metadata !DIExpression()) #23, !dbg !16576
  %13 = load i8, i8* %4, align 1, !dbg !16578
  %14 = or i8 %13, -128, !dbg !16578
  store i8 %14, i8* %4, align 1, !dbg !16578
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15607, metadata !DIExpression()) #23, !dbg !16579
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15614, metadata !DIExpression()) #23, !dbg !16581
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15620, metadata !DIExpression()) #23, !dbg !16581
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !16583
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !15621, metadata !DIExpression()) #23, !dbg !16581
  %16 = icmp eq %struct._dnode* %15, null, !dbg !16584
  br i1 %16, label %26, label %17, !dbg !16583

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !15621, metadata !DIExpression()) #23, !dbg !16581
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !16585
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !15621, metadata !DIExpression()) #23, !dbg !16581
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #25, !dbg !16586
  %21 = icmp sgt i32 %20, 0, !dbg !16587
  br i1 %21, label %22, label %23, !dbg !16588

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #25, !dbg !16589
  br label %27, !dbg !16590

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #25, !dbg !16584
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !15621, metadata !DIExpression()) #23, !dbg !16581
  %25 = icmp eq %struct._dnode* %24, null, !dbg !16584
  br i1 %25, label %26, label %17, !dbg !16583, !llvm.loop !16591

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #25, !dbg !16593
  br label %27, !dbg !16594

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !16595
  br label %29, !dbg !16596

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !16597
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !16558
  call void @llvm.dbg.value(metadata i32 %30, metadata !15426, metadata !DIExpression()) #23, !dbg !16560
  call void @llvm.dbg.value(metadata i32 %30, metadata !15420, metadata !DIExpression()) #23, !dbg !16556
  call void @llvm.dbg.value(metadata i32 %30, metadata !16553, metadata !DIExpression()), !dbg !16555
  call void @llvm.dbg.value(metadata i32 undef, metadata !15441, metadata !DIExpression()) #23, !dbg !16599
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15446, metadata !DIExpression()) #23, !dbg !16599
  call void @llvm.dbg.value(metadata i32 undef, metadata !15449, metadata !DIExpression()) #23, !dbg !16601
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #23, !dbg !16603, !srcloc !15455
  call void @llvm.dbg.value(metadata i8 poison, metadata !16550, metadata !DIExpression()), !dbg !16554
  call void @llvm.dbg.value(metadata i32 undef, metadata !16551, metadata !DIExpression()), !dbg !16555
  ret i1 %6, !dbg !16604
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16605 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16609, metadata !DIExpression()), !dbg !16612
  call void @llvm.dbg.value(metadata i32 %1, metadata !16610, metadata !DIExpression()), !dbg !16612
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !16613
  call void @llvm.dbg.value(metadata i1 %3, metadata !16611, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16612
  br i1 %3, label %4, label %12, !dbg !16614

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16616
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !16617
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !16617
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !16617
  %9 = load i8, i8* %8, align 1, !dbg !16617
  %10 = icmp eq i8 %9, 0, !dbg !16618
  br i1 %10, label %11, label %12, !dbg !16619

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !16620
  br label %12, !dbg !16622

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !16623
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !16624 {
  call void @llvm.dbg.value(metadata i32 0, metadata !16626, metadata !DIExpression()), !dbg !16629
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15414, metadata !DIExpression()) #23, !dbg !16630
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16632, !srcloc !15429
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16632
  call void @llvm.dbg.value(metadata i32 %2, metadata !15426, metadata !DIExpression()) #23, !dbg !16634
  call void @llvm.dbg.value(metadata i32 undef, metadata !15427, metadata !DIExpression()) #23, !dbg !16634
  call void @llvm.dbg.value(metadata i32 %2, metadata !15420, metadata !DIExpression()) #23, !dbg !16630
  call void @llvm.dbg.value(metadata i32 %2, metadata !16628, metadata !DIExpression()), !dbg !16629
  call void @llvm.dbg.value(metadata i32 undef, metadata !16626, metadata !DIExpression()), !dbg !16629
  tail call fastcc void @z_sched_lock() #24, !dbg !16635
  call void @llvm.dbg.value(metadata i32 %2, metadata !15441, metadata !DIExpression()) #23, !dbg !16638
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15446, metadata !DIExpression()) #23, !dbg !16638
  call void @llvm.dbg.value(metadata i32 %2, metadata !15449, metadata !DIExpression()) #23, !dbg !16640
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !16642, !srcloc !15455
  call void @llvm.dbg.value(metadata i32 1, metadata !16626, metadata !DIExpression()), !dbg !16629
  call void @llvm.dbg.value(metadata i32 undef, metadata !16626, metadata !DIExpression()), !dbg !16629
  ret void, !dbg !16643
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !16644 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16645
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !16646
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !16646
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !16646
  %5 = load i8, i8* %4, align 1, !dbg !16647
  %6 = add i8 %5, -1, !dbg !16647
  store i8 %6, i8* %4, align 1, !dbg !16647
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16648, !srcloc !16650
  ret void, !dbg !16651
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !16652 {
  call void @llvm.dbg.value(metadata i32 0, metadata !16654, metadata !DIExpression()), !dbg !16657
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15414, metadata !DIExpression()) #23, !dbg !16658
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16660, !srcloc !15429
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16660
  call void @llvm.dbg.value(metadata i32 %2, metadata !15426, metadata !DIExpression()) #23, !dbg !16662
  call void @llvm.dbg.value(metadata i32 undef, metadata !15427, metadata !DIExpression()) #23, !dbg !16662
  call void @llvm.dbg.value(metadata i32 %2, metadata !15420, metadata !DIExpression()) #23, !dbg !16658
  call void @llvm.dbg.value(metadata i32 %2, metadata !16656, metadata !DIExpression()), !dbg !16657
  call void @llvm.dbg.value(metadata i32 undef, metadata !16654, metadata !DIExpression()), !dbg !16657
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16663
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !16666
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !16666
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !16666
  %7 = load i8, i8* %6, align 1, !dbg !16667
  %8 = add i8 %7, 1, !dbg !16667
  store i8 %8, i8* %6, align 1, !dbg !16667
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !16668
  call void @llvm.dbg.value(metadata i32 %2, metadata !15441, metadata !DIExpression()) #23, !dbg !16669
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15446, metadata !DIExpression()) #23, !dbg !16669
  call void @llvm.dbg.value(metadata i32 %2, metadata !15449, metadata !DIExpression()) #23, !dbg !16671
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !16673, !srcloc !15455
  call void @llvm.dbg.value(metadata i32 1, metadata !16654, metadata !DIExpression()), !dbg !16657
  call void @llvm.dbg.value(metadata i32 undef, metadata !16654, metadata !DIExpression()), !dbg !16657
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !16674
  ret void, !dbg !16675
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #10 !dbg !16676 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !16677
  ret %struct.k_thread* %1, !dbg !16678
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #10 !dbg !16679 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !16683, metadata !DIExpression()), !dbg !16688
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !16684, metadata !DIExpression()), !dbg !16688
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !16689
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16685, metadata !DIExpression()), !dbg !16688
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !16690
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16686, metadata !DIExpression()), !dbg !16688
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #24, !dbg !16691
  call void @llvm.dbg.value(metadata i32 %5, metadata !16687, metadata !DIExpression()), !dbg !16688
  %6 = icmp sgt i32 %5, 0, !dbg !16692
  br i1 %6, label %17, label %7, !dbg !16694

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !16695
  br i1 %8, label %17, label %9, !dbg !16697

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !16698
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !16698
  %12 = load i32, i32* %11, align 8, !dbg !16698
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !16700
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !16700
  %15 = load i32, i32* %14, align 8, !dbg !16700
  %16 = icmp ult i32 %12, %15, !dbg !16701
  br label %17, !dbg !16702

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !16703
  ret i1 %18, !dbg !16704
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16705 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16722, metadata !DIExpression()), !dbg !16737
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16723, metadata !DIExpression()), !dbg !16737
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16738
  %5 = load i32, i32* %4, align 4, !dbg !16739
  %6 = add nsw i32 %5, 1, !dbg !16739
  store i32 %6, i32* %4, align 4, !dbg !16739
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !16740
  store i32 %5, i32* %7, align 8, !dbg !16741
  %8 = load i32, i32* %4, align 4, !dbg !16742
  %9 = icmp eq i32 %8, 0, !dbg !16743
  br i1 %9, label %10, label %32, !dbg !16744

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !16745
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #23, !dbg !16745
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !16725, metadata !DIExpression()), !dbg !16745
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16745
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !16745
  %14 = load i32, i32* %13, align 4, !dbg !16745
  %15 = shl i32 %14, 2, !dbg !16745
  %16 = alloca i8, i32 %15, align 8, !dbg !16745
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !16745
  store i8* %16, i8** %17, align 4, !dbg !16745
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !16745
  %19 = alloca i8, i32 %14, align 8, !dbg !16745
  store i8* %19, i8** %18, align 4, !dbg !16745
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !16745
  store i32 -1, i32* %20, align 4, !dbg !16745
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !16746
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !16734, metadata !DIExpression()), !dbg !16747
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !16724, metadata !DIExpression()), !dbg !16737
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !16748
  br i1 %22, label %23, label %24, !dbg !16745

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #23, !dbg !16748
  br label %32, !dbg !16749

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !16724, metadata !DIExpression()), !dbg !16737
  %26 = load i32, i32* %4, align 4, !dbg !16750
  %27 = add nsw i32 %26, 1, !dbg !16750
  store i32 %27, i32* %4, align 4, !dbg !16750
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !16752
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !16752
  store i32 %26, i32* %29, align 8, !dbg !16753
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !16746
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !16734, metadata !DIExpression()), !dbg !16747
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !16724, metadata !DIExpression()), !dbg !16737
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !16748
  br i1 %31, label %23, label %24, !dbg !16745, !llvm.loop !16754

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16756
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16757
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #25, !dbg !16758
  ret void, !dbg !16759
}

; Function Attrs: optsize
declare !dbg !16760 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !16765 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16768 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16770, metadata !DIExpression()), !dbg !16772
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16771, metadata !DIExpression()), !dbg !16772
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16773
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16774
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #25, !dbg !16775
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !16776
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !16776
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !16778
  br i1 %7, label %8, label %10, !dbg !16779

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16780
  store i32 0, i32* %9, align 4, !dbg !16782
  br label %10, !dbg !16783

10:                                               ; preds = %8, %2
  ret void, !dbg !16784
}

; Function Attrs: optsize
declare !dbg !16785 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !16786 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16790, metadata !DIExpression()), !dbg !16793
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16791, metadata !DIExpression()), !dbg !16793
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16794
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #24, !dbg !16795
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !16792, metadata !DIExpression()), !dbg !16793
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16791, metadata !DIExpression()), !dbg !16793
  ret %struct.k_thread* %4, !dbg !16796
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !16797 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !16801, metadata !DIExpression()), !dbg !16802
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #25, !dbg !16803
  ret %struct.rbnode* %2, !dbg !16804
}

; Function Attrs: optsize
declare !dbg !16805 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #16 !dbg !16808 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !16820, metadata !DIExpression()), !dbg !16824
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !16825
  %3 = load i32, i32* %2, align 4, !dbg !16825
  %4 = icmp eq i32 %3, 0, !dbg !16827
  br i1 %4, label %10, label %5, !dbg !16828

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16821, metadata !DIExpression()), !dbg !16824
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !16829, !range !8284
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !16830
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !16822, metadata !DIExpression()), !dbg !16824
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #24, !dbg !16831
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !16823, metadata !DIExpression()), !dbg !16824
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16821, metadata !DIExpression()), !dbg !16824
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !16824
  ret %struct.k_thread* %11, !dbg !16832
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !16833 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16837, metadata !DIExpression()), !dbg !16840
  call void @llvm.dbg.value(metadata i32 0, metadata !16838, metadata !DIExpression()), !dbg !16840
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef %0) #24, !dbg !16841
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16839, metadata !DIExpression()), !dbg !16840
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16842
  br i1 %3, label %8, label %4, !dbg !16843

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !16844
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !16846
  call void @llvm.dbg.value(metadata i32 1, metadata !16838, metadata !DIExpression()), !dbg !16840
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef %0) #24, !dbg !16841
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16839, metadata !DIExpression()), !dbg !16840
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !16842
  br i1 %7, label %8, label %4, !dbg !16843, !llvm.loop !16847

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !16840
  ret i32 %9, !dbg !16849
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef readonly %0) unnamed_addr #10 !dbg !16850 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16852, metadata !DIExpression()), !dbg !16853
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !16854
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #24, !dbg !16855
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !16856
  ret %struct.k_thread* %4, !dbg !16857
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #6 !dbg !16858 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !16867, metadata !DIExpression()), !dbg !16868
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !16869
  tail call fastcc void @sys_dlist_init.239(%struct._dnode* noundef nonnull %2) #24, !dbg !16870
  ret void, !dbg !16871
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.239(%struct._dnode* noundef %0) unnamed_addr #6 !dbg !16872 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16876, metadata !DIExpression()), !dbg !16877
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16878
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !16879
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16880
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !16881
  ret void, !dbg !16882
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !16883 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #24, !dbg !16884
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #24, !dbg !16885
  ret void, !dbg !16886
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !16887 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16892, metadata !DIExpression()), !dbg !16893
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !16894
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !16894
  %4 = load i8, i8* %3, align 2, !dbg !16894
  %5 = sext i8 %4 to i32, !dbg !16895
  ret i32 %5, !dbg !16896
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16897 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16901, metadata !DIExpression()), !dbg !16904
  call void @llvm.dbg.value(metadata i32 %1, metadata !16902, metadata !DIExpression()), !dbg !16904
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16903, metadata !DIExpression()), !dbg !16904
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !16905
  ret void, !dbg !16906
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !16907 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #24, !dbg !16908
  br i1 %1, label %8, label %2, !dbg !16909

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #25, !dbg !16910
  br i1 %3, label %8, label %4, !dbg !16911

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16912
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #24, !dbg !16913
  %7 = xor i1 %6, true, !dbg !16911
  br label %8, !dbg !16911

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !16914
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #10 !dbg !16915 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !16916, !range !7473
  %2 = icmp eq i8 %1, 0, !dbg !16916
  ret i1 %2, !dbg !16917
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !16918 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15414, metadata !DIExpression()) #23, !dbg !16921
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16923, !srcloc !15429
  call void @llvm.dbg.value(metadata i32 undef, metadata !15426, metadata !DIExpression()) #23, !dbg !16925
  call void @llvm.dbg.value(metadata i32 undef, metadata !15427, metadata !DIExpression()) #23, !dbg !16925
  call void @llvm.dbg.value(metadata i32 undef, metadata !15420, metadata !DIExpression()) #23, !dbg !16921
  call void @llvm.dbg.value(metadata i32 undef, metadata !16920, metadata !DIExpression()), !dbg !16926
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16927
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15583, metadata !DIExpression()) #23, !dbg !16930
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !16932
  %4 = load i8, i8* %3, align 1, !dbg !16933
  %5 = and i8 %4, 127, !dbg !16933
  store i8 %5, i8* %3, align 1, !dbg !16933
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15591, metadata !DIExpression()) #23, !dbg !16934
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #25, !dbg !16936
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16937
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15600, metadata !DIExpression()) #23, !dbg !16938
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !16940
  %8 = load i8, i8* %7, align 1, !dbg !16941
  %9 = or i8 %8, -128, !dbg !16941
  store i8 %9, i8* %7, align 1, !dbg !16941
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15607, metadata !DIExpression()) #23, !dbg !16942
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15614, metadata !DIExpression()) #23, !dbg !16944
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15620, metadata !DIExpression()) #23, !dbg !16944
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !16946
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !15621, metadata !DIExpression()) #23, !dbg !16944
  %11 = icmp eq %struct._dnode* %10, null, !dbg !16947
  br i1 %11, label %22, label %12, !dbg !16946

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !15621, metadata !DIExpression()) #23, !dbg !16944
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !16948
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !15621, metadata !DIExpression()) #23, !dbg !16944
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #25, !dbg !16949
  %16 = icmp sgt i32 %15, 0, !dbg !16950
  br i1 %16, label %17, label %19, !dbg !16951

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !16952
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #25, !dbg !16953
  br label %24, !dbg !16954

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #25, !dbg !16947
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !15621, metadata !DIExpression()) #23, !dbg !16944
  %21 = icmp eq %struct._dnode* %20, null, !dbg !16947
  br i1 %21, label %22, label %12, !dbg !16946, !llvm.loop !16955

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !16957
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #25, !dbg !16958
  br label %24, !dbg !16959

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !16923
  call void @llvm.dbg.value(metadata i32 %25, metadata !15426, metadata !DIExpression()) #23, !dbg !16925
  call void @llvm.dbg.value(metadata i32 %25, metadata !15420, metadata !DIExpression()) #23, !dbg !16921
  call void @llvm.dbg.value(metadata i32 %25, metadata !16920, metadata !DIExpression()), !dbg !16926
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !16960
  call void @llvm.dbg.value(metadata i32 undef, metadata !16025, metadata !DIExpression()) #23, !dbg !16961
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16030, metadata !DIExpression()) #23, !dbg !16961
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #25, !dbg !16963
  ret void, !dbg !16964
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !16965 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !16969, metadata !DIExpression()), !dbg !16972
  %3 = icmp eq i64 %2, -1, !dbg !16973
  br i1 %3, label %4, label %6, !dbg !16975

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16976
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #24, !dbg !16978
  br label %11, !dbg !16979

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !16970, metadata !DIExpression()), !dbg !16972
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #24, !dbg !16980
  %8 = sext i32 %7 to i64, !dbg !16980
  call void @llvm.dbg.value(metadata i64 %8, metadata !16970, metadata !DIExpression()), !dbg !16972
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %8) #24, !dbg !16981
  %10 = trunc i64 %9 to i32, !dbg !16981
  call void @llvm.dbg.value(metadata i32 %10, metadata !16971, metadata !DIExpression()), !dbg !16972
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !16972
  ret i32 %12, !dbg !16982
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16983 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16987, metadata !DIExpression()), !dbg !16988
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16989, !srcloc !16991
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #24, !dbg !16992
  ret void, !dbg !16993
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !16994 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16998, metadata !DIExpression()), !dbg !17002
  %2 = icmp eq i64 %0, 0, !dbg !17003
  br i1 %2, label %3, label %4, !dbg !17005

3:                                                ; preds = %1
  tail call fastcc void @k_yield.246() #24, !dbg !17006
  br label %29, !dbg !17008

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !17000, metadata !DIExpression()), !dbg !17002
  %5 = icmp sgt i64 %0, -3, !dbg !17009
  br i1 %5, label %6, label %10, !dbg !17011

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !17012
  %8 = trunc i64 %0 to i32, !dbg !17014
  %9 = add i32 %7, %8, !dbg !17014
  call void @llvm.dbg.value(metadata i32 %9, metadata !16999, metadata !DIExpression()), !dbg !17002
  br label %13, !dbg !17015

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !17016
  %12 = sub i32 -2, %11, !dbg !17016
  call void @llvm.dbg.value(metadata i32 %12, metadata !16999, metadata !DIExpression()), !dbg !17002
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !17018
  call void @llvm.dbg.value(metadata i32 %14, metadata !16999, metadata !DIExpression()), !dbg !17002
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15414, metadata !DIExpression()) #23, !dbg !17019
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17021, !srcloc !15429
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !17021
  call void @llvm.dbg.value(metadata i32 %16, metadata !15426, metadata !DIExpression()) #23, !dbg !17023
  call void @llvm.dbg.value(metadata i32 undef, metadata !15427, metadata !DIExpression()) #23, !dbg !17023
  call void @llvm.dbg.value(metadata i32 %16, metadata !15420, metadata !DIExpression()) #23, !dbg !17019
  call void @llvm.dbg.value(metadata i32 %16, metadata !17001, metadata !DIExpression()), !dbg !17002
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17024
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !17025
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #24, !dbg !17026
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17027
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !17028
  tail call fastcc void @z_add_thread_timeout.232(%struct.k_thread* noundef %18, [1 x i64] %19) #24, !dbg !17028
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17029
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #24, !dbg !17030
  call void @llvm.dbg.value(metadata i32 %16, metadata !16025, metadata !DIExpression()) #23, !dbg !17031
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16030, metadata !DIExpression()) #23, !dbg !17031
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #25, !dbg !17033
  %22 = zext i32 %14 to i64, !dbg !17034
  %23 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !17035
  %24 = zext i32 %23 to i64, !dbg !17035
  %25 = sub nsw i64 %22, %24, !dbg !17036
  call void @llvm.dbg.value(metadata i64 %25, metadata !16998, metadata !DIExpression()), !dbg !17002
  %26 = icmp sgt i64 %25, 0, !dbg !17037
  %27 = select i1 %26, i64 %25, i64 0, !dbg !17037
  %28 = trunc i64 %27 to i32, !dbg !17037
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !17002
  ret i32 %30, !dbg !17038
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #4 !dbg !17039 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17041, metadata !DIExpression()), !dbg !17042
  call void @llvm.dbg.value(metadata i64 %0, metadata !15461, metadata !DIExpression()), !dbg !17043
  call void @llvm.dbg.value(metadata i32 10000, metadata !15464, metadata !DIExpression()), !dbg !17043
  call void @llvm.dbg.value(metadata i32 1000, metadata !15465, metadata !DIExpression()), !dbg !17043
  call void @llvm.dbg.value(metadata i8 1, metadata !15466, metadata !DIExpression()), !dbg !17043
  call void @llvm.dbg.value(metadata i1 false, metadata !15467, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17043
  call void @llvm.dbg.value(metadata i1 false, metadata !15468, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17043
  call void @llvm.dbg.value(metadata i8 0, metadata !15469, metadata !DIExpression()), !dbg !17043
  call void @llvm.dbg.value(metadata i1 false, metadata !15470, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17043
  call void @llvm.dbg.value(metadata i1 true, metadata !15471, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17043
  call void @llvm.dbg.value(metadata i64 0, metadata !15472, metadata !DIExpression()), !dbg !17043
  call void @llvm.dbg.value(metadata i64 0, metadata !15472, metadata !DIExpression()), !dbg !17043
  call void @llvm.dbg.value(metadata i64 %0, metadata !15461, metadata !DIExpression()), !dbg !17043
  %2 = udiv i64 %0, 10, !dbg !17045
  ret i64 %2, !dbg !17049
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield.246() unnamed_addr #1 !dbg !17050 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !17051, !srcloc !17053
  tail call void @z_impl_k_yield() #24, !dbg !17054
  ret void, !dbg !17055
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !17056 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17060, metadata !DIExpression()), !dbg !17062
  %2 = sext i32 %0 to i64, !dbg !17063
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #24, !dbg !17064
  call void @llvm.dbg.value(metadata i64 %3, metadata !17061, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17062
  %4 = shl i64 %3, 32, !dbg !17065
  %5 = ashr exact i64 %4, 32, !dbg !17065
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #24, !dbg !17066
  call void @llvm.dbg.value(metadata i32 %6, metadata !17061, metadata !DIExpression()), !dbg !17062
  %7 = sext i32 %6 to i64, !dbg !17067
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #24, !dbg !17068
  %9 = trunc i64 %8 to i32, !dbg !17068
  ret i32 %9, !dbg !17069
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #4 !dbg !17070 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17072, metadata !DIExpression()), !dbg !17073
  call void @llvm.dbg.value(metadata i64 %0, metadata !15461, metadata !DIExpression()), !dbg !17074
  call void @llvm.dbg.value(metadata i32 1000000, metadata !15464, metadata !DIExpression()), !dbg !17074
  call void @llvm.dbg.value(metadata i32 10000, metadata !15465, metadata !DIExpression()), !dbg !17074
  call void @llvm.dbg.value(metadata i8 1, metadata !15466, metadata !DIExpression()), !dbg !17074
  call void @llvm.dbg.value(metadata i1 false, metadata !15467, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17074
  call void @llvm.dbg.value(metadata i1 true, metadata !15468, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17074
  call void @llvm.dbg.value(metadata i8 0, metadata !15469, metadata !DIExpression()), !dbg !17074
  call void @llvm.dbg.value(metadata i1 false, metadata !15470, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17074
  call void @llvm.dbg.value(metadata i1 true, metadata !15471, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17074
  call void @llvm.dbg.value(metadata i64 0, metadata !15472, metadata !DIExpression()), !dbg !17074
  call void @llvm.dbg.value(metadata i64 0, metadata !15472, metadata !DIExpression()), !dbg !17074
  %2 = add i64 %0, 99, !dbg !17076
  call void @llvm.dbg.value(metadata i64 %2, metadata !15461, metadata !DIExpression()), !dbg !17074
  %3 = udiv i64 %2, 100, !dbg !17077
  ret i64 %3, !dbg !17078
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #4 !dbg !17079 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17081, metadata !DIExpression()), !dbg !17082
  call void @llvm.dbg.value(metadata i64 %0, metadata !15461, metadata !DIExpression()), !dbg !17083
  call void @llvm.dbg.value(metadata i32 10000, metadata !15464, metadata !DIExpression()), !dbg !17083
  call void @llvm.dbg.value(metadata i32 1000000, metadata !15465, metadata !DIExpression()), !dbg !17083
  call void @llvm.dbg.value(metadata i8 1, metadata !15466, metadata !DIExpression()), !dbg !17083
  call void @llvm.dbg.value(metadata i1 false, metadata !15467, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17083
  call void @llvm.dbg.value(metadata i1 false, metadata !15468, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17083
  call void @llvm.dbg.value(metadata i8 0, metadata !15469, metadata !DIExpression()), !dbg !17083
  call void @llvm.dbg.value(metadata i1 true, metadata !15470, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17083
  call void @llvm.dbg.value(metadata i1 false, metadata !15471, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17083
  call void @llvm.dbg.value(metadata i64 0, metadata !15472, metadata !DIExpression()), !dbg !17083
  call void @llvm.dbg.value(metadata i64 0, metadata !15472, metadata !DIExpression()), !dbg !17083
  %2 = mul i64 %0, 100, !dbg !17085
  ret i64 %2, !dbg !17087
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17088 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17090, metadata !DIExpression()), !dbg !17091
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #24, !dbg !17092
  br i1 %2, label %14, label %3, !dbg !17094

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !17095
  %5 = icmp slt i32 %4, 0, !dbg !17097
  br i1 %5, label %6, label %10, !dbg !17098

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17099
  %8 = load i8, i8* %7, align 1, !dbg !17099
  %9 = icmp eq i8 %8, 16, !dbg !17102
  br i1 %9, label %10, label %14, !dbg !17103

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !17104
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #24, !dbg !17105
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !17106, !srcloc !16065
  call void @llvm.dbg.value(metadata i32 %11, metadata !16061, metadata !DIExpression()) #23, !dbg !17110
  %12 = icmp eq i32 %11, 0, !dbg !17111
  br i1 %12, label %13, label %14, !dbg !17112

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !17113
  br label %14, !dbg !17115

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !17116
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !17117 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17119, metadata !DIExpression()), !dbg !17120
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17121
  %3 = load i8, i8* %2, align 1, !dbg !17121
  %4 = and i8 %3, 2, !dbg !17122
  %5 = icmp ne i8 %4, 0, !dbg !17123
  ret i1 %5, !dbg !17124
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #10 !dbg !17125 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17130
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !17129, metadata !DIExpression()), !dbg !17131
  ret %struct.k_thread* %1, !dbg !17132
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !17133 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !17134, !srcloc !16065
  call void @llvm.dbg.value(metadata i32 %1, metadata !16061, metadata !DIExpression()) #23, !dbg !17137
  %2 = icmp eq i32 %1, 0, !dbg !17138
  br i1 %2, label %3, label %8, !dbg !17139

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17140
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #24, !dbg !17141
  %6 = icmp ne i32 %5, 0, !dbg !17139
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !17142
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17143 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17145, metadata !DIExpression()), !dbg !17147
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15414, metadata !DIExpression()) #23, !dbg !17148
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17150, !srcloc !15429
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17150
  call void @llvm.dbg.value(metadata i32 %3, metadata !15426, metadata !DIExpression()) #23, !dbg !17152
  call void @llvm.dbg.value(metadata i32 undef, metadata !15427, metadata !DIExpression()) #23, !dbg !17152
  call void @llvm.dbg.value(metadata i32 %3, metadata !15420, metadata !DIExpression()) #23, !dbg !17148
  call void @llvm.dbg.value(metadata i32 %3, metadata !17146, metadata !DIExpression()), !dbg !17147
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !17153
  %5 = load i8, i8* %4, align 4, !dbg !17153
  %6 = and i8 %5, 1, !dbg !17155
  %7 = icmp eq i8 %6, 0, !dbg !17156
  br i1 %7, label %9, label %8, !dbg !17157

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !15441, metadata !DIExpression()) #23, !dbg !17158
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15446, metadata !DIExpression()) #23, !dbg !17158
  call void @llvm.dbg.value(metadata i32 %3, metadata !15449, metadata !DIExpression()) #23, !dbg !17161
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !17163, !srcloc !15455
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #23, !dbg !17164, !srcloc !17166
  br label %24, !dbg !17167

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17168
  %11 = load i8, i8* %10, align 1, !dbg !17168
  %12 = and i8 %11, 8, !dbg !17170
  %13 = icmp eq i8 %12, 0, !dbg !17171
  br i1 %13, label %15, label %14, !dbg !17172

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !15441, metadata !DIExpression()) #23, !dbg !17173
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15446, metadata !DIExpression()) #23, !dbg !17173
  call void @llvm.dbg.value(metadata i32 %3, metadata !15449, metadata !DIExpression()) #23, !dbg !17176
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !17178, !srcloc !15455
  br label %24, !dbg !17179

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #24, !dbg !17180
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17181
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !17183
  br i1 %17, label %18, label %23, !dbg !17184

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !17185, !srcloc !16065
  call void @llvm.dbg.value(metadata i32 %19, metadata !16061, metadata !DIExpression()) #23, !dbg !17188
  %20 = icmp eq i32 %19, 0, !dbg !17189
  br i1 %20, label %21, label %23, !dbg !17190

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !16025, metadata !DIExpression()) #23, !dbg !17191
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16030, metadata !DIExpression()) #23, !dbg !17191
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !17194
  br label %23, !dbg !17195

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !15441, metadata !DIExpression()) #23, !dbg !17196
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15446, metadata !DIExpression()) #23, !dbg !17196
  call void @llvm.dbg.value(metadata i32 %3, metadata !15449, metadata !DIExpression()) #23, !dbg !17198
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !17200, !srcloc !15455
  br label %24, !dbg !17201

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !17201
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !17202 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17204, metadata !DIExpression()), !dbg !17205
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17206
  %3 = load i8, i8* %2, align 1, !dbg !17206
  %4 = and i8 %3, 8, !dbg !17208
  %5 = icmp eq i8 %4, 0, !dbg !17209
  br i1 %5, label %6, label %20, !dbg !17210

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !17211
  %8 = or i8 %7, 8, !dbg !17211
  store i8 %8, i8* %2, align 1, !dbg !17211
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #24, !dbg !17213
  br i1 %9, label %10, label %12, !dbg !17215

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15583, metadata !DIExpression()) #23, !dbg !17216
  %11 = and i8 %8, 95, !dbg !17219
  store i8 %11, i8* %2, align 1, !dbg !17219
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15591, metadata !DIExpression()) #23, !dbg !17220
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #25, !dbg !17222
  br label %12, !dbg !17223

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !17224
  %14 = load %struct._wait_q_t*, %struct._wait_q_t** %13, align 8, !dbg !17224
  %15 = icmp eq %struct._wait_q_t* %14, null, !dbg !17226
  br i1 %15, label %17, label %16, !dbg !17227

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !17228
  br label %17, !dbg !17230

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !17231
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !17232
  tail call fastcc void @unpend_all(%struct._wait_q_t* noundef nonnull %19) #24, !dbg !17233
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !17234
  br label %20, !dbg !17235

20:                                               ; preds = %17, %1
  ret void, !dbg !17236
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%struct._wait_q_t* noundef %0) unnamed_addr #1 !dbg !17237 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !17241, metadata !DIExpression()), !dbg !17243
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef %0) #24, !dbg !17244
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !17242, metadata !DIExpression()), !dbg !17243
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !17245
  br i1 %3, label %10, label %4, !dbg !17246

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !17247
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !17249
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !17250, metadata !DIExpression()), !dbg !17256
  call void @llvm.dbg.value(metadata i32 0, metadata !17255, metadata !DIExpression()), !dbg !17256
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !17258
  store i32 0, i32* %7, align 4, !dbg !17259
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !17260
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef %0) #24, !dbg !17244
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !17242, metadata !DIExpression()), !dbg !17243
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !17245
  br i1 %9, label %10, label %4, !dbg !17246, !llvm.loop !17261

10:                                               ; preds = %4, %1
  ret void, !dbg !17263
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !17264 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !17269, metadata !DIExpression()), !dbg !17272
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17268, metadata !DIExpression()), !dbg !17272
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15414, metadata !DIExpression()) #23, !dbg !17273
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17275, !srcloc !15429
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !17275
  call void @llvm.dbg.value(metadata i32 %4, metadata !15426, metadata !DIExpression()) #23, !dbg !17277
  call void @llvm.dbg.value(metadata i32 undef, metadata !15427, metadata !DIExpression()) #23, !dbg !17277
  call void @llvm.dbg.value(metadata i32 %4, metadata !15420, metadata !DIExpression()) #23, !dbg !17273
  call void @llvm.dbg.value(metadata i32 %4, metadata !17270, metadata !DIExpression()), !dbg !17272
  call void @llvm.dbg.value(metadata i32 0, metadata !17271, metadata !DIExpression()), !dbg !17272
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17278
  %6 = load i8, i8* %5, align 1, !dbg !17278
  %7 = and i8 %6, 8, !dbg !17280
  %8 = icmp eq i8 %7, 0, !dbg !17281
  br i1 %8, label %9, label %24, !dbg !17282

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !17269, metadata !DIExpression()), !dbg !17272
  %11 = icmp eq i64 %10, 0, !dbg !17283
  br i1 %11, label %24, label %12, !dbg !17285

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17286
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !17288
  br i1 %14, label %24, label %15, !dbg !17289

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !17290
  %17 = load %struct._wait_q_t*, %struct._wait_q_t** %16, align 8, !dbg !17290
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !17291
  %19 = icmp eq %struct._wait_q_t* %17, %18, !dbg !17292
  br i1 %19, label %24, label %20, !dbg !17293

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !17294
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %struct._wait_q_t* noundef nonnull %21) #24, !dbg !17296
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17297
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #24, !dbg !17298
  call void @llvm.dbg.value(metadata i32 %4, metadata !16025, metadata !DIExpression()) #23, !dbg !17299
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16030, metadata !DIExpression()) #23, !dbg !17299
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #25, !dbg !17301
  call void @llvm.dbg.value(metadata i32 %23, metadata !17271, metadata !DIExpression()), !dbg !17272
  br label %26, !dbg !17302

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !17303
  call void @llvm.dbg.value(metadata i32 %25, metadata !17271, metadata !DIExpression()), !dbg !17272
  call void @llvm.dbg.value(metadata i32 %4, metadata !15441, metadata !DIExpression()) #23, !dbg !17304
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15446, metadata !DIExpression()) #23, !dbg !17304
  call void @llvm.dbg.value(metadata i32 %4, metadata !15449, metadata !DIExpression()) #23, !dbg !17306
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !17308, !srcloc !15455
  br label %26, !dbg !17309

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !17272
  ret i32 %27, !dbg !17310
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%struct._wait_q_t* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !17311 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !17315, metadata !DIExpression()), !dbg !17323
  call void @llvm.dbg.value(metadata i32 %1, metadata !17316, metadata !DIExpression()), !dbg !17323
  call void @llvm.dbg.value(metadata i8* %2, metadata !17317, metadata !DIExpression()), !dbg !17323
  call void @llvm.dbg.value(metadata i8 0, metadata !17319, metadata !DIExpression()), !dbg !17323
  call void @llvm.dbg.value(metadata i32 0, metadata !17320, metadata !DIExpression()), !dbg !17324
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15414, metadata !DIExpression()) #23, !dbg !17325
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17327, !srcloc !15429
  call void @llvm.dbg.value(metadata i32 undef, metadata !15426, metadata !DIExpression()) #23, !dbg !17329
  call void @llvm.dbg.value(metadata i32 undef, metadata !15427, metadata !DIExpression()) #23, !dbg !17329
  call void @llvm.dbg.value(metadata i32 undef, metadata !15420, metadata !DIExpression()) #23, !dbg !17325
  call void @llvm.dbg.value(metadata i32 undef, metadata !17322, metadata !DIExpression()), !dbg !17324
  call void @llvm.dbg.value(metadata i8 poison, metadata !17319, metadata !DIExpression()), !dbg !17323
  call void @llvm.dbg.value(metadata i32 undef, metadata !17320, metadata !DIExpression()), !dbg !17324
  %5 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #24, !dbg !17330
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !17318, metadata !DIExpression()), !dbg !17323
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !17333
  br i1 %7, label %12, label %8, !dbg !17335

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !17336, metadata !DIExpression()), !dbg !17344
  call void @llvm.dbg.value(metadata i32 %1, metadata !17342, metadata !DIExpression()), !dbg !17344
  call void @llvm.dbg.value(metadata i8* %2, metadata !17343, metadata !DIExpression()), !dbg !17344
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !17250, metadata !DIExpression()), !dbg !17347
  call void @llvm.dbg.value(metadata i32 %1, metadata !17255, metadata !DIExpression()), !dbg !17347
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 7, i32 1, !dbg !17349
  store i32 %1, i32* %9, align 4, !dbg !17350
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 6, !dbg !17351
  store i8* %2, i8** %10, align 4, !dbg !17352
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #24, !dbg !17353
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #24, !dbg !17354
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #24, !dbg !17355
  call void @llvm.dbg.value(metadata i8 1, metadata !17319, metadata !DIExpression()), !dbg !17323
  br label %12, !dbg !17356

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !17327
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !17327
  call void @llvm.dbg.value(metadata i32 %14, metadata !15426, metadata !DIExpression()) #23, !dbg !17329
  call void @llvm.dbg.value(metadata i32 %14, metadata !15420, metadata !DIExpression()) #23, !dbg !17325
  call void @llvm.dbg.value(metadata i32 %14, metadata !17322, metadata !DIExpression()), !dbg !17324
  call void @llvm.dbg.value(metadata i8 poison, metadata !17319, metadata !DIExpression()), !dbg !17323
  call void @llvm.dbg.value(metadata i32 undef, metadata !15441, metadata !DIExpression()) #23, !dbg !17357
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15446, metadata !DIExpression()) #23, !dbg !17357
  call void @llvm.dbg.value(metadata i32 undef, metadata !15449, metadata !DIExpression()) #23, !dbg !17359
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !17361, !srcloc !15455
  call void @llvm.dbg.value(metadata i32 undef, metadata !17320, metadata !DIExpression()), !dbg !17324
  ret i1 %13, !dbg !17362
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !17363 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !17369, metadata !DIExpression()), !dbg !17374
  call void @llvm.dbg.value(metadata i64 undef, metadata !17371, metadata !DIExpression()), !dbg !17374
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !17368, metadata !DIExpression()), !dbg !17374
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !17370, metadata !DIExpression()), !dbg !17374
  call void @llvm.dbg.value(metadata i8** %4, metadata !17372, metadata !DIExpression()), !dbg !17374
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) #24, !dbg !17375
  call void @llvm.dbg.value(metadata i32 %6, metadata !17373, metadata !DIExpression()), !dbg !17374
  %7 = icmp eq i8** %4, null, !dbg !17376
  br i1 %7, label %12, label %8, !dbg !17378

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17379
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !17381
  %11 = load i8*, i8** %10, align 4, !dbg !17381
  store i8* %11, i8** %4, align 4, !dbg !17382
  br label %12, !dbg !17383

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !17384
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !17385 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #25, !dbg !17387
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #25, !dbg !17388
  ret void, !dbg !17389
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !17390 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !17400, metadata !DIExpression()), !dbg !17417
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17398, metadata !DIExpression()), !dbg !17417
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !17399, metadata !DIExpression()), !dbg !17417
  %5 = icmp eq i64 %4, -1, !dbg !17418
  br i1 %5, label %55, label %6, !dbg !17420

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !17421
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !17422
  call void @llvm.dbg.value(metadata i32 0, metadata !17401, metadata !DIExpression()), !dbg !17423
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17424, metadata !DIExpression()) #23, !dbg !17431
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17433, !srcloc !17439
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !17433
  call void @llvm.dbg.value(metadata i32 %9, metadata !17436, metadata !DIExpression()) #23, !dbg !17440
  call void @llvm.dbg.value(metadata i32 undef, metadata !17437, metadata !DIExpression()) #23, !dbg !17440
  call void @llvm.dbg.value(metadata i32 %9, metadata !17430, metadata !DIExpression()) #23, !dbg !17431
  call void @llvm.dbg.value(metadata i32 %9, metadata !17407, metadata !DIExpression()), !dbg !17423
  call void @llvm.dbg.value(metadata i32 undef, metadata !17401, metadata !DIExpression()), !dbg !17423
  %10 = icmp slt i64 %4, -1, !dbg !17441
  br i1 %10, label %11, label %17, !dbg !17442

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !17443
  %13 = add i64 %4, %12, !dbg !17444
  %14 = sub i64 -2, %13, !dbg !17444
  call void @llvm.dbg.value(metadata i64 %14, metadata !17411, metadata !DIExpression()), !dbg !17445
  %15 = icmp sgt i64 %14, 1, !dbg !17446
  %16 = select i1 %15, i64 %14, i64 1, !dbg !17446
  br label %22, !dbg !17447

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !17448
  %19 = tail call fastcc i32 @elapsed.255() #24, !dbg !17450
  %20 = sext i32 %19 to i64, !dbg !17450
  %21 = add nsw i64 %18, %20, !dbg !17451
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !17452
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !17453
  store i64 %23, i64* %24, align 8, !dbg !17454
  %25 = tail call fastcc %struct._timeout* @first() #24, !dbg !17455
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !17408, metadata !DIExpression()), !dbg !17457
  %26 = icmp eq %struct._timeout* %25, null, !dbg !17458
  br i1 %26, label %42, label %27, !dbg !17458

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !17459
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !17408, metadata !DIExpression()), !dbg !17457
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !17463
  %31 = load i64, i64* %30, align 8, !dbg !17463
  %32 = icmp slt i64 %28, %31, !dbg !17464
  br i1 %32, label %33, label %38, !dbg !17465

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !17463
  %35 = sub nsw i64 %31, %28, !dbg !17466
  store i64 %35, i64* %34, align 8, !dbg !17466
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !17468
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17469
  tail call fastcc void @sys_dlist_insert.256(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #24, !dbg !17470
  br label %44, !dbg !17471

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !17472
  store i64 %39, i64* %24, align 8, !dbg !17472
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #24, !dbg !17473
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !17408, metadata !DIExpression()), !dbg !17457
  %41 = icmp eq %struct._timeout* %40, null, !dbg !17458
  br i1 %41, label %42, label %27, !dbg !17458, !llvm.loop !17474

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17476
  tail call fastcc void @sys_dlist_append.257(%struct._dnode* noundef %43) #24, !dbg !17479
  br label %44, !dbg !17480

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #24, !dbg !17481
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !17482
  br i1 %46, label %47, label %54, !dbg !17483

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #24, !dbg !17484
  call void @llvm.dbg.value(metadata i32 %48, metadata !17414, metadata !DIExpression()), !dbg !17485
  %49 = icmp ne i32 %48, 0, !dbg !17486
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !17488
  br i1 %52, label %54, label %53, !dbg !17488

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #25, !dbg !17489
  br label %54, !dbg !17491

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !17492, metadata !DIExpression()) #23, !dbg !17498
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17497, metadata !DIExpression()) #23, !dbg !17498
  call void @llvm.dbg.value(metadata i32 %9, metadata !17500, metadata !DIExpression()) #23, !dbg !17503
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !17505, !srcloc !17506
  call void @llvm.dbg.value(metadata i32 undef, metadata !17401, metadata !DIExpression()), !dbg !17423
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !17507
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.255() unnamed_addr #1 !dbg !17508 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !17511
  %2 = icmp eq i32 %1, 0, !dbg !17512
  br i1 %2, label %3, label %5, !dbg !17511

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #25, !dbg !17513
  br label %5, !dbg !17511

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !17511
  ret i32 %6, !dbg !17514
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #10 !dbg !17515 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.260() #24, !dbg !17521
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !17519, metadata !DIExpression()), !dbg !17522
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !17523
  ret %struct._timeout* %2, !dbg !17524
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.256(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #11 !dbg !17525 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17529, metadata !DIExpression()), !dbg !17533
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !17530, metadata !DIExpression()), !dbg !17533
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17534
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !17534
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !17531, metadata !DIExpression()), !dbg !17533
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !17535
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !17536
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !17537
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !17538
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !17539
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !17540
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !17541
  ret void, !dbg !17542
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #10 !dbg !17543 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17547, metadata !DIExpression()), !dbg !17549
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17550
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.258(%struct._dnode* noundef %2) #24, !dbg !17551
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17548, metadata !DIExpression()), !dbg !17549
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !17552
  ret %struct._timeout* %4, !dbg !17553
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.257(%struct._dnode* noundef %0) unnamed_addr #11 !dbg !17554 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17559, metadata !DIExpression()), !dbg !17562
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17560, metadata !DIExpression()), !dbg !17562
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17563
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !17561, metadata !DIExpression()), !dbg !17562
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17564
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !17565
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17566
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !17567
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !17568
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !17569
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17570
  ret void, !dbg !17571
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !17572 {
  %1 = tail call fastcc %struct._timeout* @first() #24, !dbg !17577
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !17574, metadata !DIExpression()), !dbg !17578
  %2 = tail call fastcc i32 @elapsed.255() #24, !dbg !17579
  call void @llvm.dbg.value(metadata i32 %2, metadata !17575, metadata !DIExpression()), !dbg !17578
  %3 = icmp eq %struct._timeout* %1, null, !dbg !17580
  br i1 %3, label %14, label %4, !dbg !17582

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !17583
  %6 = load i64, i64* %5, align 8, !dbg !17583
  %7 = sext i32 %2 to i64, !dbg !17584
  %8 = sub nsw i64 %6, %7, !dbg !17585
  %9 = icmp sgt i64 %8, 2147483647, !dbg !17586
  br i1 %9, label %14, label %10, !dbg !17587

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !17588
  %12 = select i1 %11, i64 %8, i64 0, !dbg !17588
  %13 = trunc i64 %12 to i32, !dbg !17588
  call void @llvm.dbg.value(metadata i32 %13, metadata !17576, metadata !DIExpression()), !dbg !17578
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !17590
  call void @llvm.dbg.value(metadata i32 %15, metadata !17576, metadata !DIExpression()), !dbg !17578
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !17591
  %17 = icmp ne i32 %16, 0, !dbg !17593
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !17594
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !17594
  call void @llvm.dbg.value(metadata i32 %20, metadata !17576, metadata !DIExpression()), !dbg !17578
  ret i32 %20, !dbg !17595
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.258(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !17596 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17600, metadata !DIExpression()), !dbg !17602
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17601, metadata !DIExpression()), !dbg !17602
  %2 = icmp eq %struct._dnode* %0, null, !dbg !17603
  br i1 %2, label %5, label %3, !dbg !17604

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.259(%struct._dnode* noundef nonnull %0) #24, !dbg !17605
  br label %5, !dbg !17604

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !17604
  ret %struct._dnode* %6, !dbg !17606
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.259(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !17607 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17609, metadata !DIExpression()), !dbg !17611
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17610, metadata !DIExpression()), !dbg !17611
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17612
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !17613
  br i1 %3, label %7, label %4, !dbg !17614

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17615
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !17615
  br label %7, !dbg !17614

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !17614
  ret %struct._dnode* %8, !dbg !17616
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.260() unnamed_addr #10 !dbg !17617 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17621, metadata !DIExpression()), !dbg !17622
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.261() #24, !dbg !17623
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !17623
  ret %struct._dnode* %3, !dbg !17624
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.261() unnamed_addr #10 !dbg !17625 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17629, metadata !DIExpression()), !dbg !17630
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !17631
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !17632
  ret i1 %2, !dbg !17633
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17634 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17638, metadata !DIExpression()), !dbg !17643
  call void @llvm.dbg.value(metadata i32 -22, metadata !17639, metadata !DIExpression()), !dbg !17643
  call void @llvm.dbg.value(metadata i32 0, metadata !17640, metadata !DIExpression()), !dbg !17644
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17424, metadata !DIExpression()) #23, !dbg !17645
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17647, !srcloc !17439
  call void @llvm.dbg.value(metadata i32 undef, metadata !17436, metadata !DIExpression()) #23, !dbg !17649
  call void @llvm.dbg.value(metadata i32 undef, metadata !17437, metadata !DIExpression()) #23, !dbg !17649
  call void @llvm.dbg.value(metadata i32 undef, metadata !17430, metadata !DIExpression()) #23, !dbg !17645
  call void @llvm.dbg.value(metadata i32 undef, metadata !17642, metadata !DIExpression()), !dbg !17644
  call void @llvm.dbg.value(metadata i32 -22, metadata !17639, metadata !DIExpression()), !dbg !17643
  call void @llvm.dbg.value(metadata i32 undef, metadata !17640, metadata !DIExpression()), !dbg !17644
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !17639, metadata !DIExpression()), !dbg !17643
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.264(%struct._dnode* noundef %3) #24, !dbg !17650
  br i1 %4, label %5, label %6, !dbg !17654

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #24, !dbg !17655
  call void @llvm.dbg.value(metadata i32 0, metadata !17639, metadata !DIExpression()), !dbg !17643
  br label %6, !dbg !17657

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !17643
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !17647
  call void @llvm.dbg.value(metadata i32 %8, metadata !17436, metadata !DIExpression()) #23, !dbg !17649
  call void @llvm.dbg.value(metadata i32 %8, metadata !17430, metadata !DIExpression()) #23, !dbg !17645
  call void @llvm.dbg.value(metadata i32 %8, metadata !17642, metadata !DIExpression()), !dbg !17644
  call void @llvm.dbg.value(metadata i32 %7, metadata !17639, metadata !DIExpression()), !dbg !17643
  call void @llvm.dbg.value(metadata i32 undef, metadata !17492, metadata !DIExpression()) #23, !dbg !17658
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17497, metadata !DIExpression()) #23, !dbg !17658
  call void @llvm.dbg.value(metadata i32 undef, metadata !17500, metadata !DIExpression()) #23, !dbg !17660
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !17662, !srcloc !17506
  call void @llvm.dbg.value(metadata i32 undef, metadata !17640, metadata !DIExpression()), !dbg !17644
  ret i32 %7, !dbg !17663
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.264(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !17664 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17670, metadata !DIExpression()), !dbg !17671
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17672
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17672
  %4 = icmp ne %struct._dnode* %3, null, !dbg !17673
  ret i1 %4, !dbg !17674
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #11 !dbg !17675 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17677, metadata !DIExpression()), !dbg !17678
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #24, !dbg !17679
  %3 = icmp eq %struct._timeout* %2, null, !dbg !17681
  br i1 %3, label %10, label %4, !dbg !17682

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !17683
  %6 = load i64, i64* %5, align 8, !dbg !17683
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !17685
  %8 = load i64, i64* %7, align 8, !dbg !17686
  %9 = add nsw i64 %8, %6, !dbg !17686
  store i64 %9, i64* %7, align 8, !dbg !17686
  br label %10, !dbg !17687

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17688
  tail call fastcc void @sys_dlist_remove.265(%struct._dnode* noundef %11) #24, !dbg !17689
  ret void, !dbg !17690
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.265(%struct._dnode* nocapture noundef %0) unnamed_addr #11 !dbg !17691 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17695, metadata !DIExpression()), !dbg !17698
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17699
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17699
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17696, metadata !DIExpression()), !dbg !17698
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17700
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !17700
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !17697, metadata !DIExpression()), !dbg !17698
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !17701
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !17702
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !17703
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !17704
  tail call fastcc void @sys_dnode_init.266(%struct._dnode* noundef %0) #24, !dbg !17705
  ret void, !dbg !17706
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.266(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !17707 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17709, metadata !DIExpression()), !dbg !17710
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17711
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !17712
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17713
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !17714
  ret void, !dbg !17715
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17716 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17722, metadata !DIExpression()), !dbg !17727
  call void @llvm.dbg.value(metadata i64 0, metadata !17723, metadata !DIExpression()), !dbg !17727
  call void @llvm.dbg.value(metadata i32 0, metadata !17724, metadata !DIExpression()), !dbg !17728
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17424, metadata !DIExpression()) #23, !dbg !17729
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17731, !srcloc !17439
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17731
  call void @llvm.dbg.value(metadata i32 %3, metadata !17436, metadata !DIExpression()) #23, !dbg !17733
  call void @llvm.dbg.value(metadata i32 undef, metadata !17437, metadata !DIExpression()) #23, !dbg !17733
  call void @llvm.dbg.value(metadata i32 %3, metadata !17430, metadata !DIExpression()) #23, !dbg !17729
  call void @llvm.dbg.value(metadata i32 %3, metadata !17726, metadata !DIExpression()), !dbg !17728
  call void @llvm.dbg.value(metadata i64 0, metadata !17723, metadata !DIExpression()), !dbg !17727
  call void @llvm.dbg.value(metadata i32 undef, metadata !17724, metadata !DIExpression()), !dbg !17728
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !17734
  call void @llvm.dbg.value(metadata i64 %4, metadata !17723, metadata !DIExpression()), !dbg !17727
  call void @llvm.dbg.value(metadata i32 %3, metadata !17492, metadata !DIExpression()) #23, !dbg !17737
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17497, metadata !DIExpression()) #23, !dbg !17737
  call void @llvm.dbg.value(metadata i32 %3, metadata !17500, metadata !DIExpression()) #23, !dbg !17739
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !17741, !srcloc !17506
  call void @llvm.dbg.value(metadata i32 undef, metadata !17724, metadata !DIExpression()), !dbg !17728
  ret i64 %4, !dbg !17742
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !17743 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17745, metadata !DIExpression()), !dbg !17749
  call void @llvm.dbg.value(metadata i64 0, metadata !17746, metadata !DIExpression()), !dbg !17749
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.267(%struct._timeout* noundef %0) #24, !dbg !17750
  br i1 %2, label %21, label %3, !dbg !17752

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #24, !dbg !17753
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !17747, metadata !DIExpression()), !dbg !17754
  call void @llvm.dbg.value(metadata i64 0, metadata !17746, metadata !DIExpression()), !dbg !17749
  %5 = icmp eq %struct._timeout* %4, null, !dbg !17755
  br i1 %5, label %16, label %6, !dbg !17757

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !17747, metadata !DIExpression()), !dbg !17754
  call void @llvm.dbg.value(metadata i64 %8, metadata !17746, metadata !DIExpression()), !dbg !17749
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !17758
  %10 = load i64, i64* %9, align 8, !dbg !17758
  %11 = add nsw i64 %10, %8, !dbg !17760
  call void @llvm.dbg.value(metadata i64 %11, metadata !17746, metadata !DIExpression()), !dbg !17749
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !17761
  br i1 %12, label %16, label %13, !dbg !17763

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #24, !dbg !17764
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !17747, metadata !DIExpression()), !dbg !17754
  call void @llvm.dbg.value(metadata i64 %11, metadata !17746, metadata !DIExpression()), !dbg !17749
  %15 = icmp eq %struct._timeout* %14, null, !dbg !17755
  br i1 %15, label %16, label %6, !dbg !17757, !llvm.loop !17765

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !17749
  call void @llvm.dbg.value(metadata i64 %17, metadata !17746, metadata !DIExpression()), !dbg !17749
  %18 = tail call fastcc i32 @elapsed.255() #24, !dbg !17767
  %19 = sext i32 %18 to i64, !dbg !17767
  %20 = sub nsw i64 %17, %19, !dbg !17768
  br label %21, !dbg !17769

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !17749
  ret i64 %22, !dbg !17770
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.267(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #10 !dbg !17771 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17775, metadata !DIExpression()), !dbg !17776
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17777
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.264(%struct._dnode* noundef %2) #24, !dbg !17778
  %4 = xor i1 %3, true, !dbg !17779
  ret i1 %4, !dbg !17780
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17781 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17783, metadata !DIExpression()), !dbg !17788
  call void @llvm.dbg.value(metadata i64 0, metadata !17784, metadata !DIExpression()), !dbg !17788
  call void @llvm.dbg.value(metadata i32 0, metadata !17785, metadata !DIExpression()), !dbg !17789
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17424, metadata !DIExpression()) #23, !dbg !17790
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17792, !srcloc !17439
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17792
  call void @llvm.dbg.value(metadata i32 %3, metadata !17436, metadata !DIExpression()) #23, !dbg !17794
  call void @llvm.dbg.value(metadata i32 undef, metadata !17437, metadata !DIExpression()) #23, !dbg !17794
  call void @llvm.dbg.value(metadata i32 %3, metadata !17430, metadata !DIExpression()) #23, !dbg !17790
  call void @llvm.dbg.value(metadata i32 %3, metadata !17787, metadata !DIExpression()), !dbg !17789
  call void @llvm.dbg.value(metadata i64 0, metadata !17784, metadata !DIExpression()), !dbg !17788
  call void @llvm.dbg.value(metadata i32 undef, metadata !17785, metadata !DIExpression()), !dbg !17789
  %4 = load i64, i64* @curr_tick, align 8, !dbg !17795
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !17798
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !17784, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17788
  call void @llvm.dbg.value(metadata i32 %3, metadata !17492, metadata !DIExpression()) #23, !dbg !17799
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17497, metadata !DIExpression()) #23, !dbg !17799
  call void @llvm.dbg.value(metadata i32 %3, metadata !17500, metadata !DIExpression()) #23, !dbg !17801
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !17803, !srcloc !17506
  call void @llvm.dbg.value(metadata i32 undef, metadata !17785, metadata !DIExpression()), !dbg !17789
  %6 = add i64 %5, %4, !dbg !17804
  ret i64 %6, !dbg !17805
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !17806 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !17808, metadata !DIExpression()), !dbg !17812
  call void @llvm.dbg.value(metadata i32 0, metadata !17809, metadata !DIExpression()), !dbg !17813
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17424, metadata !DIExpression()) #23, !dbg !17814
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17816, !srcloc !17439
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !17816
  call void @llvm.dbg.value(metadata i32 %2, metadata !17436, metadata !DIExpression()) #23, !dbg !17818
  call void @llvm.dbg.value(metadata i32 undef, metadata !17437, metadata !DIExpression()) #23, !dbg !17818
  call void @llvm.dbg.value(metadata i32 %2, metadata !17430, metadata !DIExpression()) #23, !dbg !17814
  call void @llvm.dbg.value(metadata i32 %2, metadata !17811, metadata !DIExpression()), !dbg !17813
  call void @llvm.dbg.value(metadata i32 -1, metadata !17808, metadata !DIExpression()), !dbg !17812
  call void @llvm.dbg.value(metadata i32 undef, metadata !17809, metadata !DIExpression()), !dbg !17813
  %3 = tail call fastcc i32 @next_timeout() #24, !dbg !17819
  call void @llvm.dbg.value(metadata i32 %3, metadata !17808, metadata !DIExpression()), !dbg !17812
  call void @llvm.dbg.value(metadata i32 %2, metadata !17492, metadata !DIExpression()) #23, !dbg !17822
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17497, metadata !DIExpression()) #23, !dbg !17822
  call void @llvm.dbg.value(metadata i32 %2, metadata !17500, metadata !DIExpression()) #23, !dbg !17824
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !17826, !srcloc !17506
  call void @llvm.dbg.value(metadata i32 undef, metadata !17809, metadata !DIExpression()), !dbg !17813
  ret i32 %3, !dbg !17827
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !17828 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17830, metadata !DIExpression()), !dbg !17840
  call void @llvm.dbg.value(metadata i1 %1, metadata !17831, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17840
  call void @llvm.dbg.value(metadata i32 0, metadata !17832, metadata !DIExpression()), !dbg !17841
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17424, metadata !DIExpression()) #23, !dbg !17842
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17844, !srcloc !17439
  call void @llvm.dbg.value(metadata i32 undef, metadata !17436, metadata !DIExpression()) #23, !dbg !17846
  call void @llvm.dbg.value(metadata i32 undef, metadata !17437, metadata !DIExpression()) #23, !dbg !17846
  call void @llvm.dbg.value(metadata i32 undef, metadata !17430, metadata !DIExpression()) #23, !dbg !17842
  call void @llvm.dbg.value(metadata i32 undef, metadata !17834, metadata !DIExpression()), !dbg !17841
  call void @llvm.dbg.value(metadata i32 undef, metadata !17832, metadata !DIExpression()), !dbg !17841
  %4 = tail call fastcc i32 @next_timeout() #24, !dbg !17847
  call void @llvm.dbg.value(metadata i32 %4, metadata !17835, metadata !DIExpression()), !dbg !17848
  call void @llvm.dbg.value(metadata i1 undef, metadata !17838, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17848
  %5 = icmp slt i32 %4, 2, !dbg !17849
  call void @llvm.dbg.value(metadata i1 %5, metadata !17839, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17848
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !17850
  call void @llvm.dbg.value(metadata i1 %6, metadata !17838, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17848
  br i1 %7, label %11, label %8, !dbg !17850

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !17852
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !17852
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #25, !dbg !17854
  br label %11, !dbg !17855

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !17844
  call void @llvm.dbg.value(metadata i32 %12, metadata !17436, metadata !DIExpression()) #23, !dbg !17846
  call void @llvm.dbg.value(metadata i32 %12, metadata !17430, metadata !DIExpression()) #23, !dbg !17842
  call void @llvm.dbg.value(metadata i32 %12, metadata !17834, metadata !DIExpression()), !dbg !17841
  call void @llvm.dbg.value(metadata i32 undef, metadata !17492, metadata !DIExpression()) #23, !dbg !17856
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17497, metadata !DIExpression()) #23, !dbg !17856
  call void @llvm.dbg.value(metadata i32 undef, metadata !17500, metadata !DIExpression()) #23, !dbg !17858
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !17860, !srcloc !17506
  call void @llvm.dbg.value(metadata i32 1, metadata !17832, metadata !DIExpression()), !dbg !17841
  call void @llvm.dbg.value(metadata i32 undef, metadata !17832, metadata !DIExpression()), !dbg !17841
  ret void, !dbg !17861
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !17862 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17866, metadata !DIExpression()), !dbg !17871
  tail call void @z_time_slice(i32 noundef %0) #25, !dbg !17872
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17424, metadata !DIExpression()) #23, !dbg !17873
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17875, !srcloc !17439
  call void @llvm.dbg.value(metadata i32 undef, metadata !17436, metadata !DIExpression()) #23, !dbg !17877
  call void @llvm.dbg.value(metadata i32 undef, metadata !17437, metadata !DIExpression()) #23, !dbg !17877
  call void @llvm.dbg.value(metadata i32 undef, metadata !17430, metadata !DIExpression()) #23, !dbg !17873
  call void @llvm.dbg.value(metadata i32 undef, metadata !17867, metadata !DIExpression()), !dbg !17871
  store i32 %0, i32* @announce_remaining, align 4, !dbg !17871
  call void @llvm.dbg.value(metadata i32 undef, metadata !17867, metadata !DIExpression()), !dbg !17871
  %3 = tail call fastcc %struct._timeout* @first() #24, !dbg !17878
  %4 = icmp eq %struct._timeout* %3, null, !dbg !17879
  br i1 %4, label %28, label %5, !dbg !17880

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !17881
  %10 = load i64, i64* %9, align 8, !dbg !17881
  %11 = sext i32 %8 to i64, !dbg !17882
  %12 = icmp sgt i64 %10, %11, !dbg !17883
  br i1 %12, label %26, label %13, !dbg !17884

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !17871
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !17868, metadata !DIExpression()), !dbg !17885
  %15 = trunc i64 %10 to i32, !dbg !17886
  call void @llvm.dbg.value(metadata i32 %15, metadata !17870, metadata !DIExpression()), !dbg !17885
  %16 = sext i32 %15 to i64, !dbg !17887
  %17 = load i64, i64* @curr_tick, align 8, !dbg !17888
  %18 = add i64 %17, %16, !dbg !17888
  store i64 %18, i64* @curr_tick, align 8, !dbg !17888
  store i64 0, i64* %9, align 8, !dbg !17889
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #24, !dbg !17890
  call void @llvm.dbg.value(metadata i32 %14, metadata !17492, metadata !DIExpression()) #23, !dbg !17891
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17497, metadata !DIExpression()) #23, !dbg !17891
  call void @llvm.dbg.value(metadata i32 %14, metadata !17500, metadata !DIExpression()) #23, !dbg !17893
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !17895, !srcloc !17506
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !17896
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !17896
  tail call void %20(%struct._timeout* noundef nonnull %6) #25, !dbg !17897
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17424, metadata !DIExpression()) #23, !dbg !17898
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17900, !srcloc !17439
  call void @llvm.dbg.value(metadata i32 undef, metadata !17436, metadata !DIExpression()) #23, !dbg !17902
  call void @llvm.dbg.value(metadata i32 undef, metadata !17437, metadata !DIExpression()) #23, !dbg !17902
  call void @llvm.dbg.value(metadata i32 undef, metadata !17430, metadata !DIExpression()) #23, !dbg !17898
  call void @llvm.dbg.value(metadata i32 undef, metadata !17867, metadata !DIExpression()), !dbg !17871
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !17903
  %23 = sub nsw i32 %22, %15, !dbg !17903
  store i32 %23, i32* @announce_remaining, align 4, !dbg !17871
  call void @llvm.dbg.value(metadata i32 undef, metadata !17867, metadata !DIExpression()), !dbg !17871
  %24 = tail call fastcc %struct._timeout* @first() #24, !dbg !17878
  %25 = icmp eq %struct._timeout* %24, null, !dbg !17879
  br i1 %25, label %28, label %5, !dbg !17880, !llvm.loop !17904

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !17906
  store i64 %27, i64* %9, align 8, !dbg !17906
  br label %32, !dbg !17909

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !17871
  %31 = sext i32 %30 to i64, !dbg !17910
  br label %32, !dbg !17910

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !17910
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !17871
  %36 = load i64, i64* @curr_tick, align 8, !dbg !17911
  %37 = add i64 %36, %33, !dbg !17911
  store i64 %37, i64* @curr_tick, align 8, !dbg !17911
  store i32 0, i32* @announce_remaining, align 4, !dbg !17912
  %38 = tail call fastcc i32 @next_timeout() #24, !dbg !17913
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #25, !dbg !17914
  call void @llvm.dbg.value(metadata i32 %35, metadata !17492, metadata !DIExpression()) #23, !dbg !17915
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17497, metadata !DIExpression()) #23, !dbg !17915
  call void @llvm.dbg.value(metadata i32 %35, metadata !17500, metadata !DIExpression()) #23, !dbg !17917
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #23, !dbg !17919, !srcloc !17506
  ret void, !dbg !17920
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !17921 {
  call void @llvm.dbg.value(metadata i64 0, metadata !17925, metadata !DIExpression()), !dbg !17929
  call void @llvm.dbg.value(metadata i32 0, metadata !17926, metadata !DIExpression()), !dbg !17930
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17424, metadata !DIExpression()) #23, !dbg !17931
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17933, !srcloc !17439
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !17933
  call void @llvm.dbg.value(metadata i32 %2, metadata !17436, metadata !DIExpression()) #23, !dbg !17935
  call void @llvm.dbg.value(metadata i32 undef, metadata !17437, metadata !DIExpression()) #23, !dbg !17935
  call void @llvm.dbg.value(metadata i32 %2, metadata !17430, metadata !DIExpression()) #23, !dbg !17931
  call void @llvm.dbg.value(metadata i32 %2, metadata !17928, metadata !DIExpression()), !dbg !17930
  call void @llvm.dbg.value(metadata i64 0, metadata !17925, metadata !DIExpression()), !dbg !17929
  call void @llvm.dbg.value(metadata i32 undef, metadata !17926, metadata !DIExpression()), !dbg !17930
  %3 = load i64, i64* @curr_tick, align 8, !dbg !17936
  %4 = tail call fastcc i32 @elapsed.255() #24, !dbg !17939
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !17925, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17929
  call void @llvm.dbg.value(metadata i32 %2, metadata !17492, metadata !DIExpression()) #23, !dbg !17940
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17497, metadata !DIExpression()) #23, !dbg !17940
  call void @llvm.dbg.value(metadata i32 %2, metadata !17500, metadata !DIExpression()) #23, !dbg !17942
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !17944, !srcloc !17506
  call void @llvm.dbg.value(metadata i32 undef, metadata !17926, metadata !DIExpression()), !dbg !17930
  %5 = sext i32 %4 to i64, !dbg !17939
  %6 = add i64 %3, %5, !dbg !17945
  ret i64 %6, !dbg !17946
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !17947 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !17948
  %2 = trunc i64 %1 to i32, !dbg !17949
  ret i32 %2, !dbg !17950
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !17951 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !17952
  ret i64 %1, !dbg !17953
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !17954 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17956, metadata !DIExpression()), !dbg !17963
  %2 = icmp eq i32 %0, 0, !dbg !17964
  br i1 %2, label %10, label %3, !dbg !17966

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !17967
  call void @llvm.dbg.value(metadata i32 %4, metadata !17957, metadata !DIExpression()), !dbg !17963
  %5 = mul i32 %0, 84, !dbg !17968
  call void @llvm.dbg.value(metadata i32 %5, metadata !17958, metadata !DIExpression()), !dbg !17963
  br label %6, !dbg !17969

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !17970
  call void @llvm.dbg.value(metadata i32 %7, metadata !17959, metadata !DIExpression()), !dbg !17971
  %8 = sub i32 %7, %4, !dbg !17972
  %9 = icmp ult i32 %8, %5, !dbg !17974
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !17975
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !17976 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #24, !dbg !17977
  ret i32 %1, !dbg !17978
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !17979 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #25, !dbg !17981
  ret i32 %1, !dbg !17982
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !17983 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !17987, metadata !DIExpression()), !dbg !17989
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !17990

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #24, !dbg !17991
  br label %14, !dbg !17995

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !17988, metadata !DIExpression()), !dbg !17989
  %6 = icmp slt i64 %2, -1, !dbg !17996
  br i1 %6, label %7, label %9, !dbg !17999

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !18000
  br label %14, !dbg !18001

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #24, !dbg !18003
  %11 = icmp ugt i64 %2, 1, !dbg !18004
  %12 = select i1 %11, i64 %2, i64 1, !dbg !18004
  %13 = add nsw i64 %10, %12, !dbg !18005
  br label %14, !dbg !18006

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !18007
  ret i64 %15, !dbg !18008
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_timer_expiration_handler(%struct._timeout* noundef %0) #1 !dbg !18009 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18011, metadata !DIExpression()), !dbg !18022
  %2 = bitcast %struct._timeout* %0 to %struct.k_timer*, !dbg !18023
  call void @llvm.dbg.value(metadata %struct.k_timer* %2, metadata !18012, metadata !DIExpression()), !dbg !18022
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18024, metadata !DIExpression()) #23, !dbg !18031
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !18033, !srcloc !18039
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !18033
  call void @llvm.dbg.value(metadata i32 %4, metadata !18036, metadata !DIExpression()) #23, !dbg !18040
  call void @llvm.dbg.value(metadata i32 undef, metadata !18037, metadata !DIExpression()) #23, !dbg !18040
  call void @llvm.dbg.value(metadata i32 %4, metadata !18030, metadata !DIExpression()) #23, !dbg !18031
  call void @llvm.dbg.value(metadata i32 %4, metadata !18014, metadata !DIExpression()), !dbg !18022
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 1, i32 2, !dbg !18041
  %6 = load i64, i64* %5, align 8, !dbg !18041
  switch i64 %6, label %7 [
    i64 0, label %21
    i64 -1, label %21
  ], !dbg !18042

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 undef, metadata !18019, metadata !DIExpression()), !dbg !18043
  %8 = tail call fastcc i64 @k_uptime_ticks() #24, !dbg !18044
  %9 = add nsw i64 %8, 1, !dbg !18044
  %10 = load i64, i64* %5, align 8, !dbg !18044
  %11 = add nsw i64 %9, %10, !dbg !18044
  %12 = icmp sgt i64 %11, 0, !dbg !18044
  br i1 %12, label %13, label %18, !dbg !18044

13:                                               ; preds = %7
  %14 = tail call fastcc i64 @k_uptime_ticks() #24, !dbg !18044
  %15 = load i64, i64* %5, align 8, !dbg !18044
  %16 = add i64 %14, %15, !dbg !18044
  %17 = sub i64 -3, %16, !dbg !18044
  br label %18, !dbg !18044

18:                                               ; preds = %7, %13
  %19 = phi i64 [ %17, %13 ], [ -2, %7 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !18019, metadata !DIExpression()), !dbg !18043
  %20 = insertvalue [1 x i64] poison, i64 %19, 0, !dbg !18045
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %0, void (%struct._timeout*)* noundef nonnull @z_timer_expiration_handler, [1 x i64] %20) #25, !dbg !18045
  br label %21, !dbg !18046

21:                                               ; preds = %1, %1, %18
  %22 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 2, !dbg !18047
  %23 = bitcast %struct._timeout* %22 to i32*, !dbg !18047
  %24 = load i32, i32* %23, align 8, !dbg !18048
  %25 = add i32 %24, 1, !dbg !18048
  store i32 %25, i32* %23, align 8, !dbg !18048
  %26 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 1, i32 1, !dbg !18049
  %27 = bitcast void (%struct._timeout*)** %26 to void (%struct.k_timer*)**, !dbg !18049
  %28 = load void (%struct.k_timer*)*, void (%struct.k_timer*)** %27, align 8, !dbg !18049
  %29 = icmp eq void (%struct.k_timer*)* %28, null, !dbg !18051
  br i1 %29, label %34, label %30, !dbg !18052

30:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 %4, metadata !18053, metadata !DIExpression()) #23, !dbg !18059
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18058, metadata !DIExpression()) #23, !dbg !18059
  call void @llvm.dbg.value(metadata i32 %4, metadata !18062, metadata !DIExpression()) #23, !dbg !18065
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !18067, !srcloc !18068
  %31 = load void (%struct.k_timer*)*, void (%struct.k_timer*)** %27, align 8, !dbg !18069
  tail call void %31(%struct.k_timer* noundef nonnull %2) #25, !dbg !18070
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18024, metadata !DIExpression()) #23, !dbg !18071
  %32 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !18073, !srcloc !18039
  %33 = extractvalue { i32, i32 } %32, 0, !dbg !18073
  call void @llvm.dbg.value(metadata i32 %33, metadata !18036, metadata !DIExpression()) #23, !dbg !18075
  call void @llvm.dbg.value(metadata i32 undef, metadata !18037, metadata !DIExpression()) #23, !dbg !18075
  call void @llvm.dbg.value(metadata i32 %33, metadata !18030, metadata !DIExpression()) #23, !dbg !18071
  call void @llvm.dbg.value(metadata i32 %33, metadata !18014, metadata !DIExpression()), !dbg !18022
  br label %34, !dbg !18076

34:                                               ; preds = %30, %21
  %35 = phi i32 [ %33, %30 ], [ %4, %21 ], !dbg !18022
  call void @llvm.dbg.value(metadata i32 %35, metadata !18014, metadata !DIExpression()), !dbg !18022
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 1, !dbg !18077
  %37 = bitcast %struct._timeout* %36 to %struct._wait_q_t*, !dbg !18077
  %38 = tail call fastcc %struct.k_thread* @z_waitq_head.274(%struct._wait_q_t* noundef nonnull %37) #24, !dbg !18078
  call void @llvm.dbg.value(metadata %struct.k_thread* %38, metadata !18013, metadata !DIExpression()), !dbg !18022
  %39 = icmp eq %struct.k_thread* %38, null, !dbg !18079
  br i1 %39, label %40, label %41, !dbg !18081

40:                                               ; preds = %34
  call void @llvm.dbg.value(metadata i32 %35, metadata !18053, metadata !DIExpression()) #23, !dbg !18082
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18058, metadata !DIExpression()) #23, !dbg !18082
  call void @llvm.dbg.value(metadata i32 %35, metadata !18062, metadata !DIExpression()) #23, !dbg !18085
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #23, !dbg !18087, !srcloc !18068
  br label %43, !dbg !18088

41:                                               ; preds = %34
  tail call void @z_unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %38) #25, !dbg !18089
  call void @llvm.dbg.value(metadata %struct.k_thread* %38, metadata !18090, metadata !DIExpression()), !dbg !18096
  call void @llvm.dbg.value(metadata i32 0, metadata !18095, metadata !DIExpression()), !dbg !18096
  %42 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %38, i32 0, i32 7, i32 1, !dbg !18098
  store i32 0, i32* %42, align 4, !dbg !18099
  call void @llvm.dbg.value(metadata i32 %35, metadata !18053, metadata !DIExpression()) #23, !dbg !18100
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18058, metadata !DIExpression()) #23, !dbg !18100
  call void @llvm.dbg.value(metadata i32 %35, metadata !18062, metadata !DIExpression()) #23, !dbg !18102
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #23, !dbg !18104, !srcloc !18068
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %38) #25, !dbg !18105
  br label %43, !dbg !18106

43:                                               ; preds = %41, %40
  ret void, !dbg !18106
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @k_uptime_ticks() unnamed_addr #1 !dbg !18107 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !18108, !srcloc !18110
  %1 = tail call i64 @z_impl_k_uptime_ticks() #25, !dbg !18111
  ret i64 %1, !dbg !18112
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head.274(%struct._wait_q_t* noundef readonly %0) unnamed_addr #10 !dbg !18113 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !18117, metadata !DIExpression()), !dbg !18118
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !18119
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.275(%struct._dnode* noundef %2) #24, !dbg !18120
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !18121
  ret %struct.k_thread* %4, !dbg !18122
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.275(%struct._dnode* noundef %0) unnamed_addr #10 !dbg !18123 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18128, metadata !DIExpression()), !dbg !18129
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty.276(%struct._dnode* noundef %0) #24, !dbg !18130
  br i1 %2, label %6, label %3, !dbg !18130

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18131
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !18131
  br label %6, !dbg !18130

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !18130
  ret %struct._dnode* %7, !dbg !18132
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.276(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !18133 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18137, metadata !DIExpression()), !dbg !18138
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18139
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !18139
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !18140
  ret i1 %4, !dbg !18141
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @k_timer_init(%struct.k_timer* noundef %0, void (%struct.k_timer*)* noundef %1, void (%struct.k_timer*)* noundef %2) local_unnamed_addr #6 !dbg !18142 {
  call void @llvm.dbg.value(metadata %struct.k_timer* %0, metadata !18148, metadata !DIExpression()), !dbg !18151
  call void @llvm.dbg.value(metadata void (%struct.k_timer*)* %1, metadata !18149, metadata !DIExpression()), !dbg !18151
  call void @llvm.dbg.value(metadata void (%struct.k_timer*)* %2, metadata !18150, metadata !DIExpression()), !dbg !18151
  %4 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 2, !dbg !18152
  store void (%struct.k_timer*)* %1, void (%struct.k_timer*)** %4, align 8, !dbg !18153
  %5 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 3, !dbg !18154
  store void (%struct.k_timer*)* %2, void (%struct.k_timer*)** %5, align 4, !dbg !18155
  %6 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 5, !dbg !18156
  store i32 0, i32* %6, align 8, !dbg !18157
  %7 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 1, !dbg !18158
  tail call fastcc void @z_waitq_init.279(%struct._wait_q_t* noundef nonnull %7) #24, !dbg !18161
  %8 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 0, !dbg !18162
  tail call fastcc void @z_init_timeout.280(%struct._timeout* noundef %8) #24, !dbg !18163
  %9 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 6, !dbg !18164
  store i8* null, i8** %9, align 4, !dbg !18165
  ret void, !dbg !18166
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.279(%struct._wait_q_t* noundef %0) unnamed_addr #6 !dbg !18167 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !18171, metadata !DIExpression()), !dbg !18172
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !18173
  tail call fastcc void @sys_dlist_init.282(%struct._dnode* noundef %2) #24, !dbg !18174
  ret void, !dbg !18175
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout.280(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !18176 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18178, metadata !DIExpression()), !dbg !18179
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !18180
  tail call fastcc void @sys_dnode_init.281(%struct._dnode* noundef %2) #24, !dbg !18181
  ret void, !dbg !18182
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.281(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !18183 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18187, metadata !DIExpression()), !dbg !18188
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18189
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !18190
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18191
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !18192
  ret void, !dbg !18193
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.282(%struct._dnode* noundef %0) unnamed_addr #6 !dbg !18194 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18198, metadata !DIExpression()), !dbg !18199
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18200
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !18201
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18202
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !18203
  ret void, !dbg !18204
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_timer_start(%struct.k_timer* noundef %0, [1 x i64] %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !18205 {
  %4 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !18210, metadata !DIExpression()), !dbg !18212
  %5 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %5, metadata !18211, metadata !DIExpression()), !dbg !18212
  call void @llvm.dbg.value(metadata %struct.k_timer* %0, metadata !18209, metadata !DIExpression()), !dbg !18212
  %6 = icmp eq i64 %4, -1, !dbg !18213
  br i1 %6, label %23, label %7, !dbg !18215

7:                                                ; preds = %3
  %8 = icmp sgt i64 %5, 0, !dbg !18216
  %9 = icmp sgt i64 %5, 2, !dbg !18216
  %10 = select i1 %9, i64 %5, i64 2, !dbg !18216
  %11 = add nsw i64 %10, -1, !dbg !18216
  %12 = select i1 %8, i64 %11, i64 %5, !dbg !18216
  call void @llvm.dbg.value(metadata i64 %12, metadata !18211, metadata !DIExpression()), !dbg !18212
  %13 = icmp sgt i64 %4, -2, !dbg !18218
  %14 = icmp sgt i64 %4, 1, !dbg !18220
  %15 = select i1 %14, i64 %4, i64 1, !dbg !18220
  %16 = add nsw i64 %15, -1, !dbg !18220
  %17 = select i1 %13, i64 %16, i64 %4, !dbg !18220
  call void @llvm.dbg.value(metadata i64 %17, metadata !18210, metadata !DIExpression()), !dbg !18212
  %18 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 0, !dbg !18221
  %19 = tail call i32 @z_abort_timeout(%struct._timeout* noundef %18) #25, !dbg !18222
  %20 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 4, i32 0, !dbg !18223
  store i64 %12, i64* %20, align 8, !dbg !18223
  %21 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 5, !dbg !18224
  store i32 0, i32* %21, align 8, !dbg !18225
  %22 = insertvalue [1 x i64] poison, i64 %17, 0, !dbg !18226
  tail call void @z_add_timeout(%struct._timeout* noundef %18, void (%struct._timeout*)* noundef nonnull @z_timer_expiration_handler, [1 x i64] %22) #25, !dbg !18226
  br label %23, !dbg !18227

23:                                               ; preds = %3, %7
  ret void, !dbg !18227
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_timer_stop(%struct.k_timer* noundef %0) local_unnamed_addr #1 !dbg !18228 {
  call void @llvm.dbg.value(metadata %struct.k_timer* %0, metadata !18230, metadata !DIExpression()), !dbg !18235
  %2 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 0, !dbg !18236
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef %2) #25, !dbg !18237
  %4 = icmp eq i32 %3, 0, !dbg !18238
  call void @llvm.dbg.value(metadata i1 %4, metadata !18231, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18235
  br i1 %4, label %5, label %15, !dbg !18239

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 3, !dbg !18240
  %7 = load void (%struct.k_timer*)*, void (%struct.k_timer*)** %6, align 4, !dbg !18240
  %8 = icmp eq void (%struct.k_timer*)* %7, null, !dbg !18242
  br i1 %8, label %10, label %9, !dbg !18243

9:                                                ; preds = %5
  tail call void %7(%struct.k_timer* noundef nonnull %0) #25, !dbg !18244
  br label %10, !dbg !18246

10:                                               ; preds = %9, %5
  %11 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 1, !dbg !18247
  %12 = tail call %struct.k_thread* @z_unpend1_no_timeout(%struct._wait_q_t* noundef nonnull %11) #25, !dbg !18248
  call void @llvm.dbg.value(metadata %struct.k_thread* %12, metadata !18232, metadata !DIExpression()), !dbg !18249
  %13 = icmp eq %struct.k_thread* %12, null, !dbg !18250
  br i1 %13, label %15, label %14, !dbg !18252

14:                                               ; preds = %10
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %12) #25, !dbg !18253
  tail call fastcc void @z_reschedule_unlocked.285() #24, !dbg !18255
  br label %15, !dbg !18256

15:                                               ; preds = %10, %14, %1
  ret void, !dbg !18257
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked.285() unnamed_addr #1 !dbg !18258 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !18259, !srcloc !18039
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !18259
  call void @llvm.dbg.value(metadata i32 %2, metadata !18036, metadata !DIExpression()) #23, !dbg !18261
  call void @llvm.dbg.value(metadata i32 undef, metadata !18037, metadata !DIExpression()) #23, !dbg !18261
  tail call void @z_reschedule_irqlock(i32 noundef %2) #25, !dbg !18262
  ret void, !dbg !18263
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_timer_status_get(%struct.k_timer* nocapture noundef %0) local_unnamed_addr #1 !dbg !18264 {
  call void @llvm.dbg.value(metadata %struct.k_timer* %0, metadata !18268, metadata !DIExpression()), !dbg !18271
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18024, metadata !DIExpression()) #23, !dbg !18272
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !18274, !srcloc !18039
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !18274
  call void @llvm.dbg.value(metadata i32 %3, metadata !18036, metadata !DIExpression()) #23, !dbg !18276
  call void @llvm.dbg.value(metadata i32 undef, metadata !18037, metadata !DIExpression()) #23, !dbg !18276
  call void @llvm.dbg.value(metadata i32 %3, metadata !18030, metadata !DIExpression()) #23, !dbg !18272
  call void @llvm.dbg.value(metadata i32 %3, metadata !18269, metadata !DIExpression()), !dbg !18271
  %4 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 5, !dbg !18277
  %5 = load i32, i32* %4, align 8, !dbg !18277
  call void @llvm.dbg.value(metadata i32 %5, metadata !18270, metadata !DIExpression()), !dbg !18271
  store i32 0, i32* %4, align 8, !dbg !18278
  call void @llvm.dbg.value(metadata i32 %3, metadata !18053, metadata !DIExpression()) #23, !dbg !18279
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18058, metadata !DIExpression()) #23, !dbg !18279
  call void @llvm.dbg.value(metadata i32 %3, metadata !18062, metadata !DIExpression()) #23, !dbg !18281
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !18283, !srcloc !18068
  ret i32 %5, !dbg !18284
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_timer_status_sync(%struct.k_timer* noundef %0) local_unnamed_addr #1 !dbg !18285 {
  call void @llvm.dbg.value(metadata %struct.k_timer* %0, metadata !18287, metadata !DIExpression()), !dbg !18290
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18024, metadata !DIExpression()) #23, !dbg !18291
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !18293, !srcloc !18039
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !18293
  call void @llvm.dbg.value(metadata i32 %3, metadata !18036, metadata !DIExpression()) #23, !dbg !18295
  call void @llvm.dbg.value(metadata i32 undef, metadata !18037, metadata !DIExpression()) #23, !dbg !18295
  call void @llvm.dbg.value(metadata i32 %3, metadata !18030, metadata !DIExpression()) #23, !dbg !18291
  call void @llvm.dbg.value(metadata i32 %3, metadata !18288, metadata !DIExpression()), !dbg !18290
  %4 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 5, !dbg !18296
  %5 = load i32, i32* %4, align 8, !dbg !18296
  call void @llvm.dbg.value(metadata i32 %5, metadata !18289, metadata !DIExpression()), !dbg !18290
  %6 = icmp eq i32 %5, 0, !dbg !18297
  br i1 %6, label %7, label %17, !dbg !18299

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 0, !dbg !18300
  %9 = tail call fastcc zeroext i1 @z_is_inactive_timeout.286(%struct._timeout* noundef %8) #24, !dbg !18303
  br i1 %9, label %17, label %10, !dbg !18304

10:                                               ; preds = %7
  %11 = getelementptr inbounds %struct.k_timer, %struct.k_timer* %0, i32 0, i32 1, !dbg !18305
  %12 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !18307
  %13 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %12, %struct._wait_q_t* noundef nonnull %11, [1 x i64] [i64 -1]) #25, !dbg !18307
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18024, metadata !DIExpression()) #23, !dbg !18308
  %14 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !18310, !srcloc !18039
  %15 = extractvalue { i32, i32 } %14, 0, !dbg !18310
  call void @llvm.dbg.value(metadata i32 %15, metadata !18036, metadata !DIExpression()) #23, !dbg !18312
  call void @llvm.dbg.value(metadata i32 undef, metadata !18037, metadata !DIExpression()) #23, !dbg !18312
  call void @llvm.dbg.value(metadata i32 %15, metadata !18030, metadata !DIExpression()) #23, !dbg !18308
  call void @llvm.dbg.value(metadata i32 %15, metadata !18288, metadata !DIExpression()), !dbg !18290
  %16 = load i32, i32* %4, align 8, !dbg !18313
  call void @llvm.dbg.value(metadata i32 %16, metadata !18289, metadata !DIExpression()), !dbg !18290
  br label %17, !dbg !18314

17:                                               ; preds = %1, %10, %7
  %18 = phi i32 [ 0, %7 ], [ %16, %10 ], [ %5, %1 ], !dbg !18290
  %19 = phi i32 [ %3, %7 ], [ %15, %10 ], [ %3, %1 ], !dbg !18290
  call void @llvm.dbg.value(metadata i32 %19, metadata !18288, metadata !DIExpression()), !dbg !18290
  call void @llvm.dbg.value(metadata i32 %18, metadata !18289, metadata !DIExpression()), !dbg !18290
  store i32 0, i32* %4, align 8, !dbg !18315
  call void @llvm.dbg.value(metadata i32 %19, metadata !18053, metadata !DIExpression()) #23, !dbg !18316
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18058, metadata !DIExpression()) #23, !dbg !18316
  call void @llvm.dbg.value(metadata i32 %19, metadata !18062, metadata !DIExpression()) #23, !dbg !18318
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %19) #23, !dbg !18320, !srcloc !18068
  ret i32 %18, !dbg !18321
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.286(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #10 !dbg !18322 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18328, metadata !DIExpression()), !dbg !18329
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !18330
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.287(%struct._dnode* noundef %2) #24, !dbg !18331
  %4 = xor i1 %3, true, !dbg !18332
  ret i1 %4, !dbg !18333
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.287(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !18334 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18340, metadata !DIExpression()), !dbg !18341
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18342
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !18342
  %4 = icmp ne %struct._dnode* %3, null, !dbg !18343
  ret i1 %4, !dbg !18344
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !18345 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.290, i32 0, i32 0)) #25, !dbg !18347
  ret void, !dbg !18348
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { argmemonly nofree nosync nounwind willreturn }
attributes #8 = { nofree nosync nounwind willreturn }
attributes #9 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { argmemonly nofree nounwind willreturn writeonly }
attributes #14 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nounwind }
attributes #24 = { nobuiltin optsize "no-builtins" }
attributes #25 = { nobuiltin nounwind optsize "no-builtins" }
attributes #26 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #27 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #28 = { nounwind readnone }
attributes #29 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!496, !2, !2908, !27, !260, !536, !557, !2910, !2912, !2946, !567, !610, !2948, !2951, !2962, !3008, !3010, !3038, !3066, !3109, !3181, !3226, !639, !789, !3254, !825, !835, !860, !871, !988, !1186, !3259, !1325, !1391, !1696, !1978, !3300, !2091, !2181, !3302, !3365, !3432, !2234, !3435, !2241, !2611, !3453, !2631, !3455, !2746, !2785, !3458}
!llvm.ident = !{!3460, !3460, !3460, !3460, !3460, !3460, !3460, !3460, !3460, !3460, !3460, !3460, !3460, !3460, !3460, !3460, !3460, !3460, !3460, !3460, !3460, !3460, !3460, !3460, !3460, !3460, !3460, !3460, !3460, !3460, !3460, !3460, !3460, !3460, !3460, !3460, !3460, !3460, !3460, !3460, !3460, !3460, !3460, !3460, !3460, !3460, !3460, !3460, !3460, !3460, !3460, !3460}
!llvm.module.flags = !{!3461, !3462, !3463, !3464, !3465, !3466, !3467, !3468, !3469}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sensor_batch_processing/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sensor_batch_processing")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 109, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sensor_batch_processing")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 6208, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 97)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 3104, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "log_const_main", scope: !27, file: !119, line: 12, type: !252, isLocal: false, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !103, globals: !116, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/rtio/sensor_batch_processing/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sensor_batch_processing")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_RTIO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_RTIO_IODEV", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 66)
!101 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 67)
!102 = !DIEnumerator(name: "K_OBJ_LAST", value: 68)
!103 = !{!104, !105, !108, !109, !113, !114}
!104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !106, size: 32)
!106 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !107)
!107 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!108 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!109 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !110, line: 46, baseType: !111)
!110 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!111 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !112)
!112 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!113 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!114 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !115)
!115 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!116 = !{!25, !117, !227, !229, !235, !237, !245}
!117 = !DIGlobalVariableExpression(var: !118, expr: !DIExpression())
!118 = distinct !DIGlobalVariable(name: "simple_exec", scope: !27, file: !119, line: 24, type: !120, isLocal: false, isDefinition: true)
!119 = !DIFile(filename: "zephyr/samples/subsys/rtio/sensor_batch_processing/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_simple_executor", file: !121, line: 57, size: 32, elements: !122)
!121 = !DIFile(filename: "zephyr/include/zephyr/rtio/rtio_executor_simple.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!122 = !{!123}
!123 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !120, file: !121, line: 58, baseType: !124, size: 32)
!124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_executor", file: !125, line: 210, size: 32, elements: !126)
!125 = !DIFile(filename: "zephyr/include/zephyr/rtio/rtio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!126 = !{!127}
!127 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !124, file: !125, line: 211, baseType: !128, size: 32)
!128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !129, size: 32)
!129 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !130)
!130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_executor_api", file: !125, line: 168, size: 96, elements: !131)
!131 = !{!132, !222, !226}
!132 = !DIDerivedType(tag: DW_TAG_member, name: "submit", scope: !130, file: !125, line: 177, baseType: !133, size: 32)
!133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !134, size: 32)
!134 = !DISubroutineType(types: !135)
!135 = !{!108, !136}
!136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !137, size: 32)
!137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio", file: !125, line: 222, size: 128, elements: !138)
!138 = !{!139, !141, !145, !210}
!139 = !DIDerivedType(tag: DW_TAG_member, name: "executor", scope: !137, file: !125, line: 228, baseType: !140, size: 32)
!140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !124, size: 32)
!141 = !DIDerivedType(tag: DW_TAG_member, name: "xcqcnt", scope: !137, file: !125, line: 251, baseType: !142, size: 32, offset: 32)
!142 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !143, line: 22, baseType: !144)
!143 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!144 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "sq", scope: !137, file: !125, line: 254, baseType: !146, size: 32, offset: 64)
!146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !147, size: 32)
!147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_sq", file: !125, line: 142, size: 160, elements: !148)
!148 = !{!149, !159}
!149 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !147, file: !125, line: 143, baseType: !150, size: 160)
!150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_spsc", file: !151, line: 58, size: 160, elements: !152)
!151 = !DIFile(filename: "zephyr/include/zephyr/rtio/rtio_spsc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!152 = !{!153, !154, !155, !156, !157}
!153 = !DIDerivedType(tag: DW_TAG_member, name: "acquire", scope: !150, file: !151, line: 60, baseType: !24, size: 32)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "consume", scope: !150, file: !151, line: 63, baseType: !24, size: 32, offset: 32)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !150, file: !151, line: 66, baseType: !142, size: 32, offset: 64)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !150, file: !151, line: 69, baseType: !142, size: 32, offset: 96)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !150, file: !151, line: 72, baseType: !158, size: 32, offset: 128)
!158 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !24)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !147, file: !125, line: 144, baseType: !160, offset: 160)
!160 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, elements: !197)
!161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_sqe", file: !125, line: 109, size: 160, elements: !162)
!162 = !{!163, !166, !167, !170, !200, !201}
!163 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !161, file: !125, line: 110, baseType: !164, size: 8)
!164 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !165)
!165 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !161, file: !125, line: 112, baseType: !164, size: 8, offset: 8)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !161, file: !125, line: 114, baseType: !168, size: 16, offset: 16)
!168 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !169)
!169 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "iodev", scope: !161, file: !125, line: 116, baseType: !171, size: 32, offset: 32)
!171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !172, size: 32)
!172 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !173)
!173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev", file: !125, line: 306, size: 96, elements: !174)
!174 = !{!175, !186, !199}
!175 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !173, file: !125, line: 308, baseType: !176, size: 32)
!176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !177, size: 32)
!177 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !178)
!178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_api", file: !125, line: 263, size: 32, elements: !179)
!179 = !{!180}
!180 = !DIDerivedType(tag: DW_TAG_member, name: "submit", scope: !178, file: !125, line: 271, baseType: !181, size: 32)
!181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !182, size: 32)
!182 = !DISubroutineType(types: !183)
!183 = !{null, !184, !136}
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !185, size: 32)
!185 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !161)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "iodev_sq", scope: !173, file: !125, line: 311, baseType: !187, size: 32, offset: 32)
!187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !188, size: 32)
!188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_sq", file: !125, line: 298, size: 160, elements: !189)
!189 = !{!190, !191}
!190 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !188, file: !125, line: 299, baseType: !150, size: 160)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !188, file: !125, line: 300, baseType: !192, offset: 160)
!192 = !DICompositeType(tag: DW_TAG_array_type, baseType: !193, elements: !197)
!193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_sqe", file: !125, line: 288, size: 64, elements: !194)
!194 = !{!195, !196}
!195 = !DIDerivedType(tag: DW_TAG_member, name: "sqe", scope: !193, file: !125, line: 289, baseType: !184, size: 32)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !193, file: !125, line: 290, baseType: !136, size: 32, offset: 32)
!197 = !{!198}
!198 = !DISubrange(count: -1)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !173, file: !125, line: 314, baseType: !104, size: 32, offset: 64)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !161, file: !125, line: 125, baseType: !104, size: 32, offset: 64)
!201 = !DIDerivedType(tag: DW_TAG_member, scope: !161, file: !125, line: 127, baseType: !202, size: 64, offset: 96)
!202 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !161, file: !125, line: 127, size: 64, elements: !203)
!203 = !{!204}
!204 = !DIDerivedType(tag: DW_TAG_member, scope: !202, file: !125, line: 128, baseType: !205, size: 64)
!205 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !202, file: !125, line: 128, size: 64, elements: !206)
!206 = !{!207, !208}
!207 = !DIDerivedType(tag: DW_TAG_member, name: "buf_len", scope: !205, file: !125, line: 129, baseType: !113, size: 32)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !205, file: !125, line: 131, baseType: !209, size: 32, offset: 32)
!209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !164, size: 32)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "cq", scope: !137, file: !125, line: 257, baseType: !211, size: 32, offset: 96)
!211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !212, size: 32)
!212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_cq", file: !125, line: 161, size: 160, elements: !213)
!213 = !{!214, !215}
!214 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !212, file: !125, line: 162, baseType: !150, size: 160)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !212, file: !125, line: 163, baseType: !216, offset: 160)
!216 = !DICompositeType(tag: DW_TAG_array_type, baseType: !217, elements: !197)
!217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_cqe", file: !125, line: 150, size: 64, elements: !218)
!218 = !{!219, !221}
!219 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !217, file: !125, line: 151, baseType: !220, size: 32)
!220 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !108)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !217, file: !125, line: 152, baseType: !104, size: 32, offset: 32)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !130, file: !125, line: 182, baseType: !223, size: 32, offset: 32)
!223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !224, size: 32)
!224 = !DISubroutineType(types: !225)
!225 = !{null, !136, !184, !108}
!226 = !DIDerivedType(tag: DW_TAG_member, name: "err", scope: !130, file: !125, line: 187, baseType: !223, size: 32, offset: 64)
!227 = !DIGlobalVariableExpression(var: !228, expr: !DIExpression())
!228 = distinct !DIGlobalVariable(name: "ez_io", scope: !27, file: !119, line: 25, type: !137, isLocal: false, isDefinition: true, align: 32)
!229 = !DIGlobalVariableExpression(var: !230, expr: !DIExpression())
!230 = distinct !DIGlobalVariable(name: "bufs", scope: !27, file: !119, line: 27, type: !231, isLocal: true, isDefinition: true)
!231 = !DICompositeType(tag: DW_TAG_array_type, baseType: !164, size: 1024, elements: !232)
!232 = !{!233, !234}
!233 = !DISubrange(count: 8)
!234 = !DISubrange(count: 16)
!235 = !DIGlobalVariableExpression(var: !236, expr: !DIExpression())
!236 = distinct !DIGlobalVariable(name: "z_rtio_simple_api", scope: !27, file: !121, line: 64, type: !129, isLocal: true, isDefinition: true)
!237 = !DIGlobalVariableExpression(var: !238, expr: !DIExpression())
!238 = distinct !DIGlobalVariable(name: "_sq_ez_io", scope: !27, file: !119, line: 25, type: !239, isLocal: true, isDefinition: true)
!239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_spsc__sq_ez_io", file: !119, line: 25, size: 1440, elements: !240)
!240 = !{!241, !242}
!241 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !239, file: !119, line: 25, baseType: !150, size: 160)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !239, file: !119, line: 25, baseType: !243, size: 1280, offset: 160)
!243 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 1280, elements: !244)
!244 = !{!233}
!245 = !DIGlobalVariableExpression(var: !246, expr: !DIExpression())
!246 = distinct !DIGlobalVariable(name: "_cq_ez_io", scope: !27, file: !119, line: 25, type: !247, isLocal: true, isDefinition: true)
!247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_spsc__cq_ez_io", file: !119, line: 25, size: 672, elements: !248)
!248 = !{!249, !250}
!249 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !247, file: !119, line: 25, baseType: !150, size: 160)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !247, file: !119, line: 25, baseType: !251, size: 512, offset: 160)
!251 = !DICompositeType(tag: DW_TAG_array_type, baseType: !217, size: 512, elements: !244)
!252 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !253)
!253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !254, line: 16, size: 64, elements: !255)
!254 = !DIFile(filename: "zephyr/include/zephyr/logging/log_instance.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!255 = !{!256, !257}
!256 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !253, file: !254, line: 17, baseType: !105, size: 32)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !253, file: !254, line: 18, baseType: !164, size: 8, offset: 32)
!258 = !DIGlobalVariableExpression(var: !259, expr: !DIExpression())
!259 = distinct !DIGlobalVariable(name: "log_const_vnd_sensor", scope: !260, file: !265, line: 14, type: !489, isLocal: false, isDefinition: true)
!260 = distinct !DICompileUnit(language: DW_LANG_C99, file: !261, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !262, globals: !450, splitDebugInlining: false, nameTableKind: None)
!261 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/rtio/sensor_batch_processing/src/vnd_sensor.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sensor_batch_processing")
!262 = !{!104, !108, !263, !109, !443, !113, !114}
!263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !264, size: 32)
!264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vnd_sensor_data", file: !265, line: 21, size: 960, elements: !266)
!265 = !DIFile(filename: "zephyr/samples/subsys/rtio/sensor_batch_processing/src/vnd_sensor.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!266 = !{!267, !357, !407, !430, !449}
!267 = !DIDerivedType(tag: DW_TAG_member, name: "iodev", scope: !264, file: !265, line: 22, baseType: !268, size: 96)
!268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev", file: !125, line: 306, size: 96, elements: !269)
!269 = !{!270, !345, !356}
!270 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !268, file: !125, line: 308, baseType: !271, size: 32)
!271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !272, size: 32)
!272 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !273)
!273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_api", file: !125, line: 263, size: 32, elements: !274)
!274 = !{!275}
!275 = !DIDerivedType(tag: DW_TAG_member, name: "submit", scope: !273, file: !125, line: 271, baseType: !276, size: 32)
!276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !277, size: 32)
!277 = !DISubroutineType(types: !278)
!278 = !{null, !279, !298}
!279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !280, size: 32)
!280 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !281)
!281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_sqe", file: !125, line: 109, size: 160, elements: !282)
!282 = !{!283, !284, !285, !286, !289, !290}
!283 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !281, file: !125, line: 110, baseType: !164, size: 8)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !281, file: !125, line: 112, baseType: !164, size: 8, offset: 8)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !281, file: !125, line: 114, baseType: !168, size: 16, offset: 16)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "iodev", scope: !281, file: !125, line: 116, baseType: !287, size: 32, offset: 32)
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 32)
!288 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !268)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !281, file: !125, line: 125, baseType: !104, size: 32, offset: 64)
!290 = !DIDerivedType(tag: DW_TAG_member, scope: !281, file: !125, line: 127, baseType: !291, size: 64, offset: 96)
!291 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !281, file: !125, line: 127, size: 64, elements: !292)
!292 = !{!293}
!293 = !DIDerivedType(tag: DW_TAG_member, scope: !291, file: !125, line: 128, baseType: !294, size: 64)
!294 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !291, file: !125, line: 128, size: 64, elements: !295)
!295 = !{!296, !297}
!296 = !DIDerivedType(tag: DW_TAG_member, name: "buf_len", scope: !294, file: !125, line: 129, baseType: !113, size: 32)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !294, file: !125, line: 131, baseType: !209, size: 32, offset: 32)
!298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !299, size: 32)
!299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio", file: !125, line: 222, size: 128, elements: !300)
!300 = !{!301, !319, !320, !334}
!301 = !DIDerivedType(tag: DW_TAG_member, name: "executor", scope: !299, file: !125, line: 228, baseType: !302, size: 32)
!302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !303, size: 32)
!303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_executor", file: !125, line: 210, size: 32, elements: !304)
!304 = !{!305}
!305 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !303, file: !125, line: 211, baseType: !306, size: 32)
!306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !307, size: 32)
!307 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !308)
!308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_executor_api", file: !125, line: 168, size: 96, elements: !309)
!309 = !{!310, !314, !318}
!310 = !DIDerivedType(tag: DW_TAG_member, name: "submit", scope: !308, file: !125, line: 177, baseType: !311, size: 32)
!311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !312, size: 32)
!312 = !DISubroutineType(types: !313)
!313 = !{!108, !298}
!314 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !308, file: !125, line: 182, baseType: !315, size: 32, offset: 32)
!315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !316, size: 32)
!316 = !DISubroutineType(types: !317)
!317 = !{null, !298, !279, !108}
!318 = !DIDerivedType(tag: DW_TAG_member, name: "err", scope: !308, file: !125, line: 187, baseType: !315, size: 32, offset: 64)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "xcqcnt", scope: !299, file: !125, line: 251, baseType: !142, size: 32, offset: 32)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "sq", scope: !299, file: !125, line: 254, baseType: !321, size: 32, offset: 64)
!321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !322, size: 32)
!322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_sq", file: !125, line: 142, size: 160, elements: !323)
!323 = !{!324, !332}
!324 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !322, file: !125, line: 143, baseType: !325, size: 160)
!325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_spsc", file: !151, line: 58, size: 160, elements: !326)
!326 = !{!327, !328, !329, !330, !331}
!327 = !DIDerivedType(tag: DW_TAG_member, name: "acquire", scope: !325, file: !151, line: 60, baseType: !24, size: 32)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "consume", scope: !325, file: !151, line: 63, baseType: !24, size: 32, offset: 32)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !325, file: !151, line: 66, baseType: !142, size: 32, offset: 64)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !325, file: !151, line: 69, baseType: !142, size: 32, offset: 96)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !325, file: !151, line: 72, baseType: !158, size: 32, offset: 128)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !322, file: !125, line: 144, baseType: !333, offset: 160)
!333 = !DICompositeType(tag: DW_TAG_array_type, baseType: !281, elements: !197)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "cq", scope: !299, file: !125, line: 257, baseType: !335, size: 32, offset: 96)
!335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !336, size: 32)
!336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_cq", file: !125, line: 161, size: 160, elements: !337)
!337 = !{!338, !339}
!338 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !336, file: !125, line: 162, baseType: !325, size: 160)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !336, file: !125, line: 163, baseType: !340, offset: 160)
!340 = !DICompositeType(tag: DW_TAG_array_type, baseType: !341, elements: !197)
!341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_cqe", file: !125, line: 150, size: 64, elements: !342)
!342 = !{!343, !344}
!343 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !341, file: !125, line: 151, baseType: !220, size: 32)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !341, file: !125, line: 152, baseType: !104, size: 32, offset: 32)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "iodev_sq", scope: !268, file: !125, line: 311, baseType: !346, size: 32, offset: 32)
!346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !347, size: 32)
!347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_sq", file: !125, line: 298, size: 160, elements: !348)
!348 = !{!349, !350}
!349 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !347, file: !125, line: 299, baseType: !325, size: 160)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !347, file: !125, line: 300, baseType: !351, offset: 160)
!351 = !DICompositeType(tag: DW_TAG_array_type, baseType: !352, elements: !197)
!352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_sqe", file: !125, line: 288, size: 64, elements: !353)
!353 = !{!354, !355}
!354 = !DIDerivedType(tag: DW_TAG_member, name: "sqe", scope: !352, file: !125, line: 289, baseType: !279, size: 32)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !352, file: !125, line: 290, baseType: !298, size: 32, offset: 32)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !268, file: !125, line: 314, baseType: !104, size: 32, offset: 64)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !264, file: !265, line: 23, baseType: !358, size: 448, offset: 128)
!358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_timer", file: !359, line: 1318, size: 448, elements: !360)
!359 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!360 = !{!361, !388, !394, !399, !400, !405, !406}
!361 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !358, file: !359, line: 1324, baseType: !362, size: 192)
!362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !363, line: 244, size: 192, elements: !364)
!363 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!364 = !{!365, !381, !387}
!365 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !362, file: !363, line: 245, baseType: !366, size: 64)
!366 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !367, line: 49, baseType: !368)
!367 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !369)
!369 = !{!370, !376}
!370 = !DIDerivedType(tag: DW_TAG_member, scope: !368, file: !367, line: 38, baseType: !371, size: 32)
!371 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !368, file: !367, line: 38, size: 32, elements: !372)
!372 = !{!373, !375}
!373 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !371, file: !367, line: 39, baseType: !374, size: 32)
!374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !368, size: 32)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !371, file: !367, line: 40, baseType: !374, size: 32)
!376 = !DIDerivedType(tag: DW_TAG_member, scope: !368, file: !367, line: 42, baseType: !377, size: 32, offset: 32)
!377 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !368, file: !367, line: 42, size: 32, elements: !378)
!378 = !{!379, !380}
!379 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !377, file: !367, line: 43, baseType: !374, size: 32)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !377, file: !367, line: 44, baseType: !374, size: 32)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !362, file: !363, line: 246, baseType: !382, size: 32, offset: 64)
!382 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !363, line: 242, baseType: !383)
!383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !384, size: 32)
!384 = !DISubroutineType(types: !385)
!385 = !{null, !386}
!386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !362, size: 32)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !362, file: !363, line: 249, baseType: !111, size: 64, offset: 128)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !358, file: !359, line: 1327, baseType: !389, size: 64, offset: 192)
!389 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !363, line: 233, baseType: !390)
!390 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 231, size: 64, elements: !391)
!391 = !{!392}
!392 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !390, file: !363, line: 232, baseType: !393, size: 64)
!393 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !368)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_fn", scope: !358, file: !359, line: 1330, baseType: !395, size: 32, offset: 256)
!395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !396, size: 32)
!396 = !DISubroutineType(types: !397)
!397 = !{null, !398}
!398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !358, size: 32)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "stop_fn", scope: !358, file: !359, line: 1333, baseType: !395, size: 32, offset: 288)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !358, file: !359, line: 1336, baseType: !401, size: 64, offset: 320)
!401 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !110, line: 67, baseType: !402)
!402 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !110, line: 65, size: 64, elements: !403)
!403 = !{!404}
!404 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !402, file: !110, line: 66, baseType: !109, size: 64)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !358, file: !359, line: 1339, baseType: !113, size: 32, offset: 384)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !358, file: !359, line: 1342, baseType: !104, size: 32, offset: 416)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !264, file: !265, line: 24, baseType: !408, size: 32, offset: 576)
!408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !409, size: 32)
!409 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !410)
!410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !412)
!411 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!412 = !{!413, !414, !415, !416, !423, !424}
!413 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !410, file: !411, line: 380, baseType: !105, size: 32)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !410, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !410, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !410, file: !411, line: 386, baseType: !417, size: 32, offset: 96)
!417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !418, size: 32)
!418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !419)
!419 = !{!420, !421}
!420 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !418, file: !411, line: 359, baseType: !164, size: 8)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !418, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!422 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !410, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !410, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !426, size: 32)
!426 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !427)
!427 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !411, line: 43, baseType: !428)
!428 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !429)
!429 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "msgq", scope: !264, file: !265, line: 25, baseType: !431, size: 320, offset: 608)
!431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !359, line: 4204, size: 320, elements: !432)
!432 = !{!433, !434, !438, !441, !442, !444, !445, !446, !447, !448}
!433 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !431, file: !359, line: 4206, baseType: !389, size: 64)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !431, file: !359, line: 4208, baseType: !435, offset: 64)
!435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!436 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!437 = !{}
!438 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !431, file: !359, line: 4210, baseType: !439, size: 32, offset: 64)
!439 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !440, line: 214, baseType: !32)
!440 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!441 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !431, file: !359, line: 4212, baseType: !113, size: 32, offset: 96)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !431, file: !359, line: 4214, baseType: !443, size: 32, offset: 128)
!443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !431, file: !359, line: 4216, baseType: !443, size: 32, offset: 160)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !431, file: !359, line: 4218, baseType: !443, size: 32, offset: 192)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !431, file: !359, line: 4220, baseType: !443, size: 32, offset: 224)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !431, file: !359, line: 4222, baseType: !113, size: 32, offset: 256)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !431, file: !359, line: 4227, baseType: !164, size: 8, offset: 288)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "sample_number", scope: !264, file: !265, line: 26, baseType: !113, size: 32, offset: 928)
!450 = !{!258, !451, !458, !463, !465, !476, !478, !485, !487}
!451 = !DIGlobalVariableExpression(var: !452, expr: !DIExpression())
!452 = distinct !DIGlobalVariable(name: "vnd_sensor_iodev_sq_0", scope: !260, file: !265, line: 152, type: !453, isLocal: false, isDefinition: true)
!453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_spsc_vnd_sensor_iodev_sq_0", file: !265, line: 152, size: 672, elements: !454)
!454 = !{!455, !456}
!455 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !453, file: !265, line: 152, baseType: !325, size: 160)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !453, file: !265, line: 152, baseType: !457, size: 512, offset: 160)
!457 = !DICompositeType(tag: DW_TAG_array_type, baseType: !352, size: 512, elements: !244)
!458 = !DIGlobalVariableExpression(var: !459, expr: !DIExpression())
!459 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_13", scope: !260, file: !265, line: 152, type: !460, isLocal: false, isDefinition: true, align: 16)
!460 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 64, elements: !461)
!461 = !{!462}
!462 = !DISubrange(count: 4)
!463 = !DIGlobalVariableExpression(var: !464, expr: !DIExpression())
!464 = distinct !DIGlobalVariable(name: "__device_dts_ord_13", scope: !260, file: !265, line: 152, type: !409, isLocal: false, isDefinition: true, align: 32)
!465 = !DIGlobalVariableExpression(var: !466, expr: !DIExpression())
!466 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_13", scope: !260, file: !265, line: 152, type: !467, isLocal: true, isDefinition: true, align: 32)
!467 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !468)
!468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !469, line: 51, size: 64, elements: !470)
!469 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!470 = !{!471, !475}
!471 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !468, file: !469, line: 60, baseType: !472, size: 32)
!472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !473, size: 32)
!473 = !DISubroutineType(types: !474)
!474 = !{!108, !408}
!475 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !468, file: !469, line: 65, baseType: !408, size: 32, offset: 32)
!476 = !DIGlobalVariableExpression(var: !477, expr: !DIExpression())
!477 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_13", scope: !260, file: !265, line: 152, type: !418, isLocal: true, isDefinition: true, align: 8)
!478 = !DIGlobalVariableExpression(var: !479, expr: !DIExpression())
!479 = distinct !DIGlobalVariable(name: "vnd_sensor_config_0", scope: !260, file: !265, line: 152, type: !480, isLocal: true, isDefinition: true)
!480 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !481)
!481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vnd_sensor_config", file: !265, line: 16, size: 64, elements: !482)
!482 = !{!483, !484}
!483 = !DIDerivedType(tag: DW_TAG_member, name: "sample_period", scope: !481, file: !265, line: 17, baseType: !113, size: 32)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "sample_size", scope: !481, file: !265, line: 18, baseType: !439, size: 32, offset: 32)
!485 = !DIGlobalVariableExpression(var: !486, expr: !DIExpression())
!486 = distinct !DIGlobalVariable(name: "vnd_sensor_data_0", scope: !260, file: !265, line: 152, type: !264, isLocal: true, isDefinition: true)
!487 = !DIGlobalVariableExpression(var: !488, expr: !DIExpression())
!488 = distinct !DIGlobalVariable(name: "vnd_sensor_iodev_api", scope: !260, file: !265, line: 127, type: !272, isLocal: true, isDefinition: true)
!489 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !490)
!490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !254, line: 16, size: 64, elements: !491)
!491 = !{!492, !493}
!492 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !490, file: !254, line: 17, baseType: !105, size: 32)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !490, file: !254, line: 18, baseType: !164, size: 8, offset: 32)
!494 = !DIGlobalVariableExpression(var: !495, expr: !DIExpression())
!495 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_13", scope: !496, file: !501, line: 114, type: !507, isLocal: false, isDefinition: true, align: 16)
!496 = distinct !DICompileUnit(language: DW_LANG_C99, file: !497, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !498, splitDebugInlining: false, nameTableKind: None)
!497 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sensor_batch_processing/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sensor_batch_processing")
!498 = !{!499, !505, !510, !512, !514, !516, !518, !520, !522, !524, !526, !528, !530, !532, !494}
!499 = !DIGlobalVariableExpression(var: !500, expr: !DIExpression())
!500 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !496, file: !501, line: 20, type: !502, isLocal: false, isDefinition: true, align: 16)
!501 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sensor_batch_processing")
!502 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 240, elements: !503)
!503 = !{!504}
!504 = !DISubrange(count: 15)
!505 = !DIGlobalVariableExpression(var: !506, expr: !DIExpression())
!506 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_39", scope: !496, file: !501, line: 25, type: !507, isLocal: false, isDefinition: true, align: 16)
!507 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 48, elements: !508)
!508 = !{!509}
!509 = !DISubrange(count: 3)
!510 = !DIGlobalVariableExpression(var: !511, expr: !DIExpression())
!511 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_99", scope: !496, file: !501, line: 32, type: !460, isLocal: false, isDefinition: true, align: 16)
!512 = !DIGlobalVariableExpression(var: !513, expr: !DIExpression())
!513 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_98", scope: !496, file: !501, line: 39, type: !460, isLocal: false, isDefinition: true, align: 16)
!514 = !DIGlobalVariableExpression(var: !515, expr: !DIExpression())
!515 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_97", scope: !496, file: !501, line: 46, type: !460, isLocal: false, isDefinition: true, align: 16)
!516 = !DIGlobalVariableExpression(var: !517, expr: !DIExpression())
!517 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_96", scope: !496, file: !501, line: 53, type: !460, isLocal: false, isDefinition: true, align: 16)
!518 = !DIGlobalVariableExpression(var: !519, expr: !DIExpression())
!519 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_22", scope: !496, file: !501, line: 60, type: !460, isLocal: false, isDefinition: true, align: 16)
!520 = !DIGlobalVariableExpression(var: !521, expr: !DIExpression())
!521 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_95", scope: !496, file: !501, line: 67, type: !460, isLocal: false, isDefinition: true, align: 16)
!522 = !DIGlobalVariableExpression(var: !523, expr: !DIExpression())
!523 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_94", scope: !496, file: !501, line: 74, type: !460, isLocal: false, isDefinition: true, align: 16)
!524 = !DIGlobalVariableExpression(var: !525, expr: !DIExpression())
!525 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_93", scope: !496, file: !501, line: 81, type: !460, isLocal: false, isDefinition: true, align: 16)
!526 = !DIGlobalVariableExpression(var: !527, expr: !DIExpression())
!527 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_51", scope: !496, file: !501, line: 88, type: !460, isLocal: false, isDefinition: true, align: 16)
!528 = !DIGlobalVariableExpression(var: !529, expr: !DIExpression())
!529 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_48", scope: !496, file: !501, line: 95, type: !460, isLocal: false, isDefinition: true, align: 16)
!530 = !DIGlobalVariableExpression(var: !531, expr: !DIExpression())
!531 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !496, file: !501, line: 102, type: !460, isLocal: false, isDefinition: true, align: 16)
!532 = !DIGlobalVariableExpression(var: !533, expr: !DIExpression())
!533 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_55", scope: !496, file: !501, line: 109, type: !460, isLocal: false, isDefinition: true, align: 16)
!534 = !DIGlobalVariableExpression(var: !535, expr: !DIExpression())
!535 = distinct !DIGlobalVariable(name: "log_const_cbprintf_package", scope: !536, file: !549, line: 18, type: !550, isLocal: false, isDefinition: true)
!536 = distinct !DICompileUnit(language: DW_LANG_C99, file: !537, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !538, globals: !548, splitDebugInlining: false, nameTableKind: None)
!537 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sensor_batch_processing")
!538 = !{!22, !104, !24, !539, !541, !543, !439, !108, !544, !545, !546, !547, !443, !209, !168, !105}
!539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !540, size: 32)
!540 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !542, size: 32)
!542 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !105, size: 32)
!544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !108, size: 32)
!545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !144, size: 32)
!546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !112, size: 32)
!547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !443, size: 32)
!548 = !{!534}
!549 = !DIFile(filename: "zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!550 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !551)
!551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !254, line: 16, size: 64, elements: !552)
!552 = !{!553, !554}
!553 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !551, file: !254, line: 17, baseType: !105, size: 32)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !551, file: !254, line: 18, baseType: !164, size: 8, offset: 32)
!555 = !DIGlobalVariableExpression(var: !556, expr: !DIExpression())
!556 = distinct !DIGlobalVariable(name: "_char_out", scope: !557, file: !561, line: 54, type: !562, isLocal: false, isDefinition: true)
!557 = distinct !DICompileUnit(language: DW_LANG_C99, file: !558, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !559, globals: !560, splitDebugInlining: false, nameTableKind: None)
!558 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sensor_batch_processing")
!559 = !{!104, !108}
!560 = !{!555}
!561 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !563, size: 32)
!563 = !DISubroutineType(types: !564)
!564 = !{!108, !108}
!565 = !DIGlobalVariableExpression(var: !566, expr: !DIExpression())
!566 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !567, file: !584, line: 56, type: !585, isLocal: true, isDefinition: true, align: 32)
!567 = distinct !DICompileUnit(language: DW_LANG_C99, file: !568, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !569, globals: !583, splitDebugInlining: false, nameTableKind: None)
!568 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sensor_batch_processing")
!569 = !{!570}
!570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !571, size: 32)
!571 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !572, line: 407, baseType: !573)
!572 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f446xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!573 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !572, line: 398, size: 224, elements: !574)
!574 = !{!575, !577, !578, !579, !580, !581, !582}
!575 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !573, file: !572, line: 400, baseType: !576, size: 32)
!576 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !113)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !573, file: !572, line: 401, baseType: !576, size: 32, offset: 32)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !573, file: !572, line: 402, baseType: !576, size: 32, offset: 64)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !573, file: !572, line: 403, baseType: !576, size: 32, offset: 96)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !573, file: !572, line: 404, baseType: !576, size: 32, offset: 128)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !573, file: !572, line: 405, baseType: !576, size: 32, offset: 160)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !573, file: !572, line: 406, baseType: !576, size: 32, offset: 192)
!583 = !{!565}
!584 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!585 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !586)
!586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !469, line: 51, size: 64, elements: !587)
!587 = !{!588, !607}
!588 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !586, file: !469, line: 60, baseType: !589, size: 32)
!589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !590, size: 32)
!590 = !DISubroutineType(types: !591)
!591 = !{!108, !592}
!592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !593, size: 32)
!593 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !594)
!594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !595)
!595 = !{!596, !597, !598, !599, !605, !606}
!596 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !594, file: !411, line: 380, baseType: !105, size: 32)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !594, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !594, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !594, file: !411, line: 386, baseType: !600, size: 32, offset: 96)
!600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !601, size: 32)
!601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !602)
!602 = !{!603, !604}
!603 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !601, file: !411, line: 359, baseType: !164, size: 8)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !601, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !594, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !594, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !586, file: !469, line: 65, baseType: !592, size: 32, offset: 32)
!608 = !DIGlobalVariableExpression(var: !609, expr: !DIExpression())
!609 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !610, file: !613, line: 71, type: !614, isLocal: true, isDefinition: true, align: 32)
!610 = distinct !DICompileUnit(language: DW_LANG_C99, file: !611, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !612, splitDebugInlining: false, nameTableKind: None)
!611 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sensor_batch_processing")
!612 = !{!608}
!613 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!614 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !615)
!615 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !469, line: 51, size: 64, elements: !616)
!616 = !{!617, !636}
!617 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !615, file: !469, line: 60, baseType: !618, size: 32)
!618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !619, size: 32)
!619 = !DISubroutineType(types: !620)
!620 = !{!108, !621}
!621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !622, size: 32)
!622 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !623)
!623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !624)
!624 = !{!625, !626, !627, !628, !634, !635}
!625 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !623, file: !411, line: 380, baseType: !105, size: 32)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !623, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !623, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !623, file: !411, line: 386, baseType: !629, size: 32, offset: 96)
!629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !630, size: 32)
!630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !631)
!631 = !{!632, !633}
!632 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !630, file: !411, line: 359, baseType: !164, size: 8)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !630, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !623, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !623, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !615, file: !469, line: 65, baseType: !621, size: 32, offset: 32)
!637 = !DIGlobalVariableExpression(var: !638, expr: !DIExpression())
!638 = distinct !DIGlobalVariable(name: "log_const_mpu", scope: !639, file: !646, line: 17, type: !782, isLocal: false, isDefinition: true)
!639 = distinct !DICompileUnit(language: DW_LANG_C99, file: !640, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !641, globals: !642, splitDebugInlining: false, nameTableKind: None)
!640 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sensor_batch_processing")
!641 = !{!439, !108, !113, !104}
!642 = !{!637, !643, !778}
!643 = !DIGlobalVariableExpression(var: !644, expr: !DIExpression())
!644 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !645, file: !646, line: 198, type: !764, isLocal: true, isDefinition: true)
!645 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !646, file: !646, line: 175, type: !647, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !639, retainedNodes: !759)
!646 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!647 = !DISubroutineType(types: !648)
!648 = !{null, !649}
!649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !650, size: 32)
!650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !651, line: 245, size: 1024, elements: !652)
!651 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!652 = !{!653, !716, !729, !730, !731, !732, !738, !754}
!653 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !650, file: !651, line: 247, baseType: !654, size: 384)
!654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !651, line: 57, size: 384, elements: !655)
!655 = !{!656, !683, !690, !691, !692, !703, !704, !705}
!656 = !DIDerivedType(tag: DW_TAG_member, scope: !654, file: !651, line: 60, baseType: !657, size: 64)
!657 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !654, file: !651, line: 60, size: 64, elements: !658)
!658 = !{!659, !674}
!659 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !657, file: !651, line: 61, baseType: !660, size: 64)
!660 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !367, line: 49, baseType: !661)
!661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !662)
!662 = !{!663, !669}
!663 = !DIDerivedType(tag: DW_TAG_member, scope: !661, file: !367, line: 38, baseType: !664, size: 32)
!664 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !661, file: !367, line: 38, size: 32, elements: !665)
!665 = !{!666, !668}
!666 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !664, file: !367, line: 39, baseType: !667, size: 32)
!667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !661, size: 32)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !664, file: !367, line: 40, baseType: !667, size: 32)
!669 = !DIDerivedType(tag: DW_TAG_member, scope: !661, file: !367, line: 42, baseType: !670, size: 32, offset: 32)
!670 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !661, file: !367, line: 42, size: 32, elements: !671)
!671 = !{!672, !673}
!672 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !670, file: !367, line: 43, baseType: !667, size: 32)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !670, file: !367, line: 44, baseType: !667, size: 32)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !657, file: !651, line: 62, baseType: !675, size: 64)
!675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !676, line: 49, size: 64, elements: !677)
!676 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!677 = !{!678}
!678 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !675, file: !676, line: 50, baseType: !679, size: 64)
!679 = !DICompositeType(tag: DW_TAG_array_type, baseType: !680, size: 64, elements: !681)
!680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !675, size: 32)
!681 = !{!682}
!682 = !DISubrange(count: 2)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !654, file: !651, line: 68, baseType: !684, size: 32, offset: 64)
!684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !685, size: 32)
!685 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !363, line: 233, baseType: !686)
!686 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 231, size: 64, elements: !687)
!687 = !{!688}
!688 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !686, file: !363, line: 232, baseType: !689, size: 64)
!689 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !661)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !654, file: !651, line: 71, baseType: !164, size: 8, offset: 96)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !654, file: !651, line: 74, baseType: !164, size: 8, offset: 104)
!692 = !DIDerivedType(tag: DW_TAG_member, scope: !654, file: !651, line: 90, baseType: !693, size: 16, offset: 112)
!693 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !654, file: !651, line: 90, size: 16, elements: !694)
!694 = !{!695, !702}
!695 = !DIDerivedType(tag: DW_TAG_member, scope: !693, file: !651, line: 91, baseType: !696, size: 16)
!696 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !693, file: !651, line: 91, size: 16, elements: !697)
!697 = !{!698, !701}
!698 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !696, file: !651, line: 96, baseType: !699, size: 8)
!699 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !700)
!700 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !696, file: !651, line: 97, baseType: !164, size: 8, offset: 8)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !693, file: !651, line: 100, baseType: !168, size: 16)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !654, file: !651, line: 107, baseType: !113, size: 32, offset: 128)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !654, file: !651, line: 127, baseType: !104, size: 32, offset: 160)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !654, file: !651, line: 131, baseType: !706, size: 192, offset: 192)
!706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !363, line: 244, size: 192, elements: !707)
!707 = !{!708, !709, !715}
!708 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !706, file: !363, line: 245, baseType: !660, size: 64)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !706, file: !363, line: 246, baseType: !710, size: 32, offset: 64)
!710 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !363, line: 242, baseType: !711)
!711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !712, size: 32)
!712 = !DISubroutineType(types: !713)
!713 = !{null, !714}
!714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !706, size: 32)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !706, file: !363, line: 249, baseType: !111, size: 64, offset: 128)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !650, file: !651, line: 250, baseType: !717, size: 288, offset: 384)
!717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !718, line: 25, size: 288, elements: !719)
!718 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!719 = !{!720, !721, !722, !723, !724, !725, !726, !727, !728}
!720 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !717, file: !718, line: 26, baseType: !113, size: 32)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !717, file: !718, line: 27, baseType: !113, size: 32, offset: 32)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !717, file: !718, line: 28, baseType: !113, size: 32, offset: 64)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !717, file: !718, line: 29, baseType: !113, size: 32, offset: 96)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !717, file: !718, line: 30, baseType: !113, size: 32, offset: 128)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !717, file: !718, line: 31, baseType: !113, size: 32, offset: 160)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !717, file: !718, line: 32, baseType: !113, size: 32, offset: 192)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !717, file: !718, line: 33, baseType: !113, size: 32, offset: 224)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !717, file: !718, line: 34, baseType: !113, size: 32, offset: 256)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !650, file: !651, line: 253, baseType: !104, size: 32, offset: 672)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !650, file: !651, line: 256, baseType: !685, size: 64, offset: 704)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !650, file: !651, line: 294, baseType: !108, size: 32, offset: 768)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !650, file: !651, line: 300, baseType: !733, size: 96, offset: 800)
!733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !651, line: 149, size: 96, elements: !734)
!734 = !{!735, !736, !737}
!735 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !733, file: !651, line: 153, baseType: !22, size: 32)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !733, file: !651, line: 162, baseType: !439, size: 32, offset: 32)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !733, file: !651, line: 168, baseType: !439, size: 32, offset: 64)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !650, file: !651, line: 325, baseType: !739, size: 32, offset: 896)
!739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !740, size: 32)
!740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !359, line: 5073, size: 160, elements: !741)
!741 = !{!742, !751, !752}
!742 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !740, file: !359, line: 5074, baseType: !743, size: 96)
!743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !744, line: 56, size: 96, elements: !745)
!744 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!745 = !{!746, !749, !750}
!746 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !743, file: !744, line: 57, baseType: !747, size: 32)
!747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !748, size: 32)
!748 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !744, line: 57, flags: DIFlagFwdDecl)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !743, file: !744, line: 58, baseType: !104, size: 32, offset: 32)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !743, file: !744, line: 59, baseType: !439, size: 32, offset: 64)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !740, file: !359, line: 5075, baseType: !685, size: 64, offset: 96)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !740, file: !359, line: 5076, baseType: !753, offset: 160)
!753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !650, file: !651, line: 343, baseType: !755, size: 64, offset: 928)
!755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !718, line: 60, size: 64, elements: !756)
!756 = !{!757, !758}
!757 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !755, file: !718, line: 63, baseType: !113, size: 32)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !755, file: !718, line: 66, baseType: !113, size: 32, offset: 32)
!759 = !{!760, !761, !762, !763}
!760 = !DILocalVariable(name: "thread", arg: 1, scope: !645, file: !646, line: 175, type: !649)
!761 = !DILocalVariable(name: "region_num", scope: !645, file: !646, line: 200, type: !164)
!762 = !DILocalVariable(name: "guard_start", scope: !645, file: !646, line: 265, type: !22)
!763 = !DILocalVariable(name: "guard_size", scope: !645, file: !646, line: 266, type: !439)
!764 = !DICompositeType(tag: DW_TAG_array_type, baseType: !765, size: 96, elements: !776)
!765 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !766, line: 52, size: 96, elements: !767)
!766 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!767 = !{!768, !769, !770}
!768 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !765, file: !766, line: 53, baseType: !22, size: 32)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !765, file: !766, line: 54, baseType: !439, size: 32, offset: 32)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !765, file: !766, line: 55, baseType: !771, size: 32, offset: 64)
!771 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !772, line: 151, baseType: !773)
!772 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!773 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !772, line: 149, size: 32, elements: !774)
!774 = !{!775}
!775 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !773, file: !772, line: 150, baseType: !113, size: 32)
!776 = !{!777}
!777 = !DISubrange(count: 1)
!778 = !DIGlobalVariableExpression(var: !779, expr: !DIExpression())
!779 = distinct !DIGlobalVariable(name: "static_regions", scope: !639, file: !646, line: 62, type: !780, isLocal: true, isDefinition: true)
!780 = !DICompositeType(tag: DW_TAG_array_type, baseType: !781, size: 96, elements: !776)
!781 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !765)
!782 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !783)
!783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !254, line: 16, size: 64, elements: !784)
!784 = !{!785, !786}
!785 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !783, file: !254, line: 17, baseType: !105, size: 32)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !783, file: !254, line: 18, baseType: !164, size: 8, offset: 32)
!787 = !DIGlobalVariableExpression(var: !788, expr: !DIExpression())
!788 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !789, file: !822, line: 39, type: !164, isLocal: true, isDefinition: true)
!789 = distinct !DICompileUnit(language: DW_LANG_C99, file: !790, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !791, globals: !821, splitDebugInlining: false, nameTableKind: None)
!790 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sensor_batch_processing")
!791 = !{!792, !104, !108, !809, !164}
!792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !793, size: 32)
!793 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !794, line: 1226, baseType: !795)
!794 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!795 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !794, line: 1213, size: 352, elements: !796)
!796 = !{!797, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808}
!797 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !795, file: !794, line: 1215, baseType: !798, size: 32)
!798 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !576)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !795, file: !794, line: 1216, baseType: !576, size: 32, offset: 32)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !795, file: !794, line: 1217, baseType: !576, size: 32, offset: 64)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !795, file: !794, line: 1218, baseType: !576, size: 32, offset: 96)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !795, file: !794, line: 1219, baseType: !576, size: 32, offset: 128)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !795, file: !794, line: 1220, baseType: !576, size: 32, offset: 160)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !795, file: !794, line: 1221, baseType: !576, size: 32, offset: 192)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !795, file: !794, line: 1222, baseType: !576, size: 32, offset: 224)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !795, file: !794, line: 1223, baseType: !576, size: 32, offset: 256)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !795, file: !794, line: 1224, baseType: !576, size: 32, offset: 288)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !795, file: !794, line: 1225, baseType: !576, size: 32, offset: 320)
!809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !810, size: 32)
!810 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !811)
!811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !812, line: 27, size: 96, elements: !813)
!812 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!813 = !{!814, !815, !816}
!814 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !811, file: !812, line: 29, baseType: !113, size: 32)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !811, file: !812, line: 31, baseType: !105, size: 32, offset: 32)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !811, file: !812, line: 37, baseType: !817, size: 32, offset: 64)
!817 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !772, line: 146, baseType: !818)
!818 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !772, line: 141, size: 32, elements: !819)
!819 = !{!820}
!820 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !818, file: !772, line: 143, baseType: !113, size: 32)
!821 = !{!787}
!822 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!823 = !DIGlobalVariableExpression(var: !824, expr: !DIExpression())
!824 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !825, file: !832, line: 21, type: !562, isLocal: true, isDefinition: true)
!825 = distinct !DICompileUnit(language: DW_LANG_C99, file: !826, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !827, globals: !831, splitDebugInlining: false, nameTableKind: None)
!826 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sensor_batch_processing")
!827 = !{!828, !108, !104}
!828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !829, size: 32)
!829 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !830, line: 22, baseType: !108)
!830 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!831 = !{!823}
!832 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!833 = !DIGlobalVariableExpression(var: !834, expr: !DIExpression())
!834 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !835, file: !840, line: 13, type: !857, isLocal: true, isDefinition: true)
!835 = distinct !DICompileUnit(language: DW_LANG_C99, file: !836, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !837, splitDebugInlining: false, nameTableKind: None)
!836 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sensor_batch_processing")
!837 = !{!838, !833}
!838 = !DIGlobalVariableExpression(var: !839, expr: !DIExpression())
!839 = distinct !DIGlobalVariable(name: "mpu_config", scope: !835, file: !840, line: 37, type: !841, isLocal: false, isDefinition: true)
!840 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!841 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !842)
!842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !812, line: 41, size: 64, elements: !843)
!843 = !{!844, !845}
!844 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !842, file: !812, line: 43, baseType: !113, size: 32)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !842, file: !812, line: 45, baseType: !846, size: 32, offset: 32)
!846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !847, size: 32)
!847 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !848)
!848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !812, line: 27, size: 96, elements: !849)
!849 = !{!850, !851, !852}
!850 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !848, file: !812, line: 29, baseType: !113, size: 32)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !848, file: !812, line: 31, baseType: !105, size: 32, offset: 32)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !848, file: !812, line: 37, baseType: !853, size: 32, offset: 64)
!853 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !772, line: 146, baseType: !854)
!854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !772, line: 141, size: 32, elements: !855)
!855 = !{!856}
!856 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !854, file: !772, line: 143, baseType: !113, size: 32)
!857 = !DICompositeType(tag: DW_TAG_array_type, baseType: !847, size: 192, elements: !681)
!858 = !DIGlobalVariableExpression(var: !859, expr: !DIExpression())
!859 = distinct !DIGlobalVariable(name: "log_const_rtio_executor_simple", scope: !860, file: !863, line: 12, type: !864, isLocal: false, isDefinition: true)
!860 = distinct !DICompileUnit(language: DW_LANG_C99, file: !861, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !559, globals: !862, splitDebugInlining: false, nameTableKind: None)
!861 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/rtio/rtio_executor_simple.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sensor_batch_processing")
!862 = !{!858}
!863 = !DIFile(filename: "zephyr/subsys/rtio/rtio_executor_simple.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!864 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !865)
!865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !254, line: 16, size: 64, elements: !866)
!866 = !{!867, !868}
!867 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !865, file: !254, line: 17, baseType: !105, size: 32)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !865, file: !254, line: 18, baseType: !164, size: 8, offset: 32)
!869 = !DIGlobalVariableExpression(var: !870, expr: !DIExpression())
!870 = distinct !DIGlobalVariable(name: "log_const_rtio_executor_concurrent", scope: !871, file: !980, line: 13, type: !981, isLocal: false, isDefinition: true)
!871 = distinct !DICompileUnit(language: DW_LANG_C99, file: !872, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !873, globals: !979, splitDebugInlining: false, nameTableKind: None)
!872 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/rtio/rtio_executor_concurrent.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sensor_batch_processing")
!873 = !{!874, !104, !108}
!874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !875, size: 32)
!875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_concurrent_executor", file: !876, line: 61, size: 224, elements: !877)
!876 = !DIFile(filename: "zephyr/include/zephyr/rtio/rtio_executor_concurrent.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!877 = !{!878, !968, !970, !971, !972, !973, !975, !976, !977}
!878 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !875, file: !876, line: 62, baseType: !879, size: 32)
!879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_executor", file: !125, line: 210, size: 32, elements: !880)
!880 = !{!881}
!881 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !879, file: !125, line: 211, baseType: !882, size: 32)
!882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !883, size: 32)
!883 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !884)
!884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_executor_api", file: !125, line: 168, size: 96, elements: !885)
!885 = !{!886, !963, !967}
!886 = !DIDerivedType(tag: DW_TAG_member, name: "submit", scope: !884, file: !125, line: 177, baseType: !887, size: 32)
!887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !888, size: 32)
!888 = !DISubroutineType(types: !889)
!889 = !{!108, !890}
!890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !891, size: 32)
!891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio", file: !125, line: 222, size: 128, elements: !892)
!892 = !{!893, !895, !896, !952}
!893 = !DIDerivedType(tag: DW_TAG_member, name: "executor", scope: !891, file: !125, line: 228, baseType: !894, size: 32)
!894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !879, size: 32)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "xcqcnt", scope: !891, file: !125, line: 251, baseType: !142, size: 32, offset: 32)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "sq", scope: !891, file: !125, line: 254, baseType: !897, size: 32, offset: 64)
!897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !898, size: 32)
!898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_sq", file: !125, line: 142, size: 160, elements: !899)
!899 = !{!900, !908}
!900 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !898, file: !125, line: 143, baseType: !901, size: 160)
!901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_spsc", file: !151, line: 58, size: 160, elements: !902)
!902 = !{!903, !904, !905, !906, !907}
!903 = !DIDerivedType(tag: DW_TAG_member, name: "acquire", scope: !901, file: !151, line: 60, baseType: !24, size: 32)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "consume", scope: !901, file: !151, line: 63, baseType: !24, size: 32, offset: 32)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !901, file: !151, line: 66, baseType: !142, size: 32, offset: 64)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !901, file: !151, line: 69, baseType: !142, size: 32, offset: 96)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !901, file: !151, line: 72, baseType: !158, size: 32, offset: 128)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !898, file: !125, line: 144, baseType: !909, offset: 160)
!909 = !DICompositeType(tag: DW_TAG_array_type, baseType: !910, elements: !197)
!910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_sqe", file: !125, line: 109, size: 160, elements: !911)
!911 = !{!912, !913, !914, !915, !943, !944}
!912 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !910, file: !125, line: 110, baseType: !164, size: 8)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !910, file: !125, line: 112, baseType: !164, size: 8, offset: 8)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !910, file: !125, line: 114, baseType: !168, size: 16, offset: 16)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "iodev", scope: !910, file: !125, line: 116, baseType: !916, size: 32, offset: 32)
!916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !917, size: 32)
!917 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !918)
!918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev", file: !125, line: 306, size: 96, elements: !919)
!919 = !{!920, !931, !942}
!920 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !918, file: !125, line: 308, baseType: !921, size: 32)
!921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !922, size: 32)
!922 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !923)
!923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_api", file: !125, line: 263, size: 32, elements: !924)
!924 = !{!925}
!925 = !DIDerivedType(tag: DW_TAG_member, name: "submit", scope: !923, file: !125, line: 271, baseType: !926, size: 32)
!926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !927, size: 32)
!927 = !DISubroutineType(types: !928)
!928 = !{null, !929, !890}
!929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !930, size: 32)
!930 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !910)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "iodev_sq", scope: !918, file: !125, line: 311, baseType: !932, size: 32, offset: 32)
!932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !933, size: 32)
!933 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_sq", file: !125, line: 298, size: 160, elements: !934)
!934 = !{!935, !936}
!935 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !933, file: !125, line: 299, baseType: !901, size: 160)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !933, file: !125, line: 300, baseType: !937, offset: 160)
!937 = !DICompositeType(tag: DW_TAG_array_type, baseType: !938, elements: !197)
!938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_sqe", file: !125, line: 288, size: 64, elements: !939)
!939 = !{!940, !941}
!940 = !DIDerivedType(tag: DW_TAG_member, name: "sqe", scope: !938, file: !125, line: 289, baseType: !929, size: 32)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !938, file: !125, line: 290, baseType: !890, size: 32, offset: 32)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !918, file: !125, line: 314, baseType: !104, size: 32, offset: 64)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !910, file: !125, line: 125, baseType: !104, size: 32, offset: 64)
!944 = !DIDerivedType(tag: DW_TAG_member, scope: !910, file: !125, line: 127, baseType: !945, size: 64, offset: 96)
!945 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !910, file: !125, line: 127, size: 64, elements: !946)
!946 = !{!947}
!947 = !DIDerivedType(tag: DW_TAG_member, scope: !945, file: !125, line: 128, baseType: !948, size: 64)
!948 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !945, file: !125, line: 128, size: 64, elements: !949)
!949 = !{!950, !951}
!950 = !DIDerivedType(tag: DW_TAG_member, name: "buf_len", scope: !948, file: !125, line: 129, baseType: !113, size: 32)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !948, file: !125, line: 131, baseType: !209, size: 32, offset: 32)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "cq", scope: !891, file: !125, line: 257, baseType: !953, size: 32, offset: 96)
!953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !954, size: 32)
!954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_cq", file: !125, line: 161, size: 160, elements: !955)
!955 = !{!956, !957}
!956 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !954, file: !125, line: 162, baseType: !901, size: 160)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !954, file: !125, line: 163, baseType: !958, offset: 160)
!958 = !DICompositeType(tag: DW_TAG_array_type, baseType: !959, elements: !197)
!959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_cqe", file: !125, line: 150, size: 64, elements: !960)
!960 = !{!961, !962}
!961 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !959, file: !125, line: 151, baseType: !220, size: 32)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !959, file: !125, line: 152, baseType: !104, size: 32, offset: 32)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !884, file: !125, line: 182, baseType: !964, size: 32, offset: 32)
!964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !965, size: 32)
!965 = !DISubroutineType(types: !966)
!966 = !{null, !890, !929, !108}
!967 = !DIDerivedType(tag: DW_TAG_member, name: "err", scope: !884, file: !125, line: 187, baseType: !964, size: 32, offset: 64)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !875, file: !876, line: 65, baseType: !969, offset: 32)
!969 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "task_in", scope: !875, file: !876, line: 68, baseType: !168, size: 16, offset: 32)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "task_out", scope: !875, file: !876, line: 68, baseType: !168, size: 16, offset: 48)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "task_mask", scope: !875, file: !876, line: 68, baseType: !168, size: 16, offset: 64)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "pending_sqe", scope: !875, file: !876, line: 71, baseType: !974, size: 32, offset: 96)
!974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !910, size: 32)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "last_sqe", scope: !875, file: !876, line: 74, baseType: !974, size: 32, offset: 128)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "task_status", scope: !875, file: !876, line: 77, baseType: !209, size: 32, offset: 160)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "task_cur", scope: !875, file: !876, line: 80, baseType: !978, size: 32, offset: 192)
!978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !974, size: 32)
!979 = !{!869}
!980 = !DIFile(filename: "zephyr/subsys/rtio/rtio_executor_concurrent.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!981 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !982)
!982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !254, line: 16, size: 64, elements: !983)
!983 = !{!984, !985}
!984 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !982, file: !254, line: 17, baseType: !105, size: 32)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !982, file: !254, line: 18, baseType: !164, size: 8, offset: 32)
!986 = !DIGlobalVariableExpression(var: !987, expr: !DIExpression())
!987 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !988, file: !1101, line: 72, type: !1181, isLocal: true, isDefinition: true)
!988 = distinct !DICompileUnit(language: DW_LANG_C99, file: !989, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !990, retainedTypes: !1087, globals: !1098, splitDebugInlining: false, nameTableKind: None)
!989 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sensor_batch_processing")
!990 = !{!30, !991}
!991 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !572, line: 65, baseType: !108, size: 32, elements: !992)
!992 = !{!993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1079, !1080, !1081, !1082, !1083, !1084, !1085, !1086}
!993 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!994 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!995 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!996 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!997 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!998 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!999 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!1000 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!1001 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!1002 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!1003 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!1004 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!1005 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!1006 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!1007 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!1008 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!1009 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!1010 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!1011 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!1012 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!1013 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!1014 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!1015 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!1016 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!1017 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!1018 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!1019 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!1020 = !DIEnumerator(name: "CAN1_TX_IRQn", value: 19)
!1021 = !DIEnumerator(name: "CAN1_RX0_IRQn", value: 20)
!1022 = !DIEnumerator(name: "CAN1_RX1_IRQn", value: 21)
!1023 = !DIEnumerator(name: "CAN1_SCE_IRQn", value: 22)
!1024 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!1025 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!1026 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!1027 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!1028 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!1029 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!1030 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!1031 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!1032 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!1033 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!1034 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!1035 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!1036 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!1037 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!1038 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!1039 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!1040 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!1041 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!1042 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!1043 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!1044 = !DIEnumerator(name: "TIM8_BRK_TIM12_IRQn", value: 43)
!1045 = !DIEnumerator(name: "TIM8_UP_TIM13_IRQn", value: 44)
!1046 = !DIEnumerator(name: "TIM8_TRG_COM_TIM14_IRQn", value: 45)
!1047 = !DIEnumerator(name: "TIM8_CC_IRQn", value: 46)
!1048 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!1049 = !DIEnumerator(name: "FMC_IRQn", value: 48)
!1050 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!1051 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!1052 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!1053 = !DIEnumerator(name: "UART4_IRQn", value: 52)
!1054 = !DIEnumerator(name: "UART5_IRQn", value: 53)
!1055 = !DIEnumerator(name: "TIM6_DAC_IRQn", value: 54)
!1056 = !DIEnumerator(name: "TIM7_IRQn", value: 55)
!1057 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!1058 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!1059 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!1060 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!1061 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!1062 = !DIEnumerator(name: "CAN2_TX_IRQn", value: 63)
!1063 = !DIEnumerator(name: "CAN2_RX0_IRQn", value: 64)
!1064 = !DIEnumerator(name: "CAN2_RX1_IRQn", value: 65)
!1065 = !DIEnumerator(name: "CAN2_SCE_IRQn", value: 66)
!1066 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!1067 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!1068 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!1069 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!1070 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!1071 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!1072 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!1073 = !DIEnumerator(name: "OTG_HS_EP1_OUT_IRQn", value: 74)
!1074 = !DIEnumerator(name: "OTG_HS_EP1_IN_IRQn", value: 75)
!1075 = !DIEnumerator(name: "OTG_HS_WKUP_IRQn", value: 76)
!1076 = !DIEnumerator(name: "OTG_HS_IRQn", value: 77)
!1077 = !DIEnumerator(name: "DCMI_IRQn", value: 78)
!1078 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!1079 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!1080 = !DIEnumerator(name: "SAI1_IRQn", value: 87)
!1081 = !DIEnumerator(name: "SAI2_IRQn", value: 91)
!1082 = !DIEnumerator(name: "QUADSPI_IRQn", value: 92)
!1083 = !DIEnumerator(name: "CEC_IRQn", value: 93)
!1084 = !DIEnumerator(name: "SPDIF_RX_IRQn", value: 94)
!1085 = !DIEnumerator(name: "FMPI2C1_EV_IRQn", value: 95)
!1086 = !DIEnumerator(name: "FMPI2C1_ER_IRQn", value: 96)
!1087 = !{!439, !108, !104, !1088}
!1088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1089, size: 32)
!1089 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !572, line: 392, baseType: !1090)
!1090 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !572, line: 384, size: 192, elements: !1091)
!1091 = !{!1092, !1093, !1094, !1095, !1096, !1097}
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !1090, file: !572, line: 386, baseType: !576, size: 32)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !1090, file: !572, line: 387, baseType: !576, size: 32, offset: 32)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !1090, file: !572, line: 388, baseType: !576, size: 32, offset: 64)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !1090, file: !572, line: 389, baseType: !576, size: 32, offset: 96)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !1090, file: !572, line: 390, baseType: !576, size: 32, offset: 128)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !1090, file: !572, line: 391, baseType: !576, size: 32, offset: 160)
!1098 = !{!1099, !1102, !1118, !1129, !1146, !986, !1148, !1161, !1163, !1165, !1167, !1169, !1171, !1173, !1175, !1177, !1179}
!1099 = !DIGlobalVariableExpression(var: !1100, expr: !DIExpression())
!1100 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_39", scope: !988, file: !1101, line: 424, type: !460, isLocal: false, isDefinition: true, align: 16)
!1101 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1102 = !DIGlobalVariableExpression(var: !1103, expr: !DIExpression())
!1103 = distinct !DIGlobalVariable(name: "__device_dts_ord_39", scope: !988, file: !1101, line: 424, type: !1104, isLocal: false, isDefinition: true, align: 32)
!1104 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1105)
!1105 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !1106)
!1106 = !{!1107, !1108, !1109, !1110, !1116, !1117}
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1105, file: !411, line: 380, baseType: !105, size: 32)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1105, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1105, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1105, file: !411, line: 386, baseType: !1111, size: 32, offset: 96)
!1111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1112, size: 32)
!1112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !1113)
!1113 = !{!1114, !1115}
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1112, file: !411, line: 359, baseType: !164, size: 8)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1112, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1105, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1105, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!1118 = !DIGlobalVariableExpression(var: !1119, expr: !DIExpression())
!1119 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_39", scope: !988, file: !1101, line: 424, type: !1120, isLocal: true, isDefinition: true, align: 32)
!1120 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1121)
!1121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !469, line: 51, size: 64, elements: !1122)
!1122 = !{!1123, !1128}
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1121, file: !469, line: 60, baseType: !1124, size: 32)
!1124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1125, size: 32)
!1125 = !DISubroutineType(types: !1126)
!1126 = !{!108, !1127}
!1127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1104, size: 32)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1121, file: !469, line: 65, baseType: !1127, size: 32, offset: 32)
!1129 = !DIGlobalVariableExpression(var: !1130, expr: !DIExpression())
!1130 = distinct !DIGlobalVariable(name: "exti_data", scope: !988, file: !1101, line: 423, type: !1131, isLocal: true, isDefinition: true)
!1131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !1101, line: 107, size: 1472, elements: !1132)
!1132 = !{!1133}
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1131, file: !1101, line: 109, baseType: !1134, size: 1472)
!1134 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1135, size: 1472, elements: !1144)
!1135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !1101, line: 101, size: 64, elements: !1136)
!1136 = !{!1137, !1143}
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1135, file: !1101, line: 102, baseType: !1138, size: 32)
!1138 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !1139, line: 63, baseType: !1140)
!1139 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1141, size: 32)
!1141 = !DISubroutineType(types: !1142)
!1142 = !{null, !108, !104}
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1135, file: !1101, line: 103, baseType: !104, size: 32, offset: 32)
!1144 = !{!1145}
!1145 = !DISubrange(count: 23)
!1146 = !DIGlobalVariableExpression(var: !1147, expr: !DIExpression())
!1147 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_39", scope: !988, file: !1101, line: 424, type: !1112, isLocal: true, isDefinition: true, align: 8)
!1148 = !DIGlobalVariableExpression(var: !1149, expr: !DIExpression())
!1149 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !1150, file: !1101, line: 493, type: !1155, isLocal: true, isDefinition: true, align: 32)
!1150 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !1101, file: !1101, line: 460, type: !1151, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !988, retainedNodes: !1153)
!1151 = !DISubroutineType(types: !1152)
!1152 = !{null, !1127}
!1153 = !{!1154}
!1154 = !DILocalVariable(name: "dev", arg: 1, scope: !1150, file: !1101, line: 460, type: !1127)
!1155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !1156)
!1156 = !{!1157, !1158, !1159, !1160}
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !1155, file: !10, line: 55, baseType: !220, size: 32)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1155, file: !10, line: 57, baseType: !220, size: 32, offset: 32)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1155, file: !10, line: 59, baseType: !104, size: 32, offset: 64)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !1155, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!1161 = !DIGlobalVariableExpression(var: !1162, expr: !DIExpression())
!1162 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !1150, file: !1101, line: 497, type: !1155, isLocal: true, isDefinition: true, align: 32)
!1163 = !DIGlobalVariableExpression(var: !1164, expr: !DIExpression())
!1164 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !1150, file: !1101, line: 507, type: !1155, isLocal: true, isDefinition: true, align: 32)
!1165 = !DIGlobalVariableExpression(var: !1166, expr: !DIExpression())
!1166 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !1150, file: !1101, line: 512, type: !1155, isLocal: true, isDefinition: true, align: 32)
!1167 = !DIGlobalVariableExpression(var: !1168, expr: !DIExpression())
!1168 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !1150, file: !1101, line: 516, type: !1155, isLocal: true, isDefinition: true, align: 32)
!1169 = !DIGlobalVariableExpression(var: !1170, expr: !DIExpression())
!1170 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !1150, file: !1101, line: 523, type: !1155, isLocal: true, isDefinition: true, align: 32)
!1171 = !DIGlobalVariableExpression(var: !1172, expr: !DIExpression())
!1172 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !1150, file: !1101, line: 527, type: !1155, isLocal: true, isDefinition: true, align: 32)
!1173 = !DIGlobalVariableExpression(var: !1174, expr: !DIExpression())
!1174 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !1150, file: !1101, line: 581, type: !1155, isLocal: true, isDefinition: true, align: 32)
!1175 = !DIGlobalVariableExpression(var: !1176, expr: !DIExpression())
!1176 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !1150, file: !1101, line: 586, type: !1155, isLocal: true, isDefinition: true, align: 32)
!1177 = !DIGlobalVariableExpression(var: !1178, expr: !DIExpression())
!1178 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !1150, file: !1101, line: 591, type: !1155, isLocal: true, isDefinition: true, align: 32)
!1179 = !DIGlobalVariableExpression(var: !1180, expr: !DIExpression())
!1180 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !1150, file: !1101, line: 595, type: !1155, isLocal: true, isDefinition: true, align: 32)
!1181 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1182, size: 736, elements: !1144)
!1182 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1183)
!1183 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !572, line: 163, baseType: !991)
!1184 = !DIGlobalVariableExpression(var: !1185, expr: !DIExpression())
!1185 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !1186, file: !1251, line: 398, type: !1284, isLocal: true, isDefinition: true)
!1186 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1187, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1188, retainedTypes: !1201, globals: !1248, splitDebugInlining: false, nameTableKind: None)
!1187 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sensor_batch_processing")
!1188 = !{!1189, !30, !1194}
!1189 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1190, line: 197, baseType: !32, size: 32, elements: !1191)
!1190 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1191 = !{!1192, !1193}
!1192 = !DIEnumerator(name: "SUCCESS", value: 0)
!1193 = !DIEnumerator(name: "ERROR", value: 1)
!1194 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !1195, line: 44, baseType: !32, size: 32, elements: !1196)
!1195 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1196 = !{!1197, !1198, !1199, !1200}
!1197 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!1198 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!1199 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!1200 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!1201 = !{!104, !108, !113, !1202, !1241, !1247}
!1202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1203, size: 32)
!1203 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !572, line: 586, baseType: !1204)
!1204 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !572, line: 550, size: 1216, elements: !1205)
!1205 = !{!1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240}
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1204, file: !572, line: 552, baseType: !576, size: 32)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1204, file: !572, line: 553, baseType: !576, size: 32, offset: 32)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1204, file: !572, line: 554, baseType: !576, size: 32, offset: 64)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1204, file: !572, line: 555, baseType: !576, size: 32, offset: 96)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1204, file: !572, line: 556, baseType: !576, size: 32, offset: 128)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1204, file: !572, line: 557, baseType: !576, size: 32, offset: 160)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !1204, file: !572, line: 558, baseType: !576, size: 32, offset: 192)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1204, file: !572, line: 559, baseType: !113, size: 32, offset: 224)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1204, file: !572, line: 560, baseType: !576, size: 32, offset: 256)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1204, file: !572, line: 561, baseType: !576, size: 32, offset: 288)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1204, file: !572, line: 562, baseType: !1217, size: 64, offset: 320)
!1217 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 64, elements: !681)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1204, file: !572, line: 563, baseType: !576, size: 32, offset: 384)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1204, file: !572, line: 564, baseType: !576, size: 32, offset: 416)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !1204, file: !572, line: 565, baseType: !576, size: 32, offset: 448)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1204, file: !572, line: 566, baseType: !113, size: 32, offset: 480)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1204, file: !572, line: 567, baseType: !576, size: 32, offset: 512)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1204, file: !572, line: 568, baseType: !576, size: 32, offset: 544)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1204, file: !572, line: 569, baseType: !1217, size: 64, offset: 576)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1204, file: !572, line: 570, baseType: !576, size: 32, offset: 640)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1204, file: !572, line: 571, baseType: !576, size: 32, offset: 672)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !1204, file: !572, line: 572, baseType: !576, size: 32, offset: 704)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1204, file: !572, line: 573, baseType: !113, size: 32, offset: 736)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1204, file: !572, line: 574, baseType: !576, size: 32, offset: 768)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1204, file: !572, line: 575, baseType: !576, size: 32, offset: 800)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1204, file: !572, line: 576, baseType: !1217, size: 64, offset: 832)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1204, file: !572, line: 577, baseType: !576, size: 32, offset: 896)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1204, file: !572, line: 578, baseType: !576, size: 32, offset: 928)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1204, file: !572, line: 579, baseType: !1217, size: 64, offset: 960)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1204, file: !572, line: 580, baseType: !576, size: 32, offset: 1024)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1204, file: !572, line: 581, baseType: !576, size: 32, offset: 1056)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !1204, file: !572, line: 582, baseType: !576, size: 32, offset: 1088)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !1204, file: !572, line: 583, baseType: !576, size: 32, offset: 1120)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !1204, file: !572, line: 584, baseType: !576, size: 32, offset: 1152)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !1204, file: !572, line: 585, baseType: !576, size: 32, offset: 1184)
!1241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1242, size: 32)
!1242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1243, line: 343, size: 64, elements: !1244)
!1243 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1244 = !{!1245, !1246}
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1242, file: !1243, line: 344, baseType: !113, size: 32)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1242, file: !1243, line: 345, baseType: !113, size: 32, offset: 32)
!1247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !113, size: 32)
!1248 = !{!1249, !1255, !1271, !1282, !1184}
!1249 = !DIGlobalVariableExpression(var: !1250, expr: !DIExpression())
!1250 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !1186, file: !1251, line: 752, type: !1252, isLocal: false, isDefinition: true, align: 16)
!1251 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1252 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 800, elements: !1253)
!1253 = !{!1254}
!1254 = !DISubrange(count: 50)
!1255 = !DIGlobalVariableExpression(var: !1256, expr: !DIExpression())
!1256 = distinct !DIGlobalVariable(name: "__device_dts_ord_8", scope: !1186, file: !1251, line: 752, type: !1257, isLocal: false, isDefinition: true, align: 32)
!1257 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1258)
!1258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !1259)
!1259 = !{!1260, !1261, !1262, !1263, !1269, !1270}
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1258, file: !411, line: 380, baseType: !105, size: 32)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1258, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1258, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1258, file: !411, line: 386, baseType: !1264, size: 32, offset: 96)
!1264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1265, size: 32)
!1265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !1266)
!1266 = !{!1267, !1268}
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1265, file: !411, line: 359, baseType: !164, size: 8)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1265, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1258, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1258, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!1271 = !DIGlobalVariableExpression(var: !1272, expr: !DIExpression())
!1272 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_8", scope: !1186, file: !1251, line: 752, type: !1273, isLocal: true, isDefinition: true, align: 32)
!1273 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1274)
!1274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !469, line: 51, size: 64, elements: !1275)
!1275 = !{!1276, !1281}
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1274, file: !469, line: 60, baseType: !1277, size: 32)
!1277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1278, size: 32)
!1278 = !DISubroutineType(types: !1279)
!1279 = !{!108, !1280}
!1280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1257, size: 32)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1274, file: !469, line: 65, baseType: !1280, size: 32, offset: 32)
!1282 = !DIGlobalVariableExpression(var: !1283, expr: !DIExpression())
!1283 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_8", scope: !1186, file: !1251, line: 752, type: !1265, isLocal: true, isDefinition: true, align: 8)
!1284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !1195, line: 100, size: 224, elements: !1285)
!1285 = !{!1286, !1292, !1293, !1302, !1307, !1312, !1318}
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1284, file: !1195, line: 101, baseType: !1287, size: 32)
!1287 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !1195, line: 76, baseType: !1288)
!1288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1289, size: 32)
!1289 = !DISubroutineType(types: !1290)
!1290 = !{!108, !1280, !1291}
!1291 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !1195, line: 56, baseType: !104)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1284, file: !1195, line: 102, baseType: !1287, size: 32, offset: 32)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1284, file: !1195, line: 103, baseType: !1294, size: 32, offset: 64)
!1294 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !1195, line: 83, baseType: !1295)
!1295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1296, size: 32)
!1296 = !DISubroutineType(types: !1297)
!1297 = !{!108, !1280, !1291, !1298, !104}
!1298 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !1195, line: 72, baseType: !1299)
!1299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1300, size: 32)
!1300 = !DISubroutineType(types: !1301)
!1301 = !{null, !1280, !1291, !104}
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1284, file: !1195, line: 104, baseType: !1303, size: 32, offset: 96)
!1303 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !1195, line: 79, baseType: !1304)
!1304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1305, size: 32)
!1305 = !DISubroutineType(types: !1306)
!1306 = !{!108, !1280, !1291, !1247}
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1284, file: !1195, line: 105, baseType: !1308, size: 32, offset: 128)
!1308 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !1195, line: 88, baseType: !1309)
!1309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1310, size: 32)
!1310 = !DISubroutineType(types: !1311)
!1311 = !{!1194, !1280, !1291}
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1284, file: !1195, line: 106, baseType: !1313, size: 32, offset: 160)
!1313 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !1195, line: 92, baseType: !1314)
!1314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1315, size: 32)
!1315 = !DISubroutineType(types: !1316)
!1316 = !{!108, !1280, !1291, !1317}
!1317 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !1195, line: 64, baseType: !104)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1284, file: !1195, line: 107, baseType: !1319, size: 32, offset: 192)
!1319 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !1195, line: 96, baseType: !1320)
!1320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1321, size: 32)
!1321 = !DISubroutineType(types: !1322)
!1322 = !{!108, !1280, !1291, !104}
!1323 = !DIGlobalVariableExpression(var: !1324, expr: !DIExpression())
!1324 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !1325, file: !1382, line: 603, type: !1384, isLocal: true, isDefinition: true, align: 32)
!1325 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1326, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1327, globals: !1379, splitDebugInlining: false, nameTableKind: None)
!1326 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sensor_batch_processing")
!1327 = !{!104, !108, !1328}
!1328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1329, size: 32)
!1329 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1330)
!1330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1331, line: 336, size: 160, elements: !1332)
!1331 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1332 = !{!1333, !1353, !1357, !1361, !1374}
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1330, file: !1331, line: 365, baseType: !1334, size: 32)
!1334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1335, size: 32)
!1335 = !DISubroutineType(types: !1336)
!1336 = !{!108, !1337, !1352}
!1337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1338, size: 32)
!1338 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1339)
!1339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !1340)
!1340 = !{!1341, !1342, !1343, !1344, !1350, !1351}
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1339, file: !411, line: 380, baseType: !105, size: 32)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1339, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1339, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1339, file: !411, line: 386, baseType: !1345, size: 32, offset: 96)
!1345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1346, size: 32)
!1346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !1347)
!1347 = !{!1348, !1349}
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1346, file: !411, line: 359, baseType: !164, size: 8)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1346, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1339, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1339, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!1352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !165, size: 32)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1330, file: !1331, line: 366, baseType: !1354, size: 32, offset: 32)
!1354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1355, size: 32)
!1355 = !DISubroutineType(types: !1356)
!1356 = !{null, !1337, !165}
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1330, file: !1331, line: 374, baseType: !1358, size: 32, offset: 64)
!1358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1359, size: 32)
!1359 = !DISubroutineType(types: !1360)
!1360 = !{!108, !1337}
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1330, file: !1331, line: 377, baseType: !1362, size: 32, offset: 96)
!1362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1363, size: 32)
!1363 = !DISubroutineType(types: !1364)
!1364 = !{!108, !1337, !1365}
!1365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1366, size: 32)
!1366 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1367)
!1367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1331, line: 122, size: 64, elements: !1368)
!1368 = !{!1369, !1370, !1371, !1372, !1373}
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1367, file: !1331, line: 123, baseType: !113, size: 32)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1367, file: !1331, line: 124, baseType: !164, size: 8, offset: 32)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1367, file: !1331, line: 125, baseType: !164, size: 8, offset: 40)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1367, file: !1331, line: 126, baseType: !164, size: 8, offset: 48)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1367, file: !1331, line: 127, baseType: !164, size: 8, offset: 56)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1330, file: !1331, line: 379, baseType: !1375, size: 32, offset: 128)
!1375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1376, size: 32)
!1376 = !DISubroutineType(types: !1377)
!1377 = !{!108, !1337, !1378}
!1378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1367, size: 32)
!1379 = !{!1323, !1380}
!1380 = !DIGlobalVariableExpression(var: !1381, expr: !DIExpression())
!1381 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !1325, file: !1382, line: 38, type: !1383, isLocal: true, isDefinition: true)
!1382 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1383 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1337)
!1384 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1385)
!1385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !469, line: 51, size: 64, elements: !1386)
!1386 = !{!1387, !1388}
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1385, file: !469, line: 60, baseType: !1358, size: 32)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1385, file: !469, line: 65, baseType: !1337, size: 32, offset: 32)
!1389 = !DIGlobalVariableExpression(var: !1390, expr: !DIExpression())
!1390 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1391, file: !1562, line: 762, type: !1671, isLocal: true, isDefinition: true)
!1391 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1392, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1393, retainedTypes: !1411, globals: !1559, splitDebugInlining: false, nameTableKind: None)
!1392 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sensor_batch_processing")
!1393 = !{!30, !1394, !1400, !1405, !1194}
!1394 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1395, line: 506, baseType: !32, size: 32, elements: !1396)
!1395 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1396 = !{!1397, !1398, !1399}
!1397 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1398 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1399 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1400 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1395, line: 512, baseType: !32, size: 32, elements: !1401)
!1401 = !{!1402, !1403, !1404}
!1402 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1403 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1404 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1405 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !1139, line: 43, baseType: !32, size: 32, elements: !1406)
!1406 = !{!1407, !1408, !1409, !1410}
!1407 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1408 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1409 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1410 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1411 = !{!104, !108, !1412, !1482, !1487, !1447, !1400, !1394, !1492, !1493, !113, !1507, !1462, !443, !1519, !1520}
!1412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1413, size: 32)
!1413 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1414)
!1414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1395, line: 523, size: 288, elements: !1415)
!1415 = !{!1416, !1437, !1443, !1448, !1452, !1453, !1454, !1458, !1478}
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1414, file: !1395, line: 524, baseType: !1417, size: 32)
!1417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1418, size: 32)
!1418 = !DISubroutineType(types: !1419)
!1419 = !{!108, !1420, !1435, !1436}
!1420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1421, size: 32)
!1421 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1422)
!1422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !1423)
!1423 = !{!1424, !1425, !1426, !1427, !1433, !1434}
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1422, file: !411, line: 380, baseType: !105, size: 32)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1422, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1422, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1422, file: !411, line: 386, baseType: !1428, size: 32, offset: 96)
!1428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1429, size: 32)
!1429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !1430)
!1430 = !{!1431, !1432}
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1429, file: !411, line: 359, baseType: !164, size: 8)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1429, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1422, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1422, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!1435 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1395, line: 237, baseType: !164)
!1436 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1395, line: 257, baseType: !113)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1414, file: !1395, line: 530, baseType: !1438, size: 32, offset: 32)
!1438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1439, size: 32)
!1439 = !DISubroutineType(types: !1440)
!1440 = !{!108, !1420, !1441}
!1441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1442, size: 32)
!1442 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1395, line: 229, baseType: !113)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1414, file: !1395, line: 532, baseType: !1444, size: 32, offset: 64)
!1444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1445, size: 32)
!1445 = !DISubroutineType(types: !1446)
!1446 = !{!108, !1420, !1447, !1442}
!1447 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1395, line: 216, baseType: !113)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1414, file: !1395, line: 535, baseType: !1449, size: 32, offset: 96)
!1449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1450, size: 32)
!1450 = !DISubroutineType(types: !1451)
!1451 = !{!108, !1420, !1447}
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1414, file: !1395, line: 537, baseType: !1449, size: 32, offset: 128)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1414, file: !1395, line: 539, baseType: !1449, size: 32, offset: 160)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1414, file: !1395, line: 541, baseType: !1455, size: 32, offset: 192)
!1455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1456, size: 32)
!1456 = !DISubroutineType(types: !1457)
!1457 = !{!108, !1420, !1435, !1394, !1400}
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1414, file: !1395, line: 544, baseType: !1459, size: 32, offset: 224)
!1459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1460, size: 32)
!1460 = !DISubroutineType(types: !1461)
!1461 = !{!108, !1420, !1462, !422}
!1462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1463, size: 32)
!1463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1395, line: 478, size: 96, elements: !1464)
!1464 = !{!1465, !1472, !1477}
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1463, file: !1395, line: 482, baseType: !1466, size: 32)
!1466 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1467, line: 33, baseType: !1468)
!1467 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1467, line: 29, size: 32, elements: !1469)
!1469 = !{!1470}
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1468, file: !1467, line: 30, baseType: !1471, size: 32)
!1471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1468, size: 32)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1463, file: !1395, line: 485, baseType: !1473, size: 32, offset: 32)
!1473 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1395, line: 464, baseType: !1474)
!1474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1475, size: 32)
!1475 = !DISubroutineType(types: !1476)
!1476 = !{null, !1420, !1462, !1447}
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1463, file: !1395, line: 493, baseType: !1447, size: 32, offset: 64)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1414, file: !1395, line: 547, baseType: !1479, size: 32, offset: 256)
!1479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1480, size: 32)
!1480 = !DISubroutineType(types: !1481)
!1481 = !{!113, !1420}
!1482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1483, size: 32)
!1483 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1484)
!1484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1395, line: 428, size: 32, elements: !1485)
!1485 = !{!1486}
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1484, file: !1395, line: 434, baseType: !1447, size: 32)
!1487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1488, size: 32)
!1488 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1489)
!1489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1395, line: 441, size: 32, elements: !1490)
!1490 = !{!1491}
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1489, file: !1395, line: 447, baseType: !1447, size: 32)
!1492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1489, size: 32)
!1493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1494, size: 32)
!1494 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !572, line: 469, baseType: !1495)
!1495 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !572, line: 458, size: 320, elements: !1496)
!1496 = !{!1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505}
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1495, file: !572, line: 460, baseType: !576, size: 32)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1495, file: !572, line: 461, baseType: !576, size: 32, offset: 32)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1495, file: !572, line: 462, baseType: !576, size: 32, offset: 64)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1495, file: !572, line: 463, baseType: !576, size: 32, offset: 96)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1495, file: !572, line: 464, baseType: !576, size: 32, offset: 128)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1495, file: !572, line: 465, baseType: !576, size: 32, offset: 160)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1495, file: !572, line: 466, baseType: !576, size: 32, offset: 192)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1495, file: !572, line: 467, baseType: !576, size: 32, offset: 224)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1495, file: !572, line: 468, baseType: !1506, size: 64, offset: 256)
!1506 = !DICompositeType(tag: DW_TAG_array_type, baseType: !576, size: 64, elements: !681)
!1507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1508, size: 32)
!1508 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !572, line: 484, baseType: !1509)
!1509 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !572, line: 475, size: 384, elements: !1510)
!1510 = !{!1511, !1512, !1513, !1515, !1516, !1517, !1518}
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1509, file: !572, line: 477, baseType: !576, size: 32)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1509, file: !572, line: 478, baseType: !576, size: 32, offset: 32)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1509, file: !572, line: 479, baseType: !1514, size: 128, offset: 64)
!1514 = !DICompositeType(tag: DW_TAG_array_type, baseType: !576, size: 128, elements: !461)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1509, file: !572, line: 480, baseType: !1217, size: 64, offset: 192)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1509, file: !572, line: 481, baseType: !576, size: 32, offset: 256)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1509, file: !572, line: 482, baseType: !1217, size: 64, offset: 288)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1509, file: !572, line: 483, baseType: !576, size: 32, offset: 352)
!1519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1291, size: 32)
!1520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1521, size: 32)
!1521 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1522)
!1522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !1195, line: 100, size: 224, elements: !1523)
!1523 = !{!1524, !1529, !1530, !1539, !1544, !1549, !1554}
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1522, file: !1195, line: 101, baseType: !1525, size: 32)
!1525 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !1195, line: 76, baseType: !1526)
!1526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1527, size: 32)
!1527 = !DISubroutineType(types: !1528)
!1528 = !{!108, !1420, !1291}
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1522, file: !1195, line: 102, baseType: !1525, size: 32, offset: 32)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1522, file: !1195, line: 103, baseType: !1531, size: 32, offset: 64)
!1531 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !1195, line: 83, baseType: !1532)
!1532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1533, size: 32)
!1533 = !DISubroutineType(types: !1534)
!1534 = !{!108, !1420, !1291, !1535, !104}
!1535 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !1195, line: 72, baseType: !1536)
!1536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1537, size: 32)
!1537 = !DISubroutineType(types: !1538)
!1538 = !{null, !1420, !1291, !104}
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1522, file: !1195, line: 104, baseType: !1540, size: 32, offset: 96)
!1540 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !1195, line: 79, baseType: !1541)
!1541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1542, size: 32)
!1542 = !DISubroutineType(types: !1543)
!1543 = !{!108, !1420, !1291, !1247}
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1522, file: !1195, line: 105, baseType: !1545, size: 32, offset: 128)
!1545 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !1195, line: 88, baseType: !1546)
!1546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1547, size: 32)
!1547 = !DISubroutineType(types: !1548)
!1548 = !{!1194, !1420, !1291}
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1522, file: !1195, line: 106, baseType: !1550, size: 32, offset: 160)
!1550 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !1195, line: 92, baseType: !1551)
!1551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1552, size: 32)
!1552 = !DISubroutineType(types: !1553)
!1553 = !{!108, !1420, !1291, !1317}
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1522, file: !1195, line: 107, baseType: !1555, size: 32, offset: 192)
!1555 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !1195, line: 96, baseType: !1556)
!1556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1557, size: 32)
!1557 = !DISubroutineType(types: !1558)
!1558 = !{!108, !1420, !1291, !104}
!1559 = !{!1560, !1566, !1568, !1578, !1580, !1582, !1584, !1586, !1588, !1590, !1595, !1597, !1599, !1601, !1603, !1605, !1607, !1609, !1611, !1613, !1615, !1617, !1619, !1621, !1623, !1637, !1639, !1641, !1643, !1645, !1647, !1649, !1651, !1653, !1655, !1657, !1659, !1661, !1663, !1665, !1389, !1667, !1669, !1682, !1684, !1686, !1688, !1690, !1692}
!1560 = !DIGlobalVariableExpression(var: !1561, expr: !DIExpression())
!1561 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_93", scope: !1391, file: !1562, line: 762, type: !1563, isLocal: false, isDefinition: true, align: 16)
!1562 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1563 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 80, elements: !1564)
!1564 = !{!1565}
!1565 = !DISubrange(count: 5)
!1566 = !DIGlobalVariableExpression(var: !1567, expr: !DIExpression())
!1567 = distinct !DIGlobalVariable(name: "__device_dts_ord_93", scope: !1391, file: !1562, line: 762, type: !1421, isLocal: false, isDefinition: true, align: 32)
!1568 = !DIGlobalVariableExpression(var: !1569, expr: !DIExpression())
!1569 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_93", scope: !1391, file: !1562, line: 762, type: !1570, isLocal: true, isDefinition: true, align: 32)
!1570 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1571)
!1571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !469, line: 51, size: 64, elements: !1572)
!1572 = !{!1573, !1577}
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1571, file: !469, line: 60, baseType: !1574, size: 32)
!1574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1575, size: 32)
!1575 = !DISubroutineType(types: !1576)
!1576 = !{!108, !1420}
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1571, file: !469, line: 65, baseType: !1420, size: 32, offset: 32)
!1578 = !DIGlobalVariableExpression(var: !1579, expr: !DIExpression())
!1579 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_94", scope: !1391, file: !1562, line: 766, type: !1563, isLocal: false, isDefinition: true, align: 16)
!1580 = !DIGlobalVariableExpression(var: !1581, expr: !DIExpression())
!1581 = distinct !DIGlobalVariable(name: "__device_dts_ord_94", scope: !1391, file: !1562, line: 766, type: !1421, isLocal: false, isDefinition: true, align: 32)
!1582 = !DIGlobalVariableExpression(var: !1583, expr: !DIExpression())
!1583 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_94", scope: !1391, file: !1562, line: 766, type: !1570, isLocal: true, isDefinition: true, align: 32)
!1584 = !DIGlobalVariableExpression(var: !1585, expr: !DIExpression())
!1585 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_95", scope: !1391, file: !1562, line: 770, type: !1563, isLocal: false, isDefinition: true, align: 16)
!1586 = !DIGlobalVariableExpression(var: !1587, expr: !DIExpression())
!1587 = distinct !DIGlobalVariable(name: "__device_dts_ord_95", scope: !1391, file: !1562, line: 770, type: !1421, isLocal: false, isDefinition: true, align: 32)
!1588 = !DIGlobalVariableExpression(var: !1589, expr: !DIExpression())
!1589 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_95", scope: !1391, file: !1562, line: 770, type: !1570, isLocal: true, isDefinition: true, align: 32)
!1590 = !DIGlobalVariableExpression(var: !1591, expr: !DIExpression())
!1591 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_22", scope: !1391, file: !1562, line: 774, type: !1592, isLocal: false, isDefinition: true, align: 16)
!1592 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 144, elements: !1593)
!1593 = !{!1594}
!1594 = !DISubrange(count: 9)
!1595 = !DIGlobalVariableExpression(var: !1596, expr: !DIExpression())
!1596 = distinct !DIGlobalVariable(name: "__device_dts_ord_22", scope: !1391, file: !1562, line: 774, type: !1421, isLocal: false, isDefinition: true, align: 32)
!1597 = !DIGlobalVariableExpression(var: !1598, expr: !DIExpression())
!1598 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_22", scope: !1391, file: !1562, line: 774, type: !1570, isLocal: true, isDefinition: true, align: 32)
!1599 = !DIGlobalVariableExpression(var: !1600, expr: !DIExpression())
!1600 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_96", scope: !1391, file: !1562, line: 778, type: !1563, isLocal: false, isDefinition: true, align: 16)
!1601 = !DIGlobalVariableExpression(var: !1602, expr: !DIExpression())
!1602 = distinct !DIGlobalVariable(name: "__device_dts_ord_96", scope: !1391, file: !1562, line: 778, type: !1421, isLocal: false, isDefinition: true, align: 32)
!1603 = !DIGlobalVariableExpression(var: !1604, expr: !DIExpression())
!1604 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_96", scope: !1391, file: !1562, line: 778, type: !1570, isLocal: true, isDefinition: true, align: 32)
!1605 = !DIGlobalVariableExpression(var: !1606, expr: !DIExpression())
!1606 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_97", scope: !1391, file: !1562, line: 782, type: !1563, isLocal: false, isDefinition: true, align: 16)
!1607 = !DIGlobalVariableExpression(var: !1608, expr: !DIExpression())
!1608 = distinct !DIGlobalVariable(name: "__device_dts_ord_97", scope: !1391, file: !1562, line: 782, type: !1421, isLocal: false, isDefinition: true, align: 32)
!1609 = !DIGlobalVariableExpression(var: !1610, expr: !DIExpression())
!1610 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_97", scope: !1391, file: !1562, line: 782, type: !1570, isLocal: true, isDefinition: true, align: 32)
!1611 = !DIGlobalVariableExpression(var: !1612, expr: !DIExpression())
!1612 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_98", scope: !1391, file: !1562, line: 786, type: !1563, isLocal: false, isDefinition: true, align: 16)
!1613 = !DIGlobalVariableExpression(var: !1614, expr: !DIExpression())
!1614 = distinct !DIGlobalVariable(name: "__device_dts_ord_98", scope: !1391, file: !1562, line: 786, type: !1421, isLocal: false, isDefinition: true, align: 32)
!1615 = !DIGlobalVariableExpression(var: !1616, expr: !DIExpression())
!1616 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_98", scope: !1391, file: !1562, line: 786, type: !1570, isLocal: true, isDefinition: true, align: 32)
!1617 = !DIGlobalVariableExpression(var: !1618, expr: !DIExpression())
!1618 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_99", scope: !1391, file: !1562, line: 790, type: !1563, isLocal: false, isDefinition: true, align: 16)
!1619 = !DIGlobalVariableExpression(var: !1620, expr: !DIExpression())
!1620 = distinct !DIGlobalVariable(name: "__device_dts_ord_99", scope: !1391, file: !1562, line: 790, type: !1421, isLocal: false, isDefinition: true, align: 32)
!1621 = !DIGlobalVariableExpression(var: !1622, expr: !DIExpression())
!1622 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_99", scope: !1391, file: !1562, line: 790, type: !1570, isLocal: true, isDefinition: true, align: 32)
!1623 = !DIGlobalVariableExpression(var: !1624, expr: !DIExpression())
!1624 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1391, file: !1562, line: 762, type: !1625, isLocal: true, isDefinition: true)
!1625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1626, line: 237, size: 128, elements: !1627)
!1626 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1627 = !{!1628, !1629, !1630}
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1625, file: !1626, line: 239, baseType: !1489, size: 32)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1625, file: !1626, line: 241, baseType: !1420, size: 32, offset: 32)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1625, file: !1626, line: 243, baseType: !1631, size: 64, offset: 64)
!1631 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1467, line: 40, baseType: !1632)
!1632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1467, line: 35, size: 64, elements: !1633)
!1633 = !{!1634, !1636}
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1632, file: !1467, line: 36, baseType: !1635, size: 32)
!1635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1466, size: 32)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1632, file: !1467, line: 37, baseType: !1635, size: 32, offset: 32)
!1637 = !DIGlobalVariableExpression(var: !1638, expr: !DIExpression())
!1638 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_93", scope: !1391, file: !1562, line: 762, type: !1429, isLocal: true, isDefinition: true, align: 8)
!1639 = !DIGlobalVariableExpression(var: !1640, expr: !DIExpression())
!1640 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1391, file: !1562, line: 766, type: !1625, isLocal: true, isDefinition: true)
!1641 = !DIGlobalVariableExpression(var: !1642, expr: !DIExpression())
!1642 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_94", scope: !1391, file: !1562, line: 766, type: !1429, isLocal: true, isDefinition: true, align: 8)
!1643 = !DIGlobalVariableExpression(var: !1644, expr: !DIExpression())
!1644 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1391, file: !1562, line: 770, type: !1625, isLocal: true, isDefinition: true)
!1645 = !DIGlobalVariableExpression(var: !1646, expr: !DIExpression())
!1646 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_95", scope: !1391, file: !1562, line: 770, type: !1429, isLocal: true, isDefinition: true, align: 8)
!1647 = !DIGlobalVariableExpression(var: !1648, expr: !DIExpression())
!1648 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1391, file: !1562, line: 774, type: !1625, isLocal: true, isDefinition: true)
!1649 = !DIGlobalVariableExpression(var: !1650, expr: !DIExpression())
!1650 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_22", scope: !1391, file: !1562, line: 774, type: !1429, isLocal: true, isDefinition: true, align: 8)
!1651 = !DIGlobalVariableExpression(var: !1652, expr: !DIExpression())
!1652 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1391, file: !1562, line: 778, type: !1625, isLocal: true, isDefinition: true)
!1653 = !DIGlobalVariableExpression(var: !1654, expr: !DIExpression())
!1654 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_96", scope: !1391, file: !1562, line: 778, type: !1429, isLocal: true, isDefinition: true, align: 8)
!1655 = !DIGlobalVariableExpression(var: !1656, expr: !DIExpression())
!1656 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1391, file: !1562, line: 782, type: !1625, isLocal: true, isDefinition: true)
!1657 = !DIGlobalVariableExpression(var: !1658, expr: !DIExpression())
!1658 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_97", scope: !1391, file: !1562, line: 782, type: !1429, isLocal: true, isDefinition: true, align: 8)
!1659 = !DIGlobalVariableExpression(var: !1660, expr: !DIExpression())
!1660 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1391, file: !1562, line: 786, type: !1625, isLocal: true, isDefinition: true)
!1661 = !DIGlobalVariableExpression(var: !1662, expr: !DIExpression())
!1662 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_98", scope: !1391, file: !1562, line: 786, type: !1429, isLocal: true, isDefinition: true, align: 8)
!1663 = !DIGlobalVariableExpression(var: !1664, expr: !DIExpression())
!1664 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1391, file: !1562, line: 790, type: !1625, isLocal: true, isDefinition: true)
!1665 = !DIGlobalVariableExpression(var: !1666, expr: !DIExpression())
!1666 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_99", scope: !1391, file: !1562, line: 790, type: !1429, isLocal: true, isDefinition: true, align: 8)
!1667 = !DIGlobalVariableExpression(var: !1668, expr: !DIExpression())
!1668 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1391, file: !1562, line: 656, type: !1413, isLocal: true, isDefinition: true)
!1669 = !DIGlobalVariableExpression(var: !1670, expr: !DIExpression())
!1670 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1391, file: !1562, line: 766, type: !1671, isLocal: true, isDefinition: true)
!1671 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1672)
!1672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1626, line: 224, size: 160, elements: !1673)
!1673 = !{!1674, !1675, !1676, !1677}
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1672, file: !1626, line: 226, baseType: !1484, size: 32)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1672, file: !1626, line: 228, baseType: !1247, size: 32, offset: 32)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1672, file: !1626, line: 230, baseType: !108, size: 32, offset: 64)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1672, file: !1626, line: 231, baseType: !1678, size: 64, offset: 96)
!1678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1243, line: 343, size: 64, elements: !1679)
!1679 = !{!1680, !1681}
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1678, file: !1243, line: 344, baseType: !113, size: 32)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1678, file: !1243, line: 345, baseType: !113, size: 32, offset: 32)
!1682 = !DIGlobalVariableExpression(var: !1683, expr: !DIExpression())
!1683 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1391, file: !1562, line: 770, type: !1671, isLocal: true, isDefinition: true)
!1684 = !DIGlobalVariableExpression(var: !1685, expr: !DIExpression())
!1685 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1391, file: !1562, line: 774, type: !1671, isLocal: true, isDefinition: true)
!1686 = !DIGlobalVariableExpression(var: !1687, expr: !DIExpression())
!1687 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1391, file: !1562, line: 778, type: !1671, isLocal: true, isDefinition: true)
!1688 = !DIGlobalVariableExpression(var: !1689, expr: !DIExpression())
!1689 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1391, file: !1562, line: 782, type: !1671, isLocal: true, isDefinition: true)
!1690 = !DIGlobalVariableExpression(var: !1691, expr: !DIExpression())
!1691 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1391, file: !1562, line: 786, type: !1671, isLocal: true, isDefinition: true)
!1692 = !DIGlobalVariableExpression(var: !1693, expr: !DIExpression())
!1693 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1391, file: !1562, line: 790, type: !1671, isLocal: true, isDefinition: true)
!1694 = !DIGlobalVariableExpression(var: !1695, expr: !DIExpression())
!1695 = distinct !DIGlobalVariable(name: "log_const_uart_stm32", scope: !1696, file: !1835, line: 44, type: !1971, isLocal: false, isDefinition: true)
!1696 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1697, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1698, retainedTypes: !1731, globals: !1832, splitDebugInlining: false, nameTableKind: None)
!1697 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sensor_batch_processing")
!1698 = !{!30, !1699, !1706, !1713, !1720, !1726, !1194}
!1699 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !1331, line: 47, baseType: !32, size: 32, elements: !1700)
!1700 = !{!1701, !1702, !1703, !1704, !1705}
!1701 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1702 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1703 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1704 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1705 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1706 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !1331, line: 75, baseType: !32, size: 32, elements: !1707)
!1707 = !{!1708, !1709, !1710, !1711, !1712}
!1708 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1709 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1710 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1711 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1712 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1713 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !1331, line: 92, baseType: !32, size: 32, elements: !1714)
!1714 = !{!1715, !1716, !1717, !1718, !1719}
!1715 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1716 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1717 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1718 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1719 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1720 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !1331, line: 84, baseType: !32, size: 32, elements: !1721)
!1721 = !{!1722, !1723, !1724, !1725}
!1722 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1723 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1724 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1725 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1726 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !1331, line: 107, baseType: !32, size: 32, elements: !1727)
!1727 = !{!1728, !1729, !1730}
!1728 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1729 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1730 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1731 = !{!104, !108, !1732, !165, !164, !1781, !113, !1291, !1792, !168, !114, !1831}
!1732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1733, size: 32)
!1733 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1734)
!1734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1331, line: 336, size: 160, elements: !1735)
!1735 = !{!1736, !1755, !1759, !1763, !1776}
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1734, file: !1331, line: 365, baseType: !1737, size: 32)
!1737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1738, size: 32)
!1738 = !DISubroutineType(types: !1739)
!1739 = !{!108, !1740, !1352}
!1740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1741, size: 32)
!1741 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1742)
!1742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !1743)
!1743 = !{!1744, !1745, !1746, !1747, !1753, !1754}
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1742, file: !411, line: 380, baseType: !105, size: 32)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1742, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1742, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1742, file: !411, line: 386, baseType: !1748, size: 32, offset: 96)
!1748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1749, size: 32)
!1749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !1750)
!1750 = !{!1751, !1752}
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1749, file: !411, line: 359, baseType: !164, size: 8)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1749, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1742, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1742, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1734, file: !1331, line: 366, baseType: !1756, size: 32, offset: 32)
!1756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1757, size: 32)
!1757 = !DISubroutineType(types: !1758)
!1758 = !{null, !1740, !165}
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1734, file: !1331, line: 374, baseType: !1760, size: 32, offset: 64)
!1760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1761, size: 32)
!1761 = !DISubroutineType(types: !1762)
!1762 = !{!108, !1740}
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1734, file: !1331, line: 377, baseType: !1764, size: 32, offset: 96)
!1764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1765, size: 32)
!1765 = !DISubroutineType(types: !1766)
!1766 = !{!108, !1740, !1767}
!1767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1768, size: 32)
!1768 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1769)
!1769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1331, line: 122, size: 64, elements: !1770)
!1770 = !{!1771, !1772, !1773, !1774, !1775}
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1769, file: !1331, line: 123, baseType: !113, size: 32)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1769, file: !1331, line: 124, baseType: !164, size: 8, offset: 32)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1769, file: !1331, line: 125, baseType: !164, size: 8, offset: 40)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1769, file: !1331, line: 126, baseType: !164, size: 8, offset: 48)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1769, file: !1331, line: 127, baseType: !164, size: 8, offset: 56)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1734, file: !1331, line: 379, baseType: !1777, size: 32, offset: 128)
!1777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1778, size: 32)
!1778 = !DISubroutineType(types: !1779)
!1779 = !{!108, !1740, !1780}
!1780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1769, size: 32)
!1781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1782, size: 32)
!1782 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !572, line: 783, baseType: !1783)
!1783 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !572, line: 774, size: 224, elements: !1784)
!1784 = !{!1785, !1786, !1787, !1788, !1789, !1790, !1791}
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1783, file: !572, line: 776, baseType: !576, size: 32)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1783, file: !572, line: 777, baseType: !576, size: 32, offset: 32)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1783, file: !572, line: 778, baseType: !576, size: 32, offset: 64)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1783, file: !572, line: 779, baseType: !576, size: 32, offset: 96)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1783, file: !572, line: 780, baseType: !576, size: 32, offset: 128)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1783, file: !572, line: 781, baseType: !576, size: 32, offset: 160)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1783, file: !572, line: 782, baseType: !576, size: 32, offset: 192)
!1792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1793, size: 32)
!1793 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1794)
!1794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !1195, line: 100, size: 224, elements: !1795)
!1795 = !{!1796, !1801, !1802, !1811, !1816, !1821, !1826}
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1794, file: !1195, line: 101, baseType: !1797, size: 32)
!1797 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !1195, line: 76, baseType: !1798)
!1798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1799, size: 32)
!1799 = !DISubroutineType(types: !1800)
!1800 = !{!108, !1740, !1291}
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1794, file: !1195, line: 102, baseType: !1797, size: 32, offset: 32)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1794, file: !1195, line: 103, baseType: !1803, size: 32, offset: 64)
!1803 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !1195, line: 83, baseType: !1804)
!1804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1805, size: 32)
!1805 = !DISubroutineType(types: !1806)
!1806 = !{!108, !1740, !1291, !1807, !104}
!1807 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !1195, line: 72, baseType: !1808)
!1808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1809, size: 32)
!1809 = !DISubroutineType(types: !1810)
!1810 = !{null, !1740, !1291, !104}
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1794, file: !1195, line: 104, baseType: !1812, size: 32, offset: 96)
!1812 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !1195, line: 79, baseType: !1813)
!1813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1814, size: 32)
!1814 = !DISubroutineType(types: !1815)
!1815 = !{!108, !1740, !1291, !1247}
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1794, file: !1195, line: 105, baseType: !1817, size: 32, offset: 128)
!1817 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !1195, line: 88, baseType: !1818)
!1818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1819, size: 32)
!1819 = !DISubroutineType(types: !1820)
!1820 = !{!1194, !1740, !1291}
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1794, file: !1195, line: 106, baseType: !1822, size: 32, offset: 160)
!1822 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !1195, line: 92, baseType: !1823)
!1823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1824, size: 32)
!1824 = !DISubroutineType(types: !1825)
!1825 = !{!108, !1740, !1291, !1317}
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1794, file: !1195, line: 107, baseType: !1827, size: 32, offset: 192)
!1827 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !1195, line: 96, baseType: !1828)
!1828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1829, size: 32)
!1829 = !DISubroutineType(types: !1830)
!1830 = !{!108, !1740, !1291, !104}
!1831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !576, size: 32)
!1832 = !{!1694, !1833, !1837, !1839, !1846, !1848, !1850, !1852, !1854, !1856, !1858, !1860, !1862, !1864, !1866, !1868, !1870, !1872, !1916, !1919, !1921, !1924, !1927, !1929, !1935, !1937, !1939, !1941, !1943, !1945, !1947, !1949, !1951, !1953, !1955, !1957, !1959, !1961, !1963, !1965, !1967, !1969}
!1833 = !DIGlobalVariableExpression(var: !1834, expr: !DIExpression())
!1834 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_55", scope: !1696, file: !1835, line: 1914, type: !1836, isLocal: false, isDefinition: true, align: 16)
!1835 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1836 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 128, elements: !244)
!1837 = !DIGlobalVariableExpression(var: !1838, expr: !DIExpression())
!1838 = distinct !DIGlobalVariable(name: "__device_dts_ord_55", scope: !1696, file: !1835, line: 1914, type: !1741, isLocal: false, isDefinition: true, align: 32)
!1839 = !DIGlobalVariableExpression(var: !1840, expr: !DIExpression())
!1840 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_55", scope: !1696, file: !1835, line: 1914, type: !1841, isLocal: true, isDefinition: true, align: 32)
!1841 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1842)
!1842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !469, line: 51, size: 64, elements: !1843)
!1843 = !{!1844, !1845}
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1842, file: !469, line: 60, baseType: !1760, size: 32)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1842, file: !469, line: 65, baseType: !1740, size: 32, offset: 32)
!1846 = !DIGlobalVariableExpression(var: !1847, expr: !DIExpression())
!1847 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !1696, file: !1835, line: 1914, type: !1836, isLocal: false, isDefinition: true, align: 16)
!1848 = !DIGlobalVariableExpression(var: !1849, expr: !DIExpression())
!1849 = distinct !DIGlobalVariable(name: "__device_dts_ord_45", scope: !1696, file: !1835, line: 1914, type: !1741, isLocal: false, isDefinition: true, align: 32)
!1850 = !DIGlobalVariableExpression(var: !1851, expr: !DIExpression())
!1851 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_45", scope: !1696, file: !1835, line: 1914, type: !1841, isLocal: true, isDefinition: true, align: 32)
!1852 = !DIGlobalVariableExpression(var: !1853, expr: !DIExpression())
!1853 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_48", scope: !1696, file: !1835, line: 1914, type: !1836, isLocal: false, isDefinition: true, align: 16)
!1854 = !DIGlobalVariableExpression(var: !1855, expr: !DIExpression())
!1855 = distinct !DIGlobalVariable(name: "__device_dts_ord_48", scope: !1696, file: !1835, line: 1914, type: !1741, isLocal: false, isDefinition: true, align: 32)
!1856 = !DIGlobalVariableExpression(var: !1857, expr: !DIExpression())
!1857 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_48", scope: !1696, file: !1835, line: 1914, type: !1841, isLocal: true, isDefinition: true, align: 32)
!1858 = !DIGlobalVariableExpression(var: !1859, expr: !DIExpression())
!1859 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_51", scope: !1696, file: !1835, line: 1914, type: !1836, isLocal: false, isDefinition: true, align: 16)
!1860 = !DIGlobalVariableExpression(var: !1861, expr: !DIExpression())
!1861 = distinct !DIGlobalVariable(name: "__device_dts_ord_51", scope: !1696, file: !1835, line: 1914, type: !1741, isLocal: false, isDefinition: true, align: 32)
!1862 = !DIGlobalVariableExpression(var: !1863, expr: !DIExpression())
!1863 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_51", scope: !1696, file: !1835, line: 1914, type: !1841, isLocal: true, isDefinition: true, align: 32)
!1864 = !DIGlobalVariableExpression(var: !1865, expr: !DIExpression())
!1865 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_55", scope: !1696, file: !1835, line: 1914, type: !1749, isLocal: true, isDefinition: true, align: 8)
!1866 = !DIGlobalVariableExpression(var: !1867, expr: !DIExpression())
!1867 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_45", scope: !1696, file: !1835, line: 1914, type: !1749, isLocal: true, isDefinition: true, align: 8)
!1868 = !DIGlobalVariableExpression(var: !1869, expr: !DIExpression())
!1869 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_48", scope: !1696, file: !1835, line: 1914, type: !1749, isLocal: true, isDefinition: true, align: 8)
!1870 = !DIGlobalVariableExpression(var: !1871, expr: !DIExpression())
!1871 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_51", scope: !1696, file: !1835, line: 1914, type: !1749, isLocal: true, isDefinition: true, align: 8)
!1872 = !DIGlobalVariableExpression(var: !1873, expr: !DIExpression())
!1873 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1696, file: !1835, line: 1914, type: !1874, isLocal: true, isDefinition: true)
!1874 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1875)
!1875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1876, line: 22, size: 224, elements: !1877)
!1876 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1877 = !{!1878, !1879, !1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893}
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1875, file: !1876, line: 24, baseType: !1781, size: 32)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1875, file: !1876, line: 26, baseType: !1880, size: 32, offset: 32)
!1880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1881, size: 32)
!1881 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1882)
!1882 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1243, line: 343, size: 64, elements: !1883)
!1883 = !{!1884, !1885}
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1882, file: !1243, line: 344, baseType: !113, size: 32)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1882, file: !1243, line: 345, baseType: !113, size: 32, offset: 32)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1875, file: !1876, line: 28, baseType: !439, size: 32, offset: 64)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1875, file: !1876, line: 30, baseType: !422, size: 8, offset: 96)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1875, file: !1876, line: 32, baseType: !108, size: 32, offset: 128)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1875, file: !1876, line: 34, baseType: !422, size: 8, offset: 160)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1875, file: !1876, line: 36, baseType: !422, size: 8, offset: 168)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1875, file: !1876, line: 38, baseType: !422, size: 8, offset: 176)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1875, file: !1876, line: 40, baseType: !422, size: 8, offset: 184)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1875, file: !1876, line: 41, baseType: !1894, size: 32, offset: 192)
!1894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1895, size: 32)
!1895 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1896)
!1896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1897, line: 60, size: 64, elements: !1898)
!1897 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1898 = !{!1899, !1915}
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1896, file: !1897, line: 69, baseType: !1900, size: 32)
!1900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1901, size: 32)
!1901 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1902)
!1902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1897, line: 50, size: 64, elements: !1903)
!1903 = !{!1904, !1913, !1914}
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1902, file: !1897, line: 52, baseType: !1905, size: 32)
!1905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1906, size: 32)
!1906 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1907)
!1907 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1908, line: 37, baseType: !1909)
!1908 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1908, line: 32, size: 64, elements: !1910)
!1910 = !{!1911, !1912}
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1909, file: !1908, line: 34, baseType: !113, size: 32)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1909, file: !1908, line: 36, baseType: !113, size: 32, offset: 32)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1902, file: !1897, line: 54, baseType: !164, size: 8, offset: 32)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1902, file: !1897, line: 56, baseType: !164, size: 8, offset: 40)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1896, file: !1897, line: 71, baseType: !164, size: 8, offset: 32)
!1916 = !DIGlobalVariableExpression(var: !1917, expr: !DIExpression())
!1917 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1696, file: !1835, line: 1914, type: !1918, isLocal: true, isDefinition: true)
!1918 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1881, size: 64, elements: !776)
!1919 = !DIGlobalVariableExpression(var: !1920, expr: !DIExpression())
!1920 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_55", scope: !1696, file: !1835, line: 1914, type: !1895, isLocal: true, isDefinition: true)
!1921 = !DIGlobalVariableExpression(var: !1922, expr: !DIExpression())
!1922 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_55", scope: !1696, file: !1835, line: 1914, type: !1923, isLocal: true, isDefinition: true)
!1923 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1901, size: 64, elements: !776)
!1924 = !DIGlobalVariableExpression(var: !1925, expr: !DIExpression())
!1925 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_55", scope: !1696, file: !1835, line: 1914, type: !1926, isLocal: true, isDefinition: true)
!1926 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1906, size: 128, elements: !681)
!1927 = !DIGlobalVariableExpression(var: !1928, expr: !DIExpression())
!1928 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1696, file: !1835, line: 1539, type: !1733, isLocal: true, isDefinition: true)
!1929 = !DIGlobalVariableExpression(var: !1930, expr: !DIExpression())
!1930 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1696, file: !1835, line: 1914, type: !1931, isLocal: true, isDefinition: true)
!1931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1876, line: 74, size: 64, elements: !1932)
!1932 = !{!1933, !1934}
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1931, file: !1876, line: 76, baseType: !113, size: 32)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1931, file: !1876, line: 78, baseType: !1740, size: 32, offset: 32)
!1935 = !DIGlobalVariableExpression(var: !1936, expr: !DIExpression())
!1936 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_1", scope: !1696, file: !1835, line: 1914, type: !1874, isLocal: true, isDefinition: true)
!1937 = !DIGlobalVariableExpression(var: !1938, expr: !DIExpression())
!1938 = distinct !DIGlobalVariable(name: "pclken_1", scope: !1696, file: !1835, line: 1914, type: !1918, isLocal: true, isDefinition: true)
!1939 = !DIGlobalVariableExpression(var: !1940, expr: !DIExpression())
!1940 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_45", scope: !1696, file: !1835, line: 1914, type: !1895, isLocal: true, isDefinition: true)
!1941 = !DIGlobalVariableExpression(var: !1942, expr: !DIExpression())
!1942 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_45", scope: !1696, file: !1835, line: 1914, type: !1923, isLocal: true, isDefinition: true)
!1943 = !DIGlobalVariableExpression(var: !1944, expr: !DIExpression())
!1944 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_45", scope: !1696, file: !1835, line: 1914, type: !1926, isLocal: true, isDefinition: true)
!1945 = !DIGlobalVariableExpression(var: !1946, expr: !DIExpression())
!1946 = distinct !DIGlobalVariable(name: "uart_stm32_data_1", scope: !1696, file: !1835, line: 1914, type: !1931, isLocal: true, isDefinition: true)
!1947 = !DIGlobalVariableExpression(var: !1948, expr: !DIExpression())
!1948 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_2", scope: !1696, file: !1835, line: 1914, type: !1874, isLocal: true, isDefinition: true)
!1949 = !DIGlobalVariableExpression(var: !1950, expr: !DIExpression())
!1950 = distinct !DIGlobalVariable(name: "pclken_2", scope: !1696, file: !1835, line: 1914, type: !1918, isLocal: true, isDefinition: true)
!1951 = !DIGlobalVariableExpression(var: !1952, expr: !DIExpression())
!1952 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_48", scope: !1696, file: !1835, line: 1914, type: !1895, isLocal: true, isDefinition: true)
!1953 = !DIGlobalVariableExpression(var: !1954, expr: !DIExpression())
!1954 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_48", scope: !1696, file: !1835, line: 1914, type: !1923, isLocal: true, isDefinition: true)
!1955 = !DIGlobalVariableExpression(var: !1956, expr: !DIExpression())
!1956 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_48", scope: !1696, file: !1835, line: 1914, type: !1926, isLocal: true, isDefinition: true)
!1957 = !DIGlobalVariableExpression(var: !1958, expr: !DIExpression())
!1958 = distinct !DIGlobalVariable(name: "uart_stm32_data_2", scope: !1696, file: !1835, line: 1914, type: !1931, isLocal: true, isDefinition: true)
!1959 = !DIGlobalVariableExpression(var: !1960, expr: !DIExpression())
!1960 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_3", scope: !1696, file: !1835, line: 1914, type: !1874, isLocal: true, isDefinition: true)
!1961 = !DIGlobalVariableExpression(var: !1962, expr: !DIExpression())
!1962 = distinct !DIGlobalVariable(name: "pclken_3", scope: !1696, file: !1835, line: 1914, type: !1918, isLocal: true, isDefinition: true)
!1963 = !DIGlobalVariableExpression(var: !1964, expr: !DIExpression())
!1964 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_51", scope: !1696, file: !1835, line: 1914, type: !1895, isLocal: true, isDefinition: true)
!1965 = !DIGlobalVariableExpression(var: !1966, expr: !DIExpression())
!1966 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_51", scope: !1696, file: !1835, line: 1914, type: !1923, isLocal: true, isDefinition: true)
!1967 = !DIGlobalVariableExpression(var: !1968, expr: !DIExpression())
!1968 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_51", scope: !1696, file: !1835, line: 1914, type: !1926, isLocal: true, isDefinition: true)
!1969 = !DIGlobalVariableExpression(var: !1970, expr: !DIExpression())
!1970 = distinct !DIGlobalVariable(name: "uart_stm32_data_3", scope: !1696, file: !1835, line: 1914, type: !1931, isLocal: true, isDefinition: true)
!1971 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1972)
!1972 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !254, line: 16, size: 64, elements: !1973)
!1973 = !{!1974, !1975}
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1972, file: !254, line: 17, baseType: !105, size: 32)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1972, file: !254, line: 18, baseType: !164, size: 8, offset: 32)
!1976 = !DIGlobalVariableExpression(var: !1977, expr: !DIExpression())
!1977 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1978, file: !2056, line: 65, type: !576, isLocal: true, isDefinition: true)
!1978 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1979, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1980, retainedTypes: !1981, globals: !2053, splitDebugInlining: false, nameTableKind: None)
!1979 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sensor_batch_processing")
!1980 = !{!991}
!1981 = !{!109, !1982, !220, !164, !113, !1990, !2021}
!1982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1983, size: 32)
!1983 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !794, line: 770, baseType: !1984)
!1984 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !794, line: 764, size: 128, elements: !1985)
!1985 = !{!1986, !1987, !1988, !1989}
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1984, file: !794, line: 766, baseType: !576, size: 32)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1984, file: !794, line: 767, baseType: !576, size: 32, offset: 32)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1984, file: !794, line: 768, baseType: !576, size: 32, offset: 64)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1984, file: !794, line: 769, baseType: !798, size: 32, offset: 96)
!1990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1991, size: 32)
!1991 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !794, line: 426, baseType: !1992)
!1992 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !794, line: 411, size: 28704, elements: !1993)
!1993 = !{!1994, !1996, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2007, !2011, !2016, !2020}
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1992, file: !794, line: 413, baseType: !1995, size: 256)
!1995 = !DICompositeType(tag: DW_TAG_array_type, baseType: !576, size: 256, elements: !244)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1992, file: !794, line: 414, baseType: !1997, size: 768, offset: 256)
!1997 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 768, elements: !1998)
!1998 = !{!1999}
!1999 = !DISubrange(count: 24)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1992, file: !794, line: 415, baseType: !1995, size: 256, offset: 1024)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1992, file: !794, line: 416, baseType: !1997, size: 768, offset: 1280)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1992, file: !794, line: 417, baseType: !1995, size: 256, offset: 2048)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1992, file: !794, line: 418, baseType: !1997, size: 768, offset: 2304)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1992, file: !794, line: 419, baseType: !1995, size: 256, offset: 3072)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1992, file: !794, line: 420, baseType: !1997, size: 768, offset: 3328)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1992, file: !794, line: 421, baseType: !1995, size: 256, offset: 4096)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1992, file: !794, line: 422, baseType: !2008, size: 1792, offset: 4352)
!2008 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 1792, elements: !2009)
!2009 = !{!2010}
!2010 = !DISubrange(count: 56)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1992, file: !794, line: 423, baseType: !2012, size: 1920, offset: 6144)
!2012 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2013, size: 1920, elements: !2014)
!2013 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !164)
!2014 = !{!2015}
!2015 = !DISubrange(count: 240)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1992, file: !794, line: 424, baseType: !2017, size: 20608, offset: 8064)
!2017 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 20608, elements: !2018)
!2018 = !{!2019}
!2019 = !DISubrange(count: 644)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1992, file: !794, line: 425, baseType: !576, size: 32, offset: 28672)
!2021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2022, size: 32)
!2022 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !794, line: 468, baseType: !2023)
!2023 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !794, line: 445, size: 1120, elements: !2024)
!2024 = !{!2025, !2026, !2027, !2028, !2029, !2030, !2031, !2035, !2036, !2037, !2038, !2039, !2040, !2041, !2042, !2044, !2045, !2046, !2048, !2050, !2052}
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2023, file: !794, line: 447, baseType: !798, size: 32)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2023, file: !794, line: 448, baseType: !576, size: 32, offset: 32)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2023, file: !794, line: 449, baseType: !576, size: 32, offset: 64)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2023, file: !794, line: 450, baseType: !576, size: 32, offset: 96)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2023, file: !794, line: 451, baseType: !576, size: 32, offset: 128)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2023, file: !794, line: 452, baseType: !576, size: 32, offset: 160)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2023, file: !794, line: 453, baseType: !2032, size: 96, offset: 192)
!2032 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2013, size: 96, elements: !2033)
!2033 = !{!2034}
!2034 = !DISubrange(count: 12)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2023, file: !794, line: 454, baseType: !576, size: 32, offset: 288)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2023, file: !794, line: 455, baseType: !576, size: 32, offset: 320)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2023, file: !794, line: 456, baseType: !576, size: 32, offset: 352)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2023, file: !794, line: 457, baseType: !576, size: 32, offset: 384)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2023, file: !794, line: 458, baseType: !576, size: 32, offset: 416)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2023, file: !794, line: 459, baseType: !576, size: 32, offset: 448)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2023, file: !794, line: 460, baseType: !576, size: 32, offset: 480)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2023, file: !794, line: 461, baseType: !2043, size: 64, offset: 512)
!2043 = !DICompositeType(tag: DW_TAG_array_type, baseType: !798, size: 64, elements: !681)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2023, file: !794, line: 462, baseType: !798, size: 32, offset: 576)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2023, file: !794, line: 463, baseType: !798, size: 32, offset: 608)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2023, file: !794, line: 464, baseType: !2047, size: 128, offset: 640)
!2047 = !DICompositeType(tag: DW_TAG_array_type, baseType: !798, size: 128, elements: !461)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2023, file: !794, line: 465, baseType: !2049, size: 160, offset: 768)
!2049 = !DICompositeType(tag: DW_TAG_array_type, baseType: !798, size: 160, elements: !1564)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2023, file: !794, line: 466, baseType: !2051, size: 160, offset: 928)
!2051 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 160, elements: !1564)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2023, file: !794, line: 467, baseType: !576, size: 32, offset: 1088)
!2053 = !{!2054, !2080, !2083, !2085, !2087, !1976}
!2054 = !DIGlobalVariableExpression(var: !2055, expr: !DIExpression())
!2055 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1978, file: !2056, line: 285, type: !2057, isLocal: true, isDefinition: true, align: 32)
!2056 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2057 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2058)
!2058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !469, line: 51, size: 64, elements: !2059)
!2059 = !{!2060, !2079}
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2058, file: !469, line: 60, baseType: !2061, size: 32)
!2061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2062, size: 32)
!2062 = !DISubroutineType(types: !2063)
!2063 = !{!108, !2064}
!2064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2065, size: 32)
!2065 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2066)
!2066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !2067)
!2067 = !{!2068, !2069, !2070, !2071, !2077, !2078}
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2066, file: !411, line: 380, baseType: !105, size: 32)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2066, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2066, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2066, file: !411, line: 386, baseType: !2072, size: 32, offset: 96)
!2072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2073, size: 32)
!2073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !2074)
!2074 = !{!2075, !2076}
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2073, file: !411, line: 359, baseType: !164, size: 8)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2073, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2066, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2066, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2058, file: !469, line: 65, baseType: !2064, size: 32, offset: 32)
!2080 = !DIGlobalVariableExpression(var: !2081, expr: !DIExpression())
!2081 = distinct !DIGlobalVariable(name: "lock", scope: !1978, file: !2056, line: 34, type: !2082, isLocal: true, isDefinition: true)
!2082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!2083 = !DIGlobalVariableExpression(var: !2084, expr: !DIExpression())
!2084 = distinct !DIGlobalVariable(name: "last_load", scope: !1978, file: !2056, line: 36, type: !113, isLocal: true, isDefinition: true)
!2085 = !DIGlobalVariableExpression(var: !2086, expr: !DIExpression())
!2086 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1978, file: !2056, line: 48, type: !113, isLocal: true, isDefinition: true)
!2087 = !DIGlobalVariableExpression(var: !2088, expr: !DIExpression())
!2088 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1978, file: !2056, line: 54, type: !113, isLocal: true, isDefinition: true)
!2089 = !DIGlobalVariableExpression(var: !2090, expr: !DIExpression())
!2090 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !2091, file: !2173, line: 22, type: !2175, isLocal: true, isDefinition: true)
!2091 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2092, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2093, retainedTypes: !2094, globals: !2170, splitDebugInlining: false, nameTableKind: None)
!2092 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sensor_batch_processing")
!2093 = !{!1394, !1400}
!2094 = !{!2095, !2159, !2164, !1447, !1400, !1394, !2169, !104}
!2095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2096, size: 32)
!2096 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2097)
!2097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1395, line: 523, size: 288, elements: !2098)
!2098 = !{!2099, !2118, !2122, !2126, !2130, !2131, !2132, !2136, !2155}
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !2097, file: !1395, line: 524, baseType: !2100, size: 32)
!2100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2101, size: 32)
!2101 = !DISubroutineType(types: !2102)
!2102 = !{!108, !2103, !1435, !1436}
!2103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2104, size: 32)
!2104 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2105)
!2105 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !2106)
!2106 = !{!2107, !2108, !2109, !2110, !2116, !2117}
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2105, file: !411, line: 380, baseType: !105, size: 32)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2105, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2105, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2105, file: !411, line: 386, baseType: !2111, size: 32, offset: 96)
!2111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2112, size: 32)
!2112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !2113)
!2113 = !{!2114, !2115}
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2112, file: !411, line: 359, baseType: !164, size: 8)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2112, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2105, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2105, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !2097, file: !1395, line: 530, baseType: !2119, size: 32, offset: 32)
!2119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2120, size: 32)
!2120 = !DISubroutineType(types: !2121)
!2121 = !{!108, !2103, !1441}
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !2097, file: !1395, line: 532, baseType: !2123, size: 32, offset: 64)
!2123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2124, size: 32)
!2124 = !DISubroutineType(types: !2125)
!2125 = !{!108, !2103, !1447, !1442}
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !2097, file: !1395, line: 535, baseType: !2127, size: 32, offset: 96)
!2127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2128, size: 32)
!2128 = !DISubroutineType(types: !2129)
!2129 = !{!108, !2103, !1447}
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !2097, file: !1395, line: 537, baseType: !2127, size: 32, offset: 128)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !2097, file: !1395, line: 539, baseType: !2127, size: 32, offset: 160)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !2097, file: !1395, line: 541, baseType: !2133, size: 32, offset: 192)
!2133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2134, size: 32)
!2134 = !DISubroutineType(types: !2135)
!2135 = !{!108, !2103, !1435, !1394, !1400}
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !2097, file: !1395, line: 544, baseType: !2137, size: 32, offset: 224)
!2137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2138, size: 32)
!2138 = !DISubroutineType(types: !2139)
!2139 = !{!108, !2103, !2140, !422}
!2140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2141, size: 32)
!2141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1395, line: 478, size: 96, elements: !2142)
!2142 = !{!2143, !2149, !2154}
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2141, file: !1395, line: 482, baseType: !2144, size: 32)
!2144 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1467, line: 33, baseType: !2145)
!2145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1467, line: 29, size: 32, elements: !2146)
!2146 = !{!2147}
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2145, file: !1467, line: 30, baseType: !2148, size: 32)
!2148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2145, size: 32)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !2141, file: !1395, line: 485, baseType: !2150, size: 32, offset: 32)
!2150 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1395, line: 464, baseType: !2151)
!2151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2152, size: 32)
!2152 = !DISubroutineType(types: !2153)
!2153 = !{null, !2103, !2140, !1447}
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !2141, file: !1395, line: 493, baseType: !1447, size: 32, offset: 64)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !2097, file: !1395, line: 547, baseType: !2156, size: 32, offset: 256)
!2156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2157, size: 32)
!2157 = !DISubroutineType(types: !2158)
!2158 = !{!113, !2103}
!2159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2160, size: 32)
!2160 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2161)
!2161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1395, line: 428, size: 32, elements: !2162)
!2162 = !{!2163}
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !2161, file: !1395, line: 434, baseType: !1447, size: 32)
!2164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2165, size: 32)
!2165 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2166)
!2166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1395, line: 441, size: 32, elements: !2167)
!2167 = !{!2168}
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !2166, file: !1395, line: 447, baseType: !1447, size: 32)
!2169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2166, size: 32)
!2170 = !{!2171, !2089}
!2171 = !DIGlobalVariableExpression(var: !2172, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!2172 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !2091, file: !2173, line: 37, type: !2174, isLocal: true, isDefinition: true)
!2173 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2174 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !439)
!2175 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2176, size: 352, elements: !2177)
!2176 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2103)
!2177 = !{!2178}
!2178 = !DISubrange(count: 11)
!2179 = !DIGlobalVariableExpression(var: !2180, expr: !DIExpression())
!2180 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !2181, file: !2225, line: 139, type: !2231, isLocal: false, isDefinition: true)
!2181 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2182, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2183, globals: !2222, splitDebugInlining: false, nameTableKind: None)
!2182 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sensor_batch_processing")
!2183 = !{!2184}
!2184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2185, size: 32)
!2185 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !572, line: 586, baseType: !2186)
!2186 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !572, line: 550, size: 1216, elements: !2187)
!2187 = !{!2188, !2189, !2190, !2191, !2192, !2193, !2194, !2195, !2196, !2197, !2198, !2199, !2200, !2201, !2202, !2203, !2204, !2205, !2206, !2207, !2208, !2209, !2210, !2211, !2212, !2213, !2214, !2215, !2216, !2217, !2218, !2219, !2220, !2221}
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2186, file: !572, line: 552, baseType: !576, size: 32)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2186, file: !572, line: 553, baseType: !576, size: 32, offset: 32)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2186, file: !572, line: 554, baseType: !576, size: 32, offset: 64)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2186, file: !572, line: 555, baseType: !576, size: 32, offset: 96)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2186, file: !572, line: 556, baseType: !576, size: 32, offset: 128)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2186, file: !572, line: 557, baseType: !576, size: 32, offset: 160)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2186, file: !572, line: 558, baseType: !576, size: 32, offset: 192)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2186, file: !572, line: 559, baseType: !113, size: 32, offset: 224)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2186, file: !572, line: 560, baseType: !576, size: 32, offset: 256)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2186, file: !572, line: 561, baseType: !576, size: 32, offset: 288)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2186, file: !572, line: 562, baseType: !1217, size: 64, offset: 320)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2186, file: !572, line: 563, baseType: !576, size: 32, offset: 384)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2186, file: !572, line: 564, baseType: !576, size: 32, offset: 416)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2186, file: !572, line: 565, baseType: !576, size: 32, offset: 448)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2186, file: !572, line: 566, baseType: !113, size: 32, offset: 480)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2186, file: !572, line: 567, baseType: !576, size: 32, offset: 512)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2186, file: !572, line: 568, baseType: !576, size: 32, offset: 544)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2186, file: !572, line: 569, baseType: !1217, size: 64, offset: 576)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2186, file: !572, line: 570, baseType: !576, size: 32, offset: 640)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2186, file: !572, line: 571, baseType: !576, size: 32, offset: 672)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2186, file: !572, line: 572, baseType: !576, size: 32, offset: 704)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2186, file: !572, line: 573, baseType: !113, size: 32, offset: 736)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2186, file: !572, line: 574, baseType: !576, size: 32, offset: 768)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2186, file: !572, line: 575, baseType: !576, size: 32, offset: 800)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2186, file: !572, line: 576, baseType: !1217, size: 64, offset: 832)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2186, file: !572, line: 577, baseType: !576, size: 32, offset: 896)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2186, file: !572, line: 578, baseType: !576, size: 32, offset: 928)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2186, file: !572, line: 579, baseType: !1217, size: 64, offset: 960)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2186, file: !572, line: 580, baseType: !576, size: 32, offset: 1024)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2186, file: !572, line: 581, baseType: !576, size: 32, offset: 1056)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !2186, file: !572, line: 582, baseType: !576, size: 32, offset: 1088)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2186, file: !572, line: 583, baseType: !576, size: 32, offset: 1120)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !2186, file: !572, line: 584, baseType: !576, size: 32, offset: 1152)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !2186, file: !572, line: 585, baseType: !576, size: 32, offset: 1184)
!2222 = !{!2223, !2226, !2179}
!2223 = !DIGlobalVariableExpression(var: !2224, expr: !DIExpression())
!2224 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !2181, file: !2225, line: 137, type: !113, isLocal: false, isDefinition: true)
!2225 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2226 = !DIGlobalVariableExpression(var: !2227, expr: !DIExpression())
!2227 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !2181, file: !2225, line: 138, type: !2228, isLocal: false, isDefinition: true)
!2228 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2229, size: 128, elements: !2230)
!2229 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !164)
!2230 = !{!234}
!2231 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2229, size: 64, elements: !244)
!2232 = !DIGlobalVariableExpression(var: !2233, expr: !DIExpression())
!2233 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !2234, file: !2237, line: 23, type: !2238, isLocal: false, isDefinition: true)
!2234 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2235, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !559, globals: !2236, splitDebugInlining: false, nameTableKind: None)
!2235 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sensor_batch_processing")
!2236 = !{!2232}
!2237 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2238 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !108)
!2239 = !DIGlobalVariableExpression(var: !2240, expr: !DIExpression())
!2240 = distinct !DIGlobalVariable(name: "log_const_os", scope: !2241, file: !2245, line: 37, type: !2499, isLocal: false, isDefinition: true)
!2241 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2242, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2243, retainedTypes: !2252, globals: !2325, splitDebugInlining: false, nameTableKind: None)
!2242 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sensor_batch_processing")
!2243 = !{!2244, !30, !991}
!2244 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !2245, line: 63, baseType: !32, size: 32, elements: !2246)
!2245 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2246 = !{!2247, !2248, !2249, !2250, !2251}
!2247 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!2248 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!2249 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!2250 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!2251 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!2252 = !{!439, !104, !108, !2253, !443, !113, !2283, !220, !164, !2308}
!2253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2254, size: 32)
!2254 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2255)
!2255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !2256, line: 51, size: 64, elements: !2257)
!2256 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2257 = !{!2258, !2278}
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !2255, file: !2256, line: 52, baseType: !2259, size: 32)
!2259 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !2256, line: 38, baseType: !2260)
!2260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2261, size: 32)
!2261 = !DISubroutineType(types: !2262)
!2262 = !{!108, !2263, !209, !168}
!2263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2264, size: 32)
!2264 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2265)
!2265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !2266)
!2266 = !{!2267, !2268, !2269, !2270, !2276, !2277}
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2265, file: !411, line: 380, baseType: !105, size: 32)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2265, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2265, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2265, file: !411, line: 386, baseType: !2271, size: 32, offset: 96)
!2271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2272, size: 32)
!2272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !2273)
!2273 = !{!2274, !2275}
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2272, file: !411, line: 359, baseType: !164, size: 8)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2272, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2265, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2265, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !2255, file: !2256, line: 53, baseType: !2279, size: 32, offset: 32)
!2279 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !2256, line: 47, baseType: !2280)
!2280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2281, size: 32)
!2281 = !DISubroutineType(types: !2282)
!2282 = !{!108, !2263, !209, !168, !113}
!2283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2284, size: 32)
!2284 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !794, line: 468, baseType: !2285)
!2285 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !794, line: 445, size: 1120, elements: !2286)
!2286 = !{!2287, !2288, !2289, !2290, !2291, !2292, !2293, !2294, !2295, !2296, !2297, !2298, !2299, !2300, !2301, !2302, !2303, !2304, !2305, !2306, !2307}
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2285, file: !794, line: 447, baseType: !798, size: 32)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2285, file: !794, line: 448, baseType: !576, size: 32, offset: 32)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2285, file: !794, line: 449, baseType: !576, size: 32, offset: 64)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2285, file: !794, line: 450, baseType: !576, size: 32, offset: 96)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2285, file: !794, line: 451, baseType: !576, size: 32, offset: 128)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2285, file: !794, line: 452, baseType: !576, size: 32, offset: 160)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2285, file: !794, line: 453, baseType: !2032, size: 96, offset: 192)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2285, file: !794, line: 454, baseType: !576, size: 32, offset: 288)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2285, file: !794, line: 455, baseType: !576, size: 32, offset: 320)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2285, file: !794, line: 456, baseType: !576, size: 32, offset: 352)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2285, file: !794, line: 457, baseType: !576, size: 32, offset: 384)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2285, file: !794, line: 458, baseType: !576, size: 32, offset: 416)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2285, file: !794, line: 459, baseType: !576, size: 32, offset: 448)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2285, file: !794, line: 460, baseType: !576, size: 32, offset: 480)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2285, file: !794, line: 461, baseType: !2043, size: 64, offset: 512)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2285, file: !794, line: 462, baseType: !798, size: 32, offset: 576)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2285, file: !794, line: 463, baseType: !798, size: 32, offset: 608)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2285, file: !794, line: 464, baseType: !2047, size: 128, offset: 640)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2285, file: !794, line: 465, baseType: !2049, size: 160, offset: 768)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2285, file: !794, line: 466, baseType: !2051, size: 160, offset: 928)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2285, file: !794, line: 467, baseType: !576, size: 32, offset: 1088)
!2308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2309, size: 32)
!2309 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !794, line: 426, baseType: !2310)
!2310 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !794, line: 411, size: 28704, elements: !2311)
!2311 = !{!2312, !2313, !2314, !2315, !2316, !2317, !2318, !2319, !2320, !2321, !2322, !2323, !2324}
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2310, file: !794, line: 413, baseType: !1995, size: 256)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2310, file: !794, line: 414, baseType: !1997, size: 768, offset: 256)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2310, file: !794, line: 415, baseType: !1995, size: 256, offset: 1024)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2310, file: !794, line: 416, baseType: !1997, size: 768, offset: 1280)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2310, file: !794, line: 417, baseType: !1995, size: 256, offset: 2048)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2310, file: !794, line: 418, baseType: !1997, size: 768, offset: 2304)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2310, file: !794, line: 419, baseType: !1995, size: 256, offset: 3072)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2310, file: !794, line: 420, baseType: !1997, size: 768, offset: 3328)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2310, file: !794, line: 421, baseType: !1995, size: 256, offset: 4096)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2310, file: !794, line: 422, baseType: !2008, size: 1792, offset: 4352)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2310, file: !794, line: 423, baseType: !2012, size: 1920, offset: 6144)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2310, file: !794, line: 424, baseType: !2017, size: 20608, offset: 8064)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2310, file: !794, line: 425, baseType: !576, size: 32, offset: 28672)
!2325 = !{!2239, !2326, !2448, !2457, !2459, !2462, !2467, !2469, !2474}
!2326 = !DIGlobalVariableExpression(var: !2327, expr: !DIExpression())
!2327 = distinct !DIGlobalVariable(name: "_kernel", scope: !2241, file: !2245, line: 40, type: !2328, isLocal: false, isDefinition: true)
!2328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !363, line: 158, size: 288, elements: !2329)
!2329 = !{!2330, !2443}
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !2328, file: !363, line: 159, baseType: !2331, size: 192)
!2331 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2332, size: 192, elements: !776)
!2332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !363, line: 100, size: 192, elements: !2333)
!2333 = !{!2334, !2335, !2336, !2437, !2438, !2439, !2440}
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2332, file: !363, line: 102, baseType: !113, size: 32)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !2332, file: !363, line: 105, baseType: !443, size: 32, offset: 32)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2332, file: !363, line: 108, baseType: !2337, size: 32, offset: 64)
!2337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2338, size: 32)
!2338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !651, line: 245, size: 1024, elements: !2339)
!2339 = !{!2340, !2398, !2410, !2411, !2412, !2413, !2419, !2432}
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2338, file: !651, line: 247, baseType: !2341, size: 384)
!2341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !651, line: 57, size: 384, elements: !2342)
!2342 = !{!2343, !2367, !2374, !2375, !2376, !2385, !2386, !2387}
!2343 = !DIDerivedType(tag: DW_TAG_member, scope: !2341, file: !651, line: 60, baseType: !2344, size: 64)
!2344 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2341, file: !651, line: 60, size: 64, elements: !2345)
!2345 = !{!2346, !2361}
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2344, file: !651, line: 61, baseType: !2347, size: 64)
!2347 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !367, line: 49, baseType: !2348)
!2348 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !2349)
!2349 = !{!2350, !2356}
!2350 = !DIDerivedType(tag: DW_TAG_member, scope: !2348, file: !367, line: 38, baseType: !2351, size: 32)
!2351 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2348, file: !367, line: 38, size: 32, elements: !2352)
!2352 = !{!2353, !2355}
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2351, file: !367, line: 39, baseType: !2354, size: 32)
!2354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2348, size: 32)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2351, file: !367, line: 40, baseType: !2354, size: 32)
!2356 = !DIDerivedType(tag: DW_TAG_member, scope: !2348, file: !367, line: 42, baseType: !2357, size: 32, offset: 32)
!2357 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2348, file: !367, line: 42, size: 32, elements: !2358)
!2358 = !{!2359, !2360}
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2357, file: !367, line: 43, baseType: !2354, size: 32)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2357, file: !367, line: 44, baseType: !2354, size: 32)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2344, file: !651, line: 62, baseType: !2362, size: 64)
!2362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !676, line: 49, size: 64, elements: !2363)
!2363 = !{!2364}
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2362, file: !676, line: 50, baseType: !2365, size: 64)
!2365 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2366, size: 64, elements: !681)
!2366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2362, size: 32)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2341, file: !651, line: 68, baseType: !2368, size: 32, offset: 64)
!2368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2369, size: 32)
!2369 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !363, line: 233, baseType: !2370)
!2370 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 231, size: 64, elements: !2371)
!2371 = !{!2372}
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2370, file: !363, line: 232, baseType: !2373, size: 64)
!2373 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !2348)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2341, file: !651, line: 71, baseType: !164, size: 8, offset: 96)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2341, file: !651, line: 74, baseType: !164, size: 8, offset: 104)
!2376 = !DIDerivedType(tag: DW_TAG_member, scope: !2341, file: !651, line: 90, baseType: !2377, size: 16, offset: 112)
!2377 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2341, file: !651, line: 90, size: 16, elements: !2378)
!2378 = !{!2379, !2384}
!2379 = !DIDerivedType(tag: DW_TAG_member, scope: !2377, file: !651, line: 91, baseType: !2380, size: 16)
!2380 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2377, file: !651, line: 91, size: 16, elements: !2381)
!2381 = !{!2382, !2383}
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2380, file: !651, line: 96, baseType: !699, size: 8)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2380, file: !651, line: 97, baseType: !164, size: 8, offset: 8)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2377, file: !651, line: 100, baseType: !168, size: 16)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2341, file: !651, line: 107, baseType: !113, size: 32, offset: 128)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2341, file: !651, line: 127, baseType: !104, size: 32, offset: 160)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2341, file: !651, line: 131, baseType: !2388, size: 192, offset: 192)
!2388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !363, line: 244, size: 192, elements: !2389)
!2389 = !{!2390, !2391, !2397}
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2388, file: !363, line: 245, baseType: !2347, size: 64)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2388, file: !363, line: 246, baseType: !2392, size: 32, offset: 64)
!2392 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !363, line: 242, baseType: !2393)
!2393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2394, size: 32)
!2394 = !DISubroutineType(types: !2395)
!2395 = !{null, !2396}
!2396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2388, size: 32)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2388, file: !363, line: 249, baseType: !111, size: 64, offset: 128)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2338, file: !651, line: 250, baseType: !2399, size: 288, offset: 384)
!2399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !718, line: 25, size: 288, elements: !2400)
!2400 = !{!2401, !2402, !2403, !2404, !2405, !2406, !2407, !2408, !2409}
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2399, file: !718, line: 26, baseType: !113, size: 32)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2399, file: !718, line: 27, baseType: !113, size: 32, offset: 32)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2399, file: !718, line: 28, baseType: !113, size: 32, offset: 64)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2399, file: !718, line: 29, baseType: !113, size: 32, offset: 96)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2399, file: !718, line: 30, baseType: !113, size: 32, offset: 128)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2399, file: !718, line: 31, baseType: !113, size: 32, offset: 160)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2399, file: !718, line: 32, baseType: !113, size: 32, offset: 192)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2399, file: !718, line: 33, baseType: !113, size: 32, offset: 224)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2399, file: !718, line: 34, baseType: !113, size: 32, offset: 256)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2338, file: !651, line: 253, baseType: !104, size: 32, offset: 672)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2338, file: !651, line: 256, baseType: !2369, size: 64, offset: 704)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2338, file: !651, line: 294, baseType: !108, size: 32, offset: 768)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2338, file: !651, line: 300, baseType: !2414, size: 96, offset: 800)
!2414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !651, line: 149, size: 96, elements: !2415)
!2415 = !{!2416, !2417, !2418}
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2414, file: !651, line: 153, baseType: !22, size: 32)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2414, file: !651, line: 162, baseType: !439, size: 32, offset: 32)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2414, file: !651, line: 168, baseType: !439, size: 32, offset: 64)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2338, file: !651, line: 325, baseType: !2420, size: 32, offset: 896)
!2420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2421, size: 32)
!2421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !359, line: 5073, size: 160, elements: !2422)
!2422 = !{!2423, !2429, !2430}
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2421, file: !359, line: 5074, baseType: !2424, size: 96)
!2424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !744, line: 56, size: 96, elements: !2425)
!2425 = !{!2426, !2427, !2428}
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2424, file: !744, line: 57, baseType: !747, size: 32)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2424, file: !744, line: 58, baseType: !104, size: 32, offset: 32)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2424, file: !744, line: 59, baseType: !439, size: 32, offset: 64)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2421, file: !359, line: 5075, baseType: !2369, size: 64, offset: 96)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2421, file: !359, line: 5076, baseType: !2431, offset: 160)
!2431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2338, file: !651, line: 343, baseType: !2433, size: 64, offset: 928)
!2433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !718, line: 60, size: 64, elements: !2434)
!2434 = !{!2435, !2436}
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2433, file: !718, line: 63, baseType: !113, size: 32)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2433, file: !718, line: 66, baseType: !113, size: 32, offset: 32)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !2332, file: !363, line: 111, baseType: !2337, size: 32, offset: 96)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !2332, file: !363, line: 124, baseType: !108, size: 32, offset: 128)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2332, file: !363, line: 127, baseType: !164, size: 8, offset: 160)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2332, file: !363, line: 153, baseType: !2441, offset: 168)
!2441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2442, line: 33, elements: !437)
!2442 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !2328, file: !363, line: 170, baseType: !2444, size: 96, offset: 192)
!2444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !363, line: 83, size: 96, elements: !2445)
!2445 = !{!2446, !2447}
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2444, file: !363, line: 86, baseType: !2337, size: 32)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2444, file: !363, line: 90, baseType: !2373, size: 64, offset: 32)
!2448 = !DIGlobalVariableExpression(var: !2449, expr: !DIExpression())
!2449 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !2241, file: !2245, line: 43, type: !2450, isLocal: false, isDefinition: true, align: 512)
!2450 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2451, size: 8704, elements: !2455)
!2451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2452, line: 47, size: 8, elements: !2453)
!2452 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2453 = !{!2454}
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2451, file: !2452, line: 48, baseType: !107, size: 8)
!2455 = !{!2456}
!2456 = !DISubrange(count: 1088)
!2457 = !DIGlobalVariableExpression(var: !2458, expr: !DIExpression())
!2458 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !2241, file: !2245, line: 44, type: !2338, isLocal: false, isDefinition: true)
!2459 = !DIGlobalVariableExpression(var: !2460, expr: !DIExpression())
!2460 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !2241, file: !2245, line: 48, type: !2461, isLocal: false, isDefinition: true)
!2461 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2338, size: 1024, elements: !776)
!2462 = !DIGlobalVariableExpression(var: !2463, expr: !DIExpression())
!2463 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !2241, file: !2245, line: 86, type: !2464, isLocal: false, isDefinition: true, align: 512)
!2464 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2451, size: 16896, elements: !2465)
!2465 = !{!777, !2466}
!2466 = !DISubrange(count: 2112)
!2467 = !DIGlobalVariableExpression(var: !2468, expr: !DIExpression())
!2468 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !2241, file: !2245, line: 217, type: !422, isLocal: false, isDefinition: true)
!2469 = !DIGlobalVariableExpression(var: !2470, expr: !DIExpression())
!2470 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !2241, file: !2245, line: 50, type: !2471, isLocal: true, isDefinition: true, align: 512)
!2471 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2451, size: 3072, elements: !2472)
!2472 = !{!777, !2473}
!2473 = !DISubrange(count: 384)
!2474 = !DIGlobalVariableExpression(var: !2475, expr: !DIExpression())
!2475 = distinct !DIGlobalVariable(name: "levels", scope: !2476, file: !2245, line: 232, type: !2496, isLocal: true, isDefinition: true)
!2476 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !2245, file: !2245, line: 230, type: !2477, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2241, retainedNodes: !2479)
!2477 = !DISubroutineType(types: !2478)
!2478 = !{null, !2244}
!2479 = !{!2480, !2481, !2491, !2495}
!2480 = !DILocalVariable(name: "level", arg: 1, scope: !2476, file: !2245, line: 230, type: !2244)
!2481 = !DILocalVariable(name: "entry", scope: !2476, file: !2245, line: 244, type: !2482)
!2482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2483, size: 32)
!2483 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2484)
!2484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !469, line: 51, size: 64, elements: !2485)
!2485 = !{!2486, !2490}
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2484, file: !469, line: 60, baseType: !2487, size: 32)
!2487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2488, size: 32)
!2488 = !DISubroutineType(types: !2489)
!2489 = !{!108, !2263}
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2484, file: !469, line: 65, baseType: !2263, size: 32, offset: 32)
!2491 = !DILocalVariable(name: "dev", scope: !2492, file: !2245, line: 247, type: !2263)
!2492 = distinct !DILexicalBlock(scope: !2493, file: !2245, line: 246, column: 64)
!2493 = distinct !DILexicalBlock(scope: !2494, file: !2245, line: 246, column: 2)
!2494 = distinct !DILexicalBlock(scope: !2476, file: !2245, line: 246, column: 2)
!2495 = !DILocalVariable(name: "rc", scope: !2492, file: !2245, line: 248, type: !108)
!2496 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2482, size: 192, elements: !2497)
!2497 = !{!2498}
!2498 = !DISubrange(count: 6)
!2499 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2500)
!2500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !254, line: 16, size: 64, elements: !2501)
!2501 = !{!2502, !2503}
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2500, file: !254, line: 17, baseType: !105, size: 32)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2500, file: !254, line: 18, baseType: !164, size: 8, offset: 32)
!2504 = !DIGlobalVariableExpression(var: !2505, expr: !DIExpression())
!2505 = distinct !DIGlobalVariable(name: "states_str", scope: !2506, file: !2507, line: 276, type: !2628, isLocal: true, isDefinition: true)
!2506 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2507, file: !2507, line: 271, type: !2508, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !2619)
!2507 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2508 = !DISubroutineType(types: !2509)
!2509 = !{!105, !2510, !443, !439}
!2510 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !651, line: 347, baseType: !2511)
!2511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2512, size: 32)
!2512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !651, line: 245, size: 1024, elements: !2513)
!2513 = !{!2514, !2572, !2584, !2585, !2586, !2587, !2593, !2606}
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2512, file: !651, line: 247, baseType: !2515, size: 384)
!2515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !651, line: 57, size: 384, elements: !2516)
!2516 = !{!2517, !2541, !2548, !2549, !2550, !2559, !2560, !2561}
!2517 = !DIDerivedType(tag: DW_TAG_member, scope: !2515, file: !651, line: 60, baseType: !2518, size: 64)
!2518 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2515, file: !651, line: 60, size: 64, elements: !2519)
!2519 = !{!2520, !2535}
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2518, file: !651, line: 61, baseType: !2521, size: 64)
!2521 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !367, line: 49, baseType: !2522)
!2522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !2523)
!2523 = !{!2524, !2530}
!2524 = !DIDerivedType(tag: DW_TAG_member, scope: !2522, file: !367, line: 38, baseType: !2525, size: 32)
!2525 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2522, file: !367, line: 38, size: 32, elements: !2526)
!2526 = !{!2527, !2529}
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2525, file: !367, line: 39, baseType: !2528, size: 32)
!2528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2522, size: 32)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2525, file: !367, line: 40, baseType: !2528, size: 32)
!2530 = !DIDerivedType(tag: DW_TAG_member, scope: !2522, file: !367, line: 42, baseType: !2531, size: 32, offset: 32)
!2531 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2522, file: !367, line: 42, size: 32, elements: !2532)
!2532 = !{!2533, !2534}
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2531, file: !367, line: 43, baseType: !2528, size: 32)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2531, file: !367, line: 44, baseType: !2528, size: 32)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2518, file: !651, line: 62, baseType: !2536, size: 64)
!2536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !676, line: 49, size: 64, elements: !2537)
!2537 = !{!2538}
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2536, file: !676, line: 50, baseType: !2539, size: 64)
!2539 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2540, size: 64, elements: !681)
!2540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2536, size: 32)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2515, file: !651, line: 68, baseType: !2542, size: 32, offset: 64)
!2542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2543, size: 32)
!2543 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !363, line: 233, baseType: !2544)
!2544 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 231, size: 64, elements: !2545)
!2545 = !{!2546}
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2544, file: !363, line: 232, baseType: !2547, size: 64)
!2547 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !2522)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2515, file: !651, line: 71, baseType: !164, size: 8, offset: 96)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2515, file: !651, line: 74, baseType: !164, size: 8, offset: 104)
!2550 = !DIDerivedType(tag: DW_TAG_member, scope: !2515, file: !651, line: 90, baseType: !2551, size: 16, offset: 112)
!2551 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2515, file: !651, line: 90, size: 16, elements: !2552)
!2552 = !{!2553, !2558}
!2553 = !DIDerivedType(tag: DW_TAG_member, scope: !2551, file: !651, line: 91, baseType: !2554, size: 16)
!2554 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2551, file: !651, line: 91, size: 16, elements: !2555)
!2555 = !{!2556, !2557}
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2554, file: !651, line: 96, baseType: !699, size: 8)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2554, file: !651, line: 97, baseType: !164, size: 8, offset: 8)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2551, file: !651, line: 100, baseType: !168, size: 16)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2515, file: !651, line: 107, baseType: !113, size: 32, offset: 128)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2515, file: !651, line: 127, baseType: !104, size: 32, offset: 160)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2515, file: !651, line: 131, baseType: !2562, size: 192, offset: 192)
!2562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !363, line: 244, size: 192, elements: !2563)
!2563 = !{!2564, !2565, !2571}
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2562, file: !363, line: 245, baseType: !2521, size: 64)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2562, file: !363, line: 246, baseType: !2566, size: 32, offset: 64)
!2566 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !363, line: 242, baseType: !2567)
!2567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2568, size: 32)
!2568 = !DISubroutineType(types: !2569)
!2569 = !{null, !2570}
!2570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2562, size: 32)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2562, file: !363, line: 249, baseType: !111, size: 64, offset: 128)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2512, file: !651, line: 250, baseType: !2573, size: 288, offset: 384)
!2573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !718, line: 25, size: 288, elements: !2574)
!2574 = !{!2575, !2576, !2577, !2578, !2579, !2580, !2581, !2582, !2583}
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2573, file: !718, line: 26, baseType: !113, size: 32)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2573, file: !718, line: 27, baseType: !113, size: 32, offset: 32)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2573, file: !718, line: 28, baseType: !113, size: 32, offset: 64)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2573, file: !718, line: 29, baseType: !113, size: 32, offset: 96)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2573, file: !718, line: 30, baseType: !113, size: 32, offset: 128)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2573, file: !718, line: 31, baseType: !113, size: 32, offset: 160)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2573, file: !718, line: 32, baseType: !113, size: 32, offset: 192)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2573, file: !718, line: 33, baseType: !113, size: 32, offset: 224)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2573, file: !718, line: 34, baseType: !113, size: 32, offset: 256)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2512, file: !651, line: 253, baseType: !104, size: 32, offset: 672)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2512, file: !651, line: 256, baseType: !2543, size: 64, offset: 704)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2512, file: !651, line: 294, baseType: !108, size: 32, offset: 768)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2512, file: !651, line: 300, baseType: !2588, size: 96, offset: 800)
!2588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !651, line: 149, size: 96, elements: !2589)
!2589 = !{!2590, !2591, !2592}
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2588, file: !651, line: 153, baseType: !22, size: 32)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2588, file: !651, line: 162, baseType: !439, size: 32, offset: 32)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2588, file: !651, line: 168, baseType: !439, size: 32, offset: 64)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2512, file: !651, line: 325, baseType: !2594, size: 32, offset: 896)
!2594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2595, size: 32)
!2595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !359, line: 5073, size: 160, elements: !2596)
!2596 = !{!2597, !2603, !2604}
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2595, file: !359, line: 5074, baseType: !2598, size: 96)
!2598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !744, line: 56, size: 96, elements: !2599)
!2599 = !{!2600, !2601, !2602}
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2598, file: !744, line: 57, baseType: !747, size: 32)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2598, file: !744, line: 58, baseType: !104, size: 32, offset: 32)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2598, file: !744, line: 59, baseType: !439, size: 32, offset: 64)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2595, file: !359, line: 5075, baseType: !2543, size: 64, offset: 96)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2595, file: !359, line: 5076, baseType: !2605, offset: 160)
!2605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2512, file: !651, line: 343, baseType: !2607, size: 64, offset: 928)
!2607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !718, line: 60, size: 64, elements: !2608)
!2608 = !{!2609, !2610}
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2607, file: !718, line: 63, baseType: !113, size: 32)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2607, file: !718, line: 66, baseType: !113, size: 32, offset: 32)
!2611 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2612, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2613, globals: !2615, splitDebugInlining: false, nameTableKind: None)
!2612 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sensor_batch_processing")
!2613 = !{!104, !105, !109, !164, !108, !2614, !24, !439, !443, !22, !113, !114}
!2614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2521, size: 32)
!2615 = !{!2504, !2616}
!2616 = !DIGlobalVariableExpression(var: !2617, expr: !DIExpression())
!2617 = distinct !DIGlobalVariable(name: "states_sz", scope: !2506, file: !2507, line: 279, type: !2618, isLocal: true, isDefinition: true)
!2618 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2174, size: 256, elements: !244)
!2619 = !{!2620, !2621, !2622, !2623, !2624, !2625, !2626}
!2620 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2506, file: !2507, line: 271, type: !2510)
!2621 = !DILocalVariable(name: "buf", arg: 2, scope: !2506, file: !2507, line: 271, type: !443)
!2622 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2506, file: !2507, line: 271, type: !439)
!2623 = !DILocalVariable(name: "off", scope: !2506, file: !2507, line: 273, type: !439)
!2624 = !DILocalVariable(name: "bit", scope: !2506, file: !2507, line: 274, type: !164)
!2625 = !DILocalVariable(name: "thread_state", scope: !2506, file: !2507, line: 275, type: !164)
!2626 = !DILocalVariable(name: "index", scope: !2627, file: !2507, line: 293, type: !164)
!2627 = distinct !DILexicalBlock(scope: !2506, file: !2507, line: 293, column: 2)
!2628 = !DICompositeType(tag: DW_TAG_array_type, baseType: !105, size: 256, elements: !244)
!2629 = !DIGlobalVariableExpression(var: !2630, expr: !DIExpression())
!2630 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2631, file: !2739, line: 56, type: !2728, isLocal: false, isDefinition: true)
!2631 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2632, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2633, globals: !2736, splitDebugInlining: false, nameTableKind: None)
!2632 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sensor_batch_processing")
!2633 = !{!2634, !443, !104, !2734, !209, !109, !220, !108, !113, !114, !2735}
!2634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2635, size: 32)
!2635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !651, line: 245, size: 1024, elements: !2636)
!2636 = !{!2637, !2695, !2707, !2708, !2709, !2710, !2716, !2729}
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2635, file: !651, line: 247, baseType: !2638, size: 384)
!2638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !651, line: 57, size: 384, elements: !2639)
!2639 = !{!2640, !2664, !2671, !2672, !2673, !2682, !2683, !2684}
!2640 = !DIDerivedType(tag: DW_TAG_member, scope: !2638, file: !651, line: 60, baseType: !2641, size: 64)
!2641 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2638, file: !651, line: 60, size: 64, elements: !2642)
!2642 = !{!2643, !2658}
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2641, file: !651, line: 61, baseType: !2644, size: 64)
!2644 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !367, line: 49, baseType: !2645)
!2645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !2646)
!2646 = !{!2647, !2653}
!2647 = !DIDerivedType(tag: DW_TAG_member, scope: !2645, file: !367, line: 38, baseType: !2648, size: 32)
!2648 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2645, file: !367, line: 38, size: 32, elements: !2649)
!2649 = !{!2650, !2652}
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2648, file: !367, line: 39, baseType: !2651, size: 32)
!2651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2645, size: 32)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2648, file: !367, line: 40, baseType: !2651, size: 32)
!2653 = !DIDerivedType(tag: DW_TAG_member, scope: !2645, file: !367, line: 42, baseType: !2654, size: 32, offset: 32)
!2654 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2645, file: !367, line: 42, size: 32, elements: !2655)
!2655 = !{!2656, !2657}
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2654, file: !367, line: 43, baseType: !2651, size: 32)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2654, file: !367, line: 44, baseType: !2651, size: 32)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2641, file: !651, line: 62, baseType: !2659, size: 64)
!2659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !676, line: 49, size: 64, elements: !2660)
!2660 = !{!2661}
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2659, file: !676, line: 50, baseType: !2662, size: 64)
!2662 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2663, size: 64, elements: !681)
!2663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2659, size: 32)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2638, file: !651, line: 68, baseType: !2665, size: 32, offset: 64)
!2665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2666, size: 32)
!2666 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !363, line: 233, baseType: !2667)
!2667 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 231, size: 64, elements: !2668)
!2668 = !{!2669}
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2667, file: !363, line: 232, baseType: !2670, size: 64)
!2670 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !2645)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2638, file: !651, line: 71, baseType: !164, size: 8, offset: 96)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2638, file: !651, line: 74, baseType: !164, size: 8, offset: 104)
!2673 = !DIDerivedType(tag: DW_TAG_member, scope: !2638, file: !651, line: 90, baseType: !2674, size: 16, offset: 112)
!2674 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2638, file: !651, line: 90, size: 16, elements: !2675)
!2675 = !{!2676, !2681}
!2676 = !DIDerivedType(tag: DW_TAG_member, scope: !2674, file: !651, line: 91, baseType: !2677, size: 16)
!2677 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2674, file: !651, line: 91, size: 16, elements: !2678)
!2678 = !{!2679, !2680}
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2677, file: !651, line: 96, baseType: !699, size: 8)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2677, file: !651, line: 97, baseType: !164, size: 8, offset: 8)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2674, file: !651, line: 100, baseType: !168, size: 16)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2638, file: !651, line: 107, baseType: !113, size: 32, offset: 128)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2638, file: !651, line: 127, baseType: !104, size: 32, offset: 160)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2638, file: !651, line: 131, baseType: !2685, size: 192, offset: 192)
!2685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !363, line: 244, size: 192, elements: !2686)
!2686 = !{!2687, !2688, !2694}
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2685, file: !363, line: 245, baseType: !2644, size: 64)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2685, file: !363, line: 246, baseType: !2689, size: 32, offset: 64)
!2689 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !363, line: 242, baseType: !2690)
!2690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2691, size: 32)
!2691 = !DISubroutineType(types: !2692)
!2692 = !{null, !2693}
!2693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2685, size: 32)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2685, file: !363, line: 249, baseType: !111, size: 64, offset: 128)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2635, file: !651, line: 250, baseType: !2696, size: 288, offset: 384)
!2696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !718, line: 25, size: 288, elements: !2697)
!2697 = !{!2698, !2699, !2700, !2701, !2702, !2703, !2704, !2705, !2706}
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2696, file: !718, line: 26, baseType: !113, size: 32)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2696, file: !718, line: 27, baseType: !113, size: 32, offset: 32)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2696, file: !718, line: 28, baseType: !113, size: 32, offset: 64)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2696, file: !718, line: 29, baseType: !113, size: 32, offset: 96)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2696, file: !718, line: 30, baseType: !113, size: 32, offset: 128)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2696, file: !718, line: 31, baseType: !113, size: 32, offset: 160)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2696, file: !718, line: 32, baseType: !113, size: 32, offset: 192)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2696, file: !718, line: 33, baseType: !113, size: 32, offset: 224)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2696, file: !718, line: 34, baseType: !113, size: 32, offset: 256)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2635, file: !651, line: 253, baseType: !104, size: 32, offset: 672)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2635, file: !651, line: 256, baseType: !2666, size: 64, offset: 704)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2635, file: !651, line: 294, baseType: !108, size: 32, offset: 768)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2635, file: !651, line: 300, baseType: !2711, size: 96, offset: 800)
!2711 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !651, line: 149, size: 96, elements: !2712)
!2712 = !{!2713, !2714, !2715}
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2711, file: !651, line: 153, baseType: !22, size: 32)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2711, file: !651, line: 162, baseType: !439, size: 32, offset: 32)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2711, file: !651, line: 168, baseType: !439, size: 32, offset: 64)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2635, file: !651, line: 325, baseType: !2717, size: 32, offset: 896)
!2717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2718, size: 32)
!2718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !359, line: 5073, size: 160, elements: !2719)
!2719 = !{!2720, !2726, !2727}
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2718, file: !359, line: 5074, baseType: !2721, size: 96)
!2721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !744, line: 56, size: 96, elements: !2722)
!2722 = !{!2723, !2724, !2725}
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2721, file: !744, line: 57, baseType: !747, size: 32)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2721, file: !744, line: 58, baseType: !104, size: 32, offset: 32)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2721, file: !744, line: 59, baseType: !439, size: 32, offset: 64)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2718, file: !359, line: 5075, baseType: !2666, size: 64, offset: 96)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2718, file: !359, line: 5076, baseType: !2728, offset: 160)
!2728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2635, file: !651, line: 343, baseType: !2730, size: 64, offset: 928)
!2730 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !718, line: 60, size: 64, elements: !2731)
!2731 = !{!2732, !2733}
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2730, file: !718, line: 63, baseType: !113, size: 32)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2730, file: !718, line: 66, baseType: !113, size: 32, offset: 32)
!2734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2663, size: 32)
!2735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2644, size: 32)
!2736 = !{!2629, !2737, !2740, !2742}
!2737 = !DIGlobalVariableExpression(var: !2738, expr: !DIExpression())
!2738 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2631, file: !2739, line: 404, type: !108, isLocal: true, isDefinition: true)
!2739 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2740 = !DIGlobalVariableExpression(var: !2741, expr: !DIExpression())
!2741 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2631, file: !2739, line: 405, type: !108, isLocal: true, isDefinition: true)
!2742 = !DIGlobalVariableExpression(var: !2743, expr: !DIExpression())
!2743 = distinct !DIGlobalVariable(name: "pending_current", scope: !2631, file: !2739, line: 425, type: !2634, isLocal: true, isDefinition: true)
!2744 = !DIGlobalVariableExpression(var: !2745, expr: !DIExpression())
!2745 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2746, file: !2776, line: 15, type: !114, isLocal: true, isDefinition: true)
!2746 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2747, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2748, globals: !2773, splitDebugInlining: false, nameTableKind: None)
!2747 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sensor_batch_processing")
!2748 = !{!109, !104, !220, !113, !114, !108, !2749, !443, !111}
!2749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2750, size: 32)
!2750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !363, line: 244, size: 192, elements: !2751)
!2751 = !{!2752, !2767, !2772}
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2750, file: !363, line: 245, baseType: !2753, size: 64)
!2753 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !367, line: 49, baseType: !2754)
!2754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !2755)
!2755 = !{!2756, !2762}
!2756 = !DIDerivedType(tag: DW_TAG_member, scope: !2754, file: !367, line: 38, baseType: !2757, size: 32)
!2757 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2754, file: !367, line: 38, size: 32, elements: !2758)
!2758 = !{!2759, !2761}
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2757, file: !367, line: 39, baseType: !2760, size: 32)
!2760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2754, size: 32)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2757, file: !367, line: 40, baseType: !2760, size: 32)
!2762 = !DIDerivedType(tag: DW_TAG_member, scope: !2754, file: !367, line: 42, baseType: !2763, size: 32, offset: 32)
!2763 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2754, file: !367, line: 42, size: 32, elements: !2764)
!2764 = !{!2765, !2766}
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2763, file: !367, line: 43, baseType: !2760, size: 32)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2763, file: !367, line: 44, baseType: !2760, size: 32)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2750, file: !363, line: 246, baseType: !2768, size: 32, offset: 64)
!2768 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !363, line: 242, baseType: !2769)
!2769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2770, size: 32)
!2770 = !DISubroutineType(types: !2771)
!2771 = !{null, !2749}
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2750, file: !363, line: 249, baseType: !111, size: 64, offset: 128)
!2773 = !{!2744, !2774, !2778, !2780}
!2774 = !DIGlobalVariableExpression(var: !2775, expr: !DIExpression())
!2775 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2746, file: !2776, line: 19, type: !2777, isLocal: true, isDefinition: true)
!2776 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2777 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!2778 = !DIGlobalVariableExpression(var: !2779, expr: !DIExpression())
!2779 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2746, file: !2776, line: 25, type: !108, isLocal: true, isDefinition: true)
!2780 = !DIGlobalVariableExpression(var: !2781, expr: !DIExpression())
!2781 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2746, file: !2776, line: 17, type: !2782, isLocal: true, isDefinition: true)
!2782 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !2754)
!2783 = !DIGlobalVariableExpression(var: !2784, expr: !DIExpression())
!2784 = distinct !DIGlobalVariable(name: "lock", scope: !2785, file: !2907, line: 16, type: !2899, isLocal: true, isDefinition: true)
!2785 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2786, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2787, globals: !2906, splitDebugInlining: false, nameTableKind: None)
!2786 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timer.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sensor_batch_processing")
!2787 = !{!2788, !443, !109, !104, !108, !2834, !2905}
!2788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2789, size: 32)
!2789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_timer", file: !359, line: 1318, size: 448, elements: !2790)
!2790 = !{!2791, !2816, !2822, !2826, !2827, !2832, !2833}
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2789, file: !359, line: 1324, baseType: !2792, size: 192)
!2792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !363, line: 244, size: 192, elements: !2793)
!2793 = !{!2794, !2809, !2815}
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2792, file: !363, line: 245, baseType: !2795, size: 64)
!2795 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !367, line: 49, baseType: !2796)
!2796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !2797)
!2797 = !{!2798, !2804}
!2798 = !DIDerivedType(tag: DW_TAG_member, scope: !2796, file: !367, line: 38, baseType: !2799, size: 32)
!2799 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2796, file: !367, line: 38, size: 32, elements: !2800)
!2800 = !{!2801, !2803}
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2799, file: !367, line: 39, baseType: !2802, size: 32)
!2802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2796, size: 32)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2799, file: !367, line: 40, baseType: !2802, size: 32)
!2804 = !DIDerivedType(tag: DW_TAG_member, scope: !2796, file: !367, line: 42, baseType: !2805, size: 32, offset: 32)
!2805 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2796, file: !367, line: 42, size: 32, elements: !2806)
!2806 = !{!2807, !2808}
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2805, file: !367, line: 43, baseType: !2802, size: 32)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2805, file: !367, line: 44, baseType: !2802, size: 32)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2792, file: !363, line: 246, baseType: !2810, size: 32, offset: 64)
!2810 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !363, line: 242, baseType: !2811)
!2811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2812, size: 32)
!2812 = !DISubroutineType(types: !2813)
!2813 = !{null, !2814}
!2814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2792, size: 32)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2792, file: !363, line: 249, baseType: !111, size: 64, offset: 128)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2789, file: !359, line: 1327, baseType: !2817, size: 64, offset: 192)
!2817 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !363, line: 233, baseType: !2818)
!2818 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 231, size: 64, elements: !2819)
!2819 = !{!2820}
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2818, file: !363, line: 232, baseType: !2821, size: 64)
!2821 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !2796)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_fn", scope: !2789, file: !359, line: 1330, baseType: !2823, size: 32, offset: 256)
!2823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2824, size: 32)
!2824 = !DISubroutineType(types: !2825)
!2825 = !{null, !2788}
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "stop_fn", scope: !2789, file: !359, line: 1333, baseType: !2823, size: 32, offset: 288)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !2789, file: !359, line: 1336, baseType: !2828, size: 64, offset: 320)
!2828 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !110, line: 67, baseType: !2829)
!2829 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !110, line: 65, size: 64, elements: !2830)
!2830 = !{!2831}
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !2829, file: !110, line: 66, baseType: !109, size: 64)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2789, file: !359, line: 1339, baseType: !113, size: 32, offset: 384)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !2789, file: !359, line: 1342, baseType: !104, size: 32, offset: 416)
!2834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2835, size: 32)
!2835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !651, line: 245, size: 1024, elements: !2836)
!2836 = !{!2837, !2866, !2878, !2879, !2880, !2881, !2887, !2900}
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2835, file: !651, line: 247, baseType: !2838, size: 384)
!2838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !651, line: 57, size: 384, elements: !2839)
!2839 = !{!2840, !2850, !2852, !2853, !2854, !2863, !2864, !2865}
!2840 = !DIDerivedType(tag: DW_TAG_member, scope: !2838, file: !651, line: 60, baseType: !2841, size: 64)
!2841 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2838, file: !651, line: 60, size: 64, elements: !2842)
!2842 = !{!2843, !2844}
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2841, file: !651, line: 61, baseType: !2795, size: 64)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2841, file: !651, line: 62, baseType: !2845, size: 64)
!2845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !676, line: 49, size: 64, elements: !2846)
!2846 = !{!2847}
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2845, file: !676, line: 50, baseType: !2848, size: 64)
!2848 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2849, size: 64, elements: !681)
!2849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2845, size: 32)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2838, file: !651, line: 68, baseType: !2851, size: 32, offset: 64)
!2851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2817, size: 32)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2838, file: !651, line: 71, baseType: !164, size: 8, offset: 96)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2838, file: !651, line: 74, baseType: !164, size: 8, offset: 104)
!2854 = !DIDerivedType(tag: DW_TAG_member, scope: !2838, file: !651, line: 90, baseType: !2855, size: 16, offset: 112)
!2855 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2838, file: !651, line: 90, size: 16, elements: !2856)
!2856 = !{!2857, !2862}
!2857 = !DIDerivedType(tag: DW_TAG_member, scope: !2855, file: !651, line: 91, baseType: !2858, size: 16)
!2858 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2855, file: !651, line: 91, size: 16, elements: !2859)
!2859 = !{!2860, !2861}
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2858, file: !651, line: 96, baseType: !699, size: 8)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2858, file: !651, line: 97, baseType: !164, size: 8, offset: 8)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2855, file: !651, line: 100, baseType: !168, size: 16)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2838, file: !651, line: 107, baseType: !113, size: 32, offset: 128)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2838, file: !651, line: 127, baseType: !104, size: 32, offset: 160)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2838, file: !651, line: 131, baseType: !2792, size: 192, offset: 192)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2835, file: !651, line: 250, baseType: !2867, size: 288, offset: 384)
!2867 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !718, line: 25, size: 288, elements: !2868)
!2868 = !{!2869, !2870, !2871, !2872, !2873, !2874, !2875, !2876, !2877}
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2867, file: !718, line: 26, baseType: !113, size: 32)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2867, file: !718, line: 27, baseType: !113, size: 32, offset: 32)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2867, file: !718, line: 28, baseType: !113, size: 32, offset: 64)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2867, file: !718, line: 29, baseType: !113, size: 32, offset: 96)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2867, file: !718, line: 30, baseType: !113, size: 32, offset: 128)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2867, file: !718, line: 31, baseType: !113, size: 32, offset: 160)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2867, file: !718, line: 32, baseType: !113, size: 32, offset: 192)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2867, file: !718, line: 33, baseType: !113, size: 32, offset: 224)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2867, file: !718, line: 34, baseType: !113, size: 32, offset: 256)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2835, file: !651, line: 253, baseType: !104, size: 32, offset: 672)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2835, file: !651, line: 256, baseType: !2817, size: 64, offset: 704)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2835, file: !651, line: 294, baseType: !108, size: 32, offset: 768)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2835, file: !651, line: 300, baseType: !2882, size: 96, offset: 800)
!2882 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !651, line: 149, size: 96, elements: !2883)
!2883 = !{!2884, !2885, !2886}
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2882, file: !651, line: 153, baseType: !22, size: 32)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2882, file: !651, line: 162, baseType: !439, size: 32, offset: 32)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2882, file: !651, line: 168, baseType: !439, size: 32, offset: 64)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2835, file: !651, line: 325, baseType: !2888, size: 32, offset: 896)
!2888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2889, size: 32)
!2889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !359, line: 5073, size: 160, elements: !2890)
!2890 = !{!2891, !2897, !2898}
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2889, file: !359, line: 5074, baseType: !2892, size: 96)
!2892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !744, line: 56, size: 96, elements: !2893)
!2893 = !{!2894, !2895, !2896}
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2892, file: !744, line: 57, baseType: !747, size: 32)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2892, file: !744, line: 58, baseType: !104, size: 32, offset: 32)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2892, file: !744, line: 59, baseType: !439, size: 32, offset: 64)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2889, file: !359, line: 5075, baseType: !2817, size: 64, offset: 96)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2889, file: !359, line: 5076, baseType: !2899, offset: 160)
!2899 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2835, file: !651, line: 343, baseType: !2901, size: 64, offset: 928)
!2901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !718, line: 60, size: 64, elements: !2902)
!2902 = !{!2903, !2904}
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2901, file: !718, line: 63, baseType: !113, size: 32)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2901, file: !718, line: 66, baseType: !113, size: 32, offset: 32)
!2905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2795, size: 32)
!2906 = !{!2783}
!2907 = !DIFile(filename: "zephyr/kernel/timer.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2908 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2909, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !559, splitDebugInlining: false, nameTableKind: None)
!2909 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sensor_batch_processing")
!2910 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2911, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !559, splitDebugInlining: false, nameTableKind: None)
!2911 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sensor_batch_processing")
!2912 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2913, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2914, retainedTypes: !2934, splitDebugInlining: false, nameTableKind: None)
!2913 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sensor_batch_processing")
!2914 = !{!2915, !2923}
!2915 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2916, line: 69, baseType: !32, size: 32, elements: !2917)
!2916 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2917 = !{!2918, !2919, !2920, !2921, !2922}
!2918 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2919 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2920 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2921 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2922 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2923 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2916, line: 56, baseType: !32, size: 32, elements: !2924)
!2924 = !{!2925, !2926, !2927, !2928, !2929, !2930, !2931, !2932, !2933}
!2925 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2926 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2927 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2928 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2929 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2930 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2931 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2932 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2933 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2934 = !{!108, !2915, !2923, !2935, !700, !429, !2937, !2938, !165, !169, !105, !439, !104, !22, !32, !544, !2940, !2941, !144, !545, !112, !546, !2936, !2942, !2943, !2944, !2945}
!2935 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2916, line: 31, baseType: !2936)
!2936 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !112)
!2937 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !440, line: 329, baseType: !32)
!2938 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2916, line: 32, baseType: !2939)
!2939 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !115)
!2940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !700, size: 32)
!2941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !429, size: 32)
!2942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2936, size: 32)
!2943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !439, size: 32)
!2944 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !440, line: 145, baseType: !108)
!2945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2944, size: 32)
!2946 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2947, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2947 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sensor_batch_processing/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sensor_batch_processing")
!2948 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2949, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2950, splitDebugInlining: false, nameTableKind: None)
!2949 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sensor_batch_processing")
!2950 = !{!105, !165, !108, !32}
!2951 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2952, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2953, retainedTypes: !559, splitDebugInlining: false, nameTableKind: None)
!2952 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sensor_batch_processing")
!2953 = !{!2954, !30}
!2954 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2955, line: 27, baseType: !32, size: 32, elements: !2956)
!2955 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2956 = !{!2957, !2958, !2959, !2960, !2961}
!2957 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2958 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2959 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2960 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2961 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2962 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2963, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2964, retainedTypes: !2965, splitDebugInlining: false, nameTableKind: None)
!2963 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sensor_batch_processing")
!2964 = !{!991, !2954, !30}
!2965 = !{!1183, !2966, !104, !108, !220, !113, !164, !2983}
!2966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2967, size: 32)
!2967 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !794, line: 426, baseType: !2968)
!2968 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !794, line: 411, size: 28704, elements: !2969)
!2969 = !{!2970, !2971, !2972, !2973, !2974, !2975, !2976, !2977, !2978, !2979, !2980, !2981, !2982}
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2968, file: !794, line: 413, baseType: !1995, size: 256)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2968, file: !794, line: 414, baseType: !1997, size: 768, offset: 256)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2968, file: !794, line: 415, baseType: !1995, size: 256, offset: 1024)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2968, file: !794, line: 416, baseType: !1997, size: 768, offset: 1280)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2968, file: !794, line: 417, baseType: !1995, size: 256, offset: 2048)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2968, file: !794, line: 418, baseType: !1997, size: 768, offset: 2304)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2968, file: !794, line: 419, baseType: !1995, size: 256, offset: 3072)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2968, file: !794, line: 420, baseType: !1997, size: 768, offset: 3328)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2968, file: !794, line: 421, baseType: !1995, size: 256, offset: 4096)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2968, file: !794, line: 422, baseType: !2008, size: 1792, offset: 4352)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2968, file: !794, line: 423, baseType: !2012, size: 1920, offset: 6144)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2968, file: !794, line: 424, baseType: !2017, size: 20608, offset: 8064)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2968, file: !794, line: 425, baseType: !576, size: 32, offset: 28672)
!2983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2984, size: 32)
!2984 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !794, line: 468, baseType: !2985)
!2985 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !794, line: 445, size: 1120, elements: !2986)
!2986 = !{!2987, !2988, !2989, !2990, !2991, !2992, !2993, !2994, !2995, !2996, !2997, !2998, !2999, !3000, !3001, !3002, !3003, !3004, !3005, !3006, !3007}
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2985, file: !794, line: 447, baseType: !798, size: 32)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2985, file: !794, line: 448, baseType: !576, size: 32, offset: 32)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2985, file: !794, line: 449, baseType: !576, size: 32, offset: 64)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2985, file: !794, line: 450, baseType: !576, size: 32, offset: 96)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2985, file: !794, line: 451, baseType: !576, size: 32, offset: 128)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2985, file: !794, line: 452, baseType: !576, size: 32, offset: 160)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2985, file: !794, line: 453, baseType: !2032, size: 96, offset: 192)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2985, file: !794, line: 454, baseType: !576, size: 32, offset: 288)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2985, file: !794, line: 455, baseType: !576, size: 32, offset: 320)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2985, file: !794, line: 456, baseType: !576, size: 32, offset: 352)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2985, file: !794, line: 457, baseType: !576, size: 32, offset: 384)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2985, file: !794, line: 458, baseType: !576, size: 32, offset: 416)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2985, file: !794, line: 459, baseType: !576, size: 32, offset: 448)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2985, file: !794, line: 460, baseType: !576, size: 32, offset: 480)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2985, file: !794, line: 461, baseType: !2043, size: 64, offset: 512)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2985, file: !794, line: 462, baseType: !798, size: 32, offset: 576)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2985, file: !794, line: 463, baseType: !798, size: 32, offset: 608)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2985, file: !794, line: 464, baseType: !2047, size: 128, offset: 640)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2985, file: !794, line: 465, baseType: !2049, size: 160, offset: 768)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2985, file: !794, line: 466, baseType: !2051, size: 160, offset: 928)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2985, file: !794, line: 467, baseType: !576, size: 32, offset: 1088)
!3008 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3009, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !559, splitDebugInlining: false, nameTableKind: None)
!3009 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sensor_batch_processing")
!3010 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3011, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3012, splitDebugInlining: false, nameTableKind: None)
!3011 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sensor_batch_processing")
!3012 = !{!104, !108, !22, !3013}
!3013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3014, size: 32)
!3014 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !794, line: 468, baseType: !3015)
!3015 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !794, line: 445, size: 1120, elements: !3016)
!3016 = !{!3017, !3018, !3019, !3020, !3021, !3022, !3023, !3024, !3025, !3026, !3027, !3028, !3029, !3030, !3031, !3032, !3033, !3034, !3035, !3036, !3037}
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3015, file: !794, line: 447, baseType: !798, size: 32)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3015, file: !794, line: 448, baseType: !576, size: 32, offset: 32)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3015, file: !794, line: 449, baseType: !576, size: 32, offset: 64)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3015, file: !794, line: 450, baseType: !576, size: 32, offset: 96)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3015, file: !794, line: 451, baseType: !576, size: 32, offset: 128)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3015, file: !794, line: 452, baseType: !576, size: 32, offset: 160)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3015, file: !794, line: 453, baseType: !2032, size: 96, offset: 192)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3015, file: !794, line: 454, baseType: !576, size: 32, offset: 288)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3015, file: !794, line: 455, baseType: !576, size: 32, offset: 320)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3015, file: !794, line: 456, baseType: !576, size: 32, offset: 352)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3015, file: !794, line: 457, baseType: !576, size: 32, offset: 384)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3015, file: !794, line: 458, baseType: !576, size: 32, offset: 416)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3015, file: !794, line: 459, baseType: !576, size: 32, offset: 448)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3015, file: !794, line: 460, baseType: !576, size: 32, offset: 480)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3015, file: !794, line: 461, baseType: !2043, size: 64, offset: 512)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3015, file: !794, line: 462, baseType: !798, size: 32, offset: 576)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3015, file: !794, line: 463, baseType: !798, size: 32, offset: 608)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3015, file: !794, line: 464, baseType: !2047, size: 128, offset: 640)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3015, file: !794, line: 465, baseType: !2049, size: 160, offset: 768)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3015, file: !794, line: 466, baseType: !2051, size: 160, offset: 928)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3015, file: !794, line: 467, baseType: !576, size: 32, offset: 1088)
!3038 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3039, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3040, splitDebugInlining: false, nameTableKind: None)
!3039 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sensor_batch_processing")
!3040 = !{!3041, !104, !108}
!3041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3042, size: 32)
!3042 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !794, line: 468, baseType: !3043)
!3043 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !794, line: 445, size: 1120, elements: !3044)
!3044 = !{!3045, !3046, !3047, !3048, !3049, !3050, !3051, !3052, !3053, !3054, !3055, !3056, !3057, !3058, !3059, !3060, !3061, !3062, !3063, !3064, !3065}
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3043, file: !794, line: 447, baseType: !798, size: 32)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3043, file: !794, line: 448, baseType: !576, size: 32, offset: 32)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3043, file: !794, line: 449, baseType: !576, size: 32, offset: 64)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3043, file: !794, line: 450, baseType: !576, size: 32, offset: 96)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3043, file: !794, line: 451, baseType: !576, size: 32, offset: 128)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3043, file: !794, line: 452, baseType: !576, size: 32, offset: 160)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3043, file: !794, line: 453, baseType: !2032, size: 96, offset: 192)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3043, file: !794, line: 454, baseType: !576, size: 32, offset: 288)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3043, file: !794, line: 455, baseType: !576, size: 32, offset: 320)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3043, file: !794, line: 456, baseType: !576, size: 32, offset: 352)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3043, file: !794, line: 457, baseType: !576, size: 32, offset: 384)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3043, file: !794, line: 458, baseType: !576, size: 32, offset: 416)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3043, file: !794, line: 459, baseType: !576, size: 32, offset: 448)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3043, file: !794, line: 460, baseType: !576, size: 32, offset: 480)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3043, file: !794, line: 461, baseType: !2043, size: 64, offset: 512)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3043, file: !794, line: 462, baseType: !798, size: 32, offset: 576)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3043, file: !794, line: 463, baseType: !798, size: 32, offset: 608)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3043, file: !794, line: 464, baseType: !2047, size: 128, offset: 640)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3043, file: !794, line: 465, baseType: !2049, size: 160, offset: 768)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3043, file: !794, line: 466, baseType: !2051, size: 160, offset: 928)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3043, file: !794, line: 467, baseType: !576, size: 32, offset: 1088)
!3066 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3067, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3068, splitDebugInlining: false, nameTableKind: None)
!3067 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sensor_batch_processing")
!3068 = !{!3069, !113, !104, !108}
!3069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3070, size: 32)
!3070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !3071, line: 98, size: 256, elements: !3072)
!3071 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3072 = !{!3073, !3078, !3083, !3088, !3093, !3098, !3103, !3108}
!3073 = !DIDerivedType(tag: DW_TAG_member, scope: !3070, file: !3071, line: 99, baseType: !3074, size: 32)
!3074 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3070, file: !3071, line: 99, size: 32, elements: !3075)
!3075 = !{!3076, !3077}
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !3074, file: !3071, line: 99, baseType: !113, size: 32)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !3074, file: !3071, line: 99, baseType: !113, size: 32)
!3078 = !DIDerivedType(tag: DW_TAG_member, scope: !3070, file: !3071, line: 100, baseType: !3079, size: 32, offset: 32)
!3079 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3070, file: !3071, line: 100, size: 32, elements: !3080)
!3080 = !{!3081, !3082}
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !3079, file: !3071, line: 100, baseType: !113, size: 32)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !3079, file: !3071, line: 100, baseType: !113, size: 32)
!3083 = !DIDerivedType(tag: DW_TAG_member, scope: !3070, file: !3071, line: 101, baseType: !3084, size: 32, offset: 64)
!3084 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3070, file: !3071, line: 101, size: 32, elements: !3085)
!3085 = !{!3086, !3087}
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !3084, file: !3071, line: 101, baseType: !113, size: 32)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !3084, file: !3071, line: 101, baseType: !113, size: 32)
!3088 = !DIDerivedType(tag: DW_TAG_member, scope: !3070, file: !3071, line: 102, baseType: !3089, size: 32, offset: 96)
!3089 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3070, file: !3071, line: 102, size: 32, elements: !3090)
!3090 = !{!3091, !3092}
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !3089, file: !3071, line: 102, baseType: !113, size: 32)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !3089, file: !3071, line: 102, baseType: !113, size: 32)
!3093 = !DIDerivedType(tag: DW_TAG_member, scope: !3070, file: !3071, line: 103, baseType: !3094, size: 32, offset: 128)
!3094 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3070, file: !3071, line: 103, size: 32, elements: !3095)
!3095 = !{!3096, !3097}
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !3094, file: !3071, line: 103, baseType: !113, size: 32)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !3094, file: !3071, line: 103, baseType: !113, size: 32)
!3098 = !DIDerivedType(tag: DW_TAG_member, scope: !3070, file: !3071, line: 104, baseType: !3099, size: 32, offset: 160)
!3099 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3070, file: !3071, line: 104, size: 32, elements: !3100)
!3100 = !{!3101, !3102}
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !3099, file: !3071, line: 104, baseType: !113, size: 32)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !3099, file: !3071, line: 104, baseType: !113, size: 32)
!3103 = !DIDerivedType(tag: DW_TAG_member, scope: !3070, file: !3071, line: 105, baseType: !3104, size: 32, offset: 192)
!3104 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3070, file: !3071, line: 105, size: 32, elements: !3105)
!3105 = !{!3106, !3107}
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !3104, file: !3071, line: 105, baseType: !113, size: 32)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !3104, file: !3071, line: 105, baseType: !113, size: 32)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !3070, file: !3071, line: 106, baseType: !113, size: 32, offset: 224)
!3109 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3110, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2953, retainedTypes: !3111, splitDebugInlining: false, nameTableKind: None)
!3110 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sensor_batch_processing")
!3111 = !{!3112, !104, !108, !3137, !3180, !113}
!3112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3113, size: 32)
!3113 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !794, line: 468, baseType: !3114)
!3114 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !794, line: 445, size: 1120, elements: !3115)
!3115 = !{!3116, !3117, !3118, !3119, !3120, !3121, !3122, !3123, !3124, !3125, !3126, !3127, !3128, !3129, !3130, !3131, !3132, !3133, !3134, !3135, !3136}
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3114, file: !794, line: 447, baseType: !798, size: 32)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3114, file: !794, line: 448, baseType: !576, size: 32, offset: 32)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3114, file: !794, line: 449, baseType: !576, size: 32, offset: 64)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3114, file: !794, line: 450, baseType: !576, size: 32, offset: 96)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3114, file: !794, line: 451, baseType: !576, size: 32, offset: 128)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3114, file: !794, line: 452, baseType: !576, size: 32, offset: 160)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3114, file: !794, line: 453, baseType: !2032, size: 96, offset: 192)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3114, file: !794, line: 454, baseType: !576, size: 32, offset: 288)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3114, file: !794, line: 455, baseType: !576, size: 32, offset: 320)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3114, file: !794, line: 456, baseType: !576, size: 32, offset: 352)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3114, file: !794, line: 457, baseType: !576, size: 32, offset: 384)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3114, file: !794, line: 458, baseType: !576, size: 32, offset: 416)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3114, file: !794, line: 459, baseType: !576, size: 32, offset: 448)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3114, file: !794, line: 460, baseType: !576, size: 32, offset: 480)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3114, file: !794, line: 461, baseType: !2043, size: 64, offset: 512)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3114, file: !794, line: 462, baseType: !798, size: 32, offset: 576)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3114, file: !794, line: 463, baseType: !798, size: 32, offset: 608)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3114, file: !794, line: 464, baseType: !2047, size: 128, offset: 640)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3114, file: !794, line: 465, baseType: !2049, size: 160, offset: 768)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3114, file: !794, line: 466, baseType: !2051, size: 160, offset: 928)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3114, file: !794, line: 467, baseType: !576, size: 32, offset: 1088)
!3137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3138, size: 32)
!3138 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !3071, line: 141, baseType: !3139)
!3139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !3071, line: 97, size: 256, elements: !3140)
!3140 = !{!3141}
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !3139, file: !3071, line: 107, baseType: !3142, size: 256)
!3142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !3071, line: 98, size: 256, elements: !3143)
!3143 = !{!3144, !3149, !3154, !3159, !3164, !3169, !3174, !3179}
!3144 = !DIDerivedType(tag: DW_TAG_member, scope: !3142, file: !3071, line: 99, baseType: !3145, size: 32)
!3145 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3142, file: !3071, line: 99, size: 32, elements: !3146)
!3146 = !{!3147, !3148}
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !3145, file: !3071, line: 99, baseType: !113, size: 32)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !3145, file: !3071, line: 99, baseType: !113, size: 32)
!3149 = !DIDerivedType(tag: DW_TAG_member, scope: !3142, file: !3071, line: 100, baseType: !3150, size: 32, offset: 32)
!3150 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3142, file: !3071, line: 100, size: 32, elements: !3151)
!3151 = !{!3152, !3153}
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !3150, file: !3071, line: 100, baseType: !113, size: 32)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !3150, file: !3071, line: 100, baseType: !113, size: 32)
!3154 = !DIDerivedType(tag: DW_TAG_member, scope: !3142, file: !3071, line: 101, baseType: !3155, size: 32, offset: 64)
!3155 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3142, file: !3071, line: 101, size: 32, elements: !3156)
!3156 = !{!3157, !3158}
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !3155, file: !3071, line: 101, baseType: !113, size: 32)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !3155, file: !3071, line: 101, baseType: !113, size: 32)
!3159 = !DIDerivedType(tag: DW_TAG_member, scope: !3142, file: !3071, line: 102, baseType: !3160, size: 32, offset: 96)
!3160 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3142, file: !3071, line: 102, size: 32, elements: !3161)
!3161 = !{!3162, !3163}
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !3160, file: !3071, line: 102, baseType: !113, size: 32)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !3160, file: !3071, line: 102, baseType: !113, size: 32)
!3164 = !DIDerivedType(tag: DW_TAG_member, scope: !3142, file: !3071, line: 103, baseType: !3165, size: 32, offset: 128)
!3165 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3142, file: !3071, line: 103, size: 32, elements: !3166)
!3166 = !{!3167, !3168}
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !3165, file: !3071, line: 103, baseType: !113, size: 32)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !3165, file: !3071, line: 103, baseType: !113, size: 32)
!3169 = !DIDerivedType(tag: DW_TAG_member, scope: !3142, file: !3071, line: 104, baseType: !3170, size: 32, offset: 160)
!3170 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3142, file: !3071, line: 104, size: 32, elements: !3171)
!3171 = !{!3172, !3173}
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !3170, file: !3071, line: 104, baseType: !113, size: 32)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !3170, file: !3071, line: 104, baseType: !113, size: 32)
!3174 = !DIDerivedType(tag: DW_TAG_member, scope: !3142, file: !3071, line: 105, baseType: !3175, size: 32, offset: 192)
!3175 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3142, file: !3071, line: 105, size: 32, elements: !3176)
!3176 = !{!3177, !3178}
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !3175, file: !3071, line: 105, baseType: !113, size: 32)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !3175, file: !3071, line: 105, baseType: !113, size: 32)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !3142, file: !3071, line: 106, baseType: !113, size: 32, offset: 224)
!3180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !168, size: 32)
!3181 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3182, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1980, retainedTypes: !3183, splitDebugInlining: false, nameTableKind: None)
!3182 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sensor_batch_processing")
!3183 = !{!1183, !220, !164, !113, !3184, !3201}
!3184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3185, size: 32)
!3185 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !794, line: 426, baseType: !3186)
!3186 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !794, line: 411, size: 28704, elements: !3187)
!3187 = !{!3188, !3189, !3190, !3191, !3192, !3193, !3194, !3195, !3196, !3197, !3198, !3199, !3200}
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !3186, file: !794, line: 413, baseType: !1995, size: 256)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3186, file: !794, line: 414, baseType: !1997, size: 768, offset: 256)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !3186, file: !794, line: 415, baseType: !1995, size: 256, offset: 1024)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3186, file: !794, line: 416, baseType: !1997, size: 768, offset: 1280)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !3186, file: !794, line: 417, baseType: !1995, size: 256, offset: 2048)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3186, file: !794, line: 418, baseType: !1997, size: 768, offset: 2304)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !3186, file: !794, line: 419, baseType: !1995, size: 256, offset: 3072)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3186, file: !794, line: 420, baseType: !1997, size: 768, offset: 3328)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !3186, file: !794, line: 421, baseType: !1995, size: 256, offset: 4096)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3186, file: !794, line: 422, baseType: !2008, size: 1792, offset: 4352)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !3186, file: !794, line: 423, baseType: !2012, size: 1920, offset: 6144)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3186, file: !794, line: 424, baseType: !2017, size: 20608, offset: 8064)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !3186, file: !794, line: 425, baseType: !576, size: 32, offset: 28672)
!3201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3202, size: 32)
!3202 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !794, line: 468, baseType: !3203)
!3203 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !794, line: 445, size: 1120, elements: !3204)
!3204 = !{!3205, !3206, !3207, !3208, !3209, !3210, !3211, !3212, !3213, !3214, !3215, !3216, !3217, !3218, !3219, !3220, !3221, !3222, !3223, !3224, !3225}
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3203, file: !794, line: 447, baseType: !798, size: 32)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3203, file: !794, line: 448, baseType: !576, size: 32, offset: 32)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3203, file: !794, line: 449, baseType: !576, size: 32, offset: 64)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3203, file: !794, line: 450, baseType: !576, size: 32, offset: 96)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3203, file: !794, line: 451, baseType: !576, size: 32, offset: 128)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3203, file: !794, line: 452, baseType: !576, size: 32, offset: 160)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3203, file: !794, line: 453, baseType: !2032, size: 96, offset: 192)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3203, file: !794, line: 454, baseType: !576, size: 32, offset: 288)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3203, file: !794, line: 455, baseType: !576, size: 32, offset: 320)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3203, file: !794, line: 456, baseType: !576, size: 32, offset: 352)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3203, file: !794, line: 457, baseType: !576, size: 32, offset: 384)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3203, file: !794, line: 458, baseType: !576, size: 32, offset: 416)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3203, file: !794, line: 459, baseType: !576, size: 32, offset: 448)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3203, file: !794, line: 460, baseType: !576, size: 32, offset: 480)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3203, file: !794, line: 461, baseType: !2043, size: 64, offset: 512)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3203, file: !794, line: 462, baseType: !798, size: 32, offset: 576)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3203, file: !794, line: 463, baseType: !798, size: 32, offset: 608)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3203, file: !794, line: 464, baseType: !2047, size: 128, offset: 640)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3203, file: !794, line: 465, baseType: !2049, size: 160, offset: 768)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3203, file: !794, line: 466, baseType: !2051, size: 160, offset: 928)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3203, file: !794, line: 467, baseType: !576, size: 32, offset: 1088)
!3226 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3227, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3228, splitDebugInlining: false, nameTableKind: None)
!3227 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sensor_batch_processing")
!3228 = !{!3229, !104, !108}
!3229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3230, size: 32)
!3230 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !794, line: 468, baseType: !3231)
!3231 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !794, line: 445, size: 1120, elements: !3232)
!3232 = !{!3233, !3234, !3235, !3236, !3237, !3238, !3239, !3240, !3241, !3242, !3243, !3244, !3245, !3246, !3247, !3248, !3249, !3250, !3251, !3252, !3253}
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3231, file: !794, line: 447, baseType: !798, size: 32)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3231, file: !794, line: 448, baseType: !576, size: 32, offset: 32)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3231, file: !794, line: 449, baseType: !576, size: 32, offset: 64)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3231, file: !794, line: 450, baseType: !576, size: 32, offset: 96)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3231, file: !794, line: 451, baseType: !576, size: 32, offset: 128)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3231, file: !794, line: 452, baseType: !576, size: 32, offset: 160)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3231, file: !794, line: 453, baseType: !2032, size: 96, offset: 192)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3231, file: !794, line: 454, baseType: !576, size: 32, offset: 288)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3231, file: !794, line: 455, baseType: !576, size: 32, offset: 320)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3231, file: !794, line: 456, baseType: !576, size: 32, offset: 352)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3231, file: !794, line: 457, baseType: !576, size: 32, offset: 384)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3231, file: !794, line: 458, baseType: !576, size: 32, offset: 416)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3231, file: !794, line: 459, baseType: !576, size: 32, offset: 448)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3231, file: !794, line: 460, baseType: !576, size: 32, offset: 480)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3231, file: !794, line: 461, baseType: !2043, size: 64, offset: 512)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3231, file: !794, line: 462, baseType: !798, size: 32, offset: 576)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3231, file: !794, line: 463, baseType: !798, size: 32, offset: 608)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3231, file: !794, line: 464, baseType: !2047, size: 128, offset: 640)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3231, file: !794, line: 465, baseType: !2049, size: 160, offset: 768)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3231, file: !794, line: 466, baseType: !2051, size: 160, offset: 928)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3231, file: !794, line: 467, baseType: !576, size: 32, offset: 1088)
!3254 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3255, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3256, splitDebugInlining: false, nameTableKind: None)
!3255 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sensor_batch_processing")
!3256 = !{!107, !443, !439, !1352, !3257, !165, !104}
!3257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3258, size: 32)
!3258 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !165)
!3259 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3260, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3261, splitDebugInlining: false, nameTableKind: None)
!3260 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sensor_batch_processing")
!3261 = !{!3262}
!3262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3263, size: 32)
!3263 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !572, line: 586, baseType: !3264)
!3264 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !572, line: 550, size: 1216, elements: !3265)
!3265 = !{!3266, !3267, !3268, !3269, !3270, !3271, !3272, !3273, !3274, !3275, !3276, !3277, !3278, !3279, !3280, !3281, !3282, !3283, !3284, !3285, !3286, !3287, !3288, !3289, !3290, !3291, !3292, !3293, !3294, !3295, !3296, !3297, !3298, !3299}
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3264, file: !572, line: 552, baseType: !576, size: 32)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3264, file: !572, line: 553, baseType: !576, size: 32, offset: 32)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3264, file: !572, line: 554, baseType: !576, size: 32, offset: 64)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3264, file: !572, line: 555, baseType: !576, size: 32, offset: 96)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3264, file: !572, line: 556, baseType: !576, size: 32, offset: 128)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3264, file: !572, line: 557, baseType: !576, size: 32, offset: 160)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3264, file: !572, line: 558, baseType: !576, size: 32, offset: 192)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3264, file: !572, line: 559, baseType: !113, size: 32, offset: 224)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3264, file: !572, line: 560, baseType: !576, size: 32, offset: 256)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3264, file: !572, line: 561, baseType: !576, size: 32, offset: 288)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3264, file: !572, line: 562, baseType: !1217, size: 64, offset: 320)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3264, file: !572, line: 563, baseType: !576, size: 32, offset: 384)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3264, file: !572, line: 564, baseType: !576, size: 32, offset: 416)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3264, file: !572, line: 565, baseType: !576, size: 32, offset: 448)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3264, file: !572, line: 566, baseType: !113, size: 32, offset: 480)
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3264, file: !572, line: 567, baseType: !576, size: 32, offset: 512)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3264, file: !572, line: 568, baseType: !576, size: 32, offset: 544)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3264, file: !572, line: 569, baseType: !1217, size: 64, offset: 576)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3264, file: !572, line: 570, baseType: !576, size: 32, offset: 640)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3264, file: !572, line: 571, baseType: !576, size: 32, offset: 672)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3264, file: !572, line: 572, baseType: !576, size: 32, offset: 704)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3264, file: !572, line: 573, baseType: !113, size: 32, offset: 736)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3264, file: !572, line: 574, baseType: !576, size: 32, offset: 768)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3264, file: !572, line: 575, baseType: !576, size: 32, offset: 800)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3264, file: !572, line: 576, baseType: !1217, size: 64, offset: 832)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3264, file: !572, line: 577, baseType: !576, size: 32, offset: 896)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3264, file: !572, line: 578, baseType: !576, size: 32, offset: 928)
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3264, file: !572, line: 579, baseType: !1217, size: 64, offset: 960)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3264, file: !572, line: 580, baseType: !576, size: 32, offset: 1024)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3264, file: !572, line: 581, baseType: !576, size: 32, offset: 1056)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !3264, file: !572, line: 582, baseType: !576, size: 32, offset: 1088)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3264, file: !572, line: 583, baseType: !576, size: 32, offset: 1120)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !3264, file: !572, line: 584, baseType: !576, size: 32, offset: 1152)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !3264, file: !572, line: 585, baseType: !576, size: 32, offset: 1184)
!3300 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3301, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3301 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sensor_batch_processing")
!3302 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3303, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3304, retainedTypes: !3320, splitDebugInlining: false, nameTableKind: None)
!3303 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc_ex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sensor_batch_processing")
!3304 = !{!3305, !3312, !3316}
!3305 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3306, line: 38, baseType: !32, size: 32, elements: !3307)
!3306 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3307 = !{!3308, !3309, !3310, !3311}
!3308 = !DIEnumerator(name: "HAL_OK", value: 0)
!3309 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!3310 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!3311 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!3312 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1190, line: 184, baseType: !32, size: 32, elements: !3313)
!3313 = !{!3314, !3315}
!3314 = !DIEnumerator(name: "RESET", value: 0)
!3315 = !DIEnumerator(name: "SET", value: 1)
!3316 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1190, line: 190, baseType: !32, size: 32, elements: !3317)
!3317 = !{!3318, !3319}
!3318 = !DIEnumerator(name: "DISABLE", value: 0)
!3319 = !DIEnumerator(name: "ENABLE", value: 1)
!3320 = !{!3321, !113, !3359, !1831, !164, !114, !104}
!3321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3322, size: 32)
!3322 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !572, line: 586, baseType: !3323)
!3323 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !572, line: 550, size: 1216, elements: !3324)
!3324 = !{!3325, !3326, !3327, !3328, !3329, !3330, !3331, !3332, !3333, !3334, !3335, !3336, !3337, !3338, !3339, !3340, !3341, !3342, !3343, !3344, !3345, !3346, !3347, !3348, !3349, !3350, !3351, !3352, !3353, !3354, !3355, !3356, !3357, !3358}
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3323, file: !572, line: 552, baseType: !576, size: 32)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3323, file: !572, line: 553, baseType: !576, size: 32, offset: 32)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3323, file: !572, line: 554, baseType: !576, size: 32, offset: 64)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3323, file: !572, line: 555, baseType: !576, size: 32, offset: 96)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3323, file: !572, line: 556, baseType: !576, size: 32, offset: 128)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3323, file: !572, line: 557, baseType: !576, size: 32, offset: 160)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3323, file: !572, line: 558, baseType: !576, size: 32, offset: 192)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3323, file: !572, line: 559, baseType: !113, size: 32, offset: 224)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3323, file: !572, line: 560, baseType: !576, size: 32, offset: 256)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3323, file: !572, line: 561, baseType: !576, size: 32, offset: 288)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3323, file: !572, line: 562, baseType: !1217, size: 64, offset: 320)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3323, file: !572, line: 563, baseType: !576, size: 32, offset: 384)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3323, file: !572, line: 564, baseType: !576, size: 32, offset: 416)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3323, file: !572, line: 565, baseType: !576, size: 32, offset: 448)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3323, file: !572, line: 566, baseType: !113, size: 32, offset: 480)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3323, file: !572, line: 567, baseType: !576, size: 32, offset: 512)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3323, file: !572, line: 568, baseType: !576, size: 32, offset: 544)
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3323, file: !572, line: 569, baseType: !1217, size: 64, offset: 576)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3323, file: !572, line: 570, baseType: !576, size: 32, offset: 640)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3323, file: !572, line: 571, baseType: !576, size: 32, offset: 672)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3323, file: !572, line: 572, baseType: !576, size: 32, offset: 704)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3323, file: !572, line: 573, baseType: !113, size: 32, offset: 736)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3323, file: !572, line: 574, baseType: !576, size: 32, offset: 768)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3323, file: !572, line: 575, baseType: !576, size: 32, offset: 800)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3323, file: !572, line: 576, baseType: !1217, size: 64, offset: 832)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3323, file: !572, line: 577, baseType: !576, size: 32, offset: 896)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3323, file: !572, line: 578, baseType: !576, size: 32, offset: 928)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3323, file: !572, line: 579, baseType: !1217, size: 64, offset: 960)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3323, file: !572, line: 580, baseType: !576, size: 32, offset: 1024)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3323, file: !572, line: 581, baseType: !576, size: 32, offset: 1056)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !3323, file: !572, line: 582, baseType: !576, size: 32, offset: 1088)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3323, file: !572, line: 583, baseType: !576, size: 32, offset: 1120)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !3323, file: !572, line: 584, baseType: !576, size: 32, offset: 1152)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !3323, file: !572, line: 585, baseType: !576, size: 32, offset: 1184)
!3359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3360, size: 32)
!3360 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !572, line: 544, baseType: !3361)
!3361 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !572, line: 540, size: 64, elements: !3362)
!3362 = !{!3363, !3364}
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3361, file: !572, line: 542, baseType: !576, size: 32)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3361, file: !572, line: 543, baseType: !576, size: 32, offset: 32)
!3365 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3366, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3367, retainedTypes: !3368, splitDebugInlining: false, nameTableKind: None)
!3366 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sensor_batch_processing")
!3367 = !{!1189}
!3368 = !{!3369, !113, !3377, !3383, !3394}
!3369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3370, size: 32)
!3370 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !794, line: 770, baseType: !3371)
!3371 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !794, line: 764, size: 128, elements: !3372)
!3372 = !{!3373, !3374, !3375, !3376}
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !3371, file: !794, line: 766, baseType: !576, size: 32)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !3371, file: !794, line: 767, baseType: !576, size: 32, offset: 32)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !3371, file: !794, line: 768, baseType: !576, size: 32, offset: 64)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !3371, file: !794, line: 769, baseType: !798, size: 32, offset: 96)
!3377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3378, size: 32)
!3378 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !572, line: 544, baseType: !3379)
!3379 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !572, line: 540, size: 64, elements: !3380)
!3380 = !{!3381, !3382}
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3379, file: !572, line: 542, baseType: !576, size: 32)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3379, file: !572, line: 543, baseType: !576, size: 32, offset: 32)
!3383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3384, size: 32)
!3384 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !572, line: 407, baseType: !3385)
!3385 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !572, line: 398, size: 224, elements: !3386)
!3386 = !{!3387, !3388, !3389, !3390, !3391, !3392, !3393}
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3385, file: !572, line: 400, baseType: !576, size: 32)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3385, file: !572, line: 401, baseType: !576, size: 32, offset: 32)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3385, file: !572, line: 402, baseType: !576, size: 32, offset: 64)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3385, file: !572, line: 403, baseType: !576, size: 32, offset: 96)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3385, file: !572, line: 404, baseType: !576, size: 32, offset: 128)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3385, file: !572, line: 405, baseType: !576, size: 32, offset: 160)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3385, file: !572, line: 406, baseType: !576, size: 32, offset: 192)
!3394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3395, size: 32)
!3395 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !572, line: 586, baseType: !3396)
!3396 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !572, line: 550, size: 1216, elements: !3397)
!3397 = !{!3398, !3399, !3400, !3401, !3402, !3403, !3404, !3405, !3406, !3407, !3408, !3409, !3410, !3411, !3412, !3413, !3414, !3415, !3416, !3417, !3418, !3419, !3420, !3421, !3422, !3423, !3424, !3425, !3426, !3427, !3428, !3429, !3430, !3431}
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3396, file: !572, line: 552, baseType: !576, size: 32)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3396, file: !572, line: 553, baseType: !576, size: 32, offset: 32)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3396, file: !572, line: 554, baseType: !576, size: 32, offset: 64)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3396, file: !572, line: 555, baseType: !576, size: 32, offset: 96)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3396, file: !572, line: 556, baseType: !576, size: 32, offset: 128)
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3396, file: !572, line: 557, baseType: !576, size: 32, offset: 160)
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3396, file: !572, line: 558, baseType: !576, size: 32, offset: 192)
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3396, file: !572, line: 559, baseType: !113, size: 32, offset: 224)
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3396, file: !572, line: 560, baseType: !576, size: 32, offset: 256)
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3396, file: !572, line: 561, baseType: !576, size: 32, offset: 288)
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3396, file: !572, line: 562, baseType: !1217, size: 64, offset: 320)
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3396, file: !572, line: 563, baseType: !576, size: 32, offset: 384)
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3396, file: !572, line: 564, baseType: !576, size: 32, offset: 416)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3396, file: !572, line: 565, baseType: !576, size: 32, offset: 448)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3396, file: !572, line: 566, baseType: !113, size: 32, offset: 480)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3396, file: !572, line: 567, baseType: !576, size: 32, offset: 512)
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3396, file: !572, line: 568, baseType: !576, size: 32, offset: 544)
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3396, file: !572, line: 569, baseType: !1217, size: 64, offset: 576)
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3396, file: !572, line: 570, baseType: !576, size: 32, offset: 640)
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3396, file: !572, line: 571, baseType: !576, size: 32, offset: 672)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3396, file: !572, line: 572, baseType: !576, size: 32, offset: 704)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3396, file: !572, line: 573, baseType: !113, size: 32, offset: 736)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3396, file: !572, line: 574, baseType: !576, size: 32, offset: 768)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3396, file: !572, line: 575, baseType: !576, size: 32, offset: 800)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3396, file: !572, line: 576, baseType: !1217, size: 64, offset: 832)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3396, file: !572, line: 577, baseType: !576, size: 32, offset: 896)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3396, file: !572, line: 578, baseType: !576, size: 32, offset: 928)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3396, file: !572, line: 579, baseType: !1217, size: 64, offset: 960)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3396, file: !572, line: 580, baseType: !576, size: 32, offset: 1024)
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3396, file: !572, line: 581, baseType: !576, size: 32, offset: 1056)
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !3396, file: !572, line: 582, baseType: !576, size: 32, offset: 1088)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3396, file: !572, line: 583, baseType: !576, size: 32, offset: 1120)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !3396, file: !572, line: 584, baseType: !576, size: 32, offset: 1152)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !3396, file: !572, line: 585, baseType: !576, size: 32, offset: 1184)
!3432 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3433, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3434, splitDebugInlining: false, nameTableKind: None)
!3433 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sensor_batch_processing")
!3434 = !{!104, !439}
!3435 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3436, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3437, retainedTypes: !559, splitDebugInlining: false, nameTableKind: None)
!3436 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sensor_batch_processing")
!3437 = !{!3438, !3445, !30}
!3438 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3439, line: 14, baseType: !32, size: 32, elements: !3440)
!3439 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3440 = !{!3441, !3442, !3443, !3444}
!3441 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3442 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3443 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3444 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3445 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3439, line: 42, baseType: !32, size: 32, elements: !3446)
!3446 = !{!3447, !3448, !3449, !3450, !3451, !3452}
!3447 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3448 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3449 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3450 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3451 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3452 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3453 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3454, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !559, splitDebugInlining: false, nameTableKind: None)
!3454 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sensor_batch_processing")
!3455 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3456, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3457, splitDebugInlining: false, nameTableKind: None)
!3456 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sensor_batch_processing")
!3457 = !{!22, !104, !108}
!3458 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3459, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !559, splitDebugInlining: false, nameTableKind: None)
!3459 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sensor_batch_processing")
!3460 = !{!"Ubuntu clang version 14.0.6"}
!3461 = !{i32 7, !"Dwarf Version", i32 4}
!3462 = !{i32 2, !"Debug Info Version", i32 3}
!3463 = !{i32 1, !"wchar_size", i32 4}
!3464 = !{i32 1, !"min_enum_size", i32 4}
!3465 = !{i32 1, !"branch-target-enforcement", i32 0}
!3466 = !{i32 1, !"sign-return-address", i32 0}
!3467 = !{i32 1, !"sign-return-address-all", i32 0}
!3468 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3469 = !{i32 7, !"frame-pointer", i32 2}
!3470 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3471, file: !3471, line: 26, type: !3472, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2908, retainedNodes: !437)
!3471 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3472 = !DISubroutineType(types: !3473)
!3473 = !{null}
!3474 = !DILocation(line: 28, column: 1, scope: !3470)
!3475 = !{i64 2155379032, i64 2155379052, i64 2155379115}
!3476 = !DILocation(line: 29, column: 1, scope: !3470)
!3477 = !{i64 2155379447, i64 2155379467, i64 2155379530}
!3478 = !DILocation(line: 30, column: 1, scope: !3470)
!3479 = !{i64 2155379866, i64 2155379886, i64 2155379949}
!3480 = !DILocation(line: 31, column: 1, scope: !3470)
!3481 = !{i64 2155380285, i64 2155380305, i64 2155380368}
!3482 = !DILocation(line: 33, column: 1, scope: !3470)
!3483 = !{i64 2155380577, i64 2155380597, i64 2155380660}
!3484 = !DILocation(line: 35, column: 1, scope: !3470)
!3485 = !{i64 2155380902, i64 2155380922, i64 2155380985}
!3486 = !DILocation(line: 50, column: 1, scope: !3470)
!3487 = !{i64 2155381329, i64 2155381349, i64 2155381412}
!3488 = !DILocation(line: 54, column: 1, scope: !3470)
!3489 = !{i64 2155385829, i64 2155385849, i64 2155385912}
!3490 = !DILocation(line: 61, column: 1, scope: !3470)
!3491 = !{i64 2155386146, i64 2155386166, i64 2155386229}
!3492 = !DILocation(line: 63, column: 1, scope: !3470)
!3493 = !{i64 2155386526, i64 2155386546, i64 2155386609}
!3494 = !DILocation(line: 64, column: 1, scope: !3470)
!3495 = !{i64 2155387048, i64 2155387068, i64 2155387131}
!3496 = !DILocation(line: 65, column: 1, scope: !3470)
!3497 = !{i64 2155387546, i64 2155387566, i64 2155387629}
!3498 = !DILocation(line: 66, column: 1, scope: !3470)
!3499 = !{i64 2155388028, i64 2155388048, i64 2155388111}
!3500 = !DILocation(line: 67, column: 1, scope: !3470)
!3501 = !{i64 2155388535, i64 2155388555, i64 2155388618}
!3502 = !DILocation(line: 68, column: 1, scope: !3470)
!3503 = !{i64 2155389023, i64 2155389043, i64 2155389106}
!3504 = !DILocation(line: 70, column: 1, scope: !3470)
!3505 = !{i64 2155389491, i64 2155389511, i64 2155389574}
!3506 = !DILocation(line: 71, column: 1, scope: !3470)
!3507 = !{i64 2155389933, i64 2155389953, i64 2155390016}
!3508 = !DILocation(line: 72, column: 1, scope: !3470)
!3509 = !{i64 2155390391, i64 2155390411, i64 2155390474}
!3510 = !DILocation(line: 79, column: 1, scope: !3470)
!3511 = !{i64 2155390845, i64 2155390865, i64 2155390928}
!3512 = !DILocation(line: 80, column: 1, scope: !3470)
!3513 = !{i64 2155391356, i64 2155391376, i64 2155391439}
!3514 = !DILocation(line: 82, column: 1, scope: !3470)
!3515 = !{i64 2155391847, i64 2155391867, i64 2155391930}
!3516 = !DILocation(line: 97, column: 1, scope: !3470)
!3517 = !{i64 2155392184, i64 2155392204, i64 2155392267}
!3518 = !DILocation(line: 99, column: 1, scope: !3470)
!3519 = !{i64 2155392402, i64 2155392422, i64 2155392485}
!3520 = !DILocation(line: 102, column: 1, scope: !3470)
!3521 = !{i64 2155392659, i64 2155392679, i64 2155392742}
!3522 = !DILocation(line: 105, column: 1, scope: !3470)
!3523 = !{i64 2155392899, i64 2155392919, i64 2155392982}
!3524 = !DILocation(line: 115, column: 1, scope: !3470)
!3525 = !{i64 2155393238, i64 2155393258, i64 2155393321}
!3526 = !DILocation(line: 118, column: 1, scope: !3470)
!3527 = !{i64 2155393582, i64 2155393602, i64 2155393665}
!3528 = !DILocation(line: 32, column: 1, scope: !3529)
!3529 = !DILexicalBlockFile(scope: !3470, file: !3530, discriminator: 0)
!3530 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3531 = !{i64 2155393938, i64 2155393958, i64 2155394021}
!3532 = !DILocation(line: 33, column: 1, scope: !3529)
!3533 = !{i64 2155394450, i64 2155394470, i64 2155394533}
!3534 = !DILocation(line: 53, column: 1, scope: !3529)
!3535 = !{i64 2155399019, i64 2155399039, i64 2155399102}
!3536 = !DILocation(line: 54, column: 1, scope: !3529)
!3537 = !{i64 2155399437, i64 2155399457, i64 2155399520}
!3538 = !DILocation(line: 55, column: 1, scope: !3529)
!3539 = !{i64 2155399855, i64 2155399875, i64 2155399938}
!3540 = !DILocation(line: 56, column: 1, scope: !3529)
!3541 = !{i64 2155400273, i64 2155400293, i64 2155400356}
!3542 = !DILocation(line: 57, column: 1, scope: !3529)
!3543 = !{i64 2155400691, i64 2155400711, i64 2155400774}
!3544 = !DILocation(line: 58, column: 1, scope: !3529)
!3545 = !{i64 2155401109, i64 2155401129, i64 2155401192}
!3546 = !DILocation(line: 59, column: 1, scope: !3529)
!3547 = !{i64 2155401527, i64 2155401547, i64 2155401610}
!3548 = !DILocation(line: 60, column: 1, scope: !3529)
!3549 = !{i64 2155401951, i64 2155401971, i64 2155402034}
!3550 = !DILocation(line: 61, column: 1, scope: !3529)
!3551 = !{i64 2155402268, i64 2155402288, i64 2155402351}
!3552 = !DILocation(line: 70, column: 1, scope: !3529)
!3553 = !{i64 2155402497, i64 2155402517, i64 2155402580}
!3554 = !DILocation(line: 72, column: 1, scope: !3529)
!3555 = !{i64 2155402829, i64 2155402849, i64 2155402912}
!3556 = !DILocation(line: 73, column: 1, scope: !3529)
!3557 = !{i64 2155403279, i64 2155403299, i64 2155403362}
!3558 = !DILocation(line: 74, column: 1, scope: !3529)
!3559 = !{i64 2155403729, i64 2155403749, i64 2155403812}
!3560 = !DILocation(line: 75, column: 1, scope: !3529)
!3561 = !{i64 2155404179, i64 2155404199, i64 2155404262}
!3562 = !DILocation(line: 76, column: 1, scope: !3529)
!3563 = !{i64 2155404629, i64 2155404649, i64 2155404712}
!3564 = !DILocation(line: 77, column: 1, scope: !3529)
!3565 = !{i64 2155405079, i64 2155405099, i64 2155405162}
!3566 = !DILocation(line: 78, column: 1, scope: !3529)
!3567 = !{i64 2155405529, i64 2155405549, i64 2155405612}
!3568 = !DILocation(line: 79, column: 1, scope: !3529)
!3569 = !{i64 2155405979, i64 2155405999, i64 2155406062}
!3570 = !DILocation(line: 80, column: 1, scope: !3529)
!3571 = !{i64 2155406432, i64 2155406452, i64 2155406515}
!3572 = !DILocation(line: 84, column: 1, scope: !3529)
!3573 = !{i64 2155406764, i64 2155406784, i64 2155406847}
!3574 = !DILocation(line: 91, column: 1, scope: !3529)
!3575 = !{i64 2155407161, i64 2155407181, i64 2155407244}
!3576 = !DILocation(line: 93, column: 1, scope: !3529)
!3577 = !{i64 2155407528, i64 2155407548, i64 2155407611}
!3578 = !DILocation(line: 106, column: 1, scope: !3529)
!3579 = !{i64 2155407798, i64 2155407818, i64 2155407881}
!3580 = !DILocation(line: 11, column: 1, scope: !3581)
!3581 = !DILexicalBlockFile(scope: !3470, file: !3582, discriminator: 0)
!3582 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3583 = distinct !DISubprogram(name: "main", scope: !119, file: !119, line: 29, type: !3472, scopeLine: 30, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3584)
!3584 = !{!3585, !3602, !3604, !3606, !3610, !3612, !3613, !3615, !3617, !3620, !3622, !3623, !3628, !3629, !3630, !3634, !3636}
!3585 = !DILocalVariable(name: "vnd_sensor", scope: !3583, file: !119, line: 31, type: !3586)
!3586 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3587)
!3587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3588, size: 32)
!3588 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3589)
!3589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !3590)
!3590 = !{!3591, !3592, !3593, !3594, !3600, !3601}
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3589, file: !411, line: 380, baseType: !105, size: 32)
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !3589, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !3589, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3589, file: !411, line: 386, baseType: !3595, size: 32, offset: 96)
!3595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3596, size: 32)
!3596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !3597)
!3597 = !{!3598, !3599}
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !3596, file: !411, line: 359, baseType: !164, size: 8)
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !3596, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3589, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !3589, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!3602 = !DILocalVariable(name: "iodev", scope: !3583, file: !119, line: 32, type: !3603)
!3603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !173, size: 32)
!3604 = !DILocalVariable(name: "n", scope: !3605, file: !119, line: 35, type: !108)
!3605 = distinct !DILexicalBlock(scope: !3583, file: !119, line: 35, column: 2)
!3606 = !DILocalVariable(name: "sqe", scope: !3607, file: !119, line: 36, type: !3609)
!3607 = distinct !DILexicalBlock(scope: !3608, file: !119, line: 35, column: 30)
!3608 = distinct !DILexicalBlock(scope: !3605, file: !119, line: 35, column: 2)
!3609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !161, size: 32)
!3610 = !DILocalVariable(name: "idx", scope: !3611, file: !119, line: 36, type: !24)
!3611 = distinct !DILexicalBlock(scope: !3607, file: !119, line: 36, column: 26)
!3612 = !DILocalVariable(name: "acq", scope: !3611, file: !119, line: 36, type: !422)
!3613 = !DILocalVariable(name: "m", scope: !3614, file: !119, line: 44, type: !108)
!3614 = distinct !DILexicalBlock(scope: !3583, file: !119, line: 43, column: 15)
!3615 = !DILocalVariable(name: "userdata", scope: !3614, file: !119, line: 45, type: !3616)
!3616 = !DICompositeType(tag: DW_TAG_array_type, baseType: !209, size: 128, elements: !461)
!3617 = !DILocalVariable(name: "cqe", scope: !3618, file: !119, line: 55, type: !3619)
!3618 = distinct !DILexicalBlock(scope: !3614, file: !119, line: 54, column: 17)
!3619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !217, size: 32)
!3620 = !DILocalVariable(name: "idx", scope: !3621, file: !119, line: 55, type: !24)
!3621 = distinct !DILexicalBlock(scope: !3618, file: !119, line: 55, column: 27)
!3622 = !DILocalVariable(name: "has_consumable", scope: !3621, file: !119, line: 55, type: !422)
!3623 = !DILocalVariable(name: "_str", scope: !3624, file: !119, line: 81, type: !105)
!3624 = distinct !DILexicalBlock(scope: !3625, file: !119, line: 81, column: 4)
!3625 = distinct !DILexicalBlock(scope: !3626, file: !119, line: 80, column: 27)
!3626 = distinct !DILexicalBlock(scope: !3627, file: !119, line: 80, column: 3)
!3627 = distinct !DILexicalBlock(scope: !3614, file: !119, line: 80, column: 3)
!3628 = !DILocalVariable(name: "is_user_context", scope: !3624, file: !119, line: 81, type: !422)
!3629 = !DILocalVariable(name: "filters", scope: !3624, file: !119, line: 81, type: !113)
!3630 = !DILocalVariable(name: "sqe", scope: !3631, file: !119, line: 90, type: !3609)
!3631 = distinct !DILexicalBlock(scope: !3632, file: !119, line: 89, column: 27)
!3632 = distinct !DILexicalBlock(scope: !3633, file: !119, line: 89, column: 3)
!3633 = distinct !DILexicalBlock(scope: !3614, file: !119, line: 89, column: 3)
!3634 = !DILocalVariable(name: "idx", scope: !3635, file: !119, line: 90, type: !24)
!3635 = distinct !DILexicalBlock(scope: !3631, file: !119, line: 90, column: 27)
!3636 = !DILocalVariable(name: "acq", scope: !3635, file: !119, line: 90, type: !422)
!3637 = !DILocation(line: 0, scope: !3583)
!3638 = !DILocation(line: 32, column: 41, scope: !3583)
!3639 = !DILocation(line: 0, scope: !3605)
!3640 = !DILocation(line: 36, column: 26, scope: !3611)
!3641 = !DILocation(line: 35, column: 2, scope: !3605)
!3642 = !DILocation(line: 43, column: 2, scope: !3583)
!3643 = !DILocation(line: 0, scope: !3611)
!3644 = !DILocation(line: 36, column: 26, scope: !3645)
!3645 = distinct !DILexicalBlock(scope: !3646, file: !119, line: 36, column: 26)
!3646 = distinct !DILexicalBlock(scope: !3611, file: !119, line: 36, column: 26)
!3647 = !DILocation(line: 0, scope: !3607)
!3648 = !DILocation(line: 38, column: 50, scope: !3607)
!3649 = !DILocation(line: 38, column: 3, scope: !3607)
!3650 = !DILocation(line: 40, column: 3, scope: !3651)
!3651 = distinct !DILexicalBlock(scope: !3652, file: !119, line: 40, column: 3)
!3652 = distinct !DILexicalBlock(scope: !3607, file: !119, line: 40, column: 3)
!3653 = !DILocation(line: 40, column: 3, scope: !3652)
!3654 = !DILocation(line: 40, column: 3, scope: !3655)
!3655 = distinct !DILexicalBlock(scope: !3651, file: !119, line: 40, column: 3)
!3656 = !DILocation(line: 35, column: 26, scope: !3608)
!3657 = !DILocation(line: 35, column: 20, scope: !3608)
!3658 = distinct !{!3658, !3641, !3659}
!3659 = !DILocation(line: 41, column: 2, scope: !3605)
!3660 = !DILocation(line: 0, scope: !3614)
!3661 = !DILocation(line: 45, column: 3, scope: !3614)
!3662 = !DILocation(line: 45, column: 12, scope: !3614)
!3663 = !DILocation(line: 47, column: 3, scope: !3664)
!3664 = distinct !DILexicalBlock(scope: !3665, file: !119, line: 47, column: 3)
!3665 = distinct !DILexicalBlock(scope: !3666, file: !119, line: 47, column: 3)
!3666 = distinct !DILexicalBlock(scope: !3667, file: !119, line: 47, column: 3)
!3667 = distinct !DILexicalBlock(scope: !3614, file: !119, line: 47, column: 3)
!3668 = !DILocation(line: 48, column: 3, scope: !3614)
!3669 = !DILocation(line: 54, column: 3, scope: !3614)
!3670 = !DILocation(line: 55, column: 27, scope: !3621)
!3671 = !DILocation(line: 0, scope: !3621)
!3672 = !DILocation(line: 0, scope: !3618)
!3673 = !DILocation(line: 58, column: 5, scope: !3674)
!3674 = distinct !DILexicalBlock(scope: !3675, file: !119, line: 58, column: 5)
!3675 = distinct !DILexicalBlock(scope: !3676, file: !119, line: 58, column: 5)
!3676 = distinct !DILexicalBlock(scope: !3677, file: !119, line: 58, column: 5)
!3677 = distinct !DILexicalBlock(scope: !3678, file: !119, line: 58, column: 5)
!3678 = distinct !DILexicalBlock(scope: !3679, file: !119, line: 57, column: 21)
!3679 = distinct !DILexicalBlock(scope: !3618, file: !119, line: 57, column: 8)
!3680 = !DILocation(line: 59, column: 5, scope: !3678)
!3681 = !DILocation(line: 60, column: 5, scope: !3678)
!3682 = distinct !{!3682, !3669, !3683}
!3683 = !DILocation(line: 71, column: 3, scope: !3614)
!3684 = !DILocation(line: 55, column: 27, scope: !3685)
!3685 = distinct !DILexicalBlock(scope: !3686, file: !119, line: 55, column: 27)
!3686 = distinct !DILexicalBlock(scope: !3621, file: !119, line: 55, column: 27)
!3687 = !DILocation(line: 62, column: 4, scope: !3688)
!3688 = distinct !DILexicalBlock(scope: !3689, file: !119, line: 62, column: 4)
!3689 = distinct !DILexicalBlock(scope: !3690, file: !119, line: 62, column: 4)
!3690 = distinct !DILexicalBlock(scope: !3691, file: !119, line: 62, column: 4)
!3691 = distinct !DILexicalBlock(scope: !3618, file: !119, line: 62, column: 4)
!3692 = !DILocation(line: 64, column: 13, scope: !3693)
!3693 = distinct !DILexicalBlock(scope: !3618, file: !119, line: 64, column: 8)
!3694 = !DILocation(line: 64, column: 20, scope: !3693)
!3695 = !DILocation(line: 64, column: 8, scope: !3618)
!3696 = !DILocation(line: 65, column: 5, scope: !3697)
!3697 = distinct !DILexicalBlock(scope: !3698, file: !119, line: 65, column: 5)
!3698 = distinct !DILexicalBlock(scope: !3699, file: !119, line: 65, column: 5)
!3699 = distinct !DILexicalBlock(scope: !3700, file: !119, line: 65, column: 5)
!3700 = distinct !DILexicalBlock(scope: !3701, file: !119, line: 65, column: 5)
!3701 = distinct !DILexicalBlock(scope: !3693, file: !119, line: 64, column: 25)
!3702 = !DILocation(line: 66, column: 4, scope: !3701)
!3703 = !DILocation(line: 68, column: 23, scope: !3618)
!3704 = !DILocation(line: 68, column: 4, scope: !3618)
!3705 = !DILocation(line: 68, column: 16, scope: !3618)
!3706 = !DILocation(line: 69, column: 4, scope: !3707)
!3707 = distinct !DILexicalBlock(scope: !3708, file: !119, line: 69, column: 4)
!3708 = distinct !DILexicalBlock(scope: !3618, file: !119, line: 69, column: 4)
!3709 = !DILocation(line: 69, column: 4, scope: !3708)
!3710 = !DILocation(line: 69, column: 4, scope: !3711)
!3711 = distinct !DILexicalBlock(scope: !3707, file: !119, line: 69, column: 4)
!3712 = !DILocation(line: 70, column: 5, scope: !3618)
!3713 = !DILocation(line: 54, column: 12, scope: !3614)
!3714 = !DILocation(line: 79, column: 3, scope: !3715)
!3715 = distinct !DILexicalBlock(scope: !3716, file: !119, line: 79, column: 3)
!3716 = distinct !DILexicalBlock(scope: !3717, file: !119, line: 79, column: 3)
!3717 = distinct !DILexicalBlock(scope: !3718, file: !119, line: 79, column: 3)
!3718 = distinct !DILexicalBlock(scope: !3614, file: !119, line: 79, column: 3)
!3719 = !DILocation(line: 80, column: 3, scope: !3627)
!3720 = !DILocation(line: 0, scope: !3624)
!3721 = !DILocation(line: 81, column: 4, scope: !3722)
!3722 = distinct !DILexicalBlock(scope: !3723, file: !119, line: 81, column: 4)
!3723 = distinct !DILexicalBlock(scope: !3724, file: !119, line: 81, column: 4)
!3724 = distinct !DILexicalBlock(scope: !3624, file: !119, line: 81, column: 4)
!3725 = !DILocation(line: 81, column: 4, scope: !3723)
!3726 = !DILocation(line: 80, column: 23, scope: !3626)
!3727 = !DILocation(line: 80, column: 17, scope: !3626)
!3728 = distinct !{!3728, !3719, !3729}
!3729 = !DILocation(line: 82, column: 3, scope: !3627)
!3730 = !DILocation(line: 83, column: 3, scope: !3614)
!3731 = !DILocation(line: 84, column: 3, scope: !3732)
!3732 = distinct !DILexicalBlock(scope: !3733, file: !119, line: 84, column: 3)
!3733 = distinct !DILexicalBlock(scope: !3734, file: !119, line: 84, column: 3)
!3734 = distinct !DILexicalBlock(scope: !3735, file: !119, line: 84, column: 3)
!3735 = distinct !DILexicalBlock(scope: !3614, file: !119, line: 84, column: 3)
!3736 = !DILocation(line: 90, column: 27, scope: !3635)
!3737 = !DILocation(line: 89, column: 3, scope: !3633)
!3738 = !DILocation(line: 0, scope: !3635)
!3739 = !DILocation(line: 90, column: 27, scope: !3740)
!3740 = distinct !DILexicalBlock(scope: !3741, file: !119, line: 90, column: 27)
!3741 = distinct !DILexicalBlock(scope: !3635, file: !119, line: 90, column: 27)
!3742 = !DILocation(line: 0, scope: !3631)
!3743 = !DILocation(line: 93, column: 9, scope: !3631)
!3744 = !DILocation(line: 92, column: 4, scope: !3631)
!3745 = !DILocation(line: 95, column: 4, scope: !3746)
!3746 = distinct !DILexicalBlock(scope: !3747, file: !119, line: 95, column: 4)
!3747 = distinct !DILexicalBlock(scope: !3631, file: !119, line: 95, column: 4)
!3748 = !DILocation(line: 95, column: 4, scope: !3747)
!3749 = !DILocation(line: 95, column: 4, scope: !3750)
!3750 = distinct !DILexicalBlock(scope: !3746, file: !119, line: 95, column: 4)
!3751 = !DILocation(line: 89, column: 23, scope: !3632)
!3752 = !DILocation(line: 89, column: 17, scope: !3632)
!3753 = distinct !{!3753, !3737, !3754}
!3754 = !DILocation(line: 96, column: 3, scope: !3633)
!3755 = !DILocation(line: 97, column: 2, scope: !3583)
!3756 = distinct !{!3756, !3642, !3755}
!3757 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3758, file: !3758, line: 175, type: !3759, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3761)
!3758 = !DIFile(filename: "zephyr/include/zephyr/logging/log_core.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3759 = !DISubroutineType(types: !3760)
!3760 = !{!107, !108}
!3761 = !{!3762}
!3762 = !DILocalVariable(name: "level", arg: 1, scope: !3757, file: !3758, line: 175, type: !108)
!3763 = !DILocation(line: 0, scope: !3757)
!3764 = !DILocation(line: 177, column: 2, scope: !3757)
!3765 = !DILocation(line: 189, column: 1, scope: !3757)
!3766 = distinct !DISubprogram(name: "atomic_get", scope: !3767, file: !3767, line: 159, type: !3768, scopeLine: 160, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3773)
!3767 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic_builtin.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3768 = !DISubroutineType(types: !3769)
!3769 = !{!3770, !3771}
!3770 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_val_t", file: !143, line: 23, baseType: !142)
!3771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3772, size: 32)
!3772 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !142)
!3773 = !{!3774}
!3774 = !DILocalVariable(name: "target", arg: 1, scope: !3766, file: !3767, line: 159, type: !3771)
!3775 = !DILocation(line: 0, scope: !3766)
!3776 = !DILocation(line: 161, column: 9, scope: !3766)
!3777 = !DILocation(line: 161, column: 2, scope: !3766)
!3778 = distinct !DISubprogram(name: "rtio_sqe_prep_read", scope: !125, file: !125, line: 341, type: !3779, scopeLine: 347, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3781)
!3779 = !DISubroutineType(types: !3780)
!3780 = !{null, !3609, !171, !699, !209, !113, !104}
!3781 = !{!3782, !3783, !3784, !3785, !3786, !3787}
!3782 = !DILocalVariable(name: "sqe", arg: 1, scope: !3778, file: !125, line: 341, type: !3609)
!3783 = !DILocalVariable(name: "iodev", arg: 2, scope: !3778, file: !125, line: 342, type: !171)
!3784 = !DILocalVariable(name: "prio", arg: 3, scope: !3778, file: !125, line: 343, type: !699)
!3785 = !DILocalVariable(name: "buf", arg: 4, scope: !3778, file: !125, line: 344, type: !209)
!3786 = !DILocalVariable(name: "len", arg: 5, scope: !3778, file: !125, line: 345, type: !113)
!3787 = !DILocalVariable(name: "userdata", arg: 6, scope: !3778, file: !125, line: 346, type: !104)
!3788 = !DILocation(line: 0, scope: !3778)
!3789 = !DILocation(line: 348, column: 7, scope: !3778)
!3790 = !DILocation(line: 348, column: 10, scope: !3778)
!3791 = !DILocation(line: 349, column: 7, scope: !3778)
!3792 = !DILocation(line: 349, column: 12, scope: !3778)
!3793 = !DILocation(line: 350, column: 7, scope: !3778)
!3794 = !DILocation(line: 350, column: 13, scope: !3778)
!3795 = !DILocation(line: 351, column: 7, scope: !3778)
!3796 = !DILocation(line: 351, column: 15, scope: !3778)
!3797 = !DILocation(line: 352, column: 7, scope: !3778)
!3798 = !DILocation(line: 352, column: 11, scope: !3778)
!3799 = !DILocation(line: 353, column: 7, scope: !3778)
!3800 = !DILocation(line: 353, column: 16, scope: !3778)
!3801 = !DILocation(line: 354, column: 1, scope: !3778)
!3802 = distinct !DISubprogram(name: "atomic_add", scope: !3767, file: !3767, line: 86, type: !3803, scopeLine: 87, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3806)
!3803 = !DISubroutineType(types: !3804)
!3804 = !{!3770, !3805, !3770}
!3805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !142, size: 32)
!3806 = !{!3807, !3808}
!3807 = !DILocalVariable(name: "target", arg: 1, scope: !3802, file: !3767, line: 86, type: !3805)
!3808 = !DILocalVariable(name: "value", arg: 2, scope: !3802, file: !3767, line: 86, type: !3770)
!3809 = !DILocation(line: 0, scope: !3802)
!3810 = !DILocation(line: 88, column: 9, scope: !3802)
!3811 = !DILocation(line: 88, column: 2, scope: !3802)
!3812 = distinct !DISubprogram(name: "rtio_submit", scope: !3813, file: !3813, line: 75, type: !3814, scopeLine: 76, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3816)
!3813 = !DIFile(filename: "zephyr/include/generated/syscalls/rtio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sensor_batch_processing")
!3814 = !DISubroutineType(types: !3815)
!3815 = !{!108, !136, !113}
!3816 = !{!3817, !3818}
!3817 = !DILocalVariable(name: "r", arg: 1, scope: !3812, file: !3813, line: 75, type: !136)
!3818 = !DILocalVariable(name: "wait_count", arg: 2, scope: !3812, file: !3813, line: 75, type: !113)
!3819 = !DILocation(line: 0, scope: !3812)
!3820 = !DILocation(line: 84, column: 2, scope: !3821)
!3821 = distinct !DILexicalBlock(scope: !3812, file: !3813, line: 84, column: 2)
!3822 = !{i64 2155320053}
!3823 = !DILocation(line: 85, column: 9, scope: !3812)
!3824 = !DILocation(line: 85, column: 2, scope: !3812)
!3825 = distinct !DISubprogram(name: "k_msleep", scope: !359, file: !359, line: 439, type: !3826, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3828)
!3826 = !DISubroutineType(types: !3827)
!3827 = !{!220, !220}
!3828 = !{!3829}
!3829 = !DILocalVariable(name: "ms", arg: 1, scope: !3825, file: !359, line: 439, type: !220)
!3830 = !DILocation(line: 0, scope: !3825)
!3831 = !DILocation(line: 441, column: 17, scope: !3825)
!3832 = !DILocation(line: 441, column: 9, scope: !3825)
!3833 = !DILocation(line: 441, column: 2, scope: !3825)
!3834 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3835, file: !3835, line: 403, type: !3836, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3838)
!3835 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3836 = !DISubroutineType(types: !3837)
!3837 = !{!114, !114}
!3838 = !{!3839}
!3839 = !DILocalVariable(name: "t", arg: 1, scope: !3834, file: !3835, line: 403, type: !114)
!3840 = !DILocation(line: 0, scope: !3834)
!3841 = !DILocalVariable(name: "t", arg: 1, scope: !3842, file: !3835, line: 102, type: !114)
!3842 = distinct !DISubprogram(name: "z_tmcvt", scope: !3835, file: !3835, line: 102, type: !3843, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3845)
!3843 = !DISubroutineType(types: !3844)
!3844 = !{!114, !114, !113, !113, !422, !422, !422, !422}
!3845 = !{!3841, !3846, !3847, !3848, !3849, !3850, !3851, !3852, !3853, !3854, !3855}
!3846 = !DILocalVariable(name: "from_hz", arg: 2, scope: !3842, file: !3835, line: 102, type: !113)
!3847 = !DILocalVariable(name: "to_hz", arg: 3, scope: !3842, file: !3835, line: 103, type: !113)
!3848 = !DILocalVariable(name: "const_hz", arg: 4, scope: !3842, file: !3835, line: 103, type: !422)
!3849 = !DILocalVariable(name: "result32", arg: 5, scope: !3842, file: !3835, line: 104, type: !422)
!3850 = !DILocalVariable(name: "round_up", arg: 6, scope: !3842, file: !3835, line: 104, type: !422)
!3851 = !DILocalVariable(name: "round_off", arg: 7, scope: !3842, file: !3835, line: 105, type: !422)
!3852 = !DILocalVariable(name: "mul_ratio", scope: !3842, file: !3835, line: 107, type: !422)
!3853 = !DILocalVariable(name: "div_ratio", scope: !3842, file: !3835, line: 109, type: !422)
!3854 = !DILocalVariable(name: "off", scope: !3842, file: !3835, line: 116, type: !114)
!3855 = !DILocalVariable(name: "rdivisor", scope: !3856, file: !3835, line: 119, type: !113)
!3856 = distinct !DILexicalBlock(scope: !3857, file: !3835, line: 118, column: 18)
!3857 = distinct !DILexicalBlock(scope: !3842, file: !3835, line: 118, column: 6)
!3858 = !DILocation(line: 0, scope: !3842, inlinedAt: !3859)
!3859 = distinct !DILocation(line: 406, column: 9, scope: !3834)
!3860 = !DILocation(line: 145, column: 13, scope: !3861, inlinedAt: !3859)
!3861 = distinct !DILexicalBlock(scope: !3862, file: !3835, line: 144, column: 10)
!3862 = distinct !DILexicalBlock(scope: !3863, file: !3835, line: 142, column: 7)
!3863 = distinct !DILexicalBlock(scope: !3864, file: !3835, line: 141, column: 24)
!3864 = distinct !DILexicalBlock(scope: !3865, file: !3835, line: 141, column: 13)
!3865 = distinct !DILexicalBlock(scope: !3842, file: !3835, line: 134, column: 6)
!3866 = !DILocation(line: 406, column: 2, scope: !3834)
!3867 = distinct !DISubprogram(name: "k_sleep", scope: !3868, file: !3868, line: 91, type: !3869, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3875)
!3868 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sensor_batch_processing")
!3869 = !DISubroutineType(types: !3870)
!3870 = !{!220, !3871}
!3871 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !110, line: 67, baseType: !3872)
!3872 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !110, line: 65, size: 64, elements: !3873)
!3873 = !{!3874}
!3874 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !3872, file: !110, line: 66, baseType: !109, size: 64)
!3875 = !{!3876}
!3876 = !DILocalVariable(name: "timeout", arg: 1, scope: !3867, file: !3868, line: 91, type: !3871)
!3877 = !DILocation(line: 0, scope: !3867)
!3878 = !DILocation(line: 99, column: 2, scope: !3879)
!3879 = distinct !DILexicalBlock(scope: !3867, file: !3868, line: 99, column: 2)
!3880 = !{i64 2155076297}
!3881 = !DILocation(line: 100, column: 9, scope: !3867)
!3882 = !DILocation(line: 100, column: 2, scope: !3867)
!3883 = distinct !DISubprogram(name: "z_impl_rtio_submit", scope: !125, file: !125, line: 744, type: !3814, scopeLine: 745, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3884)
!3884 = !{!3885, !3886, !3887, !3888}
!3885 = !DILocalVariable(name: "r", arg: 1, scope: !3883, file: !125, line: 744, type: !136)
!3886 = !DILocalVariable(name: "wait_count", arg: 2, scope: !3883, file: !125, line: 744, type: !113)
!3887 = !DILocalVariable(name: "res", scope: !3883, file: !125, line: 746, type: !108)
!3888 = !DILocalVariable(name: "acquired", scope: !3889, file: !125, line: 763, type: !24)
!3889 = distinct !DILexicalBlock(scope: !3890, file: !125, line: 763, column: 2)
!3890 = distinct !DILexicalBlock(scope: !3891, file: !125, line: 763, column: 2)
!3891 = distinct !DILexicalBlock(scope: !3883, file: !125, line: 763, column: 2)
!3892 = !DILocation(line: 0, scope: !3883)
!3893 = !DILocation(line: 763, column: 2, scope: !3890)
!3894 = !DILocation(line: 763, column: 2, scope: !3891)
!3895 = !DILocation(line: 0, scope: !3889)
!3896 = !DILocation(line: 763, column: 2, scope: !3889)
!3897 = !DILocation(line: 768, column: 11, scope: !3883)
!3898 = !DILocation(line: 768, column: 21, scope: !3883)
!3899 = !DILocation(line: 768, column: 26, scope: !3883)
!3900 = !DILocation(line: 768, column: 8, scope: !3883)
!3901 = !DILocation(line: 769, column: 10, scope: !3902)
!3902 = distinct !DILexicalBlock(scope: !3883, file: !125, line: 769, column: 6)
!3903 = !DILocation(line: 769, column: 6, scope: !3883)
!3904 = !DILocation(line: 784, column: 9, scope: !3905)
!3905 = distinct !DILexicalBlock(scope: !3883, file: !125, line: 784, column: 9)
!3906 = !DILocation(line: 784, column: 37, scope: !3883)
!3907 = !DILocation(line: 784, column: 2, scope: !3883)
!3908 = !DILocation(line: 788, column: 3, scope: !3909)
!3909 = distinct !DILexicalBlock(scope: !3883, file: !125, line: 784, column: 51)
!3910 = distinct !{!3910, !3907, !3911}
!3911 = !DILocation(line: 790, column: 2, scope: !3883)
!3912 = !DILocation(line: 794, column: 1, scope: !3883)
!3913 = distinct !DISubprogram(name: "k_yield", scope: !3868, file: !3868, line: 140, type: !3472, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !437)
!3914 = !DILocation(line: 148, column: 2, scope: !3915)
!3915 = distinct !DILexicalBlock(scope: !3913, file: !3868, line: 148, column: 2)
!3916 = !{i64 2155076501}
!3917 = !DILocation(line: 149, column: 2, scope: !3913)
!3918 = !DILocation(line: 150, column: 1, scope: !3913)
!3919 = distinct !DISubprogram(name: "vnd_sensor_iodev_submit", scope: !265, file: !265, line: 74, type: !277, scopeLine: 75, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !3920)
!3920 = !{!3921, !3922, !3923, !3924, !3925, !3927, !3929}
!3921 = !DILocalVariable(name: "sqe", arg: 1, scope: !3919, file: !265, line: 74, type: !279)
!3922 = !DILocalVariable(name: "r", arg: 2, scope: !3919, file: !265, line: 74, type: !298)
!3923 = !DILocalVariable(name: "data", scope: !3919, file: !265, line: 76, type: !263)
!3924 = !DILocalVariable(name: "dev", scope: !3919, file: !265, line: 77, type: !408)
!3925 = !DILocalVariable(name: "iodev_sqe", scope: !3919, file: !265, line: 78, type: !3926)
!3926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !352, size: 32)
!3927 = !DILocalVariable(name: "idx", scope: !3928, file: !265, line: 78, type: !24)
!3928 = distinct !DILexicalBlock(scope: !3919, file: !265, line: 78, column: 37)
!3929 = !DILocalVariable(name: "acq", scope: !3928, file: !265, line: 78, type: !422)
!3930 = !DILocation(line: 0, scope: !3919)
!3931 = !DILocation(line: 76, column: 65, scope: !3919)
!3932 = !DILocation(line: 77, column: 35, scope: !3919)
!3933 = !DILocation(line: 78, column: 37, scope: !3928)
!3934 = !DILocation(line: 0, scope: !3928)
!3935 = !DILocation(line: 78, column: 37, scope: !3936)
!3936 = distinct !DILexicalBlock(scope: !3937, file: !265, line: 78, column: 37)
!3937 = distinct !DILexicalBlock(scope: !3928, file: !265, line: 78, column: 37)
!3938 = !DILocation(line: 81, column: 14, scope: !3939)
!3939 = distinct !DILexicalBlock(scope: !3940, file: !265, line: 80, column: 25)
!3940 = distinct !DILexicalBlock(scope: !3919, file: !265, line: 80, column: 6)
!3941 = !DILocation(line: 81, column: 18, scope: !3939)
!3942 = !DILocation(line: 82, column: 14, scope: !3939)
!3943 = !DILocation(line: 82, column: 16, scope: !3939)
!3944 = !DILocation(line: 83, column: 3, scope: !3945)
!3945 = distinct !DILexicalBlock(scope: !3946, file: !265, line: 83, column: 3)
!3946 = distinct !DILexicalBlock(scope: !3939, file: !265, line: 83, column: 3)
!3947 = !DILocation(line: 83, column: 3, scope: !3946)
!3948 = !DILocation(line: 83, column: 3, scope: !3949)
!3949 = distinct !DILexicalBlock(scope: !3945, file: !265, line: 83, column: 3)
!3950 = !DILocation(line: 85, column: 3, scope: !3951)
!3951 = distinct !DILexicalBlock(scope: !3952, file: !265, line: 85, column: 3)
!3952 = distinct !DILexicalBlock(scope: !3953, file: !265, line: 85, column: 3)
!3953 = distinct !DILexicalBlock(scope: !3954, file: !265, line: 85, column: 3)
!3954 = distinct !DILexicalBlock(scope: !3955, file: !265, line: 85, column: 3)
!3955 = distinct !DILexicalBlock(scope: !3940, file: !265, line: 84, column: 9)
!3956 = !DILocation(line: 86, column: 3, scope: !3955)
!3957 = !DILocation(line: 88, column: 1, scope: !3919)
!3958 = distinct !DISubprogram(name: "atomic_get", scope: !3767, file: !3767, line: 159, type: !3768, scopeLine: 160, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !3959)
!3959 = !{!3960}
!3960 = !DILocalVariable(name: "target", arg: 1, scope: !3958, file: !3767, line: 159, type: !3771)
!3961 = !DILocation(line: 0, scope: !3958)
!3962 = !DILocation(line: 161, column: 9, scope: !3958)
!3963 = !DILocation(line: 161, column: 2, scope: !3958)
!3964 = distinct !DISubprogram(name: "atomic_add", scope: !3767, file: !3767, line: 86, type: !3803, scopeLine: 87, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !3965)
!3965 = !{!3966, !3967}
!3966 = !DILocalVariable(name: "target", arg: 1, scope: !3964, file: !3767, line: 86, type: !3805)
!3967 = !DILocalVariable(name: "value", arg: 2, scope: !3964, file: !3767, line: 86, type: !3770)
!3968 = !DILocation(line: 0, scope: !3964)
!3969 = !DILocation(line: 88, column: 9, scope: !3964)
!3970 = !DILocation(line: 88, column: 2, scope: !3964)
!3971 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3758, file: !3758, line: 175, type: !3759, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !3972)
!3972 = !{!3973}
!3973 = !DILocalVariable(name: "level", arg: 1, scope: !3971, file: !3758, line: 175, type: !108)
!3974 = !DILocation(line: 0, scope: !3971)
!3975 = !DILocation(line: 177, column: 2, scope: !3971)
!3976 = !DILocation(line: 189, column: 1, scope: !3971)
!3977 = distinct !DISubprogram(name: "rtio_sqe_err", scope: !125, file: !125, line: 592, type: !316, scopeLine: 593, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !3978)
!3978 = !{!3979, !3980, !3981}
!3979 = !DILocalVariable(name: "r", arg: 1, scope: !3977, file: !125, line: 592, type: !298)
!3980 = !DILocalVariable(name: "sqe", arg: 2, scope: !3977, file: !125, line: 592, type: !279)
!3981 = !DILocalVariable(name: "result", arg: 3, scope: !3977, file: !125, line: 592, type: !108)
!3982 = !DILocation(line: 0, scope: !3977)
!3983 = !DILocation(line: 594, column: 5, scope: !3977)
!3984 = !DILocation(line: 594, column: 15, scope: !3977)
!3985 = !DILocation(line: 594, column: 20, scope: !3977)
!3986 = !DILocation(line: 594, column: 2, scope: !3977)
!3987 = !DILocation(line: 595, column: 1, scope: !3977)
!3988 = distinct !DISubprogram(name: "vnd_sensor_init", scope: !265, file: !265, line: 111, type: !473, scopeLine: 112, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !3989)
!3989 = !{!3990, !3991, !3993, !3994}
!3990 = !DILocalVariable(name: "dev", arg: 1, scope: !3988, file: !265, line: 111, type: !408)
!3991 = !DILocalVariable(name: "config", scope: !3988, file: !265, line: 113, type: !3992)
!3992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !480, size: 32)
!3993 = !DILocalVariable(name: "data", scope: !3988, file: !265, line: 114, type: !263)
!3994 = !DILocalVariable(name: "sample_period", scope: !3988, file: !265, line: 115, type: !113)
!3995 = !DILocation(line: 0, scope: !3988)
!3996 = !DILocation(line: 113, column: 48, scope: !3988)
!3997 = !DILocation(line: 114, column: 38, scope: !3988)
!3998 = !DILocation(line: 115, column: 35, scope: !3988)
!3999 = !DILocation(line: 117, column: 8, scope: !3988)
!4000 = !DILocation(line: 117, column: 12, scope: !3988)
!4001 = !DILocation(line: 119, column: 22, scope: !3988)
!4002 = !DILocation(line: 119, column: 2, scope: !3988)
!4003 = !DILocation(line: 121, column: 30, scope: !3988)
!4004 = !DILocation(line: 121, column: 2, scope: !3988)
!4005 = !DILocation(line: 124, column: 2, scope: !3988)
!4006 = distinct !DISubprogram(name: "vnd_sensor_timer_expiry", scope: !265, file: !265, line: 103, type: !396, scopeLine: 104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !4007)
!4007 = !{!4008, !4009}
!4008 = !DILocalVariable(name: "timer", arg: 1, scope: !4006, file: !265, line: 103, type: !398)
!4009 = !DILocalVariable(name: "data", scope: !4006, file: !265, line: 105, type: !263)
!4010 = !DILocation(line: 0, scope: !4006)
!4011 = !DILocation(line: 106, column: 3, scope: !4006)
!4012 = !DILocation(line: 108, column: 30, scope: !4006)
!4013 = !DILocation(line: 108, column: 2, scope: !4006)
!4014 = !DILocation(line: 109, column: 1, scope: !4006)
!4015 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3835, file: !3835, line: 403, type: !3836, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !4016)
!4016 = !{!4017}
!4017 = !DILocalVariable(name: "t", arg: 1, scope: !4015, file: !3835, line: 403, type: !114)
!4018 = !DILocation(line: 0, scope: !4015)
!4019 = !DILocalVariable(name: "t", arg: 1, scope: !4020, file: !3835, line: 102, type: !114)
!4020 = distinct !DISubprogram(name: "z_tmcvt", scope: !3835, file: !3835, line: 102, type: !3843, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !4021)
!4021 = !{!4019, !4022, !4023, !4024, !4025, !4026, !4027, !4028, !4029, !4030, !4031}
!4022 = !DILocalVariable(name: "from_hz", arg: 2, scope: !4020, file: !3835, line: 102, type: !113)
!4023 = !DILocalVariable(name: "to_hz", arg: 3, scope: !4020, file: !3835, line: 103, type: !113)
!4024 = !DILocalVariable(name: "const_hz", arg: 4, scope: !4020, file: !3835, line: 103, type: !422)
!4025 = !DILocalVariable(name: "result32", arg: 5, scope: !4020, file: !3835, line: 104, type: !422)
!4026 = !DILocalVariable(name: "round_up", arg: 6, scope: !4020, file: !3835, line: 104, type: !422)
!4027 = !DILocalVariable(name: "round_off", arg: 7, scope: !4020, file: !3835, line: 105, type: !422)
!4028 = !DILocalVariable(name: "mul_ratio", scope: !4020, file: !3835, line: 107, type: !422)
!4029 = !DILocalVariable(name: "div_ratio", scope: !4020, file: !3835, line: 109, type: !422)
!4030 = !DILocalVariable(name: "off", scope: !4020, file: !3835, line: 116, type: !114)
!4031 = !DILocalVariable(name: "rdivisor", scope: !4032, file: !3835, line: 119, type: !113)
!4032 = distinct !DILexicalBlock(scope: !4033, file: !3835, line: 118, column: 18)
!4033 = distinct !DILexicalBlock(scope: !4020, file: !3835, line: 118, column: 6)
!4034 = !DILocation(line: 0, scope: !4020, inlinedAt: !4035)
!4035 = distinct !DILocation(line: 406, column: 9, scope: !4015)
!4036 = !DILocation(line: 145, column: 13, scope: !4037, inlinedAt: !4035)
!4037 = distinct !DILexicalBlock(scope: !4038, file: !3835, line: 144, column: 10)
!4038 = distinct !DILexicalBlock(scope: !4039, file: !3835, line: 142, column: 7)
!4039 = distinct !DILexicalBlock(scope: !4040, file: !3835, line: 141, column: 24)
!4040 = distinct !DILexicalBlock(scope: !4041, file: !3835, line: 141, column: 13)
!4041 = distinct !DILexicalBlock(scope: !4020, file: !3835, line: 134, column: 6)
!4042 = !DILocation(line: 406, column: 2, scope: !4015)
!4043 = distinct !DISubprogram(name: "k_timer_start", scope: !3868, file: !3868, line: 426, type: !4044, scopeLine: 427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !4046)
!4044 = !DISubroutineType(types: !4045)
!4045 = !{null, !398, !401, !401}
!4046 = !{!4047, !4048, !4049}
!4047 = !DILocalVariable(name: "timer", arg: 1, scope: !4043, file: !3868, line: 426, type: !398)
!4048 = !DILocalVariable(name: "duration", arg: 2, scope: !4043, file: !3868, line: 426, type: !401)
!4049 = !DILocalVariable(name: "period", arg: 3, scope: !4043, file: !3868, line: 426, type: !401)
!4050 = !DILocation(line: 0, scope: !4043)
!4051 = !DILocation(line: 437, column: 2, scope: !4052)
!4052 = distinct !DILexicalBlock(scope: !4043, file: !3868, line: 437, column: 2)
!4053 = !{i64 2155079947}
!4054 = !DILocation(line: 438, column: 2, scope: !4043)
!4055 = !DILocation(line: 439, column: 1, scope: !4043)
!4056 = distinct !DISubprogram(name: "vnd_sensor_handle_int", scope: !265, file: !265, line: 90, type: !4057, scopeLine: 91, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !4059)
!4057 = !DISubroutineType(types: !4058)
!4058 = !{null, !408}
!4059 = !{!4060, !4061, !4062, !4063, !4065}
!4060 = !DILocalVariable(name: "dev", arg: 1, scope: !4056, file: !265, line: 90, type: !408)
!4061 = !DILocalVariable(name: "data", scope: !4056, file: !265, line: 92, type: !263)
!4062 = !DILocalVariable(name: "iodev_sqe", scope: !4056, file: !265, line: 93, type: !3926)
!4063 = !DILocalVariable(name: "idx", scope: !4064, file: !265, line: 93, type: !24)
!4064 = distinct !DILexicalBlock(scope: !4056, file: !265, line: 93, column: 37)
!4065 = !DILocalVariable(name: "has_consumable", scope: !4064, file: !265, line: 93, type: !422)
!4066 = !DILocation(line: 0, scope: !4056)
!4067 = !DILocation(line: 92, column: 38, scope: !4056)
!4068 = !DILocation(line: 93, column: 37, scope: !4064)
!4069 = !DILocation(line: 0, scope: !4064)
!4070 = !DILocation(line: 93, column: 37, scope: !4071)
!4071 = distinct !DILexicalBlock(scope: !4072, file: !265, line: 93, column: 37)
!4072 = distinct !DILexicalBlock(scope: !4064, file: !265, line: 93, column: 37)
!4073 = !DILocation(line: 96, column: 44, scope: !4074)
!4074 = distinct !DILexicalBlock(scope: !4075, file: !265, line: 95, column: 25)
!4075 = distinct !DILexicalBlock(scope: !4056, file: !265, line: 95, column: 6)
!4076 = !DILocation(line: 96, column: 60, scope: !4074)
!4077 = !DILocation(line: 96, column: 3, scope: !4074)
!4078 = !DILocation(line: 97, column: 3, scope: !4079)
!4079 = distinct !DILexicalBlock(scope: !4080, file: !265, line: 97, column: 3)
!4080 = distinct !DILexicalBlock(scope: !4074, file: !265, line: 97, column: 3)
!4081 = !DILocation(line: 97, column: 3, scope: !4080)
!4082 = !DILocation(line: 97, column: 3, scope: !4083)
!4083 = distinct !DILexicalBlock(scope: !4079, file: !265, line: 97, column: 3)
!4084 = !DILocation(line: 99, column: 3, scope: !4085)
!4085 = distinct !DILexicalBlock(scope: !4086, file: !265, line: 99, column: 3)
!4086 = distinct !DILexicalBlock(scope: !4087, file: !265, line: 99, column: 3)
!4087 = distinct !DILexicalBlock(scope: !4088, file: !265, line: 99, column: 3)
!4088 = distinct !DILexicalBlock(scope: !4089, file: !265, line: 99, column: 3)
!4089 = distinct !DILexicalBlock(scope: !4075, file: !265, line: 98, column: 9)
!4090 = !DILocation(line: 101, column: 1, scope: !4056)
!4091 = distinct !DISubprogram(name: "vnd_sensor_iodev_execute", scope: !265, file: !265, line: 55, type: !4092, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !4094)
!4092 = !DISubroutineType(types: !4093)
!4093 = !{null, !408, !279, !298}
!4094 = !{!4095, !4096, !4097, !4098}
!4095 = !DILocalVariable(name: "dev", arg: 1, scope: !4091, file: !265, line: 55, type: !408)
!4096 = !DILocalVariable(name: "sqe", arg: 2, scope: !4091, file: !265, line: 56, type: !279)
!4097 = !DILocalVariable(name: "r", arg: 3, scope: !4091, file: !265, line: 56, type: !298)
!4098 = !DILocalVariable(name: "result", scope: !4091, file: !265, line: 58, type: !108)
!4099 = !DILocation(line: 0, scope: !4091)
!4100 = !DILocation(line: 60, column: 11, scope: !4101)
!4101 = distinct !DILexicalBlock(scope: !4091, file: !265, line: 60, column: 6)
!4102 = !DILocation(line: 60, column: 14, scope: !4101)
!4103 = !DILocation(line: 60, column: 6, scope: !4091)
!4104 = !DILocation(line: 63, column: 3, scope: !4105)
!4105 = distinct !DILexicalBlock(scope: !4106, file: !265, line: 63, column: 3)
!4106 = distinct !DILexicalBlock(scope: !4107, file: !265, line: 63, column: 3)
!4107 = distinct !DILexicalBlock(scope: !4108, file: !265, line: 63, column: 3)
!4108 = distinct !DILexicalBlock(scope: !4109, file: !265, line: 63, column: 3)
!4109 = distinct !DILexicalBlock(scope: !4101, file: !265, line: 62, column: 9)
!4110 = !DILocation(line: 67, column: 6, scope: !4091)
!4111 = !DILocation(line: 61, column: 44, scope: !4112)
!4112 = distinct !DILexicalBlock(scope: !4101, file: !265, line: 60, column: 29)
!4113 = !DILocation(line: 61, column: 54, scope: !4112)
!4114 = !DILocation(line: 61, column: 12, scope: !4112)
!4115 = !DILocation(line: 67, column: 13, scope: !4116)
!4116 = distinct !DILexicalBlock(scope: !4091, file: !265, line: 67, column: 6)
!4117 = !DILocation(line: 68, column: 3, scope: !4118)
!4118 = distinct !DILexicalBlock(scope: !4116, file: !265, line: 67, column: 18)
!4119 = !DILocation(line: 69, column: 2, scope: !4118)
!4120 = !DILocation(line: 70, column: 3, scope: !4121)
!4121 = distinct !DILexicalBlock(scope: !4116, file: !265, line: 69, column: 9)
!4122 = !DILocation(line: 72, column: 1, scope: !4091)
!4123 = distinct !DISubprogram(name: "vnd_sensor_iodev_read", scope: !265, file: !265, line: 29, type: !4124, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !4126)
!4124 = !DISubroutineType(types: !4125)
!4125 = !{!108, !408, !209, !113}
!4126 = !{!4127, !4128, !4129, !4130, !4131, !4132, !4133, !4134}
!4127 = !DILocalVariable(name: "dev", arg: 1, scope: !4123, file: !265, line: 29, type: !408)
!4128 = !DILocalVariable(name: "buf", arg: 2, scope: !4123, file: !265, line: 29, type: !209)
!4129 = !DILocalVariable(name: "buf_len", arg: 3, scope: !4123, file: !265, line: 30, type: !113)
!4130 = !DILocalVariable(name: "config", scope: !4123, file: !265, line: 32, type: !3992)
!4131 = !DILocalVariable(name: "data", scope: !4123, file: !265, line: 33, type: !263)
!4132 = !DILocalVariable(name: "sample_number", scope: !4123, file: !265, line: 34, type: !113)
!4133 = !DILocalVariable(name: "key", scope: !4123, file: !265, line: 35, type: !113)
!4134 = !DILocalVariable(name: "i", scope: !4135, file: !265, line: 48, type: !108)
!4135 = distinct !DILexicalBlock(scope: !4123, file: !265, line: 48, column: 2)
!4136 = !DILocation(line: 0, scope: !4123)
!4137 = !DILocation(line: 32, column: 48, scope: !4123)
!4138 = !DILocation(line: 33, column: 38, scope: !4123)
!4139 = !DILocation(line: 37, column: 2, scope: !4140)
!4140 = distinct !DILexicalBlock(scope: !4141, file: !265, line: 37, column: 2)
!4141 = distinct !DILexicalBlock(scope: !4142, file: !265, line: 37, column: 2)
!4142 = distinct !DILexicalBlock(scope: !4143, file: !265, line: 37, column: 2)
!4143 = distinct !DILexicalBlock(scope: !4123, file: !265, line: 37, column: 2)
!4144 = !DILocation(line: 55, column: 2, scope: !4145, inlinedAt: !4152)
!4145 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4146, file: !4146, line: 42, type: !4147, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !4149)
!4146 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4147 = !DISubroutineType(types: !4148)
!4148 = !{!32}
!4149 = !{!4150, !4151}
!4150 = !DILocalVariable(name: "key", scope: !4145, file: !4146, line: 44, type: !32)
!4151 = !DILocalVariable(name: "tmp", scope: !4145, file: !4146, line: 53, type: !32)
!4152 = distinct !DILocation(line: 39, column: 8, scope: !4123)
!4153 = !{i64 2297424}
!4154 = !DILocation(line: 0, scope: !4145, inlinedAt: !4152)
!4155 = !DILocation(line: 40, column: 24, scope: !4123)
!4156 = !DILocation(line: 40, column: 37, scope: !4123)
!4157 = !DILocalVariable(name: "key", arg: 1, scope: !4158, file: !4146, line: 84, type: !32)
!4158 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4146, file: !4146, line: 84, type: !4159, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !4161)
!4159 = !DISubroutineType(types: !4160)
!4160 = !{null, !32}
!4161 = !{!4157}
!4162 = !DILocation(line: 0, scope: !4158, inlinedAt: !4163)
!4163 = distinct !DILocation(line: 41, column: 2, scope: !4123)
!4164 = !DILocation(line: 95, column: 2, scope: !4158, inlinedAt: !4163)
!4165 = !{i64 2298241}
!4166 = !DILocation(line: 43, column: 24, scope: !4167)
!4167 = distinct !DILexicalBlock(scope: !4123, file: !265, line: 43, column: 6)
!4168 = !DILocation(line: 43, column: 14, scope: !4167)
!4169 = !DILocation(line: 43, column: 6, scope: !4123)
!4170 = !DILocation(line: 0, scope: !4135)
!4171 = !DILocation(line: 48, column: 22, scope: !4172)
!4172 = distinct !DILexicalBlock(scope: !4135, file: !265, line: 48, column: 2)
!4173 = !DILocation(line: 48, column: 20, scope: !4172)
!4174 = !DILocation(line: 48, column: 2, scope: !4135)
!4175 = !DILocation(line: 44, column: 3, scope: !4176)
!4176 = distinct !DILexicalBlock(scope: !4177, file: !265, line: 44, column: 3)
!4177 = distinct !DILexicalBlock(scope: !4178, file: !265, line: 44, column: 3)
!4178 = distinct !DILexicalBlock(scope: !4179, file: !265, line: 44, column: 3)
!4179 = distinct !DILexicalBlock(scope: !4180, file: !265, line: 44, column: 3)
!4180 = distinct !DILexicalBlock(scope: !4167, file: !265, line: 43, column: 37)
!4181 = !DILocation(line: 45, column: 3, scope: !4180)
!4182 = !DILocation(line: 49, column: 26, scope: !4183)
!4183 = distinct !DILexicalBlock(scope: !4172, file: !265, line: 48, column: 62)
!4184 = !DILocation(line: 49, column: 48, scope: !4183)
!4185 = !DILocation(line: 49, column: 12, scope: !4183)
!4186 = !DILocation(line: 49, column: 3, scope: !4183)
!4187 = !DILocation(line: 49, column: 10, scope: !4183)
!4188 = !DILocation(line: 48, column: 58, scope: !4172)
!4189 = distinct !{!4189, !4174, !4190}
!4190 = !DILocation(line: 50, column: 2, scope: !4135)
!4191 = !DILocation(line: 53, column: 1, scope: !4123)
!4192 = distinct !DISubprogram(name: "rtio_sqe_ok", scope: !125, file: !125, line: 578, type: !316, scopeLine: 579, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !260, retainedNodes: !4193)
!4193 = !{!4194, !4195, !4196}
!4194 = !DILocalVariable(name: "r", arg: 1, scope: !4192, file: !125, line: 578, type: !298)
!4195 = !DILocalVariable(name: "sqe", arg: 2, scope: !4192, file: !125, line: 578, type: !279)
!4196 = !DILocalVariable(name: "result", arg: 3, scope: !4192, file: !125, line: 578, type: !108)
!4197 = !DILocation(line: 0, scope: !4192)
!4198 = !DILocation(line: 580, column: 5, scope: !4192)
!4199 = !DILocation(line: 580, column: 15, scope: !4192)
!4200 = !DILocation(line: 580, column: 20, scope: !4192)
!4201 = !DILocation(line: 580, column: 2, scope: !4192)
!4202 = !DILocation(line: 581, column: 1, scope: !4192)
!4203 = distinct !DISubprogram(name: "cbvprintf_package", scope: !549, file: !549, line: 233, type: !4204, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !536, retainedNodes: !4213)
!4204 = !DISubroutineType(types: !4205)
!4205 = !{!108, !104, !439, !113, !105, !4206}
!4206 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4207, line: 99, baseType: !4208)
!4207 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4208 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4207, line: 40, baseType: !4209)
!4209 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !549, baseType: !4210)
!4210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4211)
!4211 = !{!4212}
!4212 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4210, file: !549, line: 18, baseType: !104, size: 32)
!4213 = !{!4214, !4215, !4216, !4217, !4218, !4219, !4220, !4221, !4222, !4223, !4225, !4226, !4227, !4228, !4229, !4230, !4231, !4232, !4233, !4234, !4235, !4236, !4249, !4258, !4261, !4262, !4265, !4268, !4271, !4274, !4280}
!4214 = !DILocalVariable(name: "packaged", arg: 1, scope: !4203, file: !549, line: 233, type: !104)
!4215 = !DILocalVariable(name: "len", arg: 2, scope: !4203, file: !549, line: 233, type: !439)
!4216 = !DILocalVariable(name: "flags", arg: 3, scope: !4203, file: !549, line: 233, type: !113)
!4217 = !DILocalVariable(name: "fmt", arg: 4, scope: !4203, file: !549, line: 234, type: !105)
!4218 = !DILocalVariable(name: "ap", arg: 5, scope: !4203, file: !549, line: 234, type: !4206)
!4219 = !DILocalVariable(name: "buf0", scope: !4203, file: !549, line: 247, type: !209)
!4220 = !DILocalVariable(name: "buf", scope: !4203, file: !549, line: 248, type: !209)
!4221 = !DILocalVariable(name: "size", scope: !4203, file: !549, line: 249, type: !32)
!4222 = !DILocalVariable(name: "align", scope: !4203, file: !549, line: 250, type: !32)
!4223 = !DILocalVariable(name: "str_ptr_pos", scope: !4203, file: !549, line: 251, type: !4224)
!4224 = !DICompositeType(tag: DW_TAG_array_type, baseType: !164, size: 128, elements: !2230)
!4225 = !DILocalVariable(name: "str_ptr_arg", scope: !4203, file: !549, line: 252, type: !4224)
!4226 = !DILocalVariable(name: "s_idx", scope: !4203, file: !549, line: 253, type: !32)
!4227 = !DILocalVariable(name: "s_rw_cnt", scope: !4203, file: !549, line: 254, type: !32)
!4228 = !DILocalVariable(name: "s_ro_cnt", scope: !4203, file: !549, line: 255, type: !32)
!4229 = !DILocalVariable(name: "arg_idx", scope: !4203, file: !549, line: 256, type: !108)
!4230 = !DILocalVariable(name: "i", scope: !4203, file: !549, line: 257, type: !32)
!4231 = !DILocalVariable(name: "s", scope: !4203, file: !549, line: 258, type: !105)
!4232 = !DILocalVariable(name: "parsing", scope: !4203, file: !549, line: 259, type: !422)
!4233 = !DILocalVariable(name: "rws_pos_en", scope: !4203, file: !549, line: 263, type: !422)
!4234 = !DILocalVariable(name: "fros_cnt", scope: !4203, file: !549, line: 268, type: !108)
!4235 = !DILocalVariable(name: "is_str_arg", scope: !4203, file: !549, line: 269, type: !422)
!4236 = !DILocalVariable(name: "pkg_hdr", scope: !4203, file: !549, line: 270, type: !4237)
!4237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4238, size: 32)
!4238 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "cbprintf_package_hdr", file: !4239, line: 78, size: 32, elements: !4240)
!4239 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4240 = !{!4241, !4248}
!4241 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !4238, file: !4239, line: 80, baseType: !4242, size: 32)
!4242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_desc", file: !4239, line: 45, size: 32, elements: !4243)
!4243 = !{!4244, !4245, !4246, !4247}
!4244 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4242, file: !4239, line: 47, baseType: !164, size: 8)
!4245 = !DIDerivedType(tag: DW_TAG_member, name: "str_cnt", scope: !4242, file: !4239, line: 50, baseType: !164, size: 8, offset: 8)
!4246 = !DIDerivedType(tag: DW_TAG_member, name: "ro_str_cnt", scope: !4242, file: !4239, line: 53, baseType: !164, size: 8, offset: 16)
!4247 = !DIDerivedType(tag: DW_TAG_member, name: "rw_str_cnt", scope: !4242, file: !4239, line: 56, baseType: !164, size: 8, offset: 24)
!4248 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !4238, file: !4239, line: 82, baseType: !104, size: 32)
!4249 = !DILocalVariable(name: "v", scope: !4250, file: !549, line: 567, type: !4254)
!4250 = distinct !DILexicalBlock(scope: !4251, file: !549, line: 562, column: 14)
!4251 = distinct !DILexicalBlock(scope: !4252, file: !549, line: 481, column: 18)
!4252 = distinct !DILexicalBlock(scope: !4253, file: !549, line: 466, column: 3)
!4253 = distinct !DILexicalBlock(scope: !4203, file: !549, line: 343, column: 15)
!4254 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4203, file: !549, line: 567, size: 64, elements: !4255)
!4255 = !{!4256, !4257}
!4256 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !4254, file: !549, line: 567, baseType: !542, size: 64)
!4257 = !DIDerivedType(tag: DW_TAG_member, name: "ld", scope: !4254, file: !549, line: 567, baseType: !540, size: 64)
!4258 = !DILocalVariable(name: "is_ro", scope: !4259, file: !549, line: 620, type: !422)
!4259 = distinct !DILexicalBlock(scope: !4260, file: !549, line: 613, column: 19)
!4260 = distinct !DILexicalBlock(scope: !4253, file: !549, line: 613, column: 7)
!4261 = !DILocalVariable(name: "do_ro", scope: !4259, file: !549, line: 621, type: !422)
!4262 = !DILocalVariable(name: "s_ptr_idx", scope: !4263, file: !549, line: 626, type: !113)
!4263 = distinct !DILexicalBlock(scope: !4264, file: !549, line: 625, column: 11)
!4264 = distinct !DILexicalBlock(scope: !4259, file: !549, line: 623, column: 8)
!4265 = !DILocalVariable(name: "v", scope: !4266, file: !549, line: 684, type: !108)
!4266 = distinct !DILexicalBlock(scope: !4267, file: !549, line: 683, column: 35)
!4267 = distinct !DILexicalBlock(scope: !4260, file: !549, line: 683, column: 14)
!4268 = !DILocalVariable(name: "v", scope: !4269, file: !549, line: 691, type: !144)
!4269 = distinct !DILexicalBlock(scope: !4270, file: !549, line: 690, column: 36)
!4270 = distinct !DILexicalBlock(scope: !4267, file: !549, line: 690, column: 14)
!4271 = !DILocalVariable(name: "v", scope: !4272, file: !549, line: 698, type: !112)
!4272 = distinct !DILexicalBlock(scope: !4273, file: !549, line: 697, column: 41)
!4273 = distinct !DILexicalBlock(scope: !4270, file: !549, line: 697, column: 14)
!4274 = !DILocalVariable(name: "pos", scope: !4275, file: !549, line: 762, type: !164)
!4275 = distinct !DILexicalBlock(scope: !4276, file: !549, line: 757, column: 31)
!4276 = distinct !DILexicalBlock(scope: !4277, file: !549, line: 757, column: 3)
!4277 = distinct !DILexicalBlock(scope: !4278, file: !549, line: 757, column: 3)
!4278 = distinct !DILexicalBlock(scope: !4279, file: !549, line: 756, column: 16)
!4279 = distinct !DILexicalBlock(scope: !4203, file: !549, line: 756, column: 6)
!4280 = !DILabel(scope: !4259, name: "process_string", file: !549, line: 615)
!4281 = !DILocation(line: 0, scope: !4203)
!4282 = !DILocation(line: 251, column: 2, scope: !4203)
!4283 = !DILocation(line: 251, column: 10, scope: !4203)
!4284 = !DILocation(line: 252, column: 2, scope: !4203)
!4285 = !DILocation(line: 252, column: 10, scope: !4203)
!4286 = !DILocation(line: 263, column: 29, scope: !4203)
!4287 = !DILocation(line: 263, column: 21, scope: !4203)
!4288 = !DILocation(line: 268, column: 21, scope: !4203)
!4289 = !DILocation(line: 268, column: 19, scope: !4203)
!4290 = !DILocation(line: 273, column: 6, scope: !4291)
!4291 = distinct !DILexicalBlock(scope: !4203, file: !549, line: 273, column: 6)
!4292 = !DILocation(line: 273, column: 26, scope: !4291)
!4293 = !DILocation(line: 273, column: 6, scope: !4203)
!4294 = !DILocation(line: 297, column: 6, scope: !4203)
!4295 = !DILocation(line: 305, column: 11, scope: !4296)
!4296 = distinct !DILexicalBlock(scope: !4203, file: !549, line: 305, column: 6)
!4297 = !DILocation(line: 305, column: 6, scope: !4203)
!4298 = !DILocation(line: 327, column: 19, scope: !4299)
!4299 = distinct !DILexicalBlock(scope: !4203, file: !549, line: 327, column: 6)
!4300 = !DILocation(line: 327, column: 22, scope: !4299)
!4301 = !DILocation(line: 327, column: 33, scope: !4299)
!4302 = !DILocation(line: 327, column: 50, scope: !4299)
!4303 = !DILocation(line: 327, column: 6, scope: !4203)
!4304 = !DILocation(line: 338, column: 9, scope: !4203)
!4305 = !DILocation(line: 341, column: 2, scope: !4203)
!4306 = !DILocation(line: 472, column: 8, scope: !4252)
!4307 = !DILocation(line: 473, column: 14, scope: !4308)
!4308 = distinct !DILexicalBlock(scope: !4309, file: !549, line: 473, column: 9)
!4309 = distinct !DILexicalBlock(scope: !4310, file: !549, line: 472, column: 18)
!4310 = distinct !DILexicalBlock(scope: !4252, file: !549, line: 472, column: 8)
!4311 = !DILocation(line: 473, column: 9, scope: !4309)
!4312 = !DILocation(line: 479, column: 5, scope: !4309)
!4313 = !DILocation(line: 468, column: 9, scope: !4314)
!4314 = distinct !DILexicalBlock(scope: !4252, file: !549, line: 468, column: 8)
!4315 = !DILocation(line: 468, column: 8, scope: !4314)
!4316 = !DILocation(line: 468, column: 15, scope: !4314)
!4317 = !DILocation(line: 468, column: 8, scope: !4252)
!4318 = distinct !{!4318, !4319, !4320}
!4319 = !DILocation(line: 343, column: 2, scope: !4203)
!4320 = !DILocation(line: 712, column: 2, scope: !4203)
!4321 = !DILocation(line: 481, column: 4, scope: !4252)
!4322 = !DILocation(line: 484, column: 12, scope: !4251)
!4323 = !DILocation(line: 485, column: 5, scope: !4251)
!4324 = !DILocation(line: 505, column: 5, scope: !4251)
!4325 = !DILocation(line: 518, column: 5, scope: !4251)
!4326 = !DILocation(line: 523, column: 5, scope: !4251)
!4327 = !DILocation(line: 532, column: 9, scope: !4328)
!4328 = distinct !DILexicalBlock(scope: !4251, file: !549, line: 532, column: 9)
!4329 = !DILocation(line: 532, column: 17, scope: !4328)
!4330 = !DILocation(line: 532, column: 9, scope: !4251)
!4331 = !DILocation(line: 533, column: 10, scope: !4332)
!4332 = distinct !DILexicalBlock(scope: !4333, file: !549, line: 533, column: 10)
!4333 = distinct !DILexicalBlock(scope: !4328, file: !549, line: 532, column: 25)
!4334 = !DILocation(line: 533, column: 18, scope: !4332)
!4335 = !DILocation(line: 0, scope: !4336)
!4336 = distinct !DILexicalBlock(scope: !4250, file: !549, line: 569, column: 9)
!4337 = !DILocation(line: 0, scope: !4250)
!4338 = !DILocation(line: 579, column: 20, scope: !4250)
!4339 = !DILocation(line: 579, column: 11, scope: !4250)
!4340 = !DILocation(line: 580, column: 9, scope: !4250)
!4341 = !DILocation(line: 582, column: 21, scope: !4342)
!4342 = distinct !DILexicalBlock(scope: !4343, file: !549, line: 582, column: 10)
!4343 = distinct !DILexicalBlock(scope: !4344, file: !549, line: 580, column: 23)
!4344 = distinct !DILexicalBlock(scope: !4250, file: !549, line: 580, column: 9)
!4345 = !DILocation(line: 582, column: 28, scope: !4342)
!4346 = !DILocation(line: 582, column: 10, scope: !4343)
!4347 = !DILocation(line: 0, scope: !4348)
!4348 = distinct !DILexicalBlock(scope: !4349, file: !549, line: 587, column: 17)
!4349 = distinct !DILexicalBlock(scope: !4343, file: !549, line: 585, column: 10)
!4350 = !DILocation(line: 593, column: 9, scope: !4250)
!4351 = !DILocation(line: 600, column: 5, scope: !4251)
!4352 = !DILocation(line: 605, column: 18, scope: !4253)
!4353 = !DILocation(line: 605, column: 9, scope: !4253)
!4354 = !DILocation(line: 608, column: 20, scope: !4355)
!4355 = distinct !DILexicalBlock(scope: !4253, file: !549, line: 608, column: 7)
!4356 = !DILocation(line: 608, column: 23, scope: !4355)
!4357 = !DILocation(line: 608, column: 34, scope: !4355)
!4358 = !DILocation(line: 608, column: 41, scope: !4355)
!4359 = !DILocation(line: 608, column: 7, scope: !4253)
!4360 = !DILocation(line: 613, column: 7, scope: !4253)
!4361 = !DILocation(line: 614, column: 8, scope: !4259)
!4362 = !DILocation(line: 614, column: 4, scope: !4259)
!4363 = !DILocation(line: 255, column: 15, scope: !4203)
!4364 = !DILocation(line: 256, column: 6, scope: !4203)
!4365 = !DILocation(line: 254, column: 15, scope: !4203)
!4366 = !DILocation(line: 253, column: 15, scope: !4203)
!4367 = !DILocation(line: 320, column: 7, scope: !4368)
!4368 = distinct !DILexicalBlock(scope: !4296, file: !549, line: 305, column: 20)
!4369 = !DILocation(line: 615, column: 1, scope: !4259)
!4370 = !DILocation(line: 616, column: 8, scope: !4259)
!4371 = !DILocation(line: 617, column: 5, scope: !4372)
!4372 = distinct !DILexicalBlock(scope: !4373, file: !549, line: 616, column: 22)
!4373 = distinct !DILexicalBlock(scope: !4259, file: !549, line: 616, column: 8)
!4374 = !DILocation(line: 617, column: 25, scope: !4372)
!4375 = !DILocation(line: 618, column: 4, scope: !4372)
!4376 = !DILocation(line: 620, column: 26, scope: !4259)
!4377 = !DILocation(line: 620, column: 29, scope: !4259)
!4378 = !DILocation(line: 620, column: 17, scope: !4259)
!4379 = !DILocation(line: 620, column: 43, scope: !4259)
!4380 = !DILocation(line: 0, scope: !4259)
!4381 = !DILocation(line: 623, column: 14, scope: !4264)
!4382 = !DILocation(line: 626, column: 26, scope: !4263)
!4383 = !DILocation(line: 626, column: 37, scope: !4263)
!4384 = !DILocation(line: 0, scope: !4263)
!4385 = !DILocation(line: 634, column: 15, scope: !4386)
!4386 = distinct !DILexicalBlock(scope: !4263, file: !549, line: 634, column: 9)
!4387 = !DILocation(line: 644, column: 9, scope: !4263)
!4388 = !DILocation(line: 649, column: 27, scope: !4389)
!4389 = distinct !DILexicalBlock(scope: !4390, file: !549, line: 644, column: 23)
!4390 = distinct !DILexicalBlock(scope: !4263, file: !549, line: 644, column: 9)
!4391 = !DILocation(line: 649, column: 6, scope: !4389)
!4392 = !DILocation(line: 649, column: 25, scope: !4389)
!4393 = !DILocation(line: 650, column: 27, scope: !4389)
!4394 = !DILocation(line: 650, column: 6, scope: !4389)
!4395 = !DILocation(line: 650, column: 25, scope: !4389)
!4396 = !DILocation(line: 651, column: 10, scope: !4389)
!4397 = !DILocation(line: 653, column: 26, scope: !4398)
!4398 = distinct !DILexicalBlock(scope: !4399, file: !549, line: 651, column: 17)
!4399 = distinct !DILexicalBlock(scope: !4389, file: !549, line: 651, column: 10)
!4400 = !DILocation(line: 654, column: 15, scope: !4398)
!4401 = !DILocation(line: 655, column: 6, scope: !4398)
!4402 = !DILocation(line: 656, column: 15, scope: !4403)
!4403 = distinct !DILexicalBlock(scope: !4399, file: !549, line: 655, column: 13)
!4404 = !DILocation(line: 658, column: 16, scope: !4390)
!4405 = !DILocation(line: 663, column: 10, scope: !4406)
!4406 = distinct !DILexicalBlock(scope: !4407, file: !549, line: 658, column: 23)
!4407 = distinct !DILexicalBlock(scope: !4390, file: !549, line: 658, column: 16)
!4408 = !DILocation(line: 664, column: 5, scope: !4406)
!4409 = !DILocation(line: 664, column: 16, scope: !4407)
!4410 = !DILocation(line: 669, column: 10, scope: !4411)
!4411 = distinct !DILexicalBlock(scope: !4412, file: !549, line: 664, column: 28)
!4412 = distinct !DILexicalBlock(scope: !4407, file: !549, line: 664, column: 16)
!4413 = !DILocation(line: 670, column: 5, scope: !4411)
!4414 = !DILocation(line: 675, column: 13, scope: !4415)
!4415 = distinct !DILexicalBlock(scope: !4412, file: !549, line: 670, column: 12)
!4416 = !DILocation(line: 675, column: 27, scope: !4415)
!4417 = !DILocation(line: 675, column: 10, scope: !4415)
!4418 = !DILocation(line: 678, column: 10, scope: !4263)
!4419 = !DILocation(line: 680, column: 8, scope: !4259)
!4420 = !DILocation(line: 683, column: 14, scope: !4260)
!4421 = !DILocation(line: 684, column: 12, scope: !4266)
!4422 = !DILocation(line: 0, scope: !4266)
!4423 = !DILocation(line: 686, column: 8, scope: !4266)
!4424 = !DILocation(line: 687, column: 5, scope: !4425)
!4425 = distinct !DILexicalBlock(scope: !4426, file: !549, line: 686, column: 22)
!4426 = distinct !DILexicalBlock(scope: !4266, file: !549, line: 686, column: 8)
!4427 = !DILocation(line: 687, column: 17, scope: !4425)
!4428 = !DILocation(line: 688, column: 4, scope: !4425)
!4429 = !DILocation(line: 698, column: 18, scope: !4272)
!4430 = !DILocation(line: 0, scope: !4272)
!4431 = !DILocation(line: 700, column: 8, scope: !4272)
!4432 = !DILocation(line: 704, column: 6, scope: !4433)
!4433 = distinct !DILexicalBlock(scope: !4434, file: !549, line: 703, column: 12)
!4434 = distinct !DILexicalBlock(scope: !4435, file: !549, line: 701, column: 9)
!4435 = distinct !DILexicalBlock(scope: !4436, file: !549, line: 700, column: 22)
!4436 = distinct !DILexicalBlock(scope: !4272, file: !549, line: 700, column: 8)
!4437 = !DILocation(line: 704, column: 24, scope: !4433)
!4438 = !DILocation(line: 706, column: 4, scope: !4435)
!4439 = !DILocation(line: 0, scope: !4267)
!4440 = !DILocation(line: 0, scope: !4253)
!4441 = !DILocation(line: 720, column: 6, scope: !4442)
!4442 = distinct !DILexicalBlock(scope: !4203, file: !549, line: 720, column: 6)
!4443 = !DILocation(line: 720, column: 17, scope: !4442)
!4444 = !DILocation(line: 720, column: 31, scope: !4442)
!4445 = !DILocation(line: 720, column: 6, scope: !4203)
!4446 = !DILocation(line: 729, column: 6, scope: !4203)
!4447 = !DILocation(line: 730, column: 21, scope: !4448)
!4448 = distinct !DILexicalBlock(scope: !4449, file: !549, line: 729, column: 20)
!4449 = distinct !DILexicalBlock(scope: !4203, file: !549, line: 729, column: 6)
!4450 = !DILocation(line: 730, column: 27, scope: !4448)
!4451 = !DILocation(line: 730, column: 3, scope: !4448)
!4452 = !DILocation(line: 737, column: 22, scope: !4203)
!4453 = !DILocation(line: 737, column: 20, scope: !4203)
!4454 = !DILocation(line: 0, scope: !4455)
!4455 = distinct !DILexicalBlock(scope: !4203, file: !549, line: 739, column: 6)
!4456 = !DILocation(line: 745, column: 17, scope: !4457)
!4457 = distinct !DILexicalBlock(scope: !4455, file: !549, line: 743, column: 9)
!4458 = !DILocation(line: 745, column: 25, scope: !4457)
!4459 = !DILocation(line: 746, column: 17, scope: !4457)
!4460 = !DILocation(line: 746, column: 28, scope: !4457)
!4461 = !DILocation(line: 749, column: 29, scope: !4203)
!4462 = !DILocation(line: 749, column: 16, scope: !4203)
!4463 = !DILocation(line: 749, column: 27, scope: !4203)
!4464 = !DILocation(line: 756, column: 6, scope: !4279)
!4465 = !DILocation(line: 756, column: 6, scope: !4203)
!4466 = !DILocation(line: 757, column: 3, scope: !4277)
!4467 = !DILocation(line: 758, column: 10, scope: !4468)
!4468 = distinct !DILexicalBlock(scope: !4275, file: !549, line: 758, column: 8)
!4469 = !DILocation(line: 758, column: 25, scope: !4468)
!4470 = !DILocation(line: 758, column: 8, scope: !4275)
!4471 = !DILocation(line: 0, scope: !4275)
!4472 = !DILocation(line: 765, column: 8, scope: !4473)
!4473 = distinct !DILexicalBlock(scope: !4275, file: !549, line: 765, column: 8)
!4474 = !DILocation(line: 765, column: 19, scope: !4473)
!4475 = !DILocation(line: 765, column: 23, scope: !4473)
!4476 = !DILocation(line: 765, column: 8, scope: !4275)
!4477 = !DILocation(line: 762, column: 33, scope: !4275)
!4478 = !DILocation(line: 769, column: 8, scope: !4275)
!4479 = !DILocation(line: 769, column: 11, scope: !4275)
!4480 = !DILocation(line: 757, column: 27, scope: !4276)
!4481 = !DILocation(line: 757, column: 17, scope: !4276)
!4482 = distinct !{!4482, !4466, !4483}
!4483 = !DILocation(line: 770, column: 3, scope: !4277)
!4484 = !DILocation(line: 774, column: 16, scope: !4485)
!4485 = distinct !DILexicalBlock(scope: !4486, file: !549, line: 774, column: 2)
!4486 = distinct !DILexicalBlock(scope: !4203, file: !549, line: 774, column: 2)
!4487 = !DILocation(line: 774, column: 2, scope: !4486)
!4488 = !DILocation(line: 776, column: 16, scope: !4489)
!4489 = distinct !DILexicalBlock(scope: !4490, file: !549, line: 776, column: 7)
!4490 = distinct !DILexicalBlock(scope: !4485, file: !549, line: 774, column: 30)
!4491 = !DILocation(line: 776, column: 19, scope: !4489)
!4492 = !DILocation(line: 776, column: 34, scope: !4489)
!4493 = !DILocation(line: 776, column: 7, scope: !4490)
!4494 = !DILocation(line: 780, column: 7, scope: !4490)
!4495 = !DILocation(line: 782, column: 13, scope: !4496)
!4496 = distinct !DILexicalBlock(scope: !4497, file: !549, line: 780, column: 19)
!4497 = distinct !DILexicalBlock(scope: !4490, file: !549, line: 780, column: 7)
!4498 = !DILocation(line: 782, column: 8, scope: !4496)
!4499 = !DILocation(line: 782, column: 11, scope: !4496)
!4500 = !DILocation(line: 783, column: 3, scope: !4496)
!4501 = !DILocation(line: 785, column: 26, scope: !4502)
!4502 = distinct !DILexicalBlock(scope: !4497, file: !549, line: 783, column: 10)
!4503 = !DILocation(line: 785, column: 41, scope: !4502)
!4504 = !DILocation(line: 785, column: 24, scope: !4502)
!4505 = !DILocation(line: 785, column: 8, scope: !4502)
!4506 = !DILocation(line: 787, column: 52, scope: !4502)
!4507 = !DILocation(line: 789, column: 11, scope: !4502)
!4508 = !DILocation(line: 789, column: 21, scope: !4502)
!4509 = !DILocation(line: 0, scope: !4497)
!4510 = !DILocation(line: 793, column: 7, scope: !4511)
!4511 = distinct !DILexicalBlock(scope: !4490, file: !549, line: 793, column: 7)
!4512 = !DILocation(line: 793, column: 18, scope: !4511)
!4513 = !DILocation(line: 793, column: 22, scope: !4511)
!4514 = !DILocation(line: 793, column: 29, scope: !4511)
!4515 = !DILocation(line: 793, column: 7, scope: !4490)
!4516 = !DILocation(line: 797, column: 12, scope: !4490)
!4517 = !DILocation(line: 797, column: 7, scope: !4490)
!4518 = !DILocation(line: 797, column: 10, scope: !4490)
!4519 = !DILocation(line: 799, column: 3, scope: !4490)
!4520 = !DILocation(line: 800, column: 7, scope: !4490)
!4521 = !DILocation(line: 801, column: 2, scope: !4490)
!4522 = !DILocation(line: 338, column: 4, scope: !4203)
!4523 = !DILocation(line: 774, column: 26, scope: !4485)
!4524 = distinct !{!4524, !4487, !4525}
!4525 = !DILocation(line: 801, column: 2, scope: !4486)
!4526 = !DILocation(line: 808, column: 9, scope: !4203)
!4527 = !DILocation(line: 808, column: 2, scope: !4203)
!4528 = !DILocation(line: 813, column: 1, scope: !4203)
!4529 = distinct !DISubprogram(name: "ptr_in_rodata", scope: !549, file: !549, line: 33, type: !4530, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !536, retainedNodes: !4532)
!4530 = !DISubroutineType(types: !4531)
!4531 = !{!422, !105}
!4532 = !{!4533}
!4533 = !DILocalVariable(name: "addr", arg: 1, scope: !4529, file: !549, line: 33, type: !105)
!4534 = !DILocation(line: 0, scope: !4529)
!4535 = !DILocation(line: 41, column: 9, scope: !4529)
!4536 = !DILocation(line: 41, column: 2, scope: !4529)
!4537 = distinct !DISubprogram(name: "linker_is_in_rodata", scope: !4538, file: !4538, line: 24, type: !4539, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !536, retainedNodes: !4541)
!4538 = !DIFile(filename: "zephyr/include/zephyr/linker/utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4539 = !DISubroutineType(types: !4540)
!4540 = !{!422, !13}
!4541 = !{!4542}
!4542 = !DILocalVariable(name: "addr", arg: 1, scope: !4537, file: !4538, line: 24, type: !13)
!4543 = !DILocation(line: 0, scope: !4537)
!4544 = !DILocation(line: 49, column: 30, scope: !4537)
!4545 = !DILocation(line: 49, column: 57, scope: !4537)
!4546 = !DILocation(line: 49, column: 2, scope: !4537)
!4547 = distinct !DISubprogram(name: "cbprintf_package", scope: !549, file: !549, line: 815, type: !4548, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !536, retainedNodes: !4550)
!4548 = !DISubroutineType(types: !4549)
!4549 = !{!108, !104, !439, !113, !105, null}
!4550 = !{!4551, !4552, !4553, !4554, !4555, !4556}
!4551 = !DILocalVariable(name: "packaged", arg: 1, scope: !4547, file: !549, line: 815, type: !104)
!4552 = !DILocalVariable(name: "len", arg: 2, scope: !4547, file: !549, line: 815, type: !439)
!4553 = !DILocalVariable(name: "flags", arg: 3, scope: !4547, file: !549, line: 815, type: !113)
!4554 = !DILocalVariable(name: "format", arg: 4, scope: !4547, file: !549, line: 816, type: !105)
!4555 = !DILocalVariable(name: "ap", scope: !4547, file: !549, line: 818, type: !4206)
!4556 = !DILocalVariable(name: "ret", scope: !4547, file: !549, line: 819, type: !108)
!4557 = !DILocation(line: 0, scope: !4547)
!4558 = !DILocation(line: 818, column: 2, scope: !4547)
!4559 = !DILocation(line: 818, column: 10, scope: !4547)
!4560 = !DILocation(line: 821, column: 2, scope: !4547)
!4561 = !DILocation(line: 822, column: 8, scope: !4547)
!4562 = !DILocation(line: 823, column: 2, scope: !4547)
!4563 = !DILocation(line: 825, column: 1, scope: !4547)
!4564 = !DILocation(line: 824, column: 2, scope: !4547)
!4565 = distinct !DISubprogram(name: "cbpprintf_external", scope: !549, file: !549, line: 827, type: !4566, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !536, retainedNodes: !4576)
!4566 = !DISubroutineType(types: !4567)
!4567 = !{!108, !4568, !4572, !104, !104}
!4568 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !4239, line: 297, baseType: !4569)
!4569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4570, size: 32)
!4570 = !DISubroutineType(types: !4571)
!4571 = !{!108, null}
!4572 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbvprintf_external_formatter_func", file: !4239, line: 328, baseType: !4573)
!4573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4574, size: 32)
!4574 = !DISubroutineType(types: !4575)
!4575 = !{!108, !4568, !104, !105, !4206}
!4576 = !{!4577, !4578, !4579, !4580, !4581, !4582, !4588, !4589, !4590, !4591, !4592, !4593, !4594, !4595}
!4577 = !DILocalVariable(name: "out", arg: 1, scope: !4565, file: !549, line: 827, type: !4568)
!4578 = !DILocalVariable(name: "formatter", arg: 2, scope: !4565, file: !549, line: 828, type: !4572)
!4579 = !DILocalVariable(name: "ctx", arg: 3, scope: !4565, file: !549, line: 829, type: !104)
!4580 = !DILocalVariable(name: "packaged", arg: 4, scope: !4565, file: !549, line: 829, type: !104)
!4581 = !DILocalVariable(name: "buf", scope: !4565, file: !549, line: 831, type: !209)
!4582 = !DILocalVariable(name: "hdr", scope: !4565, file: !549, line: 832, type: !4583)
!4583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4584, size: 32)
!4584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_hdr_ext", file: !4239, line: 96, size: 64, elements: !4585)
!4585 = !{!4586, !4587}
!4586 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !4584, file: !4239, line: 98, baseType: !4238, size: 32)
!4587 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !4584, file: !4239, line: 101, baseType: !443, size: 32, offset: 32)
!4588 = !DILocalVariable(name: "s", scope: !4565, file: !549, line: 833, type: !443)
!4589 = !DILocalVariable(name: "ps", scope: !4565, file: !549, line: 833, type: !547)
!4590 = !DILocalVariable(name: "i", scope: !4565, file: !549, line: 834, type: !32)
!4591 = !DILocalVariable(name: "args_size", scope: !4565, file: !549, line: 834, type: !32)
!4592 = !DILocalVariable(name: "s_nbr", scope: !4565, file: !549, line: 834, type: !32)
!4593 = !DILocalVariable(name: "ros_nbr", scope: !4565, file: !549, line: 834, type: !32)
!4594 = !DILocalVariable(name: "rws_nbr", scope: !4565, file: !549, line: 834, type: !32)
!4595 = !DILocalVariable(name: "s_idx", scope: !4565, file: !549, line: 834, type: !32)
!4596 = !DILocation(line: 0, scope: !4565)
!4597 = !DILocation(line: 836, column: 10, scope: !4598)
!4598 = distinct !DILexicalBlock(scope: !4565, file: !549, line: 836, column: 6)
!4599 = !DILocation(line: 836, column: 6, scope: !4565)
!4600 = !DILocation(line: 842, column: 28, scope: !4565)
!4601 = !DILocation(line: 842, column: 14, scope: !4565)
!4602 = !DILocation(line: 852, column: 16, scope: !4603)
!4603 = distinct !DILexicalBlock(scope: !4604, file: !549, line: 852, column: 2)
!4604 = distinct !DILexicalBlock(scope: !4565, file: !549, line: 852, column: 2)
!4605 = !DILocation(line: 852, column: 2, scope: !4604)
!4606 = !DILocation(line: 841, column: 28, scope: !4565)
!4607 = !DILocation(line: 841, column: 14, scope: !4565)
!4608 = !DILocation(line: 841, column: 32, scope: !4565)
!4609 = !DILocation(line: 847, column: 19, scope: !4565)
!4610 = !DILocation(line: 843, column: 28, scope: !4565)
!4611 = !DILocation(line: 843, column: 14, scope: !4565)
!4612 = !DILocation(line: 847, column: 31, scope: !4565)
!4613 = !DILocation(line: 844, column: 28, scope: !4565)
!4614 = !DILocation(line: 844, column: 14, scope: !4565)
!4615 = !DILocation(line: 847, column: 45, scope: !4565)
!4616 = !DILocation(line: 847, column: 41, scope: !4565)
!4617 = !DILocation(line: 854, column: 24, scope: !4618)
!4618 = distinct !DILexicalBlock(scope: !4603, file: !549, line: 852, column: 30)
!4619 = !DILocation(line: 854, column: 11, scope: !4618)
!4620 = !DILocation(line: 855, column: 30, scope: !4618)
!4621 = !DILocation(line: 855, column: 22, scope: !4618)
!4622 = !DILocation(line: 855, column: 8, scope: !4618)
!4623 = !DILocation(line: 857, column: 7, scope: !4618)
!4624 = !DILocation(line: 859, column: 8, scope: !4618)
!4625 = !DILocation(line: 859, column: 18, scope: !4618)
!4626 = !DILocation(line: 859, column: 5, scope: !4618)
!4627 = !DILocation(line: 852, column: 26, scope: !4603)
!4628 = distinct !{!4628, !4605, !4629}
!4629 = !DILocation(line: 860, column: 2, scope: !4604)
!4630 = !DILocation(line: 863, column: 6, scope: !4565)
!4631 = !DILocation(line: 866, column: 56, scope: !4565)
!4632 = !DILocation(line: 866, column: 9, scope: !4565)
!4633 = !DILocation(line: 866, column: 2, scope: !4565)
!4634 = !DILocation(line: 867, column: 1, scope: !4565)
!4635 = distinct !DISubprogram(name: "cbprintf_via_va_list", scope: !549, file: !549, line: 179, type: !4636, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !536, retainedNodes: !4638)
!4636 = !DISubroutineType(types: !4637)
!4637 = !{!108, !4568, !4572, !104, !105, !104}
!4638 = !{!4639, !4640, !4641, !4642, !4643, !4644}
!4639 = !DILocalVariable(name: "out", arg: 1, scope: !4635, file: !549, line: 179, type: !4568)
!4640 = !DILocalVariable(name: "formatter", arg: 2, scope: !4635, file: !549, line: 180, type: !4572)
!4641 = !DILocalVariable(name: "ctx", arg: 3, scope: !4635, file: !549, line: 181, type: !104)
!4642 = !DILocalVariable(name: "fmt", arg: 4, scope: !4635, file: !549, line: 182, type: !105)
!4643 = !DILocalVariable(name: "buf", arg: 5, scope: !4635, file: !549, line: 182, type: !104)
!4644 = !DILocalVariable(name: "u", scope: !4635, file: !549, line: 187, type: !4645)
!4645 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4635, file: !549, line: 184, size: 32, elements: !4646)
!4646 = !{!4647, !4648}
!4647 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !4645, file: !549, line: 185, baseType: !4206, size: 32)
!4648 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4645, file: !549, line: 186, baseType: !104, size: 32)
!4649 = !DILocation(line: 0, scope: !4635)
!4650 = !DILocation(line: 191, column: 9, scope: !4635)
!4651 = !DILocation(line: 191, column: 2, scope: !4635)
!4652 = distinct !DISubprogram(name: "is_ptr", scope: !549, file: !549, line: 881, type: !4653, scopeLine: 882, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !536, retainedNodes: !4655)
!4653 = !DISubroutineType(types: !4654)
!4654 = !{!422, !105, !108}
!4655 = !{!4656, !4657, !4658, !4659, !4660}
!4656 = !DILocalVariable(name: "fmt", arg: 1, scope: !4652, file: !549, line: 881, type: !105)
!4657 = !DILocalVariable(name: "n", arg: 2, scope: !4652, file: !549, line: 881, type: !108)
!4658 = !DILocalVariable(name: "c", scope: !4652, file: !549, line: 883, type: !107)
!4659 = !DILocalVariable(name: "mod", scope: !4652, file: !549, line: 884, type: !422)
!4660 = !DILocalVariable(name: "cnt", scope: !4652, file: !549, line: 885, type: !108)
!4661 = !DILocation(line: 0, scope: !4652)
!4662 = !DILocation(line: 887, column: 14, scope: !4652)
!4663 = !DILocation(line: 887, column: 22, scope: !4652)
!4664 = !DILocation(line: 887, column: 2, scope: !4652)
!4665 = !DILocation(line: 887, column: 18, scope: !4652)
!4666 = !DILocation(line: 888, column: 7, scope: !4667)
!4667 = distinct !DILexicalBlock(scope: !4652, file: !549, line: 887, column: 31)
!4668 = !DILocation(line: 889, column: 12, scope: !4669)
!4669 = distinct !DILexicalBlock(scope: !4670, file: !549, line: 889, column: 8)
!4670 = distinct !DILexicalBlock(scope: !4671, file: !549, line: 888, column: 12)
!4671 = distinct !DILexicalBlock(scope: !4667, file: !549, line: 888, column: 7)
!4672 = !DILocation(line: 889, column: 8, scope: !4670)
!4673 = !DILocation(line: 890, column: 11, scope: !4674)
!4674 = distinct !DILexicalBlock(scope: !4675, file: !549, line: 890, column: 9)
!4675 = distinct !DILexicalBlock(scope: !4669, file: !549, line: 889, column: 18)
!4676 = !DILocation(line: 890, column: 9, scope: !4675)
!4677 = !DILocation(line: 892, column: 16, scope: !4678)
!4678 = distinct !DILexicalBlock(scope: !4674, file: !549, line: 892, column: 16)
!4679 = !DILocation(line: 892, column: 16, scope: !4674)
!4680 = !DILocation(line: 895, column: 15, scope: !4681)
!4681 = distinct !DILexicalBlock(scope: !4669, file: !549, line: 895, column: 15)
!4682 = !DILocation(line: 895, column: 15, scope: !4669)
!4683 = !DILocation(line: 900, column: 9, scope: !4684)
!4684 = distinct !DILexicalBlock(scope: !4667, file: !549, line: 900, column: 7)
!4685 = !DILocation(line: 900, column: 7, scope: !4667)
!4686 = distinct !{!4686, !4664, !4687}
!4687 = !DILocation(line: 903, column: 2, scope: !4652)
!4688 = !DILocation(line: 906, column: 1, scope: !4652)
!4689 = distinct !DISubprogram(name: "is_fmt_spec", scope: !549, file: !549, line: 873, type: !4690, scopeLine: 874, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !536, retainedNodes: !4692)
!4690 = !DISubroutineType(types: !4691)
!4691 = !{!422, !107}
!4692 = !{!4693}
!4693 = !DILocalVariable(name: "c", arg: 1, scope: !4689, file: !549, line: 873, type: !107)
!4694 = !DILocation(line: 0, scope: !4689)
!4695 = !DILocation(line: 875, column: 19, scope: !4689)
!4696 = !DILocation(line: 875, column: 2, scope: !4689)
!4697 = distinct !DISubprogram(name: "cbprintf_package_convert", scope: !549, file: !549, line: 908, type: !4698, scopeLine: 915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !536, retainedNodes: !4704)
!4698 = !DISubroutineType(types: !4699)
!4699 = !{!108, !104, !439, !4700, !104, !113, !3180, !439}
!4700 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_convert_cb", file: !4239, line: 308, baseType: !4701)
!4701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4702, size: 32)
!4702 = !DISubroutineType(types: !4703)
!4703 = !{!108, !13, !439, !104}
!4704 = !{!4705, !4706, !4707, !4708, !4709, !4710, !4711, !4712, !4713, !4714, !4715, !4716, !4717, !4718, !4719, !4720, !4722, !4723, !4724, !4725, !4726, !4732, !4735, !4736, !4737, !4739, !4742, !4743, !4744, !4745, !4746, !4747, !4748, !4749, !4750, !4751, !4752, !4753, !4755, !4758, !4759, !4760, !4761, !4762, !4763, !4765, !4768, !4769, !4770}
!4705 = !DILocalVariable(name: "in_packaged", arg: 1, scope: !4697, file: !549, line: 908, type: !104)
!4706 = !DILocalVariable(name: "in_len", arg: 2, scope: !4697, file: !549, line: 909, type: !439)
!4707 = !DILocalVariable(name: "cb", arg: 3, scope: !4697, file: !549, line: 910, type: !4700)
!4708 = !DILocalVariable(name: "ctx", arg: 4, scope: !4697, file: !549, line: 911, type: !104)
!4709 = !DILocalVariable(name: "flags", arg: 5, scope: !4697, file: !549, line: 912, type: !113)
!4710 = !DILocalVariable(name: "strl", arg: 6, scope: !4697, file: !549, line: 913, type: !3180)
!4711 = !DILocalVariable(name: "strl_len", arg: 7, scope: !4697, file: !549, line: 914, type: !439)
!4712 = !DILocalVariable(name: "buf", scope: !4697, file: !549, line: 918, type: !209)
!4713 = !DILocalVariable(name: "buf32", scope: !4697, file: !549, line: 919, type: !1247)
!4714 = !DILocalVariable(name: "args_size", scope: !4697, file: !549, line: 920, type: !32)
!4715 = !DILocalVariable(name: "ros_nbr", scope: !4697, file: !549, line: 920, type: !32)
!4716 = !DILocalVariable(name: "rws_nbr", scope: !4697, file: !549, line: 920, type: !32)
!4717 = !DILocalVariable(name: "fmt_present", scope: !4697, file: !549, line: 921, type: !422)
!4718 = !DILocalVariable(name: "rw_cpy", scope: !4697, file: !549, line: 922, type: !422)
!4719 = !DILocalVariable(name: "ro_cpy", scope: !4697, file: !549, line: 923, type: !422)
!4720 = !DILocalVariable(name: "in_desc", scope: !4697, file: !549, line: 924, type: !4721)
!4721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4242, size: 32)
!4722 = !DILocalVariable(name: "out_len", scope: !4697, file: !549, line: 960, type: !108)
!4723 = !DILocalVariable(name: "fmt", scope: !4697, file: !549, line: 965, type: !105)
!4724 = !DILocalVariable(name: "str_pos", scope: !4697, file: !549, line: 966, type: !209)
!4725 = !DILocalVariable(name: "strl_cnt", scope: !4697, file: !549, line: 967, type: !439)
!4726 = !DILocalVariable(name: "i", scope: !4727, file: !549, line: 973, type: !108)
!4727 = distinct !DILexicalBlock(scope: !4728, file: !549, line: 973, column: 4)
!4728 = distinct !DILexicalBlock(scope: !4729, file: !549, line: 972, column: 15)
!4729 = distinct !DILexicalBlock(scope: !4730, file: !549, line: 972, column: 7)
!4730 = distinct !DILexicalBlock(scope: !4731, file: !549, line: 970, column: 18)
!4731 = distinct !DILexicalBlock(scope: !4697, file: !549, line: 970, column: 6)
!4732 = !DILocalVariable(name: "str", scope: !4733, file: !549, line: 974, type: !105)
!4733 = distinct !DILexicalBlock(scope: !4734, file: !549, line: 973, column: 38)
!4734 = distinct !DILexicalBlock(scope: !4727, file: !549, line: 973, column: 4)
!4735 = !DILocalVariable(name: "len", scope: !4733, file: !549, line: 975, type: !108)
!4736 = !DILocalVariable(name: "drop_ro_str_pos", scope: !4730, file: !549, line: 990, type: !422)
!4737 = !DILocalVariable(name: "i", scope: !4738, file: !549, line: 995, type: !108)
!4738 = distinct !DILexicalBlock(scope: !4730, file: !549, line: 995, column: 3)
!4739 = !DILocalVariable(name: "arg_idx", scope: !4740, file: !549, line: 996, type: !164)
!4740 = distinct !DILexicalBlock(scope: !4741, file: !549, line: 995, column: 37)
!4741 = distinct !DILexicalBlock(scope: !4738, file: !549, line: 995, column: 3)
!4742 = !DILocalVariable(name: "arg_pos", scope: !4740, file: !549, line: 997, type: !164)
!4743 = !DILocalVariable(name: "str", scope: !4740, file: !549, line: 998, type: !105)
!4744 = !DILocalVariable(name: "is_ro", scope: !4740, file: !549, line: 999, type: !422)
!4745 = !DILocalVariable(name: "len", scope: !4740, file: !549, line: 1000, type: !108)
!4746 = !DILocalVariable(name: "out_desc", scope: !4697, file: !549, line: 1038, type: !4242)
!4747 = !DILocalVariable(name: "cpy_str_pos", scope: !4697, file: !549, line: 1040, type: !4224)
!4748 = !DILocalVariable(name: "keep_str_pos", scope: !4697, file: !549, line: 1042, type: !4224)
!4749 = !DILocalVariable(name: "scpy_cnt", scope: !4697, file: !549, line: 1043, type: !164)
!4750 = !DILocalVariable(name: "keep_cnt", scope: !4697, file: !549, line: 1044, type: !164)
!4751 = !DILocalVariable(name: "dst", scope: !4697, file: !549, line: 1045, type: !209)
!4752 = !DILocalVariable(name: "rv", scope: !4697, file: !549, line: 1046, type: !108)
!4753 = !DILocalVariable(name: "i", scope: !4754, file: !549, line: 1074, type: !108)
!4754 = distinct !DILexicalBlock(scope: !4697, file: !549, line: 1074, column: 2)
!4755 = !DILocalVariable(name: "arg_idx", scope: !4756, file: !549, line: 1075, type: !164)
!4756 = distinct !DILexicalBlock(scope: !4757, file: !549, line: 1074, column: 36)
!4757 = distinct !DILexicalBlock(scope: !4754, file: !549, line: 1074, column: 2)
!4758 = !DILocalVariable(name: "arg_pos", scope: !4756, file: !549, line: 1076, type: !164)
!4759 = !DILocalVariable(name: "str", scope: !4756, file: !549, line: 1077, type: !105)
!4760 = !DILocalVariable(name: "is_ro", scope: !4756, file: !549, line: 1078, type: !422)
!4761 = !DILocalVariable(name: "in_desc_backup", scope: !4697, file: !549, line: 1114, type: !4242)
!4762 = !DILocalVariable(name: "strs_len", scope: !4697, file: !549, line: 1134, type: !439)
!4763 = !DILocalVariable(name: "i", scope: !4764, file: !549, line: 1143, type: !108)
!4764 = distinct !DILexicalBlock(scope: !4697, file: !549, line: 1143, column: 2)
!4765 = !DILocalVariable(name: "loc", scope: !4766, file: !549, line: 1144, type: !164)
!4766 = distinct !DILexicalBlock(scope: !4767, file: !549, line: 1143, column: 37)
!4767 = distinct !DILexicalBlock(scope: !4764, file: !549, line: 1143, column: 2)
!4768 = !DILocalVariable(name: "str", scope: !4766, file: !549, line: 1145, type: !105)
!4769 = !DILocalVariable(name: "str_len", scope: !4766, file: !549, line: 1146, type: !168)
!4770 = !DILabel(scope: !4771, name: "calculate_string_length", file: !549, line: 1021)
!4771 = distinct !DILexicalBlock(scope: !4772, file: !549, line: 1020, column: 56)
!4772 = distinct !DILexicalBlock(scope: !4773, file: !549, line: 1020, column: 15)
!4773 = distinct !DILexicalBlock(scope: !4740, file: !549, line: 1014, column: 8)
!4774 = !DILocation(line: 0, scope: !4697)
!4775 = !DILocation(line: 919, column: 20, scope: !4697)
!4776 = !DILocation(line: 921, column: 27, scope: !4697)
!4777 = !DILocation(line: 921, column: 21, scope: !4697)
!4778 = !DILocation(line: 926, column: 18, scope: !4697)
!4779 = !DILocation(line: 926, column: 11, scope: !4697)
!4780 = !DILocation(line: 926, column: 34, scope: !4697)
!4781 = !DILocation(line: 931, column: 21, scope: !4697)
!4782 = !DILocation(line: 931, column: 12, scope: !4697)
!4783 = !DILocation(line: 932, column: 11, scope: !4697)
!4784 = !DILocation(line: 932, column: 19, scope: !4697)
!4785 = !DILocation(line: 938, column: 21, scope: !4697)
!4786 = !DILocation(line: 938, column: 12, scope: !4697)
!4787 = !DILocation(line: 939, column: 19, scope: !4697)
!4788 = !DILocation(line: 939, column: 23, scope: !4697)
!4789 = !DILocation(line: 946, column: 14, scope: !4790)
!4790 = distinct !DILexicalBlock(scope: !4697, file: !549, line: 946, column: 6)
!4791 = !DILocation(line: 947, column: 7, scope: !4792)
!4792 = distinct !DILexicalBlock(scope: !4793, file: !549, line: 947, column: 7)
!4793 = distinct !DILexicalBlock(scope: !4790, file: !549, line: 946, column: 26)
!4794 = !DILocation(line: 947, column: 7, scope: !4793)
!4795 = !DILocation(line: 948, column: 4, scope: !4796)
!4796 = distinct !DILexicalBlock(scope: !4792, file: !549, line: 947, column: 11)
!4797 = !DILocation(line: 949, column: 3, scope: !4796)
!4798 = !DILocation(line: 958, column: 23, scope: !4697)
!4799 = !DILocation(line: 958, column: 14, scope: !4697)
!4800 = !DILocation(line: 958, column: 27, scope: !4697)
!4801 = !DILocation(line: 965, column: 41, scope: !4697)
!4802 = !DILocation(line: 965, column: 20, scope: !4697)
!4803 = !DILocation(line: 966, column: 22, scope: !4697)
!4804 = !DILocation(line: 970, column: 9, scope: !4731)
!4805 = !DILocation(line: 970, column: 6, scope: !4697)
!4806 = !DILocation(line: 972, column: 7, scope: !4730)
!4807 = !DILocation(line: 0, scope: !4727)
!4808 = !DILocation(line: 973, column: 4, scope: !4727)
!4809 = !DILocation(line: 974, column: 46, scope: !4733)
!4810 = !DILocation(line: 974, column: 40, scope: !4733)
!4811 = !DILocation(line: 974, column: 23, scope: !4733)
!4812 = !DILocation(line: 0, scope: !4733)
!4813 = !DILocation(line: 975, column: 15, scope: !4733)
!4814 = !DILocation(line: 978, column: 14, scope: !4815)
!4815 = distinct !DILexicalBlock(scope: !4733, file: !549, line: 978, column: 9)
!4816 = !DILocation(line: 979, column: 25, scope: !4817)
!4817 = distinct !DILexicalBlock(scope: !4815, file: !549, line: 978, column: 38)
!4818 = !DILocation(line: 979, column: 19, scope: !4817)
!4819 = !DILocation(line: 979, column: 6, scope: !4817)
!4820 = !DILocation(line: 979, column: 23, scope: !4817)
!4821 = !DILocation(line: 980, column: 5, scope: !4817)
!4822 = !DILocation(line: 981, column: 13, scope: !4733)
!4823 = !DILocation(line: 982, column: 12, scope: !4733)
!4824 = !DILocation(line: 973, column: 34, scope: !4734)
!4825 = !DILocation(line: 973, column: 22, scope: !4734)
!4826 = distinct !{!4826, !4808, !4827}
!4827 = !DILocation(line: 983, column: 4, scope: !4727)
!4828 = !DILocation(line: 985, column: 16, scope: !4829)
!4829 = distinct !DILexicalBlock(scope: !4830, file: !549, line: 985, column: 8)
!4830 = distinct !DILexicalBlock(scope: !4729, file: !549, line: 984, column: 10)
!4831 = !DILocation(line: 967, column: 9, scope: !4697)
!4832 = !DILocation(line: 971, column: 11, scope: !4730)
!4833 = !DILocation(line: 0, scope: !4730)
!4834 = !DILocation(line: 0, scope: !4738)
!4835 = !DILocation(line: 995, column: 21, scope: !4741)
!4836 = !DILocation(line: 995, column: 3, scope: !4738)
!4837 = !DILocation(line: 990, column: 34, scope: !4730)
!4838 = !DILocation(line: 990, column: 26, scope: !4730)
!4839 = !DILocation(line: 996, column: 30, scope: !4740)
!4840 = !DILocation(line: 0, scope: !4740)
!4841 = !DILocation(line: 997, column: 30, scope: !4740)
!4842 = !DILocation(line: 997, column: 22, scope: !4740)
!4843 = !DILocation(line: 998, column: 39, scope: !4740)
!4844 = !DILocation(line: 998, column: 22, scope: !4740)
!4845 = !DILocation(line: 999, column: 17, scope: !4740)
!4846 = !DILocation(line: 1002, column: 20, scope: !4847)
!4847 = distinct !DILexicalBlock(scope: !4740, file: !549, line: 1002, column: 8)
!4848 = !DILocation(line: 996, column: 22, scope: !4740)
!4849 = !DILocation(line: 1002, column: 35, scope: !4847)
!4850 = !DILocation(line: 1002, column: 23, scope: !4847)
!4851 = !DILocation(line: 1002, column: 8, scope: !4740)
!4852 = !DILocation(line: 1003, column: 5, scope: !4853)
!4853 = distinct !DILexicalBlock(scope: !4854, file: !549, line: 1003, column: 5)
!4854 = distinct !DILexicalBlock(scope: !4855, file: !549, line: 1003, column: 5)
!4855 = distinct !DILexicalBlock(scope: !4856, file: !549, line: 1003, column: 5)
!4856 = distinct !DILexicalBlock(scope: !4857, file: !549, line: 1003, column: 5)
!4857 = distinct !DILexicalBlock(scope: !4847, file: !549, line: 1002, column: 45)
!4858 = !DILocation(line: 1010, column: 13, scope: !4857)
!4859 = !DILocation(line: 1011, column: 5, scope: !4857)
!4860 = !DILocation(line: 1014, column: 8, scope: !4740)
!4861 = !DILocation(line: 1015, column: 9, scope: !4862)
!4862 = distinct !DILexicalBlock(scope: !4773, file: !549, line: 1014, column: 15)
!4863 = !DILocation(line: 1018, column: 14, scope: !4864)
!4864 = distinct !DILexicalBlock(scope: !4865, file: !549, line: 1017, column: 12)
!4865 = distinct !DILexicalBlock(scope: !4862, file: !549, line: 1015, column: 9)
!4866 = !DILocation(line: 1020, column: 4, scope: !4862)
!4867 = !DILocation(line: 1020, column: 15, scope: !4773)
!4868 = !DILocation(line: 1021, column: 1, scope: !4771)
!4869 = !DILocation(line: 1022, column: 11, scope: !4771)
!4870 = !DILocation(line: 1025, column: 14, scope: !4871)
!4871 = distinct !DILexicalBlock(scope: !4771, file: !549, line: 1025, column: 9)
!4872 = !DILocation(line: 1026, column: 25, scope: !4873)
!4873 = distinct !DILexicalBlock(scope: !4871, file: !549, line: 1025, column: 38)
!4874 = !DILocation(line: 1026, column: 19, scope: !4873)
!4875 = !DILocation(line: 1026, column: 6, scope: !4873)
!4876 = !DILocation(line: 1026, column: 23, scope: !4873)
!4877 = !DILocation(line: 1027, column: 5, scope: !4873)
!4878 = !DILocation(line: 1031, column: 21, scope: !4771)
!4879 = !DILocation(line: 1031, column: 13, scope: !4771)
!4880 = !DILocation(line: 1032, column: 4, scope: !4771)
!4881 = !DILocation(line: 995, column: 33, scope: !4741)
!4882 = distinct !{!4882, !4836, !4883}
!4883 = !DILocation(line: 1033, column: 3, scope: !4738)
!4884 = !DILocation(line: 1040, column: 10, scope: !4697)
!4885 = !DILocation(line: 1042, column: 10, scope: !4697)
!4886 = !DILocation(line: 1052, column: 6, scope: !4697)
!4887 = !DILocation(line: 1055, column: 9, scope: !4888)
!4888 = distinct !DILexicalBlock(scope: !4889, file: !549, line: 1052, column: 14)
!4889 = distinct !DILexicalBlock(scope: !4697, file: !549, line: 1052, column: 6)
!4890 = !DILocation(line: 1056, column: 2, scope: !4888)
!4891 = !DILocation(line: 1056, column: 21, scope: !4892)
!4892 = distinct !DILexicalBlock(scope: !4889, file: !549, line: 1056, column: 13)
!4893 = !DILocation(line: 1066, column: 3, scope: !4894)
!4894 = distinct !DILexicalBlock(scope: !4895, file: !549, line: 1065, column: 11)
!4895 = distinct !DILexicalBlock(scope: !4697, file: !549, line: 1065, column: 6)
!4896 = !DILocation(line: 1067, column: 2, scope: !4894)
!4897 = !DILocation(line: 1068, column: 10, scope: !4697)
!4898 = !DILocation(line: 0, scope: !4754)
!4899 = !DILocation(line: 1074, column: 20, scope: !4757)
!4900 = !DILocation(line: 1074, column: 2, scope: !4754)
!4901 = !DILocation(line: 1110, column: 24, scope: !4697)
!4902 = !DILocation(line: 1053, column: 12, scope: !4888)
!4903 = !DILocation(line: 1054, column: 12, scope: !4888)
!4904 = !DILocation(line: 1108, column: 30, scope: !4697)
!4905 = !DILocation(line: 1108, column: 40, scope: !4697)
!4906 = !DILocation(line: 1108, column: 38, scope: !4697)
!4907 = !DILocation(line: 1109, column: 31, scope: !4697)
!4908 = !DILocation(line: 1109, column: 24, scope: !4697)
!4909 = !DILocation(line: 1110, column: 31, scope: !4697)
!4910 = !DILocation(line: 1114, column: 31, scope: !4697)
!4911 = !DILocation(line: 1114, column: 48, scope: !4697)
!4912 = !DILocation(line: 1115, column: 13, scope: !4697)
!4913 = !DILocation(line: 1118, column: 7, scope: !4697)
!4914 = !DILocation(line: 1119, column: 9, scope: !4915)
!4915 = distinct !DILexicalBlock(scope: !4697, file: !549, line: 1119, column: 6)
!4916 = !DILocation(line: 1119, column: 6, scope: !4697)
!4917 = !DILocation(line: 1075, column: 29, scope: !4756)
!4918 = !DILocation(line: 1075, column: 21, scope: !4756)
!4919 = !DILocation(line: 0, scope: !4756)
!4920 = !DILocation(line: 1076, column: 29, scope: !4756)
!4921 = !DILocation(line: 1076, column: 21, scope: !4756)
!4922 = !DILocation(line: 1077, column: 38, scope: !4756)
!4923 = !DILocation(line: 1077, column: 21, scope: !4756)
!4924 = !DILocation(line: 1078, column: 16, scope: !4756)
!4925 = !DILocation(line: 1080, column: 19, scope: !4926)
!4926 = distinct !DILexicalBlock(scope: !4756, file: !549, line: 1080, column: 7)
!4927 = !DILocation(line: 1080, column: 34, scope: !4926)
!4928 = !DILocation(line: 1080, column: 22, scope: !4926)
!4929 = !DILocation(line: 1080, column: 7, scope: !4756)
!4930 = !DILocation(line: 1084, column: 7, scope: !4756)
!4931 = !DILocation(line: 1085, column: 8, scope: !4932)
!4932 = distinct !DILexicalBlock(scope: !4933, file: !549, line: 1084, column: 14)
!4933 = distinct !DILexicalBlock(scope: !4756, file: !549, line: 1084, column: 7)
!4934 = !DILocation(line: 1087, column: 25, scope: !4935)
!4935 = distinct !DILexicalBlock(scope: !4936, file: !549, line: 1085, column: 49)
!4936 = distinct !DILexicalBlock(scope: !4932, file: !549, line: 1085, column: 8)
!4937 = !DILocation(line: 1088, column: 4, scope: !4935)
!4938 = !DILocation(line: 1088, column: 15, scope: !4936)
!4939 = !DILocation(line: 1090, column: 26, scope: !4940)
!4940 = distinct !DILexicalBlock(scope: !4941, file: !549, line: 1088, column: 61)
!4941 = distinct !DILexicalBlock(scope: !4936, file: !549, line: 1088, column: 15)
!4942 = !DILocation(line: 1091, column: 4, scope: !4940)
!4943 = !DILocation(line: 1095, column: 8, scope: !4944)
!4944 = distinct !DILexicalBlock(scope: !4933, file: !549, line: 1094, column: 10)
!4945 = !DILocation(line: 1097, column: 25, scope: !4946)
!4946 = distinct !DILexicalBlock(scope: !4947, file: !549, line: 1095, column: 49)
!4947 = distinct !DILexicalBlock(scope: !4944, file: !549, line: 1095, column: 8)
!4948 = !DILocation(line: 1098, column: 4, scope: !4946)
!4949 = !DILocation(line: 1100, column: 26, scope: !4950)
!4950 = distinct !DILexicalBlock(scope: !4947, file: !549, line: 1098, column: 11)
!4951 = !DILocation(line: 1100, column: 5, scope: !4950)
!4952 = !DILocation(line: 1100, column: 30, scope: !4950)
!4953 = !DILocation(line: 1101, column: 26, scope: !4950)
!4954 = !DILocation(line: 0, scope: !4933)
!4955 = !DILocation(line: 1074, column: 32, scope: !4757)
!4956 = distinct !{!4956, !4900, !4957}
!4957 = !DILocation(line: 1104, column: 2, scope: !4754)
!4958 = !DILocation(line: 1124, column: 13, scope: !4697)
!4959 = !DILocation(line: 1127, column: 10, scope: !4697)
!4960 = !DILocation(line: 1127, column: 7, scope: !4697)
!4961 = !DILocation(line: 1128, column: 9, scope: !4962)
!4962 = distinct !DILexicalBlock(scope: !4697, file: !549, line: 1128, column: 6)
!4963 = !DILocation(line: 1128, column: 6, scope: !4697)
!4964 = !DILocation(line: 1134, column: 27, scope: !4697)
!4965 = !DILocation(line: 1136, column: 7, scope: !4697)
!4966 = !DILocation(line: 1137, column: 9, scope: !4967)
!4967 = distinct !DILexicalBlock(scope: !4697, file: !549, line: 1137, column: 6)
!4968 = !DILocation(line: 1137, column: 6, scope: !4697)
!4969 = !DILocation(line: 1131, column: 10, scope: !4697)
!4970 = !DILocation(line: 1140, column: 10, scope: !4697)
!4971 = !DILocation(line: 0, scope: !4764)
!4972 = !DILocation(line: 1143, column: 20, scope: !4767)
!4973 = !DILocation(line: 1143, column: 2, scope: !4764)
!4974 = !DILocation(line: 1144, column: 3, scope: !4766)
!4975 = !DILocation(line: 1144, column: 17, scope: !4766)
!4976 = !DILocation(line: 0, scope: !4766)
!4977 = !DILocation(line: 1144, column: 11, scope: !4766)
!4978 = !DILocation(line: 1145, column: 38, scope: !4766)
!4979 = !DILocation(line: 1145, column: 21, scope: !4766)
!4980 = !DILocation(line: 1146, column: 22, scope: !4766)
!4981 = !DILocation(line: 1146, column: 29, scope: !4766)
!4982 = !DILocation(line: 1148, column: 8, scope: !4766)
!4983 = !DILocation(line: 1149, column: 10, scope: !4984)
!4984 = distinct !DILexicalBlock(scope: !4766, file: !549, line: 1149, column: 7)
!4985 = !DILocation(line: 1149, column: 7, scope: !4766)
!4986 = !DILocation(line: 1154, column: 8, scope: !4766)
!4987 = !DILocation(line: 1155, column: 10, scope: !4988)
!4988 = distinct !DILexicalBlock(scope: !4766, file: !549, line: 1155, column: 7)
!4989 = !DILocation(line: 1155, column: 7, scope: !4766)
!4990 = !DILocation(line: 1159, column: 2, scope: !4767)
!4991 = !DILocation(line: 1152, column: 11, scope: !4766)
!4992 = !DILocation(line: 1158, column: 11, scope: !4766)
!4993 = !DILocation(line: 1143, column: 33, scope: !4767)
!4994 = distinct !{!4994, !4973, !4995}
!4995 = !DILocation(line: 1159, column: 2, scope: !4764)
!4996 = !DILocation(line: 1162, column: 8, scope: !4697)
!4997 = !DILocation(line: 1164, column: 2, scope: !4697)
!4998 = !DILocation(line: 1165, column: 1, scope: !4697)
!4999 = distinct !DISubprogram(name: "get_package_len", scope: !549, file: !549, line: 196, type: !5000, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !536, retainedNodes: !5002)
!5000 = !DISubroutineType(types: !5001)
!5001 = !{!439, !104}
!5002 = !{!5003, !5004, !5005, !5006, !5007, !5008, !5009}
!5003 = !DILocalVariable(name: "packaged", arg: 1, scope: !4999, file: !549, line: 196, type: !104)
!5004 = !DILocalVariable(name: "buf", scope: !4999, file: !549, line: 200, type: !209)
!5005 = !DILocalVariable(name: "start", scope: !4999, file: !549, line: 201, type: !209)
!5006 = !DILocalVariable(name: "args_size", scope: !4999, file: !549, line: 202, type: !32)
!5007 = !DILocalVariable(name: "s_nbr", scope: !4999, file: !549, line: 202, type: !32)
!5008 = !DILocalVariable(name: "ros_nbr", scope: !4999, file: !549, line: 202, type: !32)
!5009 = !DILocalVariable(name: "i", scope: !5010, file: !549, line: 215, type: !108)
!5010 = distinct !DILexicalBlock(scope: !4999, file: !549, line: 215, column: 2)
!5011 = !DILocation(line: 0, scope: !4999)
!5012 = !DILocation(line: 204, column: 14, scope: !4999)
!5013 = !DILocation(line: 204, column: 21, scope: !4999)
!5014 = !DILocation(line: 205, column: 14, scope: !4999)
!5015 = !DILocation(line: 206, column: 14, scope: !4999)
!5016 = !DILocation(line: 209, column: 6, scope: !4999)
!5017 = !DILocation(line: 212, column: 6, scope: !4999)
!5018 = !DILocation(line: 0, scope: !5010)
!5019 = !DILocation(line: 215, column: 20, scope: !5020)
!5020 = distinct !DILexicalBlock(scope: !5010, file: !549, line: 215, column: 2)
!5021 = !DILocation(line: 215, column: 2, scope: !5010)
!5022 = !DILocation(line: 220, column: 33, scope: !4999)
!5023 = !DILocation(line: 220, column: 2, scope: !4999)
!5024 = !DILocation(line: 216, column: 6, scope: !5025)
!5025 = distinct !DILexicalBlock(scope: !5020, file: !549, line: 215, column: 34)
!5026 = !DILocation(line: 217, column: 10, scope: !5025)
!5027 = !DILocation(line: 217, column: 36, scope: !5025)
!5028 = !DILocation(line: 217, column: 7, scope: !5025)
!5029 = !DILocation(line: 215, column: 30, scope: !5020)
!5030 = distinct !{!5030, !5021, !5031}
!5031 = !DILocation(line: 218, column: 2, scope: !5010)
!5032 = distinct !DISubprogram(name: "append_string", scope: !549, file: !549, line: 223, type: !5033, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !536, retainedNodes: !5035)
!5033 = !DISubroutineType(types: !5034)
!5034 = !{!108, !4700, !104, !105, !168}
!5035 = !{!5036, !5037, !5038, !5039}
!5036 = !DILocalVariable(name: "cb", arg: 1, scope: !5032, file: !549, line: 223, type: !4700)
!5037 = !DILocalVariable(name: "ctx", arg: 2, scope: !5032, file: !549, line: 223, type: !104)
!5038 = !DILocalVariable(name: "str", arg: 3, scope: !5032, file: !549, line: 223, type: !105)
!5039 = !DILocalVariable(name: "strl", arg: 4, scope: !5032, file: !549, line: 223, type: !168)
!5040 = !DILocation(line: 0, scope: !5032)
!5041 = !DILocation(line: 225, column: 9, scope: !5042)
!5042 = distinct !DILexicalBlock(scope: !5032, file: !549, line: 225, column: 6)
!5043 = !DILocation(line: 225, column: 6, scope: !5032)
!5044 = !DILocation(line: 226, column: 14, scope: !5045)
!5045 = distinct !DILexicalBlock(scope: !5042, file: !549, line: 225, column: 18)
!5046 = !DILocation(line: 226, column: 12, scope: !5045)
!5047 = !DILocation(line: 226, column: 3, scope: !5045)
!5048 = !DILocation(line: 229, column: 14, scope: !5032)
!5049 = !DILocation(line: 229, column: 9, scope: !5032)
!5050 = !DILocation(line: 229, column: 27, scope: !5032)
!5051 = !DILocation(line: 229, column: 39, scope: !5032)
!5052 = !DILocation(line: 230, column: 17, scope: !5032)
!5053 = !DILocation(line: 230, column: 9, scope: !5032)
!5054 = !DILocation(line: 230, column: 2, scope: !5032)
!5055 = !DILocation(line: 231, column: 1, scope: !5032)
!5056 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !561, file: !561, line: 45, type: !563, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !557, retainedNodes: !5057)
!5057 = !{!5058}
!5058 = !DILocalVariable(name: "c", arg: 1, scope: !5056, file: !561, line: 45, type: !108)
!5059 = !DILocation(line: 0, scope: !5056)
!5060 = !DILocation(line: 50, column: 2, scope: !5056)
!5061 = distinct !DISubprogram(name: "__printk_hook_install", scope: !561, file: !561, line: 63, type: !5062, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !557, retainedNodes: !5064)
!5062 = !DISubroutineType(types: !5063)
!5063 = !{null, !562}
!5064 = !{!5065}
!5065 = !DILocalVariable(name: "fn", arg: 1, scope: !5061, file: !561, line: 63, type: !562)
!5066 = !DILocation(line: 0, scope: !5061)
!5067 = !DILocation(line: 65, column: 12, scope: !5061)
!5068 = !DILocation(line: 66, column: 1, scope: !5061)
!5069 = distinct !DISubprogram(name: "__printk_get_hook", scope: !561, file: !561, line: 76, type: !5070, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !557, retainedNodes: !437)
!5070 = !DISubroutineType(types: !5071)
!5071 = !{!104}
!5072 = !DILocation(line: 78, column: 9, scope: !5069)
!5073 = !DILocation(line: 78, column: 2, scope: !5069)
!5074 = distinct !DISubprogram(name: "vprintk", scope: !561, file: !561, line: 113, type: !5075, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !557, retainedNodes: !5083)
!5075 = !DISubroutineType(types: !5076)
!5076 = !{null, !105, !5077}
!5077 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4207, line: 99, baseType: !5078)
!5078 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4207, line: 40, baseType: !5079)
!5079 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !561, baseType: !5080)
!5080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5081)
!5081 = !{!5082}
!5082 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5080, file: !561, line: 79, baseType: !104, size: 32)
!5083 = !{!5084, !5085, !5086}
!5084 = !DILocalVariable(name: "fmt", arg: 1, scope: !5074, file: !561, line: 113, type: !105)
!5085 = !DILocalVariable(name: "ap", arg: 2, scope: !5074, file: !561, line: 113, type: !5077)
!5086 = !DILocalVariable(name: "ctx", scope: !5087, file: !561, line: 121, type: !5089)
!5087 = distinct !DILexicalBlock(scope: !5088, file: !561, line: 120, column: 27)
!5088 = distinct !DILexicalBlock(scope: !5074, file: !561, line: 120, column: 6)
!5089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !561, line: 81, size: 32, elements: !5090)
!5090 = !{!5091, !5092}
!5091 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !5089, file: !561, line: 85, baseType: !32, size: 32)
!5092 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !5089, file: !561, line: 86, baseType: !5093, offset: 32)
!5093 = !DICompositeType(tag: DW_TAG_array_type, baseType: !107, elements: !5094)
!5094 = !{!5095}
!5095 = !DISubrange(count: 0)
!5096 = !DILocation(line: 0, scope: !5074)
!5097 = !DILocation(line: 148, column: 3, scope: !5098)
!5098 = distinct !DILexicalBlock(scope: !5088, file: !561, line: 138, column: 9)
!5099 = !DILocation(line: 155, column: 1, scope: !5074)
!5100 = distinct !DISubprogram(name: "char_out", scope: !561, file: !561, line: 107, type: !5101, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !557, retainedNodes: !5103)
!5101 = !DISubroutineType(types: !5102)
!5102 = !{!108, !108, !104}
!5103 = !{!5104, !5105}
!5104 = !DILocalVariable(name: "c", arg: 1, scope: !5100, file: !561, line: 107, type: !108)
!5105 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !5100, file: !561, line: 107, type: !104)
!5106 = !DILocation(line: 0, scope: !5100)
!5107 = !DILocation(line: 110, column: 9, scope: !5100)
!5108 = !DILocation(line: 110, column: 2, scope: !5100)
!5109 = distinct !DISubprogram(name: "cbvprintf", scope: !4239, file: !4239, line: 739, type: !5110, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !557, retainedNodes: !5112)
!5110 = !DISubroutineType(types: !5111)
!5111 = !{!108, !4568, !104, !105, !5077}
!5112 = !{!5113, !5114, !5115, !5116}
!5113 = !DILocalVariable(name: "out", arg: 1, scope: !5109, file: !4239, line: 739, type: !4568)
!5114 = !DILocalVariable(name: "ctx", arg: 2, scope: !5109, file: !4239, line: 739, type: !104)
!5115 = !DILocalVariable(name: "format", arg: 3, scope: !5109, file: !4239, line: 739, type: !105)
!5116 = !DILocalVariable(name: "ap", arg: 4, scope: !5109, file: !4239, line: 739, type: !5077)
!5117 = !DILocation(line: 0, scope: !5109)
!5118 = !DILocation(line: 741, column: 9, scope: !5109)
!5119 = !DILocation(line: 741, column: 2, scope: !5109)
!5120 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !561, file: !561, line: 157, type: !5121, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !557, retainedNodes: !5123)
!5121 = !DISubroutineType(types: !5122)
!5122 = !{null, !443, !439}
!5123 = !{!5124, !5125, !5126}
!5124 = !DILocalVariable(name: "c", arg: 1, scope: !5120, file: !561, line: 157, type: !443)
!5125 = !DILocalVariable(name: "n", arg: 2, scope: !5120, file: !561, line: 157, type: !439)
!5126 = !DILocalVariable(name: "i", scope: !5120, file: !561, line: 159, type: !439)
!5127 = !DILocation(line: 0, scope: !5120)
!5128 = !DILocation(line: 164, column: 16, scope: !5129)
!5129 = distinct !DILexicalBlock(scope: !5130, file: !561, line: 164, column: 2)
!5130 = distinct !DILexicalBlock(scope: !5120, file: !561, line: 164, column: 2)
!5131 = !DILocation(line: 164, column: 2, scope: !5130)
!5132 = !DILocation(line: 165, column: 3, scope: !5133)
!5133 = distinct !DILexicalBlock(scope: !5129, file: !561, line: 164, column: 26)
!5134 = !DILocation(line: 165, column: 13, scope: !5133)
!5135 = !DILocation(line: 164, column: 22, scope: !5129)
!5136 = distinct !{!5136, !5131, !5137}
!5137 = !DILocation(line: 166, column: 2, scope: !5130)
!5138 = !DILocation(line: 171, column: 1, scope: !5120)
!5139 = distinct !DISubprogram(name: "printk", scope: !561, file: !561, line: 203, type: !5140, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !557, retainedNodes: !5142)
!5140 = !DISubroutineType(types: !5141)
!5141 = !{null, !105, null}
!5142 = !{!5143, !5144}
!5143 = !DILocalVariable(name: "fmt", arg: 1, scope: !5139, file: !561, line: 203, type: !105)
!5144 = !DILocalVariable(name: "ap", scope: !5139, file: !561, line: 205, type: !5077)
!5145 = !DILocation(line: 0, scope: !5139)
!5146 = !DILocation(line: 205, column: 2, scope: !5139)
!5147 = !DILocation(line: 205, column: 10, scope: !5139)
!5148 = !DILocation(line: 207, column: 2, scope: !5139)
!5149 = !DILocation(line: 209, column: 2, scope: !5139)
!5150 = !DILocation(line: 211, column: 2, scope: !5139)
!5151 = !DILocation(line: 212, column: 1, scope: !5139)
!5152 = distinct !DISubprogram(name: "snprintk", scope: !561, file: !561, line: 239, type: !5153, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !557, retainedNodes: !5155)
!5153 = !DISubroutineType(types: !5154)
!5154 = !{!108, !443, !439, !105, null}
!5155 = !{!5156, !5157, !5158, !5159, !5160}
!5156 = !DILocalVariable(name: "str", arg: 1, scope: !5152, file: !561, line: 239, type: !443)
!5157 = !DILocalVariable(name: "size", arg: 2, scope: !5152, file: !561, line: 239, type: !439)
!5158 = !DILocalVariable(name: "fmt", arg: 3, scope: !5152, file: !561, line: 239, type: !105)
!5159 = !DILocalVariable(name: "ap", scope: !5152, file: !561, line: 241, type: !5077)
!5160 = !DILocalVariable(name: "ret", scope: !5152, file: !561, line: 242, type: !108)
!5161 = !DILocation(line: 0, scope: !5152)
!5162 = !DILocation(line: 241, column: 2, scope: !5152)
!5163 = !DILocation(line: 241, column: 10, scope: !5152)
!5164 = !DILocation(line: 244, column: 2, scope: !5152)
!5165 = !DILocation(line: 245, column: 8, scope: !5152)
!5166 = !DILocation(line: 246, column: 2, scope: !5152)
!5167 = !DILocation(line: 249, column: 1, scope: !5152)
!5168 = !DILocation(line: 248, column: 2, scope: !5152)
!5169 = distinct !DISubprogram(name: "vsnprintk", scope: !561, file: !561, line: 251, type: !5170, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !557, retainedNodes: !5172)
!5170 = !DISubroutineType(types: !5171)
!5171 = !{!108, !443, !439, !105, !5077}
!5172 = !{!5173, !5174, !5175, !5176, !5177}
!5173 = !DILocalVariable(name: "str", arg: 1, scope: !5169, file: !561, line: 251, type: !443)
!5174 = !DILocalVariable(name: "size", arg: 2, scope: !5169, file: !561, line: 251, type: !439)
!5175 = !DILocalVariable(name: "fmt", arg: 3, scope: !5169, file: !561, line: 251, type: !105)
!5176 = !DILocalVariable(name: "ap", arg: 4, scope: !5169, file: !561, line: 251, type: !5077)
!5177 = !DILocalVariable(name: "ctx", scope: !5169, file: !561, line: 253, type: !5178)
!5178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !561, line: 217, size: 96, elements: !5179)
!5179 = !{!5180, !5181, !5182}
!5180 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !5178, file: !561, line: 218, baseType: !443, size: 32)
!5181 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !5178, file: !561, line: 219, baseType: !108, size: 32, offset: 32)
!5182 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5178, file: !561, line: 220, baseType: !108, size: 32, offset: 64)
!5183 = !DILocation(line: 0, scope: !5169)
!5184 = !DILocation(line: 253, column: 2, scope: !5169)
!5185 = !DILocation(line: 253, column: 21, scope: !5169)
!5186 = !DILocation(line: 253, column: 27, scope: !5169)
!5187 = !DILocation(line: 255, column: 2, scope: !5169)
!5188 = !DILocation(line: 257, column: 10, scope: !5189)
!5189 = distinct !DILexicalBlock(scope: !5169, file: !561, line: 257, column: 6)
!5190 = !DILocation(line: 257, column: 22, scope: !5189)
!5191 = !DILocation(line: 257, column: 16, scope: !5189)
!5192 = !DILocation(line: 257, column: 6, scope: !5169)
!5193 = !DILocation(line: 258, column: 3, scope: !5194)
!5194 = distinct !DILexicalBlock(scope: !5189, file: !561, line: 257, column: 27)
!5195 = !DILocation(line: 258, column: 18, scope: !5194)
!5196 = !DILocation(line: 259, column: 2, scope: !5194)
!5197 = !DILocation(line: 262, column: 1, scope: !5169)
!5198 = !DILocation(line: 261, column: 2, scope: !5169)
!5199 = distinct !DISubprogram(name: "str_out", scope: !561, file: !561, line: 223, type: !5200, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !557, retainedNodes: !5203)
!5200 = !DISubroutineType(types: !5201)
!5201 = !{!108, !108, !5202}
!5202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5178, size: 32)
!5203 = !{!5204, !5205}
!5204 = !DILocalVariable(name: "c", arg: 1, scope: !5199, file: !561, line: 223, type: !108)
!5205 = !DILocalVariable(name: "ctx", arg: 2, scope: !5199, file: !561, line: 223, type: !5202)
!5206 = !DILocation(line: 0, scope: !5199)
!5207 = !DILocation(line: 225, column: 11, scope: !5208)
!5208 = distinct !DILexicalBlock(scope: !5199, file: !561, line: 225, column: 6)
!5209 = !DILocation(line: 225, column: 15, scope: !5208)
!5210 = !DILocation(line: 0, scope: !5208)
!5211 = !DILocation(line: 225, column: 23, scope: !5208)
!5212 = !DILocation(line: 225, column: 45, scope: !5208)
!5213 = !DILocation(line: 225, column: 37, scope: !5208)
!5214 = !DILocation(line: 225, column: 6, scope: !5199)
!5215 = !DILocation(line: 226, column: 8, scope: !5216)
!5216 = distinct !DILexicalBlock(scope: !5208, file: !561, line: 225, column: 50)
!5217 = !DILocation(line: 226, column: 13, scope: !5216)
!5218 = !DILocation(line: 227, column: 3, scope: !5216)
!5219 = !DILocation(line: 230, column: 29, scope: !5220)
!5220 = distinct !DILexicalBlock(scope: !5199, file: !561, line: 230, column: 6)
!5221 = !DILocation(line: 230, column: 17, scope: !5220)
!5222 = !DILocation(line: 230, column: 6, scope: !5199)
!5223 = !DILocation(line: 231, column: 22, scope: !5224)
!5224 = distinct !DILexicalBlock(scope: !5220, file: !561, line: 230, column: 34)
!5225 = !DILocation(line: 231, column: 3, scope: !5224)
!5226 = !DILocation(line: 231, column: 26, scope: !5224)
!5227 = !DILocation(line: 232, column: 2, scope: !5224)
!5228 = !DILocation(line: 233, column: 28, scope: !5229)
!5229 = distinct !DILexicalBlock(scope: !5220, file: !561, line: 232, column: 9)
!5230 = !DILocation(line: 233, column: 22, scope: !5229)
!5231 = !DILocation(line: 233, column: 3, scope: !5229)
!5232 = !DILocation(line: 233, column: 26, scope: !5229)
!5233 = !DILocation(line: 237, column: 1, scope: !5199)
!5234 = distinct !DISubprogram(name: "z_thread_entry", scope: !5235, file: !5235, line: 30, type: !5236, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2910, retainedNodes: !5243)
!5235 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5236 = !DISubroutineType(types: !5237)
!5237 = !{null, !5238, !104, !104, !104}
!5238 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !5239, line: 46, baseType: !5240)
!5239 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5241, size: 32)
!5241 = !DISubroutineType(types: !5242)
!5242 = !{null, !104, !104, !104}
!5243 = !{!5244, !5245, !5246, !5247}
!5244 = !DILocalVariable(name: "entry", arg: 1, scope: !5234, file: !5235, line: 30, type: !5238)
!5245 = !DILocalVariable(name: "p1", arg: 2, scope: !5234, file: !5235, line: 31, type: !104)
!5246 = !DILocalVariable(name: "p2", arg: 3, scope: !5234, file: !5235, line: 31, type: !104)
!5247 = !DILocalVariable(name: "p3", arg: 4, scope: !5234, file: !5235, line: 31, type: !104)
!5248 = !DILocation(line: 0, scope: !5234)
!5249 = !DILocation(line: 36, column: 2, scope: !5234)
!5250 = !DILocation(line: 38, column: 17, scope: !5234)
!5251 = !DILocation(line: 38, column: 2, scope: !5234)
!5252 = !DILocation(line: 45, column: 2, scope: !5234)
!5253 = distinct !DISubprogram(name: "k_current_get", scope: !359, file: !359, line: 530, type: !5254, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2910, retainedNodes: !437)
!5254 = !DISubroutineType(types: !5255)
!5255 = !{!5256}
!5256 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !651, line: 347, baseType: !5257)
!5257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5258, size: 32)
!5258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !651, line: 245, size: 1024, elements: !5259)
!5259 = !{!5260, !5318, !5330, !5331, !5332, !5333, !5339, !5352}
!5260 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5258, file: !651, line: 247, baseType: !5261, size: 384)
!5261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !651, line: 57, size: 384, elements: !5262)
!5262 = !{!5263, !5287, !5294, !5295, !5296, !5305, !5306, !5307}
!5263 = !DIDerivedType(tag: DW_TAG_member, scope: !5261, file: !651, line: 60, baseType: !5264, size: 64)
!5264 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5261, file: !651, line: 60, size: 64, elements: !5265)
!5265 = !{!5266, !5281}
!5266 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !5264, file: !651, line: 61, baseType: !5267, size: 64)
!5267 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !367, line: 49, baseType: !5268)
!5268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !5269)
!5269 = !{!5270, !5276}
!5270 = !DIDerivedType(tag: DW_TAG_member, scope: !5268, file: !367, line: 38, baseType: !5271, size: 32)
!5271 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5268, file: !367, line: 38, size: 32, elements: !5272)
!5272 = !{!5273, !5275}
!5273 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5271, file: !367, line: 39, baseType: !5274, size: 32)
!5274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5268, size: 32)
!5275 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5271, file: !367, line: 40, baseType: !5274, size: 32)
!5276 = !DIDerivedType(tag: DW_TAG_member, scope: !5268, file: !367, line: 42, baseType: !5277, size: 32, offset: 32)
!5277 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5268, file: !367, line: 42, size: 32, elements: !5278)
!5278 = !{!5279, !5280}
!5279 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5277, file: !367, line: 43, baseType: !5274, size: 32)
!5280 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5277, file: !367, line: 44, baseType: !5274, size: 32)
!5281 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !5264, file: !651, line: 62, baseType: !5282, size: 64)
!5282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !676, line: 49, size: 64, elements: !5283)
!5283 = !{!5284}
!5284 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !5282, file: !676, line: 50, baseType: !5285, size: 64)
!5285 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5286, size: 64, elements: !681)
!5286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5282, size: 32)
!5287 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !5261, file: !651, line: 68, baseType: !5288, size: 32, offset: 64)
!5288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5289, size: 32)
!5289 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !363, line: 233, baseType: !5290)
!5290 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 231, size: 64, elements: !5291)
!5291 = !{!5292}
!5292 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !5290, file: !363, line: 232, baseType: !5293, size: 64)
!5293 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !5268)
!5294 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !5261, file: !651, line: 71, baseType: !164, size: 8, offset: 96)
!5295 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !5261, file: !651, line: 74, baseType: !164, size: 8, offset: 104)
!5296 = !DIDerivedType(tag: DW_TAG_member, scope: !5261, file: !651, line: 90, baseType: !5297, size: 16, offset: 112)
!5297 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5261, file: !651, line: 90, size: 16, elements: !5298)
!5298 = !{!5299, !5304}
!5299 = !DIDerivedType(tag: DW_TAG_member, scope: !5297, file: !651, line: 91, baseType: !5300, size: 16)
!5300 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5297, file: !651, line: 91, size: 16, elements: !5301)
!5301 = !{!5302, !5303}
!5302 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !5300, file: !651, line: 96, baseType: !699, size: 8)
!5303 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !5300, file: !651, line: 97, baseType: !164, size: 8, offset: 8)
!5304 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !5297, file: !651, line: 100, baseType: !168, size: 16)
!5305 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !5261, file: !651, line: 107, baseType: !113, size: 32, offset: 128)
!5306 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !5261, file: !651, line: 127, baseType: !104, size: 32, offset: 160)
!5307 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5261, file: !651, line: 131, baseType: !5308, size: 192, offset: 192)
!5308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !363, line: 244, size: 192, elements: !5309)
!5309 = !{!5310, !5311, !5317}
!5310 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5308, file: !363, line: 245, baseType: !5267, size: 64)
!5311 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !5308, file: !363, line: 246, baseType: !5312, size: 32, offset: 64)
!5312 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !363, line: 242, baseType: !5313)
!5313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5314, size: 32)
!5314 = !DISubroutineType(types: !5315)
!5315 = !{null, !5316}
!5316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5308, size: 32)
!5317 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !5308, file: !363, line: 249, baseType: !111, size: 64, offset: 128)
!5318 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !5258, file: !651, line: 250, baseType: !5319, size: 288, offset: 384)
!5319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !718, line: 25, size: 288, elements: !5320)
!5320 = !{!5321, !5322, !5323, !5324, !5325, !5326, !5327, !5328, !5329}
!5321 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5319, file: !718, line: 26, baseType: !113, size: 32)
!5322 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5319, file: !718, line: 27, baseType: !113, size: 32, offset: 32)
!5323 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5319, file: !718, line: 28, baseType: !113, size: 32, offset: 64)
!5324 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5319, file: !718, line: 29, baseType: !113, size: 32, offset: 96)
!5325 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5319, file: !718, line: 30, baseType: !113, size: 32, offset: 128)
!5326 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5319, file: !718, line: 31, baseType: !113, size: 32, offset: 160)
!5327 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5319, file: !718, line: 32, baseType: !113, size: 32, offset: 192)
!5328 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5319, file: !718, line: 33, baseType: !113, size: 32, offset: 224)
!5329 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5319, file: !718, line: 34, baseType: !113, size: 32, offset: 256)
!5330 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !5258, file: !651, line: 253, baseType: !104, size: 32, offset: 672)
!5331 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !5258, file: !651, line: 256, baseType: !5289, size: 64, offset: 704)
!5332 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !5258, file: !651, line: 294, baseType: !108, size: 32, offset: 768)
!5333 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !5258, file: !651, line: 300, baseType: !5334, size: 96, offset: 800)
!5334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !651, line: 149, size: 96, elements: !5335)
!5335 = !{!5336, !5337, !5338}
!5336 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5334, file: !651, line: 153, baseType: !22, size: 32)
!5337 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5334, file: !651, line: 162, baseType: !439, size: 32, offset: 32)
!5338 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !5334, file: !651, line: 168, baseType: !439, size: 32, offset: 64)
!5339 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !5258, file: !651, line: 325, baseType: !5340, size: 32, offset: 896)
!5340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5341, size: 32)
!5341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !359, line: 5073, size: 160, elements: !5342)
!5342 = !{!5343, !5349, !5350}
!5343 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5341, file: !359, line: 5074, baseType: !5344, size: 96)
!5344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !744, line: 56, size: 96, elements: !5345)
!5345 = !{!5346, !5347, !5348}
!5346 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5344, file: !744, line: 57, baseType: !747, size: 32)
!5347 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !5344, file: !744, line: 58, baseType: !104, size: 32, offset: 32)
!5348 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !5344, file: !744, line: 59, baseType: !439, size: 32, offset: 64)
!5349 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !5341, file: !359, line: 5075, baseType: !5289, size: 64, offset: 96)
!5350 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5341, file: !359, line: 5076, baseType: !5351, offset: 160)
!5351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!5352 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !5258, file: !651, line: 343, baseType: !5353, size: 64, offset: 928)
!5353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !718, line: 60, size: 64, elements: !5354)
!5354 = !{!5355, !5356}
!5355 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !5353, file: !718, line: 63, baseType: !113, size: 32)
!5356 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !5353, file: !718, line: 66, baseType: !113, size: 32, offset: 32)
!5357 = !DILocation(line: 535, column: 9, scope: !5253)
!5358 = !DILocation(line: 535, column: 2, scope: !5253)
!5359 = distinct !DISubprogram(name: "k_thread_abort", scope: !3868, file: !3868, line: 188, type: !5360, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2910, retainedNodes: !5362)
!5360 = !DISubroutineType(types: !5361)
!5361 = !{null, !5256}
!5362 = !{!5363}
!5363 = !DILocalVariable(name: "thread", arg: 1, scope: !5359, file: !3868, line: 188, type: !5256)
!5364 = !DILocation(line: 0, scope: !5359)
!5365 = !DILocation(line: 197, column: 2, scope: !5366)
!5366 = distinct !DILexicalBlock(scope: !5359, file: !3868, line: 197, column: 2)
!5367 = !{i64 2155075262}
!5368 = !DILocation(line: 198, column: 2, scope: !5359)
!5369 = !DILocation(line: 199, column: 1, scope: !5359)
!5370 = distinct !DISubprogram(name: "z_current_get", scope: !3868, file: !3868, line: 173, type: !5254, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2910, retainedNodes: !437)
!5371 = !DILocation(line: 180, column: 2, scope: !5372)
!5372 = distinct !DILexicalBlock(scope: !5370, file: !3868, line: 180, column: 2)
!5373 = !{i64 2155075194}
!5374 = !DILocation(line: 181, column: 9, scope: !5370)
!5375 = !DILocation(line: 181, column: 2, scope: !5370)
!5376 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2916, file: !2916, line: 1338, type: !5377, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2912, retainedNodes: !5385)
!5377 = !DISubroutineType(types: !5378)
!5378 = !{!108, !4568, !104, !105, !5379, !113}
!5379 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4207, line: 99, baseType: !5380)
!5380 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4207, line: 40, baseType: !5381)
!5381 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2916, baseType: !5382)
!5382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5383)
!5383 = !{!5384}
!5384 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5382, file: !2916, baseType: !104, size: 32)
!5385 = !{!5386, !5387, !5388, !5389, !5390, !5391, !5395, !5396, !5397, !5399, !5404, !5447, !5450, !5453, !5454, !5455, !5456, !5457, !5458, !5459, !5462, !5463, !5464, !5468, !5471, !5473, !5476, !5477, !5478, !5483, !5489, !5492, !5496, !5502, !5506, !5509, !5511, !5514}
!5386 = !DILocalVariable(name: "out", arg: 1, scope: !5376, file: !2916, line: 1338, type: !4568)
!5387 = !DILocalVariable(name: "ctx", arg: 2, scope: !5376, file: !2916, line: 1338, type: !104)
!5388 = !DILocalVariable(name: "fp", arg: 3, scope: !5376, file: !2916, line: 1338, type: !105)
!5389 = !DILocalVariable(name: "ap", arg: 4, scope: !5376, file: !2916, line: 1339, type: !5379)
!5390 = !DILocalVariable(name: "flags", arg: 5, scope: !5376, file: !2916, line: 1339, type: !113)
!5391 = !DILocalVariable(name: "buf", scope: !5376, file: !2916, line: 1341, type: !5392)
!5392 = !DICompositeType(tag: DW_TAG_array_type, baseType: !107, size: 176, elements: !5393)
!5393 = !{!5394}
!5394 = !DISubrange(count: 22)
!5395 = !DILocalVariable(name: "count", scope: !5376, file: !2916, line: 1342, type: !439)
!5396 = !DILocalVariable(name: "sint", scope: !5376, file: !2916, line: 1343, type: !2935)
!5397 = !DILocalVariable(name: "tagged_ap", scope: !5376, file: !2916, line: 1345, type: !5398)
!5398 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !422)
!5399 = !DILocalVariable(name: "rc", scope: !5400, file: !2916, line: 1377, type: !108)
!5400 = distinct !DILexicalBlock(scope: !5401, file: !2916, line: 1377, column: 4)
!5401 = distinct !DILexicalBlock(scope: !5402, file: !2916, line: 1376, column: 19)
!5402 = distinct !DILexicalBlock(scope: !5403, file: !2916, line: 1376, column: 7)
!5403 = distinct !DILexicalBlock(scope: !5376, file: !2916, line: 1375, column: 19)
!5404 = !DILocalVariable(name: "state", scope: !5403, file: !2916, line: 1395, type: !5405)
!5405 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5376, file: !2916, line: 1392, size: 192, elements: !5406)
!5406 = !{!5407, !5415}
!5407 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !5405, file: !2916, line: 1393, baseType: !5408, size: 64)
!5408 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2916, line: 166, size: 64, elements: !5409)
!5409 = !{!5410, !5411, !5412, !5413, !5414}
!5410 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !5408, file: !2916, line: 168, baseType: !2935, size: 64)
!5411 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !5408, file: !2916, line: 171, baseType: !2938, size: 64)
!5412 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !5408, file: !2916, line: 174, baseType: !542, size: 64)
!5413 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !5408, file: !2916, line: 177, baseType: !540, size: 64)
!5414 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !5408, file: !2916, line: 180, baseType: !104, size: 32)
!5415 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !5405, file: !2916, line: 1394, baseType: !5416, size: 96, offset: 64)
!5416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2916, line: 189, size: 96, elements: !5417)
!5417 = !{!5418, !5419, !5420, !5421, !5422, !5423, !5424, !5425, !5426, !5427, !5428, !5429, !5430, !5431, !5432, !5433, !5434, !5435, !5436, !5437, !5442}
!5418 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !5416, file: !2916, line: 191, baseType: !422, size: 1, flags: DIFlagBitField, extraData: i64 0)
!5419 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !5416, file: !2916, line: 194, baseType: !422, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!5420 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !5416, file: !2916, line: 197, baseType: !422, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!5421 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !5416, file: !2916, line: 200, baseType: !422, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!5422 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !5416, file: !2916, line: 203, baseType: !422, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!5423 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !5416, file: !2916, line: 206, baseType: !422, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!5424 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !5416, file: !2916, line: 209, baseType: !422, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!5425 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !5416, file: !2916, line: 212, baseType: !422, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!5426 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !5416, file: !2916, line: 219, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!5427 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !5416, file: !2916, line: 222, baseType: !422, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!5428 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !5416, file: !2916, line: 229, baseType: !422, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!5429 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !5416, file: !2916, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!5430 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !5416, file: !2916, line: 238, baseType: !422, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!5431 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !5416, file: !2916, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!5432 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !5416, file: !2916, line: 244, baseType: !422, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!5433 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !5416, file: !2916, line: 247, baseType: !422, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!5434 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !5416, file: !2916, line: 252, baseType: !422, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!5435 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !5416, file: !2916, line: 257, baseType: !422, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!5436 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !5416, file: !2916, line: 260, baseType: !165, size: 8, offset: 24)
!5437 = !DIDerivedType(tag: DW_TAG_member, scope: !5416, file: !2916, line: 262, baseType: !5438, size: 32, offset: 32)
!5438 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5416, file: !2916, line: 262, size: 32, elements: !5439)
!5439 = !{!5440, !5441}
!5440 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !5438, file: !2916, line: 267, baseType: !108, size: 32)
!5441 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !5438, file: !2916, line: 289, baseType: !108, size: 32)
!5442 = !DIDerivedType(tag: DW_TAG_member, scope: !5416, file: !2916, line: 292, baseType: !5443, size: 32, offset: 64)
!5443 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5416, file: !2916, line: 292, size: 32, elements: !5444)
!5444 = !{!5445, !5446}
!5445 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !5443, file: !2916, line: 297, baseType: !108, size: 32)
!5446 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !5443, file: !2916, line: 306, baseType: !108, size: 32)
!5447 = !DILocalVariable(name: "conv", scope: !5403, file: !2916, line: 1400, type: !5448)
!5448 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5449)
!5449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5416, size: 32)
!5450 = !DILocalVariable(name: "value", scope: !5403, file: !2916, line: 1401, type: !5451)
!5451 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5452)
!5452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5408, size: 32)
!5453 = !DILocalVariable(name: "sp", scope: !5403, file: !2916, line: 1402, type: !105)
!5454 = !DILocalVariable(name: "width", scope: !5403, file: !2916, line: 1403, type: !108)
!5455 = !DILocalVariable(name: "precision", scope: !5403, file: !2916, line: 1404, type: !108)
!5456 = !DILocalVariable(name: "bps", scope: !5403, file: !2916, line: 1405, type: !105)
!5457 = !DILocalVariable(name: "bpe", scope: !5403, file: !2916, line: 1406, type: !105)
!5458 = !DILocalVariable(name: "sign", scope: !5403, file: !2916, line: 1407, type: !107)
!5459 = !DILocalVariable(name: "arg", scope: !5460, file: !2916, line: 1432, type: !108)
!5460 = distinct !DILexicalBlock(scope: !5461, file: !2916, line: 1431, column: 24)
!5461 = distinct !DILexicalBlock(scope: !5403, file: !2916, line: 1431, column: 7)
!5462 = !DILocalVariable(name: "specifier_cat", scope: !5403, file: !2916, line: 1468, type: !2915)
!5463 = !DILocalVariable(name: "length_mod", scope: !5403, file: !2916, line: 1470, type: !2923)
!5464 = !DILocalVariable(name: "rc", scope: !5465, file: !2916, line: 1575, type: !108)
!5465 = distinct !DILexicalBlock(scope: !5466, file: !2916, line: 1575, column: 4)
!5466 = distinct !DILexicalBlock(scope: !5467, file: !2916, line: 1574, column: 43)
!5467 = distinct !DILexicalBlock(scope: !5403, file: !2916, line: 1574, column: 7)
!5468 = !DILocalVariable(name: "rc", scope: !5469, file: !2916, line: 1584, type: !108)
!5469 = distinct !DILexicalBlock(scope: !5470, file: !2916, line: 1584, column: 4)
!5470 = distinct !DILexicalBlock(scope: !5403, file: !2916, line: 1582, column: 28)
!5471 = !DILocalVariable(name: "len", scope: !5472, file: !2916, line: 1589, type: !439)
!5472 = distinct !DILexicalBlock(scope: !5470, file: !2916, line: 1586, column: 13)
!5473 = !DILocalVariable(name: "len", scope: !5474, file: !2916, line: 1641, type: !439)
!5474 = distinct !DILexicalBlock(scope: !5475, file: !2916, line: 1640, column: 24)
!5475 = distinct !DILexicalBlock(scope: !5470, file: !2916, line: 1640, column: 8)
!5476 = !DILocalVariable(name: "nj_len", scope: !5403, file: !2916, line: 1722, type: !439)
!5477 = !DILocalVariable(name: "pad_len", scope: !5403, file: !2916, line: 1723, type: !108)
!5478 = !DILocalVariable(name: "pad", scope: !5479, file: !2916, line: 1751, type: !107)
!5479 = distinct !DILexicalBlock(scope: !5480, file: !2916, line: 1750, column: 26)
!5480 = distinct !DILexicalBlock(scope: !5481, file: !2916, line: 1750, column: 8)
!5481 = distinct !DILexicalBlock(scope: !5482, file: !2916, line: 1747, column: 18)
!5482 = distinct !DILexicalBlock(scope: !5403, file: !2916, line: 1747, column: 7)
!5483 = !DILocalVariable(name: "rc", scope: !5484, file: !2916, line: 1758, type: !108)
!5484 = distinct !DILexicalBlock(scope: !5485, file: !2916, line: 1758, column: 7)
!5485 = distinct !DILexicalBlock(scope: !5486, file: !2916, line: 1757, column: 21)
!5486 = distinct !DILexicalBlock(scope: !5487, file: !2916, line: 1757, column: 10)
!5487 = distinct !DILexicalBlock(scope: !5488, file: !2916, line: 1756, column: 26)
!5488 = distinct !DILexicalBlock(scope: !5479, file: !2916, line: 1756, column: 9)
!5489 = !DILocalVariable(name: "rc", scope: !5490, file: !2916, line: 1765, type: !108)
!5490 = distinct !DILexicalBlock(scope: !5491, file: !2916, line: 1765, column: 6)
!5491 = distinct !DILexicalBlock(scope: !5479, file: !2916, line: 1764, column: 25)
!5492 = !DILocalVariable(name: "rc", scope: !5493, file: !2916, line: 1774, type: !108)
!5493 = distinct !DILexicalBlock(scope: !5494, file: !2916, line: 1774, column: 4)
!5494 = distinct !DILexicalBlock(scope: !5495, file: !2916, line: 1773, column: 18)
!5495 = distinct !DILexicalBlock(scope: !5403, file: !2916, line: 1773, column: 7)
!5496 = !DILocalVariable(name: "rc", scope: !5497, file: !2916, line: 1819, type: !108)
!5497 = distinct !DILexicalBlock(scope: !5498, file: !2916, line: 1819, column: 5)
!5498 = distinct !DILexicalBlock(scope: !5499, file: !2916, line: 1818, column: 44)
!5499 = distinct !DILexicalBlock(scope: !5500, file: !2916, line: 1818, column: 8)
!5500 = distinct !DILexicalBlock(scope: !5501, file: !2916, line: 1817, column: 10)
!5501 = distinct !DILexicalBlock(scope: !5403, file: !2916, line: 1777, column: 7)
!5502 = !DILocalVariable(name: "rc", scope: !5503, file: !2916, line: 1823, type: !108)
!5503 = distinct !DILexicalBlock(scope: !5504, file: !2916, line: 1823, column: 5)
!5504 = distinct !DILexicalBlock(scope: !5505, file: !2916, line: 1822, column: 26)
!5505 = distinct !DILexicalBlock(scope: !5500, file: !2916, line: 1822, column: 8)
!5506 = !DILocalVariable(name: "rc", scope: !5507, file: !2916, line: 1828, type: !108)
!5507 = distinct !DILexicalBlock(scope: !5508, file: !2916, line: 1828, column: 5)
!5508 = distinct !DILexicalBlock(scope: !5500, file: !2916, line: 1827, column: 26)
!5509 = !DILocalVariable(name: "rc", scope: !5510, file: !2916, line: 1831, type: !108)
!5510 = distinct !DILexicalBlock(scope: !5500, file: !2916, line: 1831, column: 4)
!5511 = !DILocalVariable(name: "rc", scope: !5512, file: !2916, line: 1836, type: !108)
!5512 = distinct !DILexicalBlock(scope: !5513, file: !2916, line: 1836, column: 4)
!5513 = distinct !DILexicalBlock(scope: !5403, file: !2916, line: 1835, column: 21)
!5514 = !DILabel(scope: !5470, name: "prec_int_pad0", file: !2916, line: 1634)
!5515 = !DILocation(line: 0, scope: !5376)
!5516 = !DILocation(line: 1341, column: 2, scope: !5376)
!5517 = !DILocation(line: 1341, column: 7, scope: !5376)
!5518 = !DILocation(line: 1375, column: 2, scope: !5376)
!5519 = !DILocation(line: 1342, column: 9, scope: !5376)
!5520 = !DILocation(line: 1375, column: 9, scope: !5376)
!5521 = !DILocation(line: 1377, column: 4, scope: !5400)
!5522 = !DILocation(line: 0, scope: !5400)
!5523 = !DILocation(line: 1377, column: 4, scope: !5524)
!5524 = distinct !DILexicalBlock(scope: !5400, file: !2916, line: 1377, column: 4)
!5525 = distinct !{!5525, !5518, !5526}
!5526 = !DILocation(line: 1839, column: 2, scope: !5376)
!5527 = !DILocation(line: 1392, column: 3, scope: !5403)
!5528 = !DILocation(line: 1395, column: 5, scope: !5403)
!5529 = !DILocation(line: 0, scope: !5403)
!5530 = !DILocation(line: 1409, column: 8, scope: !5403)
!5531 = !DILocation(line: 1414, column: 13, scope: !5532)
!5532 = distinct !DILexicalBlock(scope: !5403, file: !2916, line: 1414, column: 7)
!5533 = !DILocation(line: 1414, column: 7, scope: !5403)
!5534 = !DILocation(line: 1415, column: 12, scope: !5535)
!5535 = distinct !DILexicalBlock(scope: !5532, file: !2916, line: 1414, column: 25)
!5536 = !DILocation(line: 1417, column: 14, scope: !5537)
!5537 = distinct !DILexicalBlock(scope: !5535, file: !2916, line: 1417, column: 8)
!5538 = !DILocation(line: 1417, column: 8, scope: !5535)
!5539 = !DILocation(line: 1418, column: 21, scope: !5540)
!5540 = distinct !DILexicalBlock(scope: !5537, file: !2916, line: 1417, column: 19)
!5541 = !DILocation(line: 1419, column: 13, scope: !5540)
!5542 = !DILocation(line: 1420, column: 4, scope: !5540)
!5543 = !DILocation(line: 1421, column: 20, scope: !5544)
!5544 = distinct !DILexicalBlock(scope: !5532, file: !2916, line: 1421, column: 14)
!5545 = !DILocation(line: 1421, column: 14, scope: !5532)
!5546 = !DILocation(line: 1431, column: 13, scope: !5461)
!5547 = !DILocation(line: 1431, column: 7, scope: !5403)
!5548 = !DILocation(line: 1432, column: 14, scope: !5460)
!5549 = !DILocation(line: 0, scope: !5460)
!5550 = !DILocation(line: 1434, column: 12, scope: !5551)
!5551 = distinct !DILexicalBlock(scope: !5460, file: !2916, line: 1434, column: 8)
!5552 = !DILocation(line: 1434, column: 8, scope: !5460)
!5553 = !DILocation(line: 1435, column: 24, scope: !5554)
!5554 = distinct !DILexicalBlock(scope: !5551, file: !2916, line: 1434, column: 17)
!5555 = !DILocation(line: 1436, column: 4, scope: !5554)
!5556 = !DILocation(line: 1439, column: 20, scope: !5557)
!5557 = distinct !DILexicalBlock(scope: !5461, file: !2916, line: 1439, column: 14)
!5558 = !DILocation(line: 1439, column: 14, scope: !5461)
!5559 = !DILocation(line: 1469, column: 37, scope: !5403)
!5560 = !DILocation(line: 1448, column: 20, scope: !5403)
!5561 = !DILocation(line: 1449, column: 22, scope: !5403)
!5562 = !DILocation(line: 1471, column: 34, scope: !5403)
!5563 = !DILocation(line: 1478, column: 7, scope: !5403)
!5564 = !DILocation(line: 1479, column: 4, scope: !5565)
!5565 = distinct !DILexicalBlock(scope: !5566, file: !2916, line: 1478, column: 40)
!5566 = distinct !DILexicalBlock(scope: !5403, file: !2916, line: 1478, column: 7)
!5567 = !DILocation(line: 1484, column: 19, scope: !5568)
!5568 = distinct !DILexicalBlock(scope: !5565, file: !2916, line: 1479, column: 24)
!5569 = !DILocation(line: 1484, column: 17, scope: !5568)
!5570 = !DILocation(line: 1485, column: 5, scope: !5568)
!5571 = !DILocation(line: 1492, column: 20, scope: !5572)
!5572 = distinct !DILexicalBlock(scope: !5573, file: !2916, line: 1491, column: 12)
!5573 = distinct !DILexicalBlock(scope: !5568, file: !2916, line: 1487, column: 9)
!5574 = !DILocation(line: 1492, column: 18, scope: !5572)
!5575 = !DILocation(line: 1494, column: 5, scope: !5568)
!5576 = !DILocation(line: 1497, column: 23, scope: !5568)
!5577 = !DILocation(line: 1496, column: 17, scope: !5568)
!5578 = !DILocation(line: 1498, column: 5, scope: !5568)
!5579 = !DILocation(line: 1501, column: 23, scope: !5568)
!5580 = !DILocation(line: 1500, column: 17, scope: !5568)
!5581 = !DILocation(line: 1502, column: 5, scope: !5568)
!5582 = !DILocation(line: 1513, column: 23, scope: !5568)
!5583 = !DILocation(line: 1513, column: 6, scope: !5568)
!5584 = !DILocation(line: 1512, column: 17, scope: !5568)
!5585 = !DILocation(line: 1514, column: 5, scope: !5568)
!5586 = !DILocation(line: 0, scope: !5568)
!5587 = !DILocation(line: 1516, column: 8, scope: !5565)
!5588 = !DILocation(line: 1517, column: 19, scope: !5589)
!5589 = distinct !DILexicalBlock(scope: !5590, file: !2916, line: 1516, column: 33)
!5590 = distinct !DILexicalBlock(scope: !5565, file: !2916, line: 1516, column: 8)
!5591 = !DILocation(line: 1517, column: 17, scope: !5589)
!5592 = !DILocation(line: 1518, column: 4, scope: !5589)
!5593 = !DILocation(line: 1519, column: 19, scope: !5594)
!5594 = distinct !DILexicalBlock(scope: !5595, file: !2916, line: 1518, column: 39)
!5595 = distinct !DILexicalBlock(scope: !5590, file: !2916, line: 1518, column: 15)
!5596 = !DILocation(line: 1519, column: 17, scope: !5594)
!5597 = !DILocation(line: 1520, column: 4, scope: !5594)
!5598 = !DILocation(line: 1522, column: 4, scope: !5599)
!5599 = distinct !DILexicalBlock(scope: !5600, file: !2916, line: 1521, column: 47)
!5600 = distinct !DILexicalBlock(scope: !5566, file: !2916, line: 1521, column: 14)
!5601 = !DILocation(line: 1527, column: 19, scope: !5602)
!5602 = distinct !DILexicalBlock(scope: !5599, file: !2916, line: 1522, column: 24)
!5603 = !DILocation(line: 1527, column: 17, scope: !5602)
!5604 = !DILocation(line: 1528, column: 5, scope: !5602)
!5605 = !DILocation(line: 0, scope: !5606)
!5606 = distinct !DILexicalBlock(scope: !5602, file: !2916, line: 1530, column: 9)
!5607 = !DILocation(line: 1540, column: 23, scope: !5602)
!5608 = !DILocation(line: 1539, column: 17, scope: !5602)
!5609 = !DILocation(line: 1542, column: 5, scope: !5602)
!5610 = !DILocation(line: 1545, column: 23, scope: !5602)
!5611 = !DILocation(line: 1544, column: 17, scope: !5602)
!5612 = !DILocation(line: 1547, column: 5, scope: !5602)
!5613 = !DILocation(line: 1551, column: 23, scope: !5602)
!5614 = !DILocation(line: 1551, column: 6, scope: !5602)
!5615 = !DILocation(line: 1550, column: 17, scope: !5602)
!5616 = !DILocation(line: 1552, column: 5, scope: !5602)
!5617 = !DILocation(line: 0, scope: !5602)
!5618 = !DILocation(line: 1554, column: 8, scope: !5599)
!5619 = !DILocation(line: 1555, column: 19, scope: !5620)
!5620 = distinct !DILexicalBlock(scope: !5621, file: !2916, line: 1554, column: 33)
!5621 = distinct !DILexicalBlock(scope: !5599, file: !2916, line: 1554, column: 8)
!5622 = !DILocation(line: 1555, column: 17, scope: !5620)
!5623 = !DILocation(line: 1556, column: 4, scope: !5620)
!5624 = !DILocation(line: 1557, column: 19, scope: !5625)
!5625 = distinct !DILexicalBlock(scope: !5626, file: !2916, line: 1556, column: 39)
!5626 = distinct !DILexicalBlock(scope: !5621, file: !2916, line: 1556, column: 15)
!5627 = !DILocation(line: 1557, column: 17, scope: !5625)
!5628 = !DILocation(line: 1558, column: 4, scope: !5625)
!5629 = !DILocation(line: 0, scope: !5630)
!5630 = distinct !DILexicalBlock(scope: !5631, file: !2916, line: 1560, column: 8)
!5631 = distinct !DILexicalBlock(scope: !5632, file: !2916, line: 1559, column: 45)
!5632 = distinct !DILexicalBlock(scope: !5600, file: !2916, line: 1559, column: 14)
!5633 = !DILocation(line: 1566, column: 17, scope: !5634)
!5634 = distinct !DILexicalBlock(scope: !5635, file: !2916, line: 1565, column: 46)
!5635 = distinct !DILexicalBlock(scope: !5632, file: !2916, line: 1565, column: 14)
!5636 = !DILocation(line: 1566, column: 15, scope: !5634)
!5637 = !DILocation(line: 1567, column: 3, scope: !5634)
!5638 = !DILocation(line: 1574, column: 21, scope: !5467)
!5639 = !DILocation(line: 1575, column: 4, scope: !5465)
!5640 = !DILocation(line: 0, scope: !5465)
!5641 = !DILocation(line: 1575, column: 4, scope: !5642)
!5642 = distinct !DILexicalBlock(scope: !5465, file: !2916, line: 1575, column: 4)
!5643 = !DILocation(line: 1582, column: 17, scope: !5403)
!5644 = !DILocation(line: 1582, column: 3, scope: !5403)
!5645 = !DILocation(line: 1584, column: 4, scope: !5469)
!5646 = !DILocation(line: 0, scope: !5469)
!5647 = !DILocation(line: 1584, column: 4, scope: !5648)
!5648 = distinct !DILexicalBlock(scope: !5469, file: !2916, line: 1584, column: 4)
!5649 = !DILocation(line: 1587, column: 31, scope: !5472)
!5650 = !DILocation(line: 1591, column: 18, scope: !5651)
!5651 = distinct !DILexicalBlock(scope: !5472, file: !2916, line: 1591, column: 8)
!5652 = !DILocation(line: 1591, column: 8, scope: !5472)
!5653 = !DILocation(line: 1592, column: 11, scope: !5654)
!5654 = distinct !DILexicalBlock(scope: !5651, file: !2916, line: 1591, column: 24)
!5655 = !DILocation(line: 0, scope: !5472)
!5656 = !DILocation(line: 1593, column: 4, scope: !5654)
!5657 = !DILocation(line: 1594, column: 11, scope: !5658)
!5658 = distinct !DILexicalBlock(scope: !5651, file: !2916, line: 1593, column: 11)
!5659 = !DILocation(line: 1604, column: 51, scope: !5470)
!5660 = !DILocation(line: 1604, column: 13, scope: !5470)
!5661 = !DILocation(line: 1604, column: 11, scope: !5470)
!5662 = !DILocation(line: 1606, column: 4, scope: !5470)
!5663 = !DILocation(line: 1609, column: 14, scope: !5664)
!5664 = distinct !DILexicalBlock(scope: !5470, file: !2916, line: 1609, column: 8)
!5665 = !DILocation(line: 1609, column: 8, scope: !5470)
!5666 = !DILocation(line: 1619, column: 18, scope: !5470)
!5667 = !DILocation(line: 1620, column: 13, scope: !5668)
!5668 = distinct !DILexicalBlock(scope: !5470, file: !2916, line: 1620, column: 8)
!5669 = !DILocation(line: 1620, column: 8, scope: !5470)
!5670 = !DILocation(line: 1622, column: 36, scope: !5671)
!5671 = distinct !DILexicalBlock(scope: !5668, file: !2916, line: 1620, column: 18)
!5672 = !DILocation(line: 1622, column: 17, scope: !5671)
!5673 = !DILocation(line: 1623, column: 4, scope: !5671)
!5674 = !DILocation(line: 1632, column: 29, scope: !5470)
!5675 = !DILocation(line: 1632, column: 10, scope: !5470)
!5676 = !DILocation(line: 1632, column: 4, scope: !5470)
!5677 = !DILocation(line: 1407, column: 8, scope: !5403)
!5678 = !DILocation(line: 0, scope: !5470)
!5679 = !DILocation(line: 1634, column: 3, scope: !5470)
!5680 = !DILocation(line: 1640, column: 18, scope: !5475)
!5681 = !DILocation(line: 1640, column: 8, scope: !5470)
!5682 = !DILocation(line: 1729, column: 13, scope: !5683)
!5683 = distinct !DILexicalBlock(scope: !5403, file: !2916, line: 1729, column: 7)
!5684 = !DILocation(line: 1641, column: 22, scope: !5474)
!5685 = !DILocation(line: 0, scope: !5474)
!5686 = !DILocation(line: 1646, column: 21, scope: !5474)
!5687 = !DILocation(line: 1649, column: 13, scope: !5688)
!5688 = distinct !DILexicalBlock(scope: !5474, file: !2916, line: 1649, column: 9)
!5689 = !DILocation(line: 1649, column: 9, scope: !5474)
!5690 = !DILocation(line: 1650, column: 35, scope: !5691)
!5691 = distinct !DILexicalBlock(scope: !5688, file: !2916, line: 1649, column: 34)
!5692 = !DILocation(line: 1650, column: 23, scope: !5691)
!5693 = !DILocation(line: 1651, column: 5, scope: !5691)
!5694 = !DILocation(line: 1660, column: 15, scope: !5695)
!5695 = distinct !DILexicalBlock(scope: !5470, file: !2916, line: 1660, column: 8)
!5696 = !DILocation(line: 1660, column: 19, scope: !5695)
!5697 = !DILocation(line: 1660, column: 8, scope: !5470)
!5698 = !DILocation(line: 1661, column: 23, scope: !5699)
!5699 = distinct !DILexicalBlock(scope: !5695, file: !2916, line: 1660, column: 28)
!5700 = !DILocation(line: 1661, column: 11, scope: !5699)
!5701 = !DILocation(line: 1665, column: 22, scope: !5699)
!5702 = !DILocation(line: 1666, column: 21, scope: !5699)
!5703 = !DILocation(line: 1668, column: 5, scope: !5699)
!5704 = !DILocation(line: 1677, column: 30, scope: !5705)
!5705 = distinct !DILexicalBlock(scope: !5706, file: !2916, line: 1676, column: 49)
!5706 = distinct !DILexicalBlock(scope: !5470, file: !2916, line: 1676, column: 8)
!5707 = !DILocation(line: 1677, column: 5, scope: !5705)
!5708 = !DILocation(line: 1680, column: 4, scope: !5470)
!5709 = !DILocation(line: 0, scope: !5651)
!5710 = !DILocation(line: 1597, column: 14, scope: !5472)
!5711 = !DILocation(line: 1699, column: 11, scope: !5712)
!5712 = distinct !DILexicalBlock(scope: !5403, file: !2916, line: 1699, column: 7)
!5713 = !DILocation(line: 1699, column: 7, scope: !5403)
!5714 = !DILocation(line: 1725, column: 7, scope: !5715)
!5715 = distinct !DILexicalBlock(scope: !5403, file: !2916, line: 1725, column: 7)
!5716 = !DILocation(line: 1725, column: 12, scope: !5715)
!5717 = !DILocation(line: 1747, column: 13, scope: !5482)
!5718 = !DILocation(line: 1747, column: 7, scope: !5403)
!5719 = !DILocation(line: 1722, column: 24, scope: !5403)
!5720 = !DILocation(line: 1725, column: 7, scope: !5403)
!5721 = !DILocation(line: 1729, column: 7, scope: !5403)
!5722 = !DILocation(line: 1736, column: 13, scope: !5723)
!5723 = distinct !DILexicalBlock(scope: !5403, file: !2916, line: 1736, column: 7)
!5724 = !DILocation(line: 1735, column: 19, scope: !5403)
!5725 = !DILocation(line: 1736, column: 7, scope: !5403)
!5726 = !DILocation(line: 1748, column: 10, scope: !5481)
!5727 = !DILocation(line: 1750, column: 15, scope: !5480)
!5728 = !DILocation(line: 1750, column: 8, scope: !5481)
!5729 = !DILocation(line: 0, scope: !5479)
!5730 = !DILocation(line: 1756, column: 15, scope: !5488)
!5731 = !DILocation(line: 1756, column: 9, scope: !5479)
!5732 = !DILocation(line: 1758, column: 7, scope: !5484)
!5733 = !DILocation(line: 0, scope: !5484)
!5734 = !DILocation(line: 1758, column: 7, scope: !5735)
!5735 = distinct !DILexicalBlock(scope: !5484, file: !2916, line: 1758, column: 7)
!5736 = !DILocation(line: 1764, column: 5, scope: !5479)
!5737 = !DILocation(line: 0, scope: !5481)
!5738 = !DILocation(line: 1764, column: 20, scope: !5479)
!5739 = !DILocation(line: 1764, column: 17, scope: !5479)
!5740 = !DILocation(line: 1765, column: 6, scope: !5490)
!5741 = !DILocation(line: 0, scope: !5490)
!5742 = !DILocation(line: 1765, column: 6, scope: !5743)
!5743 = distinct !DILexicalBlock(scope: !5490, file: !2916, line: 1765, column: 6)
!5744 = distinct !{!5744, !5736, !5745}
!5745 = !DILocation(line: 1766, column: 5, scope: !5479)
!5746 = !DILocation(line: 1773, column: 12, scope: !5495)
!5747 = !DILocation(line: 1773, column: 7, scope: !5403)
!5748 = !DILocation(line: 1773, column: 7, scope: !5495)
!5749 = !DILocation(line: 1774, column: 4, scope: !5493)
!5750 = !DILocation(line: 0, scope: !5493)
!5751 = !DILocation(line: 1774, column: 4, scope: !5752)
!5752 = distinct !DILexicalBlock(scope: !5493, file: !2916, line: 1774, column: 4)
!5753 = !DILocation(line: 1818, column: 8, scope: !5499)
!5754 = !DILocation(line: 1818, column: 27, scope: !5499)
!5755 = !DILocation(line: 1818, column: 25, scope: !5499)
!5756 = !DILocation(line: 1818, column: 8, scope: !5500)
!5757 = !DILocation(line: 1819, column: 5, scope: !5497)
!5758 = !DILocation(line: 0, scope: !5497)
!5759 = !DILocation(line: 1819, column: 5, scope: !5760)
!5760 = distinct !DILexicalBlock(scope: !5497, file: !2916, line: 1819, column: 5)
!5761 = !DILocation(line: 1822, column: 14, scope: !5505)
!5762 = !DILocation(line: 1822, column: 8, scope: !5500)
!5763 = !DILocation(line: 1823, column: 5, scope: !5503)
!5764 = !DILocation(line: 0, scope: !5503)
!5765 = !DILocation(line: 1823, column: 5, scope: !5766)
!5766 = distinct !DILexicalBlock(scope: !5503, file: !2916, line: 1823, column: 5)
!5767 = !DILocation(line: 1826, column: 20, scope: !5500)
!5768 = !DILocation(line: 1827, column: 4, scope: !5500)
!5769 = !DILocation(line: 0, scope: !5500)
!5770 = !DILocation(line: 1827, column: 21, scope: !5500)
!5771 = !DILocation(line: 1827, column: 18, scope: !5500)
!5772 = !DILocation(line: 1828, column: 5, scope: !5507)
!5773 = !DILocation(line: 0, scope: !5507)
!5774 = !DILocation(line: 1828, column: 5, scope: !5775)
!5775 = distinct !DILexicalBlock(scope: !5507, file: !2916, line: 1828, column: 5)
!5776 = distinct !{!5776, !5768, !5777}
!5777 = !DILocation(line: 1829, column: 4, scope: !5500)
!5778 = !DILocation(line: 1831, column: 4, scope: !5510)
!5779 = !DILocation(line: 0, scope: !5510)
!5780 = !DILocation(line: 1831, column: 4, scope: !5781)
!5781 = distinct !DILexicalBlock(scope: !5510, file: !2916, line: 1831, column: 4)
!5782 = !DILocation(line: 1835, column: 16, scope: !5403)
!5783 = !DILocation(line: 1835, column: 3, scope: !5403)
!5784 = !DILocation(line: 1836, column: 4, scope: !5512)
!5785 = !DILocation(line: 0, scope: !5512)
!5786 = !DILocation(line: 1836, column: 4, scope: !5787)
!5787 = distinct !DILexicalBlock(scope: !5512, file: !2916, line: 1836, column: 4)
!5788 = !DILocation(line: 1837, column: 4, scope: !5513)
!5789 = distinct !{!5789, !5783, !5790}
!5790 = !DILocation(line: 1838, column: 3, scope: !5403)
!5791 = !DILocation(line: 1844, column: 1, scope: !5376)
!5792 = distinct !DISubprogram(name: "extract_conversion", scope: !2916, file: !2916, line: 642, type: !5793, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2912, retainedNodes: !5795)
!5793 = !DISubroutineType(types: !5794)
!5794 = !{!105, !5449, !105}
!5795 = !{!5796, !5797}
!5796 = !DILocalVariable(name: "conv", arg: 1, scope: !5792, file: !2916, line: 642, type: !5449)
!5797 = !DILocalVariable(name: "sp", arg: 2, scope: !5792, file: !2916, line: 643, type: !105)
!5798 = !DILocation(line: 0, scope: !5792)
!5799 = !DILocation(line: 645, column: 10, scope: !5792)
!5800 = !DILocation(line: 653, column: 2, scope: !5792)
!5801 = !DILocation(line: 654, column: 6, scope: !5802)
!5802 = distinct !DILexicalBlock(scope: !5792, file: !2916, line: 654, column: 6)
!5803 = !DILocation(line: 654, column: 10, scope: !5802)
!5804 = !DILocation(line: 654, column: 6, scope: !5792)
!5805 = !DILocation(line: 655, column: 24, scope: !5806)
!5806 = distinct !DILexicalBlock(scope: !5802, file: !2916, line: 654, column: 18)
!5807 = !DILocation(line: 655, column: 19, scope: !5806)
!5808 = !DILocation(line: 656, column: 3, scope: !5806)
!5809 = !DILocation(line: 659, column: 7, scope: !5792)
!5810 = !DILocation(line: 660, column: 7, scope: !5792)
!5811 = !DILocation(line: 661, column: 7, scope: !5792)
!5812 = !DILocation(line: 662, column: 7, scope: !5792)
!5813 = !DILocation(line: 663, column: 7, scope: !5792)
!5814 = !DILocation(line: 665, column: 2, scope: !5792)
!5815 = !DILocation(line: 666, column: 1, scope: !5792)
!5816 = distinct !DISubprogram(name: "outs", scope: !2916, file: !2916, line: 1319, type: !5817, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2912, retainedNodes: !5819)
!5817 = !DISubroutineType(types: !5818)
!5818 = !{!108, !4568, !104, !105, !105}
!5819 = !{!5820, !5821, !5822, !5823, !5824, !5825}
!5820 = !DILocalVariable(name: "out", arg: 1, scope: !5816, file: !2916, line: 1319, type: !4568)
!5821 = !DILocalVariable(name: "ctx", arg: 2, scope: !5816, file: !2916, line: 1320, type: !104)
!5822 = !DILocalVariable(name: "sp", arg: 3, scope: !5816, file: !2916, line: 1321, type: !105)
!5823 = !DILocalVariable(name: "ep", arg: 4, scope: !5816, file: !2916, line: 1322, type: !105)
!5824 = !DILocalVariable(name: "count", scope: !5816, file: !2916, line: 1324, type: !439)
!5825 = !DILocalVariable(name: "rc", scope: !5826, file: !2916, line: 1327, type: !108)
!5826 = distinct !DILexicalBlock(scope: !5816, file: !2916, line: 1326, column: 45)
!5827 = !DILocation(line: 0, scope: !5816)
!5828 = !DILocation(line: 1326, column: 2, scope: !5816)
!5829 = !DILocation(line: 1324, column: 9, scope: !5816)
!5830 = !DILocation(line: 1326, column: 13, scope: !5816)
!5831 = !DILocation(line: 1326, column: 19, scope: !5816)
!5832 = !DILocation(line: 1327, column: 21, scope: !5826)
!5833 = !DILocation(line: 1326, column: 36, scope: !5816)
!5834 = !DILocation(line: 1326, column: 39, scope: !5816)
!5835 = !DILocation(line: 1327, column: 24, scope: !5826)
!5836 = !DILocation(line: 1327, column: 16, scope: !5826)
!5837 = !DILocation(line: 1327, column: 12, scope: !5826)
!5838 = !DILocation(line: 0, scope: !5826)
!5839 = !DILocation(line: 1329, column: 10, scope: !5840)
!5840 = distinct !DILexicalBlock(scope: !5826, file: !2916, line: 1329, column: 7)
!5841 = !DILocation(line: 1329, column: 7, scope: !5826)
!5842 = distinct !{!5842, !5828, !5843}
!5843 = !DILocation(line: 1333, column: 2, scope: !5816)
!5844 = !DILocation(line: 1336, column: 1, scope: !5816)
!5845 = distinct !DISubprogram(name: "encode_uint", scope: !2916, file: !2916, line: 788, type: !5846, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2912, retainedNodes: !5848)
!5846 = !DISubroutineType(types: !5847)
!5847 = !{!443, !2938, !5449, !443, !105}
!5848 = !{!5849, !5850, !5851, !5852, !5853, !5854, !5856, !5857}
!5849 = !DILocalVariable(name: "value", arg: 1, scope: !5845, file: !2916, line: 788, type: !2938)
!5850 = !DILocalVariable(name: "conv", arg: 2, scope: !5845, file: !2916, line: 789, type: !5449)
!5851 = !DILocalVariable(name: "bps", arg: 3, scope: !5845, file: !2916, line: 790, type: !443)
!5852 = !DILocalVariable(name: "bpe", arg: 4, scope: !5845, file: !2916, line: 791, type: !105)
!5853 = !DILocalVariable(name: "upcase", scope: !5845, file: !2916, line: 793, type: !422)
!5854 = !DILocalVariable(name: "radix", scope: !5845, file: !2916, line: 794, type: !5855)
!5855 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!5856 = !DILocalVariable(name: "bp", scope: !5845, file: !2916, line: 795, type: !443)
!5857 = !DILocalVariable(name: "lsv", scope: !5858, file: !2916, line: 798, type: !32)
!5858 = distinct !DILexicalBlock(scope: !5845, file: !2916, line: 797, column: 5)
!5859 = !DILocation(line: 0, scope: !5845)
!5860 = !DILocation(line: 793, column: 35, scope: !5845)
!5861 = !DILocation(line: 793, column: 24, scope: !5845)
!5862 = !DILocation(line: 793, column: 16, scope: !5845)
!5863 = !DILocation(line: 794, column: 29, scope: !5845)
!5864 = !DILocation(line: 795, column: 24, scope: !5845)
!5865 = !DILocation(line: 795, column: 17, scope: !5845)
!5866 = !DILocation(line: 797, column: 2, scope: !5845)
!5867 = !DILocation(line: 802, column: 9, scope: !5858)
!5868 = !DILocation(line: 798, column: 22, scope: !5858)
!5869 = !DILocation(line: 0, scope: !5858)
!5870 = !DILocation(line: 800, column: 16, scope: !5858)
!5871 = !DILocation(line: 800, column: 11, scope: !5858)
!5872 = !DILocation(line: 800, column: 4, scope: !5858)
!5873 = !DILocation(line: 800, column: 9, scope: !5858)
!5874 = !DILocation(line: 803, column: 18, scope: !5845)
!5875 = !DILocation(line: 803, column: 24, scope: !5845)
!5876 = !DILocation(line: 803, column: 2, scope: !5858)
!5877 = distinct !{!5877, !5866, !5878}
!5878 = !DILocation(line: 803, column: 37, scope: !5845)
!5879 = !DILocation(line: 808, column: 12, scope: !5880)
!5880 = distinct !DILexicalBlock(scope: !5845, file: !2916, line: 808, column: 6)
!5881 = !DILocation(line: 808, column: 6, scope: !5845)
!5882 = !DILocation(line: 809, column: 7, scope: !5883)
!5883 = distinct !DILexicalBlock(scope: !5880, file: !2916, line: 808, column: 23)
!5884 = !DILocation(line: 813, column: 3, scope: !5885)
!5885 = distinct !DILexicalBlock(scope: !5886, file: !2916, line: 811, column: 27)
!5886 = distinct !DILexicalBlock(scope: !5887, file: !2916, line: 811, column: 14)
!5887 = distinct !DILexicalBlock(scope: !5883, file: !2916, line: 809, column: 7)
!5888 = !DILocation(line: 0, scope: !5887)
!5889 = !DILocation(line: 818, column: 2, scope: !5845)
!5890 = distinct !DISubprogram(name: "store_count", scope: !2916, file: !2916, line: 1280, type: !5891, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2912, retainedNodes: !5895)
!5891 = !DISubroutineType(types: !5892)
!5892 = !{null, !5893, !104, !108}
!5893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5894, size: 32)
!5894 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5416)
!5895 = !{!5896, !5897, !5898}
!5896 = !DILocalVariable(name: "conv", arg: 1, scope: !5890, file: !2916, line: 1280, type: !5893)
!5897 = !DILocalVariable(name: "dp", arg: 2, scope: !5890, file: !2916, line: 1281, type: !104)
!5898 = !DILocalVariable(name: "count", arg: 3, scope: !5890, file: !2916, line: 1282, type: !108)
!5899 = !DILocation(line: 0, scope: !5890)
!5900 = !DILocation(line: 1284, column: 38, scope: !5890)
!5901 = !DILocation(line: 1284, column: 2, scope: !5890)
!5902 = !DILocation(line: 1286, column: 4, scope: !5903)
!5903 = distinct !DILexicalBlock(scope: !5890, file: !2916, line: 1284, column: 50)
!5904 = !DILocation(line: 1286, column: 14, scope: !5903)
!5905 = !DILocation(line: 1287, column: 3, scope: !5903)
!5906 = !DILocation(line: 1289, column: 24, scope: !5903)
!5907 = !DILocation(line: 1289, column: 22, scope: !5903)
!5908 = !DILocation(line: 1290, column: 3, scope: !5903)
!5909 = !DILocation(line: 1292, column: 18, scope: !5903)
!5910 = !DILocation(line: 1292, column: 4, scope: !5903)
!5911 = !DILocation(line: 1292, column: 16, scope: !5903)
!5912 = !DILocation(line: 1293, column: 3, scope: !5903)
!5913 = !DILocation(line: 1295, column: 4, scope: !5903)
!5914 = !DILocation(line: 1295, column: 15, scope: !5903)
!5915 = !DILocation(line: 1296, column: 3, scope: !5903)
!5916 = !DILocation(line: 1298, column: 22, scope: !5903)
!5917 = !DILocation(line: 1298, column: 4, scope: !5903)
!5918 = !DILocation(line: 1298, column: 20, scope: !5903)
!5919 = !DILocation(line: 1299, column: 3, scope: !5903)
!5920 = !DILocation(line: 1301, column: 21, scope: !5903)
!5921 = !DILocation(line: 1301, column: 4, scope: !5903)
!5922 = !DILocation(line: 1301, column: 19, scope: !5903)
!5923 = !DILocation(line: 1302, column: 3, scope: !5903)
!5924 = !DILocation(line: 1304, column: 4, scope: !5903)
!5925 = !DILocation(line: 1304, column: 17, scope: !5903)
!5926 = !DILocation(line: 1305, column: 3, scope: !5903)
!5927 = !DILocation(line: 1307, column: 4, scope: !5903)
!5928 = !DILocation(line: 1307, column: 20, scope: !5903)
!5929 = !DILocation(line: 1308, column: 3, scope: !5903)
!5930 = !DILocation(line: 1316, column: 1, scope: !5890)
!5931 = distinct !DISubprogram(name: "isupper", scope: !5932, file: !5932, line: 16, type: !563, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2912, retainedNodes: !5933)
!5932 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5933 = !{!5934}
!5934 = !DILocalVariable(name: "a", arg: 1, scope: !5931, file: !5932, line: 16, type: !108)
!5935 = !DILocation(line: 0, scope: !5931)
!5936 = !DILocation(line: 18, column: 29, scope: !5931)
!5937 = !DILocation(line: 18, column: 45, scope: !5931)
!5938 = !DILocation(line: 18, column: 2, scope: !5931)
!5939 = distinct !DISubprogram(name: "conversion_radix", scope: !2916, file: !2916, line: 761, type: !5940, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2912, retainedNodes: !5942)
!5940 = !DISubroutineType(types: !5941)
!5941 = !{!439, !107}
!5942 = !{!5943}
!5943 = !DILocalVariable(name: "specifier", arg: 1, scope: !5939, file: !2916, line: 761, type: !107)
!5944 = !DILocation(line: 0, scope: !5939)
!5945 = !DILocation(line: 763, column: 2, scope: !5939)
!5946 = !DILocation(line: 770, column: 3, scope: !5947)
!5947 = distinct !DILexicalBlock(scope: !5939, file: !2916, line: 763, column: 21)
!5948 = !DILocation(line: 774, column: 3, scope: !5947)
!5949 = !DILocation(line: 0, scope: !5947)
!5950 = !DILocation(line: 776, column: 1, scope: !5939)
!5951 = distinct !DISubprogram(name: "extract_flags", scope: !2916, file: !2916, line: 339, type: !5793, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2912, retainedNodes: !5952)
!5952 = !{!5953, !5954, !5955}
!5953 = !DILocalVariable(name: "conv", arg: 1, scope: !5951, file: !2916, line: 339, type: !5449)
!5954 = !DILocalVariable(name: "sp", arg: 2, scope: !5951, file: !2916, line: 340, type: !105)
!5955 = !DILocalVariable(name: "loop", scope: !5951, file: !2916, line: 342, type: !422)
!5956 = !DILocation(line: 0, scope: !5951)
!5957 = !DILocation(line: 344, column: 2, scope: !5951)
!5958 = !DILocation(line: 345, column: 11, scope: !5959)
!5959 = distinct !DILexicalBlock(scope: !5951, file: !2916, line: 344, column: 5)
!5960 = !DILocation(line: 345, column: 3, scope: !5959)
!5961 = !DILocation(line: 351, column: 4, scope: !5962)
!5962 = distinct !DILexicalBlock(scope: !5959, file: !2916, line: 345, column: 16)
!5963 = !DILocation(line: 354, column: 4, scope: !5962)
!5964 = !DILocation(line: 357, column: 4, scope: !5962)
!5965 = !DILocation(line: 360, column: 4, scope: !5962)
!5966 = !DILocation(line: 0, scope: !5962)
!5967 = !DILocation(line: 370, column: 12, scope: !5968)
!5968 = distinct !DILexicalBlock(scope: !5951, file: !2916, line: 370, column: 6)
!5969 = !DILocation(line: 370, column: 22, scope: !5968)
!5970 = !DILocation(line: 371, column: 19, scope: !5971)
!5971 = distinct !DILexicalBlock(scope: !5968, file: !2916, line: 370, column: 42)
!5972 = !DILocation(line: 372, column: 2, scope: !5971)
!5973 = !DILocation(line: 376, column: 2, scope: !5951)
!5974 = distinct !DISubprogram(name: "extract_width", scope: !2916, file: !2916, line: 388, type: !5793, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2912, retainedNodes: !5975)
!5975 = !{!5976, !5977, !5978, !5979}
!5976 = !DILocalVariable(name: "conv", arg: 1, scope: !5974, file: !2916, line: 388, type: !5449)
!5977 = !DILocalVariable(name: "sp", arg: 2, scope: !5974, file: !2916, line: 389, type: !105)
!5978 = !DILocalVariable(name: "wp", scope: !5974, file: !2916, line: 398, type: !105)
!5979 = !DILocalVariable(name: "width", scope: !5974, file: !2916, line: 399, type: !439)
!5980 = !DILocation(line: 0, scope: !5974)
!5981 = !DILocation(line: 391, column: 8, scope: !5974)
!5982 = !DILocation(line: 391, column: 22, scope: !5974)
!5983 = !DILocation(line: 393, column: 6, scope: !5984)
!5984 = distinct !DILexicalBlock(scope: !5974, file: !2916, line: 393, column: 6)
!5985 = !DILocation(line: 393, column: 10, scope: !5984)
!5986 = !DILocation(line: 393, column: 6, scope: !5974)
!5987 = !DILocation(line: 394, column: 20, scope: !5988)
!5988 = distinct !DILexicalBlock(scope: !5984, file: !2916, line: 393, column: 18)
!5989 = !DILocation(line: 395, column: 10, scope: !5988)
!5990 = !DILocation(line: 395, column: 3, scope: !5988)
!5991 = !DILocation(line: 399, column: 17, scope: !5974)
!5992 = !DILocation(line: 401, column: 6, scope: !5993)
!5993 = distinct !DILexicalBlock(scope: !5974, file: !2916, line: 401, column: 6)
!5994 = !DILocation(line: 401, column: 9, scope: !5993)
!5995 = !DILocation(line: 401, column: 6, scope: !5974)
!5996 = !DILocation(line: 402, column: 23, scope: !5997)
!5997 = distinct !DILexicalBlock(scope: !5993, file: !2916, line: 401, column: 16)
!5998 = !DILocation(line: 403, column: 9, scope: !5997)
!5999 = !DILocation(line: 403, column: 21, scope: !5997)
!6000 = !DILocation(line: 405, column: 11, scope: !5997)
!6001 = !DILocation(line: 404, column: 21, scope: !5997)
!6002 = !DILocation(line: 406, column: 2, scope: !5997)
!6003 = !DILocation(line: 409, column: 1, scope: !5974)
!6004 = distinct !DISubprogram(name: "extract_prec", scope: !2916, file: !2916, line: 420, type: !5793, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2912, retainedNodes: !6005)
!6005 = !{!6006, !6007, !6008}
!6006 = !DILocalVariable(name: "conv", arg: 1, scope: !6004, file: !2916, line: 420, type: !5449)
!6007 = !DILocalVariable(name: "sp", arg: 2, scope: !6004, file: !2916, line: 421, type: !105)
!6008 = !DILocalVariable(name: "prec", scope: !6004, file: !2916, line: 435, type: !439)
!6009 = !DILocation(line: 0, scope: !6004)
!6010 = !DILocation(line: 423, column: 24, scope: !6004)
!6011 = !DILocation(line: 423, column: 28, scope: !6004)
!6012 = !DILocation(line: 423, column: 8, scope: !6004)
!6013 = !DILocation(line: 423, column: 21, scope: !6004)
!6014 = !DILocation(line: 425, column: 6, scope: !6004)
!6015 = !DILocation(line: 428, column: 2, scope: !6004)
!6016 = !DILocation(line: 430, column: 6, scope: !6017)
!6017 = distinct !DILexicalBlock(scope: !6004, file: !2916, line: 430, column: 6)
!6018 = !DILocation(line: 430, column: 10, scope: !6017)
!6019 = !DILocation(line: 430, column: 6, scope: !6004)
!6020 = !DILocation(line: 431, column: 19, scope: !6021)
!6021 = distinct !DILexicalBlock(scope: !6017, file: !2916, line: 430, column: 18)
!6022 = !DILocation(line: 432, column: 10, scope: !6021)
!6023 = !DILocation(line: 432, column: 3, scope: !6021)
!6024 = !DILocation(line: 435, column: 16, scope: !6004)
!6025 = !DILocation(line: 437, column: 8, scope: !6004)
!6026 = !DILocation(line: 437, column: 19, scope: !6004)
!6027 = !DILocation(line: 439, column: 10, scope: !6004)
!6028 = !DILocation(line: 438, column: 20, scope: !6004)
!6029 = !DILocation(line: 441, column: 9, scope: !6004)
!6030 = !DILocation(line: 442, column: 1, scope: !6004)
!6031 = distinct !DISubprogram(name: "extract_length", scope: !2916, file: !2916, line: 453, type: !5793, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2912, retainedNodes: !6032)
!6032 = !{!6033, !6034}
!6033 = !DILocalVariable(name: "conv", arg: 1, scope: !6031, file: !2916, line: 453, type: !5449)
!6034 = !DILocalVariable(name: "sp", arg: 2, scope: !6031, file: !2916, line: 454, type: !105)
!6035 = !DILocation(line: 0, scope: !6031)
!6036 = !DILocation(line: 456, column: 10, scope: !6031)
!6037 = !DILocation(line: 456, column: 2, scope: !6031)
!6038 = !DILocation(line: 458, column: 8, scope: !6039)
!6039 = distinct !DILexicalBlock(scope: !6040, file: !2916, line: 458, column: 7)
!6040 = distinct !DILexicalBlock(scope: !6031, file: !2916, line: 456, column: 15)
!6041 = !DILocation(line: 458, column: 7, scope: !6039)
!6042 = !DILocation(line: 458, column: 13, scope: !6039)
!6043 = !DILocation(line: 0, scope: !6039)
!6044 = !DILocation(line: 458, column: 7, scope: !6040)
!6045 = !DILocation(line: 459, column: 21, scope: !6046)
!6046 = distinct !DILexicalBlock(scope: !6039, file: !2916, line: 458, column: 21)
!6047 = !DILocation(line: 460, column: 4, scope: !6046)
!6048 = !DILocation(line: 461, column: 3, scope: !6046)
!6049 = !DILocation(line: 462, column: 21, scope: !6050)
!6050 = distinct !DILexicalBlock(scope: !6039, file: !2916, line: 461, column: 10)
!6051 = !DILocation(line: 466, column: 8, scope: !6052)
!6052 = distinct !DILexicalBlock(scope: !6040, file: !2916, line: 466, column: 7)
!6053 = !DILocation(line: 466, column: 7, scope: !6052)
!6054 = !DILocation(line: 466, column: 13, scope: !6052)
!6055 = !DILocation(line: 0, scope: !6052)
!6056 = !DILocation(line: 466, column: 7, scope: !6040)
!6057 = !DILocation(line: 467, column: 21, scope: !6058)
!6058 = distinct !DILexicalBlock(scope: !6052, file: !2916, line: 466, column: 21)
!6059 = !DILocation(line: 468, column: 4, scope: !6058)
!6060 = !DILocation(line: 469, column: 3, scope: !6058)
!6061 = !DILocation(line: 470, column: 21, scope: !6062)
!6062 = distinct !DILexicalBlock(scope: !6052, file: !2916, line: 469, column: 10)
!6063 = !DILocation(line: 474, column: 9, scope: !6040)
!6064 = !DILocation(line: 474, column: 20, scope: !6040)
!6065 = !DILocation(line: 475, column: 3, scope: !6040)
!6066 = !DILocation(line: 476, column: 3, scope: !6040)
!6067 = !DILocation(line: 478, column: 9, scope: !6040)
!6068 = !DILocation(line: 478, column: 20, scope: !6040)
!6069 = !DILocation(line: 479, column: 3, scope: !6040)
!6070 = !DILocation(line: 480, column: 3, scope: !6040)
!6071 = !DILocation(line: 482, column: 9, scope: !6040)
!6072 = !DILocation(line: 482, column: 20, scope: !6040)
!6073 = !DILocation(line: 483, column: 3, scope: !6040)
!6074 = !DILocation(line: 484, column: 3, scope: !6040)
!6075 = !DILocation(line: 486, column: 9, scope: !6040)
!6076 = !DILocation(line: 486, column: 20, scope: !6040)
!6077 = !DILocation(line: 487, column: 3, scope: !6040)
!6078 = !DILocation(line: 492, column: 21, scope: !6040)
!6079 = !DILocation(line: 493, column: 3, scope: !6040)
!6080 = !DILocation(line: 495, column: 9, scope: !6040)
!6081 = !DILocation(line: 495, column: 20, scope: !6040)
!6082 = !DILocation(line: 496, column: 3, scope: !6040)
!6083 = !DILocation(line: 498, column: 2, scope: !6031)
!6084 = distinct !DISubprogram(name: "extract_specifier", scope: !2916, file: !2916, line: 513, type: !5793, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2912, retainedNodes: !6085)
!6085 = !{!6086, !6087, !6088, !6089}
!6086 = !DILocalVariable(name: "conv", arg: 1, scope: !6084, file: !2916, line: 513, type: !5449)
!6087 = !DILocalVariable(name: "sp", arg: 2, scope: !6084, file: !2916, line: 514, type: !105)
!6088 = !DILocalVariable(name: "unsupported", scope: !6084, file: !2916, line: 516, type: !422)
!6089 = !DILabel(scope: !6090, name: "int_conv", file: !2916, line: 526)
!6090 = distinct !DILexicalBlock(scope: !6084, file: !2916, line: 520, column: 27)
!6091 = !DILocation(line: 0, scope: !6084)
!6092 = !DILocation(line: 518, column: 20, scope: !6084)
!6093 = !DILocation(line: 518, column: 8, scope: !6084)
!6094 = !DILocation(line: 518, column: 18, scope: !6084)
!6095 = !DILocation(line: 520, column: 2, scope: !6084)
!6096 = !DILocation(line: 525, column: 3, scope: !6090)
!6097 = !DILocation(line: 0, scope: !6090)
!6098 = !DILocation(line: 526, column: 1, scope: !6090)
!6099 = !DILocation(line: 528, column: 24, scope: !6100)
!6100 = distinct !DILexicalBlock(scope: !6090, file: !2916, line: 528, column: 7)
!6101 = !DILocation(line: 528, column: 7, scope: !6090)
!6102 = !DILocation(line: 535, column: 23, scope: !6103)
!6103 = distinct !DILexicalBlock(scope: !6090, file: !2916, line: 535, column: 7)
!6104 = !DILocation(line: 535, column: 7, scope: !6090)
!6105 = !DILocation(line: 536, column: 36, scope: !6106)
!6106 = distinct !DILexicalBlock(scope: !6103, file: !2916, line: 535, column: 31)
!6107 = !DILocation(line: 537, column: 3, scope: !6106)
!6108 = !DILocation(line: 570, column: 9, scope: !6090)
!6109 = !DILocation(line: 570, column: 23, scope: !6090)
!6110 = !DILocation(line: 575, column: 4, scope: !6111)
!6111 = distinct !DILexicalBlock(scope: !6112, file: !2916, line: 573, column: 48)
!6112 = distinct !DILexicalBlock(scope: !6090, file: !2916, line: 573, column: 7)
!6113 = !DILocation(line: 603, column: 9, scope: !6090)
!6114 = !DILocation(line: 603, column: 23, scope: !6090)
!6115 = !DILocation(line: 605, column: 24, scope: !6116)
!6116 = distinct !DILexicalBlock(scope: !6090, file: !2916, line: 605, column: 7)
!6117 = !DILocation(line: 605, column: 7, scope: !6090)
!6118 = !DILocation(line: 612, column: 9, scope: !6090)
!6119 = !DILocation(line: 612, column: 23, scope: !6090)
!6120 = !DILocation(line: 619, column: 24, scope: !6121)
!6121 = distinct !DILexicalBlock(scope: !6090, file: !2916, line: 619, column: 7)
!6122 = !DILocation(line: 619, column: 7, scope: !6090)
!6123 = !DILocation(line: 625, column: 9, scope: !6090)
!6124 = !DILocation(line: 625, column: 17, scope: !6090)
!6125 = !DILocation(line: 626, column: 3, scope: !6090)
!6126 = !DILocation(line: 629, column: 20, scope: !6084)
!6127 = !DILocation(line: 629, column: 8, scope: !6084)
!6128 = !DILocation(line: 518, column: 23, scope: !6084)
!6129 = !DILocation(line: 631, column: 2, scope: !6084)
!6130 = distinct !DISubprogram(name: "extract_decimal", scope: !2916, file: !2916, line: 318, type: !6131, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2912, retainedNodes: !6133)
!6131 = !DISubroutineType(types: !6132)
!6132 = !{!439, !543}
!6133 = !{!6134, !6135, !6136}
!6134 = !DILocalVariable(name: "str", arg: 1, scope: !6130, file: !2916, line: 318, type: !543)
!6135 = !DILocalVariable(name: "sp", scope: !6130, file: !2916, line: 320, type: !105)
!6136 = !DILocalVariable(name: "val", scope: !6130, file: !2916, line: 321, type: !439)
!6137 = !DILocation(line: 0, scope: !6130)
!6138 = !DILocation(line: 320, column: 19, scope: !6130)
!6139 = !DILocation(line: 323, column: 37, scope: !6130)
!6140 = !DILocation(line: 323, column: 17, scope: !6130)
!6141 = !DILocation(line: 323, column: 9, scope: !6130)
!6142 = !DILocation(line: 323, column: 2, scope: !6130)
!6143 = !DILocation(line: 324, column: 13, scope: !6144)
!6144 = distinct !DILexicalBlock(scope: !6130, file: !2916, line: 323, column: 43)
!6145 = !DILocation(line: 324, column: 24, scope: !6144)
!6146 = !DILocation(line: 324, column: 19, scope: !6144)
!6147 = !DILocation(line: 324, column: 27, scope: !6144)
!6148 = distinct !{!6148, !6142, !6149}
!6149 = !DILocation(line: 325, column: 2, scope: !6130)
!6150 = !DILocation(line: 326, column: 7, scope: !6130)
!6151 = !DILocation(line: 327, column: 2, scope: !6130)
!6152 = distinct !DISubprogram(name: "isdigit", scope: !5932, file: !5932, line: 43, type: !563, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2912, retainedNodes: !6153)
!6153 = !{!6154}
!6154 = !DILocalVariable(name: "a", arg: 1, scope: !6152, file: !5932, line: 43, type: !108)
!6155 = !DILocation(line: 0, scope: !6152)
!6156 = !DILocation(line: 45, column: 29, scope: !6152)
!6157 = !DILocation(line: 45, column: 45, scope: !6152)
!6158 = !DILocation(line: 45, column: 2, scope: !6152)
!6159 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !6160, file: !6160, line: 9, type: !3472, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2946, retainedNodes: !437)
!6160 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sensor_batch_processing")
!6161 = !DILocation(line: 11, column: 1, scope: !6159)
!6162 = !{i64 2147565343, i64 2147565386, i64 2147565426}
!6163 = !DILocation(line: 12, column: 1, scope: !6159)
!6164 = !{i64 2147569570, i64 2147569613, i64 2147569653}
!6165 = !DILocation(line: 13, column: 1, scope: !6159)
!6166 = !{i64 2147569779, i64 2147569822, i64 2147569862}
!6167 = !DILocation(line: 14, column: 1, scope: !6159)
!6168 = !{i64 2147569948, i64 2147569991, i64 2147570031}
!6169 = !DILocation(line: 15, column: 1, scope: !6159)
!6170 = !{i64 2147570111, i64 2147570154, i64 2147570194}
!6171 = !DILocation(line: 16, column: 1, scope: !6159)
!6172 = !{i64 2147570295, i64 2147570338, i64 2147570378}
!6173 = !DILocation(line: 17, column: 1, scope: !6159)
!6174 = !{i64 2147570474, i64 2147570517, i64 2147570557}
!6175 = !DILocation(line: 18, column: 1, scope: !6159)
!6176 = !{i64 2147570716, i64 2147570759, i64 2147570799}
!6177 = !DILocation(line: 19, column: 1, scope: !6159)
!6178 = !{i64 2147570951, i64 2147570994, i64 2147571034}
!6179 = !DILocation(line: 20, column: 1, scope: !6159)
!6180 = !{i64 2147571137, i64 2147571180, i64 2147571220}
!6181 = !DILocation(line: 21, column: 1, scope: !6159)
!6182 = !{i64 2147571353, i64 2147571396, i64 2147571436}
!6183 = !DILocation(line: 22, column: 1, scope: !6159)
!6184 = !{i64 2147571556, i64 2147571599, i64 2147571639}
!6185 = !DILocation(line: 23, column: 1, scope: !6159)
!6186 = !{i64 2147571759, i64 2147571802, i64 2147571842}
!6187 = !DILocation(line: 24, column: 1, scope: !6159)
!6188 = !{i64 2147571934, i64 2147571977, i64 2147572017}
!6189 = !DILocation(line: 25, column: 1, scope: !6159)
!6190 = !{i64 2147572142, i64 2147572185, i64 2147572225}
!6191 = !DILocation(line: 26, column: 1, scope: !6159)
!6192 = !{i64 2147572346, i64 2147572389, i64 2147572429}
!6193 = !DILocation(line: 27, column: 1, scope: !6159)
!6194 = !{i64 2147572539, i64 2147572582, i64 2147572622}
!6195 = !DILocation(line: 28, column: 1, scope: !6159)
!6196 = !{i64 2147572741, i64 2147572784, i64 2147572824}
!6197 = !DILocation(line: 29, column: 1, scope: !6159)
!6198 = !{i64 2147572940, i64 2147572983, i64 2147573023}
!6199 = !DILocation(line: 30, column: 1, scope: !6159)
!6200 = !{i64 2147573167, i64 2147573210, i64 2147573250}
!6201 = !DILocation(line: 31, column: 1, scope: !6159)
!6202 = !{i64 2147573369, i64 2147573412, i64 2147573452}
!6203 = !DILocation(line: 32, column: 1, scope: !6159)
!6204 = !{i64 2147573584, i64 2147573627, i64 2147573667}
!6205 = !DILocation(line: 33, column: 1, scope: !6159)
!6206 = !{i64 2147573756, i64 2147573799, i64 2147573839}
!6207 = !DILocation(line: 34, column: 1, scope: !6159)
!6208 = !{i64 2147573958, i64 2147574001, i64 2147574041}
!6209 = !DILocation(line: 35, column: 1, scope: !6159)
!6210 = !{i64 2147574184, i64 2147574227, i64 2147574267}
!6211 = !DILocation(line: 36, column: 1, scope: !6159)
!6212 = !{i64 2147574383, i64 2147574426, i64 2147574466}
!6213 = !DILocation(line: 37, column: 1, scope: !6159)
!6214 = !{i64 2147574558, i64 2147574601, i64 2147574641}
!6215 = !DILocation(line: 38, column: 1, scope: !6159)
!6216 = !{i64 2147574811, i64 2147574854, i64 2147574894}
!6217 = !DILocation(line: 39, column: 1, scope: !6159)
!6218 = !{i64 2147575052, i64 2147575095, i64 2147575135}
!6219 = !DILocation(line: 40, column: 1, scope: !6159)
!6220 = !{i64 2147575287, i64 2147575330, i64 2147575370}
!6221 = !DILocation(line: 41, column: 1, scope: !6159)
!6222 = !{i64 2147575519, i64 2147575562, i64 2147575602}
!6223 = !DILocation(line: 42, column: 1, scope: !6159)
!6224 = !{i64 2147575745, i64 2147575788, i64 2147575828}
!6225 = !DILocation(line: 43, column: 1, scope: !6159)
!6226 = !{i64 2147575971, i64 2147576014, i64 2147576054}
!6227 = !DILocation(line: 44, column: 1, scope: !6159)
!6228 = !{i64 2147576197, i64 2147576240, i64 2147576280}
!6229 = !DILocation(line: 45, column: 1, scope: !6159)
!6230 = !{i64 2147576432, i64 2147576475, i64 2147576515}
!6231 = !DILocation(line: 46, column: 1, scope: !6159)
!6232 = !{i64 2147576676, i64 2147576719, i64 2147576759}
!6233 = !DILocation(line: 47, column: 1, scope: !6159)
!6234 = !{i64 2147576923, i64 2147576966, i64 2147577006}
!6235 = !DILocation(line: 48, column: 1, scope: !6159)
!6236 = !{i64 2147577155, i64 2147577198, i64 2147577238}
!6237 = !DILocation(line: 49, column: 1, scope: !6159)
!6238 = !{i64 2147577399, i64 2147577442, i64 2147577482}
!6239 = !DILocation(line: 50, column: 1, scope: !6159)
!6240 = !{i64 2147577637, i64 2147577680, i64 2147577720}
!6241 = !DILocation(line: 51, column: 1, scope: !6159)
!6242 = !{i64 2147577911, i64 2147577954, i64 2147577994}
!6243 = !DILocation(line: 52, column: 1, scope: !6159)
!6244 = !{i64 2147578149, i64 2147578192, i64 2147578232}
!6245 = !DILocation(line: 53, column: 1, scope: !6159)
!6246 = !{i64 2147582463, i64 2147582506, i64 2147582546}
!6247 = !DILocation(line: 54, column: 1, scope: !6159)
!6248 = !{i64 2147582707, i64 2147582750, i64 2147582790}
!6249 = !DILocation(line: 55, column: 1, scope: !6159)
!6250 = !{i64 2147582942, i64 2147582985, i64 2147583025}
!6251 = !DILocation(line: 56, column: 1, scope: !6159)
!6252 = !{i64 2147583192, i64 2147583235, i64 2147583275}
!6253 = !DILocation(line: 57, column: 1, scope: !6159)
!6254 = !{i64 2147583439, i64 2147583482, i64 2147583522}
!6255 = !DILocation(line: 58, column: 1, scope: !6159)
!6256 = !{i64 2147583674, i64 2147583717, i64 2147583757}
!6257 = !DILocation(line: 59, column: 1, scope: !6159)
!6258 = !{i64 2147583909, i64 2147583952, i64 2147583992}
!6259 = !DILocation(line: 60, column: 1, scope: !6159)
!6260 = !{i64 2147584144, i64 2147584187, i64 2147584227}
!6261 = !DILocation(line: 61, column: 1, scope: !6159)
!6262 = !{i64 2147584379, i64 2147584422, i64 2147584462}
!6263 = !DILocation(line: 62, column: 1, scope: !6159)
!6264 = !{i64 2147584623, i64 2147584666, i64 2147584706}
!6265 = !DILocation(line: 63, column: 1, scope: !6159)
!6266 = !{i64 2147584861, i64 2147584904, i64 2147584944}
!6267 = !DILocation(line: 64, column: 1, scope: !6159)
!6268 = !{i64 2147585102, i64 2147585145, i64 2147585185}
!6269 = !DILocation(line: 65, column: 1, scope: !6159)
!6270 = !{i64 2147585382, i64 2147585425, i64 2147585465}
!6271 = !DILocation(line: 66, column: 1, scope: !6159)
!6272 = !{i64 2147585641, i64 2147585684, i64 2147585724}
!6273 = !DILocation(line: 67, column: 1, scope: !6159)
!6274 = !{i64 2147585879, i64 2147585922, i64 2147585962}
!6275 = !DILocation(line: 68, column: 1, scope: !6159)
!6276 = !{i64 2147586108, i64 2147586151, i64 2147586191}
!6277 = !DILocation(line: 69, column: 1, scope: !6159)
!6278 = !{i64 2147586337, i64 2147586380, i64 2147586420}
!6279 = !DILocation(line: 70, column: 1, scope: !6159)
!6280 = !{i64 2147586545, i64 2147586588, i64 2147586628}
!6281 = !DILocation(line: 71, column: 1, scope: !6159)
!6282 = !{i64 2147586756, i64 2147586799, i64 2147586839}
!6283 = !DILocation(line: 72, column: 1, scope: !6159)
!6284 = !{i64 2147586991, i64 2147587034, i64 2147587074}
!6285 = !DILocation(line: 73, column: 1, scope: !6159)
!6286 = !{i64 2147587220, i64 2147587263, i64 2147587303}
!6287 = !DILocation(line: 74, column: 1, scope: !6159)
!6288 = !{i64 2147587437, i64 2147587480, i64 2147587520}
!6289 = !DILocation(line: 75, column: 1, scope: !6159)
!6290 = !{i64 2147587666, i64 2147587709, i64 2147587749}
!6291 = !DILocation(line: 76, column: 1, scope: !6159)
!6292 = !{i64 2147587904, i64 2147587947, i64 2147587987}
!6293 = !DILocation(line: 77, column: 1, scope: !6159)
!6294 = !{i64 2147588136, i64 2147588179, i64 2147588219}
!6295 = !DILocation(line: 78, column: 1, scope: !6159)
!6296 = !{i64 2147588362, i64 2147588405, i64 2147588445}
!6297 = !DILocation(line: 79, column: 1, scope: !6159)
!6298 = !{i64 2147588579, i64 2147588622, i64 2147588662}
!6299 = !DILocation(line: 80, column: 1, scope: !6159)
!6300 = !{i64 2147588811, i64 2147588854, i64 2147588894}
!6301 = !DILocation(line: 81, column: 1, scope: !6159)
!6302 = !{i64 2147589037, i64 2147589080, i64 2147589120}
!6303 = !DILocation(line: 82, column: 1, scope: !6159)
!6304 = !{i64 2147589251, i64 2147589294, i64 2147589334}
!6305 = !DILocation(line: 83, column: 1, scope: !6159)
!6306 = !{i64 2147589471, i64 2147589514, i64 2147589554}
!6307 = !DILocation(line: 84, column: 1, scope: !6159)
!6308 = !{i64 2147589703, i64 2147589746, i64 2147589786}
!6309 = !DILocation(line: 85, column: 1, scope: !6159)
!6310 = !{i64 2147589911, i64 2147589954, i64 2147589994}
!6311 = !DILocation(line: 86, column: 1, scope: !6159)
!6312 = !{i64 2147590116, i64 2147590159, i64 2147590199}
!6313 = !DILocation(line: 87, column: 1, scope: !6159)
!6314 = !{i64 2147590333, i64 2147590376, i64 2147590416}
!6315 = !DILocation(line: 88, column: 1, scope: !6159)
!6316 = !{i64 2147594608, i64 2147594651, i64 2147594691}
!6317 = !DILocation(line: 89, column: 1, scope: !6159)
!6318 = !{i64 2147594834, i64 2147594877, i64 2147594917}
!6319 = !DILocation(line: 90, column: 1, scope: !6159)
!6320 = !{i64 2147595054, i64 2147595097, i64 2147595137}
!6321 = !DILocation(line: 91, column: 1, scope: !6159)
!6322 = !{i64 2147595259, i64 2147595302, i64 2147595342}
!6323 = !DILocation(line: 92, column: 1, scope: !6159)
!6324 = !{i64 2147595491, i64 2147595534, i64 2147595574}
!6325 = !DILocation(line: 93, column: 1, scope: !6159)
!6326 = !{i64 2147595726, i64 2147595769, i64 2147595809}
!6327 = !DILocation(line: 94, column: 1, scope: !6159)
!6328 = !{i64 2147595976, i64 2147596019, i64 2147596059}
!6329 = !DILocation(line: 95, column: 1, scope: !6159)
!6330 = !{i64 2147596226, i64 2147596269, i64 2147596309}
!6331 = !DILocation(line: 96, column: 1, scope: !6159)
!6332 = !{i64 2147596464, i64 2147596507, i64 2147596547}
!6333 = !DILocation(line: 97, column: 1, scope: !6159)
!6334 = !{i64 2147596675, i64 2147596718, i64 2147596758}
!6335 = !DILocation(line: 98, column: 1, scope: !6159)
!6336 = !{i64 2147596892, i64 2147596935, i64 2147596975}
!6337 = !DILocation(line: 99, column: 1, scope: !6159)
!6338 = !{i64 2147597088, i64 2147597131, i64 2147597171}
!6339 = !DILocation(line: 100, column: 1, scope: !6159)
!6340 = !{i64 2147597290, i64 2147597333, i64 2147597373}
!6341 = !DILocation(line: 101, column: 1, scope: !6159)
!6342 = !{i64 2147597483, i64 2147597526, i64 2147597566}
!6343 = !DILocation(line: 102, column: 1, scope: !6159)
!6344 = !{i64 2147597691, i64 2147597734, i64 2147597774}
!6345 = !DILocation(line: 103, column: 1, scope: !6159)
!6346 = !{i64 2147597887, i64 2147597930, i64 2147597970}
!6347 = !DILocation(line: 104, column: 1, scope: !6159)
!6348 = !{i64 2147598119, i64 2147598162, i64 2147598202}
!6349 = !DILocation(line: 105, column: 1, scope: !6159)
!6350 = !{i64 2147598330, i64 2147598373, i64 2147598413}
!6351 = !DILocation(line: 106, column: 1, scope: !6159)
!6352 = !{i64 2147598529, i64 2147598572, i64 2147598612}
!6353 = !DILocation(line: 107, column: 1, scope: !6159)
!6354 = !{i64 2147598704, i64 2147598747, i64 2147598787}
!6355 = !DILocation(line: 108, column: 1, scope: !6159)
!6356 = !{i64 2147598888, i64 2147598931, i64 2147598971}
!6357 = !DILocation(line: 109, column: 1, scope: !6159)
!6358 = !{i64 2147599090, i64 2147599133, i64 2147599173}
!6359 = !DILocation(line: 110, column: 1, scope: !6159)
!6360 = !{i64 2147599289, i64 2147599332, i64 2147599372}
!6361 = !DILocation(line: 111, column: 1, scope: !6159)
!6362 = !{i64 2147599494, i64 2147599537, i64 2147599577}
!6363 = !DILocation(line: 112, column: 1, scope: !6159)
!6364 = !{i64 2147599687, i64 2147599730, i64 2147599770}
!6365 = !DILocation(line: 113, column: 1, scope: !6159)
!6366 = !{i64 2147599853, i64 2147599896, i64 2147599936}
!6367 = !DILocation(line: 114, column: 1, scope: !6159)
!6368 = !{i64 2147600037, i64 2147600080, i64 2147600120}
!6369 = !DILocation(line: 115, column: 1, scope: !6159)
!6370 = !{i64 2147600227, i64 2147600270, i64 2147600310}
!6371 = !DILocation(line: 116, column: 1, scope: !6159)
!6372 = !{i64 2147600411, i64 2147600454, i64 2147600494}
!6373 = !DILocation(line: 117, column: 1, scope: !6159)
!6374 = !{i64 2147600625, i64 2147600668, i64 2147600708}
!6375 = !DILocation(line: 118, column: 1, scope: !6159)
!6376 = !{i64 2147600836, i64 2147600879, i64 2147600919}
!6377 = !DILocation(line: 119, column: 1, scope: !6159)
!6378 = !{i64 2147601059, i64 2147601102, i64 2147601142}
!6379 = !DILocation(line: 120, column: 1, scope: !6159)
!6380 = !{i64 2147601243, i64 2147601286, i64 2147601326}
!6381 = !DILocation(line: 121, column: 1, scope: !6159)
!6382 = !{i64 2147601457, i64 2147601500, i64 2147601540}
!6383 = !DILocation(line: 122, column: 1, scope: !6159)
!6384 = !{i64 2147601623, i64 2147601666, i64 2147601706}
!6385 = !DILocation(line: 123, column: 1, scope: !6159)
!6386 = !{i64 2147601804, i64 2147601847, i64 2147601887}
!6387 = !DILocation(line: 124, column: 1, scope: !6159)
!6388 = !{i64 2147601997, i64 2147602040, i64 2147602080}
!6389 = !DILocation(line: 125, column: 1, scope: !6159)
!6390 = !{i64 2147602223, i64 2147602266, i64 2147602306}
!6391 = !DILocation(line: 126, column: 1, scope: !6159)
!6392 = !{i64 2147602437, i64 2147602480, i64 2147602520}
!6393 = !DILocation(line: 127, column: 1, scope: !6159)
!6394 = !{i64 2147602663, i64 2147602706, i64 2147602746}
!6395 = !DILocation(line: 128, column: 1, scope: !6159)
!6396 = !{i64 2147602880, i64 2147602923, i64 2147602963}
!6397 = !DILocation(line: 129, column: 1, scope: !6159)
!6398 = !{i64 2147603157, i64 2147603200, i64 2147603240}
!6399 = !DILocation(line: 130, column: 1, scope: !6159)
!6400 = !{i64 2147603383, i64 2147603426, i64 2147603466}
!6401 = !DILocation(line: 131, column: 1, scope: !6159)
!6402 = !{i64 2147607652, i64 2147607695, i64 2147607735}
!6403 = !DILocation(line: 132, column: 1, scope: !6159)
!6404 = !{i64 2147607848, i64 2147607891, i64 2147607931}
!6405 = !DILocation(line: 133, column: 1, scope: !6159)
!6406 = !{i64 2147608113, i64 2147608156, i64 2147608196}
!6407 = !DILocation(line: 134, column: 1, scope: !6159)
!6408 = !{i64 2147608327, i64 2147608370, i64 2147608410}
!6409 = !DILocation(line: 135, column: 1, scope: !6159)
!6410 = !{i64 2147608502, i64 2147608545, i64 2147608585}
!6411 = !DILocation(line: 136, column: 1, scope: !6159)
!6412 = !{i64 2147608756, i64 2147608799, i64 2147608839}
!6413 = !DILocation(line: 137, column: 1, scope: !6159)
!6414 = !{i64 2147608955, i64 2147608998, i64 2147609038}
!6415 = !DILocation(line: 138, column: 1, scope: !6159)
!6416 = !{i64 2147609197, i64 2147609240, i64 2147609280}
!6417 = !DILocation(line: 139, column: 1, scope: !6159)
!6418 = !{i64 2147609360, i64 2147609403, i64 2147609443}
!6419 = !DILocation(line: 140, column: 1, scope: !6159)
!6420 = !{i64 2147609547, i64 2147609590, i64 2147609630}
!6421 = !DILocation(line: 141, column: 1, scope: !6159)
!6422 = !{i64 2147609755, i64 2147609798, i64 2147609838}
!6423 = !DILocation(line: 142, column: 1, scope: !6159)
!6424 = !{i64 2147609951, i64 2147609994, i64 2147610034}
!6425 = !DILocation(line: 143, column: 1, scope: !6159)
!6426 = !{i64 2147610144, i64 2147610187, i64 2147610227}
!6427 = !DILocation(line: 144, column: 1, scope: !6159)
!6428 = !{i64 2147610327, i64 2147610370, i64 2147610410}
!6429 = !DILocation(line: 145, column: 1, scope: !6159)
!6430 = !{i64 2147610541, i64 2147610584, i64 2147610624}
!6431 = !DILocation(line: 146, column: 1, scope: !6159)
!6432 = !{i64 2147610752, i64 2147610795, i64 2147610835}
!6433 = !DILocation(line: 147, column: 1, scope: !6159)
!6434 = !{i64 2147610972, i64 2147611015, i64 2147611055}
!6435 = !DILocation(line: 148, column: 1, scope: !6159)
!6436 = !{i64 2147611179, i64 2147611222, i64 2147611262}
!6437 = !DILocation(line: 149, column: 1, scope: !6159)
!6438 = !{i64 2147611452, i64 2147611495, i64 2147611535}
!6439 = !DILocation(line: 150, column: 1, scope: !6159)
!6440 = !{i64 2147611700, i64 2147611743, i64 2147611783}
!6441 = !DILocation(line: 151, column: 1, scope: !6159)
!6442 = !{i64 2147611899, i64 2147611942, i64 2147611982}
!6443 = !DILocation(line: 152, column: 1, scope: !6159)
!6444 = !{i64 2147612134, i64 2147612177, i64 2147612217}
!6445 = !DILocation(line: 153, column: 1, scope: !6159)
!6446 = !{i64 2147612384, i64 2147612427, i64 2147612467}
!6447 = !DILocation(line: 154, column: 1, scope: !6159)
!6448 = !{i64 2147612586, i64 2147612629, i64 2147612669}
!6449 = !DILocation(line: 155, column: 1, scope: !6159)
!6450 = !{i64 2147612809, i64 2147612852, i64 2147612892}
!6451 = !DILocation(line: 156, column: 1, scope: !6159)
!6452 = !{i64 2147613023, i64 2147613066, i64 2147613106}
!6453 = !DILocation(line: 157, column: 1, scope: !6159)
!6454 = !{i64 2147613267, i64 2147613310, i64 2147613350}
!6455 = !DILocation(line: 158, column: 1, scope: !6159)
!6456 = !{i64 2147613496, i64 2147613539, i64 2147613579}
!6457 = !DILocation(line: 159, column: 1, scope: !6159)
!6458 = !{i64 2147613725, i64 2147613768, i64 2147613808}
!6459 = !DILocation(line: 160, column: 1, scope: !6159)
!6460 = !{i64 2147613933, i64 2147613976, i64 2147614016}
!6461 = !DILocation(line: 161, column: 1, scope: !6159)
!6462 = !{i64 2147614171, i64 2147614214, i64 2147614254}
!6463 = !DILocation(line: 162, column: 1, scope: !6159)
!6464 = !{i64 2147614397, i64 2147614440, i64 2147614480}
!6465 = !DILocation(line: 163, column: 1, scope: !6159)
!6466 = !{i64 2147614656, i64 2147614699, i64 2147614739}
!6467 = !DILocation(line: 164, column: 1, scope: !6159)
!6468 = !{i64 2147614876, i64 2147614919, i64 2147614959}
!6469 = !DILocation(line: 165, column: 1, scope: !6159)
!6470 = !{i64 2147615108, i64 2147615151, i64 2147615191}
!6471 = !DILocation(line: 166, column: 1, scope: !6159)
!6472 = !{i64 2147615349, i64 2147615392, i64 2147615432}
!6473 = !DILocation(line: 167, column: 1, scope: !6159)
!6474 = !{i64 2147615590, i64 2147615633, i64 2147615673}
!6475 = !DILocation(line: 168, column: 1, scope: !6159)
!6476 = !{i64 2147615813, i64 2147615856, i64 2147615896}
!6477 = !DILocation(line: 169, column: 1, scope: !6159)
!6478 = !{i64 2147616030, i64 2147616073, i64 2147616113}
!6479 = !DILocation(line: 170, column: 1, scope: !6159)
!6480 = !{i64 2147620332, i64 2147620375, i64 2147620415}
!6481 = !DILocation(line: 171, column: 1, scope: !6159)
!6482 = !{i64 2147620519, i64 2147620562, i64 2147620602}
!6483 = !DILocation(line: 172, column: 1, scope: !6159)
!6484 = !{i64 2147620706, i64 2147620749, i64 2147620789}
!6485 = !DILocation(line: 173, column: 1, scope: !6159)
!6486 = !{i64 2147620869, i64 2147620912, i64 2147620952}
!6487 = !DILocation(line: 174, column: 1, scope: !6159)
!6488 = !{i64 2147621074, i64 2147621117, i64 2147621157}
!6489 = !DILocation(line: 175, column: 1, scope: !6159)
!6490 = !{i64 2147621267, i64 2147621310, i64 2147621350}
!6491 = !DILocation(line: 176, column: 1, scope: !6159)
!6492 = !{i64 2147621526, i64 2147621569, i64 2147621609}
!6493 = !DILocation(line: 177, column: 1, scope: !6159)
!6494 = !{i64 2147621749, i64 2147621792, i64 2147621832}
!6495 = !DILocation(line: 178, column: 1, scope: !6159)
!6496 = !{i64 2147621978, i64 2147622021, i64 2147622061}
!6497 = !DILocation(line: 179, column: 1, scope: !6159)
!6498 = !{i64 2147622192, i64 2147622235, i64 2147622275}
!6499 = !DILocation(line: 180, column: 1, scope: !6159)
!6500 = !{i64 2147622394, i64 2147622437, i64 2147622477}
!6501 = !DILocation(line: 181, column: 1, scope: !6159)
!6502 = !{i64 2147622590, i64 2147622633, i64 2147622673}
!6503 = !DILocation(line: 182, column: 1, scope: !6159)
!6504 = !{i64 2147622802, i64 2147622845, i64 2147622885}
!6505 = !DILocation(line: 183, column: 1, scope: !6159)
!6506 = !{i64 2147623023, i64 2147623066, i64 2147623106}
!6507 = !DILocation(line: 184, column: 1, scope: !6159)
!6508 = !{i64 2147623237, i64 2147623280, i64 2147623320}
!6509 = !DILocation(line: 185, column: 1, scope: !6159)
!6510 = !{i64 2147623427, i64 2147623470, i64 2147623510}
!6511 = !DILocation(line: 186, column: 1, scope: !6159)
!6512 = !{i64 2147623626, i64 2147623669, i64 2147623709}
!6513 = !DILocation(line: 187, column: 1, scope: !6159)
!6514 = !{i64 2147623831, i64 2147623874, i64 2147623914}
!6515 = !DILocation(line: 188, column: 1, scope: !6159)
!6516 = !{i64 2147624051, i64 2147624094, i64 2147624134}
!6517 = !DILocation(line: 189, column: 1, scope: !6159)
!6518 = !{i64 2147624252, i64 2147624295, i64 2147624335}
!6519 = !DILocation(line: 190, column: 1, scope: !6159)
!6520 = !{i64 2147624451, i64 2147624494, i64 2147624534}
!6521 = !DILocation(line: 191, column: 1, scope: !6159)
!6522 = !{i64 2147624656, i64 2147624699, i64 2147624739}
!6523 = !DILocation(line: 192, column: 1, scope: !6159)
!6524 = !{i64 2147624825, i64 2147624868, i64 2147624908}
!6525 = !DILocation(line: 193, column: 1, scope: !6159)
!6526 = !{i64 2147625009, i64 2147625052, i64 2147625092}
!6527 = !DILocation(line: 194, column: 1, scope: !6159)
!6528 = !{i64 2147625193, i64 2147625236, i64 2147625276}
!6529 = !DILocation(line: 195, column: 1, scope: !6159)
!6530 = !{i64 2147625380, i64 2147625423, i64 2147625463}
!6531 = !DILocation(line: 196, column: 1, scope: !6159)
!6532 = !{i64 2147625564, i64 2147625607, i64 2147625647}
!6533 = !DILocation(line: 197, column: 1, scope: !6159)
!6534 = !{i64 2147625802, i64 2147625845, i64 2147625885}
!6535 = !DILocation(line: 198, column: 1, scope: !6159)
!6536 = !{i64 2147626032, i64 2147626075, i64 2147626115}
!6537 = !DILocation(line: 199, column: 1, scope: !6159)
!6538 = !{i64 2147626261, i64 2147626304, i64 2147626344}
!6539 = !DILocation(line: 200, column: 1, scope: !6159)
!6540 = !{i64 2147626448, i64 2147626491, i64 2147626531}
!6541 = !DILocation(line: 201, column: 1, scope: !6159)
!6542 = !{i64 2147626644, i64 2147626687, i64 2147626727}
!6543 = !DILocation(line: 202, column: 1, scope: !6159)
!6544 = !{i64 2147626852, i64 2147626895, i64 2147626935}
!6545 = !DILocation(line: 203, column: 1, scope: !6159)
!6546 = !{i64 2147627064, i64 2147627107, i64 2147627147}
!6547 = !DILocation(line: 204, column: 1, scope: !6159)
!6548 = !{i64 2147627263, i64 2147627306, i64 2147627346}
!6549 = !DILocation(line: 205, column: 1, scope: !6159)
!6550 = !{i64 2147627501, i64 2147627544, i64 2147627584}
!6551 = !DILocation(line: 206, column: 1, scope: !6159)
!6552 = !{i64 2147627697, i64 2147627740, i64 2147627780}
!6553 = !DILocation(line: 207, column: 1, scope: !6159)
!6554 = !{i64 2147627899, i64 2147627942, i64 2147627982}
!6555 = !DILocation(line: 208, column: 1, scope: !6159)
!6556 = !{i64 2147628092, i64 2147628135, i64 2147628175}
!6557 = !DILocation(line: 209, column: 1, scope: !6159)
!6558 = !{i64 2147628326, i64 2147628369, i64 2147628409}
!6559 = !DILocation(line: 210, column: 1, scope: !6159)
!6560 = !{i64 2147628489, i64 2147628532, i64 2147628572}
!6561 = !DILocation(line: 211, column: 1, scope: !6159)
!6562 = !{i64 2147628728, i64 2147628771, i64 2147628811}
!6563 = !DILocation(line: 212, column: 1, scope: !6159)
!6564 = !{i64 2147628967, i64 2147629010, i64 2147629050}
!6565 = !DILocation(line: 213, column: 1, scope: !6159)
!6566 = !{i64 2147629203, i64 2147629246, i64 2147629286}
!6567 = !DILocation(line: 214, column: 1, scope: !6159)
!6568 = !{i64 2147633494, i64 2147633537, i64 2147633577}
!6569 = !DILocation(line: 215, column: 1, scope: !6159)
!6570 = !{i64 2147633681, i64 2147633724, i64 2147633764}
!6571 = !DILocation(line: 216, column: 1, scope: !6159)
!6572 = !{i64 2147633880, i64 2147633923, i64 2147633963}
!6573 = !DILocation(line: 217, column: 1, scope: !6159)
!6574 = !{i64 2147634151, i64 2147634194, i64 2147634234}
!6575 = !DILocation(line: 218, column: 1, scope: !6159)
!6576 = !{i64 2147634326, i64 2147634369, i64 2147634409}
!6577 = !DILocation(line: 219, column: 1, scope: !6159)
!6578 = !{i64 2147634560, i64 2147634603, i64 2147634643}
!6579 = !DILocation(line: 220, column: 1, scope: !6159)
!6580 = !{i64 2147634768, i64 2147634811, i64 2147634851}
!6581 = !DILocation(line: 221, column: 1, scope: !6159)
!6582 = !{i64 2147634986, i64 2147635029, i64 2147635069}
!6583 = !DILocation(line: 222, column: 1, scope: !6159)
!6584 = !{i64 2147635176, i64 2147635219, i64 2147635259}
!6585 = !DILocation(line: 223, column: 1, scope: !6159)
!6586 = !{i64 2147635408, i64 2147635451, i64 2147635491}
!6587 = !DILocation(line: 224, column: 1, scope: !6159)
!6588 = !{i64 2147635628, i64 2147635671, i64 2147635711}
!6589 = !DILocation(line: 225, column: 1, scope: !6159)
!6590 = !{i64 2147635824, i64 2147635867, i64 2147635907}
!6591 = !DILocation(line: 226, column: 1, scope: !6159)
!6592 = !{i64 2147636030, i64 2147636073, i64 2147636113}
!6593 = !DILocation(line: 227, column: 1, scope: !6159)
!6594 = !{i64 2147636235, i64 2147636278, i64 2147636318}
!6595 = !DILocation(line: 228, column: 1, scope: !6159)
!6596 = !{i64 2147636449, i64 2147636492, i64 2147636532}
!6597 = !DILocation(line: 229, column: 1, scope: !6159)
!6598 = !{i64 2147636675, i64 2147636718, i64 2147636758}
!6599 = !DILocation(line: 230, column: 1, scope: !6159)
!6600 = !{i64 2147636883, i64 2147636926, i64 2147636966}
!6601 = !DILocation(line: 231, column: 1, scope: !6159)
!6602 = !{i64 2147637079, i64 2147637122, i64 2147637162}
!6603 = !DILocation(line: 232, column: 1, scope: !6159)
!6604 = !{i64 2147637311, i64 2147637354, i64 2147637394}
!6605 = !DILocation(line: 233, column: 1, scope: !6159)
!6606 = !{i64 2147637495, i64 2147637538, i64 2147637578}
!6607 = !DILocation(line: 234, column: 1, scope: !6159)
!6608 = !{i64 2147637704, i64 2147637747, i64 2147637787}
!6609 = !DILocation(line: 235, column: 1, scope: !6159)
!6610 = !{i64 2147637912, i64 2147637955, i64 2147637995}
!6611 = !DILocation(line: 236, column: 1, scope: !6159)
!6612 = !{i64 2147638108, i64 2147638151, i64 2147638191}
!6613 = !DILocation(line: 237, column: 1, scope: !6159)
!6614 = !{i64 2147638292, i64 2147638335, i64 2147638375}
!6615 = !DILocation(line: 238, column: 1, scope: !6159)
!6616 = !{i64 2147638518, i64 2147638561, i64 2147638601}
!6617 = !DILocation(line: 239, column: 1, scope: !6159)
!6618 = !{i64 2147638744, i64 2147638787, i64 2147638827}
!6619 = !DILocation(line: 240, column: 1, scope: !6159)
!6620 = !{i64 2147638970, i64 2147639013, i64 2147639053}
!6621 = !DILocation(line: 241, column: 1, scope: !6159)
!6622 = !{i64 2147639196, i64 2147639239, i64 2147639279}
!6623 = !DILocation(line: 242, column: 1, scope: !6159)
!6624 = !{i64 2147639422, i64 2147639465, i64 2147639505}
!6625 = !DILocation(line: 243, column: 1, scope: !6159)
!6626 = !{i64 2147639654, i64 2147639697, i64 2147639737}
!6627 = !DILocation(line: 244, column: 1, scope: !6159)
!6628 = !{i64 2147639892, i64 2147639935, i64 2147639975}
!6629 = !DILocation(line: 245, column: 1, scope: !6159)
!6630 = !{i64 2147640112, i64 2147640155, i64 2147640195}
!6631 = !DILocation(line: 246, column: 1, scope: !6159)
!6632 = !{i64 2147640356, i64 2147640399, i64 2147640439}
!6633 = !DILocation(line: 247, column: 1, scope: !6159)
!6634 = !{i64 2147640597, i64 2147640640, i64 2147640680}
!6635 = !DILocation(line: 248, column: 1, scope: !6159)
!6636 = !{i64 2147640832, i64 2147640875, i64 2147640915}
!6637 = !DILocation(line: 249, column: 1, scope: !6159)
!6638 = !{i64 2147641064, i64 2147641107, i64 2147641147}
!6639 = !DILocation(line: 250, column: 1, scope: !6159)
!6640 = !{i64 2147641266, i64 2147641309, i64 2147641349}
!6641 = !DILocation(line: 251, column: 1, scope: !6159)
!6642 = !{i64 2147641516, i64 2147641559, i64 2147641599}
!6643 = !DILocation(line: 252, column: 1, scope: !6159)
!6644 = !{i64 2147641754, i64 2147641797, i64 2147641837}
!6645 = !DILocation(line: 253, column: 1, scope: !6159)
!6646 = !{i64 2147641962, i64 2147642005, i64 2147642045}
!6647 = !DILocation(line: 254, column: 1, scope: !6159)
!6648 = !{i64 2147642158, i64 2147642201, i64 2147642241}
!6649 = !DILocation(line: 255, column: 1, scope: !6159)
!6650 = !{i64 2147646403, i64 2147646446, i64 2147646486}
!6651 = !DILocation(line: 256, column: 1, scope: !6159)
!6652 = !{i64 2147646620, i64 2147646663, i64 2147646703}
!6653 = !DILocation(line: 257, column: 1, scope: !6159)
!6654 = !{i64 2147646825, i64 2147646868, i64 2147646908}
!6655 = !DILocation(line: 258, column: 1, scope: !6159)
!6656 = !{i64 2147647060, i64 2147647103, i64 2147647143}
!6657 = !DILocation(line: 259, column: 1, scope: !6159)
!6658 = !{i64 2147647283, i64 2147647326, i64 2147647366}
!6659 = !DILocation(line: 260, column: 1, scope: !6159)
!6660 = !{i64 2147647507, i64 2147647550, i64 2147647590}
!6661 = !DILocation(line: 261, column: 1, scope: !6159)
!6662 = !{i64 2147647745, i64 2147647788, i64 2147647828}
!6663 = !DILocation(line: 262, column: 1, scope: !6159)
!6664 = !{i64 2147647983, i64 2147648026, i64 2147648066}
!6665 = !DILocation(line: 263, column: 1, scope: !6159)
!6666 = !{i64 2147648200, i64 2147648243, i64 2147648283}
!6667 = !DILocation(line: 264, column: 1, scope: !6159)
!6668 = !{i64 2147648405, i64 2147648448, i64 2147648488}
!6669 = !DILocation(line: 265, column: 1, scope: !6159)
!6670 = !{i64 2147648598, i64 2147648641, i64 2147648681}
!6671 = !DILocation(line: 266, column: 1, scope: !6159)
!6672 = !{i64 2147648851, i64 2147648894, i64 2147648934}
!6673 = !DILocation(line: 267, column: 1, scope: !6159)
!6674 = !{i64 2147649059, i64 2147649102, i64 2147649142}
!6675 = !DILocation(line: 268, column: 1, scope: !6159)
!6676 = !{i64 2147649255, i64 2147649298, i64 2147649338}
!6677 = !DILocation(line: 269, column: 1, scope: !6159)
!6678 = !{i64 2147649469, i64 2147649512, i64 2147649552}
!6679 = !DILocation(line: 270, column: 1, scope: !6159)
!6680 = !{i64 2147649677, i64 2147649720, i64 2147649760}
!6681 = !DILocation(line: 271, column: 1, scope: !6159)
!6682 = !{i64 2147649867, i64 2147649910, i64 2147649950}
!6683 = !DILocation(line: 272, column: 1, scope: !6159)
!6684 = !{i64 2147650081, i64 2147650124, i64 2147650164}
!6685 = !DILocation(line: 273, column: 1, scope: !6159)
!6686 = !{i64 2147650343, i64 2147650386, i64 2147650426}
!6687 = !DILocation(line: 274, column: 1, scope: !6159)
!6688 = !{i64 2147650554, i64 2147650597, i64 2147650637}
!6689 = !DILocation(line: 275, column: 1, scope: !6159)
!6690 = !{i64 2147650798, i64 2147650841, i64 2147650881}
!6691 = !DILocation(line: 276, column: 1, scope: !6159)
!6692 = !{i64 2147651009, i64 2147651052, i64 2147651092}
!6693 = !DILocation(line: 277, column: 1, scope: !6159)
!6694 = !{i64 2147651238, i64 2147651281, i64 2147651321}
!6695 = !DILocation(line: 278, column: 1, scope: !6159)
!6696 = !{i64 2147651503, i64 2147651546, i64 2147651586}
!6697 = !DILocation(line: 279, column: 1, scope: !6159)
!6698 = !{i64 2147651708, i64 2147651751, i64 2147651791}
!6699 = !DILocation(line: 280, column: 1, scope: !6159)
!6700 = !{i64 2147651904, i64 2147651947, i64 2147651987}
!6701 = !DILocation(line: 281, column: 1, scope: !6159)
!6702 = !{i64 2147652127, i64 2147652170, i64 2147652210}
!6703 = !DILocation(line: 282, column: 1, scope: !6159)
!6704 = !{i64 2147652290, i64 2147652333, i64 2147652373}
!6705 = !DILocation(line: 283, column: 1, scope: !6159)
!6706 = !{i64 2147652495, i64 2147652538, i64 2147652578}
!6707 = !DILocation(line: 284, column: 1, scope: !6159)
!6708 = !{i64 2147652715, i64 2147652758, i64 2147652798}
!6709 = !DILocation(line: 285, column: 1, scope: !6159)
!6710 = !{i64 2147652929, i64 2147652972, i64 2147653012}
!6711 = !DILocation(line: 286, column: 1, scope: !6159)
!6712 = !{i64 2147653173, i64 2147653216, i64 2147653256}
!6713 = !DILocation(line: 287, column: 1, scope: !6159)
!6714 = !{i64 2147653405, i64 2147653448, i64 2147653488}
!6715 = !DILocation(line: 288, column: 1, scope: !6159)
!6716 = !{i64 2147653619, i64 2147653662, i64 2147653702}
!6717 = !DILocation(line: 289, column: 1, scope: !6159)
!6718 = !{i64 2147653830, i64 2147653873, i64 2147653913}
!6719 = !DILocation(line: 290, column: 1, scope: !6159)
!6720 = !{i64 2147654023, i64 2147654066, i64 2147654106}
!6721 = !DILocation(line: 291, column: 1, scope: !6159)
!6722 = !{i64 2147654222, i64 2147654265, i64 2147654305}
!6723 = !DILocation(line: 292, column: 1, scope: !6159)
!6724 = !{i64 2147654394, i64 2147654437, i64 2147654477}
!6725 = !DILocation(line: 293, column: 1, scope: !6159)
!6726 = !{i64 2147654587, i64 2147654630, i64 2147654670}
!6727 = !DILocation(line: 294, column: 1, scope: !6159)
!6728 = !{i64 2147654783, i64 2147654826, i64 2147654866}
!6729 = !DILocation(line: 295, column: 1, scope: !6159)
!6730 = !{i64 2147654946, i64 2147654989, i64 2147655029}
!6731 = !DILocation(line: 296, column: 1, scope: !6159)
!6732 = !{i64 2147655148, i64 2147655191, i64 2147655231}
!6733 = !DILocation(line: 297, column: 1, scope: !6159)
!6734 = !{i64 2147659414, i64 2147659457, i64 2147659497}
!6735 = !DILocation(line: 298, column: 1, scope: !6159)
!6736 = !{i64 2147659622, i64 2147659665, i64 2147659705}
!6737 = !DILocation(line: 299, column: 1, scope: !6159)
!6738 = !{i64 2147659815, i64 2147659858, i64 2147659898}
!6739 = !DILocation(line: 300, column: 1, scope: !6159)
!6740 = !{i64 2147660002, i64 2147660045, i64 2147660085}
!6741 = !DILocation(line: 301, column: 1, scope: !6159)
!6742 = !{i64 2147660229, i64 2147660272, i64 2147660312}
!6743 = !DILocation(line: 302, column: 1, scope: !6159)
!6744 = !{i64 2147660395, i64 2147660438, i64 2147660478}
!6745 = !DILocation(line: 303, column: 1, scope: !6159)
!6746 = !{i64 2147660609, i64 2147660652, i64 2147660692}
!6747 = !DILocation(line: 304, column: 1, scope: !6159)
!6748 = !{i64 2147660835, i64 2147660878, i64 2147660918}
!6749 = !DILocation(line: 305, column: 1, scope: !6159)
!6750 = !{i64 2147661043, i64 2147661086, i64 2147661126}
!6751 = !DILocation(line: 306, column: 1, scope: !6159)
!6752 = !{i64 2147661239, i64 2147661282, i64 2147661322}
!6753 = !DILocation(line: 307, column: 1, scope: !6159)
!6754 = !{i64 2147661456, i64 2147661499, i64 2147661539}
!6755 = !DILocation(line: 308, column: 1, scope: !6159)
!6756 = !{i64 2147661748, i64 2147661791, i64 2147661831}
!6757 = !DILocation(line: 309, column: 1, scope: !6159)
!6758 = !{i64 2147661980, i64 2147662023, i64 2147662063}
!6759 = !DILocation(line: 310, column: 1, scope: !6159)
!6760 = !{i64 2147662197, i64 2147662240, i64 2147662280}
!6761 = !DILocation(line: 311, column: 1, scope: !6159)
!6762 = !{i64 2147662404, i64 2147662447, i64 2147662487}
!6763 = !DILocation(line: 312, column: 1, scope: !6159)
!6764 = !{i64 2147662605, i64 2147662648, i64 2147662688}
!6765 = !DILocation(line: 313, column: 1, scope: !6159)
!6766 = !{i64 2147662837, i64 2147662880, i64 2147662920}
!6767 = !DILocation(line: 314, column: 1, scope: !6159)
!6768 = !{i64 2147663045, i64 2147663088, i64 2147663128}
!6769 = !DILocation(line: 315, column: 1, scope: !6159)
!6770 = !{i64 2147663235, i64 2147663278, i64 2147663318}
!6771 = !DILocation(line: 316, column: 1, scope: !6159)
!6772 = !{i64 2147663461, i64 2147663504, i64 2147663544}
!6773 = !DILocation(line: 317, column: 1, scope: !6159)
!6774 = !{i64 2147663650, i64 2147663693, i64 2147663733}
!6775 = !DILocation(line: 318, column: 1, scope: !6159)
!6776 = !{i64 2147663921, i64 2147663964, i64 2147664004}
!6777 = !DILocation(line: 319, column: 1, scope: !6159)
!6778 = !{i64 2147664141, i64 2147664184, i64 2147664224}
!6779 = !DILocation(line: 320, column: 1, scope: !6159)
!6780 = !{i64 2147664394, i64 2147664437, i64 2147664477}
!6781 = !DILocation(line: 321, column: 1, scope: !6159)
!6782 = !{i64 2147664602, i64 2147664645, i64 2147664685}
!6783 = !DILocation(line: 322, column: 1, scope: !6159)
!6784 = !{i64 2147664834, i64 2147664877, i64 2147664917}
!6785 = !DILocation(line: 323, column: 1, scope: !6159)
!6786 = !{i64 2147665045, i64 2147665088, i64 2147665128}
!6787 = !DILocation(line: 324, column: 1, scope: !6159)
!6788 = !{i64 2147665235, i64 2147665278, i64 2147665318}
!6789 = !DILocation(line: 325, column: 1, scope: !6159)
!6790 = !{i64 2147665449, i64 2147665492, i64 2147665532}
!6791 = !DILocation(line: 326, column: 1, scope: !6159)
!6792 = !{i64 2147665648, i64 2147665691, i64 2147665731}
!6793 = !DILocation(line: 327, column: 1, scope: !6159)
!6794 = !{i64 2147665835, i64 2147665878, i64 2147665918}
!6795 = !DILocation(line: 328, column: 1, scope: !6159)
!6796 = !{i64 2147666043, i64 2147666086, i64 2147666126}
!6797 = !DILocation(line: 329, column: 1, scope: !6159)
!6798 = !{i64 2147666272, i64 2147666315, i64 2147666355}
!6799 = !DILocation(line: 330, column: 1, scope: !6159)
!6800 = !{i64 2147666474, i64 2147666517, i64 2147666557}
!6801 = !DILocation(line: 331, column: 1, scope: !6159)
!6802 = !{i64 2147666673, i64 2147666716, i64 2147666756}
!6803 = !DILocation(line: 332, column: 1, scope: !6159)
!6804 = !{i64 2147666890, i64 2147666933, i64 2147666973}
!6805 = !DILocation(line: 334, column: 1, scope: !6159)
!6806 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !584, file: !584, line: 30, type: !590, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !567, retainedNodes: !6807)
!6807 = !{!6808, !6809}
!6808 = !DILocalVariable(name: "arg", arg: 1, scope: !6806, file: !584, line: 30, type: !592)
!6809 = !DILocalVariable(name: "key", scope: !6806, file: !584, line: 32, type: !113)
!6810 = !DILocation(line: 0, scope: !6806)
!6811 = !DILocation(line: 37, column: 2, scope: !6806)
!6812 = !DILocation(line: 38, column: 2, scope: !6806)
!6813 = !DILocation(line: 55, column: 2, scope: !6814, inlinedAt: !6818)
!6814 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4146, file: !4146, line: 42, type: !4147, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !567, retainedNodes: !6815)
!6815 = !{!6816, !6817}
!6816 = !DILocalVariable(name: "key", scope: !6814, file: !4146, line: 44, type: !32)
!6817 = !DILocalVariable(name: "tmp", scope: !6814, file: !4146, line: 53, type: !32)
!6818 = distinct !DILocation(line: 40, column: 8, scope: !6806)
!6819 = !{i64 2203193}
!6820 = !DILocation(line: 0, scope: !6814, inlinedAt: !6818)
!6821 = !DILocalVariable(name: "key", arg: 1, scope: !6822, file: !4146, line: 84, type: !32)
!6822 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4146, file: !4146, line: 84, type: !4159, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !567, retainedNodes: !6823)
!6823 = !{!6821}
!6824 = !DILocation(line: 0, scope: !6822, inlinedAt: !6825)
!6825 = distinct !DILocation(line: 47, column: 2, scope: !6806)
!6826 = !DILocation(line: 95, column: 2, scope: !6822, inlinedAt: !6825)
!6827 = !{i64 2204010}
!6828 = !DILocation(line: 51, column: 18, scope: !6806)
!6829 = !DILocation(line: 53, column: 2, scope: !6806)
!6830 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !6831, file: !6831, line: 1609, type: !3472, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !567, retainedNodes: !437)
!6831 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6832 = !DILocation(line: 1611, column: 3, scope: !6830)
!6833 = !DILocation(line: 1612, column: 1, scope: !6830)
!6834 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !6831, file: !6831, line: 1629, type: !3472, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !567, retainedNodes: !437)
!6835 = !DILocation(line: 1631, column: 3, scope: !6834)
!6836 = !DILocation(line: 1632, column: 1, scope: !6834)
!6837 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !613, file: !613, line: 26, type: !619, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !610, retainedNodes: !6838)
!6838 = !{!6839}
!6839 = !DILocalVariable(name: "dev", arg: 1, scope: !6837, file: !613, line: 26, type: !621)
!6840 = !DILocation(line: 0, scope: !6837)
!6841 = !DILocation(line: 68, column: 2, scope: !6837)
!6842 = distinct !DISubprogram(name: "z_log_minimal_printk", scope: !6843, file: !6843, line: 14, type: !5140, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2948, retainedNodes: !6844)
!6843 = !DIFile(filename: "zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6844 = !{!6845, !6846}
!6845 = !DILocalVariable(name: "fmt", arg: 1, scope: !6842, file: !6843, line: 14, type: !105)
!6846 = !DILocalVariable(name: "ap", scope: !6842, file: !6843, line: 16, type: !6847)
!6847 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4207, line: 99, baseType: !6848)
!6848 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4207, line: 40, baseType: !6849)
!6849 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !6843, baseType: !6850)
!6850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !6851)
!6851 = !{!6852}
!6852 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !6850, file: !6843, line: 16, baseType: !104, size: 32)
!6853 = !DILocation(line: 0, scope: !6842)
!6854 = !DILocation(line: 16, column: 2, scope: !6842)
!6855 = !DILocation(line: 16, column: 10, scope: !6842)
!6856 = !DILocation(line: 18, column: 2, scope: !6842)
!6857 = !DILocation(line: 19, column: 2, scope: !6842)
!6858 = !DILocation(line: 20, column: 2, scope: !6842)
!6859 = !DILocation(line: 21, column: 1, scope: !6842)
!6860 = distinct !DISubprogram(name: "z_log_minimal_vprintk", scope: !6843, file: !6843, line: 23, type: !6861, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2948, retainedNodes: !6863)
!6861 = !DISubroutineType(types: !6862)
!6862 = !{null, !105, !6847}
!6863 = !{!6864, !6865}
!6864 = !DILocalVariable(name: "fmt", arg: 1, scope: !6860, file: !6843, line: 23, type: !105)
!6865 = !DILocalVariable(name: "ap", arg: 2, scope: !6860, file: !6843, line: 23, type: !6847)
!6866 = !DILocation(line: 0, scope: !6860)
!6867 = !DILocation(line: 25, column: 2, scope: !6860)
!6868 = !DILocation(line: 26, column: 1, scope: !6860)
!6869 = distinct !DISubprogram(name: "z_log_minimal_hexdump_print", scope: !6843, file: !6843, line: 52, type: !6870, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2948, retainedNodes: !6872)
!6870 = !DISubroutineType(types: !6871)
!6871 = !{null, !108, !13, !439}
!6872 = !{!6873, !6874, !6875, !6876}
!6873 = !DILocalVariable(name: "level", arg: 1, scope: !6869, file: !6843, line: 52, type: !108)
!6874 = !DILocalVariable(name: "data", arg: 2, scope: !6869, file: !6843, line: 52, type: !13)
!6875 = !DILocalVariable(name: "size", arg: 3, scope: !6869, file: !6843, line: 52, type: !439)
!6876 = !DILocalVariable(name: "data_buffer", scope: !6869, file: !6843, line: 54, type: !105)
!6877 = !DILocation(line: 0, scope: !6869)
!6878 = !DILocation(line: 55, column: 14, scope: !6869)
!6879 = !DILocation(line: 55, column: 2, scope: !6869)
!6880 = !DILocation(line: 56, column: 3, scope: !6881)
!6881 = distinct !DILexicalBlock(scope: !6869, file: !6843, line: 55, column: 20)
!6882 = !DILocation(line: 57, column: 3, scope: !6881)
!6883 = !DILocation(line: 59, column: 7, scope: !6881)
!6884 = distinct !{!6884, !6879, !6885}
!6885 = !DILocation(line: 65, column: 2, scope: !6869)
!6886 = !DILocation(line: 66, column: 1, scope: !6869)
!6887 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3758, file: !3758, line: 175, type: !3759, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2948, retainedNodes: !6888)
!6888 = !{!6889}
!6889 = !DILocalVariable(name: "level", arg: 1, scope: !6887, file: !3758, line: 175, type: !108)
!6890 = !DILocation(line: 0, scope: !6887)
!6891 = !DILocation(line: 177, column: 2, scope: !6887)
!6892 = !DILocation(line: 189, column: 1, scope: !6887)
!6893 = distinct !DISubprogram(name: "minimal_hexdump_line_print", scope: !6843, file: !6843, line: 28, type: !6894, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2948, retainedNodes: !6896)
!6894 = !DISubroutineType(types: !6895)
!6895 = !{null, !105, !439}
!6896 = !{!6897, !6898, !6899, !6901, !6903}
!6897 = !DILocalVariable(name: "data", arg: 1, scope: !6893, file: !6843, line: 28, type: !105)
!6898 = !DILocalVariable(name: "length", arg: 2, scope: !6893, file: !6843, line: 28, type: !439)
!6899 = !DILocalVariable(name: "i", scope: !6900, file: !6843, line: 30, type: !439)
!6900 = distinct !DILexicalBlock(scope: !6893, file: !6843, line: 30, column: 2)
!6901 = !DILocalVariable(name: "i", scope: !6902, file: !6843, line: 40, type: !439)
!6902 = distinct !DILexicalBlock(scope: !6893, file: !6843, line: 40, column: 2)
!6903 = !DILocalVariable(name: "c", scope: !6904, file: !6843, line: 42, type: !165)
!6904 = distinct !DILexicalBlock(scope: !6905, file: !6843, line: 41, column: 19)
!6905 = distinct !DILexicalBlock(scope: !6906, file: !6843, line: 41, column: 7)
!6906 = distinct !DILexicalBlock(scope: !6907, file: !6843, line: 40, column: 54)
!6907 = distinct !DILexicalBlock(scope: !6902, file: !6843, line: 40, column: 2)
!6908 = !DILocation(line: 0, scope: !6893)
!6909 = !DILocation(line: 0, scope: !6900)
!6910 = !DILocation(line: 30, column: 2, scope: !6900)
!6911 = !DILocation(line: 38, column: 2, scope: !6893)
!6912 = !DILocation(line: 0, scope: !6902)
!6913 = !DILocation(line: 40, column: 2, scope: !6902)
!6914 = !DILocation(line: 31, column: 9, scope: !6915)
!6915 = distinct !DILexicalBlock(scope: !6916, file: !6843, line: 31, column: 7)
!6916 = distinct !DILexicalBlock(scope: !6917, file: !6843, line: 30, column: 54)
!6917 = distinct !DILexicalBlock(scope: !6900, file: !6843, line: 30, column: 2)
!6918 = !DILocation(line: 31, column: 7, scope: !6916)
!6919 = !DILocation(line: 32, column: 35, scope: !6920)
!6920 = distinct !DILexicalBlock(scope: !6915, file: !6843, line: 31, column: 19)
!6921 = !DILocation(line: 32, column: 20, scope: !6920)
!6922 = !DILocation(line: 32, column: 4, scope: !6920)
!6923 = !DILocation(line: 33, column: 3, scope: !6920)
!6924 = !DILocation(line: 34, column: 4, scope: !6925)
!6925 = distinct !DILexicalBlock(scope: !6915, file: !6843, line: 33, column: 10)
!6926 = !DILocation(line: 30, column: 50, scope: !6917)
!6927 = !DILocation(line: 30, column: 24, scope: !6917)
!6928 = distinct !{!6928, !6910, !6929}
!6929 = !DILocation(line: 36, column: 2, scope: !6900)
!6930 = !DILocation(line: 49, column: 2, scope: !6893)
!6931 = !DILocation(line: 50, column: 1, scope: !6893)
!6932 = !DILocation(line: 41, column: 9, scope: !6905)
!6933 = !DILocation(line: 41, column: 7, scope: !6906)
!6934 = !DILocation(line: 42, column: 22, scope: !6904)
!6935 = !DILocation(line: 0, scope: !6904)
!6936 = !DILocation(line: 44, column: 25, scope: !6904)
!6937 = !DILocation(line: 44, column: 17, scope: !6904)
!6938 = !DILocation(line: 44, column: 33, scope: !6904)
!6939 = !DILocation(line: 44, column: 4, scope: !6904)
!6940 = !DILocation(line: 45, column: 3, scope: !6904)
!6941 = !DILocation(line: 46, column: 4, scope: !6942)
!6942 = distinct !DILexicalBlock(scope: !6905, file: !6843, line: 45, column: 10)
!6943 = !DILocation(line: 40, column: 50, scope: !6907)
!6944 = !DILocation(line: 40, column: 24, scope: !6907)
!6945 = distinct !{!6945, !6913, !6946}
!6946 = !DILocation(line: 48, column: 2, scope: !6902)
!6947 = distinct !DISubprogram(name: "isprint", scope: !5932, file: !5932, line: 37, type: !563, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2948, retainedNodes: !6948)
!6948 = !{!6949}
!6949 = !DILocalVariable(name: "c", arg: 1, scope: !6947, file: !5932, line: 37, type: !108)
!6950 = !DILocation(line: 0, scope: !6947)
!6951 = !DILocation(line: 39, column: 38, scope: !6947)
!6952 = !DILocation(line: 39, column: 2, scope: !6947)
!6953 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !6954, file: !6954, line: 57, type: !6955, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2951, retainedNodes: !7001)
!6954 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6955 = !DISubroutineType(types: !6956)
!6956 = !{null, !32, !6957}
!6957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6958, size: 32)
!6958 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6959)
!6959 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !3071, line: 141, baseType: !6960)
!6960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !3071, line: 97, size: 256, elements: !6961)
!6961 = !{!6962}
!6962 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !6960, file: !3071, line: 107, baseType: !6963, size: 256)
!6963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !3071, line: 98, size: 256, elements: !6964)
!6964 = !{!6965, !6970, !6975, !6980, !6985, !6990, !6995, !7000}
!6965 = !DIDerivedType(tag: DW_TAG_member, scope: !6963, file: !3071, line: 99, baseType: !6966, size: 32)
!6966 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6963, file: !3071, line: 99, size: 32, elements: !6967)
!6967 = !{!6968, !6969}
!6968 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !6966, file: !3071, line: 99, baseType: !113, size: 32)
!6969 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !6966, file: !3071, line: 99, baseType: !113, size: 32)
!6970 = !DIDerivedType(tag: DW_TAG_member, scope: !6963, file: !3071, line: 100, baseType: !6971, size: 32, offset: 32)
!6971 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6963, file: !3071, line: 100, size: 32, elements: !6972)
!6972 = !{!6973, !6974}
!6973 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !6971, file: !3071, line: 100, baseType: !113, size: 32)
!6974 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !6971, file: !3071, line: 100, baseType: !113, size: 32)
!6975 = !DIDerivedType(tag: DW_TAG_member, scope: !6963, file: !3071, line: 101, baseType: !6976, size: 32, offset: 64)
!6976 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6963, file: !3071, line: 101, size: 32, elements: !6977)
!6977 = !{!6978, !6979}
!6978 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !6976, file: !3071, line: 101, baseType: !113, size: 32)
!6979 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !6976, file: !3071, line: 101, baseType: !113, size: 32)
!6980 = !DIDerivedType(tag: DW_TAG_member, scope: !6963, file: !3071, line: 102, baseType: !6981, size: 32, offset: 96)
!6981 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6963, file: !3071, line: 102, size: 32, elements: !6982)
!6982 = !{!6983, !6984}
!6983 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !6981, file: !3071, line: 102, baseType: !113, size: 32)
!6984 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !6981, file: !3071, line: 102, baseType: !113, size: 32)
!6985 = !DIDerivedType(tag: DW_TAG_member, scope: !6963, file: !3071, line: 103, baseType: !6986, size: 32, offset: 128)
!6986 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6963, file: !3071, line: 103, size: 32, elements: !6987)
!6987 = !{!6988, !6989}
!6988 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !6986, file: !3071, line: 103, baseType: !113, size: 32)
!6989 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !6986, file: !3071, line: 103, baseType: !113, size: 32)
!6990 = !DIDerivedType(tag: DW_TAG_member, scope: !6963, file: !3071, line: 104, baseType: !6991, size: 32, offset: 160)
!6991 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6963, file: !3071, line: 104, size: 32, elements: !6992)
!6992 = !{!6993, !6994}
!6993 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !6991, file: !3071, line: 104, baseType: !113, size: 32)
!6994 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !6991, file: !3071, line: 104, baseType: !113, size: 32)
!6995 = !DIDerivedType(tag: DW_TAG_member, scope: !6963, file: !3071, line: 105, baseType: !6996, size: 32, offset: 192)
!6996 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6963, file: !3071, line: 105, size: 32, elements: !6997)
!6997 = !{!6998, !6999}
!6998 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !6996, file: !3071, line: 105, baseType: !113, size: 32)
!6999 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !6996, file: !3071, line: 105, baseType: !113, size: 32)
!7000 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !6963, file: !3071, line: 106, baseType: !113, size: 32, offset: 224)
!7001 = !{!7002, !7003}
!7002 = !DILocalVariable(name: "reason", arg: 1, scope: !6953, file: !6954, line: 57, type: !32)
!7003 = !DILocalVariable(name: "esf", arg: 2, scope: !6953, file: !6954, line: 57, type: !6957)
!7004 = !DILocation(line: 0, scope: !6953)
!7005 = !DILocation(line: 60, column: 10, scope: !7006)
!7006 = distinct !DILexicalBlock(scope: !6953, file: !6954, line: 60, column: 6)
!7007 = !DILocation(line: 60, column: 6, scope: !6953)
!7008 = !DILocation(line: 61, column: 3, scope: !7009)
!7009 = distinct !DILexicalBlock(scope: !7006, file: !6954, line: 60, column: 19)
!7010 = !DILocation(line: 62, column: 2, scope: !7009)
!7011 = !DILocation(line: 63, column: 2, scope: !6953)
!7012 = !DILocation(line: 64, column: 1, scope: !6953)
!7013 = distinct !DISubprogram(name: "esf_dump", scope: !6954, file: !6954, line: 20, type: !7014, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2951, retainedNodes: !7016)
!7014 = !DISubroutineType(types: !7015)
!7015 = !{null, !6957}
!7016 = !{!7017}
!7017 = !DILocalVariable(name: "esf", arg: 1, scope: !7013, file: !6954, line: 20, type: !6957)
!7018 = !DILocation(line: 0, scope: !7013)
!7019 = !DILocation(line: 22, column: 2, scope: !7020)
!7020 = distinct !DILexicalBlock(scope: !7021, file: !6954, line: 22, column: 2)
!7021 = distinct !DILexicalBlock(scope: !7022, file: !6954, line: 22, column: 2)
!7022 = distinct !DILexicalBlock(scope: !7023, file: !6954, line: 22, column: 2)
!7023 = distinct !DILexicalBlock(scope: !7013, file: !6954, line: 22, column: 2)
!7024 = !DILocation(line: 24, column: 2, scope: !7025)
!7025 = distinct !DILexicalBlock(scope: !7026, file: !6954, line: 24, column: 2)
!7026 = distinct !DILexicalBlock(scope: !7027, file: !6954, line: 24, column: 2)
!7027 = distinct !DILexicalBlock(scope: !7028, file: !6954, line: 24, column: 2)
!7028 = distinct !DILexicalBlock(scope: !7013, file: !6954, line: 24, column: 2)
!7029 = !DILocation(line: 26, column: 2, scope: !7030)
!7030 = distinct !DILexicalBlock(scope: !7031, file: !6954, line: 26, column: 2)
!7031 = distinct !DILexicalBlock(scope: !7032, file: !6954, line: 26, column: 2)
!7032 = distinct !DILexicalBlock(scope: !7033, file: !6954, line: 26, column: 2)
!7033 = distinct !DILexicalBlock(scope: !7013, file: !6954, line: 26, column: 2)
!7034 = !DILocation(line: 53, column: 2, scope: !7035)
!7035 = distinct !DILexicalBlock(scope: !7036, file: !6954, line: 53, column: 2)
!7036 = distinct !DILexicalBlock(scope: !7037, file: !6954, line: 53, column: 2)
!7037 = distinct !DILexicalBlock(scope: !7038, file: !6954, line: 53, column: 2)
!7038 = distinct !DILexicalBlock(scope: !7013, file: !6954, line: 53, column: 2)
!7039 = !DILocation(line: 55, column: 1, scope: !7013)
!7040 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !6954, file: !6954, line: 82, type: !7041, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2951, retainedNodes: !7056)
!7041 = !DISubroutineType(types: !7042)
!7042 = !{null, !6957, !7043}
!7043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7044, size: 32)
!7044 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !718, line: 37, baseType: !7045)
!7045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !718, line: 25, size: 288, elements: !7046)
!7046 = !{!7047, !7048, !7049, !7050, !7051, !7052, !7053, !7054, !7055}
!7047 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7045, file: !718, line: 26, baseType: !113, size: 32)
!7048 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7045, file: !718, line: 27, baseType: !113, size: 32, offset: 32)
!7049 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7045, file: !718, line: 28, baseType: !113, size: 32, offset: 64)
!7050 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7045, file: !718, line: 29, baseType: !113, size: 32, offset: 96)
!7051 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7045, file: !718, line: 30, baseType: !113, size: 32, offset: 128)
!7052 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7045, file: !718, line: 31, baseType: !113, size: 32, offset: 160)
!7053 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7045, file: !718, line: 32, baseType: !113, size: 32, offset: 192)
!7054 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7045, file: !718, line: 33, baseType: !113, size: 32, offset: 224)
!7055 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7045, file: !718, line: 34, baseType: !113, size: 32, offset: 256)
!7056 = !{!7057, !7058, !7059}
!7057 = !DILocalVariable(name: "esf", arg: 1, scope: !7040, file: !6954, line: 82, type: !6957)
!7058 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !7040, file: !6954, line: 82, type: !7043)
!7059 = !DILocalVariable(name: "reason", scope: !7040, file: !6954, line: 88, type: !32)
!7060 = !DILocation(line: 0, scope: !7040)
!7061 = !DILocation(line: 88, column: 35, scope: !7040)
!7062 = !DILocation(line: 108, column: 2, scope: !7040)
!7063 = !DILocation(line: 131, column: 1, scope: !7040)
!7064 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !6954, file: !6954, line: 133, type: !7065, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2951, retainedNodes: !7067)
!7065 = !DISubroutineType(types: !7066)
!7066 = !{null, !104}
!7067 = !{!7068, !7069, !7070}
!7068 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !7064, file: !6954, line: 133, type: !104)
!7069 = !DILocalVariable(name: "ssf_contents", scope: !7064, file: !6954, line: 135, type: !1247)
!7070 = !DILocalVariable(name: "oops_esf", scope: !7064, file: !6954, line: 136, type: !6959)
!7071 = !DILocation(line: 0, scope: !7064)
!7072 = !DILocation(line: 136, column: 2, scope: !7064)
!7073 = !DILocation(line: 136, column: 15, scope: !7064)
!7074 = !DILocation(line: 139, column: 22, scope: !7064)
!7075 = !DILocation(line: 139, column: 17, scope: !7064)
!7076 = !DILocation(line: 139, column: 20, scope: !7064)
!7077 = !DILocation(line: 141, column: 2, scope: !7064)
!7078 = !DILocation(line: 142, column: 2, scope: !7064)
!7079 = distinct !DISubprogram(name: "arch_irq_enable", scope: !7080, file: !7080, line: 40, type: !4159, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2962, retainedNodes: !7081)
!7080 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7081 = !{!7082}
!7082 = !DILocalVariable(name: "irq", arg: 1, scope: !7079, file: !7080, line: 40, type: !32)
!7083 = !DILocation(line: 0, scope: !7079)
!7084 = !DILocation(line: 42, column: 2, scope: !7079)
!7085 = !DILocation(line: 43, column: 1, scope: !7079)
!7086 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !794, file: !794, line: 1684, type: !7087, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2962, retainedNodes: !7089)
!7087 = !DISubroutineType(types: !7088)
!7088 = !{null, !1183}
!7089 = !{!7090}
!7090 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7086, file: !794, line: 1684, type: !1183)
!7091 = !DILocation(line: 0, scope: !7086)
!7092 = !DILocation(line: 1686, column: 23, scope: !7093)
!7093 = distinct !DILexicalBlock(scope: !7086, file: !794, line: 1686, column: 7)
!7094 = !DILocation(line: 1686, column: 7, scope: !7086)
!7095 = !DILocation(line: 1688, column: 5, scope: !7096)
!7096 = distinct !DILexicalBlock(scope: !7093, file: !794, line: 1687, column: 3)
!7097 = !{i64 2151271680}
!7098 = !DILocation(line: 1689, column: 81, scope: !7096)
!7099 = !DILocation(line: 1689, column: 60, scope: !7096)
!7100 = !DILocation(line: 1689, column: 34, scope: !7096)
!7101 = !DILocation(line: 1689, column: 5, scope: !7096)
!7102 = !DILocation(line: 1689, column: 43, scope: !7096)
!7103 = !DILocation(line: 1690, column: 5, scope: !7096)
!7104 = !{i64 2151271794}
!7105 = !DILocation(line: 1691, column: 3, scope: !7096)
!7106 = !DILocation(line: 1692, column: 1, scope: !7086)
!7107 = distinct !DISubprogram(name: "arch_irq_disable", scope: !7080, file: !7080, line: 45, type: !4159, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2962, retainedNodes: !7108)
!7108 = !{!7109}
!7109 = !DILocalVariable(name: "irq", arg: 1, scope: !7107, file: !7080, line: 45, type: !32)
!7110 = !DILocation(line: 0, scope: !7107)
!7111 = !DILocation(line: 47, column: 2, scope: !7107)
!7112 = !DILocation(line: 48, column: 1, scope: !7107)
!7113 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !794, file: !794, line: 1722, type: !7087, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2962, retainedNodes: !7114)
!7114 = !{!7115}
!7115 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7113, file: !794, line: 1722, type: !1183)
!7116 = !DILocation(line: 0, scope: !7113)
!7117 = !DILocation(line: 1724, column: 23, scope: !7118)
!7118 = distinct !DILexicalBlock(scope: !7113, file: !794, line: 1724, column: 7)
!7119 = !DILocation(line: 1724, column: 7, scope: !7113)
!7120 = !DILocation(line: 1726, column: 81, scope: !7121)
!7121 = distinct !DILexicalBlock(scope: !7118, file: !794, line: 1725, column: 3)
!7122 = !DILocation(line: 1726, column: 60, scope: !7121)
!7123 = !DILocation(line: 1726, column: 34, scope: !7121)
!7124 = !DILocation(line: 1726, column: 5, scope: !7121)
!7125 = !DILocation(line: 1726, column: 43, scope: !7121)
!7126 = !DILocation(line: 271, column: 3, scope: !7127, inlinedAt: !7129)
!7127 = distinct !DISubprogram(name: "__DSB", scope: !7128, file: !7128, line: 269, type: !3472, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2962, retainedNodes: !437)
!7128 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7129 = distinct !DILocation(line: 1727, column: 5, scope: !7121)
!7130 = !{i64 3726063}
!7131 = !DILocation(line: 260, column: 3, scope: !7132, inlinedAt: !7133)
!7132 = distinct !DISubprogram(name: "__ISB", scope: !7128, file: !7128, line: 258, type: !3472, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2962, retainedNodes: !437)
!7133 = distinct !DILocation(line: 1728, column: 5, scope: !7121)
!7134 = !{i64 3725780}
!7135 = !DILocation(line: 1729, column: 3, scope: !7121)
!7136 = !DILocation(line: 1730, column: 1, scope: !7113)
!7137 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !7080, file: !7080, line: 50, type: !7138, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2962, retainedNodes: !7140)
!7138 = !DISubroutineType(types: !7139)
!7139 = !{!108, !32}
!7140 = !{!7141}
!7141 = !DILocalVariable(name: "irq", arg: 1, scope: !7137, file: !7080, line: 50, type: !32)
!7142 = !DILocation(line: 0, scope: !7137)
!7143 = !DILocation(line: 52, column: 20, scope: !7137)
!7144 = !DILocation(line: 52, column: 9, scope: !7137)
!7145 = !DILocation(line: 52, column: 41, scope: !7137)
!7146 = !DILocation(line: 52, column: 39, scope: !7137)
!7147 = !DILocation(line: 52, column: 2, scope: !7137)
!7148 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !7080, file: !7080, line: 64, type: !7149, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2962, retainedNodes: !7151)
!7149 = !DISubroutineType(types: !7150)
!7150 = !{null, !32, !32, !113}
!7151 = !{!7152, !7153, !7154}
!7152 = !DILocalVariable(name: "irq", arg: 1, scope: !7148, file: !7080, line: 64, type: !32)
!7153 = !DILocalVariable(name: "prio", arg: 2, scope: !7148, file: !7080, line: 64, type: !32)
!7154 = !DILocalVariable(name: "flags", arg: 3, scope: !7148, file: !7080, line: 64, type: !113)
!7155 = !DILocation(line: 0, scope: !7148)
!7156 = !DILocation(line: 83, column: 8, scope: !7157)
!7157 = distinct !DILexicalBlock(scope: !7158, file: !7080, line: 82, column: 9)
!7158 = distinct !DILexicalBlock(scope: !7148, file: !7080, line: 76, column: 6)
!7159 = !DILocation(line: 95, column: 2, scope: !7148)
!7160 = !DILocation(line: 96, column: 1, scope: !7148)
!7161 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !794, file: !794, line: 1814, type: !7162, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2962, retainedNodes: !7164)
!7162 = !DISubroutineType(types: !7163)
!7163 = !{null, !1183, !113}
!7164 = !{!7165, !7166}
!7165 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7161, file: !794, line: 1814, type: !1183)
!7166 = !DILocalVariable(name: "priority", arg: 2, scope: !7161, file: !794, line: 1814, type: !113)
!7167 = !DILocation(line: 0, scope: !7161)
!7168 = !DILocation(line: 0, scope: !7169)
!7169 = distinct !DILexicalBlock(scope: !7161, file: !794, line: 1816, column: 7)
!7170 = !DILocation(line: 1816, column: 7, scope: !7161)
!7171 = !DILocation(line: 1824, column: 1, scope: !7161)
!7172 = distinct !DISubprogram(name: "z_irq_spurious", scope: !7080, file: !7080, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2962, retainedNodes: !7173)
!7173 = !{!7174}
!7174 = !DILocalVariable(name: "unused", arg: 1, scope: !7172, file: !7080, line: 155, type: !13)
!7175 = !DILocation(line: 0, scope: !7172)
!7176 = !DILocation(line: 159, column: 2, scope: !7172)
!7177 = !DILocation(line: 160, column: 1, scope: !7172)
!7178 = distinct !DISubprogram(name: "z_arm_nmi", scope: !7179, file: !7179, line: 87, type: !3472, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3008, retainedNodes: !437)
!7179 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7180 = !DILocation(line: 89, column: 2, scope: !7178)
!7181 = !DILocation(line: 90, column: 2, scope: !7178)
!7182 = !DILocation(line: 91, column: 1, scope: !7178)
!7183 = !DISubprogram(name: "z_SysNmiOnReset", scope: !7179, file: !7179, line: 23, type: !3472, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !437)
!7184 = !DISubprogram(name: "z_arm_int_exit", scope: !7185, file: !7185, line: 153, type: !3472, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !437)
!7185 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7186 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !7187, file: !7187, line: 256, type: !3472, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3010, retainedNodes: !437)
!7187 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7188 = !DILocation(line: 258, column: 2, scope: !7186)
!7189 = !DILocation(line: 260, column: 2, scope: !7186)
!7190 = !DILocation(line: 262, column: 2, scope: !7186)
!7191 = !DILocation(line: 263, column: 2, scope: !7186)
!7192 = !DILocation(line: 267, column: 2, scope: !7186)
!7193 = !DILocation(line: 268, column: 2, scope: !7186)
!7194 = distinct !DISubprogram(name: "relocate_vector_table", scope: !7187, file: !7187, line: 53, type: !3472, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3010, retainedNodes: !437)
!7195 = !DILocation(line: 55, column: 12, scope: !7194)
!7196 = !DILocation(line: 271, column: 3, scope: !7197, inlinedAt: !7198)
!7197 = distinct !DISubprogram(name: "__DSB", scope: !7128, file: !7128, line: 269, type: !3472, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3010, retainedNodes: !437)
!7198 = distinct !DILocation(line: 56, column: 2, scope: !7194)
!7199 = !{i64 3724734}
!7200 = !DILocation(line: 260, column: 3, scope: !7201, inlinedAt: !7202)
!7201 = distinct !DISubprogram(name: "__ISB", scope: !7128, file: !7128, line: 258, type: !3472, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3010, retainedNodes: !437)
!7202 = distinct !DILocation(line: 57, column: 2, scope: !7194)
!7203 = !{i64 3724451}
!7204 = !DILocation(line: 58, column: 1, scope: !7194)
!7205 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !7187, file: !7187, line: 96, type: !3472, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3010, retainedNodes: !437)
!7206 = !DILocation(line: 103, column: 13, scope: !7205)
!7207 = !DILocation(line: 975, column: 3, scope: !7208, inlinedAt: !7213)
!7208 = distinct !DISubprogram(name: "__get_CONTROL", scope: !7128, file: !7128, line: 971, type: !7209, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3010, retainedNodes: !7211)
!7209 = !DISubroutineType(types: !7210)
!7210 = !{!113}
!7211 = !{!7212}
!7212 = !DILocalVariable(name: "result", scope: !7208, file: !7128, line: 973, type: !113)
!7213 = distinct !DILocation(line: 189, column: 16, scope: !7205)
!7214 = !{i64 3745564}
!7215 = !DILocation(line: 0, scope: !7208, inlinedAt: !7213)
!7216 = !DILocation(line: 189, column: 32, scope: !7205)
!7217 = !DILocalVariable(name: "control", arg: 1, scope: !7218, file: !7128, line: 1001, type: !113)
!7218 = distinct !DISubprogram(name: "__set_CONTROL", scope: !7128, file: !7128, line: 1001, type: !7219, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3010, retainedNodes: !7221)
!7219 = !DISubroutineType(types: !7220)
!7220 = !{null, !113}
!7221 = !{!7217}
!7222 = !DILocation(line: 0, scope: !7218, inlinedAt: !7223)
!7223 = distinct !DILocation(line: 189, column: 2, scope: !7205)
!7224 = !DILocation(line: 1003, column: 3, scope: !7218, inlinedAt: !7223)
!7225 = !{i64 3746284}
!7226 = !DILocation(line: 260, column: 3, scope: !7201, inlinedAt: !7227)
!7227 = distinct !DILocation(line: 1004, column: 3, scope: !7218, inlinedAt: !7223)
!7228 = !DILocation(line: 191, column: 1, scope: !7205)
!7229 = distinct !DISubprogram(name: "arch_swap", scope: !7230, file: !7230, line: 33, type: !7138, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3038, retainedNodes: !7231)
!7230 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7231 = !{!7232}
!7232 = !DILocalVariable(name: "key", arg: 1, scope: !7229, file: !7230, line: 33, type: !32)
!7233 = !DILocation(line: 0, scope: !7229)
!7234 = !DILocation(line: 36, column: 2, scope: !7229)
!7235 = !DILocation(line: 36, column: 17, scope: !7229)
!7236 = !DILocation(line: 36, column: 25, scope: !7229)
!7237 = !DILocation(line: 37, column: 37, scope: !7229)
!7238 = !DILocation(line: 37, column: 17, scope: !7229)
!7239 = !DILocation(line: 37, column: 35, scope: !7229)
!7240 = !DILocation(line: 41, column: 12, scope: !7229)
!7241 = !DILocalVariable(name: "key", arg: 1, scope: !7242, file: !4146, line: 84, type: !32)
!7242 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4146, file: !4146, line: 84, type: !4159, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3038, retainedNodes: !7243)
!7243 = !{!7241}
!7244 = !DILocation(line: 0, scope: !7242, inlinedAt: !7245)
!7245 = distinct !DILocation(line: 44, column: 2, scope: !7229)
!7246 = !DILocation(line: 95, column: 2, scope: !7242, inlinedAt: !7245)
!7247 = !{i64 2295235}
!7248 = !DILocation(line: 53, column: 9, scope: !7229)
!7249 = !DILocation(line: 53, column: 24, scope: !7229)
!7250 = !DILocation(line: 53, column: 2, scope: !7229)
!7251 = distinct !DISubprogram(name: "arch_new_thread", scope: !7252, file: !7252, line: 56, type: !7253, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3066, retainedNodes: !7360)
!7252 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7253 = !DISubroutineType(types: !7254)
!7254 = !{null, !7255, !7355, !443, !5238, !104, !104, !104}
!7255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7256, size: 32)
!7256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !651, line: 245, size: 1024, elements: !7257)
!7257 = !{!7258, !7316, !7328, !7329, !7330, !7331, !7337, !7350}
!7258 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7256, file: !651, line: 247, baseType: !7259, size: 384)
!7259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !651, line: 57, size: 384, elements: !7260)
!7260 = !{!7261, !7285, !7292, !7293, !7294, !7303, !7304, !7305}
!7261 = !DIDerivedType(tag: DW_TAG_member, scope: !7259, file: !651, line: 60, baseType: !7262, size: 64)
!7262 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7259, file: !651, line: 60, size: 64, elements: !7263)
!7263 = !{!7264, !7279}
!7264 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7262, file: !651, line: 61, baseType: !7265, size: 64)
!7265 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !367, line: 49, baseType: !7266)
!7266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !7267)
!7267 = !{!7268, !7274}
!7268 = !DIDerivedType(tag: DW_TAG_member, scope: !7266, file: !367, line: 38, baseType: !7269, size: 32)
!7269 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7266, file: !367, line: 38, size: 32, elements: !7270)
!7270 = !{!7271, !7273}
!7271 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7269, file: !367, line: 39, baseType: !7272, size: 32)
!7272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7266, size: 32)
!7273 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7269, file: !367, line: 40, baseType: !7272, size: 32)
!7274 = !DIDerivedType(tag: DW_TAG_member, scope: !7266, file: !367, line: 42, baseType: !7275, size: 32, offset: 32)
!7275 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7266, file: !367, line: 42, size: 32, elements: !7276)
!7276 = !{!7277, !7278}
!7277 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7275, file: !367, line: 43, baseType: !7272, size: 32)
!7278 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7275, file: !367, line: 44, baseType: !7272, size: 32)
!7279 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7262, file: !651, line: 62, baseType: !7280, size: 64)
!7280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !676, line: 49, size: 64, elements: !7281)
!7281 = !{!7282}
!7282 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7280, file: !676, line: 50, baseType: !7283, size: 64)
!7283 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7284, size: 64, elements: !681)
!7284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7280, size: 32)
!7285 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7259, file: !651, line: 68, baseType: !7286, size: 32, offset: 64)
!7286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7287, size: 32)
!7287 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !363, line: 233, baseType: !7288)
!7288 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 231, size: 64, elements: !7289)
!7289 = !{!7290}
!7290 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7288, file: !363, line: 232, baseType: !7291, size: 64)
!7291 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !7266)
!7292 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7259, file: !651, line: 71, baseType: !164, size: 8, offset: 96)
!7293 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7259, file: !651, line: 74, baseType: !164, size: 8, offset: 104)
!7294 = !DIDerivedType(tag: DW_TAG_member, scope: !7259, file: !651, line: 90, baseType: !7295, size: 16, offset: 112)
!7295 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7259, file: !651, line: 90, size: 16, elements: !7296)
!7296 = !{!7297, !7302}
!7297 = !DIDerivedType(tag: DW_TAG_member, scope: !7295, file: !651, line: 91, baseType: !7298, size: 16)
!7298 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7295, file: !651, line: 91, size: 16, elements: !7299)
!7299 = !{!7300, !7301}
!7300 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7298, file: !651, line: 96, baseType: !699, size: 8)
!7301 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7298, file: !651, line: 97, baseType: !164, size: 8, offset: 8)
!7302 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7295, file: !651, line: 100, baseType: !168, size: 16)
!7303 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7259, file: !651, line: 107, baseType: !113, size: 32, offset: 128)
!7304 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7259, file: !651, line: 127, baseType: !104, size: 32, offset: 160)
!7305 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7259, file: !651, line: 131, baseType: !7306, size: 192, offset: 192)
!7306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !363, line: 244, size: 192, elements: !7307)
!7307 = !{!7308, !7309, !7315}
!7308 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7306, file: !363, line: 245, baseType: !7265, size: 64)
!7309 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7306, file: !363, line: 246, baseType: !7310, size: 32, offset: 64)
!7310 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !363, line: 242, baseType: !7311)
!7311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7312, size: 32)
!7312 = !DISubroutineType(types: !7313)
!7313 = !{null, !7314}
!7314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7306, size: 32)
!7315 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7306, file: !363, line: 249, baseType: !111, size: 64, offset: 128)
!7316 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7256, file: !651, line: 250, baseType: !7317, size: 288, offset: 384)
!7317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !718, line: 25, size: 288, elements: !7318)
!7318 = !{!7319, !7320, !7321, !7322, !7323, !7324, !7325, !7326, !7327}
!7319 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7317, file: !718, line: 26, baseType: !113, size: 32)
!7320 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7317, file: !718, line: 27, baseType: !113, size: 32, offset: 32)
!7321 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7317, file: !718, line: 28, baseType: !113, size: 32, offset: 64)
!7322 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7317, file: !718, line: 29, baseType: !113, size: 32, offset: 96)
!7323 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7317, file: !718, line: 30, baseType: !113, size: 32, offset: 128)
!7324 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7317, file: !718, line: 31, baseType: !113, size: 32, offset: 160)
!7325 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7317, file: !718, line: 32, baseType: !113, size: 32, offset: 192)
!7326 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7317, file: !718, line: 33, baseType: !113, size: 32, offset: 224)
!7327 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7317, file: !718, line: 34, baseType: !113, size: 32, offset: 256)
!7328 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7256, file: !651, line: 253, baseType: !104, size: 32, offset: 672)
!7329 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7256, file: !651, line: 256, baseType: !7287, size: 64, offset: 704)
!7330 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7256, file: !651, line: 294, baseType: !108, size: 32, offset: 768)
!7331 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7256, file: !651, line: 300, baseType: !7332, size: 96, offset: 800)
!7332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !651, line: 149, size: 96, elements: !7333)
!7333 = !{!7334, !7335, !7336}
!7334 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7332, file: !651, line: 153, baseType: !22, size: 32)
!7335 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7332, file: !651, line: 162, baseType: !439, size: 32, offset: 32)
!7336 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7332, file: !651, line: 168, baseType: !439, size: 32, offset: 64)
!7337 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7256, file: !651, line: 325, baseType: !7338, size: 32, offset: 896)
!7338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7339, size: 32)
!7339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !359, line: 5073, size: 160, elements: !7340)
!7340 = !{!7341, !7347, !7348}
!7341 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7339, file: !359, line: 5074, baseType: !7342, size: 96)
!7342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !744, line: 56, size: 96, elements: !7343)
!7343 = !{!7344, !7345, !7346}
!7344 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7342, file: !744, line: 57, baseType: !747, size: 32)
!7345 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7342, file: !744, line: 58, baseType: !104, size: 32, offset: 32)
!7346 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7342, file: !744, line: 59, baseType: !439, size: 32, offset: 64)
!7347 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7339, file: !359, line: 5075, baseType: !7287, size: 64, offset: 96)
!7348 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7339, file: !359, line: 5076, baseType: !7349, offset: 160)
!7349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!7350 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7256, file: !651, line: 343, baseType: !7351, size: 64, offset: 928)
!7351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !718, line: 60, size: 64, elements: !7352)
!7352 = !{!7353, !7354}
!7353 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7351, file: !718, line: 63, baseType: !113, size: 32)
!7354 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7351, file: !718, line: 66, baseType: !113, size: 32, offset: 32)
!7355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7356, size: 32)
!7356 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !5239, line: 44, baseType: !7357)
!7357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2452, line: 47, size: 8, elements: !7358)
!7358 = !{!7359}
!7359 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7357, file: !2452, line: 48, baseType: !107, size: 8)
!7360 = !{!7361, !7362, !7363, !7364, !7365, !7366, !7367, !7368}
!7361 = !DILocalVariable(name: "thread", arg: 1, scope: !7251, file: !7252, line: 56, type: !7255)
!7362 = !DILocalVariable(name: "stack", arg: 2, scope: !7251, file: !7252, line: 56, type: !7355)
!7363 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !7251, file: !7252, line: 57, type: !443)
!7364 = !DILocalVariable(name: "entry", arg: 4, scope: !7251, file: !7252, line: 57, type: !5238)
!7365 = !DILocalVariable(name: "p1", arg: 5, scope: !7251, file: !7252, line: 58, type: !104)
!7366 = !DILocalVariable(name: "p2", arg: 6, scope: !7251, file: !7252, line: 58, type: !104)
!7367 = !DILocalVariable(name: "p3", arg: 7, scope: !7251, file: !7252, line: 58, type: !104)
!7368 = !DILocalVariable(name: "iframe", scope: !7251, file: !7252, line: 60, type: !3069)
!7369 = !DILocation(line: 0, scope: !7251)
!7370 = !DILocation(line: 85, column: 11, scope: !7251)
!7371 = !DILocation(line: 93, column: 10, scope: !7251)
!7372 = !DILocation(line: 98, column: 13, scope: !7251)
!7373 = !DILocation(line: 100, column: 15, scope: !7251)
!7374 = !DILocation(line: 100, column: 10, scope: !7251)
!7375 = !DILocation(line: 100, column: 13, scope: !7251)
!7376 = !DILocation(line: 101, column: 15, scope: !7251)
!7377 = !DILocation(line: 101, column: 10, scope: !7251)
!7378 = !DILocation(line: 101, column: 13, scope: !7251)
!7379 = !DILocation(line: 102, column: 15, scope: !7251)
!7380 = !DILocation(line: 102, column: 10, scope: !7251)
!7381 = !DILocation(line: 102, column: 13, scope: !7251)
!7382 = !DILocation(line: 103, column: 15, scope: !7251)
!7383 = !DILocation(line: 103, column: 10, scope: !7251)
!7384 = !DILocation(line: 103, column: 13, scope: !7251)
!7385 = !DILocation(line: 106, column: 10, scope: !7251)
!7386 = !DILocation(line: 106, column: 15, scope: !7251)
!7387 = !DILocation(line: 122, column: 29, scope: !7251)
!7388 = !DILocation(line: 122, column: 23, scope: !7251)
!7389 = !DILocation(line: 122, column: 27, scope: !7251)
!7390 = !DILocation(line: 123, column: 15, scope: !7251)
!7391 = !DILocation(line: 123, column: 23, scope: !7251)
!7392 = !DILocation(line: 143, column: 1, scope: !7251)
!7393 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !7252, file: !7252, line: 385, type: !7394, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3066, retainedNodes: !7397)
!7394 = !DISubroutineType(types: !7395)
!7395 = !{!113, !7396, !7396}
!7396 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !113)
!7397 = !{!7398, !7399, !7400, !7403}
!7398 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !7393, file: !7252, line: 385, type: !7396)
!7399 = !DILocalVariable(name: "psp", arg: 2, scope: !7393, file: !7252, line: 385, type: !7396)
!7400 = !DILocalVariable(name: "thread", scope: !7393, file: !7252, line: 388, type: !7401)
!7401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7402, size: 32)
!7402 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7256)
!7403 = !DILocalVariable(name: "guard_len", scope: !7393, file: !7252, line: 405, type: !113)
!7404 = !DILocation(line: 0, scope: !7393)
!7405 = !DILocation(line: 388, column: 34, scope: !7393)
!7406 = !DILocation(line: 390, column: 13, scope: !7407)
!7407 = distinct !DILexicalBlock(scope: !7393, file: !7252, line: 390, column: 6)
!7408 = !DILocation(line: 390, column: 6, scope: !7393)
!7409 = !DILocation(line: 438, column: 6, scope: !7410)
!7410 = distinct !DILexicalBlock(scope: !7393, file: !7252, line: 438, column: 6)
!7411 = !DILocation(line: 438, column: 6, scope: !7393)
!7412 = !DILocation(line: 442, column: 3, scope: !7413)
!7413 = distinct !DILexicalBlock(scope: !7410, file: !7252, line: 440, column: 22)
!7414 = !DILocation(line: 455, column: 1, scope: !7393)
!7415 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !7252, file: !7252, line: 530, type: !7416, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3066, retainedNodes: !7418)
!7416 = !DISubroutineType(types: !7417)
!7417 = !{null, !7255, !443, !5238}
!7418 = !{!7419, !7420, !7421}
!7419 = !DILocalVariable(name: "main_thread", arg: 1, scope: !7415, file: !7252, line: 530, type: !7255)
!7420 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !7415, file: !7252, line: 530, type: !443)
!7421 = !DILocalVariable(name: "_main", arg: 3, scope: !7415, file: !7252, line: 531, type: !5238)
!7422 = !DILocation(line: 0, scope: !7415)
!7423 = !DILocation(line: 535, column: 11, scope: !7415)
!7424 = !DILocation(line: 560, column: 2, scope: !7415)
!7425 = !DILocation(line: 576, column: 2, scope: !7415)
!7426 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!7427 = !DILocation(line: 603, column: 2, scope: !7415)
!7428 = distinct !DISubprogram(name: "z_arm_fault", scope: !7429, file: !7429, line: 1036, type: !7430, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3109, retainedNodes: !7445)
!7429 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7430 = !DISubroutineType(types: !7431)
!7431 = !{null, !113, !113, !113, !7432}
!7432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7433, size: 32)
!7433 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !718, line: 37, baseType: !7434)
!7434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !718, line: 25, size: 288, elements: !7435)
!7435 = !{!7436, !7437, !7438, !7439, !7440, !7441, !7442, !7443, !7444}
!7436 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7434, file: !718, line: 26, baseType: !113, size: 32)
!7437 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7434, file: !718, line: 27, baseType: !113, size: 32, offset: 32)
!7438 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7434, file: !718, line: 28, baseType: !113, size: 32, offset: 64)
!7439 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7434, file: !718, line: 29, baseType: !113, size: 32, offset: 96)
!7440 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7434, file: !718, line: 30, baseType: !113, size: 32, offset: 128)
!7441 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7434, file: !718, line: 31, baseType: !113, size: 32, offset: 160)
!7442 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7434, file: !718, line: 32, baseType: !113, size: 32, offset: 192)
!7443 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7434, file: !718, line: 33, baseType: !113, size: 32, offset: 224)
!7444 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7434, file: !718, line: 34, baseType: !113, size: 32, offset: 256)
!7445 = !{!7446, !7447, !7448, !7449, !7450, !7451, !7452, !7453, !7454, !7455}
!7446 = !DILocalVariable(name: "msp", arg: 1, scope: !7428, file: !7429, line: 1036, type: !113)
!7447 = !DILocalVariable(name: "psp", arg: 2, scope: !7428, file: !7429, line: 1036, type: !113)
!7448 = !DILocalVariable(name: "exc_return", arg: 3, scope: !7428, file: !7429, line: 1036, type: !113)
!7449 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !7428, file: !7429, line: 1037, type: !7432)
!7450 = !DILocalVariable(name: "reason", scope: !7428, file: !7429, line: 1039, type: !113)
!7451 = !DILocalVariable(name: "fault", scope: !7428, file: !7429, line: 1040, type: !108)
!7452 = !DILocalVariable(name: "recoverable", scope: !7428, file: !7429, line: 1041, type: !422)
!7453 = !DILocalVariable(name: "nested_exc", scope: !7428, file: !7429, line: 1041, type: !422)
!7454 = !DILocalVariable(name: "esf", scope: !7428, file: !7429, line: 1042, type: !3137)
!7455 = !DILocalVariable(name: "esf_copy", scope: !7428, file: !7429, line: 1047, type: !3138)
!7456 = !DILocation(line: 0, scope: !7428)
!7457 = !DILocation(line: 1040, column: 19, scope: !7428)
!7458 = !DILocation(line: 1040, column: 24, scope: !7428)
!7459 = !DILocation(line: 1041, column: 2, scope: !7428)
!7460 = !DILocation(line: 1047, column: 2, scope: !7428)
!7461 = !DILocation(line: 1047, column: 15, scope: !7428)
!7462 = !DILocalVariable(name: "key", arg: 1, scope: !7463, file: !4146, line: 84, type: !32)
!7463 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4146, file: !4146, line: 84, type: !4159, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3109, retainedNodes: !7464)
!7464 = !{!7462}
!7465 = !DILocation(line: 0, scope: !7463, inlinedAt: !7466)
!7466 = distinct !DILocation(line: 1050, column: 2, scope: !7428)
!7467 = !DILocation(line: 95, column: 2, scope: !7463, inlinedAt: !7466)
!7468 = !{i64 2328479}
!7469 = !DILocation(line: 1055, column: 9, scope: !7428)
!7470 = !DILocation(line: 1063, column: 11, scope: !7428)
!7471 = !DILocation(line: 1064, column: 6, scope: !7472)
!7472 = distinct !DILexicalBlock(scope: !7428, file: !7429, line: 1064, column: 6)
!7473 = !{i8 0, i8 2}
!7474 = !DILocation(line: 1064, column: 6, scope: !7428)
!7475 = !DILocation(line: 1070, column: 20, scope: !7428)
!7476 = !DILocation(line: 1070, column: 2, scope: !7428)
!7477 = !DILocation(line: 1089, column: 6, scope: !7478)
!7478 = distinct !DILexicalBlock(scope: !7428, file: !7429, line: 1089, column: 6)
!7479 = !DILocation(line: 0, scope: !7478)
!7480 = !DILocation(line: 1089, column: 6, scope: !7428)
!7481 = !DILocation(line: 1090, column: 28, scope: !7482)
!7482 = distinct !DILexicalBlock(scope: !7483, file: !7429, line: 1090, column: 7)
!7483 = distinct !DILexicalBlock(scope: !7478, file: !7429, line: 1089, column: 18)
!7484 = !DILocation(line: 1090, column: 44, scope: !7482)
!7485 = !DILocation(line: 1090, column: 7, scope: !7483)
!7486 = !DILocation(line: 1091, column: 24, scope: !7487)
!7487 = distinct !DILexicalBlock(scope: !7482, file: !7429, line: 1090, column: 50)
!7488 = !DILocation(line: 1092, column: 3, scope: !7487)
!7489 = !DILocation(line: 1094, column: 23, scope: !7490)
!7490 = distinct !DILexicalBlock(scope: !7478, file: !7429, line: 1093, column: 9)
!7491 = !DILocation(line: 1097, column: 2, scope: !7428)
!7492 = !DILocation(line: 1098, column: 1, scope: !7428)
!7493 = distinct !DISubprogram(name: "get_esf", scope: !7429, file: !7429, line: 894, type: !7494, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3109, retainedNodes: !7497)
!7494 = !DISubroutineType(types: !7495)
!7495 = !{!3137, !113, !113, !113, !7496}
!7496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !422, size: 32)
!7497 = !{!7498, !7499, !7500, !7501, !7502, !7503}
!7498 = !DILocalVariable(name: "msp", arg: 1, scope: !7493, file: !7429, line: 894, type: !113)
!7499 = !DILocalVariable(name: "psp", arg: 2, scope: !7493, file: !7429, line: 894, type: !113)
!7500 = !DILocalVariable(name: "exc_return", arg: 3, scope: !7493, file: !7429, line: 894, type: !113)
!7501 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !7493, file: !7429, line: 895, type: !7496)
!7502 = !DILocalVariable(name: "alternative_state_exc", scope: !7493, file: !7429, line: 897, type: !422)
!7503 = !DILocalVariable(name: "ptr_esf", scope: !7493, file: !7429, line: 898, type: !3137)
!7504 = !DILocation(line: 0, scope: !7493)
!7505 = !DILocation(line: 900, column: 14, scope: !7493)
!7506 = !DILocation(line: 902, column: 49, scope: !7507)
!7507 = distinct !DILexicalBlock(scope: !7493, file: !7429, line: 902, column: 6)
!7508 = !DILocation(line: 902, column: 6, scope: !7493)
!7509 = !DILocation(line: 983, column: 44, scope: !7510)
!7510 = distinct !DILexicalBlock(scope: !7493, file: !7429, line: 983, column: 6)
!7511 = !DILocation(line: 985, column: 3, scope: !7512)
!7512 = distinct !DILexicalBlock(scope: !7513, file: !7429, line: 985, column: 3)
!7513 = distinct !DILexicalBlock(scope: !7514, file: !7429, line: 985, column: 3)
!7514 = distinct !DILexicalBlock(scope: !7515, file: !7429, line: 985, column: 3)
!7515 = distinct !DILexicalBlock(scope: !7516, file: !7429, line: 985, column: 3)
!7516 = distinct !DILexicalBlock(scope: !7510, file: !7429, line: 984, column: 47)
!7517 = !DILocation(line: 986, column: 3, scope: !7516)
!7518 = !DILocation(line: 983, column: 18, scope: !7510)
!7519 = !DILocation(line: 991, column: 7, scope: !7520)
!7520 = distinct !DILexicalBlock(scope: !7521, file: !7429, line: 990, column: 30)
!7521 = distinct !DILexicalBlock(scope: !7493, file: !7429, line: 990, column: 6)
!7522 = !DILocation(line: 998, column: 16, scope: !7523)
!7523 = distinct !DILexicalBlock(scope: !7524, file: !7429, line: 995, column: 10)
!7524 = distinct !DILexicalBlock(scope: !7520, file: !7429, line: 991, column: 7)
!7525 = !DILocation(line: 1002, column: 2, scope: !7493)
!7526 = !DILocation(line: 1003, column: 1, scope: !7493)
!7527 = distinct !DISubprogram(name: "fault_handle", scope: !7429, file: !7429, line: 786, type: !7528, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3109, retainedNodes: !7530)
!7528 = !DISubroutineType(types: !7529)
!7529 = !{!113, !3137, !108, !7496}
!7530 = !{!7531, !7532, !7533, !7534}
!7531 = !DILocalVariable(name: "esf", arg: 1, scope: !7527, file: !7429, line: 786, type: !3137)
!7532 = !DILocalVariable(name: "fault", arg: 2, scope: !7527, file: !7429, line: 786, type: !108)
!7533 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7527, file: !7429, line: 786, type: !7496)
!7534 = !DILocalVariable(name: "reason", scope: !7527, file: !7429, line: 788, type: !113)
!7535 = !DILocation(line: 0, scope: !7527)
!7536 = !DILocation(line: 790, column: 15, scope: !7527)
!7537 = !DILocation(line: 792, column: 2, scope: !7527)
!7538 = !DILocation(line: 794, column: 12, scope: !7539)
!7539 = distinct !DILexicalBlock(scope: !7527, file: !7429, line: 792, column: 17)
!7540 = !DILocation(line: 795, column: 3, scope: !7539)
!7541 = !DILocation(line: 800, column: 12, scope: !7539)
!7542 = !DILocation(line: 801, column: 3, scope: !7539)
!7543 = !DILocation(line: 803, column: 12, scope: !7539)
!7544 = !DILocation(line: 804, column: 3, scope: !7539)
!7545 = !DILocation(line: 806, column: 12, scope: !7539)
!7546 = !DILocation(line: 807, column: 3, scope: !7539)
!7547 = !DILocation(line: 814, column: 3, scope: !7539)
!7548 = !DILocation(line: 815, column: 3, scope: !7539)
!7549 = !DILocation(line: 820, column: 3, scope: !7539)
!7550 = !DILocation(line: 821, column: 3, scope: !7539)
!7551 = !DILocation(line: 829, column: 2, scope: !7527)
!7552 = distinct !DISubprogram(name: "hard_fault", scope: !7429, file: !7429, line: 709, type: !7553, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3109, retainedNodes: !7555)
!7553 = !DISubroutineType(types: !7554)
!7554 = !{!113, !3137, !7496}
!7555 = !{!7556, !7557, !7558}
!7556 = !DILocalVariable(name: "esf", arg: 1, scope: !7552, file: !7429, line: 709, type: !3137)
!7557 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7552, file: !7429, line: 709, type: !7496)
!7558 = !DILocalVariable(name: "reason", scope: !7552, file: !7429, line: 711, type: !113)
!7559 = !DILocation(line: 0, scope: !7552)
!7560 = !DILocation(line: 713, column: 2, scope: !7561)
!7561 = distinct !DILexicalBlock(scope: !7562, file: !7429, line: 713, column: 2)
!7562 = distinct !DILexicalBlock(scope: !7563, file: !7429, line: 713, column: 2)
!7563 = distinct !DILexicalBlock(scope: !7564, file: !7429, line: 713, column: 2)
!7564 = distinct !DILexicalBlock(scope: !7552, file: !7429, line: 713, column: 2)
!7565 = !DILocation(line: 732, column: 15, scope: !7552)
!7566 = !DILocation(line: 734, column: 12, scope: !7567)
!7567 = distinct !DILexicalBlock(scope: !7552, file: !7429, line: 734, column: 6)
!7568 = !DILocation(line: 734, column: 17, scope: !7567)
!7569 = !DILocation(line: 734, column: 41, scope: !7567)
!7570 = !DILocation(line: 734, column: 6, scope: !7552)
!7571 = !DILocation(line: 735, column: 3, scope: !7572)
!7572 = distinct !DILexicalBlock(scope: !7573, file: !7429, line: 735, column: 3)
!7573 = distinct !DILexicalBlock(scope: !7574, file: !7429, line: 735, column: 3)
!7574 = distinct !DILexicalBlock(scope: !7575, file: !7429, line: 735, column: 3)
!7575 = distinct !DILexicalBlock(scope: !7576, file: !7429, line: 735, column: 3)
!7576 = distinct !DILexicalBlock(scope: !7567, file: !7429, line: 734, column: 47)
!7577 = !DILocation(line: 736, column: 2, scope: !7576)
!7578 = !DILocation(line: 736, column: 19, scope: !7579)
!7579 = distinct !DILexicalBlock(scope: !7567, file: !7429, line: 736, column: 13)
!7580 = !DILocation(line: 736, column: 49, scope: !7579)
!7581 = !DILocation(line: 736, column: 13, scope: !7567)
!7582 = !DILocation(line: 737, column: 3, scope: !7583)
!7583 = distinct !DILexicalBlock(scope: !7584, file: !7429, line: 737, column: 3)
!7584 = distinct !DILexicalBlock(scope: !7585, file: !7429, line: 737, column: 3)
!7585 = distinct !DILexicalBlock(scope: !7586, file: !7429, line: 737, column: 3)
!7586 = distinct !DILexicalBlock(scope: !7587, file: !7429, line: 737, column: 3)
!7587 = distinct !DILexicalBlock(scope: !7579, file: !7429, line: 736, column: 55)
!7588 = !DILocation(line: 738, column: 2, scope: !7587)
!7589 = !DILocation(line: 738, column: 19, scope: !7590)
!7590 = distinct !DILexicalBlock(scope: !7579, file: !7429, line: 738, column: 13)
!7591 = !DILocation(line: 738, column: 24, scope: !7590)
!7592 = !DILocation(line: 738, column: 47, scope: !7590)
!7593 = !DILocation(line: 738, column: 13, scope: !7579)
!7594 = !DILocation(line: 739, column: 3, scope: !7595)
!7595 = distinct !DILexicalBlock(scope: !7596, file: !7429, line: 739, column: 3)
!7596 = distinct !DILexicalBlock(scope: !7597, file: !7429, line: 739, column: 3)
!7597 = distinct !DILexicalBlock(scope: !7598, file: !7429, line: 739, column: 3)
!7598 = distinct !DILexicalBlock(scope: !7599, file: !7429, line: 739, column: 3)
!7599 = distinct !DILexicalBlock(scope: !7590, file: !7429, line: 738, column: 53)
!7600 = !DILocation(line: 740, column: 7, scope: !7601)
!7601 = distinct !DILexicalBlock(scope: !7599, file: !7429, line: 740, column: 7)
!7602 = !DILocation(line: 740, column: 7, scope: !7599)
!7603 = !DILocation(line: 741, column: 4, scope: !7604)
!7604 = distinct !DILexicalBlock(scope: !7605, file: !7429, line: 741, column: 4)
!7605 = distinct !DILexicalBlock(scope: !7606, file: !7429, line: 741, column: 4)
!7606 = distinct !DILexicalBlock(scope: !7607, file: !7429, line: 741, column: 4)
!7607 = distinct !DILexicalBlock(scope: !7608, file: !7429, line: 741, column: 4)
!7608 = distinct !DILexicalBlock(scope: !7601, file: !7429, line: 740, column: 38)
!7609 = !DILocation(line: 742, column: 24, scope: !7608)
!7610 = !DILocation(line: 743, column: 3, scope: !7608)
!7611 = !DILocation(line: 743, column: 20, scope: !7612)
!7612 = distinct !DILexicalBlock(scope: !7601, file: !7429, line: 743, column: 14)
!7613 = !DILocation(line: 743, column: 25, scope: !7612)
!7614 = !DILocation(line: 743, column: 52, scope: !7612)
!7615 = !DILocation(line: 743, column: 14, scope: !7601)
!7616 = !DILocation(line: 744, column: 13, scope: !7617)
!7617 = distinct !DILexicalBlock(scope: !7612, file: !7429, line: 743, column: 58)
!7618 = !DILocation(line: 745, column: 3, scope: !7617)
!7619 = !DILocation(line: 745, column: 20, scope: !7620)
!7620 = distinct !DILexicalBlock(scope: !7612, file: !7429, line: 745, column: 14)
!7621 = !DILocation(line: 745, column: 25, scope: !7620)
!7622 = !DILocation(line: 745, column: 52, scope: !7620)
!7623 = !DILocation(line: 745, column: 14, scope: !7612)
!7624 = !DILocation(line: 746, column: 13, scope: !7625)
!7625 = distinct !DILexicalBlock(scope: !7620, file: !7429, line: 745, column: 58)
!7626 = !DILocation(line: 747, column: 3, scope: !7625)
!7627 = !DILocation(line: 747, column: 20, scope: !7628)
!7628 = distinct !DILexicalBlock(scope: !7620, file: !7429, line: 747, column: 14)
!7629 = !DILocation(line: 747, column: 52, scope: !7628)
!7630 = !DILocation(line: 747, column: 14, scope: !7620)
!7631 = !DILocation(line: 748, column: 13, scope: !7632)
!7632 = distinct !DILexicalBlock(scope: !7628, file: !7429, line: 747, column: 58)
!7633 = !DILocation(line: 753, column: 3, scope: !7632)
!7634 = !DILocation(line: 766, column: 2, scope: !7552)
!7635 = distinct !DISubprogram(name: "mem_manage_fault", scope: !7429, file: !7429, line: 229, type: !7528, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3109, retainedNodes: !7636)
!7636 = !{!7637, !7638, !7639, !7640, !7641, !7642, !7645}
!7637 = !DILocalVariable(name: "esf", arg: 1, scope: !7635, file: !7429, line: 229, type: !3137)
!7638 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !7635, file: !7429, line: 229, type: !108)
!7639 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7635, file: !7429, line: 230, type: !7496)
!7640 = !DILocalVariable(name: "reason", scope: !7635, file: !7429, line: 232, type: !113)
!7641 = !DILocalVariable(name: "mmfar", scope: !7635, file: !7429, line: 233, type: !113)
!7642 = !DILocalVariable(name: "temp", scope: !7643, file: !7429, line: 254, type: !113)
!7643 = distinct !DILexicalBlock(scope: !7644, file: !7429, line: 244, column: 48)
!7644 = distinct !DILexicalBlock(scope: !7635, file: !7429, line: 244, column: 6)
!7645 = !DILocalVariable(name: "min_stack_ptr", scope: !7646, file: !7429, line: 309, type: !113)
!7646 = distinct !DILexicalBlock(scope: !7647, file: !7429, line: 308, column: 43)
!7647 = distinct !DILexicalBlock(scope: !7648, file: !7429, line: 308, column: 7)
!7648 = distinct !DILexicalBlock(scope: !7649, file: !7429, line: 289, column: 40)
!7649 = distinct !DILexicalBlock(scope: !7635, file: !7429, line: 288, column: 6)
!7650 = !DILocation(line: 0, scope: !7635)
!7651 = !DILocation(line: 235, column: 2, scope: !7652)
!7652 = distinct !DILexicalBlock(scope: !7653, file: !7429, line: 235, column: 2)
!7653 = distinct !DILexicalBlock(scope: !7654, file: !7429, line: 235, column: 2)
!7654 = distinct !DILexicalBlock(scope: !7655, file: !7429, line: 235, column: 2)
!7655 = distinct !DILexicalBlock(scope: !7635, file: !7429, line: 235, column: 2)
!7656 = !DILocation(line: 237, column: 12, scope: !7657)
!7657 = distinct !DILexicalBlock(scope: !7635, file: !7429, line: 237, column: 6)
!7658 = !DILocation(line: 237, column: 17, scope: !7657)
!7659 = !DILocation(line: 237, column: 41, scope: !7657)
!7660 = !DILocation(line: 237, column: 6, scope: !7635)
!7661 = !DILocation(line: 238, column: 3, scope: !7662)
!7662 = distinct !DILexicalBlock(scope: !7663, file: !7429, line: 238, column: 3)
!7663 = distinct !DILexicalBlock(scope: !7664, file: !7429, line: 238, column: 3)
!7664 = distinct !DILexicalBlock(scope: !7665, file: !7429, line: 238, column: 3)
!7665 = distinct !DILexicalBlock(scope: !7666, file: !7429, line: 238, column: 3)
!7666 = distinct !DILexicalBlock(scope: !7657, file: !7429, line: 237, column: 47)
!7667 = !DILocation(line: 240, column: 2, scope: !7666)
!7668 = !DILocation(line: 241, column: 12, scope: !7669)
!7669 = distinct !DILexicalBlock(scope: !7635, file: !7429, line: 241, column: 6)
!7670 = !DILocation(line: 241, column: 17, scope: !7669)
!7671 = !DILocation(line: 241, column: 43, scope: !7669)
!7672 = !DILocation(line: 241, column: 6, scope: !7635)
!7673 = !DILocation(line: 242, column: 3, scope: !7674)
!7674 = distinct !DILexicalBlock(scope: !7675, file: !7429, line: 242, column: 3)
!7675 = distinct !DILexicalBlock(scope: !7676, file: !7429, line: 242, column: 3)
!7676 = distinct !DILexicalBlock(scope: !7677, file: !7429, line: 242, column: 3)
!7677 = distinct !DILexicalBlock(scope: !7678, file: !7429, line: 242, column: 3)
!7678 = distinct !DILexicalBlock(scope: !7669, file: !7429, line: 241, column: 49)
!7679 = !DILocation(line: 243, column: 2, scope: !7678)
!7680 = !DILocation(line: 244, column: 12, scope: !7644)
!7681 = !DILocation(line: 244, column: 17, scope: !7644)
!7682 = !DILocation(line: 244, column: 42, scope: !7644)
!7683 = !DILocation(line: 244, column: 6, scope: !7635)
!7684 = !DILocation(line: 245, column: 3, scope: !7685)
!7685 = distinct !DILexicalBlock(scope: !7686, file: !7429, line: 245, column: 3)
!7686 = distinct !DILexicalBlock(scope: !7687, file: !7429, line: 245, column: 3)
!7687 = distinct !DILexicalBlock(scope: !7688, file: !7429, line: 245, column: 3)
!7688 = distinct !DILexicalBlock(scope: !7643, file: !7429, line: 245, column: 3)
!7689 = !DILocation(line: 254, column: 24, scope: !7643)
!7690 = !DILocation(line: 0, scope: !7643)
!7691 = !DILocation(line: 256, column: 13, scope: !7692)
!7692 = distinct !DILexicalBlock(scope: !7643, file: !7429, line: 256, column: 7)
!7693 = !DILocation(line: 256, column: 18, scope: !7692)
!7694 = !DILocation(line: 256, column: 44, scope: !7692)
!7695 = !DILocation(line: 256, column: 7, scope: !7643)
!7696 = !DILocation(line: 258, column: 4, scope: !7697)
!7697 = distinct !DILexicalBlock(scope: !7698, file: !7429, line: 258, column: 4)
!7698 = distinct !DILexicalBlock(scope: !7699, file: !7429, line: 258, column: 4)
!7699 = distinct !DILexicalBlock(scope: !7700, file: !7429, line: 258, column: 4)
!7700 = distinct !DILexicalBlock(scope: !7701, file: !7429, line: 258, column: 4)
!7701 = distinct !DILexicalBlock(scope: !7692, file: !7429, line: 256, column: 50)
!7702 = !DILocation(line: 259, column: 24, scope: !7703)
!7703 = distinct !DILexicalBlock(scope: !7701, file: !7429, line: 259, column: 8)
!7704 = !DILocation(line: 259, column: 8, scope: !7701)
!7705 = !DILocation(line: 261, column: 15, scope: !7706)
!7706 = distinct !DILexicalBlock(scope: !7703, file: !7429, line: 259, column: 30)
!7707 = !DILocation(line: 262, column: 4, scope: !7706)
!7708 = !DILocation(line: 265, column: 12, scope: !7709)
!7709 = distinct !DILexicalBlock(scope: !7635, file: !7429, line: 265, column: 6)
!7710 = !DILocation(line: 265, column: 17, scope: !7709)
!7711 = !DILocation(line: 265, column: 42, scope: !7709)
!7712 = !DILocation(line: 265, column: 6, scope: !7635)
!7713 = !DILocation(line: 266, column: 3, scope: !7714)
!7714 = distinct !DILexicalBlock(scope: !7715, file: !7429, line: 266, column: 3)
!7715 = distinct !DILexicalBlock(scope: !7716, file: !7429, line: 266, column: 3)
!7716 = distinct !DILexicalBlock(scope: !7717, file: !7429, line: 266, column: 3)
!7717 = distinct !DILexicalBlock(scope: !7718, file: !7429, line: 266, column: 3)
!7718 = distinct !DILexicalBlock(scope: !7709, file: !7429, line: 265, column: 48)
!7719 = !DILocation(line: 267, column: 2, scope: !7718)
!7720 = !DILocation(line: 269, column: 12, scope: !7721)
!7721 = distinct !DILexicalBlock(scope: !7635, file: !7429, line: 269, column: 6)
!7722 = !DILocation(line: 269, column: 17, scope: !7721)
!7723 = !DILocation(line: 269, column: 41, scope: !7721)
!7724 = !DILocation(line: 269, column: 6, scope: !7635)
!7725 = !DILocation(line: 270, column: 3, scope: !7726)
!7726 = distinct !DILexicalBlock(scope: !7727, file: !7429, line: 270, column: 3)
!7727 = distinct !DILexicalBlock(scope: !7728, file: !7429, line: 270, column: 3)
!7728 = distinct !DILexicalBlock(scope: !7729, file: !7429, line: 270, column: 3)
!7729 = distinct !DILexicalBlock(scope: !7730, file: !7429, line: 270, column: 3)
!7730 = distinct !DILexicalBlock(scope: !7721, file: !7429, line: 269, column: 47)
!7731 = !DILocation(line: 272, column: 2, scope: !7730)
!7732 = !DILocation(line: 288, column: 12, scope: !7649)
!7733 = !DILocation(line: 288, column: 17, scope: !7649)
!7734 = !DILocation(line: 288, column: 41, scope: !7649)
!7735 = !DILocation(line: 289, column: 9, scope: !7649)
!7736 = !DILocation(line: 289, column: 14, scope: !7649)
!7737 = !DILocation(line: 288, column: 6, scope: !7635)
!7738 = !DILocation(line: 308, column: 12, scope: !7647)
!7739 = !DILocation(line: 308, column: 17, scope: !7647)
!7740 = !DILocation(line: 308, column: 7, scope: !7648)
!7741 = !DILocation(line: 310, column: 6, scope: !7646)
!7742 = !DILocation(line: 309, column: 29, scope: !7646)
!7743 = !DILocation(line: 0, scope: !7646)
!7744 = !DILocation(line: 312, column: 8, scope: !7745)
!7745 = distinct !DILexicalBlock(scope: !7646, file: !7429, line: 312, column: 8)
!7746 = !DILocation(line: 312, column: 8, scope: !7646)
!7747 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !7748, file: !7128, line: 1099, type: !113)
!7748 = distinct !DISubprogram(name: "__set_PSP", scope: !7128, file: !7128, line: 1099, type: !7219, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3109, retainedNodes: !7749)
!7749 = !{!7747}
!7750 = !DILocation(line: 0, scope: !7748, inlinedAt: !7751)
!7751 = distinct !DILocation(line: 338, column: 5, scope: !7752)
!7752 = distinct !DILexicalBlock(scope: !7745, file: !7429, line: 312, column: 23)
!7753 = !DILocation(line: 1101, column: 3, scope: !7748, inlinedAt: !7751)
!7754 = !{i64 3775703}
!7755 = !DILocation(line: 341, column: 4, scope: !7752)
!7756 = !DILocation(line: 360, column: 12, scope: !7757)
!7757 = distinct !DILexicalBlock(scope: !7635, file: !7429, line: 360, column: 6)
!7758 = !DILocation(line: 360, column: 17, scope: !7757)
!7759 = !DILocation(line: 360, column: 41, scope: !7757)
!7760 = !DILocation(line: 360, column: 6, scope: !7635)
!7761 = !DILocation(line: 361, column: 14, scope: !7762)
!7762 = distinct !DILexicalBlock(scope: !7757, file: !7429, line: 360, column: 47)
!7763 = !DILocation(line: 362, column: 2, scope: !7762)
!7764 = !DILocation(line: 366, column: 12, scope: !7635)
!7765 = !DILocation(line: 369, column: 15, scope: !7635)
!7766 = !DILocation(line: 371, column: 2, scope: !7635)
!7767 = distinct !DISubprogram(name: "bus_fault", scope: !7429, file: !7429, line: 383, type: !7768, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3109, retainedNodes: !7770)
!7768 = !DISubroutineType(types: !7769)
!7769 = !{!108, !3137, !108, !7496}
!7770 = !{!7771, !7772, !7773, !7774, !7775}
!7771 = !DILocalVariable(name: "esf", arg: 1, scope: !7767, file: !7429, line: 383, type: !3137)
!7772 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !7767, file: !7429, line: 383, type: !108)
!7773 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7767, file: !7429, line: 383, type: !7496)
!7774 = !DILocalVariable(name: "reason", scope: !7767, file: !7429, line: 385, type: !113)
!7775 = !DILocalVariable(name: "bfar", scope: !7776, file: !7429, line: 405, type: !113)
!7776 = distinct !DILexicalBlock(scope: !7777, file: !7429, line: 395, column: 42)
!7777 = distinct !DILexicalBlock(scope: !7767, file: !7429, line: 395, column: 6)
!7778 = !DILocation(line: 0, scope: !7767)
!7779 = !DILocation(line: 387, column: 2, scope: !7780)
!7780 = distinct !DILexicalBlock(scope: !7781, file: !7429, line: 387, column: 2)
!7781 = distinct !DILexicalBlock(scope: !7782, file: !7429, line: 387, column: 2)
!7782 = distinct !DILexicalBlock(scope: !7783, file: !7429, line: 387, column: 2)
!7783 = distinct !DILexicalBlock(scope: !7767, file: !7429, line: 387, column: 2)
!7784 = !DILocation(line: 389, column: 11, scope: !7785)
!7785 = distinct !DILexicalBlock(scope: !7767, file: !7429, line: 389, column: 6)
!7786 = !DILocation(line: 389, column: 16, scope: !7785)
!7787 = !DILocation(line: 389, column: 6, scope: !7767)
!7788 = !DILocation(line: 390, column: 3, scope: !7789)
!7789 = distinct !DILexicalBlock(scope: !7790, file: !7429, line: 390, column: 3)
!7790 = distinct !DILexicalBlock(scope: !7791, file: !7429, line: 390, column: 3)
!7791 = distinct !DILexicalBlock(scope: !7792, file: !7429, line: 390, column: 3)
!7792 = distinct !DILexicalBlock(scope: !7793, file: !7429, line: 390, column: 3)
!7793 = distinct !DILexicalBlock(scope: !7785, file: !7429, line: 389, column: 39)
!7794 = !DILocation(line: 391, column: 2, scope: !7793)
!7795 = !DILocation(line: 392, column: 11, scope: !7796)
!7796 = distinct !DILexicalBlock(scope: !7767, file: !7429, line: 392, column: 6)
!7797 = !DILocation(line: 392, column: 16, scope: !7796)
!7798 = !DILocation(line: 392, column: 6, scope: !7767)
!7799 = !DILocation(line: 393, column: 3, scope: !7800)
!7800 = distinct !DILexicalBlock(scope: !7801, file: !7429, line: 393, column: 3)
!7801 = distinct !DILexicalBlock(scope: !7802, file: !7429, line: 393, column: 3)
!7802 = distinct !DILexicalBlock(scope: !7803, file: !7429, line: 393, column: 3)
!7803 = distinct !DILexicalBlock(scope: !7804, file: !7429, line: 393, column: 3)
!7804 = distinct !DILexicalBlock(scope: !7796, file: !7429, line: 392, column: 41)
!7805 = !DILocation(line: 394, column: 2, scope: !7804)
!7806 = !DILocation(line: 395, column: 11, scope: !7777)
!7807 = !DILocation(line: 395, column: 16, scope: !7777)
!7808 = !DILocation(line: 395, column: 6, scope: !7767)
!7809 = !DILocation(line: 396, column: 3, scope: !7810)
!7810 = distinct !DILexicalBlock(scope: !7811, file: !7429, line: 396, column: 3)
!7811 = distinct !DILexicalBlock(scope: !7812, file: !7429, line: 396, column: 3)
!7812 = distinct !DILexicalBlock(scope: !7813, file: !7429, line: 396, column: 3)
!7813 = distinct !DILexicalBlock(scope: !7776, file: !7429, line: 396, column: 3)
!7814 = !DILocation(line: 405, column: 3, scope: !7776)
!7815 = !DILocation(line: 0, scope: !7776)
!7816 = !DILocation(line: 407, column: 13, scope: !7817)
!7817 = distinct !DILexicalBlock(scope: !7776, file: !7429, line: 407, column: 7)
!7818 = !DILocation(line: 407, column: 18, scope: !7817)
!7819 = !DILocation(line: 407, column: 44, scope: !7817)
!7820 = !DILocation(line: 407, column: 7, scope: !7776)
!7821 = !DILocation(line: 408, column: 4, scope: !7822)
!7822 = distinct !DILexicalBlock(scope: !7823, file: !7429, line: 408, column: 4)
!7823 = distinct !DILexicalBlock(scope: !7824, file: !7429, line: 408, column: 4)
!7824 = distinct !DILexicalBlock(scope: !7825, file: !7429, line: 408, column: 4)
!7825 = distinct !DILexicalBlock(scope: !7826, file: !7429, line: 408, column: 4)
!7826 = distinct !DILexicalBlock(scope: !7817, file: !7429, line: 407, column: 50)
!7827 = !DILocation(line: 409, column: 24, scope: !7828)
!7828 = distinct !DILexicalBlock(scope: !7826, file: !7429, line: 409, column: 8)
!7829 = !DILocation(line: 409, column: 8, scope: !7826)
!7830 = !DILocation(line: 411, column: 15, scope: !7831)
!7831 = distinct !DILexicalBlock(scope: !7828, file: !7429, line: 409, column: 30)
!7832 = !DILocation(line: 412, column: 4, scope: !7831)
!7833 = !DILocation(line: 415, column: 11, scope: !7834)
!7834 = distinct !DILexicalBlock(scope: !7767, file: !7429, line: 415, column: 6)
!7835 = !DILocation(line: 415, column: 16, scope: !7834)
!7836 = !DILocation(line: 415, column: 6, scope: !7767)
!7837 = !DILocation(line: 416, column: 3, scope: !7838)
!7838 = distinct !DILexicalBlock(scope: !7839, file: !7429, line: 416, column: 3)
!7839 = distinct !DILexicalBlock(scope: !7840, file: !7429, line: 416, column: 3)
!7840 = distinct !DILexicalBlock(scope: !7841, file: !7429, line: 416, column: 3)
!7841 = distinct !DILexicalBlock(scope: !7842, file: !7429, line: 416, column: 3)
!7842 = distinct !DILexicalBlock(scope: !7834, file: !7429, line: 415, column: 44)
!7843 = !DILocation(line: 417, column: 2, scope: !7842)
!7844 = !DILocation(line: 418, column: 12, scope: !7845)
!7845 = distinct !DILexicalBlock(scope: !7767, file: !7429, line: 418, column: 6)
!7846 = !DILocation(line: 418, column: 17, scope: !7845)
!7847 = !DILocation(line: 418, column: 41, scope: !7845)
!7848 = !DILocation(line: 418, column: 6, scope: !7767)
!7849 = !DILocation(line: 423, column: 18, scope: !7850)
!7850 = distinct !DILexicalBlock(scope: !7845, file: !7429, line: 423, column: 13)
!7851 = !DILocation(line: 423, column: 23, scope: !7850)
!7852 = !DILocation(line: 423, column: 13, scope: !7845)
!7853 = !DILocation(line: 0, scope: !7845)
!7854 = !DILocation(line: 524, column: 12, scope: !7767)
!7855 = !DILocation(line: 526, column: 15, scope: !7767)
!7856 = !DILocation(line: 528, column: 2, scope: !7767)
!7857 = distinct !DISubprogram(name: "usage_fault", scope: !7429, file: !7429, line: 539, type: !7858, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3109, retainedNodes: !7862)
!7858 = !DISubroutineType(types: !7859)
!7859 = !{!113, !7860}
!7860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7861, size: 32)
!7861 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3138)
!7862 = !{!7863, !7864}
!7863 = !DILocalVariable(name: "esf", arg: 1, scope: !7857, file: !7429, line: 539, type: !7860)
!7864 = !DILocalVariable(name: "reason", scope: !7857, file: !7429, line: 541, type: !113)
!7865 = !DILocation(line: 0, scope: !7857)
!7866 = !DILocation(line: 543, column: 2, scope: !7867)
!7867 = distinct !DILexicalBlock(scope: !7868, file: !7429, line: 543, column: 2)
!7868 = distinct !DILexicalBlock(scope: !7869, file: !7429, line: 543, column: 2)
!7869 = distinct !DILexicalBlock(scope: !7870, file: !7429, line: 543, column: 2)
!7870 = distinct !DILexicalBlock(scope: !7857, file: !7429, line: 543, column: 2)
!7871 = !DILocation(line: 546, column: 12, scope: !7872)
!7872 = distinct !DILexicalBlock(scope: !7857, file: !7429, line: 546, column: 6)
!7873 = !DILocation(line: 546, column: 17, scope: !7872)
!7874 = !DILocation(line: 546, column: 43, scope: !7872)
!7875 = !DILocation(line: 546, column: 6, scope: !7857)
!7876 = !DILocation(line: 547, column: 3, scope: !7877)
!7877 = distinct !DILexicalBlock(scope: !7878, file: !7429, line: 547, column: 3)
!7878 = distinct !DILexicalBlock(scope: !7879, file: !7429, line: 547, column: 3)
!7879 = distinct !DILexicalBlock(scope: !7880, file: !7429, line: 547, column: 3)
!7880 = distinct !DILexicalBlock(scope: !7881, file: !7429, line: 547, column: 3)
!7881 = distinct !DILexicalBlock(scope: !7872, file: !7429, line: 546, column: 49)
!7882 = !DILocation(line: 548, column: 2, scope: !7881)
!7883 = !DILocation(line: 549, column: 12, scope: !7884)
!7884 = distinct !DILexicalBlock(scope: !7857, file: !7429, line: 549, column: 6)
!7885 = !DILocation(line: 549, column: 17, scope: !7884)
!7886 = !DILocation(line: 549, column: 43, scope: !7884)
!7887 = !DILocation(line: 549, column: 6, scope: !7857)
!7888 = !DILocation(line: 550, column: 3, scope: !7889)
!7889 = distinct !DILexicalBlock(scope: !7890, file: !7429, line: 550, column: 3)
!7890 = distinct !DILexicalBlock(scope: !7891, file: !7429, line: 550, column: 3)
!7891 = distinct !DILexicalBlock(scope: !7892, file: !7429, line: 550, column: 3)
!7892 = distinct !DILexicalBlock(scope: !7893, file: !7429, line: 550, column: 3)
!7893 = distinct !DILexicalBlock(scope: !7884, file: !7429, line: 549, column: 49)
!7894 = !DILocation(line: 551, column: 2, scope: !7893)
!7895 = !DILocation(line: 567, column: 12, scope: !7896)
!7896 = distinct !DILexicalBlock(scope: !7857, file: !7429, line: 567, column: 6)
!7897 = !DILocation(line: 567, column: 17, scope: !7896)
!7898 = !DILocation(line: 567, column: 38, scope: !7896)
!7899 = !DILocation(line: 567, column: 6, scope: !7857)
!7900 = !DILocation(line: 568, column: 3, scope: !7901)
!7901 = distinct !DILexicalBlock(scope: !7902, file: !7429, line: 568, column: 3)
!7902 = distinct !DILexicalBlock(scope: !7903, file: !7429, line: 568, column: 3)
!7903 = distinct !DILexicalBlock(scope: !7904, file: !7429, line: 568, column: 3)
!7904 = distinct !DILexicalBlock(scope: !7905, file: !7429, line: 568, column: 3)
!7905 = distinct !DILexicalBlock(scope: !7896, file: !7429, line: 567, column: 44)
!7906 = !DILocation(line: 569, column: 2, scope: !7905)
!7907 = !DILocation(line: 570, column: 12, scope: !7908)
!7908 = distinct !DILexicalBlock(scope: !7857, file: !7429, line: 570, column: 6)
!7909 = !DILocation(line: 570, column: 17, scope: !7908)
!7910 = !DILocation(line: 570, column: 39, scope: !7908)
!7911 = !DILocation(line: 570, column: 6, scope: !7857)
!7912 = !DILocation(line: 571, column: 3, scope: !7913)
!7913 = distinct !DILexicalBlock(scope: !7914, file: !7429, line: 571, column: 3)
!7914 = distinct !DILexicalBlock(scope: !7915, file: !7429, line: 571, column: 3)
!7915 = distinct !DILexicalBlock(scope: !7916, file: !7429, line: 571, column: 3)
!7916 = distinct !DILexicalBlock(scope: !7917, file: !7429, line: 571, column: 3)
!7917 = distinct !DILexicalBlock(scope: !7908, file: !7429, line: 570, column: 45)
!7918 = !DILocation(line: 572, column: 2, scope: !7917)
!7919 = !DILocation(line: 573, column: 12, scope: !7920)
!7920 = distinct !DILexicalBlock(scope: !7857, file: !7429, line: 573, column: 6)
!7921 = !DILocation(line: 573, column: 17, scope: !7920)
!7922 = !DILocation(line: 573, column: 42, scope: !7920)
!7923 = !DILocation(line: 573, column: 6, scope: !7857)
!7924 = !DILocation(line: 574, column: 3, scope: !7925)
!7925 = distinct !DILexicalBlock(scope: !7926, file: !7429, line: 574, column: 3)
!7926 = distinct !DILexicalBlock(scope: !7927, file: !7429, line: 574, column: 3)
!7927 = distinct !DILexicalBlock(scope: !7928, file: !7429, line: 574, column: 3)
!7928 = distinct !DILexicalBlock(scope: !7929, file: !7429, line: 574, column: 3)
!7929 = distinct !DILexicalBlock(scope: !7920, file: !7429, line: 573, column: 48)
!7930 = !DILocation(line: 575, column: 2, scope: !7929)
!7931 = !DILocation(line: 576, column: 12, scope: !7932)
!7932 = distinct !DILexicalBlock(scope: !7857, file: !7429, line: 576, column: 6)
!7933 = !DILocation(line: 576, column: 17, scope: !7932)
!7934 = !DILocation(line: 576, column: 44, scope: !7932)
!7935 = !DILocation(line: 576, column: 6, scope: !7857)
!7936 = !DILocation(line: 577, column: 3, scope: !7937)
!7937 = distinct !DILexicalBlock(scope: !7938, file: !7429, line: 577, column: 3)
!7938 = distinct !DILexicalBlock(scope: !7939, file: !7429, line: 577, column: 3)
!7939 = distinct !DILexicalBlock(scope: !7940, file: !7429, line: 577, column: 3)
!7940 = distinct !DILexicalBlock(scope: !7941, file: !7429, line: 577, column: 3)
!7941 = distinct !DILexicalBlock(scope: !7932, file: !7429, line: 576, column: 50)
!7942 = !DILocation(line: 578, column: 2, scope: !7941)
!7943 = !DILocation(line: 581, column: 12, scope: !7857)
!7944 = !DILocation(line: 583, column: 2, scope: !7857)
!7945 = distinct !DISubprogram(name: "debug_monitor", scope: !7429, file: !7429, line: 632, type: !7946, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3109, retainedNodes: !7948)
!7946 = !DISubroutineType(types: !7947)
!7947 = !{null, !3137, !7496}
!7948 = !{!7949, !7950}
!7949 = !DILocalVariable(name: "esf", arg: 1, scope: !7945, file: !7429, line: 632, type: !3137)
!7950 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7945, file: !7429, line: 632, type: !7496)
!7951 = !DILocation(line: 0, scope: !7945)
!7952 = !DILocation(line: 634, column: 15, scope: !7945)
!7953 = !DILocation(line: 636, column: 2, scope: !7954)
!7954 = distinct !DILexicalBlock(scope: !7955, file: !7429, line: 636, column: 2)
!7955 = distinct !DILexicalBlock(scope: !7956, file: !7429, line: 636, column: 2)
!7956 = distinct !DILexicalBlock(scope: !7957, file: !7429, line: 636, column: 2)
!7957 = distinct !DILexicalBlock(scope: !7945, file: !7429, line: 636, column: 2)
!7958 = !DILocation(line: 652, column: 1, scope: !7945)
!7959 = distinct !DISubprogram(name: "reserved_exception", scope: !7429, file: !7429, line: 776, type: !7960, scopeLine: 777, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3109, retainedNodes: !7962)
!7960 = !DISubroutineType(types: !7961)
!7961 = !{null, !7860, !108}
!7962 = !{!7963, !7964}
!7963 = !DILocalVariable(name: "esf", arg: 1, scope: !7959, file: !7429, line: 776, type: !7860)
!7964 = !DILocalVariable(name: "fault", arg: 2, scope: !7959, file: !7429, line: 776, type: !108)
!7965 = !DILocation(line: 0, scope: !7959)
!7966 = !DILocation(line: 780, column: 2, scope: !7967)
!7967 = distinct !DILexicalBlock(scope: !7968, file: !7429, line: 780, column: 2)
!7968 = distinct !DILexicalBlock(scope: !7969, file: !7429, line: 780, column: 2)
!7969 = distinct !DILexicalBlock(scope: !7970, file: !7429, line: 780, column: 2)
!7970 = distinct !DILexicalBlock(scope: !7959, file: !7429, line: 780, column: 2)
!7971 = !DILocation(line: 783, column: 1, scope: !7959)
!7972 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !7429, file: !7429, line: 658, type: !7973, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3109, retainedNodes: !7975)
!7973 = !DISubroutineType(types: !7974)
!7974 = !{!422, !3137}
!7975 = !{!7976, !7977, !7978}
!7976 = !DILocalVariable(name: "esf", arg: 1, scope: !7972, file: !7429, line: 658, type: !3137)
!7977 = !DILocalVariable(name: "ret_addr", scope: !7972, file: !7429, line: 660, type: !3180)
!7978 = !DILocalVariable(name: "fault_insn", scope: !7972, file: !7429, line: 686, type: !168)
!7979 = !DILocation(line: 0, scope: !7972)
!7980 = !DILocation(line: 660, column: 46, scope: !7972)
!7981 = !DILocation(line: 660, column: 23, scope: !7972)
!7982 = !DILocation(line: 682, column: 11, scope: !7972)
!7983 = !DILocation(line: 271, column: 3, scope: !7984, inlinedAt: !7985)
!7984 = distinct !DISubprogram(name: "__DSB", scope: !7128, file: !7128, line: 269, type: !3472, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3109, retainedNodes: !437)
!7985 = distinct !DILocation(line: 683, column: 2, scope: !7972)
!7986 = !{i64 3751838}
!7987 = !DILocation(line: 260, column: 3, scope: !7988, inlinedAt: !7989)
!7988 = distinct !DISubprogram(name: "__ISB", scope: !7128, file: !7128, line: 258, type: !3472, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3109, retainedNodes: !437)
!7989 = distinct !DILocation(line: 684, column: 2, scope: !7972)
!7990 = !{i64 3751555}
!7991 = !DILocation(line: 686, column: 35, scope: !7972)
!7992 = !DILocation(line: 686, column: 24, scope: !7972)
!7993 = !DILocation(line: 688, column: 11, scope: !7972)
!7994 = !DILocation(line: 271, column: 3, scope: !7984, inlinedAt: !7995)
!7995 = distinct !DILocation(line: 689, column: 2, scope: !7972)
!7996 = !DILocation(line: 260, column: 3, scope: !7988, inlinedAt: !7997)
!7997 = distinct !DILocation(line: 690, column: 2, scope: !7972)
!7998 = !DILocation(line: 693, column: 45, scope: !7999)
!7999 = distinct !DILexicalBlock(scope: !7972, file: !7429, line: 693, column: 6)
!8000 = !DILocation(line: 699, column: 1, scope: !7972)
!8001 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !7429, file: !7429, line: 1107, type: !3472, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3109, retainedNodes: !437)
!8002 = !DILocation(line: 1111, column: 11, scope: !8001)
!8003 = !DILocation(line: 1136, column: 1, scope: !8001)
!8004 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !8005, file: !8005, line: 26, type: !3472, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3181, retainedNodes: !8006)
!8005 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8006 = !{!8007}
!8007 = !DILocalVariable(name: "irq", scope: !8004, file: !8005, line: 28, type: !108)
!8008 = !DILocation(line: 0, scope: !8004)
!8009 = !DILocation(line: 30, column: 2, scope: !8010)
!8010 = distinct !DILexicalBlock(scope: !8004, file: !8005, line: 30, column: 2)
!8011 = !DILocation(line: 31, column: 3, scope: !8012)
!8012 = distinct !DILexicalBlock(scope: !8013, file: !8005, line: 30, column: 39)
!8013 = distinct !DILexicalBlock(scope: !8010, file: !8005, line: 30, column: 2)
!8014 = !DILocation(line: 30, column: 35, scope: !8013)
!8015 = !DILocation(line: 30, column: 13, scope: !8013)
!8016 = distinct !{!8016, !8009, !8017}
!8017 = !DILocation(line: 32, column: 2, scope: !8010)
!8018 = !DILocation(line: 33, column: 1, scope: !8004)
!8019 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !794, file: !794, line: 1814, type: !7162, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3181, retainedNodes: !8020)
!8020 = !{!8021, !8022}
!8021 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8019, file: !794, line: 1814, type: !1183)
!8022 = !DILocalVariable(name: "priority", arg: 2, scope: !8019, file: !794, line: 1814, type: !113)
!8023 = !DILocation(line: 0, scope: !8019)
!8024 = !DILocation(line: 1816, column: 7, scope: !8019)
!8025 = !DILocation(line: 0, scope: !8026)
!8026 = distinct !DILexicalBlock(scope: !8019, file: !794, line: 1816, column: 7)
!8027 = !DILocation(line: 1824, column: 1, scope: !8019)
!8028 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !8029, file: !8029, line: 27, type: !8030, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !8133)
!8029 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8030 = !DISubroutineType(types: !8031)
!8031 = !{null, !8032}
!8032 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !651, line: 347, baseType: !8033)
!8033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8034, size: 32)
!8034 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !651, line: 245, size: 1024, elements: !8035)
!8035 = !{!8036, !8094, !8106, !8107, !8108, !8109, !8115, !8128}
!8036 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !8034, file: !651, line: 247, baseType: !8037, size: 384)
!8037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !651, line: 57, size: 384, elements: !8038)
!8038 = !{!8039, !8063, !8070, !8071, !8072, !8081, !8082, !8083}
!8039 = !DIDerivedType(tag: DW_TAG_member, scope: !8037, file: !651, line: 60, baseType: !8040, size: 64)
!8040 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8037, file: !651, line: 60, size: 64, elements: !8041)
!8041 = !{!8042, !8057}
!8042 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !8040, file: !651, line: 61, baseType: !8043, size: 64)
!8043 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !367, line: 49, baseType: !8044)
!8044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !8045)
!8045 = !{!8046, !8052}
!8046 = !DIDerivedType(tag: DW_TAG_member, scope: !8044, file: !367, line: 38, baseType: !8047, size: 32)
!8047 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8044, file: !367, line: 38, size: 32, elements: !8048)
!8048 = !{!8049, !8051}
!8049 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8047, file: !367, line: 39, baseType: !8050, size: 32)
!8050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8044, size: 32)
!8051 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8047, file: !367, line: 40, baseType: !8050, size: 32)
!8052 = !DIDerivedType(tag: DW_TAG_member, scope: !8044, file: !367, line: 42, baseType: !8053, size: 32, offset: 32)
!8053 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8044, file: !367, line: 42, size: 32, elements: !8054)
!8054 = !{!8055, !8056}
!8055 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8053, file: !367, line: 43, baseType: !8050, size: 32)
!8056 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8053, file: !367, line: 44, baseType: !8050, size: 32)
!8057 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !8040, file: !651, line: 62, baseType: !8058, size: 64)
!8058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !676, line: 49, size: 64, elements: !8059)
!8059 = !{!8060}
!8060 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !8058, file: !676, line: 50, baseType: !8061, size: 64)
!8061 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8062, size: 64, elements: !681)
!8062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8058, size: 32)
!8063 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !8037, file: !651, line: 68, baseType: !8064, size: 32, offset: 64)
!8064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8065, size: 32)
!8065 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !363, line: 233, baseType: !8066)
!8066 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 231, size: 64, elements: !8067)
!8067 = !{!8068}
!8068 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !8066, file: !363, line: 232, baseType: !8069, size: 64)
!8069 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !8044)
!8070 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !8037, file: !651, line: 71, baseType: !164, size: 8, offset: 96)
!8071 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !8037, file: !651, line: 74, baseType: !164, size: 8, offset: 104)
!8072 = !DIDerivedType(tag: DW_TAG_member, scope: !8037, file: !651, line: 90, baseType: !8073, size: 16, offset: 112)
!8073 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8037, file: !651, line: 90, size: 16, elements: !8074)
!8074 = !{!8075, !8080}
!8075 = !DIDerivedType(tag: DW_TAG_member, scope: !8073, file: !651, line: 91, baseType: !8076, size: 16)
!8076 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8073, file: !651, line: 91, size: 16, elements: !8077)
!8077 = !{!8078, !8079}
!8078 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !8076, file: !651, line: 96, baseType: !699, size: 8)
!8079 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !8076, file: !651, line: 97, baseType: !164, size: 8, offset: 8)
!8080 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !8073, file: !651, line: 100, baseType: !168, size: 16)
!8081 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !8037, file: !651, line: 107, baseType: !113, size: 32, offset: 128)
!8082 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !8037, file: !651, line: 127, baseType: !104, size: 32, offset: 160)
!8083 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !8037, file: !651, line: 131, baseType: !8084, size: 192, offset: 192)
!8084 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !363, line: 244, size: 192, elements: !8085)
!8085 = !{!8086, !8087, !8093}
!8086 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !8084, file: !363, line: 245, baseType: !8043, size: 64)
!8087 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !8084, file: !363, line: 246, baseType: !8088, size: 32, offset: 64)
!8088 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !363, line: 242, baseType: !8089)
!8089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8090, size: 32)
!8090 = !DISubroutineType(types: !8091)
!8091 = !{null, !8092}
!8092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8084, size: 32)
!8093 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !8084, file: !363, line: 249, baseType: !111, size: 64, offset: 128)
!8094 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !8034, file: !651, line: 250, baseType: !8095, size: 288, offset: 384)
!8095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !718, line: 25, size: 288, elements: !8096)
!8096 = !{!8097, !8098, !8099, !8100, !8101, !8102, !8103, !8104, !8105}
!8097 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8095, file: !718, line: 26, baseType: !113, size: 32)
!8098 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8095, file: !718, line: 27, baseType: !113, size: 32, offset: 32)
!8099 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8095, file: !718, line: 28, baseType: !113, size: 32, offset: 64)
!8100 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8095, file: !718, line: 29, baseType: !113, size: 32, offset: 96)
!8101 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8095, file: !718, line: 30, baseType: !113, size: 32, offset: 128)
!8102 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8095, file: !718, line: 31, baseType: !113, size: 32, offset: 160)
!8103 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8095, file: !718, line: 32, baseType: !113, size: 32, offset: 192)
!8104 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8095, file: !718, line: 33, baseType: !113, size: 32, offset: 224)
!8105 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8095, file: !718, line: 34, baseType: !113, size: 32, offset: 256)
!8106 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !8034, file: !651, line: 253, baseType: !104, size: 32, offset: 672)
!8107 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !8034, file: !651, line: 256, baseType: !8065, size: 64, offset: 704)
!8108 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !8034, file: !651, line: 294, baseType: !108, size: 32, offset: 768)
!8109 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !8034, file: !651, line: 300, baseType: !8110, size: 96, offset: 800)
!8110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !651, line: 149, size: 96, elements: !8111)
!8111 = !{!8112, !8113, !8114}
!8112 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !8110, file: !651, line: 153, baseType: !22, size: 32)
!8113 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8110, file: !651, line: 162, baseType: !439, size: 32, offset: 32)
!8114 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !8110, file: !651, line: 168, baseType: !439, size: 32, offset: 64)
!8115 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !8034, file: !651, line: 325, baseType: !8116, size: 32, offset: 896)
!8116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8117, size: 32)
!8117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !359, line: 5073, size: 160, elements: !8118)
!8118 = !{!8119, !8125, !8126}
!8119 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8117, file: !359, line: 5074, baseType: !8120, size: 96)
!8120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !744, line: 56, size: 96, elements: !8121)
!8121 = !{!8122, !8123, !8124}
!8122 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8120, file: !744, line: 57, baseType: !747, size: 32)
!8123 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !8120, file: !744, line: 58, baseType: !104, size: 32, offset: 32)
!8124 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !8120, file: !744, line: 59, baseType: !439, size: 32, offset: 64)
!8125 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8117, file: !359, line: 5075, baseType: !8065, size: 64, offset: 96)
!8126 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8117, file: !359, line: 5076, baseType: !8127, offset: 160)
!8127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!8128 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !8034, file: !651, line: 343, baseType: !8129, size: 64, offset: 928)
!8129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !718, line: 60, size: 64, elements: !8130)
!8130 = !{!8131, !8132}
!8131 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !8129, file: !718, line: 63, baseType: !113, size: 32)
!8132 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !8129, file: !718, line: 66, baseType: !113, size: 32, offset: 32)
!8133 = !{!8134}
!8134 = !DILocalVariable(name: "thread", arg: 1, scope: !8028, file: !8029, line: 27, type: !8032)
!8135 = !DILocation(line: 0, scope: !8028)
!8136 = !DILocation(line: 29, column: 6, scope: !8137)
!8137 = distinct !DILexicalBlock(scope: !8028, file: !8029, line: 29, column: 6)
!8138 = !DILocation(line: 29, column: 15, scope: !8137)
!8139 = !DILocation(line: 29, column: 6, scope: !8028)
!8140 = !DILocation(line: 1031, column: 3, scope: !8141, inlinedAt: !8144)
!8141 = distinct !DISubprogram(name: "__get_IPSR", scope: !7128, file: !7128, line: 1027, type: !7209, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !8142)
!8142 = !{!8143}
!8143 = !DILocalVariable(name: "result", scope: !8141, file: !7128, line: 1029, type: !113)
!8144 = distinct !DILocation(line: 48, column: 10, scope: !8145, inlinedAt: !8149)
!8145 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8146, file: !8146, line: 46, type: !8147, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !437)
!8146 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8147 = !DISubroutineType(types: !8148)
!8148 = !{!422}
!8149 = distinct !DILocation(line: 30, column: 7, scope: !8150)
!8150 = distinct !DILexicalBlock(scope: !8151, file: !8029, line: 30, column: 7)
!8151 = distinct !DILexicalBlock(scope: !8137, file: !8029, line: 29, column: 26)
!8152 = !{i64 3740686}
!8153 = !DILocation(line: 0, scope: !8141, inlinedAt: !8144)
!8154 = !DILocation(line: 48, column: 9, scope: !8145, inlinedAt: !8149)
!8155 = !DILocation(line: 30, column: 7, scope: !8151)
!8156 = !DILocation(line: 42, column: 14, scope: !8157)
!8157 = distinct !DILexicalBlock(scope: !8150, file: !8029, line: 30, column: 25)
!8158 = !DILocation(line: 48, column: 15, scope: !8157)
!8159 = !DILocation(line: 49, column: 3, scope: !8157)
!8160 = !DILocation(line: 52, column: 2, scope: !8028)
!8161 = !DILocation(line: 53, column: 1, scope: !8028)
!8162 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !646, file: !646, line: 127, type: !3472, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !639, retainedNodes: !437)
!8163 = !DILocation(line: 134, column: 2, scope: !8162)
!8164 = !DILocation(line: 156, column: 1, scope: !8162)
!8165 = !DILocation(line: 0, scope: !645)
!8166 = !DILocation(line: 289, column: 36, scope: !8167)
!8167 = distinct !DILexicalBlock(scope: !645, file: !646, line: 285, column: 2)
!8168 = !DILocation(line: 289, column: 42, scope: !8167)
!8169 = !DILocation(line: 300, column: 36, scope: !645)
!8170 = !DILocation(line: 301, column: 35, scope: !645)
!8171 = !DILocation(line: 302, column: 37, scope: !645)
!8172 = !DILocation(line: 311, column: 2, scope: !645)
!8173 = !DILocation(line: 316, column: 1, scope: !645)
!8174 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !822, file: !822, line: 180, type: !3472, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !789, retainedNodes: !437)
!8175 = !DILocation(line: 188, column: 12, scope: !8174)
!8176 = !DILocation(line: 271, column: 3, scope: !8177, inlinedAt: !8178)
!8177 = distinct !DISubprogram(name: "__DSB", scope: !7128, file: !7128, line: 269, type: !3472, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !789, retainedNodes: !437)
!8178 = distinct !DILocation(line: 192, column: 2, scope: !8174)
!8179 = !{i64 3929623}
!8180 = !DILocation(line: 260, column: 3, scope: !8181, inlinedAt: !8182)
!8181 = distinct !DISubprogram(name: "__ISB", scope: !7128, file: !7128, line: 258, type: !3472, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !789, retainedNodes: !437)
!8182 = distinct !DILocation(line: 193, column: 2, scope: !8174)
!8183 = !{i64 3929340}
!8184 = !DILocation(line: 194, column: 1, scope: !8174)
!8185 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !822, file: !822, line: 199, type: !3472, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !789, retainedNodes: !437)
!8186 = !DILocation(line: 282, column: 3, scope: !8187, inlinedAt: !8188)
!8187 = distinct !DISubprogram(name: "__DMB", scope: !7128, file: !7128, line: 280, type: !3472, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !789, retainedNodes: !437)
!8188 = distinct !DILocation(line: 202, column: 2, scope: !8185)
!8189 = !{i64 3929899}
!8190 = !DILocation(line: 205, column: 12, scope: !8185)
!8191 = !DILocation(line: 206, column: 1, scope: !8185)
!8192 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !822, file: !822, line: 275, type: !8193, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !789, retainedNodes: !8206)
!8193 = !DISubroutineType(types: !8194)
!8194 = !{null, !8195, !2229, !7396, !7396}
!8195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8196, size: 32)
!8196 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8197)
!8197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !766, line: 52, size: 96, elements: !8198)
!8198 = !{!8199, !8200, !8201}
!8199 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !8197, file: !766, line: 53, baseType: !22, size: 32)
!8200 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8197, file: !766, line: 54, baseType: !439, size: 32, offset: 32)
!8201 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !8197, file: !766, line: 55, baseType: !8202, size: 32, offset: 64)
!8202 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !772, line: 151, baseType: !8203)
!8203 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !772, line: 149, size: 32, elements: !8204)
!8204 = !{!8205}
!8205 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !8203, file: !772, line: 150, baseType: !113, size: 32)
!8206 = !{!8207, !8208, !8209, !8210}
!8207 = !DILocalVariable(name: "static_regions", arg: 1, scope: !8192, file: !822, line: 276, type: !8195)
!8208 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8192, file: !822, line: 276, type: !2229)
!8209 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !8192, file: !822, line: 277, type: !7396)
!8210 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !8192, file: !822, line: 277, type: !7396)
!8211 = !DILocation(line: 0, scope: !8192)
!8212 = !DILocation(line: 279, column: 6, scope: !8213)
!8213 = distinct !DILexicalBlock(scope: !8192, file: !822, line: 279, column: 6)
!8214 = !DILocation(line: 285, column: 1, scope: !8192)
!8215 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !8216, file: !8216, line: 220, type: !8217, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !789, retainedNodes: !8219)
!8216 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8217 = !DISubroutineType(types: !8218)
!8218 = !{!108, !8195, !2229, !7396, !7396}
!8219 = !{!8220, !8221, !8222, !8223, !8224}
!8220 = !DILocalVariable(name: "static_regions", arg: 1, scope: !8215, file: !8216, line: 221, type: !8195)
!8221 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8215, file: !8216, line: 221, type: !2229)
!8222 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !8215, file: !8216, line: 222, type: !7396)
!8223 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !8215, file: !8216, line: 223, type: !7396)
!8224 = !DILocalVariable(name: "mpu_reg_index", scope: !8215, file: !8216, line: 225, type: !108)
!8225 = !DILocation(line: 0, scope: !8215)
!8226 = !DILocation(line: 225, column: 22, scope: !8215)
!8227 = !DILocation(line: 233, column: 18, scope: !8215)
!8228 = !DILocation(line: 236, column: 23, scope: !8215)
!8229 = !DILocation(line: 236, column: 21, scope: !8215)
!8230 = !DILocation(line: 238, column: 2, scope: !8215)
!8231 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !822, file: !822, line: 105, type: !8232, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !789, retainedNodes: !8234)
!8232 = !DISubroutineType(types: !8233)
!8233 = !{!108, !8195, !164, !164, !422}
!8234 = !{!8235, !8236, !8237, !8238, !8239, !8240}
!8235 = !DILocalVariable(name: "regions", arg: 1, scope: !8231, file: !822, line: 106, type: !8195)
!8236 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8231, file: !822, line: 106, type: !164)
!8237 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !8231, file: !822, line: 106, type: !164)
!8238 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !8231, file: !822, line: 107, type: !422)
!8239 = !DILocalVariable(name: "i", scope: !8231, file: !822, line: 109, type: !108)
!8240 = !DILocalVariable(name: "reg_index", scope: !8231, file: !822, line: 110, type: !108)
!8241 = !DILocation(line: 0, scope: !8231)
!8242 = !DILocation(line: 110, column: 18, scope: !8231)
!8243 = !DILocation(line: 112, column: 16, scope: !8244)
!8244 = distinct !DILexicalBlock(scope: !8245, file: !822, line: 112, column: 2)
!8245 = distinct !DILexicalBlock(scope: !8231, file: !822, line: 112, column: 2)
!8246 = !DILocation(line: 112, column: 2, scope: !8245)
!8247 = !DILocation(line: 113, column: 7, scope: !8248)
!8248 = distinct !DILexicalBlock(scope: !8249, file: !822, line: 113, column: 7)
!8249 = distinct !DILexicalBlock(scope: !8244, file: !822, line: 112, column: 36)
!8250 = !DILocation(line: 113, column: 18, scope: !8248)
!8251 = !DILocation(line: 113, column: 23, scope: !8248)
!8252 = !DILocation(line: 113, column: 7, scope: !8249)
!8253 = !DILocation(line: 118, column: 23, scope: !8254)
!8254 = distinct !DILexicalBlock(scope: !8249, file: !822, line: 118, column: 7)
!8255 = !DILocation(line: 119, column: 7, scope: !8254)
!8256 = !DILocation(line: 118, column: 7, scope: !8249)
!8257 = !DILocation(line: 120, column: 4, scope: !8258)
!8258 = distinct !DILexicalBlock(scope: !8259, file: !822, line: 120, column: 4)
!8259 = distinct !DILexicalBlock(scope: !8260, file: !822, line: 120, column: 4)
!8260 = distinct !DILexicalBlock(scope: !8261, file: !822, line: 120, column: 4)
!8261 = distinct !DILexicalBlock(scope: !8262, file: !822, line: 120, column: 4)
!8262 = distinct !DILexicalBlock(scope: !8254, file: !822, line: 119, column: 45)
!8263 = !DILocation(line: 121, column: 4, scope: !8262)
!8264 = !DILocation(line: 124, column: 36, scope: !8249)
!8265 = !DILocation(line: 124, column: 15, scope: !8249)
!8266 = !DILocation(line: 126, column: 17, scope: !8267)
!8267 = distinct !DILexicalBlock(scope: !8249, file: !822, line: 126, column: 7)
!8268 = !DILocation(line: 126, column: 7, scope: !8249)
!8269 = !DILocation(line: 131, column: 12, scope: !8249)
!8270 = !DILocation(line: 132, column: 2, scope: !8249)
!8271 = !DILocation(line: 112, column: 32, scope: !8244)
!8272 = distinct !{!8272, !8246, !8273}
!8273 = !DILocation(line: 132, column: 2, scope: !8245)
!8274 = !DILocation(line: 135, column: 1, scope: !8231)
!8275 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !8216, file: !8216, line: 63, type: !8276, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !789, retainedNodes: !8278)
!8276 = !DISubroutineType(types: !8277)
!8277 = !{!108, !8195}
!8278 = !{!8279, !8280}
!8279 = !DILocalVariable(name: "part", arg: 1, scope: !8275, file: !8216, line: 63, type: !8195)
!8280 = !DILocalVariable(name: "partition_is_valid", scope: !8275, file: !8216, line: 70, type: !108)
!8281 = !DILocation(line: 0, scope: !8275)
!8282 = !DILocation(line: 71, column: 11, scope: !8275)
!8283 = !DILocation(line: 71, column: 37, scope: !8275)
!8284 = !{i32 0, i32 33}
!8285 = !DILocation(line: 72, column: 3, scope: !8275)
!8286 = !DILocation(line: 71, column: 30, scope: !8275)
!8287 = !DILocation(line: 75, column: 11, scope: !8275)
!8288 = !DILocation(line: 75, column: 17, scope: !8275)
!8289 = !DILocation(line: 75, column: 38, scope: !8275)
!8290 = !DILocation(line: 77, column: 2, scope: !8275)
!8291 = distinct !DISubprogram(name: "mpu_configure_region", scope: !822, file: !822, line: 79, type: !8292, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !789, retainedNodes: !8294)
!8292 = !DISubroutineType(types: !8293)
!8293 = !{!108, !2229, !8195}
!8294 = !{!8295, !8296, !8297}
!8295 = !DILocalVariable(name: "index", arg: 1, scope: !8291, file: !822, line: 79, type: !2229)
!8296 = !DILocalVariable(name: "new_region", arg: 2, scope: !8291, file: !822, line: 80, type: !8195)
!8297 = !DILocalVariable(name: "region_conf", scope: !8291, file: !822, line: 82, type: !811)
!8298 = !DILocation(line: 0, scope: !8291)
!8299 = !DILocation(line: 82, column: 2, scope: !8291)
!8300 = !DILocation(line: 82, column: 24, scope: !8291)
!8301 = !DILocation(line: 87, column: 33, scope: !8291)
!8302 = !DILocation(line: 87, column: 14, scope: !8291)
!8303 = !DILocation(line: 87, column: 19, scope: !8291)
!8304 = !DILocation(line: 91, column: 55, scope: !8291)
!8305 = !DILocation(line: 92, column: 16, scope: !8291)
!8306 = !DILocation(line: 92, column: 53, scope: !8291)
!8307 = !DILocation(line: 91, column: 2, scope: !8291)
!8308 = !DILocation(line: 95, column: 9, scope: !8291)
!8309 = !DILocation(line: 97, column: 1, scope: !8291)
!8310 = !DILocation(line: 95, column: 2, scope: !8291)
!8311 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !8216, file: !8216, line: 113, type: !8312, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !789, retainedNodes: !8317)
!8312 = !DISubroutineType(types: !8313)
!8313 = !{null, !8314, !8315, !113, !113}
!8314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !817, size: 32)
!8315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8316, size: 32)
!8316 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8202)
!8317 = !{!8318, !8319, !8320, !8321}
!8318 = !DILocalVariable(name: "p_attr", arg: 1, scope: !8311, file: !8216, line: 114, type: !8314)
!8319 = !DILocalVariable(name: "attr", arg: 2, scope: !8311, file: !8216, line: 115, type: !8315)
!8320 = !DILocalVariable(name: "base", arg: 3, scope: !8311, file: !8216, line: 115, type: !113)
!8321 = !DILocalVariable(name: "size", arg: 4, scope: !8311, file: !8216, line: 115, type: !113)
!8322 = !DILocation(line: 0, scope: !8311)
!8323 = !DILocation(line: 127, column: 23, scope: !8311)
!8324 = !DILocation(line: 127, column: 35, scope: !8311)
!8325 = !DILocation(line: 127, column: 33, scope: !8311)
!8326 = !DILocation(line: 127, column: 10, scope: !8311)
!8327 = !DILocation(line: 127, column: 15, scope: !8311)
!8328 = !DILocation(line: 129, column: 1, scope: !8311)
!8329 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !822, file: !822, line: 57, type: !8330, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !789, retainedNodes: !8332)
!8330 = !DISubroutineType(types: !8331)
!8331 = !{!108, !2229, !809}
!8332 = !{!8333, !8334}
!8333 = !DILocalVariable(name: "index", arg: 1, scope: !8329, file: !822, line: 57, type: !2229)
!8334 = !DILocalVariable(name: "region_conf", arg: 2, scope: !8329, file: !822, line: 58, type: !809)
!8335 = !DILocation(line: 0, scope: !8329)
!8336 = !DILocation(line: 61, column: 6, scope: !8337)
!8337 = distinct !DILexicalBlock(scope: !8329, file: !822, line: 61, column: 6)
!8338 = !DILocation(line: 61, column: 12, scope: !8337)
!8339 = !DILocation(line: 61, column: 6, scope: !8329)
!8340 = !DILocation(line: 64, column: 3, scope: !8341)
!8341 = distinct !DILexicalBlock(scope: !8342, file: !822, line: 64, column: 3)
!8342 = distinct !DILexicalBlock(scope: !8343, file: !822, line: 64, column: 3)
!8343 = distinct !DILexicalBlock(scope: !8344, file: !822, line: 64, column: 3)
!8344 = distinct !DILexicalBlock(scope: !8345, file: !822, line: 64, column: 3)
!8345 = distinct !DILexicalBlock(scope: !8337, file: !822, line: 61, column: 40)
!8346 = !DILocation(line: 65, column: 3, scope: !8345)
!8347 = !DILocation(line: 71, column: 2, scope: !8329)
!8348 = !DILocation(line: 73, column: 2, scope: !8329)
!8349 = !DILocation(line: 74, column: 1, scope: !8329)
!8350 = distinct !DISubprogram(name: "region_init", scope: !8216, file: !8216, line: 29, type: !8351, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !789, retainedNodes: !8353)
!8351 = !DISubroutineType(types: !8352)
!8352 = !{null, !7396, !809}
!8353 = !{!8354, !8355}
!8354 = !DILocalVariable(name: "index", arg: 1, scope: !8350, file: !8216, line: 29, type: !7396)
!8355 = !DILocalVariable(name: "region_conf", arg: 2, scope: !8350, file: !8216, line: 30, type: !809)
!8356 = !DILocation(line: 0, scope: !8350)
!8357 = !DILocation(line: 33, column: 2, scope: !8350)
!8358 = !DILocation(line: 47, column: 28, scope: !8350)
!8359 = !DILocation(line: 47, column: 33, scope: !8350)
!8360 = !DILocation(line: 48, column: 26, scope: !8350)
!8361 = !DILocation(line: 47, column: 12, scope: !8350)
!8362 = !DILocation(line: 49, column: 32, scope: !8350)
!8363 = !DILocation(line: 49, column: 37, scope: !8350)
!8364 = !DILocation(line: 49, column: 12, scope: !8350)
!8365 = !DILocation(line: 53, column: 1, scope: !8350)
!8366 = distinct !DISubprogram(name: "set_region_number", scope: !8367, file: !8367, line: 32, type: !7219, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !789, retainedNodes: !8368)
!8367 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8368 = !{!8369}
!8369 = !DILocalVariable(name: "index", arg: 1, scope: !8366, file: !8367, line: 32, type: !113)
!8370 = !DILocation(line: 0, scope: !8366)
!8371 = !DILocation(line: 34, column: 11, scope: !8366)
!8372 = !DILocation(line: 35, column: 1, scope: !8366)
!8373 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !8216, file: !8216, line: 88, type: !8374, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !789, retainedNodes: !8376)
!8374 = !DISubroutineType(types: !8375)
!8375 = !{!113, !113}
!8376 = !{!8377}
!8377 = !DILocalVariable(name: "size", arg: 1, scope: !8373, file: !8216, line: 88, type: !113)
!8378 = !DILocation(line: 0, scope: !8373)
!8379 = !DILocation(line: 91, column: 11, scope: !8380)
!8380 = distinct !DILexicalBlock(scope: !8373, file: !8216, line: 91, column: 6)
!8381 = !DILocation(line: 91, column: 6, scope: !8373)
!8382 = !DILocation(line: 100, column: 11, scope: !8383)
!8383 = distinct !DILexicalBlock(scope: !8373, file: !8216, line: 100, column: 6)
!8384 = !DILocation(line: 100, column: 6, scope: !8373)
!8385 = !DILocation(line: 104, column: 35, scope: !8373)
!8386 = !DILocation(line: 104, column: 16, scope: !8373)
!8387 = !DILocation(line: 104, column: 50, scope: !8373)
!8388 = !DILocation(line: 104, column: 72, scope: !8373)
!8389 = !DILocation(line: 104, column: 2, scope: !8373)
!8390 = !DILocation(line: 106, column: 1, scope: !8373)
!8391 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !822, file: !822, line: 307, type: !8392, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !789, retainedNodes: !8394)
!8392 = !DISubroutineType(types: !8393)
!8393 = !{null, !8195, !164}
!8394 = !{!8395, !8396}
!8395 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !8391, file: !822, line: 308, type: !8195)
!8396 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8391, file: !822, line: 308, type: !164)
!8397 = !DILocation(line: 0, scope: !8391)
!8398 = !DILocation(line: 310, column: 6, scope: !8399)
!8399 = distinct !DILexicalBlock(scope: !8391, file: !822, line: 310, column: 6)
!8400 = !DILocation(line: 316, column: 1, scope: !8391)
!8401 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !8216, file: !8216, line: 249, type: !8402, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !789, retainedNodes: !8404)
!8402 = !DISubroutineType(types: !8403)
!8403 = !{!108, !8195, !164}
!8404 = !{!8405, !8406, !8407, !8408}
!8405 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !8401, file: !8216, line: 250, type: !8195)
!8406 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8401, file: !8216, line: 250, type: !164)
!8407 = !DILocalVariable(name: "mpu_reg_index", scope: !8401, file: !8216, line: 252, type: !108)
!8408 = !DILocalVariable(name: "i", scope: !8409, file: !8216, line: 264, type: !108)
!8409 = distinct !DILexicalBlock(scope: !8410, file: !8216, line: 264, column: 3)
!8410 = distinct !DILexicalBlock(scope: !8411, file: !8216, line: 261, column: 32)
!8411 = distinct !DILexicalBlock(scope: !8401, file: !8216, line: 261, column: 6)
!8412 = !DILocation(line: 0, scope: !8401)
!8413 = !DILocation(line: 252, column: 22, scope: !8401)
!8414 = !DILocation(line: 258, column: 18, scope: !8401)
!8415 = !DILocation(line: 261, column: 20, scope: !8411)
!8416 = !DILocation(line: 261, column: 6, scope: !8401)
!8417 = !DILocation(line: 0, scope: !8409)
!8418 = !DILocation(line: 265, column: 4, scope: !8419)
!8419 = distinct !DILexicalBlock(scope: !8420, file: !8216, line: 264, column: 59)
!8420 = distinct !DILexicalBlock(scope: !8409, file: !8216, line: 264, column: 3)
!8421 = !DILocation(line: 264, column: 55, scope: !8420)
!8422 = !DILocation(line: 264, column: 33, scope: !8420)
!8423 = !DILocation(line: 264, column: 3, scope: !8409)
!8424 = distinct !{!8424, !8423, !8425}
!8425 = !DILocation(line: 266, column: 3, scope: !8409)
!8426 = !DILocation(line: 269, column: 2, scope: !8401)
!8427 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !8428, file: !8428, line: 218, type: !7219, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !789, retainedNodes: !8429)
!8428 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8429 = !{!8430}
!8430 = !DILocalVariable(name: "rnr", arg: 1, scope: !8427, file: !8428, line: 218, type: !113)
!8431 = !DILocation(line: 0, scope: !8427)
!8432 = !DILocation(line: 220, column: 12, scope: !8427)
!8433 = !DILocation(line: 221, column: 13, scope: !8427)
!8434 = !DILocation(line: 222, column: 1, scope: !8427)
!8435 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !822, file: !822, line: 326, type: !8436, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !789, retainedNodes: !8438)
!8436 = !DISubroutineType(types: !8437)
!8437 = !{!108}
!8438 = !{!8439}
!8439 = !DILocalVariable(name: "r_index", scope: !8435, file: !822, line: 328, type: !113)
!8440 = !DILocation(line: 330, column: 17, scope: !8441)
!8441 = distinct !DILexicalBlock(scope: !8435, file: !822, line: 330, column: 6)
!8442 = !DILocation(line: 330, column: 29, scope: !8441)
!8443 = !DILocation(line: 330, column: 6, scope: !8435)
!8444 = !DILocation(line: 347, column: 2, scope: !8435)
!8445 = !DILocation(line: 0, scope: !8435)
!8446 = !DILocation(line: 364, column: 29, scope: !8447)
!8447 = distinct !DILexicalBlock(scope: !8448, file: !822, line: 364, column: 2)
!8448 = distinct !DILexicalBlock(scope: !8435, file: !822, line: 364, column: 2)
!8449 = !DILocation(line: 364, column: 2, scope: !8448)
!8450 = !DILocation(line: 365, column: 25, scope: !8451)
!8451 = distinct !DILexicalBlock(scope: !8447, file: !822, line: 364, column: 66)
!8452 = !DILocation(line: 365, column: 3, scope: !8451)
!8453 = !DILocation(line: 364, column: 62, scope: !8447)
!8454 = distinct !{!8454, !8449, !8455}
!8455 = !DILocation(line: 366, column: 2, scope: !8448)
!8456 = !DILocation(line: 369, column: 23, scope: !8435)
!8457 = !DILocation(line: 369, column: 21, scope: !8435)
!8458 = !DILocation(line: 372, column: 2, scope: !8435)
!8459 = !DILocation(line: 443, column: 2, scope: !8435)
!8460 = !DILocation(line: 444, column: 1, scope: !8435)
!8461 = distinct !DISubprogram(name: "strcpy", scope: !8462, file: !8462, line: 20, type: !8463, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3254, retainedNodes: !8467)
!8462 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8463 = !DISubroutineType(types: !8464)
!8464 = !{!443, !8465, !8466}
!8465 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !443)
!8466 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !105)
!8467 = !{!8468, !8469, !8470}
!8468 = !DILocalVariable(name: "d", arg: 1, scope: !8461, file: !8462, line: 20, type: !8465)
!8469 = !DILocalVariable(name: "s", arg: 2, scope: !8461, file: !8462, line: 20, type: !8466)
!8470 = !DILocalVariable(name: "dest", scope: !8461, file: !8462, line: 22, type: !443)
!8471 = !DILocation(line: 0, scope: !8461)
!8472 = !DILocation(line: 24, column: 9, scope: !8461)
!8473 = !DILocation(line: 24, column: 12, scope: !8461)
!8474 = !DILocation(line: 24, column: 2, scope: !8461)
!8475 = !DILocation(line: 25, column: 6, scope: !8476)
!8476 = distinct !DILexicalBlock(scope: !8461, file: !8462, line: 24, column: 21)
!8477 = !DILocation(line: 26, column: 4, scope: !8476)
!8478 = !DILocation(line: 27, column: 4, scope: !8476)
!8479 = distinct !{!8479, !8474, !8480}
!8480 = !DILocation(line: 28, column: 2, scope: !8461)
!8481 = !DILocation(line: 30, column: 5, scope: !8461)
!8482 = !DILocation(line: 32, column: 2, scope: !8461)
!8483 = distinct !DISubprogram(name: "strncpy", scope: !8462, file: !8462, line: 42, type: !8484, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3254, retainedNodes: !8486)
!8484 = !DISubroutineType(types: !8485)
!8485 = !{!443, !8465, !8466, !439}
!8486 = !{!8487, !8488, !8489, !8490}
!8487 = !DILocalVariable(name: "d", arg: 1, scope: !8483, file: !8462, line: 42, type: !8465)
!8488 = !DILocalVariable(name: "s", arg: 2, scope: !8483, file: !8462, line: 42, type: !8466)
!8489 = !DILocalVariable(name: "n", arg: 3, scope: !8483, file: !8462, line: 42, type: !439)
!8490 = !DILocalVariable(name: "dest", scope: !8483, file: !8462, line: 44, type: !443)
!8491 = !DILocation(line: 0, scope: !8483)
!8492 = !DILocation(line: 46, column: 12, scope: !8483)
!8493 = !DILocation(line: 46, column: 17, scope: !8483)
!8494 = !DILocation(line: 46, column: 20, scope: !8483)
!8495 = !DILocation(line: 46, column: 23, scope: !8483)
!8496 = !DILocation(line: 46, column: 2, scope: !8483)
!8497 = !DILocation(line: 47, column: 6, scope: !8498)
!8498 = distinct !DILexicalBlock(scope: !8483, file: !8462, line: 46, column: 32)
!8499 = !DILocation(line: 48, column: 4, scope: !8498)
!8500 = !DILocation(line: 49, column: 4, scope: !8498)
!8501 = !DILocation(line: 50, column: 4, scope: !8498)
!8502 = distinct !{!8502, !8496, !8503}
!8503 = !DILocation(line: 51, column: 2, scope: !8483)
!8504 = !DILocation(line: 54, column: 6, scope: !8505)
!8505 = distinct !DILexicalBlock(scope: !8483, file: !8462, line: 53, column: 16)
!8506 = !DILocation(line: 55, column: 4, scope: !8505)
!8507 = !DILocation(line: 56, column: 4, scope: !8505)
!8508 = !DILocation(line: 53, column: 11, scope: !8483)
!8509 = !DILocation(line: 53, column: 2, scope: !8483)
!8510 = distinct !{!8510, !8509, !8511}
!8511 = !DILocation(line: 57, column: 2, scope: !8483)
!8512 = !DILocation(line: 59, column: 2, scope: !8483)
!8513 = distinct !DISubprogram(name: "strchr", scope: !8462, file: !8462, line: 69, type: !8514, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3254, retainedNodes: !8516)
!8514 = !DISubroutineType(types: !8515)
!8515 = !{!443, !105, !108}
!8516 = !{!8517, !8518, !8519}
!8517 = !DILocalVariable(name: "s", arg: 1, scope: !8513, file: !8462, line: 69, type: !105)
!8518 = !DILocalVariable(name: "c", arg: 2, scope: !8513, file: !8462, line: 69, type: !108)
!8519 = !DILocalVariable(name: "tmp", scope: !8513, file: !8462, line: 71, type: !107)
!8520 = !DILocation(line: 0, scope: !8513)
!8521 = !DILocation(line: 73, column: 2, scope: !8513)
!8522 = !DILocation(line: 73, column: 10, scope: !8513)
!8523 = !DILocation(line: 73, column: 13, scope: !8513)
!8524 = !DILocation(line: 73, column: 21, scope: !8513)
!8525 = !DILocation(line: 74, column: 4, scope: !8526)
!8526 = distinct !DILexicalBlock(scope: !8513, file: !8462, line: 73, column: 38)
!8527 = distinct !{!8527, !8521, !8528}
!8528 = !DILocation(line: 75, column: 2, scope: !8513)
!8529 = !DILocation(line: 77, column: 9, scope: !8513)
!8530 = !DILocation(line: 77, column: 2, scope: !8513)
!8531 = distinct !DISubprogram(name: "strrchr", scope: !8462, file: !8462, line: 87, type: !8514, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3254, retainedNodes: !8532)
!8532 = !{!8533, !8534, !8535}
!8533 = !DILocalVariable(name: "s", arg: 1, scope: !8531, file: !8462, line: 87, type: !105)
!8534 = !DILocalVariable(name: "c", arg: 2, scope: !8531, file: !8462, line: 87, type: !108)
!8535 = !DILocalVariable(name: "match", scope: !8531, file: !8462, line: 89, type: !443)
!8536 = !DILocation(line: 0, scope: !8531)
!8537 = !DILocation(line: 91, column: 2, scope: !8531)
!8538 = !DILocation(line: 92, column: 7, scope: !8539)
!8539 = distinct !DILexicalBlock(scope: !8540, file: !8462, line: 92, column: 7)
!8540 = distinct !DILexicalBlock(scope: !8531, file: !8462, line: 91, column: 5)
!8541 = !DILocation(line: 92, column: 10, scope: !8539)
!8542 = !DILocation(line: 92, column: 7, scope: !8540)
!8543 = !DILocation(line: 95, column: 13, scope: !8531)
!8544 = !DILocation(line: 95, column: 2, scope: !8540)
!8545 = distinct !{!8545, !8537, !8546}
!8546 = !DILocation(line: 95, column: 15, scope: !8531)
!8547 = !DILocation(line: 97, column: 2, scope: !8531)
!8548 = distinct !DISubprogram(name: "strlen", scope: !8462, file: !8462, line: 107, type: !8549, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3254, retainedNodes: !8551)
!8549 = !DISubroutineType(types: !8550)
!8550 = !{!439, !105}
!8551 = !{!8552, !8553}
!8552 = !DILocalVariable(name: "s", arg: 1, scope: !8548, file: !8462, line: 107, type: !105)
!8553 = !DILocalVariable(name: "n", scope: !8548, file: !8462, line: 109, type: !439)
!8554 = !DILocation(line: 0, scope: !8548)
!8555 = !DILocation(line: 111, column: 9, scope: !8548)
!8556 = !DILocation(line: 111, column: 12, scope: !8548)
!8557 = !DILocation(line: 111, column: 2, scope: !8548)
!8558 = !DILocation(line: 112, column: 4, scope: !8559)
!8559 = distinct !DILexicalBlock(scope: !8548, file: !8462, line: 111, column: 21)
!8560 = !DILocation(line: 113, column: 4, scope: !8559)
!8561 = distinct !{!8561, !8557, !8562}
!8562 = !DILocation(line: 114, column: 2, scope: !8548)
!8563 = !DILocation(line: 116, column: 2, scope: !8548)
!8564 = distinct !DISubprogram(name: "strnlen", scope: !8462, file: !8462, line: 126, type: !8565, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3254, retainedNodes: !8567)
!8565 = !DISubroutineType(types: !8566)
!8566 = !{!439, !105, !439}
!8567 = !{!8568, !8569, !8570}
!8568 = !DILocalVariable(name: "s", arg: 1, scope: !8564, file: !8462, line: 126, type: !105)
!8569 = !DILocalVariable(name: "maxlen", arg: 2, scope: !8564, file: !8462, line: 126, type: !439)
!8570 = !DILocalVariable(name: "n", scope: !8564, file: !8462, line: 128, type: !439)
!8571 = !DILocation(line: 0, scope: !8564)
!8572 = !DILocation(line: 130, column: 9, scope: !8564)
!8573 = !DILocation(line: 130, column: 12, scope: !8564)
!8574 = !DILocation(line: 130, column: 20, scope: !8564)
!8575 = !DILocation(line: 130, column: 2, scope: !8564)
!8576 = !DILocation(line: 131, column: 4, scope: !8577)
!8577 = distinct !DILexicalBlock(scope: !8564, file: !8462, line: 130, column: 35)
!8578 = !DILocation(line: 132, column: 4, scope: !8577)
!8579 = distinct !{!8579, !8575, !8580}
!8580 = !DILocation(line: 133, column: 2, scope: !8564)
!8581 = !DILocation(line: 135, column: 2, scope: !8564)
!8582 = distinct !DISubprogram(name: "strcmp", scope: !8462, file: !8462, line: 145, type: !8583, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3254, retainedNodes: !8585)
!8583 = !DISubroutineType(types: !8584)
!8584 = !{!108, !105, !105}
!8585 = !{!8586, !8587}
!8586 = !DILocalVariable(name: "s1", arg: 1, scope: !8582, file: !8462, line: 145, type: !105)
!8587 = !DILocalVariable(name: "s2", arg: 2, scope: !8582, file: !8462, line: 145, type: !105)
!8588 = !DILocation(line: 0, scope: !8582)
!8589 = !DILocation(line: 147, column: 10, scope: !8582)
!8590 = !DILocation(line: 147, column: 17, scope: !8582)
!8591 = !DILocation(line: 147, column: 14, scope: !8582)
!8592 = !DILocation(line: 147, column: 22, scope: !8582)
!8593 = !DILocation(line: 148, column: 5, scope: !8594)
!8594 = distinct !DILexicalBlock(scope: !8582, file: !8462, line: 147, column: 40)
!8595 = !DILocation(line: 149, column: 5, scope: !8594)
!8596 = distinct !{!8596, !8597, !8598}
!8597 = !DILocation(line: 147, column: 2, scope: !8582)
!8598 = !DILocation(line: 150, column: 2, scope: !8582)
!8599 = !DILocation(line: 152, column: 9, scope: !8582)
!8600 = !DILocation(line: 152, column: 15, scope: !8582)
!8601 = !DILocation(line: 152, column: 13, scope: !8582)
!8602 = !DILocation(line: 152, column: 2, scope: !8582)
!8603 = distinct !DISubprogram(name: "strncmp", scope: !8462, file: !8462, line: 162, type: !8604, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3254, retainedNodes: !8606)
!8604 = !DISubroutineType(types: !8605)
!8605 = !{!108, !105, !105, !439}
!8606 = !{!8607, !8608, !8609}
!8607 = !DILocalVariable(name: "s1", arg: 1, scope: !8603, file: !8462, line: 162, type: !105)
!8608 = !DILocalVariable(name: "s2", arg: 2, scope: !8603, file: !8462, line: 162, type: !105)
!8609 = !DILocalVariable(name: "n", arg: 3, scope: !8603, file: !8462, line: 162, type: !439)
!8610 = !DILocation(line: 0, scope: !8603)
!8611 = !DILocation(line: 164, column: 17, scope: !8603)
!8612 = !DILocation(line: 164, column: 21, scope: !8603)
!8613 = !DILocation(line: 164, column: 28, scope: !8603)
!8614 = !DILocation(line: 164, column: 25, scope: !8603)
!8615 = !DILocation(line: 164, column: 33, scope: !8603)
!8616 = !DILocation(line: 165, column: 5, scope: !8617)
!8617 = distinct !DILexicalBlock(scope: !8603, file: !8462, line: 164, column: 51)
!8618 = !DILocation(line: 166, column: 5, scope: !8617)
!8619 = !DILocation(line: 167, column: 4, scope: !8617)
!8620 = distinct !{!8620, !8621, !8622}
!8621 = !DILocation(line: 164, column: 2, scope: !8603)
!8622 = !DILocation(line: 168, column: 2, scope: !8603)
!8623 = !DILocation(line: 170, column: 25, scope: !8603)
!8624 = !DILocation(line: 170, column: 31, scope: !8603)
!8625 = !DILocation(line: 170, column: 29, scope: !8603)
!8626 = !DILocation(line: 170, column: 9, scope: !8603)
!8627 = !DILocation(line: 170, column: 2, scope: !8603)
!8628 = distinct !DISubprogram(name: "strtok_r", scope: !8462, file: !8462, line: 180, type: !8629, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3254, retainedNodes: !8631)
!8629 = !DISubroutineType(types: !8630)
!8630 = !{!443, !443, !105, !547}
!8631 = !{!8632, !8633, !8634, !8635, !8636}
!8632 = !DILocalVariable(name: "str", arg: 1, scope: !8628, file: !8462, line: 180, type: !443)
!8633 = !DILocalVariable(name: "sep", arg: 2, scope: !8628, file: !8462, line: 180, type: !105)
!8634 = !DILocalVariable(name: "state", arg: 3, scope: !8628, file: !8462, line: 180, type: !547)
!8635 = !DILocalVariable(name: "start", scope: !8628, file: !8462, line: 182, type: !443)
!8636 = !DILocalVariable(name: "end", scope: !8628, file: !8462, line: 182, type: !443)
!8637 = !DILocation(line: 0, scope: !8628)
!8638 = !DILocation(line: 184, column: 10, scope: !8628)
!8639 = !DILocation(line: 184, column: 22, scope: !8628)
!8640 = !DILocation(line: 187, column: 9, scope: !8628)
!8641 = !DILocation(line: 187, column: 16, scope: !8628)
!8642 = !DILocation(line: 187, column: 19, scope: !8628)
!8643 = !DILocation(line: 187, column: 2, scope: !8628)
!8644 = !DILocation(line: 188, column: 8, scope: !8645)
!8645 = distinct !DILexicalBlock(scope: !8628, file: !8462, line: 187, column: 40)
!8646 = distinct !{!8646, !8643, !8647}
!8647 = !DILocation(line: 189, column: 2, scope: !8628)
!8648 = !DILocation(line: 198, column: 9, scope: !8628)
!8649 = !DILocation(line: 198, column: 18, scope: !8628)
!8650 = !DILocation(line: 198, column: 17, scope: !8628)
!8651 = !DILocation(line: 198, column: 2, scope: !8628)
!8652 = !DILocation(line: 199, column: 6, scope: !8653)
!8653 = distinct !DILexicalBlock(scope: !8628, file: !8462, line: 198, column: 37)
!8654 = !DILocation(line: 198, column: 14, scope: !8628)
!8655 = distinct !{!8655, !8651, !8656}
!8656 = !DILocation(line: 200, column: 2, scope: !8628)
!8657 = !DILocation(line: 203, column: 8, scope: !8658)
!8658 = distinct !DILexicalBlock(scope: !8659, file: !8462, line: 202, column: 20)
!8659 = distinct !DILexicalBlock(scope: !8628, file: !8462, line: 202, column: 6)
!8660 = !DILocation(line: 204, column: 16, scope: !8658)
!8661 = !DILocation(line: 205, column: 2, scope: !8658)
!8662 = !DILocation(line: 210, column: 1, scope: !8628)
!8663 = distinct !DISubprogram(name: "strcat", scope: !8462, file: !8462, line: 212, type: !8463, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3254, retainedNodes: !8664)
!8664 = !{!8665, !8666}
!8665 = !DILocalVariable(name: "dest", arg: 1, scope: !8663, file: !8462, line: 212, type: !8465)
!8666 = !DILocalVariable(name: "src", arg: 2, scope: !8663, file: !8462, line: 212, type: !8466)
!8667 = !DILocation(line: 0, scope: !8663)
!8668 = !DILocation(line: 214, column: 16, scope: !8663)
!8669 = !DILocation(line: 214, column: 14, scope: !8663)
!8670 = !DILocation(line: 214, column: 2, scope: !8663)
!8671 = !DILocation(line: 215, column: 2, scope: !8663)
!8672 = distinct !DISubprogram(name: "strncat", scope: !8462, file: !8462, line: 218, type: !8484, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3254, retainedNodes: !8673)
!8673 = !{!8674, !8675, !8676, !8677, !8678}
!8674 = !DILocalVariable(name: "dest", arg: 1, scope: !8672, file: !8462, line: 218, type: !8465)
!8675 = !DILocalVariable(name: "src", arg: 2, scope: !8672, file: !8462, line: 218, type: !8466)
!8676 = !DILocalVariable(name: "n", arg: 3, scope: !8672, file: !8462, line: 219, type: !439)
!8677 = !DILocalVariable(name: "orig_dest", scope: !8672, file: !8462, line: 221, type: !443)
!8678 = !DILocalVariable(name: "len", scope: !8672, file: !8462, line: 222, type: !439)
!8679 = !DILocation(line: 0, scope: !8672)
!8680 = !DILocation(line: 222, column: 15, scope: !8672)
!8681 = !DILocation(line: 224, column: 7, scope: !8672)
!8682 = !DILocation(line: 225, column: 14, scope: !8672)
!8683 = !DILocation(line: 225, column: 19, scope: !8672)
!8684 = !DILocation(line: 225, column: 11, scope: !8672)
!8685 = !DILocation(line: 225, column: 23, scope: !8672)
!8686 = !DILocation(line: 225, column: 28, scope: !8672)
!8687 = !DILocation(line: 225, column: 2, scope: !8672)
!8688 = !DILocation(line: 226, column: 17, scope: !8689)
!8689 = distinct !DILexicalBlock(scope: !8672, file: !8462, line: 225, column: 38)
!8690 = !DILocation(line: 226, column: 8, scope: !8689)
!8691 = !DILocation(line: 226, column: 11, scope: !8689)
!8692 = distinct !{!8692, !8687, !8693}
!8693 = !DILocation(line: 227, column: 2, scope: !8672)
!8694 = !DILocation(line: 228, column: 8, scope: !8672)
!8695 = !DILocation(line: 230, column: 2, scope: !8672)
!8696 = distinct !DISubprogram(name: "memcmp", scope: !8462, file: !8462, line: 239, type: !8697, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3254, retainedNodes: !8699)
!8697 = !DISubroutineType(types: !8698)
!8698 = !{!108, !13, !13, !439}
!8699 = !{!8700, !8701, !8702, !8703, !8704}
!8700 = !DILocalVariable(name: "m1", arg: 1, scope: !8696, file: !8462, line: 239, type: !13)
!8701 = !DILocalVariable(name: "m2", arg: 2, scope: !8696, file: !8462, line: 239, type: !13)
!8702 = !DILocalVariable(name: "n", arg: 3, scope: !8696, file: !8462, line: 239, type: !439)
!8703 = !DILocalVariable(name: "c1", scope: !8696, file: !8462, line: 241, type: !105)
!8704 = !DILocalVariable(name: "c2", scope: !8696, file: !8462, line: 242, type: !105)
!8705 = !DILocation(line: 0, scope: !8696)
!8706 = !DILocation(line: 244, column: 7, scope: !8707)
!8707 = distinct !DILexicalBlock(scope: !8696, file: !8462, line: 244, column: 6)
!8708 = !DILocation(line: 244, column: 6, scope: !8696)
!8709 = !DILocation(line: 248, column: 10, scope: !8696)
!8710 = !DILocation(line: 248, column: 14, scope: !8696)
!8711 = !DILocation(line: 248, column: 19, scope: !8696)
!8712 = !DILocation(line: 248, column: 2, scope: !8696)
!8713 = !DILocation(line: 248, column: 23, scope: !8696)
!8714 = !DILocation(line: 248, column: 30, scope: !8696)
!8715 = !DILocation(line: 248, column: 27, scope: !8696)
!8716 = !DILocation(line: 249, column: 5, scope: !8717)
!8717 = distinct !DILexicalBlock(scope: !8696, file: !8462, line: 248, column: 36)
!8718 = !DILocation(line: 250, column: 5, scope: !8717)
!8719 = distinct !{!8719, !8712, !8720}
!8720 = !DILocation(line: 251, column: 2, scope: !8696)
!8721 = !DILocation(line: 253, column: 9, scope: !8696)
!8722 = !DILocation(line: 253, column: 15, scope: !8696)
!8723 = !DILocation(line: 253, column: 13, scope: !8696)
!8724 = !DILocation(line: 253, column: 2, scope: !8696)
!8725 = !DILocation(line: 254, column: 1, scope: !8696)
!8726 = distinct !DISubprogram(name: "memmove", scope: !8462, file: !8462, line: 263, type: !8727, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3254, retainedNodes: !8729)
!8727 = !DISubroutineType(types: !8728)
!8728 = !{!104, !104, !13, !439}
!8729 = !{!8730, !8731, !8732, !8733, !8734}
!8730 = !DILocalVariable(name: "d", arg: 1, scope: !8726, file: !8462, line: 263, type: !104)
!8731 = !DILocalVariable(name: "s", arg: 2, scope: !8726, file: !8462, line: 263, type: !13)
!8732 = !DILocalVariable(name: "n", arg: 3, scope: !8726, file: !8462, line: 263, type: !439)
!8733 = !DILocalVariable(name: "dest", scope: !8726, file: !8462, line: 265, type: !443)
!8734 = !DILocalVariable(name: "src", scope: !8726, file: !8462, line: 266, type: !105)
!8735 = !DILocation(line: 0, scope: !8726)
!8736 = !DILocation(line: 268, column: 21, scope: !8737)
!8737 = distinct !DILexicalBlock(scope: !8726, file: !8462, line: 268, column: 6)
!8738 = !DILocation(line: 268, column: 28, scope: !8737)
!8739 = !DILocation(line: 268, column: 6, scope: !8726)
!8740 = !DILocation(line: 280, column: 12, scope: !8741)
!8741 = distinct !DILexicalBlock(scope: !8737, file: !8462, line: 278, column: 9)
!8742 = !DILocation(line: 280, column: 3, scope: !8741)
!8743 = !DILocation(line: 275, column: 5, scope: !8744)
!8744 = distinct !DILexicalBlock(scope: !8745, file: !8462, line: 274, column: 17)
!8745 = distinct !DILexicalBlock(scope: !8737, file: !8462, line: 268, column: 33)
!8746 = !DILocation(line: 276, column: 14, scope: !8744)
!8747 = !DILocation(line: 276, column: 4, scope: !8744)
!8748 = !DILocation(line: 276, column: 12, scope: !8744)
!8749 = !DILocation(line: 274, column: 12, scope: !8745)
!8750 = !DILocation(line: 274, column: 3, scope: !8745)
!8751 = distinct !{!8751, !8750, !8752}
!8752 = !DILocation(line: 277, column: 3, scope: !8745)
!8753 = !DILocation(line: 281, column: 12, scope: !8754)
!8754 = distinct !DILexicalBlock(scope: !8741, file: !8462, line: 280, column: 17)
!8755 = !DILocation(line: 281, column: 10, scope: !8754)
!8756 = !DILocation(line: 282, column: 8, scope: !8754)
!8757 = !DILocation(line: 283, column: 7, scope: !8754)
!8758 = !DILocation(line: 284, column: 5, scope: !8754)
!8759 = distinct !{!8759, !8742, !8760}
!8760 = !DILocation(line: 285, column: 3, scope: !8741)
!8761 = !DILocation(line: 288, column: 2, scope: !8726)
!8762 = distinct !DISubprogram(name: "memcpy", scope: !8462, file: !8462, line: 298, type: !8763, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3254, retainedNodes: !8767)
!8763 = !DISubroutineType(types: !8764)
!8764 = !{!104, !8765, !8766, !439}
!8765 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !104)
!8766 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!8767 = !{!8768, !8769, !8770, !8771, !8772}
!8768 = !DILocalVariable(name: "d", arg: 1, scope: !8762, file: !8462, line: 298, type: !8765)
!8769 = !DILocalVariable(name: "s", arg: 2, scope: !8762, file: !8462, line: 298, type: !8766)
!8770 = !DILocalVariable(name: "n", arg: 3, scope: !8762, file: !8462, line: 298, type: !439)
!8771 = !DILocalVariable(name: "d_byte", scope: !8762, file: !8462, line: 302, type: !1352)
!8772 = !DILocalVariable(name: "s_byte", scope: !8762, file: !8462, line: 303, type: !3257)
!8773 = !DILocation(line: 0, scope: !8762)
!8774 = !DILocation(line: 337, column: 11, scope: !8762)
!8775 = !DILocation(line: 337, column: 2, scope: !8762)
!8776 = !DILocation(line: 338, column: 25, scope: !8777)
!8777 = distinct !DILexicalBlock(scope: !8762, file: !8462, line: 337, column: 16)
!8778 = !DILocation(line: 338, column: 17, scope: !8777)
!8779 = !DILocation(line: 338, column: 11, scope: !8777)
!8780 = !DILocation(line: 338, column: 15, scope: !8777)
!8781 = !DILocation(line: 339, column: 4, scope: !8777)
!8782 = distinct !{!8782, !8775, !8783}
!8783 = !DILocation(line: 340, column: 2, scope: !8762)
!8784 = !DILocation(line: 342, column: 2, scope: !8762)
!8785 = distinct !DISubprogram(name: "memset", scope: !8462, file: !8462, line: 352, type: !8786, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3254, retainedNodes: !8788)
!8786 = !DISubroutineType(types: !8787)
!8787 = !{!104, !104, !108, !439}
!8788 = !{!8789, !8790, !8791, !8792, !8793}
!8789 = !DILocalVariable(name: "buf", arg: 1, scope: !8785, file: !8462, line: 352, type: !104)
!8790 = !DILocalVariable(name: "c", arg: 2, scope: !8785, file: !8462, line: 352, type: !108)
!8791 = !DILocalVariable(name: "n", arg: 3, scope: !8785, file: !8462, line: 352, type: !439)
!8792 = !DILocalVariable(name: "d_byte", scope: !8785, file: !8462, line: 356, type: !1352)
!8793 = !DILocalVariable(name: "c_byte", scope: !8785, file: !8462, line: 357, type: !165)
!8794 = !DILocation(line: 0, scope: !8785)
!8795 = !DILocation(line: 357, column: 25, scope: !8785)
!8796 = !DILocation(line: 389, column: 11, scope: !8785)
!8797 = !DILocation(line: 389, column: 2, scope: !8785)
!8798 = !DILocation(line: 390, column: 11, scope: !8799)
!8799 = distinct !DILexicalBlock(scope: !8785, file: !8462, line: 389, column: 16)
!8800 = !DILocation(line: 390, column: 15, scope: !8799)
!8801 = !DILocation(line: 391, column: 4, scope: !8799)
!8802 = distinct !{!8802, !8797, !8803}
!8803 = !DILocation(line: 392, column: 2, scope: !8785)
!8804 = !DILocation(line: 394, column: 2, scope: !8785)
!8805 = distinct !DISubprogram(name: "memchr", scope: !8462, file: !8462, line: 404, type: !8806, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3254, retainedNodes: !8808)
!8806 = !DISubroutineType(types: !8807)
!8807 = !{!104, !13, !108, !439}
!8808 = !{!8809, !8810, !8811, !8812}
!8809 = !DILocalVariable(name: "s", arg: 1, scope: !8805, file: !8462, line: 404, type: !13)
!8810 = !DILocalVariable(name: "c", arg: 2, scope: !8805, file: !8462, line: 404, type: !108)
!8811 = !DILocalVariable(name: "n", arg: 3, scope: !8805, file: !8462, line: 404, type: !439)
!8812 = !DILocalVariable(name: "p", scope: !8813, file: !8462, line: 407, type: !3257)
!8813 = distinct !DILexicalBlock(scope: !8814, file: !8462, line: 406, column: 14)
!8814 = distinct !DILexicalBlock(scope: !8805, file: !8462, line: 406, column: 6)
!8815 = !DILocation(line: 0, scope: !8805)
!8816 = !DILocation(line: 406, column: 8, scope: !8814)
!8817 = !DILocation(line: 406, column: 6, scope: !8805)
!8818 = !DILocation(line: 409, column: 3, scope: !8813)
!8819 = !DILocation(line: 0, scope: !8813)
!8820 = !DILocation(line: 410, column: 8, scope: !8821)
!8821 = distinct !DILexicalBlock(scope: !8822, file: !8462, line: 410, column: 8)
!8822 = distinct !DILexicalBlock(scope: !8813, file: !8462, line: 409, column: 6)
!8823 = !DILocation(line: 410, column: 13, scope: !8821)
!8824 = !DILocation(line: 410, column: 8, scope: !8822)
!8825 = distinct !{!8825, !8818, !8826}
!8826 = !DILocation(line: 414, column: 20, scope: !8813)
!8827 = !DILocation(line: 417, column: 2, scope: !8805)
!8828 = !DILocation(line: 418, column: 1, scope: !8805)
!8829 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !832, file: !832, line: 23, type: !5062, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !825, retainedNodes: !8830)
!8830 = !{!8831}
!8831 = !DILocalVariable(name: "hook", arg: 1, scope: !8829, file: !832, line: 23, type: !562)
!8832 = !DILocation(line: 0, scope: !8829)
!8833 = !DILocation(line: 25, column: 15, scope: !8829)
!8834 = !DILocation(line: 26, column: 1, scope: !8829)
!8835 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !832, file: !832, line: 14, type: !563, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !825, retainedNodes: !8836)
!8836 = !{!8837}
!8837 = !DILocalVariable(name: "c", arg: 1, scope: !8835, file: !832, line: 14, type: !108)
!8838 = !DILocation(line: 0, scope: !8835)
!8839 = !DILocation(line: 18, column: 2, scope: !8835)
!8840 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !832, file: !832, line: 28, type: !8841, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !825, retainedNodes: !8843)
!8841 = !DISubroutineType(types: !8842)
!8842 = !{!108, !108, !828}
!8843 = !{!8844, !8845}
!8844 = !DILocalVariable(name: "c", arg: 1, scope: !8840, file: !832, line: 28, type: !108)
!8845 = !DILocalVariable(name: "stream", arg: 2, scope: !8840, file: !832, line: 28, type: !828)
!8846 = !DILocation(line: 0, scope: !8840)
!8847 = !DILocation(line: 30, column: 27, scope: !8840)
!8848 = !DILocation(line: 30, column: 50, scope: !8840)
!8849 = !DILocation(line: 30, column: 9, scope: !8840)
!8850 = !DILocation(line: 30, column: 2, scope: !8840)
!8851 = distinct !DISubprogram(name: "fputc", scope: !832, file: !832, line: 41, type: !8841, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !825, retainedNodes: !8852)
!8852 = !{!8853, !8854}
!8853 = !DILocalVariable(name: "c", arg: 1, scope: !8851, file: !832, line: 41, type: !108)
!8854 = !DILocalVariable(name: "stream", arg: 2, scope: !8851, file: !832, line: 41, type: !828)
!8855 = !DILocation(line: 0, scope: !8851)
!8856 = !DILocation(line: 43, column: 9, scope: !8851)
!8857 = !DILocation(line: 43, column: 2, scope: !8851)
!8858 = distinct !DISubprogram(name: "zephyr_fputc", scope: !8859, file: !8859, line: 72, type: !8841, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !825, retainedNodes: !8860)
!8859 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sensor_batch_processing")
!8860 = !{!8861, !8862}
!8861 = !DILocalVariable(name: "c", arg: 1, scope: !8858, file: !8859, line: 72, type: !108)
!8862 = !DILocalVariable(name: "stream", arg: 2, scope: !8858, file: !8859, line: 72, type: !828)
!8863 = !DILocation(line: 0, scope: !8858)
!8864 = !DILocation(line: 81, column: 2, scope: !8865)
!8865 = distinct !DILexicalBlock(scope: !8858, file: !8859, line: 81, column: 2)
!8866 = !{i64 2155140811}
!8867 = !DILocation(line: 82, column: 9, scope: !8858)
!8868 = !DILocation(line: 82, column: 2, scope: !8858)
!8869 = distinct !DISubprogram(name: "fputs", scope: !832, file: !832, line: 46, type: !8870, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !825, retainedNodes: !8873)
!8870 = !DISubroutineType(types: !8871)
!8871 = !{!108, !8466, !8872}
!8872 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !828)
!8873 = !{!8874, !8875, !8876, !8877}
!8874 = !DILocalVariable(name: "s", arg: 1, scope: !8869, file: !832, line: 46, type: !8466)
!8875 = !DILocalVariable(name: "stream", arg: 2, scope: !8869, file: !832, line: 46, type: !8872)
!8876 = !DILocalVariable(name: "len", scope: !8869, file: !832, line: 48, type: !108)
!8877 = !DILocalVariable(name: "ret", scope: !8869, file: !832, line: 49, type: !108)
!8878 = !DILocation(line: 0, scope: !8869)
!8879 = !DILocation(line: 48, column: 12, scope: !8869)
!8880 = !DILocation(line: 51, column: 8, scope: !8869)
!8881 = !DILocation(line: 53, column: 13, scope: !8869)
!8882 = !DILocation(line: 53, column: 9, scope: !8869)
!8883 = !DILocation(line: 53, column: 2, scope: !8869)
!8884 = distinct !DISubprogram(name: "fwrite", scope: !832, file: !832, line: 99, type: !8885, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !825, retainedNodes: !8887)
!8885 = !DISubroutineType(types: !8886)
!8886 = !{!439, !8766, !439, !439, !8872}
!8887 = !{!8888, !8889, !8890, !8891}
!8888 = !DILocalVariable(name: "ptr", arg: 1, scope: !8884, file: !832, line: 99, type: !8766)
!8889 = !DILocalVariable(name: "size", arg: 2, scope: !8884, file: !832, line: 99, type: !439)
!8890 = !DILocalVariable(name: "nitems", arg: 3, scope: !8884, file: !832, line: 99, type: !439)
!8891 = !DILocalVariable(name: "stream", arg: 4, scope: !8884, file: !832, line: 100, type: !8872)
!8892 = !DILocation(line: 0, scope: !8884)
!8893 = !DILocation(line: 102, column: 9, scope: !8884)
!8894 = !DILocation(line: 102, column: 2, scope: !8884)
!8895 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !8859, file: !8859, line: 96, type: !8885, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !825, retainedNodes: !8896)
!8896 = !{!8897, !8898, !8899, !8900}
!8897 = !DILocalVariable(name: "ptr", arg: 1, scope: !8895, file: !8859, line: 96, type: !8766)
!8898 = !DILocalVariable(name: "size", arg: 2, scope: !8895, file: !8859, line: 96, type: !439)
!8899 = !DILocalVariable(name: "nitems", arg: 3, scope: !8895, file: !8859, line: 96, type: !439)
!8900 = !DILocalVariable(name: "stream", arg: 4, scope: !8895, file: !8859, line: 96, type: !8872)
!8901 = !DILocation(line: 0, scope: !8895)
!8902 = !DILocation(line: 107, column: 2, scope: !8903)
!8903 = distinct !DILexicalBlock(scope: !8895, file: !8859, line: 107, column: 2)
!8904 = !{i64 2155140915}
!8905 = !DILocation(line: 108, column: 9, scope: !8895)
!8906 = !DILocation(line: 108, column: 2, scope: !8895)
!8907 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !832, file: !832, line: 56, type: !8885, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !825, retainedNodes: !8908)
!8908 = !{!8909, !8910, !8911, !8912, !8913, !8914, !8915, !8916}
!8909 = !DILocalVariable(name: "ptr", arg: 1, scope: !8907, file: !832, line: 56, type: !8766)
!8910 = !DILocalVariable(name: "size", arg: 2, scope: !8907, file: !832, line: 56, type: !439)
!8911 = !DILocalVariable(name: "nitems", arg: 3, scope: !8907, file: !832, line: 57, type: !439)
!8912 = !DILocalVariable(name: "stream", arg: 4, scope: !8907, file: !832, line: 57, type: !8872)
!8913 = !DILocalVariable(name: "i", scope: !8907, file: !832, line: 59, type: !439)
!8914 = !DILocalVariable(name: "j", scope: !8907, file: !832, line: 60, type: !439)
!8915 = !DILocalVariable(name: "p", scope: !8907, file: !832, line: 61, type: !3257)
!8916 = !DILabel(scope: !8907, name: "done", file: !832, line: 82)
!8917 = !DILocation(line: 0, scope: !8907)
!8918 = !DILocation(line: 63, column: 14, scope: !8919)
!8919 = distinct !DILexicalBlock(scope: !8907, file: !832, line: 63, column: 6)
!8920 = !DILocation(line: 63, column: 24, scope: !8919)
!8921 = !DILocation(line: 72, column: 3, scope: !8922)
!8922 = distinct !DILexicalBlock(scope: !8907, file: !832, line: 70, column: 5)
!8923 = !DILocation(line: 0, scope: !8922)
!8924 = !DILocation(line: 73, column: 8, scope: !8925)
!8925 = distinct !DILexicalBlock(scope: !8926, file: !832, line: 73, column: 8)
!8926 = distinct !DILexicalBlock(scope: !8922, file: !832, line: 72, column: 6)
!8927 = !DILocation(line: 73, column: 29, scope: !8925)
!8928 = !DILocation(line: 73, column: 27, scope: !8925)
!8929 = !DILocation(line: 73, column: 21, scope: !8925)
!8930 = !DILocation(line: 73, column: 33, scope: !8925)
!8931 = !DILocation(line: 73, column: 8, scope: !8926)
!8932 = !DILocation(line: 76, column: 5, scope: !8926)
!8933 = !DILocation(line: 77, column: 14, scope: !8922)
!8934 = !DILocation(line: 77, column: 3, scope: !8926)
!8935 = distinct !{!8935, !8921, !8936}
!8936 = !DILocation(line: 77, column: 17, scope: !8922)
!8937 = !DILocation(line: 79, column: 4, scope: !8922)
!8938 = !DILocation(line: 80, column: 13, scope: !8907)
!8939 = !DILocation(line: 80, column: 2, scope: !8922)
!8940 = distinct !{!8940, !8941, !8942}
!8941 = !DILocation(line: 70, column: 2, scope: !8907)
!8942 = !DILocation(line: 80, column: 16, scope: !8907)
!8943 = !DILocation(line: 82, column: 1, scope: !8907)
!8944 = !DILocation(line: 83, column: 17, scope: !8907)
!8945 = !DILocation(line: 83, column: 2, scope: !8907)
!8946 = !DILocation(line: 84, column: 1, scope: !8907)
!8947 = distinct !DISubprogram(name: "puts", scope: !832, file: !832, line: 106, type: !8948, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !825, retainedNodes: !8950)
!8948 = !DISubroutineType(types: !8949)
!8949 = !{!108, !105}
!8950 = !{!8951}
!8951 = !DILocalVariable(name: "s", arg: 1, scope: !8947, file: !832, line: 106, type: !105)
!8952 = !DILocation(line: 0, scope: !8947)
!8953 = !DILocation(line: 108, column: 6, scope: !8954)
!8954 = distinct !DILexicalBlock(scope: !8947, file: !832, line: 108, column: 6)
!8955 = !DILocation(line: 108, column: 23, scope: !8954)
!8956 = !DILocation(line: 108, column: 6, scope: !8947)
!8957 = !DILocation(line: 112, column: 9, scope: !8947)
!8958 = !DILocation(line: 112, column: 29, scope: !8947)
!8959 = !DILocation(line: 112, column: 2, scope: !8947)
!8960 = !DILocation(line: 113, column: 1, scope: !8947)
!8961 = distinct !DISubprogram(name: "rtio_simple_submit", scope: !863, file: !863, line: 25, type: !8962, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !860, retainedNodes: !9051)
!8962 = !DISubroutineType(types: !8963)
!8963 = !{!108, !8964}
!8964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8965, size: 32)
!8965 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio", file: !125, line: 222, size: 128, elements: !8966)
!8966 = !{!8967, !9032, !9033, !9040}
!8967 = !DIDerivedType(tag: DW_TAG_member, name: "executor", scope: !8965, file: !125, line: 228, baseType: !8968, size: 32)
!8968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8969, size: 32)
!8969 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_executor", file: !125, line: 210, size: 32, elements: !8970)
!8970 = !{!8971}
!8971 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !8969, file: !125, line: 211, baseType: !8972, size: 32)
!8972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8973, size: 32)
!8973 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8974)
!8974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_executor_api", file: !125, line: 168, size: 96, elements: !8975)
!8975 = !{!8976, !8978, !9031}
!8976 = !DIDerivedType(tag: DW_TAG_member, name: "submit", scope: !8974, file: !125, line: 177, baseType: !8977, size: 32)
!8977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8962, size: 32)
!8978 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !8974, file: !125, line: 182, baseType: !8979, size: 32, offset: 32)
!8979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8980, size: 32)
!8980 = !DISubroutineType(types: !8981)
!8981 = !{null, !8964, !8982, !108}
!8982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8983, size: 32)
!8983 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8984)
!8984 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_sqe", file: !125, line: 109, size: 160, elements: !8985)
!8985 = !{!8986, !8987, !8988, !8989, !9022, !9023}
!8986 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !8984, file: !125, line: 110, baseType: !164, size: 8)
!8987 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !8984, file: !125, line: 112, baseType: !164, size: 8, offset: 8)
!8988 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8984, file: !125, line: 114, baseType: !168, size: 16, offset: 16)
!8989 = !DIDerivedType(tag: DW_TAG_member, name: "iodev", scope: !8984, file: !125, line: 116, baseType: !8990, size: 32, offset: 32)
!8990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8991, size: 32)
!8991 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8992)
!8992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev", file: !125, line: 306, size: 96, elements: !8993)
!8993 = !{!8994, !9003, !9021}
!8994 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !8992, file: !125, line: 308, baseType: !8995, size: 32)
!8995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8996, size: 32)
!8996 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8997)
!8997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_api", file: !125, line: 263, size: 32, elements: !8998)
!8998 = !{!8999}
!8999 = !DIDerivedType(tag: DW_TAG_member, name: "submit", scope: !8997, file: !125, line: 271, baseType: !9000, size: 32)
!9000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9001, size: 32)
!9001 = !DISubroutineType(types: !9002)
!9002 = !{null, !8982, !8964}
!9003 = !DIDerivedType(tag: DW_TAG_member, name: "iodev_sq", scope: !8992, file: !125, line: 311, baseType: !9004, size: 32, offset: 32)
!9004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9005, size: 32)
!9005 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_sq", file: !125, line: 298, size: 160, elements: !9006)
!9006 = !{!9007, !9015}
!9007 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !9005, file: !125, line: 299, baseType: !9008, size: 160)
!9008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_spsc", file: !151, line: 58, size: 160, elements: !9009)
!9009 = !{!9010, !9011, !9012, !9013, !9014}
!9010 = !DIDerivedType(tag: DW_TAG_member, name: "acquire", scope: !9008, file: !151, line: 60, baseType: !24, size: 32)
!9011 = !DIDerivedType(tag: DW_TAG_member, name: "consume", scope: !9008, file: !151, line: 63, baseType: !24, size: 32, offset: 32)
!9012 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !9008, file: !151, line: 66, baseType: !142, size: 32, offset: 64)
!9013 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !9008, file: !151, line: 69, baseType: !142, size: 32, offset: 96)
!9014 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !9008, file: !151, line: 72, baseType: !158, size: 32, offset: 128)
!9015 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !9005, file: !125, line: 300, baseType: !9016, offset: 160)
!9016 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9017, elements: !197)
!9017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_iodev_sqe", file: !125, line: 288, size: 64, elements: !9018)
!9018 = !{!9019, !9020}
!9019 = !DIDerivedType(tag: DW_TAG_member, name: "sqe", scope: !9017, file: !125, line: 289, baseType: !8982, size: 32)
!9020 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !9017, file: !125, line: 290, baseType: !8964, size: 32, offset: 32)
!9021 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8992, file: !125, line: 314, baseType: !104, size: 32, offset: 64)
!9022 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !8984, file: !125, line: 125, baseType: !104, size: 32, offset: 64)
!9023 = !DIDerivedType(tag: DW_TAG_member, scope: !8984, file: !125, line: 127, baseType: !9024, size: 64, offset: 96)
!9024 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8984, file: !125, line: 127, size: 64, elements: !9025)
!9025 = !{!9026}
!9026 = !DIDerivedType(tag: DW_TAG_member, scope: !9024, file: !125, line: 128, baseType: !9027, size: 64)
!9027 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9024, file: !125, line: 128, size: 64, elements: !9028)
!9028 = !{!9029, !9030}
!9029 = !DIDerivedType(tag: DW_TAG_member, name: "buf_len", scope: !9027, file: !125, line: 129, baseType: !113, size: 32)
!9030 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !9027, file: !125, line: 131, baseType: !209, size: 32, offset: 32)
!9031 = !DIDerivedType(tag: DW_TAG_member, name: "err", scope: !8974, file: !125, line: 187, baseType: !8979, size: 32, offset: 64)
!9032 = !DIDerivedType(tag: DW_TAG_member, name: "xcqcnt", scope: !8965, file: !125, line: 251, baseType: !142, size: 32, offset: 32)
!9033 = !DIDerivedType(tag: DW_TAG_member, name: "sq", scope: !8965, file: !125, line: 254, baseType: !9034, size: 32, offset: 64)
!9034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9035, size: 32)
!9035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_sq", file: !125, line: 142, size: 160, elements: !9036)
!9036 = !{!9037, !9038}
!9037 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !9035, file: !125, line: 143, baseType: !9008, size: 160)
!9038 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !9035, file: !125, line: 144, baseType: !9039, offset: 160)
!9039 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8984, elements: !197)
!9040 = !DIDerivedType(tag: DW_TAG_member, name: "cq", scope: !8965, file: !125, line: 257, baseType: !9041, size: 32, offset: 96)
!9041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9042, size: 32)
!9042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_cq", file: !125, line: 161, size: 160, elements: !9043)
!9043 = !{!9044, !9045}
!9044 = !DIDerivedType(tag: DW_TAG_member, name: "_spsc", scope: !9042, file: !125, line: 162, baseType: !9008, size: 160)
!9045 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !9042, file: !125, line: 163, baseType: !9046, offset: 160)
!9046 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9047, elements: !197)
!9047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtio_cqe", file: !125, line: 150, size: 64, elements: !9048)
!9048 = !{!9049, !9050}
!9049 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !9047, file: !125, line: 151, baseType: !220, size: 32)
!9050 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !9047, file: !125, line: 152, baseType: !104, size: 32, offset: 32)
!9051 = !{!9052, !9053, !9055, !9057}
!9052 = !DILocalVariable(name: "r", arg: 1, scope: !8961, file: !863, line: 25, type: !8964)
!9053 = !DILocalVariable(name: "sqe", scope: !8961, file: !863, line: 30, type: !9054)
!9054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8984, size: 32)
!9055 = !DILocalVariable(name: "idx", scope: !9056, file: !863, line: 30, type: !24)
!9056 = distinct !DILexicalBlock(scope: !8961, file: !863, line: 30, column: 25)
!9057 = !DILocalVariable(name: "has_consumable", scope: !9056, file: !863, line: 30, type: !422)
!9058 = !DILocation(line: 0, scope: !8961)
!9059 = !DILocation(line: 30, column: 25, scope: !9056)
!9060 = !DILocation(line: 0, scope: !9056)
!9061 = !DILocation(line: 30, column: 25, scope: !9062)
!9062 = distinct !DILexicalBlock(scope: !9063, file: !863, line: 30, column: 25)
!9063 = distinct !DILexicalBlock(scope: !9056, file: !863, line: 30, column: 25)
!9064 = !DILocation(line: 33, column: 3, scope: !9065)
!9065 = distinct !DILexicalBlock(scope: !9066, file: !863, line: 32, column: 19)
!9066 = distinct !DILexicalBlock(scope: !8961, file: !863, line: 32, column: 6)
!9067 = !DILocation(line: 34, column: 2, scope: !9065)
!9068 = !DILocation(line: 36, column: 2, scope: !8961)
!9069 = distinct !DISubprogram(name: "atomic_get", scope: !3767, file: !3767, line: 159, type: !3768, scopeLine: 160, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !860, retainedNodes: !9070)
!9070 = !{!9071}
!9071 = !DILocalVariable(name: "target", arg: 1, scope: !9069, file: !3767, line: 159, type: !3771)
!9072 = !DILocation(line: 0, scope: !9069)
!9073 = !DILocation(line: 161, column: 9, scope: !9069)
!9074 = !DILocation(line: 161, column: 2, scope: !9069)
!9075 = distinct !DISubprogram(name: "rtio_iodev_submit", scope: !125, file: !125, line: 457, type: !9001, scopeLine: 458, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !860, retainedNodes: !9076)
!9076 = !{!9077, !9078}
!9077 = !DILocalVariable(name: "sqe", arg: 1, scope: !9075, file: !125, line: 457, type: !8982)
!9078 = !DILocalVariable(name: "r", arg: 2, scope: !9075, file: !125, line: 457, type: !8964)
!9079 = !DILocation(line: 0, scope: !9075)
!9080 = !DILocation(line: 459, column: 7, scope: !9075)
!9081 = !DILocation(line: 459, column: 14, scope: !9075)
!9082 = !DILocation(line: 459, column: 19, scope: !9075)
!9083 = !DILocation(line: 459, column: 2, scope: !9075)
!9084 = !DILocation(line: 460, column: 1, scope: !9075)
!9085 = distinct !DISubprogram(name: "rtio_simple_ok", scope: !863, file: !863, line: 42, type: !8980, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !860, retainedNodes: !9086)
!9086 = !{!9087, !9088, !9089, !9090}
!9087 = !DILocalVariable(name: "r", arg: 1, scope: !9085, file: !863, line: 42, type: !8964)
!9088 = !DILocalVariable(name: "sqe", arg: 2, scope: !9085, file: !863, line: 42, type: !8982)
!9089 = !DILocalVariable(name: "result", arg: 3, scope: !9085, file: !863, line: 42, type: !108)
!9090 = !DILocalVariable(name: "userdata", scope: !9085, file: !863, line: 44, type: !104)
!9091 = !DILocation(line: 0, scope: !9085)
!9092 = !DILocation(line: 44, column: 24, scope: !9085)
!9093 = !DILocation(line: 46, column: 2, scope: !9094)
!9094 = distinct !DILexicalBlock(scope: !9095, file: !863, line: 46, column: 2)
!9095 = distinct !DILexicalBlock(scope: !9085, file: !863, line: 46, column: 2)
!9096 = !DILocation(line: 46, column: 2, scope: !9095)
!9097 = !DILocation(line: 46, column: 2, scope: !9098)
!9098 = distinct !DILexicalBlock(scope: !9094, file: !863, line: 46, column: 2)
!9099 = !DILocation(line: 47, column: 2, scope: !9085)
!9100 = !DILocation(line: 48, column: 2, scope: !9085)
!9101 = !DILocation(line: 49, column: 1, scope: !9085)
!9102 = distinct !DISubprogram(name: "atomic_add", scope: !3767, file: !3767, line: 86, type: !3803, scopeLine: 87, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !860, retainedNodes: !9103)
!9103 = !{!9104, !9105}
!9104 = !DILocalVariable(name: "target", arg: 1, scope: !9102, file: !3767, line: 86, type: !3805)
!9105 = !DILocalVariable(name: "value", arg: 2, scope: !9102, file: !3767, line: 86, type: !3770)
!9106 = !DILocation(line: 0, scope: !9102)
!9107 = !DILocation(line: 88, column: 9, scope: !9102)
!9108 = !DILocation(line: 88, column: 2, scope: !9102)
!9109 = distinct !DISubprogram(name: "rtio_cqe_submit", scope: !125, file: !125, line: 607, type: !9110, scopeLine: 608, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !860, retainedNodes: !9112)
!9110 = !DISubroutineType(types: !9111)
!9111 = !{null, !8964, !108, !104}
!9112 = !{!9113, !9114, !9115, !9116, !9118, !9120}
!9113 = !DILocalVariable(name: "r", arg: 1, scope: !9109, file: !125, line: 607, type: !8964)
!9114 = !DILocalVariable(name: "result", arg: 2, scope: !9109, file: !125, line: 607, type: !108)
!9115 = !DILocalVariable(name: "userdata", arg: 3, scope: !9109, file: !125, line: 607, type: !104)
!9116 = !DILocalVariable(name: "cqe", scope: !9109, file: !125, line: 609, type: !9117)
!9117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9047, size: 32)
!9118 = !DILocalVariable(name: "idx", scope: !9119, file: !125, line: 609, type: !24)
!9119 = distinct !DILexicalBlock(scope: !9109, file: !125, line: 609, column: 25)
!9120 = !DILocalVariable(name: "acq", scope: !9119, file: !125, line: 609, type: !422)
!9121 = !DILocation(line: 0, scope: !9109)
!9122 = !DILocation(line: 609, column: 25, scope: !9119)
!9123 = !DILocation(line: 0, scope: !9119)
!9124 = !DILocation(line: 612, column: 18, scope: !9125)
!9125 = distinct !DILexicalBlock(scope: !9126, file: !125, line: 611, column: 19)
!9126 = distinct !DILexicalBlock(scope: !9109, file: !125, line: 611, column: 6)
!9127 = !DILocation(line: 612, column: 3, scope: !9125)
!9128 = !DILocation(line: 613, column: 2, scope: !9125)
!9129 = !DILocation(line: 609, column: 25, scope: !9130)
!9130 = distinct !DILexicalBlock(scope: !9131, file: !125, line: 609, column: 25)
!9131 = distinct !DILexicalBlock(scope: !9119, file: !125, line: 609, column: 25)
!9132 = !DILocation(line: 614, column: 8, scope: !9133)
!9133 = distinct !DILexicalBlock(scope: !9126, file: !125, line: 613, column: 9)
!9134 = !DILocation(line: 614, column: 15, scope: !9133)
!9135 = !DILocation(line: 615, column: 8, scope: !9133)
!9136 = !DILocation(line: 615, column: 17, scope: !9133)
!9137 = !DILocation(line: 616, column: 3, scope: !9138)
!9138 = distinct !DILexicalBlock(scope: !9139, file: !125, line: 616, column: 3)
!9139 = distinct !DILexicalBlock(scope: !9133, file: !125, line: 616, column: 3)
!9140 = !DILocation(line: 616, column: 3, scope: !9139)
!9141 = !DILocation(line: 616, column: 3, scope: !9142)
!9142 = distinct !DILexicalBlock(scope: !9138, file: !125, line: 616, column: 3)
!9143 = !DILocation(line: 629, column: 1, scope: !9109)
!9144 = distinct !DISubprogram(name: "atomic_inc", scope: !3767, file: !3767, line: 123, type: !9145, scopeLine: 124, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !860, retainedNodes: !9147)
!9145 = !DISubroutineType(types: !9146)
!9146 = !{!3770, !3805}
!9147 = !{!9148}
!9148 = !DILocalVariable(name: "target", arg: 1, scope: !9144, file: !3767, line: 123, type: !3805)
!9149 = !DILocation(line: 0, scope: !9144)
!9150 = !DILocation(line: 125, column: 9, scope: !9144)
!9151 = !DILocation(line: 125, column: 2, scope: !9144)
!9152 = distinct !DISubprogram(name: "rtio_simple_err", scope: !863, file: !863, line: 54, type: !8980, scopeLine: 55, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !860, retainedNodes: !9153)
!9153 = !{!9154, !9155, !9156, !9157, !9158, !9159, !9160, !9164, !9165, !9168}
!9154 = !DILocalVariable(name: "r", arg: 1, scope: !9152, file: !863, line: 54, type: !8964)
!9155 = !DILocalVariable(name: "sqe", arg: 2, scope: !9152, file: !863, line: 54, type: !8982)
!9156 = !DILocalVariable(name: "result", arg: 3, scope: !9152, file: !863, line: 54, type: !108)
!9157 = !DILocalVariable(name: "nsqe", scope: !9152, file: !863, line: 56, type: !9054)
!9158 = !DILocalVariable(name: "userdata", scope: !9152, file: !863, line: 57, type: !104)
!9159 = !DILocalVariable(name: "chained", scope: !9152, file: !863, line: 58, type: !422)
!9160 = !DILocalVariable(name: "idx", scope: !9161, file: !863, line: 65, type: !24)
!9161 = distinct !DILexicalBlock(scope: !9162, file: !863, line: 65, column: 10)
!9162 = distinct !DILexicalBlock(scope: !9163, file: !863, line: 63, column: 15)
!9163 = distinct !DILexicalBlock(scope: !9152, file: !863, line: 63, column: 6)
!9164 = !DILocalVariable(name: "has_consumable", scope: !9161, file: !863, line: 65, type: !422)
!9165 = !DILocalVariable(name: "idx", scope: !9166, file: !863, line: 70, type: !24)
!9166 = distinct !DILexicalBlock(scope: !9167, file: !863, line: 70, column: 11)
!9167 = distinct !DILexicalBlock(scope: !9162, file: !863, line: 66, column: 58)
!9168 = !DILocalVariable(name: "has_consumable", scope: !9166, file: !863, line: 70, type: !422)
!9169 = !DILocation(line: 0, scope: !9152)
!9170 = !DILocation(line: 57, column: 24, scope: !9152)
!9171 = !DILocation(line: 58, column: 22, scope: !9152)
!9172 = !DILocation(line: 58, column: 28, scope: !9152)
!9173 = !DILocation(line: 58, column: 17, scope: !9152)
!9174 = !DILocation(line: 60, column: 2, scope: !9175)
!9175 = distinct !DILexicalBlock(scope: !9176, file: !863, line: 60, column: 2)
!9176 = distinct !DILexicalBlock(scope: !9152, file: !863, line: 60, column: 2)
!9177 = !DILocation(line: 60, column: 2, scope: !9176)
!9178 = !DILocation(line: 60, column: 2, scope: !9179)
!9179 = distinct !DILexicalBlock(scope: !9175, file: !863, line: 60, column: 2)
!9180 = !DILocation(line: 61, column: 34, scope: !9152)
!9181 = !DILocation(line: 61, column: 2, scope: !9152)
!9182 = !DILocation(line: 63, column: 6, scope: !9152)
!9183 = !DILocation(line: 65, column: 10, scope: !9161)
!9184 = !DILocation(line: 0, scope: !9161)
!9185 = !DILocation(line: 0, scope: !9162)
!9186 = !DILocation(line: 66, column: 32, scope: !9162)
!9187 = !DILocation(line: 66, column: 38, scope: !9162)
!9188 = !DILocation(line: 66, column: 23, scope: !9162)
!9189 = !DILocation(line: 66, column: 3, scope: !9162)
!9190 = !DILocation(line: 67, column: 21, scope: !9167)
!9191 = !DILocation(line: 68, column: 4, scope: !9192)
!9192 = distinct !DILexicalBlock(scope: !9193, file: !863, line: 68, column: 4)
!9193 = distinct !DILexicalBlock(scope: !9167, file: !863, line: 68, column: 4)
!9194 = !DILocation(line: 68, column: 4, scope: !9193)
!9195 = !DILocation(line: 68, column: 4, scope: !9196)
!9196 = distinct !DILexicalBlock(scope: !9192, file: !863, line: 68, column: 4)
!9197 = !DILocation(line: 69, column: 4, scope: !9167)
!9198 = !DILocation(line: 70, column: 11, scope: !9166)
!9199 = !DILocation(line: 0, scope: !9166)
!9200 = !DILocation(line: 74, column: 4, scope: !9201)
!9201 = distinct !DILexicalBlock(scope: !9202, file: !863, line: 73, column: 21)
!9202 = distinct !DILexicalBlock(scope: !9162, file: !863, line: 73, column: 7)
!9203 = !DILocation(line: 75, column: 3, scope: !9201)
!9204 = !DILocation(line: 79, column: 3, scope: !9205)
!9205 = distinct !DILexicalBlock(scope: !9163, file: !863, line: 77, column: 9)
!9206 = !DILocation(line: 81, column: 1, scope: !9152)
!9207 = distinct !DISubprogram(name: "rtio_concurrent_submit", scope: !980, file: !980, line: 119, type: !888, scopeLine: 120, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !871, retainedNodes: !9208)
!9208 = !{!9209, !9210, !9211, !9212, !9213, !9218, !9222, !9223, !9226, !9227, !9229, !9232, !9233, !9235, !9236, !9239}
!9209 = !DILocalVariable(name: "r", arg: 1, scope: !9207, file: !980, line: 119, type: !890)
!9210 = !DILocalVariable(name: "exc", scope: !9207, file: !980, line: 124, type: !874)
!9211 = !DILocalVariable(name: "sqe", scope: !9207, file: !980, line: 126, type: !974)
!9212 = !DILocalVariable(name: "last_sqe", scope: !9207, file: !980, line: 127, type: !974)
!9213 = !DILocalVariable(name: "key", scope: !9207, file: !980, line: 128, type: !9214)
!9214 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !436, line: 106, baseType: !9215)
!9215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !436, line: 32, size: 32, elements: !9216)
!9216 = !{!9217}
!9217 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !9215, file: !436, line: 33, baseType: !108, size: 32)
!9218 = !DILocalVariable(name: "idx", scope: !9219, file: !980, line: 137, type: !24)
!9219 = distinct !DILexicalBlock(scope: !9220, file: !980, line: 137, column: 9)
!9220 = distinct !DILexicalBlock(scope: !9221, file: !980, line: 136, column: 29)
!9221 = distinct !DILexicalBlock(scope: !9207, file: !980, line: 136, column: 6)
!9222 = !DILocalVariable(name: "has_consumable", scope: !9219, file: !980, line: 137, type: !422)
!9223 = !DILocalVariable(name: "idx", scope: !9224, file: !980, line: 140, type: !24)
!9224 = distinct !DILexicalBlock(scope: !9225, file: !980, line: 140, column: 9)
!9225 = distinct !DILexicalBlock(scope: !9221, file: !980, line: 138, column: 9)
!9226 = !DILocalVariable(name: "has_next", scope: !9224, file: !980, line: 140, type: !422)
!9227 = !DILocalVariable(name: "task_idx", scope: !9228, file: !980, line: 148, type: !168)
!9228 = distinct !DILexicalBlock(scope: !9207, file: !980, line: 144, column: 46)
!9229 = !DILocalVariable(name: "idx", scope: !9230, file: !980, line: 159, type: !24)
!9230 = distinct !DILexicalBlock(scope: !9231, file: !980, line: 159, column: 10)
!9231 = distinct !DILexicalBlock(scope: !9228, file: !980, line: 158, column: 58)
!9232 = !DILocalVariable(name: "has_next", scope: !9230, file: !980, line: 159, type: !422)
!9233 = !DILocalVariable(name: "idx", scope: !9234, file: !980, line: 167, type: !24)
!9234 = distinct !DILexicalBlock(scope: !9228, file: !980, line: 167, column: 9)
!9235 = !DILocalVariable(name: "has_next", scope: !9234, file: !980, line: 167, type: !422)
!9236 = !DILocalVariable(name: "idx", scope: !9237, file: !980, line: 181, type: !24)
!9237 = distinct !DILexicalBlock(scope: !9238, file: !980, line: 181, column: 9)
!9238 = distinct !DILexicalBlock(scope: !9207, file: !980, line: 179, column: 22)
!9239 = !DILocalVariable(name: "has_next", scope: !9237, file: !980, line: 181, type: !422)
!9240 = !DILocation(line: 0, scope: !9207)
!9241 = !DILocation(line: 122, column: 2, scope: !9242)
!9242 = distinct !DILexicalBlock(scope: !9243, file: !980, line: 122, column: 2)
!9243 = distinct !DILexicalBlock(scope: !9244, file: !980, line: 122, column: 2)
!9244 = distinct !DILexicalBlock(scope: !9245, file: !980, line: 122, column: 2)
!9245 = distinct !DILexicalBlock(scope: !9207, file: !980, line: 122, column: 2)
!9246 = !DILocation(line: 125, column: 41, scope: !9207)
!9247 = !DILocalVariable(name: "l", arg: 1, scope: !9248, file: !436, line: 136, type: !9251)
!9248 = distinct !DISubprogram(name: "k_spin_lock", scope: !436, file: !436, line: 136, type: !9249, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !871, retainedNodes: !9252)
!9249 = !DISubroutineType(types: !9250)
!9250 = !{!9214, !9251}
!9251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !969, size: 32)
!9252 = !{!9247, !9253}
!9253 = !DILocalVariable(name: "k", scope: !9248, file: !436, line: 139, type: !9214)
!9254 = !DILocation(line: 0, scope: !9248, inlinedAt: !9255)
!9255 = distinct !DILocation(line: 130, column: 8, scope: !9207)
!9256 = !DILocation(line: 55, column: 2, scope: !9257, inlinedAt: !9261)
!9257 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4146, file: !4146, line: 42, type: !4147, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !871, retainedNodes: !9258)
!9258 = !{!9259, !9260}
!9259 = !DILocalVariable(name: "key", scope: !9257, file: !4146, line: 44, type: !32)
!9260 = !DILocalVariable(name: "tmp", scope: !9257, file: !4146, line: 53, type: !32)
!9261 = distinct !DILocation(line: 145, column: 10, scope: !9248, inlinedAt: !9255)
!9262 = !{i64 2027562}
!9263 = !DILocation(line: 0, scope: !9257, inlinedAt: !9261)
!9264 = !DILocation(line: 136, column: 11, scope: !9221)
!9265 = !DILocation(line: 136, column: 20, scope: !9221)
!9266 = !DILocation(line: 0, scope: !9221)
!9267 = !DILocation(line: 136, column: 6, scope: !9207)
!9268 = !DILocation(line: 137, column: 9, scope: !9219)
!9269 = !DILocation(line: 0, scope: !9219)
!9270 = !DILocation(line: 140, column: 9, scope: !9224)
!9271 = !DILocation(line: 0, scope: !9224)
!9272 = !DILocation(line: 173, column: 7, scope: !9207)
!9273 = !DILocation(line: 173, column: 19, scope: !9207)
!9274 = !DILocation(line: 179, column: 2, scope: !9207)
!9275 = !DILocation(line: 144, column: 24, scope: !9207)
!9276 = !DILocation(line: 144, column: 2, scope: !9207)
!9277 = !DILocation(line: 145, column: 3, scope: !9278)
!9278 = distinct !DILexicalBlock(scope: !9279, file: !980, line: 145, column: 3)
!9279 = distinct !DILexicalBlock(scope: !9280, file: !980, line: 145, column: 3)
!9280 = distinct !DILexicalBlock(scope: !9281, file: !980, line: 145, column: 3)
!9281 = distinct !DILexicalBlock(scope: !9228, file: !980, line: 145, column: 3)
!9282 = !DILocation(line: 148, column: 23, scope: !9228)
!9283 = !DILocation(line: 0, scope: !9228)
!9284 = !DILocation(line: 150, column: 3, scope: !9285)
!9285 = distinct !DILexicalBlock(scope: !9286, file: !980, line: 150, column: 3)
!9286 = distinct !DILexicalBlock(scope: !9287, file: !980, line: 150, column: 3)
!9287 = distinct !DILexicalBlock(scope: !9288, file: !980, line: 150, column: 3)
!9288 = distinct !DILexicalBlock(scope: !9228, file: !980, line: 150, column: 3)
!9289 = !DILocation(line: 153, column: 8, scope: !9228)
!9290 = !DILocation(line: 153, column: 3, scope: !9228)
!9291 = !DILocation(line: 153, column: 27, scope: !9228)
!9292 = !DILocation(line: 154, column: 8, scope: !9228)
!9293 = !DILocation(line: 154, column: 3, scope: !9228)
!9294 = !DILocation(line: 154, column: 30, scope: !9228)
!9295 = !DILocation(line: 156, column: 3, scope: !9296)
!9296 = distinct !DILexicalBlock(scope: !9297, file: !980, line: 156, column: 3)
!9297 = distinct !DILexicalBlock(scope: !9298, file: !980, line: 156, column: 3)
!9298 = distinct !DILexicalBlock(scope: !9299, file: !980, line: 156, column: 3)
!9299 = distinct !DILexicalBlock(scope: !9228, file: !980, line: 156, column: 3)
!9300 = !DILocation(line: 158, column: 22, scope: !9228)
!9301 = !DILocation(line: 158, column: 31, scope: !9228)
!9302 = !DILocation(line: 158, column: 37, scope: !9228)
!9303 = !DILocation(line: 158, column: 3, scope: !9228)
!9304 = !DILocation(line: 159, column: 10, scope: !9230)
!9305 = !DILocation(line: 0, scope: !9230)
!9306 = !DILocation(line: 162, column: 3, scope: !9307)
!9307 = distinct !DILexicalBlock(scope: !9308, file: !980, line: 162, column: 3)
!9308 = distinct !DILexicalBlock(scope: !9309, file: !980, line: 162, column: 3)
!9309 = distinct !DILexicalBlock(scope: !9310, file: !980, line: 162, column: 3)
!9310 = distinct !DILexicalBlock(scope: !9228, file: !980, line: 162, column: 3)
!9311 = !DILocation(line: 167, column: 9, scope: !9234)
!9312 = !DILocation(line: 0, scope: !9234)
!9313 = !DILocation(line: 144, column: 21, scope: !9207)
!9314 = !DILocation(line: 179, column: 13, scope: !9207)
!9315 = !DILocation(line: 181, column: 9, scope: !9237)
!9316 = !DILocation(line: 0, scope: !9237)
!9317 = !DILocation(line: 185, column: 16, scope: !9207)
!9318 = !DILocation(line: 188, column: 2, scope: !9207)
!9319 = !DILocalVariable(name: "key", arg: 2, scope: !9320, file: !436, line: 190, type: !9214)
!9320 = distinct !DISubprogram(name: "k_spin_unlock", scope: !436, file: !436, line: 189, type: !9321, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !871, retainedNodes: !9323)
!9321 = !DISubroutineType(types: !9322)
!9322 = !{null, !9251, !9214}
!9323 = !{!9324, !9319}
!9324 = !DILocalVariable(name: "l", arg: 1, scope: !9320, file: !436, line: 189, type: !9251)
!9325 = !DILocation(line: 0, scope: !9320, inlinedAt: !9326)
!9326 = distinct !DILocation(line: 190, column: 2, scope: !9207)
!9327 = !DILocalVariable(name: "key", arg: 1, scope: !9328, file: !4146, line: 84, type: !32)
!9328 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4146, file: !4146, line: 84, type: !4159, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !871, retainedNodes: !9329)
!9329 = !{!9327}
!9330 = !DILocation(line: 0, scope: !9328, inlinedAt: !9331)
!9331 = distinct !DILocation(line: 215, column: 2, scope: !9320, inlinedAt: !9326)
!9332 = !DILocation(line: 95, column: 2, scope: !9328, inlinedAt: !9331)
!9333 = !{i64 2028379}
!9334 = !DILocation(line: 192, column: 2, scope: !9207)
!9335 = distinct !DISubprogram(name: "atomic_get", scope: !3767, file: !3767, line: 159, type: !3768, scopeLine: 160, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !871, retainedNodes: !9336)
!9336 = !{!9337}
!9337 = !DILocalVariable(name: "target", arg: 1, scope: !9335, file: !3767, line: 159, type: !3771)
!9338 = !DILocation(line: 0, scope: !9335)
!9339 = !DILocation(line: 161, column: 9, scope: !9335)
!9340 = !DILocation(line: 161, column: 2, scope: !9335)
!9341 = distinct !DISubprogram(name: "conex_task_free", scope: !980, file: !980, line: 39, type: !9342, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !871, retainedNodes: !9344)
!9342 = !DISubroutineType(types: !9343)
!9343 = !{!422, !874}
!9344 = !{!9345}
!9345 = !DILocalVariable(name: "exc", arg: 1, scope: !9341, file: !980, line: 39, type: !874)
!9346 = !DILocation(line: 0, scope: !9341)
!9347 = !DILocation(line: 41, column: 15, scope: !9341)
!9348 = !DILocation(line: 41, column: 10, scope: !9341)
!9349 = !DILocation(line: 41, column: 30, scope: !9341)
!9350 = !DILocation(line: 41, column: 25, scope: !9341)
!9351 = !DILocation(line: 41, column: 23, scope: !9341)
!9352 = !DILocation(line: 41, column: 48, scope: !9341)
!9353 = !DILocation(line: 41, column: 43, scope: !9341)
!9354 = !DILocation(line: 41, column: 40, scope: !9341)
!9355 = !DILocation(line: 41, column: 2, scope: !9341)
!9356 = distinct !DISubprogram(name: "conex_task_next", scope: !980, file: !980, line: 47, type: !9357, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !871, retainedNodes: !9359)
!9357 = !DISubroutineType(types: !9358)
!9358 = !{!168, !874}
!9359 = !{!9360, !9361}
!9360 = !DILocalVariable(name: "exc", arg: 1, scope: !9356, file: !980, line: 47, type: !874)
!9361 = !DILocalVariable(name: "task_id", scope: !9356, file: !980, line: 49, type: !168)
!9362 = !DILocation(line: 0, scope: !9356)
!9363 = !DILocation(line: 49, column: 26, scope: !9356)
!9364 = !DILocation(line: 51, column: 14, scope: !9356)
!9365 = !DILocation(line: 52, column: 2, scope: !9356)
!9366 = distinct !DISubprogram(name: "conex_resume", scope: !980, file: !980, line: 94, type: !9367, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !871, retainedNodes: !9369)
!9367 = !DISubroutineType(types: !9368)
!9368 = !{null, !890, !874}
!9369 = !{!9370, !9371, !9372}
!9370 = !DILocalVariable(name: "r", arg: 1, scope: !9366, file: !980, line: 94, type: !890)
!9371 = !DILocalVariable(name: "exc", arg: 2, scope: !9366, file: !980, line: 94, type: !874)
!9372 = !DILocalVariable(name: "task_id", scope: !9373, file: !980, line: 97, type: !168)
!9373 = distinct !DILexicalBlock(scope: !9366, file: !980, line: 97, column: 2)
!9374 = !DILocation(line: 0, scope: !9366)
!9375 = !DILocation(line: 97, column: 31, scope: !9373)
!9376 = !DILocation(line: 0, scope: !9373)
!9377 = !DILocation(line: 97, column: 56, scope: !9378)
!9378 = distinct !DILexicalBlock(scope: !9373, file: !980, line: 97, column: 2)
!9379 = !DILocation(line: 97, column: 49, scope: !9378)
!9380 = !DILocation(line: 97, column: 2, scope: !9373)
!9381 = !DILocation(line: 104, column: 1, scope: !9366)
!9382 = !DILocation(line: 98, column: 12, scope: !9383)
!9383 = distinct !DILexicalBlock(scope: !9384, file: !980, line: 98, column: 7)
!9384 = distinct !DILexicalBlock(scope: !9378, file: !980, line: 97, column: 76)
!9385 = !DILocation(line: 98, column: 39, scope: !9383)
!9386 = !DILocation(line: 98, column: 32, scope: !9383)
!9387 = !DILocation(line: 98, column: 7, scope: !9383)
!9388 = !DILocation(line: 98, column: 50, scope: !9383)
!9389 = !DILocation(line: 98, column: 7, scope: !9384)
!9390 = !DILocation(line: 99, column: 4, scope: !9391)
!9391 = distinct !DILexicalBlock(scope: !9392, file: !980, line: 99, column: 4)
!9392 = distinct !DILexicalBlock(scope: !9393, file: !980, line: 99, column: 4)
!9393 = distinct !DILexicalBlock(scope: !9394, file: !980, line: 99, column: 4)
!9394 = distinct !DILexicalBlock(scope: !9395, file: !980, line: 99, column: 4)
!9395 = distinct !DILexicalBlock(scope: !9383, file: !980, line: 98, column: 74)
!9396 = !DILocation(line: 100, column: 9, scope: !9395)
!9397 = !DILocation(line: 100, column: 4, scope: !9395)
!9398 = !DILocation(line: 100, column: 30, scope: !9395)
!9399 = !DILocation(line: 101, column: 27, scope: !9395)
!9400 = !DILocation(line: 101, column: 22, scope: !9395)
!9401 = !DILocation(line: 101, column: 4, scope: !9395)
!9402 = !DILocation(line: 102, column: 3, scope: !9395)
!9403 = !DILocation(line: 97, column: 72, scope: !9378)
!9404 = distinct !{!9404, !9380, !9405}
!9405 = !DILocation(line: 103, column: 2, scope: !9373)
!9406 = distinct !DISubprogram(name: "rtio_iodev_submit", scope: !125, file: !125, line: 457, type: !927, scopeLine: 458, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !871, retainedNodes: !9407)
!9407 = !{!9408, !9409}
!9408 = !DILocalVariable(name: "sqe", arg: 1, scope: !9406, file: !125, line: 457, type: !929)
!9409 = !DILocalVariable(name: "r", arg: 2, scope: !9406, file: !125, line: 457, type: !890)
!9410 = !DILocation(line: 0, scope: !9406)
!9411 = !DILocation(line: 459, column: 7, scope: !9406)
!9412 = !DILocation(line: 459, column: 14, scope: !9406)
!9413 = !DILocation(line: 459, column: 19, scope: !9406)
!9414 = !DILocation(line: 459, column: 2, scope: !9406)
!9415 = !DILocation(line: 460, column: 1, scope: !9406)
!9416 = distinct !DISubprogram(name: "rtio_concurrent_ok", scope: !980, file: !980, line: 198, type: !965, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !871, retainedNodes: !9417)
!9417 = !{!9418, !9419, !9420, !9421, !9422, !9423, !9424, !9425, !9429}
!9418 = !DILocalVariable(name: "r", arg: 1, scope: !9416, file: !980, line: 198, type: !890)
!9419 = !DILocalVariable(name: "sqe", arg: 2, scope: !9416, file: !980, line: 198, type: !929)
!9420 = !DILocalVariable(name: "result", arg: 3, scope: !9416, file: !980, line: 198, type: !108)
!9421 = !DILocalVariable(name: "next_sqe", scope: !9416, file: !980, line: 200, type: !974)
!9422 = !DILocalVariable(name: "key", scope: !9416, file: !980, line: 201, type: !9214)
!9423 = !DILocalVariable(name: "exc", scope: !9416, file: !980, line: 202, type: !874)
!9424 = !DILocalVariable(name: "task_id", scope: !9416, file: !980, line: 216, type: !168)
!9425 = !DILocalVariable(name: "idx", scope: !9426, file: !980, line: 219, type: !24)
!9426 = distinct !DILexicalBlock(scope: !9427, file: !980, line: 219, column: 14)
!9427 = distinct !DILexicalBlock(scope: !9428, file: !980, line: 218, column: 37)
!9428 = distinct !DILexicalBlock(scope: !9416, file: !980, line: 218, column: 6)
!9429 = !DILocalVariable(name: "has_next", scope: !9426, file: !980, line: 219, type: !422)
!9430 = !DILocation(line: 0, scope: !9416)
!9431 = !DILocation(line: 202, column: 79, scope: !9416)
!9432 = !DILocation(line: 0, scope: !9248, inlinedAt: !9433)
!9433 = distinct !DILocation(line: 211, column: 8, scope: !9416)
!9434 = !DILocation(line: 55, column: 2, scope: !9257, inlinedAt: !9435)
!9435 = distinct !DILocation(line: 145, column: 10, scope: !9248, inlinedAt: !9433)
!9436 = !DILocation(line: 0, scope: !9257, inlinedAt: !9435)
!9437 = !DILocation(line: 213, column: 34, scope: !9416)
!9438 = !DILocation(line: 213, column: 2, scope: !9416)
!9439 = !DILocation(line: 216, column: 21, scope: !9416)
!9440 = !DILocation(line: 218, column: 11, scope: !9428)
!9441 = !DILocation(line: 218, column: 17, scope: !9428)
!9442 = !DILocation(line: 218, column: 6, scope: !9416)
!9443 = !DILocation(line: 219, column: 14, scope: !9426)
!9444 = !DILocation(line: 0, scope: !9426)
!9445 = !DILocation(line: 221, column: 3, scope: !9427)
!9446 = !DILocation(line: 223, column: 8, scope: !9427)
!9447 = !DILocation(line: 223, column: 3, scope: !9427)
!9448 = !DILocation(line: 223, column: 26, scope: !9427)
!9449 = !DILocation(line: 224, column: 2, scope: !9427)
!9450 = !DILocation(line: 225, column: 8, scope: !9451)
!9451 = distinct !DILexicalBlock(scope: !9428, file: !980, line: 224, column: 9)
!9452 = !DILocation(line: 225, column: 3, scope: !9451)
!9453 = !DILocation(line: 225, column: 30, scope: !9451)
!9454 = !DILocation(line: 233, column: 2, scope: !9416)
!9455 = !DILocation(line: 0, scope: !9320, inlinedAt: !9456)
!9456 = distinct !DILocation(line: 235, column: 2, scope: !9416)
!9457 = !DILocation(line: 0, scope: !9328, inlinedAt: !9458)
!9458 = distinct !DILocation(line: 215, column: 2, scope: !9320, inlinedAt: !9456)
!9459 = !DILocation(line: 95, column: 2, scope: !9328, inlinedAt: !9458)
!9460 = !DILocation(line: 236, column: 1, scope: !9416)
!9461 = distinct !DISubprogram(name: "rtio_cqe_submit", scope: !125, file: !125, line: 607, type: !9462, scopeLine: 608, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !871, retainedNodes: !9464)
!9462 = !DISubroutineType(types: !9463)
!9463 = !{null, !890, !108, !104}
!9464 = !{!9465, !9466, !9467, !9468, !9470, !9472}
!9465 = !DILocalVariable(name: "r", arg: 1, scope: !9461, file: !125, line: 607, type: !890)
!9466 = !DILocalVariable(name: "result", arg: 2, scope: !9461, file: !125, line: 607, type: !108)
!9467 = !DILocalVariable(name: "userdata", arg: 3, scope: !9461, file: !125, line: 607, type: !104)
!9468 = !DILocalVariable(name: "cqe", scope: !9461, file: !125, line: 609, type: !9469)
!9469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !959, size: 32)
!9470 = !DILocalVariable(name: "idx", scope: !9471, file: !125, line: 609, type: !24)
!9471 = distinct !DILexicalBlock(scope: !9461, file: !125, line: 609, column: 25)
!9472 = !DILocalVariable(name: "acq", scope: !9471, file: !125, line: 609, type: !422)
!9473 = !DILocation(line: 0, scope: !9461)
!9474 = !DILocation(line: 609, column: 25, scope: !9471)
!9475 = !DILocation(line: 0, scope: !9471)
!9476 = !DILocation(line: 612, column: 18, scope: !9477)
!9477 = distinct !DILexicalBlock(scope: !9478, file: !125, line: 611, column: 19)
!9478 = distinct !DILexicalBlock(scope: !9461, file: !125, line: 611, column: 6)
!9479 = !DILocation(line: 612, column: 3, scope: !9477)
!9480 = !DILocation(line: 613, column: 2, scope: !9477)
!9481 = !DILocation(line: 609, column: 25, scope: !9482)
!9482 = distinct !DILexicalBlock(scope: !9483, file: !125, line: 609, column: 25)
!9483 = distinct !DILexicalBlock(scope: !9471, file: !125, line: 609, column: 25)
!9484 = !DILocation(line: 614, column: 8, scope: !9485)
!9485 = distinct !DILexicalBlock(scope: !9478, file: !125, line: 613, column: 9)
!9486 = !DILocation(line: 614, column: 15, scope: !9485)
!9487 = !DILocation(line: 615, column: 8, scope: !9485)
!9488 = !DILocation(line: 615, column: 17, scope: !9485)
!9489 = !DILocation(line: 616, column: 3, scope: !9490)
!9490 = distinct !DILexicalBlock(scope: !9491, file: !125, line: 616, column: 3)
!9491 = distinct !DILexicalBlock(scope: !9485, file: !125, line: 616, column: 3)
!9492 = !DILocation(line: 616, column: 3, scope: !9491)
!9493 = !DILocation(line: 616, column: 3, scope: !9494)
!9494 = distinct !DILexicalBlock(scope: !9490, file: !125, line: 616, column: 3)
!9495 = !DILocation(line: 629, column: 1, scope: !9461)
!9496 = distinct !DISubprogram(name: "conex_task_id", scope: !980, file: !980, line: 55, type: !9497, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !871, retainedNodes: !9499)
!9497 = !DISubroutineType(types: !9498)
!9498 = !{!168, !874, !929}
!9499 = !{!9500, !9501, !9502}
!9500 = !DILocalVariable(name: "exc", arg: 1, scope: !9496, file: !980, line: 55, type: !874)
!9501 = !DILocalVariable(name: "sqe", arg: 2, scope: !9496, file: !980, line: 56, type: !929)
!9502 = !DILocalVariable(name: "task_id", scope: !9496, file: !980, line: 58, type: !168)
!9503 = !DILocation(line: 0, scope: !9496)
!9504 = !DILocation(line: 58, column: 26, scope: !9496)
!9505 = !DILocation(line: 60, column: 17, scope: !9506)
!9506 = distinct !DILexicalBlock(scope: !9507, file: !980, line: 60, column: 2)
!9507 = distinct !DILexicalBlock(scope: !9496, file: !980, line: 60, column: 2)
!9508 = !DILocation(line: 60, column: 2, scope: !9507)
!9509 = !DILocation(line: 61, column: 12, scope: !9510)
!9510 = distinct !DILexicalBlock(scope: !9511, file: !980, line: 61, column: 7)
!9511 = distinct !DILexicalBlock(scope: !9506, file: !980, line: 60, column: 44)
!9512 = !DILocation(line: 61, column: 29, scope: !9510)
!9513 = !DILocation(line: 61, column: 7, scope: !9510)
!9514 = !DILocation(line: 61, column: 47, scope: !9510)
!9515 = !DILocation(line: 61, column: 7, scope: !9511)
!9516 = !DILocation(line: 60, column: 40, scope: !9506)
!9517 = distinct !{!9517, !9508, !9518}
!9518 = !DILocation(line: 64, column: 2, scope: !9507)
!9519 = !DILocation(line: 65, column: 2, scope: !9496)
!9520 = distinct !DISubprogram(name: "conex_sweep_resume", scope: !980, file: !980, line: 106, type: !9367, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !871, retainedNodes: !9521)
!9521 = !{!9522, !9523}
!9522 = !DILocalVariable(name: "r", arg: 1, scope: !9520, file: !980, line: 106, type: !890)
!9523 = !DILocalVariable(name: "exc", arg: 2, scope: !9520, file: !980, line: 106, type: !874)
!9524 = !DILocation(line: 0, scope: !9520)
!9525 = !DILocation(line: 108, column: 2, scope: !9520)
!9526 = !DILocation(line: 109, column: 2, scope: !9520)
!9527 = !DILocation(line: 110, column: 1, scope: !9520)
!9528 = distinct !DISubprogram(name: "conex_sweep", scope: !980, file: !980, line: 80, type: !9367, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !871, retainedNodes: !9529)
!9529 = !{!9530, !9531, !9532}
!9530 = !DILocalVariable(name: "r", arg: 1, scope: !9528, file: !980, line: 80, type: !890)
!9531 = !DILocalVariable(name: "exc", arg: 2, scope: !9528, file: !980, line: 80, type: !874)
!9532 = !DILocalVariable(name: "task_id", scope: !9533, file: !980, line: 83, type: !168)
!9533 = distinct !DILexicalBlock(scope: !9528, file: !980, line: 83, column: 2)
!9534 = !DILocation(line: 0, scope: !9528)
!9535 = !DILocation(line: 83, column: 31, scope: !9533)
!9536 = !DILocation(line: 0, scope: !9533)
!9537 = !DILocation(line: 84, column: 12, scope: !9538)
!9538 = distinct !DILexicalBlock(scope: !9539, file: !980, line: 84, column: 7)
!9539 = distinct !DILexicalBlock(scope: !9540, file: !980, line: 83, column: 76)
!9540 = distinct !DILexicalBlock(scope: !9533, file: !980, line: 83, column: 2)
!9541 = !DILocation(line: 83, column: 56, scope: !9540)
!9542 = !DILocation(line: 83, column: 49, scope: !9540)
!9543 = !DILocation(line: 83, column: 2, scope: !9533)
!9544 = !DILocation(line: 84, column: 39, scope: !9538)
!9545 = !DILocation(line: 84, column: 32, scope: !9538)
!9546 = !DILocation(line: 84, column: 7, scope: !9538)
!9547 = !DILocation(line: 84, column: 50, scope: !9538)
!9548 = !DILocation(line: 84, column: 7, scope: !9539)
!9549 = !DILocation(line: 85, column: 4, scope: !9550)
!9550 = distinct !DILexicalBlock(scope: !9551, file: !980, line: 85, column: 4)
!9551 = distinct !DILexicalBlock(scope: !9552, file: !980, line: 85, column: 4)
!9552 = distinct !DILexicalBlock(scope: !9553, file: !980, line: 85, column: 4)
!9553 = distinct !DILexicalBlock(scope: !9554, file: !980, line: 85, column: 4)
!9554 = distinct !DILexicalBlock(scope: !9538, file: !980, line: 84, column: 73)
!9555 = !DILocation(line: 86, column: 4, scope: !9554)
!9556 = !DILocation(line: 87, column: 17, scope: !9554)
!9557 = !DILocation(line: 83, column: 72, scope: !9540)
!9558 = distinct !{!9558, !9543, !9559}
!9559 = !DILocation(line: 91, column: 2, scope: !9533)
!9560 = !DILocation(line: 92, column: 1, scope: !9528)
!9561 = distinct !DISubprogram(name: "conex_sweep_task", scope: !980, file: !980, line: 68, type: !9367, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !871, retainedNodes: !9562)
!9562 = !{!9563, !9564, !9565, !9566, !9568, !9569, !9572}
!9563 = !DILocalVariable(name: "r", arg: 1, scope: !9561, file: !980, line: 68, type: !890)
!9564 = !DILocalVariable(name: "exc", arg: 2, scope: !9561, file: !980, line: 68, type: !874)
!9565 = !DILocalVariable(name: "sqe", scope: !9561, file: !980, line: 70, type: !974)
!9566 = !DILocalVariable(name: "idx", scope: !9567, file: !980, line: 70, type: !24)
!9567 = distinct !DILexicalBlock(scope: !9561, file: !980, line: 70, column: 25)
!9568 = !DILocalVariable(name: "has_consumable", scope: !9567, file: !980, line: 70, type: !422)
!9569 = !DILocalVariable(name: "idx", scope: !9570, file: !980, line: 74, type: !24)
!9570 = distinct !DILexicalBlock(scope: !9571, file: !980, line: 74, column: 9)
!9571 = distinct !DILexicalBlock(scope: !9561, file: !980, line: 72, column: 55)
!9572 = !DILocalVariable(name: "has_consumable", scope: !9570, file: !980, line: 74, type: !422)
!9573 = !DILocation(line: 0, scope: !9561)
!9574 = !DILocation(line: 70, column: 25, scope: !9567)
!9575 = !DILocation(line: 0, scope: !9567)
!9576 = !DILocation(line: 72, column: 29, scope: !9561)
!9577 = !DILocation(line: 72, column: 35, scope: !9561)
!9578 = !DILocation(line: 72, column: 21, scope: !9561)
!9579 = !DILocation(line: 72, column: 2, scope: !9561)
!9580 = !DILocation(line: 73, column: 3, scope: !9581)
!9581 = distinct !DILexicalBlock(scope: !9582, file: !980, line: 73, column: 3)
!9582 = distinct !DILexicalBlock(scope: !9571, file: !980, line: 73, column: 3)
!9583 = !DILocation(line: 73, column: 3, scope: !9582)
!9584 = !DILocation(line: 73, column: 3, scope: !9585)
!9585 = distinct !DILexicalBlock(scope: !9581, file: !980, line: 73, column: 3)
!9586 = !DILocation(line: 74, column: 9, scope: !9570)
!9587 = !DILocation(line: 0, scope: !9570)
!9588 = !DILocation(line: 77, column: 2, scope: !9589)
!9589 = distinct !DILexicalBlock(scope: !9590, file: !980, line: 77, column: 2)
!9590 = distinct !DILexicalBlock(scope: !9561, file: !980, line: 77, column: 2)
!9591 = !DILocation(line: 77, column: 2, scope: !9590)
!9592 = !DILocation(line: 77, column: 2, scope: !9593)
!9593 = distinct !DILexicalBlock(scope: !9589, file: !980, line: 77, column: 2)
!9594 = !DILocation(line: 78, column: 1, scope: !9561)
!9595 = distinct !DISubprogram(name: "atomic_add", scope: !3767, file: !3767, line: 86, type: !3803, scopeLine: 87, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !871, retainedNodes: !9596)
!9596 = !{!9597, !9598}
!9597 = !DILocalVariable(name: "target", arg: 1, scope: !9595, file: !3767, line: 86, type: !3805)
!9598 = !DILocalVariable(name: "value", arg: 2, scope: !9595, file: !3767, line: 86, type: !3770)
!9599 = !DILocation(line: 0, scope: !9595)
!9600 = !DILocation(line: 88, column: 9, scope: !9595)
!9601 = !DILocation(line: 88, column: 2, scope: !9595)
!9602 = distinct !DISubprogram(name: "atomic_inc", scope: !3767, file: !3767, line: 123, type: !9145, scopeLine: 124, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !871, retainedNodes: !9603)
!9603 = !{!9604}
!9604 = !DILocalVariable(name: "target", arg: 1, scope: !9602, file: !3767, line: 123, type: !3805)
!9605 = !DILocation(line: 0, scope: !9602)
!9606 = !DILocation(line: 125, column: 9, scope: !9602)
!9607 = !DILocation(line: 125, column: 2, scope: !9602)
!9608 = distinct !DISubprogram(name: "rtio_concurrent_err", scope: !980, file: !980, line: 241, type: !965, scopeLine: 242, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !871, retainedNodes: !9609)
!9609 = !{!9610, !9611, !9612, !9613, !9614, !9615, !9616, !9617, !9621, !9622, !9625}
!9610 = !DILocalVariable(name: "r", arg: 1, scope: !9608, file: !980, line: 241, type: !890)
!9611 = !DILocalVariable(name: "sqe", arg: 2, scope: !9608, file: !980, line: 241, type: !929)
!9612 = !DILocalVariable(name: "result", arg: 3, scope: !9608, file: !980, line: 241, type: !108)
!9613 = !DILocalVariable(name: "nsqe", scope: !9608, file: !980, line: 243, type: !974)
!9614 = !DILocalVariable(name: "key", scope: !9608, file: !980, line: 244, type: !9214)
!9615 = !DILocalVariable(name: "exc", scope: !9608, file: !980, line: 245, type: !874)
!9616 = !DILocalVariable(name: "task_id", scope: !9608, file: !980, line: 260, type: !168)
!9617 = !DILocalVariable(name: "idx", scope: !9618, file: !980, line: 265, type: !24)
!9618 = distinct !DILexicalBlock(scope: !9619, file: !980, line: 265, column: 10)
!9619 = distinct !DILexicalBlock(scope: !9620, file: !980, line: 264, column: 37)
!9620 = distinct !DILexicalBlock(scope: !9608, file: !980, line: 264, column: 6)
!9621 = !DILocalVariable(name: "has_next", scope: !9618, file: !980, line: 265, type: !422)
!9622 = !DILocalVariable(name: "idx", scope: !9623, file: !980, line: 268, type: !24)
!9623 = distinct !DILexicalBlock(scope: !9624, file: !980, line: 268, column: 11)
!9624 = distinct !DILexicalBlock(scope: !9619, file: !980, line: 266, column: 58)
!9625 = !DILocalVariable(name: "has_next", scope: !9623, file: !980, line: 268, type: !422)
!9626 = !DILocation(line: 0, scope: !9608)
!9627 = !DILocation(line: 245, column: 79, scope: !9608)
!9628 = !DILocation(line: 0, scope: !9248, inlinedAt: !9629)
!9629 = distinct !DILocation(line: 255, column: 8, scope: !9608)
!9630 = !DILocation(line: 55, column: 2, scope: !9257, inlinedAt: !9631)
!9631 = distinct !DILocation(line: 145, column: 10, scope: !9248, inlinedAt: !9629)
!9632 = !DILocation(line: 0, scope: !9257, inlinedAt: !9631)
!9633 = !DILocation(line: 257, column: 34, scope: !9608)
!9634 = !DILocation(line: 257, column: 2, scope: !9608)
!9635 = !DILocation(line: 260, column: 21, scope: !9608)
!9636 = !DILocation(line: 264, column: 11, scope: !9620)
!9637 = !DILocation(line: 264, column: 17, scope: !9620)
!9638 = !DILocation(line: 264, column: 6, scope: !9608)
!9639 = !DILocation(line: 265, column: 10, scope: !9618)
!9640 = !DILocation(line: 0, scope: !9618)
!9641 = !DILocation(line: 266, column: 23, scope: !9619)
!9642 = !DILocation(line: 266, column: 3, scope: !9619)
!9643 = !DILocation(line: 266, column: 32, scope: !9619)
!9644 = !DILocation(line: 266, column: 38, scope: !9619)
!9645 = !DILocation(line: 267, column: 41, scope: !9624)
!9646 = !DILocation(line: 267, column: 4, scope: !9624)
!9647 = !DILocation(line: 268, column: 11, scope: !9623)
!9648 = !DILocation(line: 0, scope: !9623)
!9649 = !DILocation(line: 273, column: 7, scope: !9608)
!9650 = !DILocation(line: 273, column: 2, scope: !9608)
!9651 = !DILocation(line: 273, column: 28, scope: !9608)
!9652 = !DILocation(line: 275, column: 2, scope: !9608)
!9653 = !DILocation(line: 0, scope: !9320, inlinedAt: !9654)
!9654 = distinct !DILocation(line: 277, column: 2, scope: !9608)
!9655 = !DILocation(line: 0, scope: !9328, inlinedAt: !9656)
!9656 = distinct !DILocation(line: 215, column: 2, scope: !9320, inlinedAt: !9654)
!9657 = !DILocation(line: 95, column: 2, scope: !9328, inlinedAt: !9656)
!9658 = !DILocation(line: 278, column: 1, scope: !9608)
!9659 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !1101, file: !1101, line: 368, type: !1151, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !988, retainedNodes: !9660)
!9660 = !{!9661}
!9661 = !DILocalVariable(name: "dev", arg: 1, scope: !9659, file: !1101, line: 368, type: !1127)
!9662 = !DILocation(line: 0, scope: !9659)
!9663 = !DILocation(line: 370, column: 2, scope: !9659)
!9664 = !DILocation(line: 371, column: 1, scope: !9659)
!9665 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !1101, file: !1101, line: 243, type: !9666, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !988, retainedNodes: !9668)
!9666 = !DISubroutineType(types: !9667)
!9667 = !{null, !108, !108, !1127}
!9668 = !{!9669, !9670, !9671, !9672, !9674}
!9669 = !DILocalVariable(name: "min", arg: 1, scope: !9665, file: !1101, line: 243, type: !108)
!9670 = !DILocalVariable(name: "max", arg: 2, scope: !9665, file: !1101, line: 243, type: !108)
!9671 = !DILocalVariable(name: "dev", arg: 3, scope: !9665, file: !1101, line: 243, type: !1127)
!9672 = !DILocalVariable(name: "data", scope: !9665, file: !1101, line: 245, type: !9673)
!9673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1131, size: 32)
!9674 = !DILocalVariable(name: "line", scope: !9665, file: !1101, line: 246, type: !108)
!9675 = !DILocation(line: 0, scope: !9665)
!9676 = !DILocation(line: 245, column: 38, scope: !9665)
!9677 = !DILocation(line: 249, column: 24, scope: !9678)
!9678 = distinct !DILexicalBlock(scope: !9679, file: !1101, line: 249, column: 2)
!9679 = distinct !DILexicalBlock(scope: !9665, file: !1101, line: 249, column: 2)
!9680 = !DILocation(line: 249, column: 2, scope: !9679)
!9681 = !DILocation(line: 251, column: 7, scope: !9682)
!9682 = distinct !DILexicalBlock(scope: !9683, file: !1101, line: 251, column: 7)
!9683 = distinct !DILexicalBlock(scope: !9678, file: !1101, line: 249, column: 39)
!9684 = !DILocation(line: 251, column: 7, scope: !9683)
!9685 = !DILocation(line: 253, column: 4, scope: !9686)
!9686 = distinct !DILexicalBlock(scope: !9682, file: !1101, line: 251, column: 36)
!9687 = !DILocation(line: 256, column: 24, scope: !9688)
!9688 = distinct !DILexicalBlock(scope: !9686, file: !1101, line: 256, column: 8)
!9689 = !DILocation(line: 256, column: 9, scope: !9688)
!9690 = !DILocation(line: 256, column: 8, scope: !9686)
!9691 = !DILocation(line: 260, column: 43, scope: !9686)
!9692 = !DILocation(line: 260, column: 4, scope: !9686)
!9693 = !DILocation(line: 261, column: 3, scope: !9686)
!9694 = !DILocation(line: 249, column: 35, scope: !9678)
!9695 = distinct !{!9695, !9680, !9696}
!9696 = !DILocation(line: 262, column: 2, scope: !9679)
!9697 = !DILocation(line: 263, column: 1, scope: !9665)
!9698 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !1101, file: !1101, line: 158, type: !563, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !988, retainedNodes: !9699)
!9699 = !{!9700}
!9700 = !DILocalVariable(name: "line", arg: 1, scope: !9698, file: !1101, line: 158, type: !108)
!9701 = !DILocation(line: 0, scope: !9698)
!9702 = !DILocation(line: 170, column: 38, scope: !9703)
!9703 = distinct !DILexicalBlock(scope: !9704, file: !1101, line: 160, column: 17)
!9704 = distinct !DILexicalBlock(scope: !9698, file: !1101, line: 160, column: 6)
!9705 = !DILocation(line: 170, column: 10, scope: !9703)
!9706 = !DILocation(line: 176, column: 1, scope: !9698)
!9707 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !1101, file: !1101, line: 183, type: !9708, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !988, retainedNodes: !9710)
!9708 = !DISubroutineType(types: !9709)
!9709 = !{null, !108}
!9710 = !{!9711}
!9711 = !DILocalVariable(name: "line", arg: 1, scope: !9707, file: !1101, line: 183, type: !108)
!9712 = !DILocation(line: 0, scope: !9707)
!9713 = !DILocation(line: 195, column: 28, scope: !9714)
!9714 = distinct !DILexicalBlock(scope: !9715, file: !1101, line: 185, column: 17)
!9715 = distinct !DILexicalBlock(scope: !9707, file: !1101, line: 185, column: 6)
!9716 = !DILocation(line: 195, column: 3, scope: !9714)
!9717 = !DILocation(line: 200, column: 1, scope: !9707)
!9718 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !9719, file: !9719, line: 910, type: !7219, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !988, retainedNodes: !9720)
!9719 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9720 = !{!9721}
!9721 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9718, file: !9719, line: 910, type: !113)
!9722 = !DILocation(line: 0, scope: !9718)
!9723 = !DILocation(line: 912, column: 3, scope: !9718)
!9724 = !DILocation(line: 913, column: 1, scope: !9718)
!9725 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !9719, file: !9719, line: 834, type: !8374, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !988, retainedNodes: !9726)
!9726 = !{!9727}
!9727 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9725, file: !9719, line: 834, type: !113)
!9728 = !DILocation(line: 0, scope: !9725)
!9729 = !DILocation(line: 836, column: 11, scope: !9725)
!9730 = !DILocation(line: 836, column: 40, scope: !9725)
!9731 = !DILocation(line: 836, column: 3, scope: !9725)
!9732 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !1101, file: !1101, line: 304, type: !1151, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !988, retainedNodes: !9733)
!9733 = !{!9734}
!9734 = !DILocalVariable(name: "dev", arg: 1, scope: !9732, file: !1101, line: 304, type: !1127)
!9735 = !DILocation(line: 0, scope: !9732)
!9736 = !DILocation(line: 306, column: 2, scope: !9732)
!9737 = !DILocation(line: 307, column: 1, scope: !9732)
!9738 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !1101, file: !1101, line: 299, type: !1151, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !988, retainedNodes: !9739)
!9739 = !{!9740}
!9740 = !DILocalVariable(name: "dev", arg: 1, scope: !9738, file: !1101, line: 299, type: !1127)
!9741 = !DILocation(line: 0, scope: !9738)
!9742 = !DILocation(line: 301, column: 2, scope: !9738)
!9743 = !DILocation(line: 302, column: 1, scope: !9738)
!9744 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !1101, file: !1101, line: 294, type: !1151, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !988, retainedNodes: !9745)
!9745 = !{!9746}
!9746 = !DILocalVariable(name: "dev", arg: 1, scope: !9744, file: !1101, line: 294, type: !1127)
!9747 = !DILocation(line: 0, scope: !9744)
!9748 = !DILocation(line: 296, column: 2, scope: !9744)
!9749 = !DILocation(line: 297, column: 1, scope: !9744)
!9750 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !1101, file: !1101, line: 397, type: !1151, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !988, retainedNodes: !9751)
!9751 = !{!9752}
!9752 = !DILocalVariable(name: "dev", arg: 1, scope: !9750, file: !1101, line: 397, type: !1127)
!9753 = !DILocation(line: 0, scope: !9750)
!9754 = !DILocation(line: 399, column: 2, scope: !9750)
!9755 = !DILocation(line: 400, column: 1, scope: !9750)
!9756 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !1101, file: !1101, line: 392, type: !1151, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !988, retainedNodes: !9757)
!9757 = !{!9758}
!9758 = !DILocalVariable(name: "dev", arg: 1, scope: !9756, file: !1101, line: 392, type: !1127)
!9759 = !DILocation(line: 0, scope: !9756)
!9760 = !DILocation(line: 394, column: 2, scope: !9756)
!9761 = !DILocation(line: 395, column: 1, scope: !9756)
!9762 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !1101, file: !1101, line: 289, type: !1151, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !988, retainedNodes: !9763)
!9763 = !{!9764}
!9764 = !DILocalVariable(name: "dev", arg: 1, scope: !9762, file: !1101, line: 289, type: !1127)
!9765 = !DILocation(line: 0, scope: !9762)
!9766 = !DILocation(line: 291, column: 2, scope: !9762)
!9767 = !DILocation(line: 292, column: 1, scope: !9762)
!9768 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !1101, file: !1101, line: 387, type: !1151, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !988, retainedNodes: !9769)
!9769 = !{!9770}
!9770 = !DILocalVariable(name: "dev", arg: 1, scope: !9768, file: !1101, line: 387, type: !1127)
!9771 = !DILocation(line: 0, scope: !9768)
!9772 = !DILocation(line: 389, column: 2, scope: !9768)
!9773 = !DILocation(line: 390, column: 1, scope: !9768)
!9774 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !1101, file: !1101, line: 382, type: !1151, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !988, retainedNodes: !9775)
!9775 = !{!9776}
!9776 = !DILocalVariable(name: "dev", arg: 1, scope: !9774, file: !1101, line: 382, type: !1127)
!9777 = !DILocation(line: 0, scope: !9774)
!9778 = !DILocation(line: 384, column: 2, scope: !9774)
!9779 = !DILocation(line: 385, column: 1, scope: !9774)
!9780 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !1101, file: !1101, line: 373, type: !1151, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !988, retainedNodes: !9781)
!9781 = !{!9782}
!9782 = !DILocalVariable(name: "dev", arg: 1, scope: !9780, file: !1101, line: 373, type: !1127)
!9783 = !DILocation(line: 0, scope: !9780)
!9784 = !DILocation(line: 375, column: 2, scope: !9780)
!9785 = !DILocation(line: 376, column: 1, scope: !9780)
!9786 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !1101, file: !1101, line: 284, type: !1151, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !988, retainedNodes: !9787)
!9787 = !{!9788}
!9788 = !DILocalVariable(name: "dev", arg: 1, scope: !9786, file: !1101, line: 284, type: !1127)
!9789 = !DILocation(line: 0, scope: !9786)
!9790 = !DILocation(line: 286, column: 2, scope: !9786)
!9791 = !DILocation(line: 287, column: 1, scope: !9786)
!9792 = distinct !DISubprogram(name: "stm32_exti_init", scope: !1101, file: !1101, line: 416, type: !1125, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !988, retainedNodes: !9793)
!9793 = !{!9794}
!9794 = !DILocalVariable(name: "dev", arg: 1, scope: !9792, file: !1101, line: 416, type: !1127)
!9795 = !DILocation(line: 0, scope: !9792)
!9796 = !DILocation(line: 418, column: 2, scope: !9792)
!9797 = !DILocation(line: 420, column: 2, scope: !9792)
!9798 = !DILocation(line: 0, scope: !1150)
!9799 = !DILocation(line: 493, column: 2, scope: !9800)
!9800 = distinct !DILexicalBlock(scope: !1150, file: !1101, line: 493, column: 2)
!9801 = !DILocation(line: 497, column: 2, scope: !9802)
!9802 = distinct !DILexicalBlock(scope: !1150, file: !1101, line: 497, column: 2)
!9803 = !DILocation(line: 507, column: 2, scope: !9804)
!9804 = distinct !DILexicalBlock(scope: !1150, file: !1101, line: 507, column: 2)
!9805 = !DILocation(line: 512, column: 2, scope: !9806)
!9806 = distinct !DILexicalBlock(scope: !1150, file: !1101, line: 512, column: 2)
!9807 = !DILocation(line: 516, column: 2, scope: !9808)
!9808 = distinct !DILexicalBlock(scope: !1150, file: !1101, line: 516, column: 2)
!9809 = !DILocation(line: 523, column: 2, scope: !9810)
!9810 = distinct !DILexicalBlock(scope: !1150, file: !1101, line: 523, column: 2)
!9811 = !DILocation(line: 527, column: 2, scope: !9812)
!9812 = distinct !DILexicalBlock(scope: !1150, file: !1101, line: 527, column: 2)
!9813 = !DILocation(line: 581, column: 2, scope: !9814)
!9814 = distinct !DILexicalBlock(scope: !1150, file: !1101, line: 581, column: 2)
!9815 = !DILocation(line: 586, column: 2, scope: !9816)
!9816 = distinct !DILexicalBlock(scope: !1150, file: !1101, line: 586, column: 2)
!9817 = !DILocation(line: 591, column: 2, scope: !9818)
!9818 = distinct !DILexicalBlock(scope: !1150, file: !1101, line: 591, column: 2)
!9819 = !DILocation(line: 595, column: 2, scope: !9820)
!9820 = distinct !DILexicalBlock(scope: !1150, file: !1101, line: 595, column: 2)
!9821 = !DILocation(line: 607, column: 1, scope: !1150)
!9822 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !1101, file: !1101, line: 112, type: !9708, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !988, retainedNodes: !9823)
!9823 = !{!9824, !9825}
!9824 = !DILocalVariable(name: "line", arg: 1, scope: !9822, file: !1101, line: 112, type: !108)
!9825 = !DILocalVariable(name: "irqnum", scope: !9822, file: !1101, line: 114, type: !108)
!9826 = !DILocation(line: 0, scope: !9822)
!9827 = !DILocation(line: 121, column: 11, scope: !9822)
!9828 = !DILocation(line: 130, column: 26, scope: !9822)
!9829 = !DILocation(line: 130, column: 2, scope: !9822)
!9830 = !DILocation(line: 134, column: 2, scope: !9822)
!9831 = !DILocation(line: 135, column: 1, scope: !9822)
!9832 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !9719, file: !9719, line: 268, type: !7219, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !988, retainedNodes: !9833)
!9833 = !{!9834}
!9834 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9832, file: !9719, line: 268, type: !113)
!9835 = !DILocation(line: 0, scope: !9832)
!9836 = !DILocation(line: 270, column: 3, scope: !9832)
!9837 = !DILocation(line: 271, column: 1, scope: !9832)
!9838 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !1101, file: !1101, line: 137, type: !9708, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !988, retainedNodes: !9839)
!9839 = !{!9840}
!9840 = !DILocalVariable(name: "line", arg: 1, scope: !9838, file: !1101, line: 137, type: !108)
!9841 = !DILocation(line: 0, scope: !9838)
!9842 = !DILocation(line: 141, column: 11, scope: !9843)
!9843 = distinct !DILexicalBlock(scope: !9838, file: !1101, line: 141, column: 6)
!9844 = !DILocation(line: 141, column: 6, scope: !9838)
!9845 = !DILocation(line: 145, column: 28, scope: !9846)
!9846 = distinct !DILexicalBlock(scope: !9843, file: !1101, line: 141, column: 17)
!9847 = !DILocation(line: 145, column: 3, scope: !9846)
!9848 = !DILocation(line: 147, column: 2, scope: !9846)
!9849 = !DILocation(line: 151, column: 1, scope: !9838)
!9850 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !9719, file: !9719, line: 309, type: !7219, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !988, retainedNodes: !9851)
!9851 = !{!9852}
!9852 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9850, file: !9719, line: 309, type: !113)
!9853 = !DILocation(line: 0, scope: !9850)
!9854 = !DILocation(line: 311, column: 3, scope: !9850)
!9855 = !DILocation(line: 312, column: 1, scope: !9850)
!9856 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !1101, file: !1101, line: 202, type: !9857, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !988, retainedNodes: !9859)
!9857 = !DISubroutineType(types: !9858)
!9858 = !{null, !108, !108}
!9859 = !{!9860, !9861}
!9860 = !DILocalVariable(name: "line", arg: 1, scope: !9856, file: !1101, line: 202, type: !108)
!9861 = !DILocalVariable(name: "trigger", arg: 2, scope: !9856, file: !1101, line: 202, type: !108)
!9862 = !DILocation(line: 0, scope: !9856)
!9863 = !DILocation(line: 211, column: 2, scope: !9856)
!9864 = !DILocation(line: 213, column: 36, scope: !9865)
!9865 = distinct !DILexicalBlock(scope: !9856, file: !1101, line: 211, column: 19)
!9866 = !DILocation(line: 213, column: 3, scope: !9865)
!9867 = !DILocation(line: 214, column: 3, scope: !9865)
!9868 = !DILocation(line: 215, column: 3, scope: !9865)
!9869 = !DILocation(line: 217, column: 35, scope: !9865)
!9870 = !DILocation(line: 217, column: 3, scope: !9865)
!9871 = !DILocation(line: 218, column: 3, scope: !9865)
!9872 = !DILocation(line: 219, column: 3, scope: !9865)
!9873 = !DILocation(line: 221, column: 36, scope: !9865)
!9874 = !DILocation(line: 221, column: 3, scope: !9865)
!9875 = !DILocation(line: 222, column: 3, scope: !9865)
!9876 = !DILocation(line: 223, column: 3, scope: !9865)
!9877 = !DILocation(line: 225, column: 35, scope: !9865)
!9878 = !DILocation(line: 225, column: 3, scope: !9865)
!9879 = !DILocation(line: 226, column: 3, scope: !9865)
!9880 = !DILocation(line: 227, column: 3, scope: !9865)
!9881 = !DILocation(line: 232, column: 1, scope: !9856)
!9882 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !9719, file: !9719, line: 573, type: !7219, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !988, retainedNodes: !9883)
!9883 = !{!9884}
!9884 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9882, file: !9719, line: 573, type: !113)
!9885 = !DILocation(line: 0, scope: !9882)
!9886 = !DILocation(line: 575, column: 3, scope: !9882)
!9887 = !DILocation(line: 577, column: 1, scope: !9882)
!9888 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !9719, file: !9719, line: 703, type: !7219, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !988, retainedNodes: !9889)
!9889 = !{!9890}
!9890 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9888, file: !9719, line: 703, type: !113)
!9891 = !DILocation(line: 0, scope: !9888)
!9892 = !DILocation(line: 705, column: 3, scope: !9888)
!9893 = !DILocation(line: 706, column: 1, scope: !9888)
!9894 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !9719, file: !9719, line: 529, type: !7219, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !988, retainedNodes: !9895)
!9895 = !{!9896}
!9896 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9894, file: !9719, line: 529, type: !113)
!9897 = !DILocation(line: 0, scope: !9894)
!9898 = !DILocation(line: 531, column: 3, scope: !9894)
!9899 = !DILocation(line: 533, column: 1, scope: !9894)
!9900 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !9719, file: !9719, line: 661, type: !7219, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !988, retainedNodes: !9901)
!9901 = !{!9902}
!9902 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9900, file: !9719, line: 661, type: !113)
!9903 = !DILocation(line: 0, scope: !9900)
!9904 = !DILocation(line: 663, column: 3, scope: !9900)
!9905 = !DILocation(line: 664, column: 1, scope: !9900)
!9906 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !1101, file: !1101, line: 433, type: !9907, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !988, retainedNodes: !9909)
!9907 = !DISubroutineType(types: !9908)
!9908 = !{!108, !108, !1138, !104}
!9909 = !{!9910, !9911, !9912, !9913, !9915}
!9910 = !DILocalVariable(name: "line", arg: 1, scope: !9906, file: !1101, line: 433, type: !108)
!9911 = !DILocalVariable(name: "cb", arg: 2, scope: !9906, file: !1101, line: 433, type: !1138)
!9912 = !DILocalVariable(name: "arg", arg: 3, scope: !9906, file: !1101, line: 433, type: !104)
!9913 = !DILocalVariable(name: "dev", scope: !9906, file: !1101, line: 435, type: !9914)
!9914 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1127)
!9915 = !DILocalVariable(name: "data", scope: !9906, file: !1101, line: 436, type: !9673)
!9916 = !DILocation(line: 0, scope: !9906)
!9917 = !DILocation(line: 438, column: 21, scope: !9918)
!9918 = distinct !DILexicalBlock(scope: !9906, file: !1101, line: 438, column: 6)
!9919 = !DILocation(line: 438, column: 6, scope: !9918)
!9920 = !DILocation(line: 438, column: 6, scope: !9906)
!9921 = !DILocation(line: 442, column: 20, scope: !9906)
!9922 = !DILocation(line: 443, column: 17, scope: !9906)
!9923 = !DILocation(line: 443, column: 22, scope: !9906)
!9924 = !DILocation(line: 445, column: 2, scope: !9906)
!9925 = !DILocation(line: 446, column: 1, scope: !9906)
!9926 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !1101, file: !1101, line: 448, type: !9708, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !988, retainedNodes: !9927)
!9927 = !{!9928, !9929, !9930}
!9928 = !DILocalVariable(name: "line", arg: 1, scope: !9926, file: !1101, line: 448, type: !108)
!9929 = !DILocalVariable(name: "dev", scope: !9926, file: !1101, line: 450, type: !9914)
!9930 = !DILocalVariable(name: "data", scope: !9926, file: !1101, line: 451, type: !9673)
!9931 = !DILocation(line: 0, scope: !9926)
!9932 = !DILocation(line: 453, column: 17, scope: !9926)
!9933 = !DILocation(line: 453, column: 20, scope: !9926)
!9934 = !DILocation(line: 454, column: 17, scope: !9926)
!9935 = !DILocation(line: 454, column: 22, scope: !9926)
!9936 = !DILocation(line: 455, column: 1, scope: !9926)
!9937 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !1251, file: !1251, line: 183, type: !1289, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !9938)
!9938 = !{!9939, !9940, !9941, !9942, !9943}
!9939 = !DILocalVariable(name: "dev", arg: 1, scope: !9937, file: !1251, line: 183, type: !1280)
!9940 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9937, file: !1251, line: 184, type: !1291)
!9941 = !DILocalVariable(name: "pclken", scope: !9937, file: !1251, line: 186, type: !1241)
!9942 = !DILocalVariable(name: "reg", scope: !9937, file: !1251, line: 187, type: !1831)
!9943 = !DILocalVariable(name: "reg_val", scope: !9937, file: !1251, line: 188, type: !113)
!9944 = !DILocation(line: 0, scope: !9937)
!9945 = !DILocation(line: 192, column: 6, scope: !9946)
!9946 = distinct !DILexicalBlock(scope: !9937, file: !1251, line: 192, column: 6)
!9947 = !DILocation(line: 192, column: 6, scope: !9937)
!9948 = !DILocation(line: 197, column: 52, scope: !9937)
!9949 = !DILocation(line: 197, column: 8, scope: !9937)
!9950 = !DILocation(line: 198, column: 12, scope: !9937)
!9951 = !DILocation(line: 199, column: 21, scope: !9937)
!9952 = !DILocation(line: 199, column: 10, scope: !9937)
!9953 = !DILocation(line: 200, column: 7, scope: !9937)
!9954 = !DILocation(line: 202, column: 2, scope: !9937)
!9955 = !DILocation(line: 203, column: 1, scope: !9937)
!9956 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !1251, file: !1251, line: 205, type: !1289, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !9957)
!9957 = !{!9958, !9959, !9960, !9961, !9962}
!9958 = !DILocalVariable(name: "dev", arg: 1, scope: !9956, file: !1251, line: 205, type: !1280)
!9959 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9956, file: !1251, line: 206, type: !1291)
!9960 = !DILocalVariable(name: "pclken", scope: !9956, file: !1251, line: 208, type: !1241)
!9961 = !DILocalVariable(name: "reg", scope: !9956, file: !1251, line: 209, type: !1831)
!9962 = !DILocalVariable(name: "reg_val", scope: !9956, file: !1251, line: 210, type: !113)
!9963 = !DILocation(line: 0, scope: !9956)
!9964 = !DILocation(line: 214, column: 6, scope: !9965)
!9965 = distinct !DILexicalBlock(scope: !9956, file: !1251, line: 214, column: 6)
!9966 = !DILocation(line: 214, column: 6, scope: !9956)
!9967 = !DILocation(line: 219, column: 52, scope: !9956)
!9968 = !DILocation(line: 219, column: 8, scope: !9956)
!9969 = !DILocation(line: 220, column: 12, scope: !9956)
!9970 = !DILocation(line: 221, column: 22, scope: !9956)
!9971 = !DILocation(line: 221, column: 13, scope: !9956)
!9972 = !DILocation(line: 221, column: 10, scope: !9956)
!9973 = !DILocation(line: 222, column: 7, scope: !9956)
!9974 = !DILocation(line: 224, column: 2, scope: !9956)
!9975 = !DILocation(line: 225, column: 1, scope: !9956)
!9976 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !1251, file: !1251, line: 262, type: !1305, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !9977)
!9977 = !{!9978, !9979, !9980, !9981, !9982, !9983, !9984, !9985}
!9978 = !DILocalVariable(name: "clock", arg: 1, scope: !9976, file: !1251, line: 262, type: !1280)
!9979 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9976, file: !1251, line: 263, type: !1291)
!9980 = !DILocalVariable(name: "rate", arg: 3, scope: !9976, file: !1251, line: 264, type: !1247)
!9981 = !DILocalVariable(name: "pclken", scope: !9976, file: !1251, line: 266, type: !1241)
!9982 = !DILocalVariable(name: "ahb_clock", scope: !9976, file: !1251, line: 273, type: !113)
!9983 = !DILocalVariable(name: "apb1_clock", scope: !9976, file: !1251, line: 274, type: !113)
!9984 = !DILocalVariable(name: "apb2_clock", scope: !9976, file: !1251, line: 276, type: !113)
!9985 = !DILocalVariable(name: "ahb3_clock", scope: !9976, file: !1251, line: 286, type: !113)
!9986 = !DILocation(line: 0, scope: !9976)
!9987 = !DILocation(line: 273, column: 23, scope: !9976)
!9988 = !DILocation(line: 299, column: 18, scope: !9976)
!9989 = !DILocation(line: 299, column: 2, scope: !9976)
!9990 = !DILocation(line: 274, column: 24, scope: !9976)
!9991 = !DILocation(line: 319, column: 3, scope: !9992)
!9992 = distinct !DILexicalBlock(scope: !9976, file: !1251, line: 299, column: 23)
!9993 = !DILocation(line: 276, column: 24, scope: !9976)
!9994 = !DILocation(line: 323, column: 3, scope: !9992)
!9995 = !DILocation(line: 346, column: 33, scope: !9992)
!9996 = !DILocation(line: 346, column: 11, scope: !9992)
!9997 = !DILocation(line: 350, column: 3, scope: !9992)
!9998 = !DILocation(line: 354, column: 33, scope: !9992)
!9999 = !DILocation(line: 354, column: 11, scope: !9992)
!10000 = !DILocation(line: 358, column: 3, scope: !9992)
!10001 = !DILocation(line: 374, column: 3, scope: !9992)
!10002 = !DILocation(line: 379, column: 3, scope: !9992)
!10003 = !DILocation(line: 0, scope: !9992)
!10004 = !DILocation(line: 396, column: 1, scope: !9976)
!10005 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !1251, file: !1251, line: 227, type: !1321, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !10006)
!10006 = !{!10007, !10008, !10009, !10010, !10011, !10012, !10013, !10014}
!10007 = !DILocalVariable(name: "dev", arg: 1, scope: !10005, file: !1251, line: 227, type: !1280)
!10008 = !DILocalVariable(name: "sub_system", arg: 2, scope: !10005, file: !1251, line: 228, type: !1291)
!10009 = !DILocalVariable(name: "data", arg: 3, scope: !10005, file: !1251, line: 229, type: !104)
!10010 = !DILocalVariable(name: "pclken", scope: !10005, file: !1251, line: 233, type: !1241)
!10011 = !DILocalVariable(name: "reg", scope: !10005, file: !1251, line: 234, type: !1831)
!10012 = !DILocalVariable(name: "reg_val", scope: !10005, file: !1251, line: 235, type: !113)
!10013 = !DILocalVariable(name: "dt_val", scope: !10005, file: !1251, line: 235, type: !113)
!10014 = !DILocalVariable(name: "err", scope: !10005, file: !1251, line: 236, type: !108)
!10015 = !DILocation(line: 0, scope: !10005)
!10016 = !DILocation(line: 241, column: 30, scope: !10005)
!10017 = !DILocation(line: 241, column: 8, scope: !10005)
!10018 = !DILocation(line: 242, column: 10, scope: !10019)
!10019 = distinct !DILexicalBlock(scope: !10005, file: !1251, line: 242, column: 6)
!10020 = !DILocation(line: 242, column: 6, scope: !10005)
!10021 = !DILocation(line: 247, column: 11, scope: !10005)
!10022 = !DILocation(line: 248, column: 6, scope: !10005)
!10023 = !DILocation(line: 247, column: 44, scope: !10005)
!10024 = !DILocation(line: 250, column: 6, scope: !10005)
!10025 = !DILocation(line: 249, column: 52, scope: !10005)
!10026 = !DILocation(line: 249, column: 8, scope: !10005)
!10027 = !DILocation(line: 251, column: 12, scope: !10005)
!10028 = !DILocation(line: 252, column: 10, scope: !10005)
!10029 = !DILocation(line: 253, column: 7, scope: !10005)
!10030 = !DILocation(line: 255, column: 2, scope: !10005)
!10031 = !DILocation(line: 260, column: 1, scope: !10005)
!10032 = distinct !DISubprogram(name: "enabled_clock", scope: !1251, file: !1251, line: 100, type: !10033, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !10035)
!10033 = !DISubroutineType(types: !10034)
!10034 = !{!108, !113}
!10035 = !{!10036, !10037}
!10036 = !DILocalVariable(name: "src_clk", arg: 1, scope: !10032, file: !1251, line: 100, type: !113)
!10037 = !DILocalVariable(name: "r", scope: !10032, file: !1251, line: 102, type: !108)
!10038 = !DILocation(line: 0, scope: !10032)
!10039 = !DILocation(line: 104, column: 2, scope: !10032)
!10040 = !DILocation(line: 180, column: 2, scope: !10032)
!10041 = !DILocation(line: 181, column: 1, scope: !10032)
!10042 = distinct !DISubprogram(name: "get_bus_clock", scope: !1251, file: !1251, line: 79, type: !10043, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !10045)
!10043 = !DISubroutineType(types: !10044)
!10044 = !{!113, !113, !113}
!10045 = !{!10046, !10047}
!10046 = !DILocalVariable(name: "clock", arg: 1, scope: !10042, file: !1251, line: 79, type: !113)
!10047 = !DILocalVariable(name: "prescaler", arg: 2, scope: !10042, file: !1251, line: 79, type: !113)
!10048 = !DILocation(line: 0, scope: !10042)
!10049 = !DILocation(line: 81, column: 15, scope: !10042)
!10050 = !DILocation(line: 81, column: 2, scope: !10042)
!10051 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !1251, file: !1251, line: 68, type: !10052, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !10054)
!10052 = !DISubroutineType(types: !10053)
!10053 = !{!113, !113, !108, !108, !108}
!10054 = !{!10055, !10056, !10057, !10058}
!10055 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !10051, file: !1251, line: 68, type: !113)
!10056 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !10051, file: !1251, line: 69, type: !108)
!10057 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !10051, file: !1251, line: 70, type: !108)
!10058 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !10051, file: !1251, line: 71, type: !108)
!10059 = !DILocation(line: 0, scope: !10051)
!10060 = !DILocation(line: 75, column: 22, scope: !10051)
!10061 = !DILocation(line: 76, column: 13, scope: !10051)
!10062 = !DILocation(line: 75, column: 34, scope: !10051)
!10063 = !DILocation(line: 75, column: 2, scope: !10051)
!10064 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !1251, file: !1251, line: 641, type: !1278, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !10065)
!10065 = !{!10066, !10067, !10068}
!10066 = !DILocalVariable(name: "dev", arg: 1, scope: !10064, file: !1251, line: 641, type: !1280)
!10067 = !DILocalVariable(name: "old_flash_freq", scope: !10064, file: !1251, line: 664, type: !113)
!10068 = !DILocalVariable(name: "new_flash_freq", scope: !10064, file: !1251, line: 665, type: !113)
!10069 = !DILocation(line: 0, scope: !10064)
!10070 = !DILocation(line: 646, column: 2, scope: !10064)
!10071 = !DILocation(line: 667, column: 19, scope: !10064)
!10072 = !DILocation(line: 674, column: 21, scope: !10073)
!10073 = distinct !DILexicalBlock(scope: !10064, file: !1251, line: 674, column: 6)
!10074 = !DILocation(line: 674, column: 6, scope: !10064)
!10075 = !DILocation(line: 675, column: 3, scope: !10076)
!10076 = distinct !DILexicalBlock(scope: !10073, file: !1251, line: 674, column: 59)
!10077 = !DILocation(line: 676, column: 2, scope: !10076)
!10078 = !DILocation(line: 680, column: 2, scope: !10064)
!10079 = !DILocation(line: 683, column: 2, scope: !10064)
!10080 = !DILocation(line: 690, column: 3, scope: !10081)
!10081 = distinct !DILexicalBlock(scope: !10082, file: !1251, line: 689, column: 9)
!10082 = distinct !DILexicalBlock(scope: !10064, file: !1251, line: 685, column: 6)
!10083 = !DILocation(line: 695, column: 2, scope: !10064)
!10084 = !DILocation(line: 696, column: 2, scope: !10064)
!10085 = !DILocation(line: 696, column: 9, scope: !10064)
!10086 = !DILocation(line: 696, column: 34, scope: !10064)
!10087 = distinct !{!10087, !10084, !10088}
!10088 = !DILocation(line: 697, column: 2, scope: !10064)
!10089 = !DILocation(line: 720, column: 21, scope: !10090)
!10090 = distinct !DILexicalBlock(scope: !10064, file: !1251, line: 720, column: 6)
!10091 = !DILocation(line: 720, column: 6, scope: !10064)
!10092 = !DILocation(line: 721, column: 3, scope: !10093)
!10093 = distinct !DILexicalBlock(scope: !10090, file: !1251, line: 720, column: 60)
!10094 = !DILocation(line: 722, column: 2, scope: !10093)
!10095 = !DILocation(line: 725, column: 18, scope: !10064)
!10096 = !DILocation(line: 728, column: 2, scope: !10064)
!10097 = !DILocation(line: 730, column: 2, scope: !10064)
!10098 = !DILocation(line: 745, column: 2, scope: !10064)
!10099 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !10100, file: !10100, line: 3275, type: !7209, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !437)
!10100 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10101 = !DILocation(line: 3277, column: 21, scope: !10099)
!10102 = !DILocation(line: 3277, column: 3, scope: !10099)
!10103 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !1251, file: !1251, line: 507, type: !3472, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !437)
!10104 = !DILocation(line: 516, column: 4, scope: !10105)
!10105 = distinct !DILexicalBlock(scope: !10106, file: !1251, line: 515, column: 10)
!10106 = distinct !DILexicalBlock(scope: !10107, file: !1251, line: 513, column: 7)
!10107 = distinct !DILexicalBlock(scope: !10108, file: !1251, line: 510, column: 37)
!10108 = distinct !DILexicalBlock(scope: !10103, file: !1251, line: 510, column: 6)
!10109 = !DILocation(line: 526, column: 3, scope: !10107)
!10110 = !DILocation(line: 527, column: 3, scope: !10107)
!10111 = !DILocation(line: 527, column: 10, scope: !10107)
!10112 = !DILocation(line: 527, column: 31, scope: !10107)
!10113 = distinct !{!10113, !10110, !10114}
!10114 = !DILocation(line: 529, column: 3, scope: !10107)
!10115 = !DILocation(line: 583, column: 3, scope: !10116)
!10116 = distinct !DILexicalBlock(scope: !10117, file: !1251, line: 577, column: 37)
!10117 = distinct !DILexicalBlock(scope: !10103, file: !1251, line: 577, column: 6)
!10118 = !DILocation(line: 584, column: 3, scope: !10116)
!10119 = !DILocation(line: 584, column: 10, scope: !10116)
!10120 = !DILocation(line: 584, column: 31, scope: !10116)
!10121 = distinct !{!10121, !10118, !10122}
!10122 = !DILocation(line: 585, column: 3, scope: !10116)
!10123 = !DILocation(line: 627, column: 1, scope: !10103)
!10124 = distinct !DISubprogram(name: "set_up_plls", scope: !1251, file: !1251, line: 448, type: !3472, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !437)
!10125 = !DILocation(line: 460, column: 6, scope: !10126)
!10126 = distinct !DILexicalBlock(scope: !10124, file: !1251, line: 460, column: 6)
!10127 = !DILocation(line: 460, column: 31, scope: !10126)
!10128 = !DILocation(line: 460, column: 6, scope: !10124)
!10129 = !DILocation(line: 461, column: 3, scope: !10130)
!10130 = distinct !DILexicalBlock(scope: !10126, file: !1251, line: 460, column: 67)
!10131 = !DILocation(line: 462, column: 3, scope: !10130)
!10132 = !DILocation(line: 463, column: 2, scope: !10130)
!10133 = !DILocation(line: 464, column: 2, scope: !10124)
!10134 = !DILocation(line: 488, column: 2, scope: !10124)
!10135 = !DILocation(line: 492, column: 2, scope: !10124)
!10136 = !DILocation(line: 496, column: 2, scope: !10124)
!10137 = !DILocation(line: 499, column: 2, scope: !10124)
!10138 = !DILocation(line: 500, column: 2, scope: !10124)
!10139 = !DILocation(line: 500, column: 9, scope: !10124)
!10140 = !DILocation(line: 500, column: 30, scope: !10124)
!10141 = distinct !{!10141, !10138, !10142}
!10142 = !DILocation(line: 502, column: 2, scope: !10124)
!10143 = !DILocation(line: 505, column: 1, scope: !10124)
!10144 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !10100, file: !10100, line: 3224, type: !7219, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !10145)
!10145 = !{!10146}
!10146 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10144, file: !10100, line: 3224, type: !113)
!10147 = !DILocation(line: 0, scope: !10144)
!10148 = !DILocation(line: 3226, column: 3, scope: !10144)
!10149 = !DILocation(line: 3227, column: 1, scope: !10144)
!10150 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !10100, file: !10100, line: 3188, type: !7219, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !10151)
!10151 = !{!10152}
!10152 = !DILocalVariable(name: "Source", arg: 1, scope: !10150, file: !10100, line: 3188, type: !113)
!10153 = !DILocation(line: 0, scope: !10150)
!10154 = !DILocation(line: 3190, column: 3, scope: !10150)
!10155 = !DILocation(line: 3191, column: 1, scope: !10150)
!10156 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !10100, file: !10100, line: 3204, type: !7209, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !437)
!10157 = !DILocation(line: 3206, column: 21, scope: !10156)
!10158 = !DILocation(line: 3206, column: 3, scope: !10156)
!10159 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !10100, file: !10100, line: 3240, type: !7219, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !10160)
!10160 = !{!10161}
!10161 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10159, file: !10100, line: 3240, type: !113)
!10162 = !DILocation(line: 0, scope: !10159)
!10163 = !DILocation(line: 3242, column: 3, scope: !10159)
!10164 = !DILocation(line: 3243, column: 1, scope: !10159)
!10165 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !10100, file: !10100, line: 3256, type: !7219, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !10166)
!10166 = !{!10167}
!10167 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10165, file: !10100, line: 3256, type: !113)
!10168 = !DILocation(line: 0, scope: !10165)
!10169 = !DILocation(line: 3258, column: 3, scope: !10165)
!10170 = !DILocation(line: 3259, column: 1, scope: !10165)
!10171 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !1251, file: !1251, line: 409, type: !3472, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !437)
!10172 = !DILocation(line: 412, column: 6, scope: !10173)
!10173 = distinct !DILexicalBlock(scope: !10171, file: !1251, line: 412, column: 6)
!10174 = !DILocation(line: 412, column: 27, scope: !10173)
!10175 = !DILocation(line: 412, column: 6, scope: !10171)
!10176 = !DILocation(line: 414, column: 3, scope: !10177)
!10177 = distinct !DILexicalBlock(scope: !10173, file: !1251, line: 412, column: 33)
!10178 = !DILocation(line: 415, column: 3, scope: !10177)
!10179 = !DILocation(line: 415, column: 10, scope: !10177)
!10180 = !DILocation(line: 415, column: 31, scope: !10177)
!10181 = distinct !{!10181, !10178, !10182}
!10182 = !DILocation(line: 417, column: 3, scope: !10177)
!10183 = !DILocation(line: 421, column: 2, scope: !10171)
!10184 = !DILocation(line: 422, column: 2, scope: !10171)
!10185 = !DILocation(line: 422, column: 9, scope: !10171)
!10186 = !DILocation(line: 422, column: 34, scope: !10171)
!10187 = distinct !{!10187, !10184, !10188}
!10188 = !DILocation(line: 423, column: 2, scope: !10171)
!10189 = !DILocation(line: 424, column: 1, scope: !10171)
!10190 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !10100, file: !10100, line: 4195, type: !3472, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !437)
!10191 = !DILocation(line: 4197, column: 3, scope: !10190)
!10192 = !DILocation(line: 4198, column: 1, scope: !10190)
!10193 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !10100, file: !10100, line: 4184, type: !3472, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !437)
!10194 = !DILocation(line: 4186, column: 3, scope: !10193)
!10195 = !DILocation(line: 4187, column: 1, scope: !10193)
!10196 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !10100, file: !10100, line: 4205, type: !7209, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !437)
!10197 = !DILocation(line: 4207, column: 11, scope: !10196)
!10198 = !DILocation(line: 4207, column: 44, scope: !10196)
!10199 = !DILocation(line: 4207, column: 3, scope: !10196)
!10200 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !10100, file: !10100, line: 3007, type: !7209, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !437)
!10201 = !DILocation(line: 3009, column: 11, scope: !10200)
!10202 = !DILocation(line: 3009, column: 44, scope: !10200)
!10203 = !DILocation(line: 3009, column: 3, scope: !10200)
!10204 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !10100, file: !10100, line: 2987, type: !3472, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !437)
!10205 = !DILocation(line: 2989, column: 3, scope: !10204)
!10206 = !DILocation(line: 2990, column: 1, scope: !10204)
!10207 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !10100, file: !10100, line: 2939, type: !3472, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !437)
!10208 = !DILocation(line: 2941, column: 3, scope: !10207)
!10209 = !DILocation(line: 2942, column: 1, scope: !10207)
!10210 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !10100, file: !10100, line: 2949, type: !3472, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !437)
!10211 = !DILocation(line: 2951, column: 3, scope: !10210)
!10212 = !DILocation(line: 2952, column: 1, scope: !10210)
!10213 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !10100, file: !10100, line: 2969, type: !7209, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !437)
!10214 = !DILocation(line: 2971, column: 11, scope: !10213)
!10215 = !DILocation(line: 2971, column: 44, scope: !10213)
!10216 = !DILocation(line: 2971, column: 3, scope: !10213)
!10217 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !10100, file: !10100, line: 3143, type: !3472, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !437)
!10218 = !DILocation(line: 3145, column: 3, scope: !10217)
!10219 = !DILocation(line: 3146, column: 1, scope: !10217)
!10220 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !10100, file: !10100, line: 3163, type: !7209, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1186, retainedNodes: !437)
!10221 = !DILocation(line: 3165, column: 11, scope: !10220)
!10222 = !DILocation(line: 3165, column: 46, scope: !10220)
!10223 = !DILocation(line: 3165, column: 3, scope: !10220)
!10224 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !10225, file: !10225, line: 40, type: !7209, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3259, retainedNodes: !437)
!10225 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10226 = !DILocation(line: 45, column: 3, scope: !10227)
!10227 = distinct !DILexicalBlock(scope: !10228, file: !10225, line: 44, column: 44)
!10228 = distinct !DILexicalBlock(scope: !10229, file: !10225, line: 44, column: 13)
!10229 = distinct !DILexicalBlock(scope: !10224, file: !10225, line: 42, column: 6)
!10230 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !10225, file: !10225, line: 56, type: !3472, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3259, retainedNodes: !437)
!10231 = !DILocation(line: 58, column: 2, scope: !10230)
!10232 = !DILocation(line: 62, column: 1, scope: !10230)
!10233 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !10100, file: !10100, line: 4304, type: !10234, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3259, retainedNodes: !10236)
!10234 = !DISubroutineType(types: !10235)
!10235 = !{null, !113, !113, !113, !113}
!10236 = !{!10237, !10238, !10239, !10240}
!10237 = !DILocalVariable(name: "Source", arg: 1, scope: !10233, file: !10100, line: 4304, type: !113)
!10238 = !DILocalVariable(name: "PLLM", arg: 2, scope: !10233, file: !10100, line: 4304, type: !113)
!10239 = !DILocalVariable(name: "PLLN", arg: 3, scope: !10233, file: !10100, line: 4304, type: !113)
!10240 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !10233, file: !10100, line: 4304, type: !113)
!10241 = !DILocation(line: 0, scope: !10233)
!10242 = !DILocation(line: 4306, column: 3, scope: !10233)
!10243 = !DILocation(line: 4308, column: 3, scope: !10233)
!10244 = !DILocation(line: 4310, column: 3, scope: !10233)
!10245 = !DILocation(line: 4312, column: 1, scope: !10233)
!10246 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !10225, file: !10225, line: 69, type: !3472, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3259, retainedNodes: !437)
!10247 = !DILocation(line: 72, column: 2, scope: !10246)
!10248 = !DILocation(line: 73, column: 1, scope: !10246)
!10249 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !10250, file: !10250, line: 1185, type: !7219, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3259, retainedNodes: !10251)
!10250 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10251 = !{!10252, !10253}
!10252 = !DILocalVariable(name: "Periphs", arg: 1, scope: !10249, file: !10250, line: 1185, type: !113)
!10253 = !DILocalVariable(name: "tmpreg", scope: !10249, file: !10250, line: 1187, type: !576)
!10254 = !DILocation(line: 0, scope: !10249)
!10255 = !DILocation(line: 1187, column: 3, scope: !10249)
!10256 = !DILocation(line: 1187, column: 17, scope: !10249)
!10257 = !DILocation(line: 1188, column: 3, scope: !10249)
!10258 = !DILocation(line: 1190, column: 12, scope: !10249)
!10259 = !DILocation(line: 1190, column: 10, scope: !10249)
!10260 = !DILocation(line: 1191, column: 9, scope: !10249)
!10261 = !DILocation(line: 1192, column: 1, scope: !10249)
!10262 = distinct !DISubprogram(name: "uart_console_init", scope: !1382, file: !1382, line: 588, type: !1359, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1325, retainedNodes: !10263)
!10263 = !{!10264}
!10264 = !DILocalVariable(name: "arg", arg: 1, scope: !10262, file: !1382, line: 588, type: !1337)
!10265 = !DILocation(line: 0, scope: !10262)
!10266 = !DILocation(line: 593, column: 7, scope: !10267)
!10267 = distinct !DILexicalBlock(scope: !10262, file: !1382, line: 593, column: 6)
!10268 = !DILocation(line: 593, column: 6, scope: !10262)
!10269 = !DILocation(line: 597, column: 2, scope: !10262)
!10270 = !DILocation(line: 599, column: 2, scope: !10262)
!10271 = !DILocation(line: 600, column: 1, scope: !10262)
!10272 = distinct !DISubprogram(name: "device_is_ready", scope: !10273, file: !10273, line: 47, type: !10274, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1325, retainedNodes: !10276)
!10273 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sensor_batch_processing")
!10274 = !DISubroutineType(types: !10275)
!10275 = !{!422, !1337}
!10276 = !{!10277}
!10277 = !DILocalVariable(name: "dev", arg: 1, scope: !10272, file: !10273, line: 47, type: !1337)
!10278 = !DILocation(line: 0, scope: !10272)
!10279 = !DILocation(line: 55, column: 2, scope: !10280)
!10280 = distinct !DILexicalBlock(scope: !10272, file: !10273, line: 55, column: 2)
!10281 = !{i64 2155304939}
!10282 = !DILocation(line: 56, column: 9, scope: !10272)
!10283 = !DILocation(line: 56, column: 2, scope: !10272)
!10284 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1382, file: !1382, line: 573, type: !3472, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1325, retainedNodes: !437)
!10285 = !DILocation(line: 576, column: 2, scope: !10284)
!10286 = !DILocation(line: 579, column: 2, scope: !10284)
!10287 = !DILocation(line: 581, column: 1, scope: !10284)
!10288 = distinct !DISubprogram(name: "console_out", scope: !1382, file: !1382, line: 77, type: !563, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1325, retainedNodes: !10289)
!10289 = !{!10290}
!10290 = !DILocalVariable(name: "c", arg: 1, scope: !10288, file: !1382, line: 77, type: !108)
!10291 = !DILocation(line: 0, scope: !10288)
!10292 = !DILocation(line: 89, column: 11, scope: !10293)
!10293 = distinct !DILexicalBlock(scope: !10288, file: !1382, line: 89, column: 6)
!10294 = !DILocation(line: 89, column: 6, scope: !10288)
!10295 = !DILocation(line: 90, column: 3, scope: !10296)
!10296 = distinct !DILexicalBlock(scope: !10293, file: !1382, line: 89, column: 17)
!10297 = !DILocation(line: 91, column: 2, scope: !10296)
!10298 = !DILocation(line: 92, column: 34, scope: !10288)
!10299 = !DILocation(line: 92, column: 2, scope: !10288)
!10300 = !DILocation(line: 94, column: 2, scope: !10288)
!10301 = distinct !DISubprogram(name: "uart_poll_out", scope: !10302, file: !10302, line: 95, type: !1355, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1325, retainedNodes: !10303)
!10302 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/sensor_batch_processing")
!10303 = !{!10304, !10305}
!10304 = !DILocalVariable(name: "dev", arg: 1, scope: !10301, file: !10302, line: 95, type: !1337)
!10305 = !DILocalVariable(name: "out_char", arg: 2, scope: !10301, file: !10302, line: 95, type: !165)
!10306 = !DILocation(line: 0, scope: !10301)
!10307 = !DILocation(line: 105, column: 2, scope: !10308)
!10308 = distinct !DILexicalBlock(scope: !10301, file: !10302, line: 105, column: 2)
!10309 = !{i64 2155388330}
!10310 = !DILocation(line: 106, column: 2, scope: !10301)
!10311 = !DILocation(line: 107, column: 1, scope: !10301)
!10312 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !1331, file: !1331, line: 574, type: !1355, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1325, retainedNodes: !10313)
!10313 = !{!10314, !10315, !10316}
!10314 = !DILocalVariable(name: "dev", arg: 1, scope: !10312, file: !1331, line: 574, type: !1337)
!10315 = !DILocalVariable(name: "out_char", arg: 2, scope: !10312, file: !1331, line: 575, type: !165)
!10316 = !DILocalVariable(name: "api", scope: !10312, file: !1331, line: 577, type: !1328)
!10317 = !DILocation(line: 0, scope: !10312)
!10318 = !DILocation(line: 578, column: 40, scope: !10312)
!10319 = !DILocation(line: 580, column: 7, scope: !10312)
!10320 = !DILocation(line: 580, column: 2, scope: !10312)
!10321 = !DILocation(line: 581, column: 1, scope: !10312)
!10322 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !411, file: !411, line: 730, type: !10274, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1325, retainedNodes: !10323)
!10323 = !{!10324}
!10324 = !DILocalVariable(name: "dev", arg: 1, scope: !10322, file: !411, line: 730, type: !1337)
!10325 = !DILocation(line: 0, scope: !10322)
!10326 = !DILocation(line: 732, column: 9, scope: !10322)
!10327 = !DILocation(line: 732, column: 2, scope: !10322)
!10328 = distinct !DISubprogram(name: "uart_register_input", scope: !1382, file: !1382, line: 560, type: !10329, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1325, retainedNodes: !10374)
!10329 = !DISubroutineType(types: !10330)
!10330 = !{null, !10331, !10331, !10371}
!10331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10332, size: 32)
!10332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !359, line: 2208, size: 128, elements: !10333)
!10333 = !{!10334}
!10334 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !10332, file: !359, line: 2209, baseType: !10335, size: 128)
!10335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !359, line: 1709, size: 128, elements: !10336)
!10336 = !{!10337, !10350, !10352}
!10337 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !10335, file: !359, line: 1710, baseType: !10338, size: 64)
!10338 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !10339, line: 46, baseType: !10340)
!10339 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !10339, line: 41, size: 64, elements: !10341)
!10341 = !{!10342, !10349}
!10342 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10340, file: !10339, line: 42, baseType: !10343, size: 32)
!10343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10344, size: 32)
!10344 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !10339, line: 39, baseType: !10345)
!10345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !10339, line: 35, size: 32, elements: !10346)
!10346 = !{!10347}
!10347 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !10345, file: !10339, line: 36, baseType: !10348, size: 32)
!10348 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !10339, line: 32, baseType: !113)
!10349 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10340, file: !10339, line: 43, baseType: !10343, size: 32, offset: 32)
!10350 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !10335, file: !359, line: 1711, baseType: !10351, offset: 64)
!10351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!10352 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !10335, file: !359, line: 1712, baseType: !10353, size: 64, offset: 64)
!10353 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !363, line: 233, baseType: !10354)
!10354 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 231, size: 64, elements: !10355)
!10355 = !{!10356}
!10356 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !10354, file: !363, line: 232, baseType: !10357, size: 64)
!10357 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !10358)
!10358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !10359)
!10359 = !{!10360, !10366}
!10360 = !DIDerivedType(tag: DW_TAG_member, scope: !10358, file: !367, line: 38, baseType: !10361, size: 32)
!10361 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10358, file: !367, line: 38, size: 32, elements: !10362)
!10362 = !{!10363, !10365}
!10363 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10361, file: !367, line: 39, baseType: !10364, size: 32)
!10364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10358, size: 32)
!10365 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !10361, file: !367, line: 40, baseType: !10364, size: 32)
!10366 = !DIDerivedType(tag: DW_TAG_member, scope: !10358, file: !367, line: 42, baseType: !10367, size: 32, offset: 32)
!10367 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10358, file: !367, line: 42, size: 32, elements: !10368)
!10368 = !{!10369, !10370}
!10369 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10367, file: !367, line: 43, baseType: !10364, size: 32)
!10370 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !10367, file: !367, line: 44, baseType: !10364, size: 32)
!10371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10372, size: 32)
!10372 = !DISubroutineType(types: !10373)
!10373 = !{!164, !443, !164}
!10374 = !{!10375, !10376, !10377}
!10375 = !DILocalVariable(name: "avail", arg: 1, scope: !10328, file: !1382, line: 560, type: !10331)
!10376 = !DILocalVariable(name: "lines", arg: 2, scope: !10328, file: !1382, line: 560, type: !10331)
!10377 = !DILocalVariable(name: "completion", arg: 3, scope: !10328, file: !1382, line: 561, type: !10371)
!10378 = !DILocation(line: 0, scope: !10328)
!10379 = !DILocation(line: 566, column: 1, scope: !10328)
!10380 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1562, file: !1562, line: 523, type: !1418, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10381)
!10381 = !{!10382, !10383, !10384, !10385, !10386}
!10382 = !DILocalVariable(name: "dev", arg: 1, scope: !10380, file: !1562, line: 523, type: !1420)
!10383 = !DILocalVariable(name: "pin", arg: 2, scope: !10380, file: !1562, line: 524, type: !1435)
!10384 = !DILocalVariable(name: "flags", arg: 3, scope: !10380, file: !1562, line: 524, type: !1436)
!10385 = !DILocalVariable(name: "err", scope: !10380, file: !1562, line: 526, type: !108)
!10386 = !DILocalVariable(name: "pincfg", scope: !10380, file: !1562, line: 527, type: !108)
!10387 = !DILocation(line: 0, scope: !10380)
!10388 = !DILocation(line: 527, column: 2, scope: !10380)
!10389 = !DILocation(line: 532, column: 8, scope: !10380)
!10390 = !DILocation(line: 533, column: 10, scope: !10391)
!10391 = distinct !DILexicalBlock(scope: !10380, file: !1562, line: 533, column: 6)
!10392 = !DILocation(line: 533, column: 6, scope: !10380)
!10393 = !DILocation(line: 543, column: 13, scope: !10394)
!10394 = distinct !DILexicalBlock(scope: !10380, file: !1562, line: 543, column: 6)
!10395 = !DILocation(line: 543, column: 28, scope: !10394)
!10396 = !DILocation(line: 543, column: 6, scope: !10380)
!10397 = !DILocation(line: 544, column: 14, scope: !10398)
!10398 = distinct !DILexicalBlock(scope: !10399, file: !1562, line: 544, column: 7)
!10399 = distinct !DILexicalBlock(scope: !10394, file: !1562, line: 543, column: 34)
!10400 = !DILocation(line: 544, column: 39, scope: !10398)
!10401 = !DILocation(line: 544, column: 7, scope: !10399)
!10402 = !DILocation(line: 545, column: 38, scope: !10403)
!10403 = distinct !DILexicalBlock(scope: !10398, file: !1562, line: 544, column: 45)
!10404 = !DILocation(line: 545, column: 4, scope: !10403)
!10405 = !DILocation(line: 546, column: 3, scope: !10403)
!10406 = !DILocation(line: 546, column: 21, scope: !10407)
!10407 = distinct !DILexicalBlock(scope: !10398, file: !1562, line: 546, column: 14)
!10408 = !DILocation(line: 546, column: 45, scope: !10407)
!10409 = !DILocation(line: 546, column: 14, scope: !10398)
!10410 = !DILocation(line: 547, column: 40, scope: !10411)
!10411 = distinct !DILexicalBlock(scope: !10407, file: !1562, line: 546, column: 51)
!10412 = !DILocation(line: 547, column: 4, scope: !10411)
!10413 = !DILocation(line: 548, column: 3, scope: !10411)
!10414 = !DILocation(line: 551, column: 32, scope: !10380)
!10415 = !DILocation(line: 551, column: 37, scope: !10380)
!10416 = !DILocation(line: 551, column: 2, scope: !10380)
!10417 = !DILocation(line: 554, column: 6, scope: !10380)
!10418 = !DILocation(line: 562, column: 1, scope: !10380)
!10419 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1562, file: !1562, line: 410, type: !10420, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10422)
!10420 = !DISubroutineType(types: !10421)
!10421 = !{!108, !1420, !1247}
!10422 = !{!10423, !10424, !10425, !10427}
!10423 = !DILocalVariable(name: "dev", arg: 1, scope: !10419, file: !1562, line: 410, type: !1420)
!10424 = !DILocalVariable(name: "value", arg: 2, scope: !10419, file: !1562, line: 410, type: !1247)
!10425 = !DILocalVariable(name: "cfg", scope: !10419, file: !1562, line: 412, type: !10426)
!10426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1671, size: 32)
!10427 = !DILocalVariable(name: "gpio", scope: !10419, file: !1562, line: 413, type: !1493)
!10428 = !DILocation(line: 0, scope: !10419)
!10429 = !DILocation(line: 412, column: 45, scope: !10419)
!10430 = !DILocation(line: 413, column: 44, scope: !10419)
!10431 = !DILocation(line: 415, column: 11, scope: !10419)
!10432 = !DILocation(line: 415, column: 9, scope: !10419)
!10433 = !DILocation(line: 417, column: 2, scope: !10419)
!10434 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1562, file: !1562, line: 420, type: !1445, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10435)
!10435 = !{!10436, !10437, !10438, !10439, !10440, !10441}
!10436 = !DILocalVariable(name: "dev", arg: 1, scope: !10434, file: !1562, line: 420, type: !1420)
!10437 = !DILocalVariable(name: "mask", arg: 2, scope: !10434, file: !1562, line: 421, type: !1447)
!10438 = !DILocalVariable(name: "value", arg: 3, scope: !10434, file: !1562, line: 422, type: !1442)
!10439 = !DILocalVariable(name: "cfg", scope: !10434, file: !1562, line: 424, type: !10426)
!10440 = !DILocalVariable(name: "gpio", scope: !10434, file: !1562, line: 425, type: !1493)
!10441 = !DILocalVariable(name: "port_value", scope: !10434, file: !1562, line: 426, type: !113)
!10442 = !DILocation(line: 0, scope: !10434)
!10443 = !DILocation(line: 424, column: 45, scope: !10434)
!10444 = !DILocation(line: 425, column: 44, scope: !10434)
!10445 = !DILocation(line: 430, column: 15, scope: !10434)
!10446 = !DILocation(line: 431, column: 46, scope: !10434)
!10447 = !DILocation(line: 431, column: 44, scope: !10434)
!10448 = !DILocation(line: 431, column: 61, scope: !10434)
!10449 = !DILocation(line: 431, column: 53, scope: !10434)
!10450 = !DILocation(line: 431, column: 2, scope: !10434)
!10451 = !DILocation(line: 435, column: 2, scope: !10434)
!10452 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1562, file: !1562, line: 438, type: !1450, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10453)
!10453 = !{!10454, !10455, !10456, !10457}
!10454 = !DILocalVariable(name: "dev", arg: 1, scope: !10452, file: !1562, line: 438, type: !1420)
!10455 = !DILocalVariable(name: "pins", arg: 2, scope: !10452, file: !1562, line: 439, type: !1447)
!10456 = !DILocalVariable(name: "cfg", scope: !10452, file: !1562, line: 441, type: !10426)
!10457 = !DILocalVariable(name: "gpio", scope: !10452, file: !1562, line: 442, type: !1493)
!10458 = !DILocation(line: 0, scope: !10452)
!10459 = !DILocation(line: 441, column: 45, scope: !10452)
!10460 = !DILocation(line: 442, column: 44, scope: !10452)
!10461 = !DILocation(line: 448, column: 2, scope: !10452)
!10462 = !DILocation(line: 450, column: 2, scope: !10452)
!10463 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1562, file: !1562, line: 453, type: !1450, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10464)
!10464 = !{!10465, !10466, !10467, !10468}
!10465 = !DILocalVariable(name: "dev", arg: 1, scope: !10463, file: !1562, line: 453, type: !1420)
!10466 = !DILocalVariable(name: "pins", arg: 2, scope: !10463, file: !1562, line: 454, type: !1447)
!10467 = !DILocalVariable(name: "cfg", scope: !10463, file: !1562, line: 456, type: !10426)
!10468 = !DILocalVariable(name: "gpio", scope: !10463, file: !1562, line: 457, type: !1493)
!10469 = !DILocation(line: 0, scope: !10463)
!10470 = !DILocation(line: 456, column: 45, scope: !10463)
!10471 = !DILocation(line: 457, column: 44, scope: !10463)
!10472 = !DILocation(line: 467, column: 2, scope: !10463)
!10473 = !DILocation(line: 470, column: 2, scope: !10463)
!10474 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1562, file: !1562, line: 473, type: !1450, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10475)
!10475 = !{!10476, !10477, !10478, !10479}
!10476 = !DILocalVariable(name: "dev", arg: 1, scope: !10474, file: !1562, line: 473, type: !1420)
!10477 = !DILocalVariable(name: "pins", arg: 2, scope: !10474, file: !1562, line: 474, type: !1447)
!10478 = !DILocalVariable(name: "cfg", scope: !10474, file: !1562, line: 476, type: !10426)
!10479 = !DILocalVariable(name: "gpio", scope: !10474, file: !1562, line: 477, type: !1493)
!10480 = !DILocation(line: 0, scope: !10474)
!10481 = !DILocation(line: 476, column: 45, scope: !10474)
!10482 = !DILocation(line: 477, column: 44, scope: !10474)
!10483 = !DILocation(line: 484, column: 2, scope: !10474)
!10484 = !DILocation(line: 487, column: 2, scope: !10474)
!10485 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1562, file: !1562, line: 594, type: !1456, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10486)
!10486 = !{!10487, !10488, !10489, !10490, !10491, !10492, !10494, !10495, !10496}
!10487 = !DILocalVariable(name: "dev", arg: 1, scope: !10485, file: !1562, line: 594, type: !1420)
!10488 = !DILocalVariable(name: "pin", arg: 2, scope: !10485, file: !1562, line: 595, type: !1435)
!10489 = !DILocalVariable(name: "mode", arg: 3, scope: !10485, file: !1562, line: 596, type: !1394)
!10490 = !DILocalVariable(name: "trig", arg: 4, scope: !10485, file: !1562, line: 597, type: !1400)
!10491 = !DILocalVariable(name: "cfg", scope: !10485, file: !1562, line: 599, type: !10426)
!10492 = !DILocalVariable(name: "data", scope: !10485, file: !1562, line: 600, type: !10493)
!10493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1625, size: 32)
!10494 = !DILocalVariable(name: "edge", scope: !10485, file: !1562, line: 601, type: !108)
!10495 = !DILocalVariable(name: "err", scope: !10485, file: !1562, line: 602, type: !108)
!10496 = !DILabel(scope: !10485, name: "exit", file: !1562, line: 643)
!10497 = !DILocation(line: 0, scope: !10485)
!10498 = !DILocation(line: 599, column: 45, scope: !10485)
!10499 = !DILocation(line: 604, column: 6, scope: !10485)
!10500 = !DILocation(line: 605, column: 34, scope: !10501)
!10501 = distinct !DILexicalBlock(scope: !10502, file: !1562, line: 605, column: 7)
!10502 = distinct !DILexicalBlock(scope: !10503, file: !1562, line: 604, column: 38)
!10503 = distinct !DILexicalBlock(scope: !10485, file: !1562, line: 604, column: 6)
!10504 = !DILocation(line: 605, column: 7, scope: !10501)
!10505 = !DILocation(line: 605, column: 47, scope: !10501)
!10506 = !DILocation(line: 605, column: 39, scope: !10501)
!10507 = !DILocation(line: 605, column: 7, scope: !10502)
!10508 = !DILocation(line: 606, column: 4, scope: !10509)
!10509 = distinct !DILexicalBlock(scope: !10501, file: !1562, line: 605, column: 53)
!10510 = !DILocation(line: 607, column: 4, scope: !10509)
!10511 = !DILocation(line: 608, column: 4, scope: !10509)
!10512 = !DILocation(line: 609, column: 3, scope: !10509)
!10513 = !DILocation(line: 600, column: 38, scope: !10485)
!10514 = !DILocation(line: 620, column: 30, scope: !10515)
!10515 = distinct !DILexicalBlock(scope: !10485, file: !1562, line: 620, column: 6)
!10516 = !DILocation(line: 620, column: 6, scope: !10515)
!10517 = !DILocation(line: 620, column: 57, scope: !10515)
!10518 = !DILocation(line: 620, column: 6, scope: !10485)
!10519 = !DILocation(line: 625, column: 29, scope: !10485)
!10520 = !DILocation(line: 625, column: 2, scope: !10485)
!10521 = !DILocation(line: 627, column: 2, scope: !10485)
!10522 = !DILocation(line: 630, column: 3, scope: !10523)
!10523 = distinct !DILexicalBlock(scope: !10485, file: !1562, line: 627, column: 16)
!10524 = !DILocation(line: 633, column: 3, scope: !10523)
!10525 = !DILocation(line: 636, column: 3, scope: !10523)
!10526 = !DILocation(line: 639, column: 2, scope: !10485)
!10527 = !DILocation(line: 641, column: 2, scope: !10485)
!10528 = !DILocation(line: 643, column: 1, scope: !10485)
!10529 = !DILocation(line: 644, column: 2, scope: !10485)
!10530 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1562, file: !1562, line: 647, type: !1460, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10531)
!10531 = !{!10532, !10533, !10534, !10535}
!10532 = !DILocalVariable(name: "dev", arg: 1, scope: !10530, file: !1562, line: 647, type: !1420)
!10533 = !DILocalVariable(name: "callback", arg: 2, scope: !10530, file: !1562, line: 648, type: !1462)
!10534 = !DILocalVariable(name: "set", arg: 3, scope: !10530, file: !1562, line: 649, type: !422)
!10535 = !DILocalVariable(name: "data", scope: !10530, file: !1562, line: 651, type: !10493)
!10536 = !DILocation(line: 0, scope: !10530)
!10537 = !DILocation(line: 651, column: 38, scope: !10530)
!10538 = !DILocation(line: 653, column: 37, scope: !10530)
!10539 = !DILocation(line: 653, column: 9, scope: !10530)
!10540 = !DILocation(line: 653, column: 2, scope: !10530)
!10541 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !10542, file: !10542, line: 38, type: !10543, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10546)
!10542 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10543 = !DISubroutineType(types: !10544)
!10544 = !{!108, !10545, !1462, !422}
!10545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1631, size: 32)
!10546 = !{!10547, !10548, !10549}
!10547 = !DILocalVariable(name: "callbacks", arg: 1, scope: !10541, file: !10542, line: 38, type: !10545)
!10548 = !DILocalVariable(name: "callback", arg: 2, scope: !10541, file: !10542, line: 39, type: !1462)
!10549 = !DILocalVariable(name: "set", arg: 3, scope: !10541, file: !10542, line: 40, type: !422)
!10550 = !DILocation(line: 0, scope: !10541)
!10551 = !DILocation(line: 45, column: 7, scope: !10552)
!10552 = distinct !DILexicalBlock(scope: !10541, file: !10542, line: 45, column: 6)
!10553 = !DILocation(line: 45, column: 6, scope: !10541)
!10554 = !DILocation(line: 46, column: 56, scope: !10555)
!10555 = distinct !DILexicalBlock(scope: !10556, file: !10542, line: 46, column: 7)
!10556 = distinct !DILexicalBlock(scope: !10552, file: !10542, line: 45, column: 38)
!10557 = !DILocation(line: 46, column: 8, scope: !10555)
!10558 = !DILocation(line: 46, column: 7, scope: !10556)
!10559 = !DILocation(line: 51, column: 13, scope: !10552)
!10560 = !DILocation(line: 56, column: 43, scope: !10561)
!10561 = distinct !DILexicalBlock(scope: !10562, file: !10542, line: 55, column: 11)
!10562 = distinct !DILexicalBlock(scope: !10541, file: !10542, line: 55, column: 6)
!10563 = !DILocation(line: 56, column: 3, scope: !10561)
!10564 = !DILocation(line: 57, column: 2, scope: !10561)
!10565 = !DILocation(line: 60, column: 1, scope: !10541)
!10566 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1467, file: !1467, line: 261, type: !10567, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10569)
!10567 = !DISubroutineType(types: !10568)
!10568 = !{!422, !10545}
!10569 = !{!10570}
!10570 = !DILocalVariable(name: "list", arg: 1, scope: !10566, file: !1467, line: 261, type: !10545)
!10571 = !DILocation(line: 0, scope: !10566)
!10572 = !DILocation(line: 261, column: 1, scope: !10566)
!10573 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1467, file: !1467, line: 417, type: !10574, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10576)
!10574 = !DISubroutineType(types: !10575)
!10575 = !{!422, !10545, !1635}
!10576 = !{!10577, !10578, !10579, !10580}
!10577 = !DILocalVariable(name: "list", arg: 1, scope: !10573, file: !1467, line: 417, type: !10545)
!10578 = !DILocalVariable(name: "node", arg: 2, scope: !10573, file: !1467, line: 417, type: !1635)
!10579 = !DILocalVariable(name: "prev", scope: !10573, file: !1467, line: 417, type: !1635)
!10580 = !DILocalVariable(name: "test", scope: !10573, file: !1467, line: 417, type: !1635)
!10581 = !DILocation(line: 0, scope: !10573)
!10582 = !DILocation(line: 417, column: 1, scope: !10583)
!10583 = distinct !DILexicalBlock(scope: !10573, file: !1467, line: 417, column: 1)
!10584 = !DILocation(line: 417, column: 1, scope: !10585)
!10585 = distinct !DILexicalBlock(scope: !10583, file: !1467, line: 417, column: 1)
!10586 = !DILocation(line: 417, column: 1, scope: !10587)
!10587 = distinct !DILexicalBlock(scope: !10588, file: !1467, line: 417, column: 1)
!10588 = distinct !DILexicalBlock(scope: !10585, file: !1467, line: 417, column: 1)
!10589 = !DILocation(line: 417, column: 1, scope: !10588)
!10590 = distinct !{!10590, !10582, !10582}
!10591 = !DILocation(line: 417, column: 1, scope: !10592)
!10592 = distinct !DILexicalBlock(scope: !10587, file: !1467, line: 417, column: 1)
!10593 = !DILocation(line: 417, column: 1, scope: !10573)
!10594 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1467, file: !1467, line: 298, type: !10595, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10597)
!10595 = !DISubroutineType(types: !10596)
!10596 = !{null, !10545, !1635}
!10597 = !{!10598, !10599}
!10598 = !DILocalVariable(name: "list", arg: 1, scope: !10594, file: !1467, line: 298, type: !10545)
!10599 = !DILocalVariable(name: "node", arg: 2, scope: !10594, file: !1467, line: 298, type: !1635)
!10600 = !DILocation(line: 0, scope: !10594)
!10601 = !DILocation(line: 298, column: 1, scope: !10594)
!10602 = !DILocation(line: 298, column: 1, scope: !10603)
!10603 = distinct !DILexicalBlock(scope: !10594, file: !1467, line: 298, column: 1)
!10604 = !DILocation(line: 298, column: 1, scope: !10605)
!10605 = distinct !DILexicalBlock(scope: !10603, file: !1467, line: 298, column: 1)
!10606 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1467, file: !1467, line: 231, type: !10607, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10609)
!10607 = !DISubroutineType(types: !10608)
!10608 = !{!1635, !10545}
!10609 = !{!10610}
!10610 = !DILocalVariable(name: "list", arg: 1, scope: !10606, file: !1467, line: 231, type: !10545)
!10611 = !DILocation(line: 0, scope: !10606)
!10612 = !DILocation(line: 233, column: 15, scope: !10606)
!10613 = !DILocation(line: 233, column: 2, scope: !10606)
!10614 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1467, file: !1467, line: 209, type: !10615, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10617)
!10615 = !DISubroutineType(types: !10616)
!10616 = !{null, !1635, !1635}
!10617 = !{!10618, !10619}
!10618 = !DILocalVariable(name: "parent", arg: 1, scope: !10614, file: !1467, line: 209, type: !1635)
!10619 = !DILocalVariable(name: "child", arg: 2, scope: !10614, file: !1467, line: 209, type: !1635)
!10620 = !DILocation(line: 0, scope: !10614)
!10621 = !DILocation(line: 211, column: 10, scope: !10614)
!10622 = !DILocation(line: 211, column: 15, scope: !10614)
!10623 = !DILocation(line: 212, column: 1, scope: !10614)
!10624 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1467, file: !1467, line: 214, type: !10595, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10625)
!10625 = !{!10626, !10627}
!10626 = !DILocalVariable(name: "list", arg: 1, scope: !10624, file: !1467, line: 214, type: !10545)
!10627 = !DILocalVariable(name: "node", arg: 2, scope: !10624, file: !1467, line: 214, type: !1635)
!10628 = !DILocation(line: 0, scope: !10624)
!10629 = !DILocation(line: 216, column: 8, scope: !10624)
!10630 = !DILocation(line: 216, column: 13, scope: !10624)
!10631 = !DILocation(line: 217, column: 1, scope: !10624)
!10632 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1467, file: !1467, line: 243, type: !10607, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10633)
!10633 = !{!10634}
!10634 = !DILocalVariable(name: "list", arg: 1, scope: !10632, file: !1467, line: 243, type: !10545)
!10635 = !DILocation(line: 0, scope: !10632)
!10636 = !DILocation(line: 245, column: 15, scope: !10632)
!10637 = !DILocation(line: 245, column: 2, scope: !10632)
!10638 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1467, file: !1467, line: 219, type: !10595, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10639)
!10639 = !{!10640, !10641}
!10640 = !DILocalVariable(name: "list", arg: 1, scope: !10638, file: !1467, line: 219, type: !10545)
!10641 = !DILocalVariable(name: "node", arg: 2, scope: !10638, file: !1467, line: 219, type: !1635)
!10642 = !DILocation(line: 0, scope: !10638)
!10643 = !DILocation(line: 221, column: 8, scope: !10638)
!10644 = !DILocation(line: 221, column: 13, scope: !10638)
!10645 = !DILocation(line: 222, column: 1, scope: !10638)
!10646 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1467, file: !1467, line: 401, type: !10647, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10649)
!10647 = !DISubroutineType(types: !10648)
!10648 = !{null, !10545, !1635, !1635}
!10649 = !{!10650, !10651, !10652}
!10650 = !DILocalVariable(name: "list", arg: 1, scope: !10646, file: !1467, line: 401, type: !10545)
!10651 = !DILocalVariable(name: "prev_node", arg: 2, scope: !10646, file: !1467, line: 401, type: !1635)
!10652 = !DILocalVariable(name: "node", arg: 3, scope: !10646, file: !1467, line: 401, type: !1635)
!10653 = !DILocation(line: 0, scope: !10646)
!10654 = !DILocation(line: 401, column: 1, scope: !10655)
!10655 = distinct !DILexicalBlock(scope: !10646, file: !1467, line: 401, column: 1)
!10656 = !DILocation(line: 0, scope: !10655)
!10657 = !DILocation(line: 401, column: 1, scope: !10646)
!10658 = !DILocation(line: 401, column: 1, scope: !10659)
!10659 = distinct !DILexicalBlock(scope: !10655, file: !1467, line: 401, column: 1)
!10660 = !DILocation(line: 401, column: 1, scope: !10661)
!10661 = distinct !DILexicalBlock(scope: !10659, file: !1467, line: 401, column: 1)
!10662 = !DILocation(line: 401, column: 1, scope: !10663)
!10663 = distinct !DILexicalBlock(scope: !10661, file: !1467, line: 401, column: 1)
!10664 = !DILocation(line: 401, column: 1, scope: !10665)
!10665 = distinct !DILexicalBlock(scope: !10655, file: !1467, line: 401, column: 1)
!10666 = !DILocation(line: 401, column: 1, scope: !10667)
!10667 = distinct !DILexicalBlock(scope: !10665, file: !1467, line: 401, column: 1)
!10668 = !DILocation(line: 401, column: 1, scope: !10669)
!10669 = distinct !DILexicalBlock(scope: !10667, file: !1467, line: 401, column: 1)
!10670 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1467, file: !1467, line: 285, type: !10671, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10673)
!10671 = !DISubroutineType(types: !10672)
!10672 = !{!1635, !1635}
!10673 = !{!10674}
!10674 = !DILocalVariable(name: "node", arg: 1, scope: !10670, file: !1467, line: 285, type: !1635)
!10675 = !DILocation(line: 0, scope: !10670)
!10676 = !DILocation(line: 285, column: 1, scope: !10670)
!10677 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1467, file: !1467, line: 274, type: !10671, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10678)
!10678 = !{!10679}
!10679 = !DILocalVariable(name: "node", arg: 1, scope: !10677, file: !1467, line: 274, type: !1635)
!10680 = !DILocation(line: 0, scope: !10677)
!10681 = !DILocation(line: 274, column: 1, scope: !10677)
!10682 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1467, file: !1467, line: 204, type: !10671, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10683)
!10683 = !{!10684}
!10684 = !DILocalVariable(name: "node", arg: 1, scope: !10682, file: !1467, line: 204, type: !1635)
!10685 = !DILocation(line: 0, scope: !10682)
!10686 = !DILocation(line: 206, column: 15, scope: !10682)
!10687 = !DILocation(line: 206, column: 2, scope: !10682)
!10688 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1562, file: !1562, line: 342, type: !563, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10689)
!10689 = !{!10690, !10691, !10692}
!10690 = !DILocalVariable(name: "pin", arg: 1, scope: !10688, file: !1562, line: 342, type: !108)
!10691 = !DILocalVariable(name: "line", scope: !10688, file: !1562, line: 344, type: !113)
!10692 = !DILocalVariable(name: "port", scope: !10688, file: !1562, line: 345, type: !108)
!10693 = !DILocation(line: 0, scope: !10688)
!10694 = !DILocation(line: 344, column: 18, scope: !10688)
!10695 = !{i32 983040, i32 0}
!10696 = !DILocation(line: 356, column: 9, scope: !10688)
!10697 = !DILocation(line: 370, column: 2, scope: !10688)
!10698 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1562, file: !1562, line: 37, type: !1141, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10699)
!10699 = !{!10700, !10701, !10702}
!10700 = !DILocalVariable(name: "line", arg: 1, scope: !10698, file: !1562, line: 37, type: !108)
!10701 = !DILocalVariable(name: "arg", arg: 2, scope: !10698, file: !1562, line: 37, type: !104)
!10702 = !DILocalVariable(name: "data", scope: !10698, file: !1562, line: 39, type: !10493)
!10703 = !DILocation(line: 0, scope: !10698)
!10704 = !DILocation(line: 41, column: 29, scope: !10698)
!10705 = !DILocation(line: 41, column: 39, scope: !10698)
!10706 = !DILocation(line: 41, column: 44, scope: !10698)
!10707 = !DILocation(line: 41, column: 2, scope: !10698)
!10708 = !DILocation(line: 42, column: 1, scope: !10698)
!10709 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1562, file: !1562, line: 376, type: !10710, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10712)
!10710 = !DISubroutineType(types: !10711)
!10711 = !{!108, !108, !108}
!10712 = !{!10713, !10714, !10715, !10717, !10718}
!10713 = !DILocalVariable(name: "port", arg: 1, scope: !10709, file: !1562, line: 376, type: !108)
!10714 = !DILocalVariable(name: "pin", arg: 2, scope: !10709, file: !1562, line: 376, type: !108)
!10715 = !DILocalVariable(name: "clk", scope: !10709, file: !1562, line: 386, type: !10716)
!10716 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1420)
!10717 = !DILocalVariable(name: "pclken", scope: !10709, file: !1562, line: 387, type: !1678)
!10718 = !DILocalVariable(name: "ret", scope: !10709, file: !1562, line: 396, type: !108)
!10719 = !DILocation(line: 0, scope: !10709)
!10720 = !DILocation(line: 387, column: 2, scope: !10709)
!10721 = !DILocation(line: 387, column: 22, scope: !10709)
!10722 = !DILocation(line: 399, column: 8, scope: !10709)
!10723 = !DILocation(line: 400, column: 10, scope: !10724)
!10724 = distinct !DILexicalBlock(scope: !10709, file: !1562, line: 400, column: 6)
!10725 = !DILocation(line: 400, column: 6, scope: !10709)
!10726 = !DILocation(line: 405, column: 2, scope: !10709)
!10727 = !DILocation(line: 407, column: 2, scope: !10709)
!10728 = !DILocation(line: 408, column: 1, scope: !10709)
!10729 = distinct !DISubprogram(name: "clock_control_on", scope: !1195, file: !1195, line: 123, type: !1527, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10730)
!10730 = !{!10731, !10732, !10733}
!10731 = !DILocalVariable(name: "dev", arg: 1, scope: !10729, file: !1195, line: 123, type: !1420)
!10732 = !DILocalVariable(name: "sys", arg: 2, scope: !10729, file: !1195, line: 124, type: !1291)
!10733 = !DILocalVariable(name: "api", scope: !10729, file: !1195, line: 126, type: !1520)
!10734 = !DILocation(line: 0, scope: !10729)
!10735 = !DILocation(line: 127, column: 49, scope: !10729)
!10736 = !DILocation(line: 129, column: 14, scope: !10729)
!10737 = !DILocation(line: 129, column: 9, scope: !10729)
!10738 = !DILocation(line: 129, column: 2, scope: !10729)
!10739 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1562, file: !1562, line: 311, type: !9857, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10740)
!10740 = !{!10741, !10742, !10743}
!10741 = !DILocalVariable(name: "port", arg: 1, scope: !10739, file: !1562, line: 311, type: !108)
!10742 = !DILocalVariable(name: "pin", arg: 2, scope: !10739, file: !1562, line: 311, type: !108)
!10743 = !DILocalVariable(name: "line", scope: !10739, file: !1562, line: 313, type: !113)
!10744 = !DILocation(line: 0, scope: !10739)
!10745 = !DILocation(line: 313, column: 18, scope: !10739)
!10746 = !DILocation(line: 337, column: 2, scope: !10739)
!10747 = !DILocation(line: 340, column: 1, scope: !10739)
!10748 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1562, file: !1562, line: 295, type: !10749, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10751)
!10749 = !DISubroutineType(types: !10750)
!10750 = !{!113, !108}
!10751 = !{!10752}
!10752 = !DILocalVariable(name: "pin", arg: 1, scope: !10748, file: !1562, line: 295, type: !108)
!10753 = !DILocation(line: 0, scope: !10748)
!10754 = !DILocation(line: 307, column: 46, scope: !10748)
!10755 = !DILocation(line: 307, column: 27, scope: !10748)
!10756 = !DILocation(line: 307, column: 32, scope: !10748)
!10757 = !DILocation(line: 307, column: 14, scope: !10748)
!10758 = !DILocation(line: 307, column: 39, scope: !10748)
!10759 = !DILocation(line: 307, column: 2, scope: !10748)
!10760 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !6831, file: !6831, line: 671, type: !10761, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10763)
!10761 = !DISubroutineType(types: !10762)
!10762 = !{null, !113, !113}
!10763 = !{!10764, !10765}
!10764 = !DILocalVariable(name: "Port", arg: 1, scope: !10760, file: !6831, line: 671, type: !113)
!10765 = !DILocalVariable(name: "Line", arg: 2, scope: !10760, file: !6831, line: 671, type: !113)
!10766 = !DILocation(line: 0, scope: !10760)
!10767 = !DILocation(line: 673, column: 3, scope: !10760)
!10768 = !DILocalVariable(name: "value", arg: 1, scope: !10769, file: !7128, line: 373, type: !113)
!10769 = distinct !DISubprogram(name: "__RBIT", scope: !7128, file: !7128, line: 373, type: !8374, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10770)
!10770 = !{!10768, !10771}
!10771 = !DILocalVariable(name: "result", scope: !10769, file: !7128, line: 375, type: !113)
!10772 = !DILocation(line: 0, scope: !10769, inlinedAt: !10773)
!10773 = distinct !DILocation(line: 673, column: 3, scope: !10760)
!10774 = !DILocation(line: 380, column: 4, scope: !10769, inlinedAt: !10773)
!10775 = !{i64 3747986}
!10776 = !DILocalVariable(name: "value", arg: 1, scope: !10777, file: !7128, line: 403, type: !113)
!10777 = distinct !DISubprogram(name: "__CLZ", scope: !7128, file: !7128, line: 403, type: !10778, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10780)
!10778 = !DISubroutineType(types: !10779)
!10779 = !{!164, !113}
!10780 = !{!10776}
!10781 = !DILocation(line: 0, scope: !10777, inlinedAt: !10782)
!10782 = distinct !DILocation(line: 673, column: 3, scope: !10760)
!10783 = !DILocation(line: 414, column: 7, scope: !10777, inlinedAt: !10782)
!10784 = !DILocation(line: 674, column: 1, scope: !10760)
!10785 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !10542, file: !10542, line: 69, type: !10786, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10788)
!10786 = !DISubroutineType(types: !10787)
!10787 = !{null, !10545, !1420, !113}
!10788 = !{!10789, !10790, !10791, !10792, !10793}
!10789 = !DILocalVariable(name: "list", arg: 1, scope: !10785, file: !10542, line: 69, type: !10545)
!10790 = !DILocalVariable(name: "port", arg: 2, scope: !10785, file: !10542, line: 70, type: !1420)
!10791 = !DILocalVariable(name: "pins", arg: 3, scope: !10785, file: !10542, line: 71, type: !113)
!10792 = !DILocalVariable(name: "cb", scope: !10785, file: !10542, line: 73, type: !1462)
!10793 = !DILocalVariable(name: "tmp", scope: !10785, file: !10542, line: 73, type: !1462)
!10794 = !DILocation(line: 0, scope: !10785)
!10795 = !DILocation(line: 75, column: 2, scope: !10796)
!10796 = distinct !DILexicalBlock(scope: !10785, file: !10542, line: 75, column: 2)
!10797 = !DILocation(line: 0, scope: !10796)
!10798 = !DILocation(line: 76, column: 11, scope: !10799)
!10799 = distinct !DILexicalBlock(scope: !10800, file: !10542, line: 76, column: 7)
!10800 = distinct !DILexicalBlock(scope: !10801, file: !10542, line: 75, column: 57)
!10801 = distinct !DILexicalBlock(scope: !10796, file: !10542, line: 75, column: 2)
!10802 = !DILocation(line: 76, column: 20, scope: !10799)
!10803 = !DILocation(line: 76, column: 7, scope: !10800)
!10804 = !DILocation(line: 78, column: 8, scope: !10805)
!10805 = distinct !DILexicalBlock(scope: !10799, file: !10542, line: 76, column: 28)
!10806 = !DILocation(line: 78, column: 4, scope: !10805)
!10807 = !DILocation(line: 79, column: 3, scope: !10805)
!10808 = !DILocation(line: 75, column: 2, scope: !10801)
!10809 = !DILocation(line: 81, column: 1, scope: !10785)
!10810 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !6831, file: !6831, line: 710, type: !8374, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10811)
!10811 = !{!10812}
!10812 = !DILocalVariable(name: "Line", arg: 1, scope: !10810, file: !6831, line: 710, type: !113)
!10813 = !DILocation(line: 0, scope: !10810)
!10814 = !DILocation(line: 712, column: 21, scope: !10810)
!10815 = !DILocation(line: 0, scope: !10769, inlinedAt: !10816)
!10816 = distinct !DILocation(line: 712, column: 76, scope: !10810)
!10817 = !DILocation(line: 380, column: 4, scope: !10769, inlinedAt: !10816)
!10818 = !DILocation(line: 0, scope: !10777, inlinedAt: !10819)
!10819 = distinct !DILocation(line: 712, column: 76, scope: !10810)
!10820 = !DILocation(line: 414, column: 7, scope: !10777, inlinedAt: !10819)
!10821 = !DILocation(line: 712, column: 73, scope: !10810)
!10822 = !DILocation(line: 712, column: 3, scope: !10810)
!10823 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !10824, file: !10824, line: 910, type: !10825, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10827)
!10824 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10825 = !DISubroutineType(types: !10826)
!10826 = !{null, !1493, !113}
!10827 = !{!10828, !10829}
!10828 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10823, file: !10824, line: 910, type: !1493)
!10829 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10823, file: !10824, line: 910, type: !113)
!10830 = !DILocation(line: 0, scope: !10823)
!10831 = !DILocation(line: 912, column: 3, scope: !10823)
!10832 = !DILocation(line: 913, column: 1, scope: !10823)
!10833 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !10824, file: !10824, line: 823, type: !10834, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10836)
!10834 = !DISubroutineType(types: !10835)
!10835 = !{!113, !1493}
!10836 = !{!10837}
!10837 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10833, file: !10824, line: 823, type: !1493)
!10838 = !DILocation(line: 0, scope: !10833)
!10839 = !DILocation(line: 825, column: 21, scope: !10833)
!10840 = !DILocation(line: 825, column: 3, scope: !10833)
!10841 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !10824, file: !10824, line: 812, type: !10825, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10842)
!10842 = !{!10843, !10844}
!10843 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10841, file: !10824, line: 812, type: !1493)
!10844 = !DILocalVariable(name: "PortValue", arg: 2, scope: !10841, file: !10824, line: 812, type: !113)
!10845 = !DILocation(line: 0, scope: !10841)
!10846 = !DILocation(line: 814, column: 3, scope: !10841)
!10847 = !DILocation(line: 815, column: 1, scope: !10841)
!10848 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !10824, file: !10824, line: 771, type: !10834, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10849)
!10849 = !{!10850}
!10850 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10848, file: !10824, line: 771, type: !1493)
!10851 = !DILocation(line: 0, scope: !10848)
!10852 = !DILocation(line: 773, column: 21, scope: !10848)
!10853 = !DILocation(line: 773, column: 3, scope: !10848)
!10854 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1562, file: !1562, line: 47, type: !10855, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10857)
!10855 = !DISubroutineType(types: !10856)
!10856 = !{!108, !1436, !544}
!10857 = !{!10858, !10859}
!10858 = !DILocalVariable(name: "flags", arg: 1, scope: !10854, file: !1562, line: 47, type: !1436)
!10859 = !DILocalVariable(name: "pincfg", arg: 2, scope: !10854, file: !1562, line: 47, type: !544)
!10860 = !DILocation(line: 0, scope: !10854)
!10861 = !DILocation(line: 50, column: 13, scope: !10862)
!10862 = distinct !DILexicalBlock(scope: !10854, file: !1562, line: 50, column: 6)
!10863 = !DILocation(line: 50, column: 28, scope: !10862)
!10864 = !DILocation(line: 50, column: 6, scope: !10854)
!10865 = !DILocation(line: 53, column: 11, scope: !10866)
!10866 = distinct !DILexicalBlock(scope: !10862, file: !1562, line: 50, column: 34)
!10867 = !DILocation(line: 55, column: 14, scope: !10868)
!10868 = distinct !DILexicalBlock(scope: !10866, file: !1562, line: 55, column: 7)
!10869 = !DILocation(line: 55, column: 35, scope: !10868)
!10870 = !DILocation(line: 55, column: 7, scope: !10866)
!10871 = !DILocation(line: 56, column: 14, scope: !10872)
!10872 = distinct !DILexicalBlock(scope: !10873, file: !1562, line: 56, column: 8)
!10873 = distinct !DILexicalBlock(scope: !10868, file: !1562, line: 55, column: 41)
!10874 = !DILocation(line: 56, column: 8, scope: !10873)
!10875 = !DILocation(line: 0, scope: !10868)
!10876 = !DILocation(line: 66, column: 14, scope: !10877)
!10877 = distinct !DILexicalBlock(scope: !10866, file: !1562, line: 66, column: 7)
!10878 = !DILocation(line: 66, column: 30, scope: !10877)
!10879 = !DILocation(line: 66, column: 7, scope: !10866)
!10880 = !DILocation(line: 67, column: 12, scope: !10881)
!10881 = distinct !DILexicalBlock(scope: !10877, file: !1562, line: 66, column: 36)
!10882 = !DILocation(line: 68, column: 3, scope: !10881)
!10883 = !DILocation(line: 68, column: 21, scope: !10884)
!10884 = distinct !DILexicalBlock(scope: !10877, file: !1562, line: 68, column: 14)
!10885 = !DILocation(line: 68, column: 39, scope: !10884)
!10886 = !DILocation(line: 68, column: 14, scope: !10877)
!10887 = !DILocation(line: 69, column: 12, scope: !10888)
!10888 = distinct !DILexicalBlock(scope: !10884, file: !1562, line: 68, column: 45)
!10889 = !DILocation(line: 70, column: 3, scope: !10888)
!10890 = !DILocation(line: 72, column: 21, scope: !10891)
!10891 = distinct !DILexicalBlock(scope: !10862, file: !1562, line: 72, column: 14)
!10892 = !DILocation(line: 72, column: 35, scope: !10891)
!10893 = !DILocation(line: 72, column: 14, scope: !10862)
!10894 = !DILocation(line: 77, column: 14, scope: !10895)
!10895 = distinct !DILexicalBlock(scope: !10896, file: !1562, line: 77, column: 7)
!10896 = distinct !DILexicalBlock(scope: !10891, file: !1562, line: 72, column: 41)
!10897 = !DILocation(line: 77, column: 30, scope: !10895)
!10898 = !DILocation(line: 77, column: 7, scope: !10896)
!10899 = !DILocation(line: 0, scope: !10862)
!10900 = !DILocation(line: 90, column: 1, scope: !10854)
!10901 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1562, file: !1562, line: 157, type: !10902, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10904)
!10902 = !DISubroutineType(types: !10903)
!10903 = !{null, !1420, !108, !108, !108}
!10904 = !{!10905, !10906, !10907, !10908, !10909, !10910, !10911, !10912, !10913, !10914, !10915}
!10905 = !DILocalVariable(name: "dev", arg: 1, scope: !10901, file: !1562, line: 157, type: !1420)
!10906 = !DILocalVariable(name: "pin", arg: 2, scope: !10901, file: !1562, line: 157, type: !108)
!10907 = !DILocalVariable(name: "conf", arg: 3, scope: !10901, file: !1562, line: 158, type: !108)
!10908 = !DILocalVariable(name: "func", arg: 4, scope: !10901, file: !1562, line: 158, type: !108)
!10909 = !DILocalVariable(name: "cfg", scope: !10901, file: !1562, line: 160, type: !10426)
!10910 = !DILocalVariable(name: "gpio", scope: !10901, file: !1562, line: 161, type: !1493)
!10911 = !DILocalVariable(name: "pin_ll", scope: !10901, file: !1562, line: 163, type: !108)
!10912 = !DILocalVariable(name: "mode", scope: !10901, file: !1562, line: 227, type: !32)
!10913 = !DILocalVariable(name: "otype", scope: !10901, file: !1562, line: 227, type: !32)
!10914 = !DILocalVariable(name: "ospeed", scope: !10901, file: !1562, line: 227, type: !32)
!10915 = !DILocalVariable(name: "pupd", scope: !10901, file: !1562, line: 227, type: !32)
!10916 = !DILocation(line: 0, scope: !10901)
!10917 = !DILocation(line: 160, column: 45, scope: !10901)
!10918 = !DILocation(line: 161, column: 44, scope: !10901)
!10919 = !DILocation(line: 163, column: 15, scope: !10901)
!10920 = !DILocation(line: 229, column: 14, scope: !10901)
!10921 = !DILocation(line: 246, column: 47, scope: !10901)
!10922 = !DILocation(line: 246, column: 2, scope: !10901)
!10923 = !DILocation(line: 248, column: 43, scope: !10901)
!10924 = !DILocation(line: 248, column: 2, scope: !10901)
!10925 = !DILocation(line: 250, column: 40, scope: !10901)
!10926 = !DILocation(line: 250, column: 2, scope: !10901)
!10927 = !DILocation(line: 252, column: 11, scope: !10928)
!10928 = distinct !DILexicalBlock(scope: !10901, file: !1562, line: 252, column: 6)
!10929 = !DILocation(line: 252, column: 6, scope: !10901)
!10930 = !DILocation(line: 253, column: 11, scope: !10931)
!10931 = distinct !DILexicalBlock(scope: !10932, file: !1562, line: 253, column: 7)
!10932 = distinct !DILexicalBlock(scope: !10928, file: !1562, line: 252, column: 36)
!10933 = !DILocation(line: 253, column: 7, scope: !10932)
!10934 = !DILocation(line: 254, column: 4, scope: !10935)
!10935 = distinct !DILexicalBlock(scope: !10931, file: !1562, line: 253, column: 16)
!10936 = !DILocation(line: 255, column: 3, scope: !10935)
!10937 = !DILocation(line: 256, column: 4, scope: !10938)
!10938 = distinct !DILexicalBlock(scope: !10931, file: !1562, line: 255, column: 10)
!10939 = !DILocation(line: 260, column: 40, scope: !10901)
!10940 = !DILocation(line: 260, column: 2, scope: !10901)
!10941 = !DILocation(line: 265, column: 1, scope: !10901)
!10942 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1562, file: !1562, line: 137, type: !10749, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10943)
!10943 = !{!10944, !10945}
!10944 = !DILocalVariable(name: "pin", arg: 1, scope: !10942, file: !1562, line: 137, type: !108)
!10945 = !DILocalVariable(name: "pinval", scope: !10942, file: !1562, line: 139, type: !113)
!10946 = !DILocation(line: 0, scope: !10942)
!10947 = !DILocation(line: 149, column: 13, scope: !10942)
!10948 = !DILocation(line: 151, column: 2, scope: !10942)
!10949 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !10824, file: !10824, line: 342, type: !10950, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10952)
!10950 = !DISubroutineType(types: !10951)
!10951 = !{null, !1493, !113, !113}
!10952 = !{!10953, !10954, !10955}
!10953 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10949, file: !10824, line: 342, type: !1493)
!10954 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10949, file: !10824, line: 342, type: !113)
!10955 = !DILocalVariable(name: "OutputType", arg: 3, scope: !10949, file: !10824, line: 342, type: !113)
!10956 = !DILocation(line: 0, scope: !10949)
!10957 = !DILocation(line: 344, column: 3, scope: !10949)
!10958 = !DILocation(line: 345, column: 1, scope: !10949)
!10959 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !10824, file: !10824, line: 413, type: !10950, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10960)
!10960 = !{!10961, !10962, !10963}
!10961 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10959, file: !10824, line: 413, type: !1493)
!10962 = !DILocalVariable(name: "Pin", arg: 2, scope: !10959, file: !10824, line: 413, type: !113)
!10963 = !DILocalVariable(name: "Speed", arg: 3, scope: !10959, file: !10824, line: 413, type: !113)
!10964 = !DILocation(line: 0, scope: !10959)
!10965 = !DILocation(line: 415, column: 3, scope: !10959)
!10966 = !DILocation(line: 0, scope: !10769, inlinedAt: !10967)
!10967 = distinct !DILocation(line: 415, column: 3, scope: !10959)
!10968 = !DILocation(line: 380, column: 4, scope: !10769, inlinedAt: !10967)
!10969 = !DILocation(line: 0, scope: !10777, inlinedAt: !10970)
!10970 = distinct !DILocation(line: 415, column: 3, scope: !10959)
!10971 = !DILocation(line: 414, column: 7, scope: !10777, inlinedAt: !10970)
!10972 = !DILocation(line: 0, scope: !10769, inlinedAt: !10973)
!10973 = distinct !DILocation(line: 415, column: 3, scope: !10959)
!10974 = !DILocation(line: 0, scope: !10777, inlinedAt: !10975)
!10975 = distinct !DILocation(line: 415, column: 3, scope: !10959)
!10976 = !DILocation(line: 417, column: 1, scope: !10959)
!10977 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !10824, file: !10824, line: 484, type: !10950, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10978)
!10978 = !{!10979, !10980, !10981}
!10979 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10977, file: !10824, line: 484, type: !1493)
!10980 = !DILocalVariable(name: "Pin", arg: 2, scope: !10977, file: !10824, line: 484, type: !113)
!10981 = !DILocalVariable(name: "Pull", arg: 3, scope: !10977, file: !10824, line: 484, type: !113)
!10982 = !DILocation(line: 0, scope: !10977)
!10983 = !DILocation(line: 486, column: 3, scope: !10977)
!10984 = !DILocation(line: 0, scope: !10769, inlinedAt: !10985)
!10985 = distinct !DILocation(line: 486, column: 3, scope: !10977)
!10986 = !DILocation(line: 380, column: 4, scope: !10769, inlinedAt: !10985)
!10987 = !DILocation(line: 0, scope: !10777, inlinedAt: !10988)
!10988 = distinct !DILocation(line: 486, column: 3, scope: !10977)
!10989 = !DILocation(line: 414, column: 7, scope: !10777, inlinedAt: !10988)
!10990 = !DILocation(line: 0, scope: !10769, inlinedAt: !10991)
!10991 = distinct !DILocation(line: 486, column: 3, scope: !10977)
!10992 = !DILocation(line: 0, scope: !10777, inlinedAt: !10993)
!10993 = distinct !DILocation(line: 486, column: 3, scope: !10977)
!10994 = !DILocation(line: 487, column: 1, scope: !10977)
!10995 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !10824, file: !10824, line: 556, type: !10950, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10996)
!10996 = !{!10997, !10998, !10999}
!10997 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10995, file: !10824, line: 556, type: !1493)
!10998 = !DILocalVariable(name: "Pin", arg: 2, scope: !10995, file: !10824, line: 556, type: !113)
!10999 = !DILocalVariable(name: "Alternate", arg: 3, scope: !10995, file: !10824, line: 556, type: !113)
!11000 = !DILocation(line: 0, scope: !10995)
!11001 = !DILocation(line: 558, column: 3, scope: !10995)
!11002 = !DILocation(line: 0, scope: !10769, inlinedAt: !11003)
!11003 = distinct !DILocation(line: 558, column: 3, scope: !10995)
!11004 = !DILocation(line: 380, column: 4, scope: !10769, inlinedAt: !11003)
!11005 = !DILocation(line: 0, scope: !10777, inlinedAt: !11006)
!11006 = distinct !DILocation(line: 558, column: 3, scope: !10995)
!11007 = !DILocation(line: 414, column: 7, scope: !10777, inlinedAt: !11006)
!11008 = !DILocation(line: 0, scope: !10769, inlinedAt: !11009)
!11009 = distinct !DILocation(line: 558, column: 3, scope: !10995)
!11010 = !DILocation(line: 0, scope: !10777, inlinedAt: !11011)
!11011 = distinct !DILocation(line: 558, column: 3, scope: !10995)
!11012 = !DILocation(line: 560, column: 1, scope: !10995)
!11013 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !10824, file: !10824, line: 633, type: !10950, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !11014)
!11014 = !{!11015, !11016, !11017}
!11015 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11013, file: !10824, line: 633, type: !1493)
!11016 = !DILocalVariable(name: "Pin", arg: 2, scope: !11013, file: !10824, line: 633, type: !113)
!11017 = !DILocalVariable(name: "Alternate", arg: 3, scope: !11013, file: !10824, line: 633, type: !113)
!11018 = !DILocation(line: 0, scope: !11013)
!11019 = !DILocation(line: 635, column: 3, scope: !11013)
!11020 = !DILocation(line: 0, scope: !10769, inlinedAt: !11021)
!11021 = distinct !DILocation(line: 635, column: 3, scope: !11013)
!11022 = !DILocation(line: 380, column: 4, scope: !10769, inlinedAt: !11021)
!11023 = !DILocation(line: 0, scope: !10777, inlinedAt: !11024)
!11024 = distinct !DILocation(line: 635, column: 3, scope: !11013)
!11025 = !DILocation(line: 414, column: 7, scope: !10777, inlinedAt: !11024)
!11026 = !DILocation(line: 0, scope: !10769, inlinedAt: !11027)
!11027 = distinct !DILocation(line: 635, column: 3, scope: !11013)
!11028 = !DILocation(line: 0, scope: !10777, inlinedAt: !11029)
!11029 = distinct !DILocation(line: 635, column: 3, scope: !11013)
!11030 = !DILocation(line: 637, column: 1, scope: !11013)
!11031 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !10824, file: !10824, line: 273, type: !10950, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !11032)
!11032 = !{!11033, !11034, !11035}
!11033 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11031, file: !10824, line: 273, type: !1493)
!11034 = !DILocalVariable(name: "Pin", arg: 2, scope: !11031, file: !10824, line: 273, type: !113)
!11035 = !DILocalVariable(name: "Mode", arg: 3, scope: !11031, file: !10824, line: 273, type: !113)
!11036 = !DILocation(line: 0, scope: !11031)
!11037 = !DILocation(line: 275, column: 3, scope: !11031)
!11038 = !DILocation(line: 0, scope: !10769, inlinedAt: !11039)
!11039 = distinct !DILocation(line: 275, column: 3, scope: !11031)
!11040 = !DILocation(line: 380, column: 4, scope: !10769, inlinedAt: !11039)
!11041 = !DILocation(line: 0, scope: !10777, inlinedAt: !11042)
!11042 = distinct !DILocation(line: 275, column: 3, scope: !11031)
!11043 = !DILocation(line: 414, column: 7, scope: !10777, inlinedAt: !11042)
!11044 = !DILocation(line: 0, scope: !10769, inlinedAt: !11045)
!11045 = distinct !DILocation(line: 275, column: 3, scope: !11031)
!11046 = !DILocation(line: 0, scope: !10777, inlinedAt: !11047)
!11047 = distinct !DILocation(line: 275, column: 3, scope: !11031)
!11048 = !DILocation(line: 276, column: 1, scope: !11031)
!11049 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1562, file: !1562, line: 698, type: !1575, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !11050)
!11050 = !{!11051, !11052, !11053}
!11051 = !DILocalVariable(name: "dev", arg: 1, scope: !11049, file: !1562, line: 698, type: !1420)
!11052 = !DILocalVariable(name: "data", scope: !11049, file: !1562, line: 700, type: !10493)
!11053 = !DILocalVariable(name: "ret", scope: !11049, file: !1562, line: 701, type: !108)
!11054 = !DILocation(line: 0, scope: !11049)
!11055 = !DILocation(line: 700, column: 38, scope: !11049)
!11056 = !DILocation(line: 703, column: 8, scope: !11049)
!11057 = !DILocation(line: 703, column: 12, scope: !11049)
!11058 = !DILocation(line: 705, column: 7, scope: !11059)
!11059 = distinct !DILexicalBlock(scope: !11049, file: !1562, line: 705, column: 6)
!11060 = !DILocation(line: 705, column: 6, scope: !11049)
!11061 = !DILocation(line: 722, column: 8, scope: !11049)
!11062 = !DILocation(line: 723, column: 10, scope: !11063)
!11063 = distinct !DILexicalBlock(scope: !11049, file: !1562, line: 723, column: 6)
!11064 = !DILocation(line: 723, column: 6, scope: !11049)
!11065 = !DILocation(line: 731, column: 1, scope: !11049)
!11066 = distinct !DISubprogram(name: "device_is_ready", scope: !10273, file: !10273, line: 47, type: !11067, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !11069)
!11067 = !DISubroutineType(types: !11068)
!11068 = !{!422, !1420}
!11069 = !{!11070}
!11070 = !DILocalVariable(name: "dev", arg: 1, scope: !11066, file: !10273, line: 47, type: !1420)
!11071 = !DILocation(line: 0, scope: !11066)
!11072 = !DILocation(line: 55, column: 2, scope: !11073)
!11073 = distinct !DILexicalBlock(scope: !11066, file: !10273, line: 55, column: 2)
!11074 = !{i64 2155296146}
!11075 = !DILocation(line: 56, column: 9, scope: !11066)
!11076 = !DILocation(line: 56, column: 2, scope: !11066)
!11077 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1562, file: !1562, line: 270, type: !11078, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !11080)
!11078 = !DISubroutineType(types: !11079)
!11079 = !{!108, !1420, !422}
!11080 = !{!11081, !11082, !11083, !11084, !11085}
!11081 = !DILocalVariable(name: "dev", arg: 1, scope: !11077, file: !1562, line: 270, type: !1420)
!11082 = !DILocalVariable(name: "on", arg: 2, scope: !11077, file: !1562, line: 270, type: !422)
!11083 = !DILocalVariable(name: "cfg", scope: !11077, file: !1562, line: 272, type: !10426)
!11084 = !DILocalVariable(name: "ret", scope: !11077, file: !1562, line: 273, type: !108)
!11085 = !DILocalVariable(name: "clk", scope: !11077, file: !1562, line: 278, type: !10716)
!11086 = !DILocation(line: 0, scope: !11077)
!11087 = !DILocation(line: 272, column: 45, scope: !11077)
!11088 = !DILocation(line: 282, column: 38, scope: !11089)
!11089 = distinct !DILexicalBlock(scope: !11090, file: !1562, line: 280, column: 10)
!11090 = distinct !DILexicalBlock(scope: !11077, file: !1562, line: 280, column: 6)
!11091 = !DILocation(line: 282, column: 6, scope: !11089)
!11092 = !DILocation(line: 281, column: 9, scope: !11089)
!11093 = !DILocation(line: 293, column: 1, scope: !11077)
!11094 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !411, file: !411, line: 730, type: !11067, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !11095)
!11095 = !{!11096}
!11096 = !DILocalVariable(name: "dev", arg: 1, scope: !11094, file: !411, line: 730, type: !1420)
!11097 = !DILocation(line: 0, scope: !11094)
!11098 = !DILocation(line: 732, column: 9, scope: !11094)
!11099 = !DILocation(line: 732, column: 2, scope: !11094)
!11100 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1562, file: !1562, line: 496, type: !11101, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !11103)
!11101 = !DISubroutineType(types: !11102)
!11102 = !{!108, !1420, !108, !108, !108}
!11103 = !{!11104, !11105, !11106, !11107, !11108, !11109}
!11104 = !DILocalVariable(name: "dev", arg: 1, scope: !11100, file: !1562, line: 496, type: !1420)
!11105 = !DILocalVariable(name: "pin", arg: 2, scope: !11100, file: !1562, line: 496, type: !108)
!11106 = !DILocalVariable(name: "conf", arg: 3, scope: !11100, file: !1562, line: 496, type: !108)
!11107 = !DILocalVariable(name: "func", arg: 4, scope: !11100, file: !1562, line: 496, type: !108)
!11108 = !DILocalVariable(name: "ret", scope: !11100, file: !1562, line: 498, type: !108)
!11109 = !DILocalVariable(name: "gpio_out", scope: !11110, file: !1562, line: 508, type: !113)
!11110 = distinct !DILexicalBlock(scope: !11111, file: !1562, line: 507, column: 27)
!11111 = distinct !DILexicalBlock(scope: !11100, file: !1562, line: 507, column: 6)
!11112 = !DILocation(line: 0, scope: !11100)
!11113 = !DILocation(line: 505, column: 2, scope: !11100)
!11114 = !DILocation(line: 507, column: 11, scope: !11111)
!11115 = !DILocation(line: 507, column: 6, scope: !11100)
!11116 = !DILocation(line: 508, column: 28, scope: !11110)
!11117 = !DILocation(line: 0, scope: !11110)
!11118 = !DILocation(line: 510, column: 16, scope: !11119)
!11119 = distinct !DILexicalBlock(scope: !11110, file: !1562, line: 510, column: 7)
!11120 = !DILocation(line: 0, scope: !11119)
!11121 = !DILocation(line: 510, column: 7, scope: !11110)
!11122 = !DILocation(line: 511, column: 4, scope: !11123)
!11123 = distinct !DILexicalBlock(scope: !11119, file: !1562, line: 510, column: 32)
!11124 = !DILocation(line: 512, column: 3, scope: !11123)
!11125 = !DILocation(line: 513, column: 4, scope: !11126)
!11126 = distinct !DILexicalBlock(scope: !11127, file: !1562, line: 512, column: 39)
!11127 = distinct !DILexicalBlock(scope: !11119, file: !1562, line: 512, column: 14)
!11128 = !DILocation(line: 514, column: 3, scope: !11126)
!11129 = !DILocation(line: 518, column: 1, scope: !11100)
!11130 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1835, file: !1835, line: 526, type: !1738, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11131)
!11131 = !{!11132, !11133, !11134}
!11132 = !DILocalVariable(name: "dev", arg: 1, scope: !11130, file: !1835, line: 526, type: !1740)
!11133 = !DILocalVariable(name: "c", arg: 2, scope: !11130, file: !1835, line: 526, type: !1352)
!11134 = !DILocalVariable(name: "config", scope: !11130, file: !1835, line: 528, type: !11135)
!11135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1874, size: 32)
!11136 = !DILocation(line: 0, scope: !11130)
!11137 = !DILocation(line: 528, column: 48, scope: !11130)
!11138 = !DILocation(line: 531, column: 40, scope: !11139)
!11139 = distinct !DILexicalBlock(scope: !11130, file: !1835, line: 531, column: 6)
!11140 = !DILocation(line: 531, column: 6, scope: !11139)
!11141 = !DILocation(line: 531, column: 6, scope: !11130)
!11142 = !DILocation(line: 532, column: 34, scope: !11143)
!11143 = distinct !DILexicalBlock(scope: !11139, file: !1835, line: 531, column: 48)
!11144 = !DILocation(line: 532, column: 3, scope: !11143)
!11145 = !DILocation(line: 533, column: 2, scope: !11143)
!11146 = !DILocation(line: 539, column: 42, scope: !11147)
!11147 = distinct !DILexicalBlock(scope: !11130, file: !1835, line: 539, column: 6)
!11148 = !DILocation(line: 539, column: 7, scope: !11147)
!11149 = !DILocation(line: 539, column: 6, scope: !11130)
!11150 = !DILocation(line: 543, column: 52, scope: !11130)
!11151 = !DILocation(line: 543, column: 22, scope: !11130)
!11152 = !DILocation(line: 543, column: 5, scope: !11130)
!11153 = !DILocation(line: 545, column: 2, scope: !11130)
!11154 = !DILocation(line: 546, column: 1, scope: !11130)
!11155 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1835, file: !1835, line: 548, type: !1757, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11156)
!11156 = !{!11157, !11158, !11159, !11160}
!11157 = !DILocalVariable(name: "dev", arg: 1, scope: !11155, file: !1835, line: 548, type: !1740)
!11158 = !DILocalVariable(name: "c", arg: 2, scope: !11155, file: !1835, line: 549, type: !165)
!11159 = !DILocalVariable(name: "config", scope: !11155, file: !1835, line: 551, type: !11135)
!11160 = !DILocalVariable(name: "key", scope: !11155, file: !1835, line: 555, type: !32)
!11161 = !DILocation(line: 0, scope: !11155)
!11162 = !DILocation(line: 551, column: 48, scope: !11155)
!11163 = !DILocation(line: 562, column: 2, scope: !11155)
!11164 = !DILocation(line: 563, column: 41, scope: !11165)
!11165 = distinct !DILexicalBlock(scope: !11166, file: !1835, line: 563, column: 7)
!11166 = distinct !DILexicalBlock(scope: !11155, file: !1835, line: 562, column: 12)
!11167 = !DILocation(line: 563, column: 7, scope: !11165)
!11168 = !DILocation(line: 563, column: 7, scope: !11166)
!11169 = !DILocation(line: 55, column: 2, scope: !11170, inlinedAt: !11174)
!11170 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4146, file: !4146, line: 42, type: !4147, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11171)
!11171 = !{!11172, !11173}
!11172 = !DILocalVariable(name: "key", scope: !11170, file: !4146, line: 44, type: !32)
!11173 = !DILocalVariable(name: "tmp", scope: !11170, file: !4146, line: 53, type: !32)
!11174 = distinct !DILocation(line: 564, column: 10, scope: !11175)
!11175 = distinct !DILexicalBlock(scope: !11165, file: !1835, line: 563, column: 49)
!11176 = !{i64 2344836}
!11177 = !DILocation(line: 0, scope: !11170, inlinedAt: !11174)
!11178 = !DILocation(line: 565, column: 42, scope: !11179)
!11179 = distinct !DILexicalBlock(scope: !11175, file: !1835, line: 565, column: 8)
!11180 = !DILocation(line: 565, column: 8, scope: !11179)
!11181 = !DILocation(line: 565, column: 8, scope: !11175)
!11182 = !DILocalVariable(name: "key", arg: 1, scope: !11183, file: !4146, line: 84, type: !32)
!11183 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4146, file: !4146, line: 84, type: !4159, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11184)
!11184 = !{!11182}
!11185 = !DILocation(line: 0, scope: !11183, inlinedAt: !11186)
!11186 = distinct !DILocation(line: 568, column: 4, scope: !11175)
!11187 = !DILocation(line: 95, column: 2, scope: !11183, inlinedAt: !11186)
!11188 = !{i64 2345653}
!11189 = !DILocation(line: 569, column: 3, scope: !11175)
!11190 = distinct !{!11190, !11163, !11191}
!11191 = !DILocation(line: 570, column: 2, scope: !11155)
!11192 = !DILocation(line: 592, column: 33, scope: !11155)
!11193 = !DILocation(line: 592, column: 2, scope: !11155)
!11194 = !DILocation(line: 0, scope: !11183, inlinedAt: !11195)
!11195 = distinct !DILocation(line: 593, column: 2, scope: !11155)
!11196 = !DILocation(line: 95, column: 2, scope: !11183, inlinedAt: !11195)
!11197 = !DILocation(line: 594, column: 1, scope: !11155)
!11198 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1835, file: !1835, line: 596, type: !1761, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11199)
!11199 = !{!11200, !11201, !11202}
!11200 = !DILocalVariable(name: "dev", arg: 1, scope: !11198, file: !1835, line: 596, type: !1740)
!11201 = !DILocalVariable(name: "config", scope: !11198, file: !1835, line: 598, type: !11135)
!11202 = !DILocalVariable(name: "err", scope: !11198, file: !1835, line: 599, type: !113)
!11203 = !DILocation(line: 0, scope: !11198)
!11204 = !DILocation(line: 598, column: 48, scope: !11198)
!11205 = !DILocation(line: 606, column: 40, scope: !11206)
!11206 = distinct !DILexicalBlock(scope: !11198, file: !1835, line: 606, column: 6)
!11207 = !DILocation(line: 606, column: 6, scope: !11206)
!11208 = !DILocation(line: 606, column: 6, scope: !11198)
!11209 = !DILocation(line: 610, column: 39, scope: !11210)
!11210 = distinct !DILexicalBlock(scope: !11198, file: !1835, line: 610, column: 6)
!11211 = !DILocation(line: 610, column: 6, scope: !11210)
!11212 = !DILocation(line: 610, column: 6, scope: !11198)
!11213 = !DILocation(line: 614, column: 39, scope: !11214)
!11214 = distinct !DILexicalBlock(scope: !11198, file: !1835, line: 614, column: 6)
!11215 = !DILocation(line: 614, column: 6, scope: !11214)
!11216 = !DILocation(line: 614, column: 6, scope: !11198)
!11217 = !DILocation(line: 619, column: 40, scope: !11218)
!11218 = distinct !DILexicalBlock(scope: !11198, file: !1835, line: 619, column: 6)
!11219 = !DILocation(line: 619, column: 6, scope: !11218)
!11220 = !DILocation(line: 619, column: 6, scope: !11198)
!11221 = !DILocation(line: 623, column: 10, scope: !11222)
!11222 = distinct !DILexicalBlock(scope: !11198, file: !1835, line: 623, column: 6)
!11223 = !DILocation(line: 623, column: 6, scope: !11198)
!11224 = !DILocation(line: 624, column: 34, scope: !11225)
!11225 = distinct !DILexicalBlock(scope: !11222, file: !1835, line: 623, column: 24)
!11226 = !DILocation(line: 624, column: 3, scope: !11225)
!11227 = !DILocation(line: 625, column: 2, scope: !11225)
!11228 = !DILocation(line: 632, column: 10, scope: !11229)
!11229 = distinct !DILexicalBlock(scope: !11198, file: !1835, line: 632, column: 6)
!11230 = !DILocation(line: 632, column: 6, scope: !11198)
!11231 = !DILocation(line: 633, column: 34, scope: !11232)
!11232 = distinct !DILexicalBlock(scope: !11229, file: !1835, line: 632, column: 32)
!11233 = !DILocation(line: 633, column: 3, scope: !11232)
!11234 = !DILocation(line: 634, column: 2, scope: !11232)
!11235 = !DILocation(line: 636, column: 10, scope: !11236)
!11236 = distinct !DILexicalBlock(scope: !11198, file: !1835, line: 636, column: 6)
!11237 = !DILocation(line: 636, column: 6, scope: !11198)
!11238 = !DILocation(line: 637, column: 33, scope: !11239)
!11239 = distinct !DILexicalBlock(scope: !11236, file: !1835, line: 636, column: 31)
!11240 = !DILocation(line: 637, column: 3, scope: !11239)
!11241 = !DILocation(line: 638, column: 2, scope: !11239)
!11242 = !DILocation(line: 640, column: 10, scope: !11243)
!11243 = distinct !DILexicalBlock(scope: !11198, file: !1835, line: 640, column: 6)
!11244 = !DILocation(line: 640, column: 6, scope: !11198)
!11245 = !DILocation(line: 641, column: 33, scope: !11246)
!11246 = distinct !DILexicalBlock(scope: !11243, file: !1835, line: 640, column: 32)
!11247 = !DILocation(line: 641, column: 3, scope: !11246)
!11248 = !DILocation(line: 642, column: 2, scope: !11246)
!11249 = !DILocation(line: 646, column: 32, scope: !11198)
!11250 = !DILocation(line: 646, column: 2, scope: !11198)
!11251 = !DILocation(line: 648, column: 2, scope: !11198)
!11252 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1835, file: !1835, line: 419, type: !1765, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11253)
!11253 = !{!11254, !11255, !11256, !11257, !11259, !11260, !11261, !11262}
!11254 = !DILocalVariable(name: "dev", arg: 1, scope: !11252, file: !1835, line: 419, type: !1740)
!11255 = !DILocalVariable(name: "cfg", arg: 2, scope: !11252, file: !1835, line: 420, type: !1767)
!11256 = !DILocalVariable(name: "config", scope: !11252, file: !1835, line: 422, type: !11135)
!11257 = !DILocalVariable(name: "data", scope: !11252, file: !1835, line: 423, type: !11258)
!11258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1931, size: 32)
!11259 = !DILocalVariable(name: "parity", scope: !11252, file: !1835, line: 424, type: !7396)
!11260 = !DILocalVariable(name: "stopbits", scope: !11252, file: !1835, line: 425, type: !7396)
!11261 = !DILocalVariable(name: "databits", scope: !11252, file: !1835, line: 426, type: !7396)
!11262 = !DILocalVariable(name: "flowctrl", scope: !11252, file: !1835, line: 428, type: !7396)
!11263 = !DILocation(line: 0, scope: !11252)
!11264 = !DILocation(line: 422, column: 48, scope: !11252)
!11265 = !DILocation(line: 423, column: 38, scope: !11252)
!11266 = !DILocation(line: 424, column: 56, scope: !11252)
!11267 = !DILocation(line: 424, column: 51, scope: !11252)
!11268 = !DILocation(line: 424, column: 26, scope: !11252)
!11269 = !DILocation(line: 425, column: 60, scope: !11252)
!11270 = !DILocation(line: 425, column: 55, scope: !11252)
!11271 = !DILocation(line: 425, column: 28, scope: !11252)
!11272 = !DILocation(line: 426, column: 60, scope: !11252)
!11273 = !DILocation(line: 426, column: 55, scope: !11252)
!11274 = !DILocation(line: 426, column: 28, scope: !11252)
!11275 = !DILocation(line: 428, column: 58, scope: !11252)
!11276 = !DILocation(line: 428, column: 53, scope: !11252)
!11277 = !DILocation(line: 428, column: 28, scope: !11252)
!11278 = !DILocation(line: 431, column: 44, scope: !11279)
!11279 = distinct !DILexicalBlock(scope: !11252, file: !1835, line: 431, column: 6)
!11280 = !DILocation(line: 438, column: 22, scope: !11281)
!11281 = distinct !DILexicalBlock(scope: !11252, file: !1835, line: 437, column: 6)
!11282 = !DILocation(line: 437, column: 6, scope: !11252)
!11283 = !DILocation(line: 448, column: 6, scope: !11252)
!11284 = !DILocation(line: 465, column: 47, scope: !11285)
!11285 = distinct !DILexicalBlock(scope: !11252, file: !1835, line: 465, column: 6)
!11286 = !DILocation(line: 475, column: 21, scope: !11287)
!11287 = distinct !DILexicalBlock(scope: !11252, file: !1835, line: 475, column: 6)
!11288 = !DILocation(line: 475, column: 6, scope: !11252)
!11289 = !DILocation(line: 476, column: 8, scope: !11290)
!11290 = distinct !DILexicalBlock(scope: !11291, file: !1835, line: 476, column: 7)
!11291 = distinct !DILexicalBlock(scope: !11287, file: !1835, line: 475, column: 49)
!11292 = !DILocation(line: 477, column: 34, scope: !11290)
!11293 = !DILocation(line: 476, column: 7, scope: !11291)
!11294 = !DILocation(line: 482, column: 27, scope: !11252)
!11295 = !DILocation(line: 482, column: 2, scope: !11252)
!11296 = !DILocation(line: 484, column: 16, scope: !11297)
!11297 = distinct !DILexicalBlock(scope: !11252, file: !1835, line: 484, column: 6)
!11298 = !DILocation(line: 484, column: 13, scope: !11297)
!11299 = !DILocation(line: 484, column: 6, scope: !11252)
!11300 = !DILocation(line: 485, column: 3, scope: !11301)
!11301 = distinct !DILexicalBlock(scope: !11297, file: !1835, line: 484, column: 44)
!11302 = !DILocation(line: 486, column: 2, scope: !11301)
!11303 = !DILocation(line: 488, column: 18, scope: !11304)
!11304 = distinct !DILexicalBlock(scope: !11252, file: !1835, line: 488, column: 6)
!11305 = !DILocation(line: 488, column: 15, scope: !11304)
!11306 = !DILocation(line: 488, column: 6, scope: !11252)
!11307 = !DILocation(line: 489, column: 3, scope: !11308)
!11308 = distinct !DILexicalBlock(scope: !11304, file: !1835, line: 488, column: 48)
!11309 = !DILocation(line: 490, column: 2, scope: !11308)
!11310 = !DILocation(line: 492, column: 18, scope: !11311)
!11311 = distinct !DILexicalBlock(scope: !11252, file: !1835, line: 492, column: 6)
!11312 = !DILocation(line: 492, column: 15, scope: !11311)
!11313 = !DILocation(line: 492, column: 6, scope: !11252)
!11314 = !DILocation(line: 493, column: 3, scope: !11315)
!11315 = distinct !DILexicalBlock(scope: !11311, file: !1835, line: 492, column: 48)
!11316 = !DILocation(line: 494, column: 2, scope: !11315)
!11317 = !DILocation(line: 496, column: 18, scope: !11318)
!11318 = distinct !DILexicalBlock(scope: !11252, file: !1835, line: 496, column: 6)
!11319 = !DILocation(line: 496, column: 15, scope: !11318)
!11320 = !DILocation(line: 496, column: 6, scope: !11252)
!11321 = !DILocation(line: 497, column: 3, scope: !11322)
!11322 = distinct !DILexicalBlock(scope: !11318, file: !1835, line: 496, column: 46)
!11323 = !DILocation(line: 498, column: 2, scope: !11322)
!11324 = !DILocation(line: 500, column: 11, scope: !11325)
!11325 = distinct !DILexicalBlock(scope: !11252, file: !1835, line: 500, column: 6)
!11326 = !DILocation(line: 500, column: 29, scope: !11325)
!11327 = !DILocation(line: 500, column: 20, scope: !11325)
!11328 = !DILocation(line: 500, column: 6, scope: !11252)
!11329 = !DILocation(line: 501, column: 3, scope: !11330)
!11330 = distinct !DILexicalBlock(scope: !11325, file: !1835, line: 500, column: 40)
!11331 = !DILocation(line: 502, column: 26, scope: !11330)
!11332 = !DILocation(line: 502, column: 19, scope: !11330)
!11333 = !DILocation(line: 503, column: 2, scope: !11330)
!11334 = !DILocation(line: 505, column: 26, scope: !11252)
!11335 = !DILocation(line: 505, column: 2, scope: !11252)
!11336 = !DILocation(line: 506, column: 2, scope: !11252)
!11337 = !DILocation(line: 507, column: 1, scope: !11252)
!11338 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1835, file: !1835, line: 509, type: !1778, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11339)
!11339 = !{!11340, !11341, !11342}
!11340 = !DILocalVariable(name: "dev", arg: 1, scope: !11338, file: !1835, line: 509, type: !1740)
!11341 = !DILocalVariable(name: "cfg", arg: 2, scope: !11338, file: !1835, line: 510, type: !1780)
!11342 = !DILocalVariable(name: "data", scope: !11338, file: !1835, line: 512, type: !11258)
!11343 = !DILocation(line: 0, scope: !11338)
!11344 = !DILocation(line: 512, column: 38, scope: !11338)
!11345 = !DILocation(line: 514, column: 24, scope: !11338)
!11346 = !DILocation(line: 514, column: 7, scope: !11338)
!11347 = !DILocation(line: 514, column: 16, scope: !11338)
!11348 = !DILocation(line: 515, column: 41, scope: !11338)
!11349 = !{i32 0, i32 1537}
!11350 = !DILocation(line: 515, column: 16, scope: !11338)
!11351 = !DILocation(line: 515, column: 7, scope: !11338)
!11352 = !DILocation(line: 515, column: 14, scope: !11338)
!11353 = !DILocation(line: 517, column: 3, scope: !11338)
!11354 = !{i32 0, i32 12289}
!11355 = !DILocation(line: 516, column: 19, scope: !11338)
!11356 = !DILocation(line: 516, column: 7, scope: !11338)
!11357 = !DILocation(line: 516, column: 17, scope: !11338)
!11358 = !DILocation(line: 519, column: 3, scope: !11338)
!11359 = !DILocation(line: 519, column: 33, scope: !11338)
!11360 = !DILocation(line: 518, column: 19, scope: !11338)
!11361 = !DILocation(line: 518, column: 7, scope: !11338)
!11362 = !DILocation(line: 518, column: 17, scope: !11338)
!11363 = !DILocation(line: 521, column: 3, scope: !11338)
!11364 = !{i32 0, i32 769}
!11365 = !DILocation(line: 520, column: 19, scope: !11338)
!11366 = !DILocation(line: 520, column: 7, scope: !11338)
!11367 = !DILocation(line: 520, column: 17, scope: !11338)
!11368 = !DILocation(line: 522, column: 2, scope: !11338)
!11369 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1835, file: !1835, line: 205, type: !11370, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11372)
!11370 = !DISubroutineType(types: !11371)
!11371 = !{!113, !1740}
!11372 = !{!11373, !11374}
!11373 = !DILocalVariable(name: "dev", arg: 1, scope: !11369, file: !1835, line: 205, type: !1740)
!11374 = !DILocalVariable(name: "config", scope: !11369, file: !1835, line: 207, type: !11135)
!11375 = !DILocation(line: 0, scope: !11369)
!11376 = !DILocation(line: 207, column: 48, scope: !11369)
!11377 = !DILocation(line: 209, column: 36, scope: !11369)
!11378 = !DILocation(line: 209, column: 9, scope: !11369)
!11379 = !DILocation(line: 209, column: 2, scope: !11369)
!11380 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1835, file: !1835, line: 270, type: !11381, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11383)
!11381 = !DISubroutineType(types: !11382)
!11382 = !{!1706, !113}
!11383 = !{!11384}
!11384 = !DILocalVariable(name: "parity", arg: 1, scope: !11380, file: !1835, line: 270, type: !113)
!11385 = !DILocation(line: 0, scope: !11380)
!11386 = !DILocation(line: 272, column: 2, scope: !11380)
!11387 = !DILocation(line: 281, column: 1, scope: !11380)
!11388 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1835, file: !1835, line: 220, type: !11370, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11389)
!11389 = !{!11390, !11391}
!11390 = !DILocalVariable(name: "dev", arg: 1, scope: !11388, file: !1835, line: 220, type: !1740)
!11391 = !DILocalVariable(name: "config", scope: !11388, file: !1835, line: 222, type: !11135)
!11392 = !DILocation(line: 0, scope: !11388)
!11393 = !DILocation(line: 222, column: 48, scope: !11388)
!11394 = !DILocation(line: 224, column: 44, scope: !11388)
!11395 = !DILocation(line: 224, column: 9, scope: !11388)
!11396 = !DILocation(line: 224, column: 2, scope: !11388)
!11397 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1835, file: !1835, line: 304, type: !11398, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11400)
!11398 = !DISubroutineType(types: !11399)
!11399 = !{!1720, !113}
!11400 = !{!11401}
!11401 = !DILocalVariable(name: "sb", arg: 1, scope: !11397, file: !1835, line: 304, type: !113)
!11402 = !DILocation(line: 0, scope: !11397)
!11403 = !DILocation(line: 306, column: 2, scope: !11397)
!11404 = !DILocation(line: 0, scope: !11405)
!11405 = distinct !DILexicalBlock(scope: !11397, file: !1835, line: 306, column: 14)
!11406 = !DILocation(line: 323, column: 1, scope: !11397)
!11407 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1835, file: !1835, line: 235, type: !11370, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11408)
!11408 = !{!11409, !11410}
!11409 = !DILocalVariable(name: "dev", arg: 1, scope: !11407, file: !1835, line: 235, type: !1740)
!11410 = !DILocalVariable(name: "config", scope: !11407, file: !1835, line: 237, type: !11135)
!11411 = !DILocation(line: 0, scope: !11407)
!11412 = !DILocation(line: 237, column: 48, scope: !11407)
!11413 = !DILocation(line: 239, column: 39, scope: !11407)
!11414 = !DILocation(line: 239, column: 9, scope: !11407)
!11415 = !DILocation(line: 239, column: 2, scope: !11407)
!11416 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1835, file: !1835, line: 355, type: !11417, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11419)
!11417 = !DISubroutineType(types: !11418)
!11418 = !{!1713, !113, !113}
!11419 = !{!11420, !11421}
!11420 = !DILocalVariable(name: "db", arg: 1, scope: !11416, file: !1835, line: 355, type: !113)
!11421 = !DILocalVariable(name: "p", arg: 2, scope: !11416, file: !1835, line: 356, type: !113)
!11422 = !DILocation(line: 0, scope: !11416)
!11423 = !DILocation(line: 358, column: 2, scope: !11416)
!11424 = !DILocation(line: 384, column: 1, scope: !11416)
!11425 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1835, file: !1835, line: 250, type: !11370, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11426)
!11426 = !{!11427, !11428}
!11427 = !DILocalVariable(name: "dev", arg: 1, scope: !11425, file: !1835, line: 250, type: !1740)
!11428 = !DILocalVariable(name: "config", scope: !11425, file: !1835, line: 252, type: !11135)
!11429 = !DILocation(line: 0, scope: !11425)
!11430 = !DILocation(line: 252, column: 48, scope: !11425)
!11431 = !DILocation(line: 254, column: 40, scope: !11425)
!11432 = !DILocation(line: 254, column: 9, scope: !11425)
!11433 = !DILocation(line: 254, column: 2, scope: !11425)
!11434 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1835, file: !1835, line: 409, type: !11435, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11437)
!11435 = !DISubroutineType(types: !11436)
!11436 = !{!1726, !113}
!11437 = !{!11438}
!11438 = !DILocalVariable(name: "fc", arg: 1, scope: !11434, file: !1835, line: 409, type: !113)
!11439 = !DILocation(line: 0, scope: !11434)
!11440 = !DILocation(line: 411, column: 9, scope: !11441)
!11441 = distinct !DILexicalBlock(scope: !11434, file: !1835, line: 411, column: 6)
!11442 = !DILocation(line: 416, column: 1, scope: !11434)
!11443 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !11444, file: !11444, line: 967, type: !11445, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11447)
!11444 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11445 = !DISubroutineType(types: !11446)
!11446 = !{!113, !1781}
!11447 = !{!11448}
!11448 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11443, file: !11444, line: 967, type: !1781)
!11449 = !DILocation(line: 0, scope: !11443)
!11450 = !DILocation(line: 969, column: 21, scope: !11443)
!11451 = !DILocation(line: 969, column: 3, scope: !11443)
!11452 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !11444, file: !11444, line: 601, type: !11445, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11453)
!11453 = !{!11454}
!11454 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11452, file: !11444, line: 601, type: !1781)
!11455 = !DILocation(line: 0, scope: !11452)
!11456 = !DILocation(line: 603, column: 21, scope: !11452)
!11457 = !DILocation(line: 603, column: 3, scope: !11452)
!11458 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !11444, file: !11444, line: 820, type: !11445, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11459)
!11459 = !{!11460}
!11460 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11458, file: !11444, line: 820, type: !1781)
!11461 = !DILocation(line: 0, scope: !11458)
!11462 = !DILocation(line: 822, column: 21, scope: !11458)
!11463 = !DILocation(line: 822, column: 3, scope: !11458)
!11464 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !11444, file: !11444, line: 547, type: !11445, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11465)
!11465 = !{!11466}
!11466 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11464, file: !11444, line: 547, type: !1781)
!11467 = !DILocation(line: 0, scope: !11464)
!11468 = !DILocation(line: 549, column: 21, scope: !11464)
!11469 = !DILocation(line: 549, column: 3, scope: !11464)
!11470 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1835, file: !1835, line: 257, type: !11471, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11473)
!11471 = !DISubroutineType(types: !11472)
!11472 = !{!113, !1706}
!11473 = !{!11474}
!11474 = !DILocalVariable(name: "parity", arg: 1, scope: !11470, file: !1835, line: 257, type: !1706)
!11475 = !DILocation(line: 0, scope: !11470)
!11476 = !DILocation(line: 259, column: 2, scope: !11470)
!11477 = !DILocation(line: 268, column: 1, scope: !11470)
!11478 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1835, file: !1835, line: 283, type: !11479, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11481)
!11479 = !DISubroutineType(types: !11480)
!11480 = !{!113, !1720}
!11481 = !{!11482}
!11482 = !DILocalVariable(name: "sb", arg: 1, scope: !11478, file: !1835, line: 283, type: !1720)
!11483 = !DILocation(line: 0, scope: !11478)
!11484 = !DILocation(line: 285, column: 2, scope: !11478)
!11485 = !DILocation(line: 0, scope: !11486)
!11486 = distinct !DILexicalBlock(scope: !11478, file: !1835, line: 285, column: 14)
!11487 = !DILocation(line: 302, column: 1, scope: !11478)
!11488 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1835, file: !1835, line: 325, type: !11489, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11491)
!11489 = !DISubroutineType(types: !11490)
!11490 = !{!113, !1713, !1706}
!11491 = !{!11492, !11493}
!11492 = !DILocalVariable(name: "db", arg: 1, scope: !11488, file: !1835, line: 325, type: !1713)
!11493 = !DILocalVariable(name: "p", arg: 2, scope: !11488, file: !1835, line: 326, type: !1706)
!11494 = !DILocation(line: 0, scope: !11488)
!11495 = !DILocation(line: 328, column: 2, scope: !11488)
!11496 = !DILocation(line: 353, column: 1, scope: !11488)
!11497 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1835, file: !1835, line: 393, type: !11498, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11500)
!11498 = !DISubroutineType(types: !11499)
!11499 = !{!113, !1726}
!11500 = !{!11501}
!11501 = !DILocalVariable(name: "fc", arg: 1, scope: !11497, file: !1835, line: 393, type: !1726)
!11502 = !DILocation(line: 0, scope: !11497)
!11503 = !DILocation(line: 395, column: 9, scope: !11504)
!11504 = distinct !DILexicalBlock(scope: !11497, file: !1835, line: 395, column: 6)
!11505 = !DILocation(line: 400, column: 1, scope: !11497)
!11506 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !11444, file: !11444, line: 424, type: !11507, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11509)
!11507 = !DISubroutineType(types: !11508)
!11508 = !{null, !1781}
!11509 = !{!11510}
!11510 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11506, file: !11444, line: 424, type: !1781)
!11511 = !DILocation(line: 0, scope: !11506)
!11512 = !DILocation(line: 426, column: 3, scope: !11506)
!11513 = !DILocation(line: 427, column: 1, scope: !11506)
!11514 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1835, file: !1835, line: 197, type: !11515, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11517)
!11515 = !DISubroutineType(types: !11516)
!11516 = !{null, !1740, !113}
!11517 = !{!11518, !11519, !11520}
!11518 = !DILocalVariable(name: "dev", arg: 1, scope: !11514, file: !1835, line: 197, type: !1740)
!11519 = !DILocalVariable(name: "parity", arg: 2, scope: !11514, file: !1835, line: 198, type: !113)
!11520 = !DILocalVariable(name: "config", scope: !11514, file: !1835, line: 200, type: !11135)
!11521 = !DILocation(line: 0, scope: !11514)
!11522 = !DILocation(line: 200, column: 48, scope: !11514)
!11523 = !DILocation(line: 202, column: 29, scope: !11514)
!11524 = !DILocation(line: 202, column: 2, scope: !11514)
!11525 = !DILocation(line: 203, column: 1, scope: !11514)
!11526 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1835, file: !1835, line: 212, type: !11515, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11527)
!11527 = !{!11528, !11529, !11530}
!11528 = !DILocalVariable(name: "dev", arg: 1, scope: !11526, file: !1835, line: 212, type: !1740)
!11529 = !DILocalVariable(name: "stopbits", arg: 2, scope: !11526, file: !1835, line: 213, type: !113)
!11530 = !DILocalVariable(name: "config", scope: !11526, file: !1835, line: 215, type: !11135)
!11531 = !DILocation(line: 0, scope: !11526)
!11532 = !DILocation(line: 215, column: 48, scope: !11526)
!11533 = !DILocation(line: 217, column: 37, scope: !11526)
!11534 = !DILocation(line: 217, column: 2, scope: !11526)
!11535 = !DILocation(line: 218, column: 1, scope: !11526)
!11536 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1835, file: !1835, line: 227, type: !11515, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11537)
!11537 = !{!11538, !11539, !11540}
!11538 = !DILocalVariable(name: "dev", arg: 1, scope: !11536, file: !1835, line: 227, type: !1740)
!11539 = !DILocalVariable(name: "databits", arg: 2, scope: !11536, file: !1835, line: 228, type: !113)
!11540 = !DILocalVariable(name: "config", scope: !11536, file: !1835, line: 230, type: !11135)
!11541 = !DILocation(line: 0, scope: !11536)
!11542 = !DILocation(line: 230, column: 48, scope: !11536)
!11543 = !DILocation(line: 232, column: 32, scope: !11536)
!11544 = !DILocation(line: 232, column: 2, scope: !11536)
!11545 = !DILocation(line: 233, column: 1, scope: !11536)
!11546 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1835, file: !1835, line: 242, type: !11515, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11547)
!11547 = !{!11548, !11549, !11550}
!11548 = !DILocalVariable(name: "dev", arg: 1, scope: !11546, file: !1835, line: 242, type: !1740)
!11549 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !11546, file: !1835, line: 243, type: !113)
!11550 = !DILocalVariable(name: "config", scope: !11546, file: !1835, line: 245, type: !11135)
!11551 = !DILocation(line: 0, scope: !11546)
!11552 = !DILocation(line: 245, column: 48, scope: !11546)
!11553 = !DILocation(line: 247, column: 33, scope: !11546)
!11554 = !DILocation(line: 247, column: 2, scope: !11546)
!11555 = !DILocation(line: 248, column: 1, scope: !11546)
!11556 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1835, file: !1835, line: 107, type: !11515, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11557)
!11557 = !{!11558, !11559, !11560, !11561, !11562}
!11558 = !DILocalVariable(name: "dev", arg: 1, scope: !11556, file: !1835, line: 107, type: !1740)
!11559 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !11556, file: !1835, line: 107, type: !113)
!11560 = !DILocalVariable(name: "config", scope: !11556, file: !1835, line: 109, type: !11135)
!11561 = !DILocalVariable(name: "data", scope: !11556, file: !1835, line: 110, type: !11258)
!11562 = !DILocalVariable(name: "clock_rate", scope: !11556, file: !1835, line: 112, type: !113)
!11563 = !DILocation(line: 0, scope: !11556)
!11564 = !DILocation(line: 109, column: 48, scope: !11556)
!11565 = !DILocation(line: 110, column: 38, scope: !11556)
!11566 = !DILocation(line: 112, column: 2, scope: !11556)
!11567 = !DILocation(line: 123, column: 36, scope: !11568)
!11568 = distinct !DILexicalBlock(scope: !11569, file: !1835, line: 123, column: 7)
!11569 = distinct !DILexicalBlock(scope: !11570, file: !1835, line: 122, column: 9)
!11570 = distinct !DILexicalBlock(scope: !11556, file: !1835, line: 115, column: 6)
!11571 = !DILocation(line: 124, column: 42, scope: !11568)
!11572 = !DILocation(line: 123, column: 7, scope: !11568)
!11573 = !DILocation(line: 125, column: 22, scope: !11568)
!11574 = !DILocation(line: 123, column: 7, scope: !11569)
!11575 = !DILocation(line: 126, column: 4, scope: !11576)
!11576 = distinct !DILexicalBlock(scope: !11577, file: !1835, line: 126, column: 4)
!11577 = distinct !DILexicalBlock(scope: !11578, file: !1835, line: 126, column: 4)
!11578 = distinct !DILexicalBlock(scope: !11579, file: !1835, line: 126, column: 4)
!11579 = distinct !DILexicalBlock(scope: !11580, file: !1835, line: 126, column: 4)
!11580 = distinct !DILexicalBlock(scope: !11568, file: !1835, line: 125, column: 27)
!11581 = !DILocation(line: 127, column: 4, scope: !11580)
!11582 = !DILocation(line: 176, column: 36, scope: !11556)
!11583 = !DILocation(line: 176, column: 3, scope: !11556)
!11584 = !DILocation(line: 179, column: 32, scope: !11556)
!11585 = !DILocation(line: 180, column: 10, scope: !11556)
!11586 = !DILocation(line: 179, column: 3, scope: !11556)
!11587 = !DILocation(line: 195, column: 1, scope: !11556)
!11588 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !11444, file: !11444, line: 410, type: !11507, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11589)
!11589 = !{!11590}
!11590 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11588, file: !11444, line: 410, type: !1781)
!11591 = !DILocation(line: 0, scope: !11588)
!11592 = !DILocation(line: 412, column: 3, scope: !11588)
!11593 = !DILocation(line: 413, column: 1, scope: !11588)
!11594 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !1195, file: !1195, line: 216, type: !1814, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11595)
!11595 = !{!11596, !11597, !11598, !11599}
!11596 = !DILocalVariable(name: "dev", arg: 1, scope: !11594, file: !1195, line: 216, type: !1740)
!11597 = !DILocalVariable(name: "sys", arg: 2, scope: !11594, file: !1195, line: 217, type: !1291)
!11598 = !DILocalVariable(name: "rate", arg: 3, scope: !11594, file: !1195, line: 218, type: !1247)
!11599 = !DILocalVariable(name: "api", scope: !11594, file: !1195, line: 220, type: !1792)
!11600 = !DILocation(line: 0, scope: !11594)
!11601 = !DILocation(line: 221, column: 49, scope: !11594)
!11602 = !DILocation(line: 223, column: 11, scope: !11603)
!11603 = distinct !DILexicalBlock(scope: !11594, file: !1195, line: 223, column: 6)
!11604 = !DILocation(line: 223, column: 20, scope: !11603)
!11605 = !DILocation(line: 223, column: 6, scope: !11594)
!11606 = !DILocation(line: 227, column: 9, scope: !11594)
!11607 = !DILocation(line: 227, column: 2, scope: !11594)
!11608 = !DILocation(line: 228, column: 1, scope: !11594)
!11609 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3758, file: !3758, line: 175, type: !3759, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11610)
!11610 = !{!11611}
!11611 = !DILocalVariable(name: "level", arg: 1, scope: !11609, file: !3758, line: 175, type: !108)
!11612 = !DILocation(line: 0, scope: !11609)
!11613 = !DILocation(line: 177, column: 2, scope: !11609)
!11614 = !DILocation(line: 189, column: 1, scope: !11609)
!11615 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !11444, file: !11444, line: 615, type: !11616, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11618)
!11616 = !DISubroutineType(types: !11617)
!11617 = !{null, !1781, !113}
!11618 = !{!11619, !11620}
!11619 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11615, file: !11444, line: 615, type: !1781)
!11620 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !11615, file: !11444, line: 615, type: !113)
!11621 = !DILocation(line: 0, scope: !11615)
!11622 = !DILocation(line: 617, column: 3, scope: !11615)
!11623 = !DILocation(line: 618, column: 1, scope: !11615)
!11624 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !11444, file: !11444, line: 1020, type: !11625, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11627)
!11625 = !DISubroutineType(types: !11626)
!11626 = !{null, !1781, !113, !113, !113}
!11627 = !{!11628, !11629, !11630, !11631}
!11628 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11624, file: !11444, line: 1020, type: !1781)
!11629 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !11624, file: !11444, line: 1020, type: !113)
!11630 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !11624, file: !11444, line: 1020, type: !113)
!11631 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !11624, file: !11444, line: 1021, type: !113)
!11632 = !DILocation(line: 0, scope: !11624)
!11633 = !DILocation(line: 1029, column: 30, scope: !11634)
!11634 = distinct !DILexicalBlock(scope: !11635, file: !11444, line: 1028, column: 3)
!11635 = distinct !DILexicalBlock(scope: !11624, file: !11444, line: 1023, column: 7)
!11636 = !DILocation(line: 1029, column: 19, scope: !11634)
!11637 = !DILocation(line: 1029, column: 13, scope: !11634)
!11638 = !DILocation(line: 1029, column: 17, scope: !11634)
!11639 = !DILocation(line: 1031, column: 1, scope: !11624)
!11640 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !11444, file: !11444, line: 949, type: !11616, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11641)
!11641 = !{!11642, !11643}
!11642 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11640, file: !11444, line: 949, type: !1781)
!11643 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !11640, file: !11444, line: 949, type: !113)
!11644 = !DILocation(line: 0, scope: !11640)
!11645 = !DILocation(line: 951, column: 3, scope: !11640)
!11646 = !DILocation(line: 952, column: 1, scope: !11640)
!11647 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !11444, file: !11444, line: 588, type: !11616, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11648)
!11648 = !{!11649, !11650}
!11649 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11647, file: !11444, line: 588, type: !1781)
!11650 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11647, file: !11444, line: 588, type: !113)
!11651 = !DILocation(line: 0, scope: !11647)
!11652 = !DILocation(line: 590, column: 3, scope: !11647)
!11653 = !DILocation(line: 591, column: 1, scope: !11647)
!11654 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !11444, file: !11444, line: 805, type: !11616, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11655)
!11655 = !{!11656, !11657}
!11656 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11654, file: !11444, line: 805, type: !1781)
!11657 = !DILocalVariable(name: "StopBits", arg: 2, scope: !11654, file: !11444, line: 805, type: !113)
!11658 = !DILocation(line: 0, scope: !11654)
!11659 = !DILocation(line: 807, column: 3, scope: !11654)
!11660 = !DILocation(line: 808, column: 1, scope: !11654)
!11661 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !11444, file: !11444, line: 532, type: !11616, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11662)
!11662 = !{!11663, !11664}
!11663 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11661, file: !11444, line: 532, type: !1781)
!11664 = !DILocalVariable(name: "Parity", arg: 2, scope: !11661, file: !11444, line: 532, type: !113)
!11665 = !DILocation(line: 0, scope: !11661)
!11666 = !DILocation(line: 534, column: 3, scope: !11661)
!11667 = !DILocation(line: 535, column: 1, scope: !11661)
!11668 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !11444, file: !11444, line: 1770, type: !11445, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11669)
!11669 = !{!11670}
!11670 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11668, file: !11444, line: 1770, type: !1781)
!11671 = !DILocation(line: 0, scope: !11668)
!11672 = !DILocation(line: 1772, column: 11, scope: !11668)
!11673 = !DILocation(line: 1772, column: 46, scope: !11668)
!11674 = !DILocation(line: 1772, column: 3, scope: !11668)
!11675 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !11444, file: !11444, line: 1737, type: !11445, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11676)
!11676 = !{!11677}
!11677 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11675, file: !11444, line: 1737, type: !1781)
!11678 = !DILocation(line: 0, scope: !11675)
!11679 = !DILocation(line: 1739, column: 11, scope: !11675)
!11680 = !DILocation(line: 1739, column: 3, scope: !11675)
!11681 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !11444, file: !11444, line: 1748, type: !11445, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11682)
!11682 = !{!11683}
!11683 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11681, file: !11444, line: 1748, type: !1781)
!11684 = !DILocation(line: 0, scope: !11681)
!11685 = !DILocation(line: 1750, column: 11, scope: !11681)
!11686 = !DILocation(line: 1750, column: 45, scope: !11681)
!11687 = !DILocation(line: 1750, column: 3, scope: !11681)
!11688 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !11444, file: !11444, line: 1827, type: !11445, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11689)
!11689 = !{!11690}
!11690 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11688, file: !11444, line: 1827, type: !1781)
!11691 = !DILocation(line: 0, scope: !11688)
!11692 = !DILocation(line: 1829, column: 11, scope: !11688)
!11693 = !DILocation(line: 1829, column: 46, scope: !11688)
!11694 = !DILocation(line: 1829, column: 3, scope: !11688)
!11695 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !11444, file: !11444, line: 1992, type: !11507, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11696)
!11696 = !{!11697}
!11697 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11695, file: !11444, line: 1992, type: !1781)
!11698 = !DILocation(line: 0, scope: !11695)
!11699 = !DILocation(line: 1994, column: 3, scope: !11695)
!11700 = !DILocation(line: 1995, column: 1, scope: !11695)
!11701 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !11444, file: !11444, line: 1934, type: !11507, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11702)
!11702 = !{!11703, !11704}
!11703 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11701, file: !11444, line: 1934, type: !1781)
!11704 = !DILocalVariable(name: "tmpreg", scope: !11701, file: !11444, line: 1936, type: !576)
!11705 = !DILocation(line: 0, scope: !11701)
!11706 = !DILocation(line: 1936, column: 3, scope: !11701)
!11707 = !DILocation(line: 1936, column: 17, scope: !11701)
!11708 = !DILocation(line: 1937, column: 20, scope: !11701)
!11709 = !DILocation(line: 1937, column: 10, scope: !11701)
!11710 = !DILocation(line: 1938, column: 10, scope: !11701)
!11711 = !DILocation(line: 1939, column: 20, scope: !11701)
!11712 = !DILocation(line: 1939, column: 10, scope: !11701)
!11713 = !DILocation(line: 1940, column: 10, scope: !11701)
!11714 = !DILocation(line: 1941, column: 1, scope: !11701)
!11715 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !11444, file: !11444, line: 1877, type: !11507, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11716)
!11716 = !{!11717, !11718}
!11717 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11715, file: !11444, line: 1877, type: !1781)
!11718 = !DILocalVariable(name: "tmpreg", scope: !11715, file: !11444, line: 1879, type: !576)
!11719 = !DILocation(line: 0, scope: !11715)
!11720 = !DILocation(line: 1879, column: 3, scope: !11715)
!11721 = !DILocation(line: 1879, column: 17, scope: !11715)
!11722 = !DILocation(line: 1880, column: 20, scope: !11715)
!11723 = !DILocation(line: 1880, column: 10, scope: !11715)
!11724 = !DILocation(line: 1881, column: 10, scope: !11715)
!11725 = !DILocation(line: 1882, column: 20, scope: !11715)
!11726 = !DILocation(line: 1882, column: 10, scope: !11715)
!11727 = !DILocation(line: 1883, column: 10, scope: !11715)
!11728 = !DILocation(line: 1884, column: 1, scope: !11715)
!11729 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !11444, file: !11444, line: 1896, type: !11507, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11730)
!11730 = !{!11731, !11732}
!11731 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11729, file: !11444, line: 1896, type: !1781)
!11732 = !DILocalVariable(name: "tmpreg", scope: !11729, file: !11444, line: 1898, type: !576)
!11733 = !DILocation(line: 0, scope: !11729)
!11734 = !DILocation(line: 1898, column: 3, scope: !11729)
!11735 = !DILocation(line: 1898, column: 17, scope: !11729)
!11736 = !DILocation(line: 1899, column: 20, scope: !11729)
!11737 = !DILocation(line: 1899, column: 10, scope: !11729)
!11738 = !DILocation(line: 1900, column: 10, scope: !11729)
!11739 = !DILocation(line: 1901, column: 20, scope: !11729)
!11740 = !DILocation(line: 1901, column: 10, scope: !11729)
!11741 = !DILocation(line: 1902, column: 10, scope: !11729)
!11742 = !DILocation(line: 1903, column: 1, scope: !11729)
!11743 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !11444, file: !11444, line: 1915, type: !11507, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11744)
!11744 = !{!11745, !11746}
!11745 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11743, file: !11444, line: 1915, type: !1781)
!11746 = !DILocalVariable(name: "tmpreg", scope: !11743, file: !11444, line: 1917, type: !576)
!11747 = !DILocation(line: 0, scope: !11743)
!11748 = !DILocation(line: 1917, column: 3, scope: !11743)
!11749 = !DILocation(line: 1917, column: 17, scope: !11743)
!11750 = !DILocation(line: 1918, column: 20, scope: !11743)
!11751 = !DILocation(line: 1918, column: 10, scope: !11743)
!11752 = !DILocation(line: 1919, column: 10, scope: !11743)
!11753 = !DILocation(line: 1920, column: 20, scope: !11743)
!11754 = !DILocation(line: 1920, column: 10, scope: !11743)
!11755 = !DILocation(line: 1921, column: 10, scope: !11743)
!11756 = !DILocation(line: 1922, column: 1, scope: !11743)
!11757 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !11444, file: !11444, line: 1814, type: !11445, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11758)
!11758 = !{!11759}
!11759 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11757, file: !11444, line: 1814, type: !1781)
!11760 = !DILocation(line: 0, scope: !11757)
!11761 = !DILocation(line: 1816, column: 11, scope: !11757)
!11762 = !DILocation(line: 1816, column: 46, scope: !11757)
!11763 = !DILocation(line: 1816, column: 3, scope: !11757)
!11764 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !11444, file: !11444, line: 2426, type: !11765, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11767)
!11765 = !DISubroutineType(types: !11766)
!11766 = !{null, !1781, !164}
!11767 = !{!11768, !11769}
!11768 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11764, file: !11444, line: 2426, type: !1781)
!11769 = !DILocalVariable(name: "Value", arg: 2, scope: !11764, file: !11444, line: 2426, type: !164)
!11770 = !DILocation(line: 0, scope: !11764)
!11771 = !DILocation(line: 2428, column: 16, scope: !11764)
!11772 = !DILocation(line: 2428, column: 11, scope: !11764)
!11773 = !DILocation(line: 2428, column: 14, scope: !11764)
!11774 = !DILocation(line: 2429, column: 1, scope: !11764)
!11775 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !11444, file: !11444, line: 1792, type: !11445, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11776)
!11776 = !{!11777}
!11777 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11775, file: !11444, line: 1792, type: !1781)
!11778 = !DILocation(line: 0, scope: !11775)
!11779 = !DILocation(line: 1794, column: 11, scope: !11775)
!11780 = !DILocation(line: 1794, column: 47, scope: !11775)
!11781 = !DILocation(line: 1794, column: 3, scope: !11775)
!11782 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !11444, file: !11444, line: 2403, type: !11783, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11785)
!11783 = !DISubroutineType(types: !11784)
!11784 = !{!164, !1781}
!11785 = !{!11786}
!11786 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11782, file: !11444, line: 2403, type: !1781)
!11787 = !DILocation(line: 0, scope: !11782)
!11788 = !DILocation(line: 2405, column: 20, scope: !11782)
!11789 = !DILocation(line: 2405, column: 10, scope: !11782)
!11790 = !DILocation(line: 2405, column: 3, scope: !11782)
!11791 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1835, file: !1835, line: 1583, type: !1761, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11792)
!11792 = !{!11793, !11794, !11795, !11796, !11797, !11798}
!11793 = !DILocalVariable(name: "dev", arg: 1, scope: !11791, file: !1835, line: 1583, type: !1740)
!11794 = !DILocalVariable(name: "config", scope: !11791, file: !1835, line: 1585, type: !11135)
!11795 = !DILocalVariable(name: "data", scope: !11791, file: !1835, line: 1586, type: !11258)
!11796 = !DILocalVariable(name: "ll_parity", scope: !11791, file: !1835, line: 1587, type: !113)
!11797 = !DILocalVariable(name: "ll_datawidth", scope: !11791, file: !1835, line: 1588, type: !113)
!11798 = !DILocalVariable(name: "err", scope: !11791, file: !1835, line: 1589, type: !108)
!11799 = !DILocation(line: 0, scope: !11791)
!11800 = !DILocation(line: 1585, column: 48, scope: !11791)
!11801 = !DILocation(line: 1586, column: 38, scope: !11791)
!11802 = !DILocation(line: 1591, column: 2, scope: !11791)
!11803 = !DILocation(line: 1593, column: 29, scope: !11804)
!11804 = distinct !DILexicalBlock(scope: !11791, file: !1835, line: 1593, column: 6)
!11805 = !DILocation(line: 1593, column: 7, scope: !11804)
!11806 = !DILocation(line: 1593, column: 6, scope: !11791)
!11807 = !DILocation(line: 1594, column: 3, scope: !11808)
!11808 = distinct !DILexicalBlock(scope: !11809, file: !1835, line: 1594, column: 3)
!11809 = distinct !DILexicalBlock(scope: !11810, file: !1835, line: 1594, column: 3)
!11810 = distinct !DILexicalBlock(scope: !11811, file: !1835, line: 1594, column: 3)
!11811 = distinct !DILexicalBlock(scope: !11812, file: !1835, line: 1594, column: 3)
!11812 = distinct !DILexicalBlock(scope: !11804, file: !1835, line: 1593, column: 37)
!11813 = !DILocation(line: 1595, column: 3, scope: !11812)
!11814 = !DILocation(line: 1599, column: 31, scope: !11791)
!11815 = !DILocation(line: 1599, column: 71, scope: !11791)
!11816 = !DILocation(line: 1599, column: 8, scope: !11791)
!11817 = !DILocation(line: 1600, column: 10, scope: !11818)
!11818 = distinct !DILexicalBlock(scope: !11791, file: !1835, line: 1600, column: 6)
!11819 = !DILocation(line: 1600, column: 6, scope: !11791)
!11820 = !DILocation(line: 1601, column: 3, scope: !11821)
!11821 = distinct !DILexicalBlock(scope: !11822, file: !1835, line: 1601, column: 3)
!11822 = distinct !DILexicalBlock(scope: !11823, file: !1835, line: 1601, column: 3)
!11823 = distinct !DILexicalBlock(scope: !11824, file: !1835, line: 1601, column: 3)
!11824 = distinct !DILexicalBlock(scope: !11825, file: !1835, line: 1601, column: 3)
!11825 = distinct !DILexicalBlock(scope: !11818, file: !1835, line: 1600, column: 16)
!11826 = !DILocation(line: 1602, column: 3, scope: !11825)
!11827 = !DILocation(line: 1616, column: 36, scope: !11791)
!11828 = !DILocation(line: 1616, column: 8, scope: !11791)
!11829 = !DILocation(line: 1617, column: 10, scope: !11830)
!11830 = distinct !DILexicalBlock(scope: !11791, file: !1835, line: 1617, column: 6)
!11831 = !DILocation(line: 1617, column: 6, scope: !11791)
!11832 = !DILocation(line: 1621, column: 27, scope: !11791)
!11833 = !DILocation(line: 1621, column: 2, scope: !11791)
!11834 = !DILocation(line: 1624, column: 40, scope: !11791)
!11835 = !DILocation(line: 1624, column: 2, scope: !11791)
!11836 = !DILocation(line: 1630, column: 14, scope: !11837)
!11837 = distinct !DILexicalBlock(scope: !11791, file: !1835, line: 1630, column: 6)
!11838 = !DILocation(line: 1630, column: 6, scope: !11791)
!11839 = !DILocation(line: 1640, column: 4, scope: !11840)
!11840 = distinct !DILexicalBlock(scope: !11841, file: !1835, line: 1640, column: 4)
!11841 = distinct !DILexicalBlock(scope: !11842, file: !1835, line: 1640, column: 4)
!11842 = distinct !DILexicalBlock(scope: !11843, file: !1835, line: 1640, column: 4)
!11843 = distinct !DILexicalBlock(scope: !11844, file: !1835, line: 1640, column: 4)
!11844 = distinct !DILexicalBlock(scope: !11845, file: !1835, line: 1639, column: 28)
!11845 = distinct !DILexicalBlock(scope: !11846, file: !1835, line: 1639, column: 7)
!11846 = distinct !DILexicalBlock(scope: !11847, file: !1835, line: 1638, column: 9)
!11847 = distinct !DILexicalBlock(scope: !11837, file: !1835, line: 1634, column: 13)
!11848 = !DILocation(line: 0, scope: !11837)
!11849 = !DILocation(line: 1649, column: 35, scope: !11791)
!11850 = !DILocation(line: 1649, column: 2, scope: !11791)
!11851 = !DILocation(line: 1654, column: 14, scope: !11852)
!11852 = distinct !DILexicalBlock(scope: !11791, file: !1835, line: 1654, column: 6)
!11853 = !DILocation(line: 1654, column: 6, scope: !11791)
!11854 = !DILocation(line: 1655, column: 3, scope: !11855)
!11855 = distinct !DILexicalBlock(scope: !11852, file: !1835, line: 1654, column: 31)
!11856 = !DILocation(line: 1656, column: 2, scope: !11855)
!11857 = !DILocation(line: 1659, column: 37, scope: !11791)
!11858 = !DILocation(line: 1659, column: 2, scope: !11791)
!11859 = !DILocation(line: 1662, column: 14, scope: !11860)
!11860 = distinct !DILexicalBlock(scope: !11791, file: !1835, line: 1662, column: 6)
!11861 = !DILocation(line: 1662, column: 6, scope: !11791)
!11862 = !DILocation(line: 1663, column: 37, scope: !11863)
!11863 = distinct !DILexicalBlock(scope: !11860, file: !1835, line: 1662, column: 27)
!11864 = !DILocation(line: 1663, column: 3, scope: !11863)
!11865 = !DILocation(line: 1664, column: 2, scope: !11863)
!11866 = !DILocation(line: 1684, column: 26, scope: !11791)
!11867 = !DILocation(line: 1684, column: 2, scope: !11791)
!11868 = !DILocation(line: 1722, column: 2, scope: !11791)
!11869 = !DILocation(line: 1724, column: 1, scope: !11791)
!11870 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1835, file: !1835, line: 651, type: !11871, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11873)
!11871 = !DISubroutineType(types: !11872)
!11872 = !{null, !1740}
!11873 = !{!11874, !11875, !11876}
!11874 = !DILocalVariable(name: "dev", arg: 1, scope: !11870, file: !1835, line: 651, type: !1740)
!11875 = !DILocalVariable(name: "data", scope: !11870, file: !1835, line: 653, type: !11258)
!11876 = !DILocalVariable(name: "clk", scope: !11870, file: !1835, line: 654, type: !11877)
!11877 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1740)
!11878 = !DILocation(line: 0, scope: !11870)
!11879 = !DILocation(line: 653, column: 38, scope: !11870)
!11880 = !DILocation(line: 656, column: 8, scope: !11870)
!11881 = !DILocation(line: 656, column: 14, scope: !11870)
!11882 = !DILocation(line: 657, column: 1, scope: !11870)
!11883 = distinct !DISubprogram(name: "device_is_ready", scope: !10273, file: !10273, line: 47, type: !11884, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11886)
!11884 = !DISubroutineType(types: !11885)
!11885 = !{!422, !1740}
!11886 = !{!11887}
!11887 = !DILocalVariable(name: "dev", arg: 1, scope: !11883, file: !10273, line: 47, type: !1740)
!11888 = !DILocation(line: 0, scope: !11883)
!11889 = !DILocation(line: 55, column: 2, scope: !11890)
!11890 = distinct !DILexicalBlock(scope: !11883, file: !10273, line: 55, column: 2)
!11891 = !{i64 2155387309}
!11892 = !DILocation(line: 56, column: 9, scope: !11883)
!11893 = !DILocation(line: 56, column: 2, scope: !11883)
!11894 = distinct !DISubprogram(name: "clock_control_on", scope: !1195, file: !1195, line: 123, type: !1799, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11895)
!11895 = !{!11896, !11897, !11898}
!11896 = !DILocalVariable(name: "dev", arg: 1, scope: !11894, file: !1195, line: 123, type: !1740)
!11897 = !DILocalVariable(name: "sys", arg: 2, scope: !11894, file: !1195, line: 124, type: !1291)
!11898 = !DILocalVariable(name: "api", scope: !11894, file: !1195, line: 126, type: !1792)
!11899 = !DILocation(line: 0, scope: !11894)
!11900 = !DILocation(line: 127, column: 49, scope: !11894)
!11901 = !DILocation(line: 129, column: 14, scope: !11894)
!11902 = !DILocation(line: 129, column: 9, scope: !11894)
!11903 = !DILocation(line: 129, column: 2, scope: !11894)
!11904 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1897, file: !1897, line: 342, type: !11905, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11907)
!11905 = !DISubroutineType(types: !11906)
!11906 = !{!108, !1894, !164}
!11907 = !{!11908, !11909, !11910, !11911}
!11908 = !DILocalVariable(name: "config", arg: 1, scope: !11904, file: !1897, line: 342, type: !1894)
!11909 = !DILocalVariable(name: "id", arg: 2, scope: !11904, file: !1897, line: 343, type: !164)
!11910 = !DILocalVariable(name: "ret", scope: !11904, file: !1897, line: 345, type: !108)
!11911 = !DILocalVariable(name: "state", scope: !11904, file: !1897, line: 346, type: !1900)
!11912 = !DILocation(line: 0, scope: !11904)
!11913 = !DILocation(line: 346, column: 2, scope: !11904)
!11914 = !DILocation(line: 348, column: 8, scope: !11904)
!11915 = !DILocation(line: 349, column: 10, scope: !11916)
!11916 = distinct !DILexicalBlock(scope: !11904, file: !1897, line: 349, column: 6)
!11917 = !DILocation(line: 349, column: 6, scope: !11904)
!11918 = !DILocation(line: 353, column: 44, scope: !11904)
!11919 = !DILocation(line: 353, column: 9, scope: !11904)
!11920 = !DILocation(line: 353, column: 2, scope: !11904)
!11921 = !DILocation(line: 354, column: 1, scope: !11904)
!11922 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !11444, file: !11444, line: 497, type: !11616, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11923)
!11923 = !{!11924, !11925, !11926}
!11924 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11922, file: !11444, line: 497, type: !1781)
!11925 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !11922, file: !11444, line: 497, type: !113)
!11926 = !DILocalVariable(name: "val", scope: !11927, file: !11444, line: 499, type: !113)
!11927 = distinct !DILexicalBlock(scope: !11922, file: !11444, line: 499, column: 3)
!11928 = !DILocation(line: 0, scope: !11922)
!11929 = !DILocation(line: 499, column: 3, scope: !11927)
!11930 = !DILocalVariable(name: "addr", arg: 1, scope: !11931, file: !7128, line: 476, type: !1831)
!11931 = distinct !DISubprogram(name: "__LDREXW", scope: !7128, file: !7128, line: 476, type: !11932, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11934)
!11932 = !DISubroutineType(types: !11933)
!11933 = !{!113, !1831}
!11934 = !{!11930, !11935}
!11935 = !DILocalVariable(name: "result", scope: !11931, file: !7128, line: 478, type: !113)
!11936 = !DILocation(line: 0, scope: !11931, inlinedAt: !11937)
!11937 = distinct !DILocation(line: 499, column: 3, scope: !11938)
!11938 = distinct !DILexicalBlock(scope: !11927, file: !11444, line: 499, column: 3)
!11939 = !DILocation(line: 480, column: 4, scope: !11931, inlinedAt: !11937)
!11940 = !{i64 3775593}
!11941 = !DILocation(line: 499, column: 3, scope: !11938)
!11942 = !DILocation(line: 0, scope: !11927)
!11943 = !DILocalVariable(name: "value", arg: 1, scope: !11944, file: !7128, line: 527, type: !113)
!11944 = distinct !DISubprogram(name: "__STREXW", scope: !7128, file: !7128, line: 527, type: !11945, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11947)
!11945 = !DISubroutineType(types: !11946)
!11946 = !{!113, !113, !1831}
!11947 = !{!11943, !11948, !11949}
!11948 = !DILocalVariable(name: "addr", arg: 2, scope: !11944, file: !7128, line: 527, type: !1831)
!11949 = !DILocalVariable(name: "result", scope: !11944, file: !7128, line: 529, type: !113)
!11950 = !DILocation(line: 0, scope: !11944, inlinedAt: !11951)
!11951 = distinct !DILocation(line: 499, column: 3, scope: !11927)
!11952 = !DILocation(line: 531, column: 4, scope: !11944, inlinedAt: !11951)
!11953 = !{i64 3777029}
!11954 = distinct !{!11954, !11929, !11929}
!11955 = !DILocation(line: 500, column: 1, scope: !11922)
!11956 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !11444, file: !11444, line: 850, type: !11625, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11957)
!11957 = !{!11958, !11959, !11960, !11961}
!11958 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11956, file: !11444, line: 850, type: !1781)
!11959 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11956, file: !11444, line: 850, type: !113)
!11960 = !DILocalVariable(name: "Parity", arg: 3, scope: !11956, file: !11444, line: 850, type: !113)
!11961 = !DILocalVariable(name: "StopBits", arg: 4, scope: !11956, file: !11444, line: 851, type: !113)
!11962 = !DILocation(line: 0, scope: !11956)
!11963 = !DILocation(line: 853, column: 3, scope: !11956)
!11964 = !DILocation(line: 854, column: 3, scope: !11956)
!11965 = !DILocation(line: 855, column: 1, scope: !11956)
!11966 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !11444, file: !11444, line: 1337, type: !11507, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11967)
!11967 = !{!11968}
!11968 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11966, file: !11444, line: 1337, type: !1781)
!11969 = !DILocation(line: 0, scope: !11966)
!11970 = !DILocation(line: 1339, column: 3, scope: !11966)
!11971 = !DILocation(line: 1340, column: 1, scope: !11966)
!11972 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1897, file: !1897, line: 316, type: !11973, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11975)
!11973 = !DISubroutineType(types: !11974)
!11974 = !{!108, !1894, !1900}
!11975 = !{!11976, !11977, !11978}
!11976 = !DILocalVariable(name: "config", arg: 1, scope: !11972, file: !1897, line: 317, type: !1894)
!11977 = !DILocalVariable(name: "state", arg: 2, scope: !11972, file: !1897, line: 318, type: !1900)
!11978 = !DILocalVariable(name: "reg", scope: !11972, file: !1897, line: 320, type: !22)
!11979 = !DILocation(line: 0, scope: !11972)
!11980 = !DILocation(line: 329, column: 39, scope: !11972)
!11981 = !DILocation(line: 329, column: 52, scope: !11972)
!11982 = !DILocation(line: 329, column: 9, scope: !11972)
!11983 = !DILocation(line: 329, column: 2, scope: !11972)
!11984 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !411, file: !411, line: 730, type: !11884, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11985)
!11985 = !{!11986}
!11986 = !DILocalVariable(name: "dev", arg: 1, scope: !11984, file: !411, line: 730, type: !1740)
!11987 = !DILocation(line: 0, scope: !11984)
!11988 = !DILocation(line: 732, column: 9, scope: !11984)
!11989 = !DILocation(line: 732, column: 2, scope: !11984)
!11990 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !2056, file: !2056, line: 270, type: !2062, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1978, retainedNodes: !11991)
!11991 = !{!11992}
!11992 = !DILocalVariable(name: "dev", arg: 1, scope: !11990, file: !2056, line: 270, type: !2064)
!11993 = !DILocation(line: 0, scope: !11990)
!11994 = !DILocation(line: 274, column: 2, scope: !11990)
!11995 = !DILocation(line: 275, column: 12, scope: !11990)
!11996 = !DILocation(line: 276, column: 15, scope: !11990)
!11997 = !DILocation(line: 277, column: 16, scope: !11990)
!11998 = !DILocation(line: 278, column: 15, scope: !11990)
!11999 = !DILocation(line: 279, column: 16, scope: !11990)
!12000 = !DILocation(line: 282, column: 2, scope: !11990)
!12001 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !794, file: !794, line: 1814, type: !7162, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1978, retainedNodes: !12002)
!12002 = !{!12003, !12004}
!12003 = !DILocalVariable(name: "IRQn", arg: 1, scope: !12001, file: !794, line: 1814, type: !1183)
!12004 = !DILocalVariable(name: "priority", arg: 2, scope: !12001, file: !794, line: 1814, type: !113)
!12005 = !DILocation(line: 0, scope: !12001)
!12006 = !DILocation(line: 1822, column: 46, scope: !12007)
!12007 = distinct !DILexicalBlock(scope: !12008, file: !794, line: 1821, column: 3)
!12008 = distinct !DILexicalBlock(scope: !12001, file: !794, line: 1816, column: 7)
!12009 = !DILocation(line: 1824, column: 1, scope: !12001)
!12010 = distinct !DISubprogram(name: "sys_clock_isr", scope: !2056, file: !2056, line: 118, type: !7065, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1978, retainedNodes: !12011)
!12011 = !{!12012, !12013}
!12012 = !DILocalVariable(name: "arg", arg: 1, scope: !12010, file: !2056, line: 118, type: !104)
!12013 = !DILocalVariable(name: "dticks", scope: !12010, file: !2056, line: 121, type: !113)
!12014 = !DILocation(line: 0, scope: !12010)
!12015 = !DILocation(line: 124, column: 2, scope: !12010)
!12016 = !DILocation(line: 129, column: 17, scope: !12010)
!12017 = !DILocation(line: 129, column: 14, scope: !12010)
!12018 = !DILocation(line: 130, column: 15, scope: !12010)
!12019 = !DILocation(line: 145, column: 27, scope: !12020)
!12020 = distinct !DILexicalBlock(scope: !12021, file: !2056, line: 132, column: 16)
!12021 = distinct !DILexicalBlock(scope: !12010, file: !2056, line: 132, column: 6)
!12022 = !DILocation(line: 145, column: 25, scope: !12020)
!12023 = !DILocation(line: 145, column: 45, scope: !12020)
!12024 = !DILocation(line: 146, column: 30, scope: !12020)
!12025 = !DILocation(line: 146, column: 20, scope: !12020)
!12026 = !DILocation(line: 147, column: 3, scope: !12020)
!12027 = !DILocation(line: 151, column: 2, scope: !12010)
!12028 = !DILocation(line: 152, column: 1, scope: !12010)
!12029 = distinct !DISubprogram(name: "elapsed", scope: !2056, file: !2056, line: 85, type: !7209, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1978, retainedNodes: !12030)
!12030 = !{!12031, !12032, !12033}
!12031 = !DILocalVariable(name: "val1", scope: !12029, file: !2056, line: 87, type: !113)
!12032 = !DILocalVariable(name: "ctrl", scope: !12029, file: !2056, line: 88, type: !113)
!12033 = !DILocalVariable(name: "val2", scope: !12029, file: !2056, line: 89, type: !113)
!12034 = !DILocation(line: 87, column: 27, scope: !12029)
!12035 = !DILocation(line: 0, scope: !12029)
!12036 = !DILocation(line: 88, column: 27, scope: !12029)
!12037 = !DILocation(line: 89, column: 27, scope: !12029)
!12038 = !DILocation(line: 105, column: 12, scope: !12039)
!12039 = distinct !DILexicalBlock(scope: !12029, file: !2056, line: 105, column: 6)
!12040 = !DILocation(line: 106, column: 6, scope: !12039)
!12041 = !DILocation(line: 107, column: 16, scope: !12042)
!12042 = distinct !DILexicalBlock(scope: !12039, file: !2056, line: 106, column: 24)
!12043 = !DILocation(line: 111, column: 18, scope: !12042)
!12044 = !DILocation(line: 112, column: 2, scope: !12042)
!12045 = !DILocation(line: 114, column: 20, scope: !12029)
!12046 = !DILocation(line: 114, column: 30, scope: !12029)
!12047 = !DILocation(line: 114, column: 28, scope: !12029)
!12048 = !DILocation(line: 114, column: 2, scope: !12029)
!12049 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !2056, file: !2056, line: 154, type: !12050, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1978, retainedNodes: !12052)
!12050 = !DISubroutineType(types: !12051)
!12051 = !{null, !220, !422}
!12052 = !{!12053, !12054, !12055, !12056, !12057, !12058, !12059, !12064, !12065}
!12053 = !DILocalVariable(name: "ticks", arg: 1, scope: !12049, file: !2056, line: 154, type: !220)
!12054 = !DILocalVariable(name: "idle", arg: 2, scope: !12049, file: !2056, line: 154, type: !422)
!12055 = !DILocalVariable(name: "delay", scope: !12049, file: !2056, line: 169, type: !113)
!12056 = !DILocalVariable(name: "val1", scope: !12049, file: !2056, line: 170, type: !113)
!12057 = !DILocalVariable(name: "val2", scope: !12049, file: !2056, line: 170, type: !113)
!12058 = !DILocalVariable(name: "last_load_", scope: !12049, file: !2056, line: 171, type: !113)
!12059 = !DILocalVariable(name: "key", scope: !12049, file: !2056, line: 176, type: !12060)
!12060 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !436, line: 106, baseType: !12061)
!12061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !436, line: 32, size: 32, elements: !12062)
!12062 = !{!12063}
!12063 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !12061, file: !436, line: 33, baseType: !108, size: 32)
!12064 = !DILocalVariable(name: "pending", scope: !12049, file: !2056, line: 178, type: !113)
!12065 = !DILocalVariable(name: "unannounced", scope: !12049, file: !2056, line: 185, type: !113)
!12066 = !DILocation(line: 0, scope: !12049)
!12067 = !DILocation(line: 162, column: 49, scope: !12068)
!12068 = distinct !DILexicalBlock(scope: !12049, file: !2056, line: 162, column: 6)
!12069 = !DILocation(line: 163, column: 17, scope: !12070)
!12070 = distinct !DILexicalBlock(scope: !12068, file: !2056, line: 162, column: 78)
!12071 = !DILocation(line: 164, column: 13, scope: !12070)
!12072 = !DILocation(line: 165, column: 3, scope: !12070)
!12073 = !DILocation(line: 171, column: 24, scope: !12049)
!12074 = !DILocation(line: 173, column: 10, scope: !12049)
!12075 = !DILocation(line: 174, column: 10, scope: !12049)
!12076 = !DILocalVariable(name: "l", arg: 1, scope: !12077, file: !436, line: 136, type: !12080)
!12077 = distinct !DISubprogram(name: "k_spin_lock", scope: !436, file: !436, line: 136, type: !12078, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1978, retainedNodes: !12081)
!12078 = !DISubroutineType(types: !12079)
!12079 = !{!12060, !12080}
!12080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2082, size: 32)
!12081 = !{!12076, !12082}
!12082 = !DILocalVariable(name: "k", scope: !12077, file: !436, line: 139, type: !12060)
!12083 = !DILocation(line: 0, scope: !12077, inlinedAt: !12084)
!12084 = distinct !DILocation(line: 176, column: 25, scope: !12049)
!12085 = !DILocation(line: 55, column: 2, scope: !12086, inlinedAt: !12090)
!12086 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4146, file: !4146, line: 42, type: !4147, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1978, retainedNodes: !12087)
!12087 = !{!12088, !12089}
!12088 = !DILocalVariable(name: "key", scope: !12086, file: !4146, line: 44, type: !32)
!12089 = !DILocalVariable(name: "tmp", scope: !12086, file: !4146, line: 53, type: !32)
!12090 = distinct !DILocation(line: 145, column: 10, scope: !12077, inlinedAt: !12084)
!12091 = !{i64 2297480}
!12092 = !DILocation(line: 0, scope: !12086, inlinedAt: !12090)
!12093 = !DILocation(line: 178, column: 21, scope: !12049)
!12094 = !DILocation(line: 180, column: 18, scope: !12049)
!12095 = !DILocation(line: 182, column: 14, scope: !12049)
!12096 = !DILocation(line: 183, column: 15, scope: !12049)
!12097 = !DILocation(line: 185, column: 39, scope: !12049)
!12098 = !DILocation(line: 185, column: 37, scope: !12049)
!12099 = !DILocation(line: 187, column: 27, scope: !12100)
!12100 = distinct !DILexicalBlock(scope: !12049, file: !2056, line: 187, column: 6)
!12101 = !DILocation(line: 187, column: 6, scope: !12049)
!12102 = !DILocation(line: 202, column: 27, scope: !12103)
!12103 = distinct !DILexicalBlock(scope: !12100, file: !2056, line: 195, column: 9)
!12104 = !DILocation(line: 202, column: 48, scope: !12103)
!12105 = !DILocation(line: 203, column: 9, scope: !12103)
!12106 = !DILocation(line: 204, column: 11, scope: !12103)
!12107 = !DILocation(line: 205, column: 13, scope: !12108)
!12108 = distinct !DILexicalBlock(scope: !12103, file: !2056, line: 205, column: 7)
!12109 = !DILocation(line: 205, column: 7, scope: !12103)
!12110 = !DILocation(line: 0, scope: !12100)
!12111 = !DILocation(line: 212, column: 18, scope: !12049)
!12112 = !DILocation(line: 214, column: 28, scope: !12049)
!12113 = !DILocation(line: 214, column: 16, scope: !12049)
!12114 = !DILocation(line: 215, column: 15, scope: !12049)
!12115 = !DILocation(line: 227, column: 11, scope: !12116)
!12116 = distinct !DILexicalBlock(scope: !12049, file: !2056, line: 227, column: 6)
!12117 = !DILocation(line: 227, column: 6, scope: !12049)
!12118 = !DILocation(line: 228, column: 15, scope: !12119)
!12119 = distinct !DILexicalBlock(scope: !12116, file: !2056, line: 227, column: 19)
!12120 = !DILocation(line: 228, column: 38, scope: !12119)
!12121 = !DILocation(line: 228, column: 24, scope: !12119)
!12122 = !DILocation(line: 229, column: 2, scope: !12119)
!12123 = !DILocation(line: 230, column: 24, scope: !12124)
!12124 = distinct !DILexicalBlock(scope: !12116, file: !2056, line: 229, column: 9)
!12125 = !DILocation(line: 230, column: 15, scope: !12124)
!12126 = !DILocation(line: 0, scope: !12116)
!12127 = !DILocalVariable(name: "key", arg: 2, scope: !12128, file: !436, line: 190, type: !12060)
!12128 = distinct !DISubprogram(name: "k_spin_unlock", scope: !436, file: !436, line: 189, type: !12129, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1978, retainedNodes: !12131)
!12129 = !DISubroutineType(types: !12130)
!12130 = !{null, !12080, !12060}
!12131 = !{!12132, !12127}
!12132 = !DILocalVariable(name: "l", arg: 1, scope: !12128, file: !436, line: 189, type: !12080)
!12133 = !DILocation(line: 0, scope: !12128, inlinedAt: !12134)
!12134 = distinct !DILocation(line: 232, column: 2, scope: !12049)
!12135 = !DILocalVariable(name: "key", arg: 1, scope: !12136, file: !4146, line: 84, type: !32)
!12136 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4146, file: !4146, line: 84, type: !4159, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1978, retainedNodes: !12137)
!12137 = !{!12135}
!12138 = !DILocation(line: 0, scope: !12136, inlinedAt: !12139)
!12139 = distinct !DILocation(line: 215, column: 2, scope: !12128, inlinedAt: !12134)
!12140 = !DILocation(line: 95, column: 2, scope: !12136, inlinedAt: !12139)
!12141 = !{i64 2298297}
!12142 = !DILocation(line: 234, column: 1, scope: !12049)
!12143 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !2056, file: !2056, line: 236, type: !7209, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1978, retainedNodes: !12144)
!12144 = !{!12145, !12146}
!12145 = !DILocalVariable(name: "key", scope: !12143, file: !2056, line: 242, type: !12060)
!12146 = !DILocalVariable(name: "cyc", scope: !12143, file: !2056, line: 243, type: !113)
!12147 = !DILocation(line: 0, scope: !12077, inlinedAt: !12148)
!12148 = distinct !DILocation(line: 242, column: 25, scope: !12143)
!12149 = !DILocation(line: 55, column: 2, scope: !12086, inlinedAt: !12150)
!12150 = distinct !DILocation(line: 145, column: 10, scope: !12077, inlinedAt: !12148)
!12151 = !DILocation(line: 0, scope: !12086, inlinedAt: !12150)
!12152 = !DILocation(line: 0, scope: !12143)
!12153 = !DILocation(line: 243, column: 17, scope: !12143)
!12154 = !DILocation(line: 243, column: 29, scope: !12143)
!12155 = !DILocation(line: 243, column: 27, scope: !12143)
!12156 = !DILocation(line: 243, column: 43, scope: !12143)
!12157 = !DILocation(line: 243, column: 41, scope: !12143)
!12158 = !DILocation(line: 0, scope: !12128, inlinedAt: !12159)
!12159 = distinct !DILocation(line: 245, column: 2, scope: !12143)
!12160 = !DILocation(line: 0, scope: !12136, inlinedAt: !12161)
!12161 = distinct !DILocation(line: 215, column: 2, scope: !12128, inlinedAt: !12159)
!12162 = !DILocation(line: 95, column: 2, scope: !12136, inlinedAt: !12161)
!12163 = !DILocation(line: 246, column: 13, scope: !12143)
!12164 = !DILocation(line: 246, column: 2, scope: !12143)
!12165 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !2056, file: !2056, line: 249, type: !7209, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1978, retainedNodes: !12166)
!12166 = !{!12167, !12168}
!12167 = !DILocalVariable(name: "key", scope: !12165, file: !2056, line: 251, type: !12060)
!12168 = !DILocalVariable(name: "ret", scope: !12165, file: !2056, line: 252, type: !113)
!12169 = !DILocation(line: 0, scope: !12077, inlinedAt: !12170)
!12170 = distinct !DILocation(line: 251, column: 25, scope: !12165)
!12171 = !DILocation(line: 55, column: 2, scope: !12086, inlinedAt: !12172)
!12172 = distinct !DILocation(line: 145, column: 10, scope: !12077, inlinedAt: !12170)
!12173 = !DILocation(line: 0, scope: !12086, inlinedAt: !12172)
!12174 = !DILocation(line: 0, scope: !12165)
!12175 = !DILocation(line: 252, column: 17, scope: !12165)
!12176 = !DILocation(line: 252, column: 29, scope: !12165)
!12177 = !DILocation(line: 252, column: 27, scope: !12165)
!12178 = !DILocation(line: 0, scope: !12128, inlinedAt: !12179)
!12179 = distinct !DILocation(line: 254, column: 2, scope: !12165)
!12180 = !DILocation(line: 0, scope: !12136, inlinedAt: !12181)
!12181 = distinct !DILocation(line: 215, column: 2, scope: !12128, inlinedAt: !12179)
!12182 = !DILocation(line: 95, column: 2, scope: !12136, inlinedAt: !12181)
!12183 = !DILocation(line: 255, column: 2, scope: !12165)
!12184 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !2056, file: !2056, line: 258, type: !3472, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1978, retainedNodes: !437)
!12185 = !DILocation(line: 260, column: 6, scope: !12186)
!12186 = distinct !DILexicalBlock(scope: !12184, file: !2056, line: 260, column: 6)
!12187 = !DILocation(line: 260, column: 16, scope: !12186)
!12188 = !DILocation(line: 260, column: 6, scope: !12184)
!12189 = !DILocation(line: 261, column: 17, scope: !12190)
!12190 = distinct !DILexicalBlock(scope: !12186, file: !2056, line: 260, column: 34)
!12191 = !DILocation(line: 262, column: 2, scope: !12190)
!12192 = !DILocation(line: 263, column: 1, scope: !12184)
!12193 = distinct !DISubprogram(name: "sys_clock_disable", scope: !2056, file: !2056, line: 265, type: !3472, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1978, retainedNodes: !437)
!12194 = !DILocation(line: 267, column: 16, scope: !12193)
!12195 = !DILocation(line: 268, column: 1, scope: !12193)
!12196 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !12197, file: !12197, line: 9, type: !12198, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3300, retainedNodes: !12221)
!12197 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12198 = !DISubroutineType(types: !12199)
!12199 = !{!108, !12200, !164, !12220}
!12200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12201, size: 32)
!12201 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12202)
!12202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1897, line: 60, size: 64, elements: !12203)
!12203 = !{!12204, !12219}
!12204 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !12202, file: !1897, line: 69, baseType: !12205, size: 32)
!12205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12206, size: 32)
!12206 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12207)
!12207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1897, line: 50, size: 64, elements: !12208)
!12208 = !{!12209, !12217, !12218}
!12209 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !12207, file: !1897, line: 52, baseType: !12210, size: 32)
!12210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12211, size: 32)
!12211 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12212)
!12212 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1908, line: 37, baseType: !12213)
!12213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1908, line: 32, size: 64, elements: !12214)
!12214 = !{!12215, !12216}
!12215 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !12213, file: !1908, line: 34, baseType: !113, size: 32)
!12216 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !12213, file: !1908, line: 36, baseType: !113, size: 32, offset: 32)
!12217 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !12207, file: !1897, line: 54, baseType: !164, size: 8, offset: 32)
!12218 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !12207, file: !1897, line: 56, baseType: !164, size: 8, offset: 40)
!12219 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !12202, file: !1897, line: 71, baseType: !164, size: 8, offset: 32)
!12220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12205, size: 32)
!12221 = !{!12222, !12223, !12224}
!12222 = !DILocalVariable(name: "config", arg: 1, scope: !12196, file: !12197, line: 9, type: !12200)
!12223 = !DILocalVariable(name: "id", arg: 2, scope: !12196, file: !12197, line: 9, type: !164)
!12224 = !DILocalVariable(name: "state", arg: 3, scope: !12196, file: !12197, line: 10, type: !12220)
!12225 = !DILocation(line: 0, scope: !12196)
!12226 = !DILocation(line: 12, column: 20, scope: !12196)
!12227 = !DILocation(line: 13, column: 27, scope: !12196)
!12228 = !DILocation(line: 13, column: 42, scope: !12196)
!12229 = !DILocation(line: 13, column: 19, scope: !12196)
!12230 = !DILocation(line: 13, column: 16, scope: !12196)
!12231 = !DILocation(line: 13, column: 2, scope: !12196)
!12232 = distinct !{!12232, !12231, !12233}
!12233 = !DILocation(line: 19, column: 2, scope: !12196)
!12234 = !DILocation(line: 14, column: 23, scope: !12235)
!12235 = distinct !DILexicalBlock(scope: !12236, file: !12197, line: 14, column: 7)
!12236 = distinct !DILexicalBlock(scope: !12196, file: !12197, line: 13, column: 54)
!12237 = !DILocation(line: 14, column: 10, scope: !12235)
!12238 = !DILocation(line: 18, column: 11, scope: !12236)
!12239 = !DILocation(line: 14, column: 7, scope: !12236)
!12240 = !DILocation(line: 22, column: 1, scope: !12196)
!12241 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !2173, file: !2173, line: 193, type: !12242, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2091, retainedNodes: !12251)
!12242 = !DISubroutineType(types: !12243)
!12243 = !{!108, !12244, !164, !22}
!12244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12245, size: 32)
!12245 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12246)
!12246 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1908, line: 37, baseType: !12247)
!12247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1908, line: 32, size: 64, elements: !12248)
!12248 = !{!12249, !12250}
!12249 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !12247, file: !1908, line: 34, baseType: !113, size: 32)
!12250 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !12247, file: !1908, line: 36, baseType: !113, size: 32, offset: 32)
!12251 = !{!12252, !12253, !12254, !12255, !12256, !12257, !12258, !12259, !12261}
!12252 = !DILocalVariable(name: "pins", arg: 1, scope: !12241, file: !2173, line: 193, type: !12244)
!12253 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !12241, file: !2173, line: 193, type: !164)
!12254 = !DILocalVariable(name: "reg", arg: 3, scope: !12241, file: !2173, line: 194, type: !22)
!12255 = !DILocalVariable(name: "pin", scope: !12241, file: !2173, line: 196, type: !113)
!12256 = !DILocalVariable(name: "mux", scope: !12241, file: !2173, line: 196, type: !113)
!12257 = !DILocalVariable(name: "pin_cgf", scope: !12241, file: !2173, line: 197, type: !113)
!12258 = !DILocalVariable(name: "ret", scope: !12241, file: !2173, line: 198, type: !108)
!12259 = !DILocalVariable(name: "i", scope: !12260, file: !2173, line: 209, type: !164)
!12260 = distinct !DILexicalBlock(scope: !12241, file: !2173, line: 209, column: 2)
!12261 = !DILocalVariable(name: "gpio_out", scope: !12262, file: !2173, line: 239, type: !113)
!12262 = distinct !DILexicalBlock(scope: !12263, file: !2173, line: 238, column: 55)
!12263 = distinct !DILexicalBlock(scope: !12264, file: !2173, line: 238, column: 14)
!12264 = distinct !DILexicalBlock(scope: !12265, file: !2173, line: 236, column: 14)
!12265 = distinct !DILexicalBlock(scope: !12266, file: !2173, line: 234, column: 7)
!12266 = distinct !DILexicalBlock(scope: !12267, file: !2173, line: 209, column: 41)
!12267 = distinct !DILexicalBlock(scope: !12260, file: !2173, line: 209, column: 2)
!12268 = !DILocation(line: 0, scope: !12241)
!12269 = !DILocation(line: 0, scope: !12260)
!12270 = !DILocation(line: 209, column: 25, scope: !12267)
!12271 = !DILocation(line: 209, column: 2, scope: !12260)
!12272 = distinct !{!12272, !12271, !12273}
!12273 = !DILocation(line: 259, column: 2, scope: !12260)
!12274 = !DILocation(line: 210, column: 17, scope: !12266)
!12275 = !DILocation(line: 234, column: 7, scope: !12265)
!12276 = !DILocation(line: 234, column: 33, scope: !12265)
!12277 = !DILocation(line: 234, column: 7, scope: !12266)
!12278 = !DILocation(line: 235, column: 22, scope: !12279)
!12279 = distinct !DILexicalBlock(scope: !12265, file: !2173, line: 234, column: 49)
!12280 = !DILocation(line: 235, column: 29, scope: !12279)
!12281 = !DILocation(line: 236, column: 3, scope: !12279)
!12282 = !DILocation(line: 236, column: 14, scope: !12265)
!12283 = !DILocation(line: 239, column: 32, scope: !12262)
!12284 = !DILocation(line: 0, scope: !12262)
!12285 = !DILocation(line: 241, column: 8, scope: !12262)
!12286 = !DILocation(line: 246, column: 3, scope: !12262)
!12287 = !DILocation(line: 252, column: 9, scope: !12266)
!12288 = !DILocation(line: 255, column: 9, scope: !12266)
!12289 = !DILocation(line: 256, column: 11, scope: !12290)
!12290 = distinct !DILexicalBlock(scope: !12266, file: !2173, line: 256, column: 7)
!12291 = !DILocation(line: 209, column: 37, scope: !12267)
!12292 = !DILocation(line: 256, column: 7, scope: !12266)
!12293 = !DILocation(line: 262, column: 1, scope: !12241)
!12294 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !2173, file: !2173, line: 176, type: !12295, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2091, retainedNodes: !12297)
!12295 = !DISubroutineType(types: !12296)
!12296 = !{!108, !113, !113, !113}
!12297 = !{!12298, !12299, !12300, !12301}
!12298 = !DILocalVariable(name: "pin", arg: 1, scope: !12294, file: !2173, line: 176, type: !113)
!12299 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !12294, file: !2173, line: 176, type: !113)
!12300 = !DILocalVariable(name: "pin_func", arg: 3, scope: !12294, file: !2173, line: 176, type: !113)
!12301 = !DILocalVariable(name: "port_device", scope: !12294, file: !2173, line: 178, type: !2103)
!12302 = !DILocation(line: 0, scope: !12294)
!12303 = !DILocation(line: 180, column: 22, scope: !12304)
!12304 = distinct !DILexicalBlock(scope: !12294, file: !2173, line: 180, column: 6)
!12305 = !DILocation(line: 180, column: 6, scope: !12294)
!12306 = !DILocation(line: 180, column: 6, scope: !12304)
!12307 = !DILocation(line: 184, column: 16, scope: !12294)
!12308 = !DILocation(line: 186, column: 19, scope: !12309)
!12309 = distinct !DILexicalBlock(scope: !12294, file: !2173, line: 186, column: 6)
!12310 = !DILocation(line: 186, column: 28, scope: !12309)
!12311 = !DILocation(line: 186, column: 33, scope: !12309)
!12312 = !DILocation(line: 186, column: 6, scope: !12294)
!12313 = !DILocation(line: 190, column: 43, scope: !12294)
!12314 = !DILocation(line: 190, column: 9, scope: !12294)
!12315 = !DILocation(line: 190, column: 2, scope: !12294)
!12316 = !DILocation(line: 191, column: 1, scope: !12294)
!12317 = distinct !DISubprogram(name: "device_is_ready", scope: !10273, file: !10273, line: 47, type: !12318, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2091, retainedNodes: !12320)
!12318 = !DISubroutineType(types: !12319)
!12319 = !{!422, !2103}
!12320 = !{!12321}
!12321 = !DILocalVariable(name: "dev", arg: 1, scope: !12317, file: !10273, line: 47, type: !2103)
!12322 = !DILocation(line: 0, scope: !12317)
!12323 = !DILocation(line: 55, column: 2, scope: !12324)
!12324 = distinct !DILexicalBlock(scope: !12317, file: !10273, line: 55, column: 2)
!12325 = !{i64 2149531489}
!12326 = !DILocation(line: 56, column: 9, scope: !12317)
!12327 = !DILocation(line: 56, column: 2, scope: !12317)
!12328 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !411, file: !411, line: 730, type: !12318, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2091, retainedNodes: !12329)
!12329 = !{!12330}
!12330 = !DILocalVariable(name: "dev", arg: 1, scope: !12328, file: !411, line: 730, type: !2103)
!12331 = !DILocation(line: 0, scope: !12328)
!12332 = !DILocation(line: 732, column: 9, scope: !12328)
!12333 = !DILocation(line: 732, column: 2, scope: !12328)
!12334 = distinct !DISubprogram(name: "SystemInit", scope: !2225, file: !2225, line: 167, type: !3472, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2181, retainedNodes: !437)
!12335 = !DILocation(line: 182, column: 1, scope: !12334)
!12336 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !2225, file: !2225, line: 220, type: !3472, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2181, retainedNodes: !12337)
!12337 = !{!12338, !12339, !12340, !12341, !12342}
!12338 = !DILocalVariable(name: "tmp", scope: !12336, file: !2225, line: 222, type: !113)
!12339 = !DILocalVariable(name: "pllvco", scope: !12336, file: !2225, line: 222, type: !113)
!12340 = !DILocalVariable(name: "pllp", scope: !12336, file: !2225, line: 222, type: !113)
!12341 = !DILocalVariable(name: "pllsource", scope: !12336, file: !2225, line: 222, type: !113)
!12342 = !DILocalVariable(name: "pllm", scope: !12336, file: !2225, line: 222, type: !113)
!12343 = !DILocation(line: 0, scope: !12336)
!12344 = !DILocation(line: 225, column: 14, scope: !12336)
!12345 = !DILocation(line: 225, column: 19, scope: !12336)
!12346 = !DILocation(line: 227, column: 3, scope: !12336)
!12347 = !DILocation(line: 240, column: 25, scope: !12348)
!12348 = distinct !DILexicalBlock(scope: !12336, file: !2225, line: 228, column: 3)
!12349 = !DILocation(line: 241, column: 19, scope: !12348)
!12350 = !DILocation(line: 241, column: 27, scope: !12348)
!12351 = !DILocation(line: 0, scope: !12352)
!12352 = distinct !DILexicalBlock(scope: !12348, file: !2225, line: 243, column: 11)
!12353 = !DILocation(line: 254, column: 22, scope: !12348)
!12354 = !DILocation(line: 254, column: 62, scope: !12348)
!12355 = !DILocation(line: 255, column: 31, scope: !12348)
!12356 = !DILocation(line: 256, column: 7, scope: !12348)
!12357 = !DILocation(line: 0, scope: !12348)
!12358 = !DILocation(line: 263, column: 30, scope: !12336)
!12359 = !DILocation(line: 263, column: 52, scope: !12336)
!12360 = !DILocation(line: 263, column: 9, scope: !12336)
!12361 = !DILocation(line: 265, column: 19, scope: !12336)
!12362 = !DILocation(line: 266, column: 1, scope: !12336)
!12363 = distinct !DISubprogram(name: "HAL_RCCEx_PeriphCLKConfig", scope: !12364, file: !12364, line: 87, type: !12365, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3302, retainedNodes: !12404)
!12364 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc_ex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12365 = !DISubroutineType(types: !12366)
!12366 = !{!12367, !12368}
!12367 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !3306, line: 44, baseType: !3305)
!12368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12369, size: 32)
!12369 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PeriphCLKInitTypeDef", file: !12370, line: 172, baseType: !12371)
!12370 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12371 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12370, line: 121, size: 736, elements: !12372)
!12372 = !{!12373, !12374, !12383, !12391, !12392, !12393, !12394, !12395, !12396, !12397, !12398, !12399, !12400, !12401, !12402, !12403}
!12373 = !DIDerivedType(tag: DW_TAG_member, name: "PeriphClockSelection", scope: !12371, file: !12370, line: 123, baseType: !113, size: 32)
!12374 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2S", scope: !12371, file: !12370, line: 126, baseType: !12375, size: 160, offset: 32)
!12375 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLI2SInitTypeDef", file: !12370, line: 97, baseType: !12376)
!12376 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12370, line: 79, size: 160, elements: !12377)
!12377 = !{!12378, !12379, !12380, !12381, !12382}
!12378 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SM", scope: !12376, file: !12370, line: 81, baseType: !113, size: 32)
!12379 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SN", scope: !12376, file: !12370, line: 84, baseType: !113, size: 32, offset: 32)
!12380 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SP", scope: !12376, file: !12370, line: 87, baseType: !113, size: 32, offset: 64)
!12381 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SQ", scope: !12376, file: !12370, line: 90, baseType: !113, size: 32, offset: 96)
!12382 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SR", scope: !12376, file: !12370, line: 94, baseType: !113, size: 32, offset: 128)
!12383 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAI", scope: !12371, file: !12370, line: 129, baseType: !12384, size: 128, offset: 192)
!12384 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLSAIInitTypeDef", file: !12370, line: 116, baseType: !12385)
!12385 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12370, line: 102, size: 128, elements: !12386)
!12386 = !{!12387, !12388, !12389, !12390}
!12387 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIM", scope: !12385, file: !12370, line: 104, baseType: !113, size: 32)
!12388 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIN", scope: !12385, file: !12370, line: 107, baseType: !113, size: 32, offset: 32)
!12389 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIP", scope: !12385, file: !12370, line: 110, baseType: !113, size: 32, offset: 64)
!12390 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIQ", scope: !12385, file: !12370, line: 113, baseType: !113, size: 32, offset: 96)
!12391 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SDivQ", scope: !12371, file: !12370, line: 132, baseType: !113, size: 32, offset: 320)
!12392 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIDivQ", scope: !12371, file: !12370, line: 136, baseType: !113, size: 32, offset: 352)
!12393 = !DIDerivedType(tag: DW_TAG_member, name: "Sai1ClockSelection", scope: !12371, file: !12370, line: 140, baseType: !113, size: 32, offset: 384)
!12394 = !DIDerivedType(tag: DW_TAG_member, name: "Sai2ClockSelection", scope: !12371, file: !12370, line: 143, baseType: !113, size: 32, offset: 416)
!12395 = !DIDerivedType(tag: DW_TAG_member, name: "I2sApb1ClockSelection", scope: !12371, file: !12370, line: 146, baseType: !113, size: 32, offset: 448)
!12396 = !DIDerivedType(tag: DW_TAG_member, name: "I2sApb2ClockSelection", scope: !12371, file: !12370, line: 149, baseType: !113, size: 32, offset: 480)
!12397 = !DIDerivedType(tag: DW_TAG_member, name: "RTCClockSelection", scope: !12371, file: !12370, line: 152, baseType: !113, size: 32, offset: 512)
!12398 = !DIDerivedType(tag: DW_TAG_member, name: "SdioClockSelection", scope: !12371, file: !12370, line: 155, baseType: !113, size: 32, offset: 544)
!12399 = !DIDerivedType(tag: DW_TAG_member, name: "CecClockSelection", scope: !12371, file: !12370, line: 158, baseType: !113, size: 32, offset: 576)
!12400 = !DIDerivedType(tag: DW_TAG_member, name: "Fmpi2c1ClockSelection", scope: !12371, file: !12370, line: 161, baseType: !113, size: 32, offset: 608)
!12401 = !DIDerivedType(tag: DW_TAG_member, name: "SpdifClockSelection", scope: !12371, file: !12370, line: 164, baseType: !113, size: 32, offset: 640)
!12402 = !DIDerivedType(tag: DW_TAG_member, name: "Clk48ClockSelection", scope: !12371, file: !12370, line: 167, baseType: !113, size: 32, offset: 672)
!12403 = !DIDerivedType(tag: DW_TAG_member, name: "TIMPresSelection", scope: !12371, file: !12370, line: 170, baseType: !164, size: 8, offset: 704)
!12404 = !{!12405, !12406, !12407, !12408, !12409, !12410, !12411, !12412, !12413, !12414, !12415}
!12405 = !DILocalVariable(name: "PeriphClkInit", arg: 1, scope: !12363, file: !12364, line: 87, type: !12368)
!12406 = !DILocalVariable(name: "tickstart", scope: !12363, file: !12364, line: 89, type: !113)
!12407 = !DILocalVariable(name: "tmpreg1", scope: !12363, file: !12364, line: 90, type: !113)
!12408 = !DILocalVariable(name: "plli2sp", scope: !12363, file: !12364, line: 91, type: !113)
!12409 = !DILocalVariable(name: "plli2sq", scope: !12363, file: !12364, line: 92, type: !113)
!12410 = !DILocalVariable(name: "plli2sr", scope: !12363, file: !12364, line: 93, type: !113)
!12411 = !DILocalVariable(name: "pllsaip", scope: !12363, file: !12364, line: 94, type: !113)
!12412 = !DILocalVariable(name: "pllsaiq", scope: !12363, file: !12364, line: 95, type: !113)
!12413 = !DILocalVariable(name: "plli2sused", scope: !12363, file: !12364, line: 96, type: !113)
!12414 = !DILocalVariable(name: "pllsaiused", scope: !12363, file: !12364, line: 97, type: !113)
!12415 = !DILocalVariable(name: "tmpreg", scope: !12416, file: !12364, line: 184, type: !576)
!12416 = distinct !DILexicalBlock(scope: !12417, file: !12364, line: 184, column: 5)
!12417 = distinct !DILexicalBlock(scope: !12418, file: !12364, line: 179, column: 3)
!12418 = distinct !DILexicalBlock(scope: !12363, file: !12364, line: 178, column: 6)
!12419 = !DILocation(line: 0, scope: !12363)
!12420 = !DILocation(line: 103, column: 23, scope: !12421)
!12421 = distinct !DILexicalBlock(scope: !12363, file: !12364, line: 103, column: 6)
!12422 = !DILocation(line: 103, column: 45, scope: !12421)
!12423 = !DILocation(line: 103, column: 71, scope: !12421)
!12424 = !DILocation(line: 103, column: 6, scope: !12363)
!12425 = !DILocation(line: 109, column: 5, scope: !12426)
!12426 = distinct !DILexicalBlock(scope: !12421, file: !12364, line: 104, column: 3)
!12427 = !DILocation(line: 111, column: 23, scope: !12428)
!12428 = distinct !DILexicalBlock(scope: !12426, file: !12364, line: 111, column: 8)
!12429 = !DILocation(line: 111, column: 45, scope: !12428)
!12430 = !DILocation(line: 111, column: 8, scope: !12426)
!12431 = !DILocation(line: 119, column: 23, scope: !12432)
!12432 = distinct !DILexicalBlock(scope: !12363, file: !12364, line: 119, column: 6)
!12433 = !DILocation(line: 119, column: 45, scope: !12432)
!12434 = !DILocation(line: 119, column: 71, scope: !12432)
!12435 = !DILocation(line: 119, column: 6, scope: !12363)
!12436 = !DILocation(line: 125, column: 5, scope: !12437)
!12437 = distinct !DILexicalBlock(scope: !12432, file: !12364, line: 120, column: 3)
!12438 = !DILocation(line: 127, column: 23, scope: !12439)
!12439 = distinct !DILexicalBlock(scope: !12437, file: !12364, line: 127, column: 8)
!12440 = !DILocation(line: 127, column: 45, scope: !12439)
!12441 = !DILocation(line: 127, column: 8, scope: !12437)
!12442 = !DILocation(line: 135, column: 23, scope: !12443)
!12443 = distinct !DILexicalBlock(scope: !12363, file: !12364, line: 135, column: 6)
!12444 = !DILocation(line: 135, column: 45, scope: !12443)
!12445 = !DILocation(line: 135, column: 67, scope: !12443)
!12446 = !DILocation(line: 135, column: 6, scope: !12363)
!12447 = !DILocation(line: 141, column: 5, scope: !12448)
!12448 = distinct !DILexicalBlock(scope: !12443, file: !12364, line: 136, column: 3)
!12449 = !DILocation(line: 143, column: 23, scope: !12450)
!12450 = distinct !DILexicalBlock(scope: !12448, file: !12364, line: 143, column: 8)
!12451 = !DILocation(line: 143, column: 42, scope: !12450)
!12452 = !DILocation(line: 143, column: 8, scope: !12448)
!12453 = !DILocation(line: 148, column: 42, scope: !12454)
!12454 = distinct !DILexicalBlock(scope: !12448, file: !12364, line: 148, column: 8)
!12455 = !DILocation(line: 148, column: 8, scope: !12448)
!12456 = !DILocation(line: 156, column: 23, scope: !12457)
!12457 = distinct !DILexicalBlock(scope: !12363, file: !12364, line: 156, column: 6)
!12458 = !DILocation(line: 156, column: 45, scope: !12457)
!12459 = !DILocation(line: 156, column: 67, scope: !12457)
!12460 = !DILocation(line: 156, column: 6, scope: !12363)
!12461 = !DILocation(line: 162, column: 5, scope: !12462)
!12462 = distinct !DILexicalBlock(scope: !12457, file: !12364, line: 157, column: 3)
!12463 = !DILocation(line: 165, column: 23, scope: !12464)
!12464 = distinct !DILexicalBlock(scope: !12462, file: !12364, line: 165, column: 8)
!12465 = !DILocation(line: 165, column: 42, scope: !12464)
!12466 = !DILocation(line: 165, column: 8, scope: !12462)
!12467 = !DILocation(line: 170, column: 42, scope: !12468)
!12468 = distinct !DILexicalBlock(scope: !12462, file: !12364, line: 170, column: 8)
!12469 = !DILocation(line: 170, column: 8, scope: !12462)
!12470 = !DILocation(line: 178, column: 23, scope: !12418)
!12471 = !DILocation(line: 178, column: 45, scope: !12418)
!12472 = !DILocation(line: 178, column: 66, scope: !12418)
!12473 = !DILocation(line: 178, column: 6, scope: !12363)
!12474 = !DILocation(line: 184, column: 5, scope: !12416)
!12475 = !DILocation(line: 184, column: 5, scope: !12417)
!12476 = !DILocation(line: 187, column: 13, scope: !12417)
!12477 = !DILocation(line: 190, column: 17, scope: !12417)
!12478 = !DILocation(line: 192, column: 5, scope: !12417)
!12479 = !DILocation(line: 192, column: 17, scope: !12417)
!12480 = !DILocation(line: 192, column: 20, scope: !12417)
!12481 = !DILocation(line: 192, column: 34, scope: !12417)
!12482 = !DILocation(line: 194, column: 11, scope: !12483)
!12483 = distinct !DILexicalBlock(scope: !12484, file: !12364, line: 194, column: 10)
!12484 = distinct !DILexicalBlock(scope: !12417, file: !12364, line: 193, column: 5)
!12485 = !DILocation(line: 194, column: 25, scope: !12483)
!12486 = !DILocation(line: 194, column: 39, scope: !12483)
!12487 = !DILocation(line: 194, column: 10, scope: !12484)
!12488 = distinct !{!12488, !12478, !12489}
!12489 = !DILocation(line: 198, column: 5, scope: !12417)
!12490 = !DILocation(line: 200, column: 21, scope: !12417)
!12491 = !DILocation(line: 200, column: 26, scope: !12417)
!12492 = !DILocation(line: 201, column: 17, scope: !12493)
!12493 = distinct !DILexicalBlock(scope: !12417, file: !12364, line: 201, column: 8)
!12494 = !DILocation(line: 201, column: 33, scope: !12493)
!12495 = !DILocation(line: 201, column: 66, scope: !12493)
!12496 = !DILocation(line: 201, column: 84, scope: !12493)
!12497 = !DILocation(line: 201, column: 47, scope: !12493)
!12498 = !DILocation(line: 201, column: 8, scope: !12417)
!12499 = !DILocation(line: 204, column: 23, scope: !12500)
!12500 = distinct !DILexicalBlock(scope: !12493, file: !12364, line: 202, column: 5)
!12501 = !DILocation(line: 204, column: 28, scope: !12500)
!12502 = !DILocation(line: 206, column: 7, scope: !12500)
!12503 = !DILocation(line: 207, column: 7, scope: !12500)
!12504 = !DILocation(line: 209, column: 17, scope: !12500)
!12505 = !DILocation(line: 212, column: 10, scope: !12506)
!12506 = distinct !DILexicalBlock(scope: !12500, file: !12364, line: 212, column: 10)
!12507 = !DILocation(line: 212, column: 10, scope: !12500)
!12508 = !DILocation(line: 215, column: 21, scope: !12509)
!12509 = distinct !DILexicalBlock(scope: !12506, file: !12364, line: 213, column: 7)
!12510 = !DILocation(line: 218, column: 9, scope: !12509)
!12511 = !DILocation(line: 218, column: 15, scope: !12509)
!12512 = !DILocation(line: 218, column: 51, scope: !12509)
!12513 = !DILocation(line: 220, column: 15, scope: !12514)
!12514 = distinct !DILexicalBlock(scope: !12515, file: !12364, line: 220, column: 14)
!12515 = distinct !DILexicalBlock(scope: !12509, file: !12364, line: 219, column: 9)
!12516 = !DILocation(line: 220, column: 29, scope: !12514)
!12517 = !DILocation(line: 220, column: 43, scope: !12514)
!12518 = !DILocation(line: 220, column: 14, scope: !12515)
!12519 = distinct !{!12519, !12510, !12520}
!12520 = !DILocation(line: 224, column: 9, scope: !12509)
!12521 = !DILocation(line: 227, column: 5, scope: !12522)
!12522 = distinct !DILexicalBlock(scope: !12417, file: !12364, line: 227, column: 5)
!12523 = !DILocation(line: 232, column: 23, scope: !12524)
!12524 = distinct !DILexicalBlock(scope: !12363, file: !12364, line: 232, column: 6)
!12525 = !DILocation(line: 228, column: 3, scope: !12417)
!12526 = !DILocation(line: 232, column: 45, scope: !12524)
!12527 = !DILocation(line: 232, column: 66, scope: !12524)
!12528 = !DILocation(line: 232, column: 6, scope: !12363)
!12529 = !DILocation(line: 235, column: 5, scope: !12530)
!12530 = distinct !DILexicalBlock(scope: !12524, file: !12364, line: 233, column: 3)
!12531 = !DILocation(line: 240, column: 23, scope: !12532)
!12532 = distinct !DILexicalBlock(scope: !12363, file: !12364, line: 240, column: 6)
!12533 = !DILocation(line: 236, column: 3, scope: !12530)
!12534 = !DILocation(line: 240, column: 45, scope: !12532)
!12535 = !DILocation(line: 240, column: 70, scope: !12532)
!12536 = !DILocation(line: 240, column: 6, scope: !12363)
!12537 = !DILocation(line: 246, column: 5, scope: !12538)
!12538 = distinct !DILexicalBlock(scope: !12532, file: !12364, line: 241, column: 3)
!12539 = !DILocation(line: 251, column: 23, scope: !12540)
!12540 = distinct !DILexicalBlock(scope: !12363, file: !12364, line: 251, column: 6)
!12541 = !DILocation(line: 247, column: 3, scope: !12538)
!12542 = !DILocation(line: 251, column: 45, scope: !12540)
!12543 = !DILocation(line: 251, column: 66, scope: !12540)
!12544 = !DILocation(line: 251, column: 6, scope: !12363)
!12545 = !DILocation(line: 257, column: 5, scope: !12546)
!12546 = distinct !DILexicalBlock(scope: !12540, file: !12364, line: 252, column: 3)
!12547 = !DILocation(line: 262, column: 23, scope: !12548)
!12548 = distinct !DILexicalBlock(scope: !12363, file: !12364, line: 262, column: 6)
!12549 = !DILocation(line: 258, column: 3, scope: !12546)
!12550 = !DILocation(line: 262, column: 45, scope: !12548)
!12551 = !DILocation(line: 262, column: 68, scope: !12548)
!12552 = !DILocation(line: 262, column: 6, scope: !12363)
!12553 = !DILocation(line: 268, column: 5, scope: !12554)
!12554 = distinct !DILexicalBlock(scope: !12548, file: !12364, line: 263, column: 3)
!12555 = !DILocation(line: 271, column: 23, scope: !12556)
!12556 = distinct !DILexicalBlock(scope: !12554, file: !12364, line: 271, column: 8)
!12557 = !DILocation(line: 271, column: 43, scope: !12556)
!12558 = !DILocation(line: 271, column: 8, scope: !12554)
!12559 = !DILocation(line: 279, column: 23, scope: !12560)
!12560 = distinct !DILexicalBlock(scope: !12363, file: !12364, line: 279, column: 6)
!12561 = !DILocation(line: 279, column: 45, scope: !12560)
!12562 = !DILocation(line: 279, column: 67, scope: !12560)
!12563 = !DILocation(line: 279, column: 6, scope: !12363)
!12564 = !DILocation(line: 285, column: 5, scope: !12565)
!12565 = distinct !DILexicalBlock(scope: !12560, file: !12364, line: 280, column: 3)
!12566 = !DILocation(line: 290, column: 23, scope: !12567)
!12567 = distinct !DILexicalBlock(scope: !12363, file: !12364, line: 290, column: 6)
!12568 = !DILocation(line: 286, column: 3, scope: !12565)
!12569 = !DILocation(line: 290, column: 45, scope: !12567)
!12570 = !DILocation(line: 290, column: 70, scope: !12567)
!12571 = !DILocation(line: 290, column: 6, scope: !12363)
!12572 = !DILocation(line: 296, column: 5, scope: !12573)
!12573 = distinct !DILexicalBlock(scope: !12567, file: !12364, line: 291, column: 3)
!12574 = !DILocation(line: 298, column: 23, scope: !12575)
!12575 = distinct !DILexicalBlock(scope: !12573, file: !12364, line: 298, column: 8)
!12576 = !DILocation(line: 298, column: 43, scope: !12575)
!12577 = !DILocation(line: 298, column: 8, scope: !12573)
!12578 = !DILocation(line: 308, column: 44, scope: !12579)
!12579 = distinct !DILexicalBlock(scope: !12363, file: !12364, line: 308, column: 6)
!12580 = !DILocation(line: 308, column: 18, scope: !12579)
!12581 = !DILocation(line: 308, column: 25, scope: !12579)
!12582 = !DILocation(line: 308, column: 65, scope: !12579)
!12583 = !DILocation(line: 308, column: 6, scope: !12363)
!12584 = !DILocation(line: 311, column: 5, scope: !12585)
!12585 = distinct !DILexicalBlock(scope: !12579, file: !12364, line: 309, column: 3)
!12586 = !DILocation(line: 313, column: 17, scope: !12585)
!12587 = !DILocation(line: 315, column: 5, scope: !12585)
!12588 = !DILocation(line: 315, column: 11, scope: !12585)
!12589 = !DILocation(line: 317, column: 11, scope: !12590)
!12590 = distinct !DILexicalBlock(scope: !12591, file: !12364, line: 317, column: 10)
!12591 = distinct !DILexicalBlock(scope: !12585, file: !12364, line: 316, column: 5)
!12592 = !DILocation(line: 317, column: 25, scope: !12590)
!12593 = !DILocation(line: 317, column: 39, scope: !12590)
!12594 = !DILocation(line: 317, column: 10, scope: !12591)
!12595 = distinct !{!12595, !12587, !12596}
!12596 = !DILocation(line: 322, column: 5, scope: !12585)
!12597 = !DILocation(line: 329, column: 27, scope: !12598)
!12598 = distinct !DILexicalBlock(scope: !12585, file: !12364, line: 329, column: 8)
!12599 = !DILocation(line: 329, column: 49, scope: !12598)
!12600 = !DILocation(line: 329, column: 75, scope: !12598)
!12601 = !DILocation(line: 329, column: 102, scope: !12598)
!12602 = !DILocation(line: 329, column: 121, scope: !12598)
!12603 = !DILocation(line: 329, column: 143, scope: !12598)
!12604 = !DILocation(line: 329, column: 176, scope: !12598)
!12605 = !DILocation(line: 330, column: 49, scope: !12598)
!12606 = !DILocation(line: 330, column: 75, scope: !12598)
!12607 = !DILocation(line: 330, column: 102, scope: !12598)
!12608 = !DILocation(line: 330, column: 121, scope: !12598)
!12609 = !DILocation(line: 330, column: 143, scope: !12598)
!12610 = !DILocation(line: 329, column: 8, scope: !12585)
!12611 = !DILocation(line: 336, column: 26, scope: !12612)
!12612 = distinct !DILexicalBlock(scope: !12598, file: !12364, line: 331, column: 5)
!12613 = !DILocation(line: 336, column: 100, scope: !12612)
!12614 = !DILocation(line: 337, column: 24, scope: !12612)
!12615 = !DILocation(line: 337, column: 61, scope: !12612)
!12616 = !DILocation(line: 341, column: 7, scope: !12612)
!12617 = !DILocation(line: 345, column: 27, scope: !12618)
!12618 = distinct !DILexicalBlock(scope: !12585, file: !12364, line: 345, column: 8)
!12619 = !DILocation(line: 342, column: 5, scope: !12612)
!12620 = !DILocation(line: 345, column: 49, scope: !12618)
!12621 = !DILocation(line: 345, column: 71, scope: !12618)
!12622 = !DILocation(line: 345, column: 94, scope: !12618)
!12623 = !DILocation(line: 345, column: 113, scope: !12618)
!12624 = !DILocation(line: 345, column: 132, scope: !12618)
!12625 = !DILocation(line: 345, column: 162, scope: !12618)
!12626 = !DILocation(line: 346, column: 49, scope: !12618)
!12627 = !DILocation(line: 346, column: 71, scope: !12618)
!12628 = !DILocation(line: 346, column: 94, scope: !12618)
!12629 = !DILocation(line: 346, column: 113, scope: !12618)
!12630 = !DILocation(line: 346, column: 132, scope: !12618)
!12631 = !DILocation(line: 345, column: 8, scope: !12585)
!12632 = !DILocation(line: 354, column: 26, scope: !12633)
!12633 = distinct !DILexicalBlock(scope: !12618, file: !12364, line: 347, column: 5)
!12634 = !DILocation(line: 354, column: 100, scope: !12633)
!12635 = !DILocation(line: 355, column: 24, scope: !12633)
!12636 = !DILocation(line: 355, column: 61, scope: !12633)
!12637 = !DILocation(line: 360, column: 7, scope: !12633)
!12638 = !DILocation(line: 363, column: 7, scope: !12633)
!12639 = !DILocation(line: 367, column: 26, scope: !12640)
!12640 = distinct !DILexicalBlock(scope: !12585, file: !12364, line: 367, column: 8)
!12641 = !DILocation(line: 364, column: 5, scope: !12633)
!12642 = !DILocation(line: 367, column: 48, scope: !12640)
!12643 = !DILocation(line: 367, column: 73, scope: !12640)
!12644 = !DILocation(line: 367, column: 99, scope: !12640)
!12645 = !DILocation(line: 367, column: 118, scope: !12640)
!12646 = !DILocation(line: 367, column: 138, scope: !12640)
!12647 = !DILocation(line: 367, column: 8, scope: !12585)
!12648 = !DILocation(line: 372, column: 26, scope: !12649)
!12649 = distinct !DILexicalBlock(scope: !12640, file: !12364, line: 368, column: 5)
!12650 = !DILocation(line: 373, column: 24, scope: !12649)
!12651 = !DILocation(line: 373, column: 61, scope: !12649)
!12652 = !DILocation(line: 377, column: 7, scope: !12649)
!12653 = !DILocation(line: 381, column: 24, scope: !12654)
!12654 = distinct !DILexicalBlock(scope: !12585, file: !12364, line: 381, column: 8)
!12655 = !DILocation(line: 378, column: 5, scope: !12649)
!12656 = !DILocation(line: 381, column: 45, scope: !12654)
!12657 = !DILocation(line: 381, column: 69, scope: !12654)
!12658 = !DILocation(line: 381, column: 8, scope: !12585)
!12659 = !DILocation(line: 390, column: 7, scope: !12660)
!12660 = distinct !DILexicalBlock(scope: !12654, file: !12364, line: 382, column: 5)
!12661 = !DILocation(line: 391, column: 5, scope: !12660)
!12662 = !DILocation(line: 394, column: 5, scope: !12585)
!12663 = !DILocation(line: 396, column: 17, scope: !12585)
!12664 = !DILocation(line: 398, column: 5, scope: !12585)
!12665 = !DILocation(line: 398, column: 11, scope: !12585)
!12666 = !DILocation(line: 398, column: 51, scope: !12585)
!12667 = !DILocation(line: 400, column: 11, scope: !12668)
!12668 = distinct !DILexicalBlock(scope: !12669, file: !12364, line: 400, column: 10)
!12669 = distinct !DILexicalBlock(scope: !12585, file: !12364, line: 399, column: 5)
!12670 = !DILocation(line: 400, column: 25, scope: !12668)
!12671 = !DILocation(line: 400, column: 39, scope: !12668)
!12672 = !DILocation(line: 400, column: 10, scope: !12669)
!12673 = distinct !{!12673, !12664, !12674}
!12674 = !DILocation(line: 405, column: 5, scope: !12585)
!12675 = !DILocation(line: 411, column: 17, scope: !12676)
!12676 = distinct !DILexicalBlock(scope: !12363, file: !12364, line: 411, column: 6)
!12677 = !DILocation(line: 411, column: 6, scope: !12363)
!12678 = !DILocation(line: 414, column: 5, scope: !12679)
!12679 = distinct !DILexicalBlock(scope: !12676, file: !12364, line: 412, column: 3)
!12680 = !DILocation(line: 416, column: 17, scope: !12679)
!12681 = !DILocation(line: 418, column: 5, scope: !12679)
!12682 = !DILocation(line: 418, column: 11, scope: !12679)
!12683 = !DILocation(line: 420, column: 11, scope: !12684)
!12684 = distinct !DILexicalBlock(scope: !12685, file: !12364, line: 420, column: 10)
!12685 = distinct !DILexicalBlock(scope: !12679, file: !12364, line: 419, column: 5)
!12686 = !DILocation(line: 420, column: 25, scope: !12684)
!12687 = !DILocation(line: 420, column: 39, scope: !12684)
!12688 = !DILocation(line: 420, column: 10, scope: !12685)
!12689 = distinct !{!12689, !12681, !12690}
!12690 = !DILocation(line: 425, column: 5, scope: !12679)
!12691 = !DILocation(line: 432, column: 27, scope: !12692)
!12692 = distinct !DILexicalBlock(scope: !12679, file: !12364, line: 432, column: 8)
!12693 = !DILocation(line: 432, column: 49, scope: !12692)
!12694 = !DILocation(line: 432, column: 71, scope: !12692)
!12695 = !DILocation(line: 432, column: 94, scope: !12692)
!12696 = !DILocation(line: 432, column: 113, scope: !12692)
!12697 = !DILocation(line: 432, column: 132, scope: !12692)
!12698 = !DILocation(line: 432, column: 162, scope: !12692)
!12699 = !DILocation(line: 433, column: 49, scope: !12692)
!12700 = !DILocation(line: 433, column: 71, scope: !12692)
!12701 = !DILocation(line: 433, column: 94, scope: !12692)
!12702 = !DILocation(line: 433, column: 113, scope: !12692)
!12703 = !DILocation(line: 433, column: 132, scope: !12692)
!12704 = !DILocation(line: 432, column: 8, scope: !12679)
!12705 = !DILocation(line: 441, column: 26, scope: !12706)
!12706 = distinct !DILexicalBlock(scope: !12692, file: !12364, line: 434, column: 5)
!12707 = !DILocation(line: 441, column: 100, scope: !12706)
!12708 = !DILocation(line: 445, column: 7, scope: !12706)
!12709 = !DILocation(line: 448, column: 7, scope: !12706)
!12710 = !DILocation(line: 453, column: 26, scope: !12711)
!12711 = distinct !DILexicalBlock(scope: !12679, file: !12364, line: 453, column: 8)
!12712 = !DILocation(line: 449, column: 5, scope: !12706)
!12713 = !DILocation(line: 453, column: 48, scope: !12711)
!12714 = !DILocation(line: 453, column: 71, scope: !12711)
!12715 = !DILocation(line: 453, column: 95, scope: !12711)
!12716 = !DILocation(line: 453, column: 114, scope: !12711)
!12717 = !DILocation(line: 453, column: 134, scope: !12711)
!12718 = !DILocation(line: 453, column: 8, scope: !12679)
!12719 = !DILocation(line: 458, column: 24, scope: !12720)
!12720 = distinct !DILexicalBlock(scope: !12711, file: !12364, line: 454, column: 5)
!12721 = !DILocation(line: 458, column: 61, scope: !12720)
!12722 = !DILocation(line: 462, column: 7, scope: !12720)
!12723 = !DILocation(line: 463, column: 5, scope: !12720)
!12724 = !DILocation(line: 466, column: 5, scope: !12679)
!12725 = !DILocation(line: 468, column: 17, scope: !12679)
!12726 = !DILocation(line: 470, column: 5, scope: !12679)
!12727 = !DILocation(line: 470, column: 11, scope: !12679)
!12728 = !DILocation(line: 470, column: 39, scope: !12679)
!12729 = !DILocation(line: 472, column: 11, scope: !12730)
!12730 = distinct !DILexicalBlock(scope: !12731, file: !12364, line: 472, column: 10)
!12731 = distinct !DILexicalBlock(scope: !12679, file: !12364, line: 471, column: 5)
!12732 = !DILocation(line: 472, column: 25, scope: !12730)
!12733 = !DILocation(line: 472, column: 39, scope: !12730)
!12734 = !DILocation(line: 472, column: 10, scope: !12731)
!12735 = distinct !{!12735, !12726, !12736}
!12736 = !DILocation(line: 477, column: 5, scope: !12679)
!12737 = !DILocation(line: 480, column: 1, scope: !12363)
!12738 = !DISubprogram(name: "HAL_GetTick", scope: !12739, file: !12739, line: 234, type: !7209, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !437)
!12739 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12740 = distinct !DISubprogram(name: "HAL_RCCEx_GetPeriphCLKConfig", scope: !12364, file: !12364, line: 489, type: !12741, scopeLine: 490, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3302, retainedNodes: !12743)
!12741 = !DISubroutineType(types: !12742)
!12742 = !{null, !12368}
!12743 = !{!12744, !12745}
!12744 = !DILocalVariable(name: "PeriphClkInit", arg: 1, scope: !12740, file: !12364, line: 489, type: !12368)
!12745 = !DILocalVariable(name: "tempreg", scope: !12740, file: !12364, line: 491, type: !113)
!12746 = !DILocation(line: 0, scope: !12740)
!12747 = !DILocation(line: 494, column: 18, scope: !12740)
!12748 = !DILocation(line: 494, column: 39, scope: !12740)
!12749 = !DILocation(line: 502, column: 52, scope: !12740)
!12750 = !DILocation(line: 502, column: 63, scope: !12740)
!12751 = !DILocation(line: 502, column: 25, scope: !12740)
!12752 = !DILocation(line: 502, column: 33, scope: !12740)
!12753 = !DILocation(line: 503, column: 52, scope: !12740)
!12754 = !DILocation(line: 503, column: 89, scope: !12740)
!12755 = !DILocation(line: 503, column: 25, scope: !12740)
!12756 = !DILocation(line: 503, column: 33, scope: !12740)
!12757 = !DILocation(line: 504, column: 54, scope: !12740)
!12758 = !DILocation(line: 504, column: 128, scope: !12740)
!12759 = !DILocation(line: 504, column: 25, scope: !12740)
!12760 = !DILocation(line: 504, column: 33, scope: !12740)
!12761 = !DILocation(line: 505, column: 52, scope: !12740)
!12762 = !DILocation(line: 505, column: 89, scope: !12740)
!12763 = !DILocation(line: 505, column: 25, scope: !12740)
!12764 = !DILocation(line: 505, column: 33, scope: !12740)
!12765 = !DILocation(line: 506, column: 52, scope: !12740)
!12766 = !DILocation(line: 506, column: 89, scope: !12740)
!12767 = !DILocation(line: 506, column: 25, scope: !12740)
!12768 = !DILocation(line: 506, column: 33, scope: !12740)
!12769 = !DILocation(line: 508, column: 52, scope: !12740)
!12770 = !DILocation(line: 508, column: 63, scope: !12740)
!12771 = !DILocation(line: 508, column: 25, scope: !12740)
!12772 = !DILocation(line: 508, column: 33, scope: !12740)
!12773 = !DILocation(line: 509, column: 52, scope: !12740)
!12774 = !DILocation(line: 509, column: 89, scope: !12740)
!12775 = !DILocation(line: 509, column: 25, scope: !12740)
!12776 = !DILocation(line: 509, column: 33, scope: !12740)
!12777 = !DILocation(line: 510, column: 54, scope: !12740)
!12778 = !DILocation(line: 510, column: 128, scope: !12740)
!12779 = !DILocation(line: 510, column: 25, scope: !12740)
!12780 = !DILocation(line: 510, column: 33, scope: !12740)
!12781 = !DILocation(line: 511, column: 52, scope: !12740)
!12782 = !DILocation(line: 511, column: 89, scope: !12740)
!12783 = !DILocation(line: 511, column: 25, scope: !12740)
!12784 = !DILocation(line: 511, column: 33, scope: !12740)
!12785 = !DILocation(line: 513, column: 48, scope: !12740)
!12786 = !DILocation(line: 513, column: 56, scope: !12740)
!12787 = !DILocation(line: 513, column: 18, scope: !12740)
!12788 = !DILocation(line: 513, column: 29, scope: !12740)
!12789 = !DILocation(line: 514, column: 48, scope: !12740)
!12790 = !DILocation(line: 514, column: 82, scope: !12740)
!12791 = !DILocation(line: 514, column: 18, scope: !12740)
!12792 = !DILocation(line: 514, column: 29, scope: !12740)
!12793 = !DILocation(line: 517, column: 39, scope: !12740)
!12794 = !DILocation(line: 517, column: 18, scope: !12740)
!12795 = !DILocation(line: 517, column: 37, scope: !12740)
!12796 = !DILocation(line: 520, column: 39, scope: !12740)
!12797 = !DILocation(line: 520, column: 18, scope: !12740)
!12798 = !DILocation(line: 520, column: 37, scope: !12740)
!12799 = !DILocation(line: 523, column: 42, scope: !12740)
!12800 = !DILocation(line: 523, column: 18, scope: !12740)
!12801 = !DILocation(line: 523, column: 40, scope: !12740)
!12802 = !DILocation(line: 526, column: 42, scope: !12740)
!12803 = !DILocation(line: 526, column: 18, scope: !12740)
!12804 = !DILocation(line: 526, column: 40, scope: !12740)
!12805 = !DILocation(line: 529, column: 19, scope: !12740)
!12806 = !DILocation(line: 529, column: 24, scope: !12740)
!12807 = !DILocation(line: 530, column: 67, scope: !12740)
!12808 = !DILocation(line: 530, column: 72, scope: !12740)
!12809 = !DILocation(line: 530, column: 59, scope: !12740)
!12810 = !DILocation(line: 530, column: 18, scope: !12740)
!12811 = !DILocation(line: 530, column: 36, scope: !12740)
!12812 = !DILocation(line: 533, column: 38, scope: !12740)
!12813 = !DILocation(line: 533, column: 18, scope: !12740)
!12814 = !DILocation(line: 533, column: 36, scope: !12740)
!12815 = !DILocation(line: 536, column: 42, scope: !12740)
!12816 = !DILocation(line: 536, column: 18, scope: !12740)
!12817 = !DILocation(line: 536, column: 40, scope: !12740)
!12818 = !DILocation(line: 539, column: 40, scope: !12740)
!12819 = !DILocation(line: 539, column: 18, scope: !12740)
!12820 = !DILocation(line: 539, column: 38, scope: !12740)
!12821 = !DILocation(line: 542, column: 39, scope: !12740)
!12822 = !DILocation(line: 542, column: 18, scope: !12740)
!12823 = !DILocation(line: 542, column: 37, scope: !12740)
!12824 = !DILocation(line: 545, column: 40, scope: !12740)
!12825 = !DILocation(line: 545, column: 18, scope: !12740)
!12826 = !DILocation(line: 545, column: 38, scope: !12740)
!12827 = !DILocation(line: 548, column: 13, scope: !12828)
!12828 = distinct !DILexicalBlock(scope: !12740, file: !12364, line: 548, column: 7)
!12829 = !DILocation(line: 548, column: 7, scope: !12740)
!12830 = !DILocation(line: 550, column: 20, scope: !12831)
!12831 = distinct !DILexicalBlock(scope: !12828, file: !12364, line: 549, column: 3)
!12832 = !DILocation(line: 550, column: 37, scope: !12831)
!12833 = !DILocation(line: 556, column: 1, scope: !12740)
!12834 = distinct !DISubprogram(name: "HAL_RCCEx_GetPeriphCLKFreq", scope: !12364, file: !12364, line: 569, type: !8374, scopeLine: 570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3302, retainedNodes: !12835)
!12835 = !{!12836, !12837, !12838, !12839, !12840, !12841, !12842}
!12836 = !DILocalVariable(name: "PeriphClk", arg: 1, scope: !12834, file: !12364, line: 569, type: !113)
!12837 = !DILocalVariable(name: "tmpreg1", scope: !12834, file: !12364, line: 571, type: !113)
!12838 = !DILocalVariable(name: "frequency", scope: !12834, file: !12364, line: 573, type: !113)
!12839 = !DILocalVariable(name: "vcoinput", scope: !12834, file: !12364, line: 575, type: !113)
!12840 = !DILocalVariable(name: "saiclocksource", scope: !12834, file: !12364, line: 577, type: !113)
!12841 = !DILocalVariable(name: "srcclk", scope: !12834, file: !12364, line: 578, type: !113)
!12842 = !DILocalVariable(name: "vcooutput", scope: !12834, file: !12364, line: 580, type: !113)
!12843 = !DILocation(line: 0, scope: !12834)
!12844 = !DILocation(line: 581, column: 3, scope: !12834)
!12845 = !DILocation(line: 586, column: 29, scope: !12846)
!12846 = distinct !DILexicalBlock(scope: !12847, file: !12364, line: 585, column: 5)
!12847 = distinct !DILexicalBlock(scope: !12834, file: !12364, line: 582, column: 3)
!12848 = !DILocation(line: 588, column: 7, scope: !12846)
!12849 = !DILocation(line: 594, column: 20, scope: !12850)
!12850 = distinct !DILexicalBlock(scope: !12851, file: !12364, line: 594, column: 14)
!12851 = distinct !DILexicalBlock(scope: !12852, file: !12364, line: 591, column: 9)
!12852 = distinct !DILexicalBlock(scope: !12846, file: !12364, line: 589, column: 7)
!12853 = !DILocation(line: 0, scope: !12850)
!12854 = !DILocation(line: 606, column: 27, scope: !12851)
!12855 = !DILocation(line: 606, column: 64, scope: !12851)
!12856 = !DILocation(line: 607, column: 42, scope: !12851)
!12857 = !DILocation(line: 607, column: 79, scope: !12851)
!12858 = !DILocation(line: 607, column: 33, scope: !12851)
!12859 = !DILocation(line: 607, column: 86, scope: !12851)
!12860 = !DILocation(line: 610, column: 29, scope: !12851)
!12861 = !DILocation(line: 610, column: 63, scope: !12851)
!12862 = !DILocation(line: 610, column: 70, scope: !12851)
!12863 = !DILocation(line: 611, column: 32, scope: !12851)
!12864 = !DILocation(line: 612, column: 11, scope: !12851)
!12865 = !DILocation(line: 619, column: 20, scope: !12866)
!12866 = distinct !DILexicalBlock(scope: !12867, file: !12364, line: 619, column: 14)
!12867 = distinct !DILexicalBlock(scope: !12852, file: !12364, line: 616, column: 9)
!12868 = !DILocation(line: 0, scope: !12866)
!12869 = !DILocation(line: 632, column: 27, scope: !12867)
!12870 = !DILocation(line: 632, column: 64, scope: !12867)
!12871 = !DILocation(line: 633, column: 42, scope: !12867)
!12872 = !DILocation(line: 633, column: 79, scope: !12867)
!12873 = !DILocation(line: 633, column: 33, scope: !12867)
!12874 = !DILocation(line: 633, column: 86, scope: !12867)
!12875 = !DILocation(line: 636, column: 28, scope: !12867)
!12876 = !DILocation(line: 636, column: 36, scope: !12867)
!12877 = !DILocation(line: 636, column: 62, scope: !12867)
!12878 = !DILocation(line: 637, column: 32, scope: !12867)
!12879 = !DILocation(line: 638, column: 11, scope: !12867)
!12880 = !DILocation(line: 645, column: 20, scope: !12881)
!12881 = distinct !DILexicalBlock(scope: !12882, file: !12364, line: 645, column: 14)
!12882 = distinct !DILexicalBlock(scope: !12852, file: !12364, line: 642, column: 9)
!12883 = !DILocation(line: 0, scope: !12881)
!12884 = !DILocation(line: 658, column: 27, scope: !12882)
!12885 = !DILocation(line: 658, column: 55, scope: !12882)
!12886 = !DILocation(line: 659, column: 42, scope: !12882)
!12887 = !DILocation(line: 659, column: 70, scope: !12882)
!12888 = !DILocation(line: 659, column: 33, scope: !12882)
!12889 = !DILocation(line: 659, column: 77, scope: !12882)
!12890 = !DILocation(line: 660, column: 11, scope: !12882)
!12891 = !DILocation(line: 665, column: 11, scope: !12892)
!12892 = distinct !DILexicalBlock(scope: !12852, file: !12364, line: 663, column: 9)
!12893 = !DILocation(line: 669, column: 20, scope: !12894)
!12894 = distinct !DILexicalBlock(scope: !12895, file: !12364, line: 669, column: 14)
!12895 = distinct !DILexicalBlock(scope: !12852, file: !12364, line: 668, column: 9)
!12896 = !DILocation(line: 691, column: 16, scope: !12897)
!12897 = distinct !DILexicalBlock(scope: !12847, file: !12364, line: 689, column: 5)
!12898 = !DILocation(line: 692, column: 7, scope: !12897)
!12899 = !DILocation(line: 706, column: 20, scope: !12900)
!12900 = distinct !DILexicalBlock(scope: !12901, file: !12364, line: 706, column: 14)
!12901 = distinct !DILexicalBlock(scope: !12902, file: !12364, line: 703, column: 9)
!12902 = distinct !DILexicalBlock(scope: !12897, file: !12364, line: 693, column: 7)
!12903 = !DILocation(line: 0, scope: !12900)
!12904 = !DILocation(line: 718, column: 53, scope: !12901)
!12905 = !DILocation(line: 718, column: 90, scope: !12901)
!12906 = !DILocation(line: 718, column: 43, scope: !12901)
!12907 = !DILocation(line: 720, column: 53, scope: !12901)
!12908 = !DILocation(line: 720, column: 90, scope: !12901)
!12909 = !DILocation(line: 720, column: 44, scope: !12901)
!12910 = !DILocation(line: 721, column: 11, scope: !12901)
!12911 = !DILocation(line: 728, column: 20, scope: !12912)
!12912 = distinct !DILexicalBlock(scope: !12913, file: !12364, line: 728, column: 14)
!12913 = distinct !DILexicalBlock(scope: !12902, file: !12364, line: 725, column: 9)
!12914 = !DILocation(line: 0, scope: !12912)
!12915 = !DILocation(line: 740, column: 53, scope: !12913)
!12916 = !DILocation(line: 740, column: 81, scope: !12913)
!12917 = !DILocation(line: 740, column: 43, scope: !12913)
!12918 = !DILocation(line: 742, column: 53, scope: !12913)
!12919 = !DILocation(line: 742, column: 81, scope: !12913)
!12920 = !DILocation(line: 742, column: 44, scope: !12913)
!12921 = !DILocation(line: 743, column: 11, scope: !12913)
!12922 = !DILocation(line: 748, column: 20, scope: !12923)
!12923 = distinct !DILexicalBlock(scope: !12924, file: !12364, line: 748, column: 14)
!12924 = distinct !DILexicalBlock(scope: !12902, file: !12364, line: 747, column: 9)
!12925 = !DILocation(line: 770, column: 16, scope: !12926)
!12926 = distinct !DILexicalBlock(scope: !12847, file: !12364, line: 768, column: 5)
!12927 = !DILocation(line: 771, column: 7, scope: !12926)
!12928 = !DILocation(line: 785, column: 20, scope: !12929)
!12929 = distinct !DILexicalBlock(scope: !12930, file: !12364, line: 785, column: 14)
!12930 = distinct !DILexicalBlock(scope: !12931, file: !12364, line: 782, column: 9)
!12931 = distinct !DILexicalBlock(scope: !12926, file: !12364, line: 772, column: 7)
!12932 = !DILocation(line: 0, scope: !12929)
!12933 = !DILocation(line: 797, column: 53, scope: !12930)
!12934 = !DILocation(line: 797, column: 90, scope: !12930)
!12935 = !DILocation(line: 797, column: 43, scope: !12930)
!12936 = !DILocation(line: 799, column: 53, scope: !12930)
!12937 = !DILocation(line: 799, column: 90, scope: !12930)
!12938 = !DILocation(line: 799, column: 44, scope: !12930)
!12939 = !DILocation(line: 800, column: 11, scope: !12930)
!12940 = !DILocation(line: 807, column: 20, scope: !12941)
!12941 = distinct !DILexicalBlock(scope: !12942, file: !12364, line: 807, column: 14)
!12942 = distinct !DILexicalBlock(scope: !12931, file: !12364, line: 804, column: 9)
!12943 = !DILocation(line: 0, scope: !12941)
!12944 = !DILocation(line: 819, column: 53, scope: !12942)
!12945 = !DILocation(line: 819, column: 81, scope: !12942)
!12946 = !DILocation(line: 819, column: 43, scope: !12942)
!12947 = !DILocation(line: 821, column: 53, scope: !12942)
!12948 = !DILocation(line: 821, column: 81, scope: !12942)
!12949 = !DILocation(line: 821, column: 44, scope: !12942)
!12950 = !DILocation(line: 822, column: 11, scope: !12942)
!12951 = !DILocation(line: 827, column: 20, scope: !12952)
!12952 = distinct !DILexicalBlock(scope: !12953, file: !12364, line: 827, column: 14)
!12953 = distinct !DILexicalBlock(scope: !12931, file: !12364, line: 826, column: 9)
!12954 = !DILocation(line: 847, column: 3, scope: !12834)
!12955 = distinct !DISubprogram(name: "HAL_RCCEx_SelectLSEMode", scope: !12364, file: !12364, line: 2766, type: !12956, scopeLine: 2767, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3302, retainedNodes: !12958)
!12956 = !DISubroutineType(types: !12957)
!12957 = !{null, !164}
!12958 = !{!12959}
!12959 = !DILocalVariable(name: "Mode", arg: 1, scope: !12955, file: !12364, line: 2766, type: !164)
!12960 = !DILocation(line: 0, scope: !12955)
!12961 = !DILocation(line: 2770, column: 11, scope: !12962)
!12962 = distinct !DILexicalBlock(scope: !12955, file: !12364, line: 2770, column: 6)
!12963 = !DILocation(line: 0, scope: !12962)
!12964 = !DILocation(line: 2770, column: 6, scope: !12955)
!12965 = !DILocation(line: 2778, column: 1, scope: !12955)
!12966 = distinct !DISubprogram(name: "HAL_RCCEx_EnablePLLI2S", scope: !12364, file: !12364, line: 2803, type: !12967, scopeLine: 2804, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3302, retainedNodes: !12970)
!12967 = !DISubroutineType(types: !12968)
!12968 = !{!12367, !12969}
!12969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12375, size: 32)
!12970 = !{!12971, !12972}
!12971 = !DILocalVariable(name: "PLLI2SInit", arg: 1, scope: !12966, file: !12364, line: 2803, type: !12969)
!12972 = !DILocalVariable(name: "tickstart", scope: !12966, file: !12364, line: 2805, type: !113)
!12973 = !DILocation(line: 0, scope: !12966)
!12974 = !DILocation(line: 2821, column: 3, scope: !12966)
!12975 = !DILocation(line: 2824, column: 15, scope: !12966)
!12976 = !DILocation(line: 2825, column: 3, scope: !12966)
!12977 = !DILocation(line: 2825, column: 9, scope: !12966)
!12978 = !DILocation(line: 2827, column: 9, scope: !12979)
!12979 = distinct !DILexicalBlock(scope: !12980, file: !12364, line: 2827, column: 8)
!12980 = distinct !DILexicalBlock(scope: !12966, file: !12364, line: 2826, column: 3)
!12981 = !DILocation(line: 2827, column: 23, scope: !12979)
!12982 = !DILocation(line: 2827, column: 37, scope: !12979)
!12983 = !DILocation(line: 2827, column: 8, scope: !12980)
!12984 = distinct !{!12984, !12976, !12985}
!12985 = !DILocation(line: 2832, column: 3, scope: !12966)
!12986 = !DILocation(line: 2840, column: 3, scope: !12966)
!12987 = !DILocation(line: 2866, column: 3, scope: !12966)
!12988 = !DILocation(line: 2869, column: 15, scope: !12966)
!12989 = !DILocation(line: 2870, column: 3, scope: !12966)
!12990 = !DILocation(line: 2870, column: 9, scope: !12966)
!12991 = !DILocation(line: 2870, column: 48, scope: !12966)
!12992 = !DILocation(line: 2872, column: 9, scope: !12993)
!12993 = distinct !DILexicalBlock(scope: !12994, file: !12364, line: 2872, column: 8)
!12994 = distinct !DILexicalBlock(scope: !12966, file: !12364, line: 2871, column: 3)
!12995 = !DILocation(line: 2872, column: 23, scope: !12993)
!12996 = !DILocation(line: 2872, column: 37, scope: !12993)
!12997 = !DILocation(line: 2872, column: 8, scope: !12994)
!12998 = distinct !{!12998, !12989, !12999}
!12999 = !DILocation(line: 2877, column: 3, scope: !12966)
!13000 = !DILocation(line: 2880, column: 1, scope: !12966)
!13001 = distinct !DISubprogram(name: "HAL_RCCEx_DisablePLLI2S", scope: !12364, file: !12364, line: 2886, type: !13002, scopeLine: 2887, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3302, retainedNodes: !13004)
!13002 = !DISubroutineType(types: !13003)
!13003 = !{!12367}
!13004 = !{!13005}
!13005 = !DILocalVariable(name: "tickstart", scope: !13001, file: !12364, line: 2888, type: !113)
!13006 = !DILocation(line: 2891, column: 3, scope: !13001)
!13007 = !DILocation(line: 2894, column: 15, scope: !13001)
!13008 = !DILocation(line: 0, scope: !13001)
!13009 = !DILocation(line: 2895, column: 3, scope: !13001)
!13010 = !DILocation(line: 2895, column: 9, scope: !13001)
!13011 = !DILocation(line: 2895, column: 45, scope: !13001)
!13012 = !DILocation(line: 2897, column: 9, scope: !13013)
!13013 = distinct !DILexicalBlock(scope: !13014, file: !12364, line: 2897, column: 8)
!13014 = distinct !DILexicalBlock(scope: !13001, file: !12364, line: 2896, column: 3)
!13015 = !DILocation(line: 2897, column: 23, scope: !13013)
!13016 = !DILocation(line: 2897, column: 36, scope: !13013)
!13017 = !DILocation(line: 2897, column: 8, scope: !13014)
!13018 = distinct !{!13018, !13009, !13019}
!13019 = !DILocation(line: 2902, column: 3, scope: !13001)
!13020 = !DILocation(line: 2905, column: 1, scope: !13001)
!13021 = distinct !DISubprogram(name: "HAL_RCCEx_EnablePLLSAI", scope: !12364, file: !12364, line: 2916, type: !13022, scopeLine: 2917, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3302, retainedNodes: !13025)
!13022 = !DISubroutineType(types: !13023)
!13023 = !{!12367, !13024}
!13024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12384, size: 32)
!13025 = !{!13026, !13027}
!13026 = !DILocalVariable(name: "PLLSAIInit", arg: 1, scope: !13021, file: !12364, line: 2916, type: !13024)
!13027 = !DILocalVariable(name: "tickstart", scope: !13021, file: !12364, line: 2918, type: !113)
!13028 = !DILocation(line: 0, scope: !13021)
!13029 = !DILocation(line: 2934, column: 3, scope: !13021)
!13030 = !DILocation(line: 2937, column: 15, scope: !13021)
!13031 = !DILocation(line: 2938, column: 3, scope: !13021)
!13032 = !DILocation(line: 2938, column: 9, scope: !13021)
!13033 = !DILocation(line: 2940, column: 9, scope: !13034)
!13034 = distinct !DILexicalBlock(scope: !13035, file: !12364, line: 2940, column: 8)
!13035 = distinct !DILexicalBlock(scope: !13021, file: !12364, line: 2939, column: 3)
!13036 = !DILocation(line: 2940, column: 23, scope: !13034)
!13037 = !DILocation(line: 2940, column: 37, scope: !13034)
!13038 = !DILocation(line: 2940, column: 8, scope: !13035)
!13039 = distinct !{!13039, !13031, !13040}
!13040 = !DILocation(line: 2945, column: 3, scope: !13021)
!13041 = !DILocation(line: 2953, column: 3, scope: !13021)
!13042 = !DILocation(line: 2970, column: 3, scope: !13021)
!13043 = !DILocation(line: 2973, column: 15, scope: !13021)
!13044 = !DILocation(line: 2974, column: 3, scope: !13021)
!13045 = !DILocation(line: 2974, column: 9, scope: !13021)
!13046 = !DILocation(line: 2974, column: 37, scope: !13021)
!13047 = !DILocation(line: 2976, column: 9, scope: !13048)
!13048 = distinct !DILexicalBlock(scope: !13049, file: !12364, line: 2976, column: 8)
!13049 = distinct !DILexicalBlock(scope: !13021, file: !12364, line: 2975, column: 3)
!13050 = !DILocation(line: 2976, column: 23, scope: !13048)
!13051 = !DILocation(line: 2976, column: 37, scope: !13048)
!13052 = !DILocation(line: 2976, column: 8, scope: !13049)
!13053 = distinct !{!13053, !13044, !13054}
!13054 = !DILocation(line: 2981, column: 3, scope: !13021)
!13055 = !DILocation(line: 2984, column: 1, scope: !13021)
!13056 = distinct !DISubprogram(name: "HAL_RCCEx_DisablePLLSAI", scope: !12364, file: !12364, line: 2990, type: !13002, scopeLine: 2991, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3302, retainedNodes: !13057)
!13057 = !{!13058}
!13058 = !DILocalVariable(name: "tickstart", scope: !13056, file: !12364, line: 2992, type: !113)
!13059 = !DILocation(line: 2995, column: 3, scope: !13056)
!13060 = !DILocation(line: 2998, column: 15, scope: !13056)
!13061 = !DILocation(line: 0, scope: !13056)
!13062 = !DILocation(line: 2999, column: 3, scope: !13056)
!13063 = !DILocation(line: 2999, column: 9, scope: !13056)
!13064 = !DILocation(line: 3001, column: 9, scope: !13065)
!13065 = distinct !DILexicalBlock(scope: !13066, file: !12364, line: 3001, column: 8)
!13066 = distinct !DILexicalBlock(scope: !13056, file: !12364, line: 3000, column: 3)
!13067 = !DILocation(line: 3001, column: 23, scope: !13065)
!13068 = !DILocation(line: 3001, column: 36, scope: !13065)
!13069 = !DILocation(line: 3001, column: 8, scope: !13066)
!13070 = distinct !{!13070, !13062, !13071}
!13071 = !DILocation(line: 3006, column: 3, scope: !13056)
!13072 = !DILocation(line: 3009, column: 1, scope: !13056)
!13073 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !12364, file: !12364, line: 3051, type: !7209, scopeLine: 3052, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3302, retainedNodes: !13074)
!13074 = !{!13075, !13076, !13077, !13078, !13079}
!13075 = !DILocalVariable(name: "pllm", scope: !13073, file: !12364, line: 3053, type: !113)
!13076 = !DILocalVariable(name: "pllvco", scope: !13073, file: !12364, line: 3054, type: !113)
!13077 = !DILocalVariable(name: "pllp", scope: !13073, file: !12364, line: 3055, type: !113)
!13078 = !DILocalVariable(name: "pllr", scope: !13073, file: !12364, line: 3056, type: !113)
!13079 = !DILocalVariable(name: "sysclockfreq", scope: !13073, file: !12364, line: 3057, type: !113)
!13080 = !DILocation(line: 0, scope: !13073)
!13081 = !DILocation(line: 3060, column: 16, scope: !13073)
!13082 = !DILocation(line: 3060, column: 3, scope: !13073)
!13083 = !DILocation(line: 3076, column: 19, scope: !13084)
!13084 = distinct !DILexicalBlock(scope: !13085, file: !12364, line: 3073, column: 5)
!13085 = distinct !DILexicalBlock(scope: !13073, file: !12364, line: 3061, column: 3)
!13086 = !DILocation(line: 3076, column: 27, scope: !13084)
!13087 = !DILocation(line: 3077, column: 10, scope: !13088)
!13088 = distinct !DILexicalBlock(scope: !13084, file: !12364, line: 3077, column: 10)
!13089 = !DILocation(line: 0, scope: !13088)
!13090 = !DILocation(line: 3087, column: 23, scope: !13084)
!13091 = !DILocation(line: 3087, column: 82, scope: !13084)
!13092 = !DILocation(line: 3089, column: 28, scope: !13084)
!13093 = !DILocation(line: 3090, column: 7, scope: !13084)
!13094 = !DILocation(line: 3096, column: 19, scope: !13095)
!13095 = distinct !DILexicalBlock(scope: !13085, file: !12364, line: 3093, column: 5)
!13096 = !DILocation(line: 3096, column: 27, scope: !13095)
!13097 = !DILocation(line: 3097, column: 10, scope: !13098)
!13098 = distinct !DILexicalBlock(scope: !13095, file: !12364, line: 3097, column: 10)
!13099 = !DILocation(line: 0, scope: !13098)
!13100 = !DILocation(line: 3107, column: 21, scope: !13095)
!13101 = !DILocation(line: 3107, column: 49, scope: !13095)
!13102 = !DILocation(line: 3109, column: 28, scope: !13095)
!13103 = !DILocation(line: 3110, column: 7, scope: !13095)
!13104 = !DILocation(line: 0, scope: !13085)
!13105 = !DILocation(line: 3118, column: 3, scope: !13073)
!13106 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !12364, file: !12364, line: 3143, type: !13002, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3302, retainedNodes: !13107)
!13107 = !{!13108}
!13108 = !DILocalVariable(name: "tickstart", scope: !13106, file: !12364, line: 3145, type: !113)
!13109 = !DILocation(line: 3148, column: 15, scope: !13106)
!13110 = !DILocation(line: 0, scope: !13106)
!13111 = !DILocation(line: 3151, column: 3, scope: !13106)
!13112 = !DILocation(line: 3154, column: 3, scope: !13106)
!13113 = !DILocation(line: 3154, column: 10, scope: !13106)
!13114 = !DILocation(line: 3154, column: 43, scope: !13106)
!13115 = !DILocation(line: 3156, column: 10, scope: !13116)
!13116 = distinct !DILexicalBlock(scope: !13117, file: !12364, line: 3156, column: 9)
!13117 = distinct !DILexicalBlock(scope: !13106, file: !12364, line: 3155, column: 3)
!13118 = !DILocation(line: 3156, column: 24, scope: !13116)
!13119 = !DILocation(line: 3156, column: 37, scope: !13116)
!13120 = !DILocation(line: 3156, column: 9, scope: !13117)
!13121 = distinct !{!13121, !13112, !13122}
!13122 = !DILocation(line: 3160, column: 3, scope: !13106)
!13123 = !DILocation(line: 3163, column: 3, scope: !13106)
!13124 = !DILocation(line: 3166, column: 15, scope: !13106)
!13125 = !DILocation(line: 3169, column: 3, scope: !13106)
!13126 = !DILocation(line: 3172, column: 3, scope: !13106)
!13127 = !DILocation(line: 3172, column: 10, scope: !13106)
!13128 = !DILocation(line: 3172, column: 44, scope: !13106)
!13129 = !DILocation(line: 3174, column: 24, scope: !13130)
!13130 = distinct !DILexicalBlock(scope: !13131, file: !12364, line: 3174, column: 9)
!13131 = distinct !DILexicalBlock(scope: !13106, file: !12364, line: 3173, column: 3)
!13132 = !DILocation(line: 3174, column: 37, scope: !13130)
!13133 = !DILocation(line: 3174, column: 9, scope: !13131)
!13134 = distinct !{!13134, !13126, !13135}
!13135 = !DILocation(line: 3178, column: 3, scope: !13106)
!13136 = !DILocation(line: 3184, column: 3, scope: !13106)
!13137 = !DILocation(line: 3187, column: 3, scope: !13106)
!13138 = !DILocation(line: 3187, column: 10, scope: !13106)
!13139 = !DILocation(line: 3187, column: 43, scope: !13106)
!13140 = !DILocation(line: 3189, column: 24, scope: !13141)
!13141 = distinct !DILexicalBlock(scope: !13142, file: !12364, line: 3189, column: 9)
!13142 = distinct !DILexicalBlock(scope: !13106, file: !12364, line: 3188, column: 3)
!13143 = !DILocation(line: 3189, column: 37, scope: !13141)
!13144 = !DILocation(line: 3189, column: 9, scope: !13142)
!13145 = distinct !{!13145, !13137, !13146}
!13146 = !DILocation(line: 3193, column: 3, scope: !13106)
!13147 = !DILocation(line: 3199, column: 3, scope: !13106)
!13148 = !DILocation(line: 3202, column: 3, scope: !13106)
!13149 = !DILocation(line: 3202, column: 10, scope: !13106)
!13150 = !DILocation(line: 3202, column: 43, scope: !13106)
!13151 = !DILocation(line: 3204, column: 24, scope: !13152)
!13152 = distinct !DILexicalBlock(scope: !13153, file: !12364, line: 3204, column: 9)
!13153 = distinct !DILexicalBlock(scope: !13106, file: !12364, line: 3203, column: 3)
!13154 = !DILocation(line: 3204, column: 37, scope: !13152)
!13155 = !DILocation(line: 3204, column: 9, scope: !13153)
!13156 = distinct !{!13156, !13148, !13157}
!13157 = !DILocation(line: 3208, column: 3, scope: !13106)
!13158 = !DILocation(line: 3215, column: 3, scope: !13106)
!13159 = !DILocation(line: 3218, column: 3, scope: !13106)
!13160 = !DILocation(line: 3218, column: 10, scope: !13106)
!13161 = !DILocation(line: 3218, column: 46, scope: !13106)
!13162 = !DILocation(line: 3220, column: 24, scope: !13163)
!13163 = distinct !DILexicalBlock(scope: !13164, file: !12364, line: 3220, column: 9)
!13164 = distinct !DILexicalBlock(scope: !13106, file: !12364, line: 3219, column: 3)
!13165 = !DILocation(line: 3220, column: 37, scope: !13163)
!13166 = !DILocation(line: 3220, column: 9, scope: !13164)
!13167 = distinct !{!13167, !13159, !13168}
!13168 = !DILocation(line: 3224, column: 3, scope: !13106)
!13169 = !DILocation(line: 3232, column: 3, scope: !13106)
!13170 = !DILocation(line: 3235, column: 3, scope: !13106)
!13171 = !DILocation(line: 3235, column: 10, scope: !13106)
!13172 = !DILocation(line: 3235, column: 46, scope: !13106)
!13173 = !DILocation(line: 3237, column: 10, scope: !13174)
!13174 = distinct !DILexicalBlock(scope: !13175, file: !12364, line: 3237, column: 9)
!13175 = distinct !DILexicalBlock(scope: !13106, file: !12364, line: 3236, column: 3)
!13176 = !DILocation(line: 3237, column: 24, scope: !13174)
!13177 = !DILocation(line: 3237, column: 37, scope: !13174)
!13178 = !DILocation(line: 3237, column: 9, scope: !13175)
!13179 = distinct !{!13179, !13170, !13180}
!13180 = !DILocation(line: 3241, column: 3, scope: !13106)
!13181 = !DILocation(line: 3247, column: 16, scope: !13106)
!13182 = !DILocation(line: 3257, column: 19, scope: !13106)
!13183 = !DILocation(line: 3270, column: 19, scope: !13106)
!13184 = !DILocation(line: 3274, column: 3, scope: !13106)
!13185 = !DILocation(line: 3277, column: 3, scope: !13106)
!13186 = !DILocation(line: 3281, column: 3, scope: !13106)
!13187 = !DILocation(line: 3285, column: 3, scope: !13106)
!13188 = !DILocation(line: 3288, column: 3, scope: !13106)
!13189 = !DILocation(line: 3292, column: 3, scope: !13106)
!13190 = !DILocation(line: 3296, column: 3, scope: !13106)
!13191 = !DILocation(line: 3299, column: 3, scope: !13106)
!13192 = !DILocation(line: 3302, column: 19, scope: !13106)
!13193 = !DILocation(line: 3305, column: 19, scope: !13194)
!13194 = distinct !DILexicalBlock(scope: !13106, file: !12364, line: 3305, column: 6)
!13195 = !DILocation(line: 3305, column: 6, scope: !13194)
!13196 = !DILocation(line: 3305, column: 31, scope: !13194)
!13197 = !DILocation(line: 0, scope: !13194)
!13198 = !DILocation(line: 3313, column: 1, scope: !13106)
!13199 = !DISubprogram(name: "HAL_InitTick", scope: !12739, file: !12739, line: 223, type: !13200, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !437)
!13200 = !DISubroutineType(types: !13201)
!13201 = !{!12367, !113}
!13202 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !12364, file: !12364, line: 3333, type: !13203, scopeLine: 3334, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3302, retainedNodes: !13227)
!13203 = !DISubroutineType(types: !13204)
!13204 = !{!12367, !13205}
!13205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13206, size: 32)
!13206 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !13207, line: 70, baseType: !13208)
!13207 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13208 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13207, line: 49, size: 416, elements: !13209)
!13209 = !{!13210, !13211, !13212, !13213, !13214, !13215, !13216}
!13210 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !13208, file: !13207, line: 51, baseType: !113, size: 32)
!13211 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !13208, file: !13207, line: 54, baseType: !113, size: 32, offset: 32)
!13212 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !13208, file: !13207, line: 57, baseType: !113, size: 32, offset: 64)
!13213 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !13208, file: !13207, line: 60, baseType: !113, size: 32, offset: 96)
!13214 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !13208, file: !13207, line: 63, baseType: !113, size: 32, offset: 128)
!13215 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !13208, file: !13207, line: 66, baseType: !113, size: 32, offset: 160)
!13216 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !13208, file: !13207, line: 69, baseType: !13217, size: 224, offset: 192)
!13217 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !12370, line: 73, baseType: !13218)
!13218 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12370, line: 45, size: 224, elements: !13219)
!13219 = !{!13220, !13221, !13222, !13223, !13224, !13225, !13226}
!13220 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !13218, file: !12370, line: 47, baseType: !113, size: 32)
!13221 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !13218, file: !12370, line: 50, baseType: !113, size: 32, offset: 32)
!13222 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !13218, file: !12370, line: 53, baseType: !113, size: 32, offset: 64)
!13223 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !13218, file: !12370, line: 56, baseType: !113, size: 32, offset: 96)
!13224 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !13218, file: !12370, line: 60, baseType: !113, size: 32, offset: 128)
!13225 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !13218, file: !12370, line: 63, baseType: !113, size: 32, offset: 160)
!13226 = !DIDerivedType(tag: DW_TAG_member, name: "PLLR", scope: !13218, file: !12370, line: 68, baseType: !113, size: 32, offset: 192)
!13227 = !{!13228, !13229, !13230, !13231, !13235}
!13228 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !13202, file: !12364, line: 3333, type: !13205)
!13229 = !DILocalVariable(name: "tickstart", scope: !13202, file: !12364, line: 3335, type: !113)
!13230 = !DILocalVariable(name: "pll_config", scope: !13202, file: !12364, line: 3335, type: !113)
!13231 = !DILocalVariable(name: "pwrclkchanged", scope: !13232, file: !12364, line: 3517, type: !13234)
!13232 = distinct !DILexicalBlock(scope: !13233, file: !12364, line: 3516, column: 3)
!13233 = distinct !DILexicalBlock(scope: !13202, file: !12364, line: 3515, column: 6)
!13234 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !1190, line: 188, baseType: !3312)
!13235 = !DILocalVariable(name: "tmpreg", scope: !13236, file: !12364, line: 3526, type: !576)
!13236 = distinct !DILexicalBlock(scope: !13237, file: !12364, line: 3526, column: 7)
!13237 = distinct !DILexicalBlock(scope: !13238, file: !12364, line: 3525, column: 5)
!13238 = distinct !DILexicalBlock(scope: !13232, file: !12364, line: 3524, column: 8)
!13239 = !DILocation(line: 0, scope: !13202)
!13240 = !DILocation(line: 3338, column: 24, scope: !13241)
!13241 = distinct !DILexicalBlock(scope: !13202, file: !12364, line: 3338, column: 6)
!13242 = !DILocation(line: 3338, column: 6, scope: !13202)
!13243 = !DILocation(line: 3346, column: 27, scope: !13244)
!13244 = distinct !DILexicalBlock(scope: !13202, file: !12364, line: 3346, column: 6)
!13245 = !DILocation(line: 3346, column: 43, scope: !13244)
!13246 = !DILocation(line: 3346, column: 69, scope: !13244)
!13247 = !DILocation(line: 3346, column: 6, scope: !13202)
!13248 = !DILocation(line: 3352, column: 9, scope: !13249)
!13249 = distinct !DILexicalBlock(scope: !13250, file: !12364, line: 3352, column: 8)
!13250 = distinct !DILexicalBlock(scope: !13244, file: !12364, line: 3347, column: 3)
!13251 = !DILocation(line: 3352, column: 39, scope: !13249)
!13252 = !DILocation(line: 3352, column: 128, scope: !13249)
!13253 = !DILocation(line: 3353, column: 9, scope: !13249)
!13254 = !DILocation(line: 3353, column: 39, scope: !13249)
!13255 = !DILocation(line: 3353, column: 60, scope: !13249)
!13256 = !DILocation(line: 3353, column: 70, scope: !13249)
!13257 = !DILocation(line: 3353, column: 78, scope: !13249)
!13258 = !DILocation(line: 3353, column: 100, scope: !13249)
!13259 = !DILocation(line: 3353, column: 128, scope: !13249)
!13260 = !DILocation(line: 3354, column: 9, scope: !13249)
!13261 = !DILocation(line: 3354, column: 39, scope: !13249)
!13262 = !DILocation(line: 3354, column: 61, scope: !13249)
!13263 = !DILocation(line: 3354, column: 71, scope: !13249)
!13264 = !DILocation(line: 3354, column: 79, scope: !13249)
!13265 = !DILocation(line: 3354, column: 101, scope: !13249)
!13266 = !DILocation(line: 3352, column: 8, scope: !13250)
!13267 = !DILocation(line: 3360, column: 11, scope: !13268)
!13268 = distinct !DILexicalBlock(scope: !13269, file: !12364, line: 3360, column: 10)
!13269 = distinct !DILexicalBlock(scope: !13249, file: !12364, line: 3359, column: 5)
!13270 = !DILocation(line: 3360, column: 57, scope: !13268)
!13271 = !DILocation(line: 3360, column: 80, scope: !13268)
!13272 = !DILocation(line: 3360, column: 89, scope: !13268)
!13273 = !DILocation(line: 3360, column: 10, scope: !13269)
!13274 = !DILocation(line: 3368, column: 7, scope: !13275)
!13275 = distinct !DILexicalBlock(scope: !13276, file: !12364, line: 3368, column: 7)
!13276 = distinct !DILexicalBlock(scope: !13277, file: !12364, line: 3368, column: 7)
!13277 = distinct !DILexicalBlock(scope: !13249, file: !12364, line: 3366, column: 5)
!13278 = !DILocation(line: 3368, column: 7, scope: !13276)
!13279 = !DILocation(line: 3368, column: 7, scope: !13280)
!13280 = distinct !DILexicalBlock(scope: !13275, file: !12364, line: 3368, column: 7)
!13281 = !DILocation(line: 3368, column: 7, scope: !13282)
!13282 = distinct !DILexicalBlock(scope: !13283, file: !12364, line: 3368, column: 7)
!13283 = distinct !DILexicalBlock(scope: !13275, file: !12364, line: 3368, column: 7)
!13284 = !DILocation(line: 3368, column: 7, scope: !13285)
!13285 = distinct !DILexicalBlock(scope: !13283, file: !12364, line: 3368, column: 7)
!13286 = !DILocation(line: 0, scope: !13275)
!13287 = !DILocation(line: 3371, column: 30, scope: !13288)
!13288 = distinct !DILexicalBlock(scope: !13277, file: !12364, line: 3371, column: 10)
!13289 = !DILocation(line: 3371, column: 40, scope: !13288)
!13290 = !DILocation(line: 0, scope: !13288)
!13291 = !DILocation(line: 3371, column: 10, scope: !13277)
!13292 = !DILocation(line: 3377, column: 15, scope: !13293)
!13293 = distinct !DILexicalBlock(scope: !13288, file: !12364, line: 3372, column: 7)
!13294 = !DILocation(line: 3377, column: 51, scope: !13293)
!13295 = !DILocation(line: 3377, column: 9, scope: !13293)
!13296 = !DILocation(line: 3379, column: 15, scope: !13297)
!13297 = distinct !DILexicalBlock(scope: !13298, file: !12364, line: 3379, column: 14)
!13298 = distinct !DILexicalBlock(scope: !13293, file: !12364, line: 3378, column: 9)
!13299 = !DILocation(line: 3379, column: 29, scope: !13297)
!13300 = !DILocation(line: 3379, column: 43, scope: !13297)
!13301 = !DILocation(line: 3379, column: 14, scope: !13298)
!13302 = distinct !{!13302, !13295, !13303}
!13303 = !DILocation(line: 3383, column: 9, scope: !13293)
!13304 = !DILocation(line: 3391, column: 15, scope: !13305)
!13305 = distinct !DILexicalBlock(scope: !13288, file: !12364, line: 3386, column: 7)
!13306 = !DILocation(line: 3391, column: 9, scope: !13305)
!13307 = !DILocation(line: 3393, column: 15, scope: !13308)
!13308 = distinct !DILexicalBlock(scope: !13309, file: !12364, line: 3393, column: 14)
!13309 = distinct !DILexicalBlock(scope: !13305, file: !12364, line: 3392, column: 9)
!13310 = !DILocation(line: 3393, column: 29, scope: !13308)
!13311 = !DILocation(line: 3393, column: 43, scope: !13308)
!13312 = !DILocation(line: 3393, column: 14, scope: !13309)
!13313 = distinct !{!13313, !13306, !13314}
!13314 = !DILocation(line: 3397, column: 9, scope: !13305)
!13315 = !DILocation(line: 3402, column: 27, scope: !13316)
!13316 = distinct !DILexicalBlock(scope: !13202, file: !12364, line: 3402, column: 6)
!13317 = !DILocation(line: 3402, column: 43, scope: !13316)
!13318 = !DILocation(line: 3402, column: 69, scope: !13316)
!13319 = !DILocation(line: 3402, column: 6, scope: !13202)
!13320 = !DILocation(line: 3410, column: 9, scope: !13321)
!13321 = distinct !DILexicalBlock(scope: !13322, file: !12364, line: 3410, column: 8)
!13322 = distinct !DILexicalBlock(scope: !13316, file: !12364, line: 3403, column: 3)
!13323 = !DILocation(line: 3410, column: 39, scope: !13321)
!13324 = !DILocation(line: 3410, column: 128, scope: !13321)
!13325 = !DILocation(line: 3411, column: 9, scope: !13321)
!13326 = !DILocation(line: 3411, column: 39, scope: !13321)
!13327 = !DILocation(line: 3411, column: 60, scope: !13321)
!13328 = !DILocation(line: 3411, column: 70, scope: !13321)
!13329 = !DILocation(line: 3411, column: 78, scope: !13321)
!13330 = !DILocation(line: 3411, column: 100, scope: !13321)
!13331 = !DILocation(line: 3411, column: 128, scope: !13321)
!13332 = !DILocation(line: 3412, column: 9, scope: !13321)
!13333 = !DILocation(line: 3412, column: 39, scope: !13321)
!13334 = !DILocation(line: 3412, column: 61, scope: !13321)
!13335 = !DILocation(line: 3412, column: 71, scope: !13321)
!13336 = !DILocation(line: 3412, column: 79, scope: !13321)
!13337 = !DILocation(line: 3412, column: 101, scope: !13321)
!13338 = !DILocation(line: 3410, column: 8, scope: !13322)
!13339 = !DILocation(line: 3419, column: 11, scope: !13340)
!13340 = distinct !DILexicalBlock(scope: !13341, file: !12364, line: 3419, column: 10)
!13341 = distinct !DILexicalBlock(scope: !13321, file: !12364, line: 3417, column: 5)
!13342 = !DILocation(line: 3419, column: 57, scope: !13340)
!13343 = !DILocation(line: 3419, column: 80, scope: !13340)
!13344 = !DILocation(line: 3419, column: 89, scope: !13340)
!13345 = !DILocation(line: 3419, column: 10, scope: !13341)
!13346 = !DILocation(line: 3433, column: 30, scope: !13347)
!13347 = distinct !DILexicalBlock(scope: !13348, file: !12364, line: 3433, column: 10)
!13348 = distinct !DILexicalBlock(scope: !13321, file: !12364, line: 3431, column: 5)
!13349 = !DILocation(line: 3433, column: 39, scope: !13347)
!13350 = !DILocation(line: 3433, column: 10, scope: !13348)
!13351 = !DILocation(line: 3436, column: 9, scope: !13352)
!13352 = distinct !DILexicalBlock(scope: !13347, file: !12364, line: 3434, column: 7)
!13353 = !DILocation(line: 3439, column: 21, scope: !13352)
!13354 = !DILocation(line: 3442, column: 9, scope: !13352)
!13355 = !DILocation(line: 3442, column: 15, scope: !13352)
!13356 = !DILocation(line: 3442, column: 51, scope: !13352)
!13357 = !DILocation(line: 3444, column: 15, scope: !13358)
!13358 = distinct !DILexicalBlock(scope: !13359, file: !12364, line: 3444, column: 14)
!13359 = distinct !DILexicalBlock(scope: !13352, file: !12364, line: 3443, column: 9)
!13360 = !DILocation(line: 3444, column: 29, scope: !13358)
!13361 = !DILocation(line: 3444, column: 43, scope: !13358)
!13362 = !DILocation(line: 3444, column: 14, scope: !13359)
!13363 = distinct !{!13363, !13354, !13364}
!13364 = !DILocation(line: 3448, column: 9, scope: !13352)
!13365 = !DILocation(line: 3456, column: 9, scope: !13366)
!13366 = distinct !DILexicalBlock(scope: !13347, file: !12364, line: 3454, column: 7)
!13367 = !DILocation(line: 3459, column: 21, scope: !13366)
!13368 = !DILocation(line: 3462, column: 9, scope: !13366)
!13369 = !DILocation(line: 3462, column: 15, scope: !13366)
!13370 = !DILocation(line: 3464, column: 15, scope: !13371)
!13371 = distinct !DILexicalBlock(scope: !13372, file: !12364, line: 3464, column: 14)
!13372 = distinct !DILexicalBlock(scope: !13366, file: !12364, line: 3463, column: 9)
!13373 = !DILocation(line: 3464, column: 29, scope: !13371)
!13374 = !DILocation(line: 3464, column: 43, scope: !13371)
!13375 = !DILocation(line: 3464, column: 14, scope: !13372)
!13376 = distinct !{!13376, !13368, !13377}
!13377 = !DILocation(line: 3468, column: 9, scope: !13366)
!13378 = !DILocation(line: 0, scope: !13321)
!13379 = !DILocation(line: 3473, column: 27, scope: !13380)
!13380 = distinct !DILexicalBlock(scope: !13202, file: !12364, line: 3473, column: 6)
!13381 = !DILocation(line: 3473, column: 43, scope: !13380)
!13382 = !DILocation(line: 3473, column: 69, scope: !13380)
!13383 = !DILocation(line: 3473, column: 6, scope: !13202)
!13384 = !DILocation(line: 3479, column: 28, scope: !13385)
!13385 = distinct !DILexicalBlock(scope: !13386, file: !12364, line: 3479, column: 8)
!13386 = distinct !DILexicalBlock(scope: !13380, file: !12364, line: 3474, column: 3)
!13387 = !DILocation(line: 3479, column: 37, scope: !13385)
!13388 = !DILocation(line: 3479, column: 8, scope: !13386)
!13389 = !DILocation(line: 3482, column: 7, scope: !13390)
!13390 = distinct !DILexicalBlock(scope: !13385, file: !12364, line: 3480, column: 5)
!13391 = !DILocation(line: 3485, column: 19, scope: !13390)
!13392 = !DILocation(line: 3488, column: 7, scope: !13390)
!13393 = !DILocation(line: 3488, column: 13, scope: !13390)
!13394 = !DILocation(line: 3488, column: 49, scope: !13390)
!13395 = !DILocation(line: 3490, column: 13, scope: !13396)
!13396 = distinct !DILexicalBlock(scope: !13397, file: !12364, line: 3490, column: 12)
!13397 = distinct !DILexicalBlock(scope: !13390, file: !12364, line: 3489, column: 7)
!13398 = !DILocation(line: 3490, column: 27, scope: !13396)
!13399 = !DILocation(line: 3490, column: 41, scope: !13396)
!13400 = !DILocation(line: 3490, column: 12, scope: !13397)
!13401 = distinct !{!13401, !13392, !13402}
!13402 = !DILocation(line: 3494, column: 7, scope: !13390)
!13403 = !DILocation(line: 3499, column: 7, scope: !13404)
!13404 = distinct !DILexicalBlock(scope: !13385, file: !12364, line: 3497, column: 5)
!13405 = !DILocation(line: 3502, column: 19, scope: !13404)
!13406 = !DILocation(line: 3505, column: 7, scope: !13404)
!13407 = !DILocation(line: 3505, column: 13, scope: !13404)
!13408 = !DILocation(line: 3507, column: 13, scope: !13409)
!13409 = distinct !DILexicalBlock(scope: !13410, file: !12364, line: 3507, column: 12)
!13410 = distinct !DILexicalBlock(scope: !13404, file: !12364, line: 3506, column: 7)
!13411 = !DILocation(line: 3507, column: 27, scope: !13409)
!13412 = !DILocation(line: 3507, column: 41, scope: !13409)
!13413 = !DILocation(line: 3507, column: 12, scope: !13410)
!13414 = distinct !{!13414, !13406, !13415}
!13415 = !DILocation(line: 3511, column: 7, scope: !13404)
!13416 = !DILocation(line: 3515, column: 27, scope: !13233)
!13417 = !DILocation(line: 3515, column: 43, scope: !13233)
!13418 = !DILocation(line: 3515, column: 69, scope: !13233)
!13419 = !DILocation(line: 3515, column: 6, scope: !13202)
!13420 = !DILocation(line: 0, scope: !13232)
!13421 = !DILocation(line: 3524, column: 8, scope: !13238)
!13422 = !DILocation(line: 3524, column: 8, scope: !13232)
!13423 = !DILocation(line: 3526, column: 7, scope: !13236)
!13424 = !DILocation(line: 3526, column: 7, scope: !13237)
!13425 = !DILocation(line: 3528, column: 5, scope: !13237)
!13426 = !DILocation(line: 3530, column: 8, scope: !13427)
!13427 = distinct !DILexicalBlock(scope: !13232, file: !12364, line: 3530, column: 8)
!13428 = !DILocation(line: 3530, column: 8, scope: !13232)
!13429 = !DILocation(line: 3533, column: 7, scope: !13430)
!13430 = distinct !DILexicalBlock(scope: !13427, file: !12364, line: 3531, column: 5)
!13431 = !DILocation(line: 3536, column: 19, scope: !13430)
!13432 = !DILocation(line: 3538, column: 7, scope: !13430)
!13433 = !DILocation(line: 3538, column: 13, scope: !13430)
!13434 = !DILocation(line: 3540, column: 13, scope: !13435)
!13435 = distinct !DILexicalBlock(scope: !13436, file: !12364, line: 3540, column: 12)
!13436 = distinct !DILexicalBlock(scope: !13430, file: !12364, line: 3539, column: 7)
!13437 = !DILocation(line: 3540, column: 27, scope: !13435)
!13438 = !DILocation(line: 3540, column: 40, scope: !13435)
!13439 = !DILocation(line: 3540, column: 12, scope: !13436)
!13440 = distinct !{!13440, !13432, !13441}
!13441 = !DILocation(line: 3544, column: 7, scope: !13430)
!13442 = !DILocation(line: 3548, column: 5, scope: !13443)
!13443 = distinct !DILexicalBlock(scope: !13444, file: !12364, line: 3548, column: 5)
!13444 = distinct !DILexicalBlock(scope: !13232, file: !12364, line: 3548, column: 5)
!13445 = !DILocation(line: 3548, column: 5, scope: !13444)
!13446 = !DILocation(line: 3548, column: 5, scope: !13447)
!13447 = distinct !DILexicalBlock(scope: !13443, file: !12364, line: 3548, column: 5)
!13448 = !DILocation(line: 3548, column: 5, scope: !13449)
!13449 = distinct !DILexicalBlock(scope: !13450, file: !12364, line: 3548, column: 5)
!13450 = distinct !DILexicalBlock(scope: !13443, file: !12364, line: 3548, column: 5)
!13451 = !DILocation(line: 3548, column: 5, scope: !13452)
!13452 = distinct !DILexicalBlock(scope: !13450, file: !12364, line: 3548, column: 5)
!13453 = !DILocation(line: 0, scope: !13443)
!13454 = !DILocation(line: 3550, column: 28, scope: !13455)
!13455 = distinct !DILexicalBlock(scope: !13232, file: !12364, line: 3550, column: 8)
!13456 = !DILocation(line: 3550, column: 38, scope: !13455)
!13457 = !DILocation(line: 0, scope: !13455)
!13458 = !DILocation(line: 3550, column: 8, scope: !13232)
!13459 = !DILocation(line: 3556, column: 13, scope: !13460)
!13460 = distinct !DILexicalBlock(scope: !13455, file: !12364, line: 3551, column: 5)
!13461 = !DILocation(line: 3556, column: 49, scope: !13460)
!13462 = !DILocation(line: 3556, column: 7, scope: !13460)
!13463 = !DILocation(line: 3558, column: 13, scope: !13464)
!13464 = distinct !DILexicalBlock(scope: !13465, file: !12364, line: 3558, column: 12)
!13465 = distinct !DILexicalBlock(scope: !13460, file: !12364, line: 3557, column: 7)
!13466 = !DILocation(line: 3558, column: 27, scope: !13464)
!13467 = !DILocation(line: 3558, column: 41, scope: !13464)
!13468 = !DILocation(line: 3558, column: 12, scope: !13465)
!13469 = distinct !{!13469, !13462, !13470}
!13470 = !DILocation(line: 3562, column: 7, scope: !13460)
!13471 = !DILocation(line: 3570, column: 13, scope: !13472)
!13472 = distinct !DILexicalBlock(scope: !13455, file: !12364, line: 3565, column: 5)
!13473 = !DILocation(line: 3570, column: 7, scope: !13472)
!13474 = !DILocation(line: 3572, column: 13, scope: !13475)
!13475 = distinct !DILexicalBlock(scope: !13476, file: !12364, line: 3572, column: 12)
!13476 = distinct !DILexicalBlock(scope: !13472, file: !12364, line: 3571, column: 7)
!13477 = !DILocation(line: 3572, column: 27, scope: !13475)
!13478 = !DILocation(line: 3572, column: 41, scope: !13475)
!13479 = !DILocation(line: 3572, column: 12, scope: !13476)
!13480 = distinct !{!13480, !13473, !13481}
!13481 = !DILocation(line: 3576, column: 7, scope: !13472)
!13482 = !DILocation(line: 3580, column: 8, scope: !13232)
!13483 = !DILocation(line: 3582, column: 7, scope: !13484)
!13484 = distinct !DILexicalBlock(scope: !13485, file: !12364, line: 3581, column: 5)
!13485 = distinct !DILexicalBlock(scope: !13232, file: !12364, line: 3580, column: 8)
!13486 = !DILocation(line: 3583, column: 5, scope: !13484)
!13487 = !DILocation(line: 3588, column: 31, scope: !13488)
!13488 = distinct !DILexicalBlock(scope: !13202, file: !12364, line: 3588, column: 7)
!13489 = !DILocation(line: 3588, column: 41, scope: !13488)
!13490 = !DILocation(line: 3588, column: 7, scope: !13202)
!13491 = !DILocation(line: 3591, column: 8, scope: !13492)
!13492 = distinct !DILexicalBlock(scope: !13493, file: !12364, line: 3591, column: 8)
!13493 = distinct !DILexicalBlock(scope: !13488, file: !12364, line: 3589, column: 3)
!13494 = !DILocation(line: 3591, column: 38, scope: !13492)
!13495 = !DILocation(line: 3591, column: 8, scope: !13493)
!13496 = !DILocation(line: 3593, column: 44, scope: !13497)
!13497 = distinct !DILexicalBlock(scope: !13498, file: !12364, line: 3593, column: 10)
!13498 = distinct !DILexicalBlock(scope: !13492, file: !12364, line: 3592, column: 5)
!13499 = !DILocation(line: 0, scope: !13497)
!13500 = !DILocation(line: 3593, column: 10, scope: !13498)
!13501 = !DILocation(line: 3610, column: 15, scope: !13502)
!13502 = distinct !DILexicalBlock(scope: !13497, file: !12364, line: 3594, column: 7)
!13503 = !DILocation(line: 3610, column: 9, scope: !13502)
!13504 = !DILocation(line: 3612, column: 15, scope: !13505)
!13505 = distinct !DILexicalBlock(scope: !13506, file: !12364, line: 3612, column: 14)
!13506 = distinct !DILexicalBlock(scope: !13502, file: !12364, line: 3611, column: 9)
!13507 = !DILocation(line: 3612, column: 29, scope: !13505)
!13508 = !DILocation(line: 3612, column: 43, scope: !13505)
!13509 = !DILocation(line: 3612, column: 14, scope: !13506)
!13510 = distinct !{!13510, !13503, !13511}
!13511 = !DILocation(line: 3616, column: 9, scope: !13502)
!13512 = !DILocation(line: 3619, column: 9, scope: !13502)
!13513 = !DILocation(line: 3626, column: 9, scope: !13502)
!13514 = !DILocation(line: 3629, column: 21, scope: !13502)
!13515 = !DILocation(line: 3632, column: 9, scope: !13502)
!13516 = !DILocation(line: 3632, column: 15, scope: !13502)
!13517 = !DILocation(line: 3632, column: 51, scope: !13502)
!13518 = !DILocation(line: 3634, column: 15, scope: !13519)
!13519 = distinct !DILexicalBlock(scope: !13520, file: !12364, line: 3634, column: 14)
!13520 = distinct !DILexicalBlock(scope: !13502, file: !12364, line: 3633, column: 9)
!13521 = !DILocation(line: 3634, column: 29, scope: !13519)
!13522 = !DILocation(line: 3634, column: 43, scope: !13519)
!13523 = !DILocation(line: 3634, column: 14, scope: !13520)
!13524 = distinct !{!13524, !13515, !13525}
!13525 = !DILocation(line: 3638, column: 9, scope: !13502)
!13526 = !DILocation(line: 3649, column: 15, scope: !13527)
!13527 = distinct !DILexicalBlock(scope: !13497, file: !12364, line: 3641, column: 7)
!13528 = !DILocation(line: 3649, column: 9, scope: !13527)
!13529 = !DILocation(line: 3651, column: 15, scope: !13530)
!13530 = distinct !DILexicalBlock(scope: !13531, file: !12364, line: 3651, column: 14)
!13531 = distinct !DILexicalBlock(scope: !13527, file: !12364, line: 3650, column: 9)
!13532 = !DILocation(line: 3651, column: 29, scope: !13530)
!13533 = !DILocation(line: 3651, column: 43, scope: !13530)
!13534 = !DILocation(line: 3651, column: 14, scope: !13531)
!13535 = distinct !{!13535, !13528, !13536}
!13536 = !DILocation(line: 3655, column: 9, scope: !13527)
!13537 = !DILocation(line: 3661, column: 44, scope: !13538)
!13538 = distinct !DILexicalBlock(scope: !13539, file: !12364, line: 3661, column: 10)
!13539 = distinct !DILexicalBlock(scope: !13492, file: !12364, line: 3659, column: 5)
!13540 = !DILocation(line: 3661, column: 10, scope: !13539)
!13541 = !DILocation(line: 3668, column: 27, scope: !13542)
!13542 = distinct !DILexicalBlock(scope: !13538, file: !12364, line: 3666, column: 7)
!13543 = !DILocation(line: 3671, column: 14, scope: !13544)
!13544 = distinct !DILexicalBlock(scope: !13542, file: !12364, line: 3670, column: 13)
!13545 = !DILocation(line: 3671, column: 81, scope: !13544)
!13546 = !DILocation(line: 3671, column: 55, scope: !13544)
!13547 = !DILocation(line: 3671, column: 92, scope: !13544)
!13548 = !DILocation(line: 3672, column: 14, scope: !13544)
!13549 = !DILocation(line: 3672, column: 80, scope: !13544)
!13550 = !DILocation(line: 3672, column: 53, scope: !13544)
!13551 = !DILocation(line: 3672, column: 111, scope: !13544)
!13552 = !DILocation(line: 3673, column: 14, scope: !13544)
!13553 = !DILocation(line: 3673, column: 80, scope: !13544)
!13554 = !DILocation(line: 3673, column: 86, scope: !13544)
!13555 = !DILocation(line: 3673, column: 53, scope: !13544)
!13556 = !DILocation(line: 3673, column: 111, scope: !13544)
!13557 = !DILocation(line: 3674, column: 14, scope: !13544)
!13558 = !DILocation(line: 3674, column: 82, scope: !13544)
!13559 = !DILocation(line: 3674, column: 101, scope: !13544)
!13560 = !DILocation(line: 3674, column: 53, scope: !13544)
!13561 = !DILocation(line: 3674, column: 126, scope: !13544)
!13562 = !DILocation(line: 3675, column: 14, scope: !13544)
!13563 = !DILocation(line: 3675, column: 80, scope: !13544)
!13564 = !DILocation(line: 3675, column: 85, scope: !13544)
!13565 = !DILocation(line: 3675, column: 53, scope: !13544)
!13566 = !DILocation(line: 3675, column: 111, scope: !13544)
!13567 = !DILocation(line: 3676, column: 14, scope: !13544)
!13568 = !DILocation(line: 3676, column: 80, scope: !13544)
!13569 = !DILocation(line: 3676, column: 85, scope: !13544)
!13570 = !DILocation(line: 3676, column: 53, scope: !13544)
!13571 = !DILocation(line: 3670, column: 13, scope: !13542)
!13572 = !DILocation(line: 3691, column: 3, scope: !13202)
!13573 = !DILocation(line: 3692, column: 1, scope: !13202)
!13574 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !12364, file: !12364, line: 3703, type: !13575, scopeLine: 3704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3302, retainedNodes: !13577)
!13575 = !DISubroutineType(types: !13576)
!13576 = !{null, !13205}
!13577 = !{!13578}
!13578 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !13574, file: !12364, line: 3703, type: !13205)
!13579 = !DILocation(line: 0, scope: !13574)
!13580 = !DILocation(line: 3706, column: 22, scope: !13574)
!13581 = !DILocation(line: 3706, column: 37, scope: !13574)
!13582 = !DILocation(line: 3709, column: 12, scope: !13583)
!13583 = distinct !DILexicalBlock(scope: !13574, file: !12364, line: 3709, column: 6)
!13584 = !DILocation(line: 3709, column: 15, scope: !13583)
!13585 = !DILocation(line: 3709, column: 31, scope: !13583)
!13586 = !DILocation(line: 3709, column: 6, scope: !13574)
!13587 = !DILocation(line: 3711, column: 24, scope: !13588)
!13588 = distinct !DILexicalBlock(scope: !13583, file: !12364, line: 3710, column: 3)
!13589 = !DILocation(line: 3711, column: 33, scope: !13588)
!13590 = !DILocation(line: 3712, column: 3, scope: !13588)
!13591 = !DILocation(line: 3713, column: 17, scope: !13592)
!13592 = distinct !DILexicalBlock(scope: !13583, file: !12364, line: 3713, column: 11)
!13593 = !DILocation(line: 3713, column: 20, scope: !13592)
!13594 = !DILocation(line: 3713, column: 35, scope: !13592)
!13595 = !DILocation(line: 0, scope: !13592)
!13596 = !DILocation(line: 3713, column: 11, scope: !13583)
!13597 = !DILocation(line: 3715, column: 33, scope: !13598)
!13598 = distinct !DILexicalBlock(scope: !13592, file: !12364, line: 3714, column: 3)
!13599 = !DILocation(line: 3716, column: 3, scope: !13598)
!13600 = !DILocation(line: 3719, column: 33, scope: !13601)
!13601 = distinct !DILexicalBlock(scope: !13592, file: !12364, line: 3718, column: 3)
!13602 = !DILocation(line: 3723, column: 12, scope: !13603)
!13603 = distinct !DILexicalBlock(scope: !13574, file: !12364, line: 3723, column: 6)
!13604 = !DILocation(line: 3723, column: 15, scope: !13603)
!13605 = !DILocation(line: 3729, column: 24, scope: !13606)
!13606 = distinct !DILexicalBlock(scope: !13603, file: !12364, line: 3728, column: 3)
!13607 = !DILocation(line: 3729, column: 33, scope: !13606)
!13608 = !DILocation(line: 3732, column: 61, scope: !13574)
!13609 = !DILocation(line: 3732, column: 81, scope: !13574)
!13610 = !DILocation(line: 3732, column: 22, scope: !13574)
!13611 = !DILocation(line: 3732, column: 42, scope: !13574)
!13612 = !DILocation(line: 3735, column: 12, scope: !13613)
!13613 = distinct !DILexicalBlock(scope: !13574, file: !12364, line: 3735, column: 6)
!13614 = !DILocation(line: 3735, column: 17, scope: !13613)
!13615 = !DILocation(line: 3735, column: 35, scope: !13613)
!13616 = !DILocation(line: 3735, column: 6, scope: !13574)
!13617 = !DILocation(line: 3737, column: 24, scope: !13618)
!13618 = distinct !DILexicalBlock(scope: !13613, file: !12364, line: 3736, column: 3)
!13619 = !DILocation(line: 3737, column: 33, scope: !13618)
!13620 = !DILocation(line: 3738, column: 3, scope: !13618)
!13621 = !DILocation(line: 3739, column: 17, scope: !13622)
!13622 = distinct !DILexicalBlock(scope: !13613, file: !12364, line: 3739, column: 11)
!13623 = !DILocation(line: 3739, column: 22, scope: !13622)
!13624 = !DILocation(line: 3739, column: 39, scope: !13622)
!13625 = !DILocation(line: 0, scope: !13622)
!13626 = !DILocation(line: 3739, column: 11, scope: !13613)
!13627 = !DILocation(line: 3741, column: 33, scope: !13628)
!13628 = distinct !DILexicalBlock(scope: !13622, file: !12364, line: 3740, column: 3)
!13629 = !DILocation(line: 3742, column: 3, scope: !13628)
!13630 = !DILocation(line: 3745, column: 33, scope: !13631)
!13631 = distinct !DILexicalBlock(scope: !13622, file: !12364, line: 3744, column: 3)
!13632 = !DILocation(line: 3749, column: 12, scope: !13633)
!13633 = distinct !DILexicalBlock(scope: !13574, file: !12364, line: 3749, column: 6)
!13634 = !DILocation(line: 3749, column: 16, scope: !13633)
!13635 = !DILocation(line: 3755, column: 24, scope: !13636)
!13636 = distinct !DILexicalBlock(scope: !13633, file: !12364, line: 3754, column: 3)
!13637 = !DILocation(line: 3755, column: 33, scope: !13636)
!13638 = !DILocation(line: 3759, column: 12, scope: !13639)
!13639 = distinct !DILexicalBlock(scope: !13574, file: !12364, line: 3759, column: 6)
!13640 = !DILocation(line: 3759, column: 15, scope: !13639)
!13641 = !DILocation(line: 3759, column: 30, scope: !13639)
!13642 = !DILocation(line: 3759, column: 6, scope: !13574)
!13643 = !DILocation(line: 3765, column: 28, scope: !13644)
!13644 = distinct !DILexicalBlock(scope: !13639, file: !12364, line: 3764, column: 3)
!13645 = !DILocation(line: 3765, column: 37, scope: !13644)
!13646 = !DILocation(line: 3767, column: 54, scope: !13574)
!13647 = !DILocation(line: 3767, column: 62, scope: !13574)
!13648 = !DILocation(line: 3767, column: 26, scope: !13574)
!13649 = !DILocation(line: 3767, column: 36, scope: !13574)
!13650 = !DILocation(line: 3768, column: 49, scope: !13574)
!13651 = !DILocation(line: 3768, column: 57, scope: !13574)
!13652 = !DILocation(line: 3768, column: 26, scope: !13574)
!13653 = !DILocation(line: 3768, column: 31, scope: !13574)
!13654 = !DILocation(line: 3769, column: 50, scope: !13574)
!13655 = !DILocation(line: 3769, column: 78, scope: !13574)
!13656 = !DILocation(line: 3769, column: 26, scope: !13574)
!13657 = !DILocation(line: 3769, column: 31, scope: !13574)
!13658 = !DILocation(line: 3770, column: 52, scope: !13574)
!13659 = !DILocation(line: 3770, column: 102, scope: !13574)
!13660 = !DILocation(line: 3770, column: 109, scope: !13574)
!13661 = !DILocation(line: 3770, column: 26, scope: !13574)
!13662 = !DILocation(line: 3770, column: 31, scope: !13574)
!13663 = !DILocation(line: 3771, column: 50, scope: !13574)
!13664 = !DILocation(line: 3771, column: 78, scope: !13574)
!13665 = !DILocation(line: 3771, column: 26, scope: !13574)
!13666 = !DILocation(line: 3771, column: 31, scope: !13574)
!13667 = !DILocation(line: 3772, column: 50, scope: !13574)
!13668 = !DILocation(line: 3772, column: 78, scope: !13574)
!13669 = !DILocation(line: 3772, column: 26, scope: !13574)
!13670 = !DILocation(line: 3772, column: 31, scope: !13574)
!13671 = !DILocation(line: 3773, column: 1, scope: !13574)
!13672 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !13673, file: !13673, line: 257, type: !7219, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3365, retainedNodes: !13674)
!13673 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13674 = !{!13675}
!13675 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !13672, file: !13673, line: 257, type: !113)
!13676 = !DILocation(line: 0, scope: !13672)
!13677 = !DILocation(line: 260, column: 3, scope: !13672)
!13678 = !DILocation(line: 261, column: 1, scope: !13672)
!13679 = distinct !DISubprogram(name: "LL_InitTick", scope: !13680, file: !13680, line: 260, type: !10761, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3365, retainedNodes: !13681)
!13680 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13681 = !{!13682, !13683}
!13682 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !13679, file: !13680, line: 260, type: !113)
!13683 = !DILocalVariable(name: "Ticks", arg: 2, scope: !13679, file: !13680, line: 260, type: !113)
!13684 = !DILocation(line: 0, scope: !13679)
!13685 = !DILocation(line: 263, column: 46, scope: !13679)
!13686 = !DILocation(line: 263, column: 55, scope: !13679)
!13687 = !DILocation(line: 263, column: 18, scope: !13679)
!13688 = !DILocation(line: 264, column: 18, scope: !13679)
!13689 = !DILocation(line: 265, column: 18, scope: !13679)
!13690 = !DILocation(line: 267, column: 1, scope: !13679)
!13691 = distinct !DISubprogram(name: "LL_mDelay", scope: !13673, file: !13673, line: 273, type: !7219, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3365, retainedNodes: !13692)
!13692 = !{!13693, !13694}
!13693 = !DILocalVariable(name: "Delay", arg: 1, scope: !13691, file: !13673, line: 273, type: !113)
!13694 = !DILocalVariable(name: "tmp", scope: !13691, file: !13673, line: 275, type: !576)
!13695 = !DILocation(line: 0, scope: !13691)
!13696 = !DILocation(line: 275, column: 3, scope: !13691)
!13697 = !DILocation(line: 275, column: 18, scope: !13691)
!13698 = !DILocation(line: 275, column: 33, scope: !13691)
!13699 = !DILocation(line: 277, column: 10, scope: !13691)
!13700 = !DILocation(line: 280, column: 12, scope: !13701)
!13701 = distinct !DILexicalBlock(scope: !13691, file: !13673, line: 280, column: 6)
!13702 = !DILocation(line: 285, column: 3, scope: !13691)
!13703 = !DILocation(line: 287, column: 18, scope: !13704)
!13704 = distinct !DILexicalBlock(scope: !13705, file: !13673, line: 287, column: 8)
!13705 = distinct !DILexicalBlock(scope: !13691, file: !13673, line: 286, column: 3)
!13706 = !DILocation(line: 292, column: 1, scope: !13691)
!13707 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !13673, file: !13673, line: 323, type: !7219, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3365, retainedNodes: !13708)
!13708 = !{!13709}
!13709 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !13707, file: !13673, line: 323, type: !113)
!13710 = !DILocation(line: 0, scope: !13707)
!13711 = !DILocation(line: 326, column: 19, scope: !13707)
!13712 = !DILocation(line: 327, column: 1, scope: !13707)
!13713 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !13673, file: !13673, line: 338, type: !13714, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3365, retainedNodes: !13717)
!13714 = !DISubroutineType(types: !13715)
!13715 = !{!13716, !113}
!13716 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !1190, line: 201, baseType: !1189)
!13717 = !{!13718, !13719, !13720, !13721, !13722}
!13718 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !13713, file: !13673, line: 338, type: !113)
!13719 = !DILocalVariable(name: "timeout", scope: !13713, file: !13673, line: 340, type: !113)
!13720 = !DILocalVariable(name: "getlatency", scope: !13713, file: !13673, line: 341, type: !113)
!13721 = !DILocalVariable(name: "latency", scope: !13713, file: !13673, line: 342, type: !113)
!13722 = !DILocalVariable(name: "status", scope: !13713, file: !13673, line: 343, type: !13716)
!13723 = !DILocation(line: 0, scope: !13713)
!13724 = !DILocation(line: 347, column: 21, scope: !13725)
!13725 = distinct !DILexicalBlock(scope: !13713, file: !13673, line: 347, column: 6)
!13726 = !DILocation(line: 347, column: 6, scope: !13713)
!13727 = !DILocation(line: 353, column: 8, scope: !13728)
!13728 = distinct !DILexicalBlock(scope: !13729, file: !13673, line: 353, column: 8)
!13729 = distinct !DILexicalBlock(scope: !13725, file: !13673, line: 352, column: 3)
!13730 = !DILocation(line: 353, column: 40, scope: !13728)
!13731 = !DILocation(line: 353, column: 8, scope: !13729)
!13732 = !DILocation(line: 356, column: 26, scope: !13733)
!13733 = distinct !DILexicalBlock(scope: !13734, file: !13673, line: 356, column: 10)
!13734 = distinct !DILexicalBlock(scope: !13728, file: !13673, line: 354, column: 5)
!13735 = !DILocation(line: 356, column: 55, scope: !13733)
!13736 = !DILocation(line: 362, column: 55, scope: !13737)
!13737 = distinct !DILexicalBlock(scope: !13734, file: !13673, line: 362, column: 10)
!13738 = !DILocation(line: 368, column: 55, scope: !13739)
!13739 = distinct !DILexicalBlock(scope: !13734, file: !13673, line: 368, column: 10)
!13740 = !DILocation(line: 374, column: 26, scope: !13741)
!13741 = distinct !DILexicalBlock(scope: !13734, file: !13673, line: 374, column: 10)
!13742 = !DILocation(line: 374, column: 55, scope: !13741)
!13743 = !DILocation(line: 380, column: 28, scope: !13744)
!13744 = distinct !DILexicalBlock(scope: !13745, file: !13673, line: 380, column: 12)
!13745 = distinct !DILexicalBlock(scope: !13741, file: !13673, line: 379, column: 7)
!13746 = !DILocation(line: 380, column: 57, scope: !13744)
!13747 = !DILocation(line: 387, column: 8, scope: !13748)
!13748 = distinct !DILexicalBlock(scope: !13729, file: !13673, line: 387, column: 8)
!13749 = !DILocation(line: 387, column: 40, scope: !13748)
!13750 = !DILocation(line: 387, column: 8, scope: !13729)
!13751 = !DILocation(line: 390, column: 26, scope: !13752)
!13752 = distinct !DILexicalBlock(scope: !13753, file: !13673, line: 390, column: 10)
!13753 = distinct !DILexicalBlock(scope: !13748, file: !13673, line: 388, column: 5)
!13754 = !DILocation(line: 390, column: 55, scope: !13752)
!13755 = !DILocation(line: 396, column: 26, scope: !13756)
!13756 = distinct !DILexicalBlock(scope: !13753, file: !13673, line: 396, column: 10)
!13757 = !DILocation(line: 396, column: 55, scope: !13756)
!13758 = !DILocation(line: 402, column: 26, scope: !13759)
!13759 = distinct !DILexicalBlock(scope: !13753, file: !13673, line: 402, column: 10)
!13760 = !DILocation(line: 402, column: 55, scope: !13759)
!13761 = !DILocation(line: 407, column: 26, scope: !13762)
!13762 = distinct !DILexicalBlock(scope: !13753, file: !13673, line: 407, column: 10)
!13763 = !DILocation(line: 407, column: 55, scope: !13762)
!13764 = !DILocation(line: 413, column: 28, scope: !13765)
!13765 = distinct !DILexicalBlock(scope: !13766, file: !13673, line: 413, column: 12)
!13766 = distinct !DILexicalBlock(scope: !13762, file: !13673, line: 412, column: 7)
!13767 = !DILocation(line: 413, column: 57, scope: !13765)
!13768 = !DILocation(line: 0, scope: !13729)
!13769 = !DILocation(line: 420, column: 8, scope: !13770)
!13770 = distinct !DILexicalBlock(scope: !13729, file: !13673, line: 420, column: 8)
!13771 = !DILocation(line: 420, column: 40, scope: !13770)
!13772 = !DILocation(line: 420, column: 8, scope: !13729)
!13773 = !DILocation(line: 423, column: 26, scope: !13774)
!13774 = distinct !DILexicalBlock(scope: !13775, file: !13673, line: 423, column: 10)
!13775 = distinct !DILexicalBlock(scope: !13770, file: !13673, line: 421, column: 5)
!13776 = !DILocation(line: 423, column: 55, scope: !13774)
!13777 = !DILocation(line: 429, column: 26, scope: !13778)
!13778 = distinct !DILexicalBlock(scope: !13775, file: !13673, line: 429, column: 10)
!13779 = !DILocation(line: 429, column: 55, scope: !13778)
!13780 = !DILocation(line: 435, column: 28, scope: !13781)
!13781 = distinct !DILexicalBlock(scope: !13782, file: !13673, line: 435, column: 12)
!13782 = distinct !DILexicalBlock(scope: !13778, file: !13673, line: 434, column: 7)
!13783 = !DILocation(line: 435, column: 57, scope: !13781)
!13784 = !DILocation(line: 444, column: 5, scope: !13729)
!13785 = !DILocation(line: 448, column: 5, scope: !13729)
!13786 = !DILocation(line: 451, column: 18, scope: !13787)
!13787 = distinct !DILexicalBlock(scope: !13729, file: !13673, line: 449, column: 5)
!13788 = !DILocation(line: 452, column: 12, scope: !13787)
!13789 = !DILocation(line: 453, column: 26, scope: !13729)
!13790 = !DILocation(line: 453, column: 38, scope: !13729)
!13791 = !DILocation(line: 453, column: 5, scope: !13787)
!13792 = distinct !{!13792, !13785, !13793}
!13793 = !DILocation(line: 453, column: 54, scope: !13729)
!13794 = !DILocation(line: 0, scope: !13725)
!13795 = !DILocation(line: 464, column: 3, scope: !13713)
!13796 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !13797, file: !13797, line: 519, type: !7209, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3365, retainedNodes: !437)
!13797 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13798 = !DILocation(line: 521, column: 21, scope: !13796)
!13799 = !DILocation(line: 521, column: 3, scope: !13796)
!13800 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !6831, file: !6831, line: 1543, type: !7219, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3365, retainedNodes: !13801)
!13801 = !{!13802}
!13802 = !DILocalVariable(name: "Latency", arg: 1, scope: !13800, file: !6831, line: 1543, type: !113)
!13803 = !DILocation(line: 0, scope: !13800)
!13804 = !DILocation(line: 1545, column: 3, scope: !13800)
!13805 = !DILocation(line: 1546, column: 1, scope: !13800)
!13806 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !6831, file: !6831, line: 1569, type: !7209, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3365, retainedNodes: !437)
!13807 = !DILocation(line: 1571, column: 21, scope: !13806)
!13808 = !DILocation(line: 1571, column: 3, scope: !13806)
!13809 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !13673, file: !13673, line: 483, type: !13810, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3365, retainedNodes: !13826)
!13810 = !DISubroutineType(types: !13811)
!13811 = !{!13716, !13812, !13819}
!13812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13813, size: 32)
!13813 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !13680, line: 114, baseType: !13814)
!13814 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13680, line: 94, size: 96, elements: !13815)
!13815 = !{!13816, !13817, !13818}
!13816 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !13814, file: !13680, line: 96, baseType: !113, size: 32)
!13817 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !13814, file: !13680, line: 102, baseType: !113, size: 32, offset: 32)
!13818 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !13814, file: !13680, line: 109, baseType: !113, size: 32, offset: 64)
!13819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13820, size: 32)
!13820 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !13680, line: 139, baseType: !13821)
!13821 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13680, line: 119, size: 96, elements: !13822)
!13822 = !{!13823, !13824, !13825}
!13823 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !13821, file: !13680, line: 121, baseType: !113, size: 32)
!13824 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !13821, file: !13680, line: 127, baseType: !113, size: 32, offset: 32)
!13825 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !13821, file: !13680, line: 133, baseType: !113, size: 32, offset: 64)
!13826 = !{!13827, !13828, !13829, !13830}
!13827 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !13809, file: !13673, line: 483, type: !13812)
!13828 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !13809, file: !13673, line: 484, type: !13819)
!13829 = !DILocalVariable(name: "status", scope: !13809, file: !13673, line: 486, type: !13716)
!13830 = !DILocalVariable(name: "pllfreq", scope: !13809, file: !13673, line: 487, type: !113)
!13831 = !DILocation(line: 0, scope: !13809)
!13832 = !DILocation(line: 490, column: 6, scope: !13833)
!13833 = distinct !DILexicalBlock(scope: !13809, file: !13673, line: 490, column: 6)
!13834 = !DILocation(line: 490, column: 25, scope: !13833)
!13835 = !DILocation(line: 490, column: 6, scope: !13809)
!13836 = !DILocation(line: 493, column: 15, scope: !13837)
!13837 = distinct !DILexicalBlock(scope: !13833, file: !13673, line: 491, column: 3)
!13838 = !DILocation(line: 496, column: 8, scope: !13839)
!13839 = distinct !DILexicalBlock(scope: !13837, file: !13673, line: 496, column: 8)
!13840 = !DILocation(line: 496, column: 29, scope: !13839)
!13841 = !DILocation(line: 496, column: 8, scope: !13837)
!13842 = !DILocation(line: 498, column: 7, scope: !13843)
!13843 = distinct !DILexicalBlock(scope: !13839, file: !13673, line: 497, column: 5)
!13844 = !DILocation(line: 499, column: 7, scope: !13843)
!13845 = !DILocation(line: 499, column: 14, scope: !13843)
!13846 = !DILocation(line: 499, column: 35, scope: !13843)
!13847 = distinct !{!13847, !13844, !13848}
!13848 = !DILocation(line: 502, column: 7, scope: !13843)
!13849 = !DILocation(line: 506, column: 76, scope: !13837)
!13850 = !DILocation(line: 506, column: 103, scope: !13837)
!13851 = !DILocation(line: 507, column: 54, scope: !13837)
!13852 = !DILocation(line: 506, column: 5, scope: !13837)
!13853 = !DILocation(line: 510, column: 14, scope: !13837)
!13854 = !DILocation(line: 511, column: 3, scope: !13837)
!13855 = !DILocation(line: 0, scope: !13833)
!13856 = !DILocation(line: 518, column: 3, scope: !13809)
!13857 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !13673, file: !13673, line: 642, type: !13858, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3365, retainedNodes: !13860)
!13858 = !DISubroutineType(types: !13859)
!13859 = !{!13716}
!13860 = !{!13861}
!13861 = !DILocalVariable(name: "status", scope: !13857, file: !13673, line: 644, type: !13716)
!13862 = !DILocation(line: 0, scope: !13857)
!13863 = !DILocation(line: 647, column: 6, scope: !13864)
!13864 = distinct !DILexicalBlock(scope: !13857, file: !13673, line: 647, column: 6)
!13865 = !DILocation(line: 647, column: 27, scope: !13864)
!13866 = !DILocation(line: 655, column: 6, scope: !13867)
!13867 = distinct !DILexicalBlock(scope: !13857, file: !13673, line: 655, column: 6)
!13868 = !DILocation(line: 655, column: 30, scope: !13867)
!13869 = !DILocation(line: 663, column: 6, scope: !13870)
!13870 = distinct !DILexicalBlock(scope: !13857, file: !13673, line: 663, column: 6)
!13871 = !DILocation(line: 663, column: 30, scope: !13870)
!13872 = !DILocation(line: 663, column: 6, scope: !13857)
!13873 = !DILocation(line: 669, column: 3, scope: !13857)
!13874 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !13673, file: !13673, line: 611, type: !13875, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3365, retainedNodes: !13877)
!13875 = !DISubroutineType(types: !13876)
!13876 = !{!113, !113, !13812}
!13877 = !{!13878, !13879, !13880}
!13878 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !13874, file: !13673, line: 611, type: !113)
!13879 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !13874, file: !13673, line: 611, type: !13812)
!13880 = !DILocalVariable(name: "pllfreq", scope: !13874, file: !13673, line: 613, type: !113)
!13881 = !DILocation(line: 0, scope: !13874)
!13882 = !DILocation(line: 622, column: 56, scope: !13874)
!13883 = !DILocation(line: 622, column: 61, scope: !13874)
!13884 = !DILocation(line: 622, column: 32, scope: !13874)
!13885 = !DILocation(line: 626, column: 45, scope: !13874)
!13886 = !DILocation(line: 626, column: 50, scope: !13874)
!13887 = !DILocation(line: 626, column: 21, scope: !13874)
!13888 = !DILocation(line: 630, column: 47, scope: !13874)
!13889 = !DILocation(line: 630, column: 82, scope: !13874)
!13890 = !DILocation(line: 630, column: 21, scope: !13874)
!13891 = !DILocation(line: 633, column: 3, scope: !13874)
!13892 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !10100, file: !10100, line: 3007, type: !7209, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3365, retainedNodes: !437)
!13893 = !DILocation(line: 3009, column: 11, scope: !13892)
!13894 = !DILocation(line: 3009, column: 44, scope: !13892)
!13895 = !DILocation(line: 3009, column: 3, scope: !13892)
!13896 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !10100, file: !10100, line: 2987, type: !3472, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3365, retainedNodes: !437)
!13897 = !DILocation(line: 2989, column: 3, scope: !13896)
!13898 = !DILocation(line: 2990, column: 1, scope: !13896)
!13899 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !10100, file: !10100, line: 4304, type: !10234, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3365, retainedNodes: !13900)
!13900 = !{!13901, !13902, !13903, !13904}
!13901 = !DILocalVariable(name: "Source", arg: 1, scope: !13899, file: !10100, line: 4304, type: !113)
!13902 = !DILocalVariable(name: "PLLM", arg: 2, scope: !13899, file: !10100, line: 4304, type: !113)
!13903 = !DILocalVariable(name: "PLLN", arg: 3, scope: !13899, file: !10100, line: 4304, type: !113)
!13904 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !13899, file: !10100, line: 4304, type: !113)
!13905 = !DILocation(line: 0, scope: !13899)
!13906 = !DILocation(line: 4306, column: 3, scope: !13899)
!13907 = !DILocation(line: 4308, column: 3, scope: !13899)
!13908 = !DILocation(line: 4310, column: 3, scope: !13899)
!13909 = !DILocation(line: 4312, column: 1, scope: !13899)
!13910 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !13673, file: !13673, line: 681, type: !13911, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3365, retainedNodes: !13913)
!13911 = !DISubroutineType(types: !13912)
!13912 = !{!13716, !113, !13819}
!13913 = !{!13914, !13915, !13916, !13917}
!13914 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !13910, file: !13673, line: 681, type: !113)
!13915 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !13910, file: !13673, line: 681, type: !13819)
!13916 = !DILocalVariable(name: "status", scope: !13910, file: !13673, line: 683, type: !13716)
!13917 = !DILocalVariable(name: "hclk_frequency", scope: !13910, file: !13673, line: 684, type: !113)
!13918 = !DILocation(line: 0, scope: !13910)
!13919 = !DILocation(line: 691, column: 20, scope: !13910)
!13920 = !DILocation(line: 694, column: 6, scope: !13921)
!13921 = distinct !DILexicalBlock(scope: !13910, file: !13673, line: 694, column: 6)
!13922 = !DILocation(line: 694, column: 22, scope: !13921)
!13923 = !DILocation(line: 694, column: 6, scope: !13910)
!13924 = !DILocation(line: 697, column: 14, scope: !13925)
!13925 = distinct !DILexicalBlock(scope: !13921, file: !13673, line: 695, column: 3)
!13926 = !DILocation(line: 701, column: 13, scope: !13927)
!13927 = distinct !DILexicalBlock(scope: !13910, file: !13673, line: 701, column: 6)
!13928 = !DILocation(line: 701, column: 6, scope: !13910)
!13929 = !DILocation(line: 704, column: 5, scope: !13930)
!13930 = distinct !DILexicalBlock(scope: !13927, file: !13673, line: 702, column: 3)
!13931 = !DILocation(line: 705, column: 5, scope: !13930)
!13932 = !DILocation(line: 705, column: 12, scope: !13930)
!13933 = !DILocation(line: 705, column: 33, scope: !13930)
!13934 = distinct !{!13934, !13931, !13935}
!13935 = !DILocation(line: 708, column: 5, scope: !13930)
!13936 = !DILocation(line: 711, column: 49, scope: !13930)
!13937 = !DILocation(line: 711, column: 5, scope: !13930)
!13938 = !DILocation(line: 712, column: 5, scope: !13930)
!13939 = !DILocation(line: 713, column: 5, scope: !13930)
!13940 = !DILocation(line: 713, column: 12, scope: !13930)
!13941 = !DILocation(line: 713, column: 37, scope: !13930)
!13942 = distinct !{!13942, !13939, !13943}
!13943 = !DILocation(line: 716, column: 5, scope: !13930)
!13944 = !DILocation(line: 719, column: 50, scope: !13930)
!13945 = !DILocation(line: 719, column: 5, scope: !13930)
!13946 = !DILocation(line: 720, column: 50, scope: !13930)
!13947 = !DILocation(line: 720, column: 5, scope: !13930)
!13948 = !DILocation(line: 721, column: 3, scope: !13930)
!13949 = !DILocation(line: 724, column: 6, scope: !13950)
!13950 = distinct !DILexicalBlock(scope: !13910, file: !13673, line: 724, column: 6)
!13951 = !DILocation(line: 724, column: 22, scope: !13950)
!13952 = !DILocation(line: 724, column: 6, scope: !13910)
!13953 = !DILocation(line: 727, column: 14, scope: !13954)
!13954 = distinct !DILexicalBlock(scope: !13950, file: !13673, line: 725, column: 3)
!13955 = !DILocation(line: 728, column: 3, scope: !13954)
!13956 = !DILocation(line: 731, column: 13, scope: !13957)
!13957 = distinct !DILexicalBlock(scope: !13910, file: !13673, line: 731, column: 6)
!13958 = !DILocation(line: 731, column: 6, scope: !13910)
!13959 = !DILocation(line: 733, column: 5, scope: !13960)
!13960 = distinct !DILexicalBlock(scope: !13957, file: !13673, line: 732, column: 3)
!13961 = !DILocation(line: 734, column: 3, scope: !13960)
!13962 = !DILocation(line: 736, column: 3, scope: !13910)
!13963 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !10100, file: !10100, line: 4184, type: !3472, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3365, retainedNodes: !437)
!13964 = !DILocation(line: 4186, column: 3, scope: !13963)
!13965 = !DILocation(line: 4187, column: 1, scope: !13963)
!13966 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !10100, file: !10100, line: 4205, type: !7209, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3365, retainedNodes: !437)
!13967 = !DILocation(line: 4207, column: 11, scope: !13966)
!13968 = !DILocation(line: 4207, column: 44, scope: !13966)
!13969 = !DILocation(line: 4207, column: 3, scope: !13966)
!13970 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !10100, file: !10100, line: 3224, type: !7219, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3365, retainedNodes: !13971)
!13971 = !{!13972}
!13972 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13970, file: !10100, line: 3224, type: !113)
!13973 = !DILocation(line: 0, scope: !13970)
!13974 = !DILocation(line: 3226, column: 3, scope: !13970)
!13975 = !DILocation(line: 3227, column: 1, scope: !13970)
!13976 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !10100, file: !10100, line: 3188, type: !7219, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3365, retainedNodes: !13977)
!13977 = !{!13978}
!13978 = !DILocalVariable(name: "Source", arg: 1, scope: !13976, file: !10100, line: 3188, type: !113)
!13979 = !DILocation(line: 0, scope: !13976)
!13980 = !DILocation(line: 3190, column: 3, scope: !13976)
!13981 = !DILocation(line: 3191, column: 1, scope: !13976)
!13982 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !10100, file: !10100, line: 3204, type: !7209, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3365, retainedNodes: !437)
!13983 = !DILocation(line: 3206, column: 21, scope: !13982)
!13984 = !DILocation(line: 3206, column: 3, scope: !13982)
!13985 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !10100, file: !10100, line: 3240, type: !7219, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3365, retainedNodes: !13986)
!13986 = !{!13987}
!13987 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13985, file: !10100, line: 3240, type: !113)
!13988 = !DILocation(line: 0, scope: !13985)
!13989 = !DILocation(line: 3242, column: 3, scope: !13985)
!13990 = !DILocation(line: 3243, column: 1, scope: !13985)
!13991 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !10100, file: !10100, line: 3256, type: !7219, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3365, retainedNodes: !13992)
!13992 = !{!13993}
!13993 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13991, file: !10100, line: 3256, type: !113)
!13994 = !DILocation(line: 0, scope: !13991)
!13995 = !DILocation(line: 3258, column: 3, scope: !13991)
!13996 = !DILocation(line: 3259, column: 1, scope: !13991)
!13997 = distinct !DISubprogram(name: "LL_RCC_PLLSAI_IsReady", scope: !10100, file: !10100, line: 5969, type: !7209, scopeLine: 5970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3365, retainedNodes: !437)
!13998 = !DILocation(line: 5971, column: 11, scope: !13997)
!13999 = !DILocation(line: 5971, column: 47, scope: !13997)
!14000 = !DILocation(line: 5971, column: 3, scope: !13997)
!14001 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !10100, file: !10100, line: 5153, type: !7209, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3365, retainedNodes: !437)
!14002 = !DILocation(line: 5155, column: 11, scope: !14001)
!14003 = !DILocation(line: 5155, column: 47, scope: !14001)
!14004 = !DILocation(line: 5155, column: 3, scope: !14001)
!14005 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !13673, file: !13673, line: 540, type: !14006, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3365, retainedNodes: !14008)
!14006 = !DISubroutineType(types: !14007)
!14007 = !{!13716, !113, !113, !13812, !13819}
!14008 = !{!14009, !14010, !14011, !14012, !14013, !14014}
!14009 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !14005, file: !13673, line: 540, type: !113)
!14010 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !14005, file: !13673, line: 540, type: !113)
!14011 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !14005, file: !13673, line: 541, type: !13812)
!14012 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !14005, file: !13673, line: 541, type: !13819)
!14013 = !DILocalVariable(name: "status", scope: !14005, file: !13673, line: 543, type: !13716)
!14014 = !DILocalVariable(name: "pllfreq", scope: !14005, file: !13673, line: 544, type: !113)
!14015 = !DILocation(line: 0, scope: !14005)
!14016 = !DILocation(line: 551, column: 6, scope: !14017)
!14017 = distinct !DILexicalBlock(scope: !14005, file: !13673, line: 551, column: 6)
!14018 = !DILocation(line: 551, column: 25, scope: !14017)
!14019 = !DILocation(line: 551, column: 6, scope: !14005)
!14020 = !DILocation(line: 554, column: 15, scope: !14021)
!14021 = distinct !DILexicalBlock(scope: !14017, file: !13673, line: 552, column: 3)
!14022 = !DILocation(line: 557, column: 8, scope: !14023)
!14023 = distinct !DILexicalBlock(scope: !14021, file: !13673, line: 557, column: 8)
!14024 = !DILocation(line: 557, column: 29, scope: !14023)
!14025 = !DILocation(line: 557, column: 8, scope: !14021)
!14026 = !DILocation(line: 560, column: 20, scope: !14027)
!14027 = distinct !DILexicalBlock(scope: !14028, file: !13673, line: 560, column: 10)
!14028 = distinct !DILexicalBlock(scope: !14023, file: !13673, line: 558, column: 5)
!14029 = !DILocation(line: 560, column: 10, scope: !14028)
!14030 = !DILocation(line: 562, column: 9, scope: !14031)
!14031 = distinct !DILexicalBlock(scope: !14027, file: !13673, line: 561, column: 7)
!14032 = !DILocation(line: 563, column: 7, scope: !14031)
!14033 = !DILocation(line: 566, column: 9, scope: !14034)
!14034 = distinct !DILexicalBlock(scope: !14027, file: !13673, line: 565, column: 7)
!14035 = !DILocation(line: 570, column: 7, scope: !14028)
!14036 = !DILocation(line: 571, column: 7, scope: !14028)
!14037 = !DILocation(line: 571, column: 14, scope: !14028)
!14038 = !DILocation(line: 571, column: 35, scope: !14028)
!14039 = distinct !{!14039, !14036, !14040}
!14040 = !DILocation(line: 574, column: 7, scope: !14028)
!14041 = !DILocation(line: 578, column: 76, scope: !14021)
!14042 = !DILocation(line: 578, column: 103, scope: !14021)
!14043 = !DILocation(line: 579, column: 54, scope: !14021)
!14044 = !DILocation(line: 578, column: 5, scope: !14021)
!14045 = !DILocation(line: 582, column: 14, scope: !14021)
!14046 = !DILocation(line: 583, column: 3, scope: !14021)
!14047 = !DILocation(line: 0, scope: !14017)
!14048 = !DILocation(line: 590, column: 3, scope: !14005)
!14049 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !10100, file: !10100, line: 2969, type: !7209, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3365, retainedNodes: !437)
!14050 = !DILocation(line: 2971, column: 11, scope: !14049)
!14051 = !DILocation(line: 2971, column: 44, scope: !14049)
!14052 = !DILocation(line: 2971, column: 3, scope: !14049)
!14053 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !10100, file: !10100, line: 2929, type: !3472, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3365, retainedNodes: !437)
!14054 = !DILocation(line: 2931, column: 3, scope: !14053)
!14055 = !DILocation(line: 2932, column: 1, scope: !14053)
!14056 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !10100, file: !10100, line: 2939, type: !3472, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3365, retainedNodes: !437)
!14057 = !DILocation(line: 2941, column: 3, scope: !14056)
!14058 = !DILocation(line: 2942, column: 1, scope: !14056)
!14059 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !10100, file: !10100, line: 2949, type: !3472, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3365, retainedNodes: !437)
!14060 = !DILocation(line: 2951, column: 3, scope: !14059)
!14061 = !DILocation(line: 2952, column: 1, scope: !14059)
!14062 = distinct !DISubprogram(name: "z_device_state_init", scope: !14063, file: !14063, line: 23, type: !3472, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3432, retainedNodes: !14064)
!14063 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14064 = !{!14065}
!14065 = !DILocalVariable(name: "dev", scope: !14062, file: !14063, line: 25, type: !14066)
!14066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14067, size: 32)
!14067 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14068)
!14068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !411, line: 378, size: 192, elements: !14069)
!14069 = !{!14070, !14071, !14072, !14073, !14079, !14080}
!14070 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !14068, file: !411, line: 380, baseType: !105, size: 32)
!14071 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !14068, file: !411, line: 382, baseType: !13, size: 32, offset: 32)
!14072 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !14068, file: !411, line: 384, baseType: !13, size: 32, offset: 64)
!14073 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !14068, file: !411, line: 386, baseType: !14074, size: 32, offset: 96)
!14074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14075, size: 32)
!14075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !411, line: 351, size: 16, elements: !14076)
!14076 = !{!14077, !14078}
!14077 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !14075, file: !411, line: 359, baseType: !164, size: 8)
!14078 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !14075, file: !411, line: 364, baseType: !422, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!14079 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !14068, file: !411, line: 388, baseType: !104, size: 32, offset: 128)
!14080 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !14068, file: !411, line: 396, baseType: !425, size: 32, offset: 160)
!14081 = !DILocation(line: 0, scope: !14062)
!14082 = !DILocation(line: 31, column: 1, scope: !14062)
!14083 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !14063, file: !14063, line: 33, type: !14084, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3432, retainedNodes: !14086)
!14084 = !DISubroutineType(types: !14085)
!14085 = !{!14066, !105}
!14086 = !{!14087, !14088}
!14087 = !DILocalVariable(name: "name", arg: 1, scope: !14083, file: !14063, line: 33, type: !105)
!14088 = !DILocalVariable(name: "dev", scope: !14083, file: !14063, line: 35, type: !14066)
!14089 = !DILocation(line: 0, scope: !14083)
!14090 = !DILocation(line: 40, column: 12, scope: !14091)
!14091 = distinct !DILexicalBlock(scope: !14083, file: !14063, line: 40, column: 6)
!14092 = !DILocation(line: 40, column: 21, scope: !14091)
!14093 = !DILocation(line: 40, column: 25, scope: !14091)
!14094 = !DILocation(line: 40, column: 33, scope: !14091)
!14095 = !DILocation(line: 40, column: 6, scope: !14083)
!14096 = !DILocation(line: 55, column: 2, scope: !14097)
!14097 = distinct !DILexicalBlock(scope: !14083, file: !14063, line: 55, column: 2)
!14098 = !DILocation(line: 50, column: 7, scope: !14099)
!14099 = distinct !DILexicalBlock(scope: !14100, file: !14063, line: 50, column: 7)
!14100 = distinct !DILexicalBlock(scope: !14101, file: !14063, line: 49, column: 57)
!14101 = distinct !DILexicalBlock(scope: !14102, file: !14063, line: 49, column: 2)
!14102 = distinct !DILexicalBlock(scope: !14083, file: !14063, line: 49, column: 2)
!14103 = !DILocation(line: 50, column: 30, scope: !14099)
!14104 = !DILocation(line: 50, column: 39, scope: !14099)
!14105 = !DILocation(line: 50, column: 44, scope: !14099)
!14106 = !DILocation(line: 50, column: 7, scope: !14100)
!14107 = !DILocation(line: 49, column: 53, scope: !14101)
!14108 = !DILocation(line: 49, column: 33, scope: !14101)
!14109 = !DILocation(line: 49, column: 2, scope: !14102)
!14110 = distinct !{!14110, !14109, !14111}
!14111 = !DILocation(line: 53, column: 2, scope: !14102)
!14112 = !DILocation(line: 56, column: 7, scope: !14113)
!14113 = distinct !DILexicalBlock(scope: !14114, file: !14063, line: 56, column: 7)
!14114 = distinct !DILexicalBlock(scope: !14115, file: !14063, line: 55, column: 57)
!14115 = distinct !DILexicalBlock(scope: !14097, file: !14063, line: 55, column: 2)
!14116 = !DILocation(line: 56, column: 30, scope: !14113)
!14117 = !DILocation(line: 56, column: 52, scope: !14113)
!14118 = !DILocation(line: 56, column: 34, scope: !14113)
!14119 = !DILocation(line: 56, column: 58, scope: !14113)
!14120 = !DILocation(line: 56, column: 7, scope: !14114)
!14121 = !DILocation(line: 55, column: 53, scope: !14115)
!14122 = !DILocation(line: 55, column: 33, scope: !14115)
!14123 = distinct !{!14123, !14096, !14124}
!14124 = !DILocation(line: 59, column: 2, scope: !14097)
!14125 = !DILocation(line: 62, column: 1, scope: !14083)
!14126 = distinct !DISubprogram(name: "z_device_is_ready", scope: !14063, file: !14063, line: 93, type: !14127, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3432, retainedNodes: !14129)
!14127 = !DISubroutineType(types: !14128)
!14128 = !{!422, !14066}
!14129 = !{!14130}
!14130 = !DILocalVariable(name: "dev", arg: 1, scope: !14126, file: !14063, line: 93, type: !14066)
!14131 = !DILocation(line: 0, scope: !14126)
!14132 = !DILocation(line: 99, column: 10, scope: !14133)
!14133 = distinct !DILexicalBlock(scope: !14126, file: !14063, line: 99, column: 6)
!14134 = !DILocation(line: 99, column: 6, scope: !14126)
!14135 = !DILocation(line: 103, column: 14, scope: !14126)
!14136 = !DILocation(line: 103, column: 21, scope: !14126)
!14137 = !DILocation(line: 103, column: 33, scope: !14126)
!14138 = !DILocation(line: 103, column: 49, scope: !14126)
!14139 = !DILocation(line: 103, column: 58, scope: !14126)
!14140 = !DILocation(line: 104, column: 1, scope: !14126)
!14141 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !14063, file: !14063, line: 87, type: !14142, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3432, retainedNodes: !14145)
!14142 = !DISubroutineType(types: !14143)
!14143 = !{!439, !14144}
!14144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14066, size: 32)
!14145 = !{!14146}
!14146 = !DILocalVariable(name: "devices", arg: 1, scope: !14141, file: !14063, line: 87, type: !14144)
!14147 = !DILocation(line: 0, scope: !14141)
!14148 = !DILocation(line: 89, column: 11, scope: !14141)
!14149 = !DILocation(line: 90, column: 2, scope: !14141)
!14150 = distinct !DISubprogram(name: "device_required_foreach", scope: !14063, file: !14063, line: 125, type: !14151, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3432, retainedNodes: !14157)
!14151 = !DISubroutineType(types: !14152)
!14152 = !{!108, !14066, !14153, !104}
!14153 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !411, line: 471, baseType: !14154)
!14154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14155, size: 32)
!14155 = !DISubroutineType(types: !14156)
!14156 = !{!108, !14066, !104}
!14157 = !{!14158, !14159, !14160, !14161, !14162}
!14158 = !DILocalVariable(name: "dev", arg: 1, scope: !14150, file: !14063, line: 125, type: !14066)
!14159 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !14150, file: !14063, line: 126, type: !14153)
!14160 = !DILocalVariable(name: "context", arg: 3, scope: !14150, file: !14063, line: 127, type: !104)
!14161 = !DILocalVariable(name: "handle_count", scope: !14150, file: !14063, line: 129, type: !439)
!14162 = !DILocalVariable(name: "handles", scope: !14150, file: !14063, line: 130, type: !425)
!14163 = !DILocation(line: 0, scope: !14150)
!14164 = !DILocation(line: 129, column: 2, scope: !14150)
!14165 = !DILocation(line: 129, column: 9, scope: !14150)
!14166 = !DILocation(line: 130, column: 35, scope: !14150)
!14167 = !DILocation(line: 132, column: 33, scope: !14150)
!14168 = !DILocation(line: 132, column: 9, scope: !14150)
!14169 = !DILocation(line: 133, column: 1, scope: !14150)
!14170 = !DILocation(line: 132, column: 2, scope: !14150)
!14171 = distinct !DISubprogram(name: "device_required_handles_get", scope: !411, file: !411, line: 493, type: !14172, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3432, retainedNodes: !14174)
!14172 = !DISubroutineType(types: !14173)
!14173 = !{!425, !14066, !2943}
!14174 = !{!14175, !14176, !14177, !14178}
!14175 = !DILocalVariable(name: "dev", arg: 1, scope: !14171, file: !411, line: 493, type: !14066)
!14176 = !DILocalVariable(name: "count", arg: 2, scope: !14171, file: !411, line: 493, type: !2943)
!14177 = !DILocalVariable(name: "rv", scope: !14171, file: !411, line: 495, type: !425)
!14178 = !DILocalVariable(name: "i", scope: !14179, file: !411, line: 498, type: !439)
!14179 = distinct !DILexicalBlock(scope: !14180, file: !411, line: 497, column: 18)
!14180 = distinct !DILexicalBlock(scope: !14171, file: !411, line: 497, column: 6)
!14181 = !DILocation(line: 0, scope: !14171)
!14182 = !DILocation(line: 495, column: 35, scope: !14171)
!14183 = !DILocation(line: 497, column: 9, scope: !14180)
!14184 = !DILocation(line: 497, column: 6, scope: !14171)
!14185 = !DILocation(line: 0, scope: !14179)
!14186 = !DILocation(line: 500, column: 11, scope: !14179)
!14187 = !DILocation(line: 500, column: 40, scope: !14179)
!14188 = !DILocation(line: 502, column: 4, scope: !14189)
!14189 = distinct !DILexicalBlock(scope: !14179, file: !411, line: 501, column: 40)
!14190 = distinct !{!14190, !14191, !14192}
!14191 = !DILocation(line: 500, column: 3, scope: !14179)
!14192 = !DILocation(line: 503, column: 3, scope: !14179)
!14193 = !DILocation(line: 504, column: 10, scope: !14179)
!14194 = !DILocation(line: 505, column: 2, scope: !14179)
!14195 = !DILocation(line: 507, column: 2, scope: !14171)
!14196 = distinct !DISubprogram(name: "device_visitor", scope: !14063, file: !14063, line: 106, type: !14197, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3432, retainedNodes: !14199)
!14197 = !DISubroutineType(types: !14198)
!14198 = !{!108, !425, !439, !14153, !104}
!14199 = !{!14200, !14201, !14202, !14203, !14204, !14206, !14209, !14210}
!14200 = !DILocalVariable(name: "handles", arg: 1, scope: !14196, file: !14063, line: 106, type: !425)
!14201 = !DILocalVariable(name: "handle_count", arg: 2, scope: !14196, file: !14063, line: 107, type: !439)
!14202 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !14196, file: !14063, line: 108, type: !14153)
!14203 = !DILocalVariable(name: "context", arg: 4, scope: !14196, file: !14063, line: 109, type: !104)
!14204 = !DILocalVariable(name: "i", scope: !14205, file: !14063, line: 112, type: !439)
!14205 = distinct !DILexicalBlock(scope: !14196, file: !14063, line: 112, column: 2)
!14206 = !DILocalVariable(name: "dh", scope: !14207, file: !14063, line: 113, type: !427)
!14207 = distinct !DILexicalBlock(scope: !14208, file: !14063, line: 112, column: 44)
!14208 = distinct !DILexicalBlock(scope: !14205, file: !14063, line: 112, column: 2)
!14209 = !DILocalVariable(name: "rdev", scope: !14207, file: !14063, line: 114, type: !14066)
!14210 = !DILocalVariable(name: "rc", scope: !14207, file: !14063, line: 115, type: !108)
!14211 = !DILocation(line: 0, scope: !14196)
!14212 = !DILocation(line: 0, scope: !14205)
!14213 = !DILocation(line: 112, column: 23, scope: !14208)
!14214 = !DILocation(line: 112, column: 2, scope: !14205)
!14215 = distinct !{!14215, !14214, !14216}
!14216 = !DILocation(line: 120, column: 2, scope: !14205)
!14217 = !DILocation(line: 113, column: 24, scope: !14207)
!14218 = !DILocation(line: 0, scope: !14207)
!14219 = !DILocation(line: 114, column: 31, scope: !14207)
!14220 = !DILocation(line: 115, column: 12, scope: !14207)
!14221 = !DILocation(line: 117, column: 10, scope: !14222)
!14222 = distinct !DILexicalBlock(scope: !14207, file: !14063, line: 117, column: 7)
!14223 = !DILocation(line: 112, column: 39, scope: !14208)
!14224 = !DILocation(line: 123, column: 1, scope: !14196)
!14225 = distinct !DISubprogram(name: "device_from_handle", scope: !411, file: !411, line: 439, type: !14226, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3432, retainedNodes: !14228)
!14226 = !DISubroutineType(types: !14227)
!14227 = !{!14066, !427}
!14228 = !{!14229, !14230, !14231}
!14229 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !14225, file: !411, line: 439, type: !427)
!14230 = !DILocalVariable(name: "dev", scope: !14225, file: !411, line: 443, type: !14066)
!14231 = !DILocalVariable(name: "numdev", scope: !14225, file: !411, line: 444, type: !439)
!14232 = !DILocation(line: 0, scope: !14225)
!14233 = !DILocation(line: 446, column: 7, scope: !14234)
!14234 = distinct !DILexicalBlock(scope: !14225, file: !411, line: 446, column: 6)
!14235 = !DILocation(line: 446, column: 18, scope: !14234)
!14236 = !DILocation(line: 446, column: 23, scope: !14234)
!14237 = !DILocation(line: 450, column: 2, scope: !14225)
!14238 = distinct !DISubprogram(name: "device_supported_foreach", scope: !14063, file: !14063, line: 135, type: !14151, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3432, retainedNodes: !14239)
!14239 = !{!14240, !14241, !14242, !14243, !14244}
!14240 = !DILocalVariable(name: "dev", arg: 1, scope: !14238, file: !14063, line: 135, type: !14066)
!14241 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !14238, file: !14063, line: 136, type: !14153)
!14242 = !DILocalVariable(name: "context", arg: 3, scope: !14238, file: !14063, line: 137, type: !104)
!14243 = !DILocalVariable(name: "handle_count", scope: !14238, file: !14063, line: 139, type: !439)
!14244 = !DILocalVariable(name: "handles", scope: !14238, file: !14063, line: 140, type: !425)
!14245 = !DILocation(line: 0, scope: !14238)
!14246 = !DILocation(line: 139, column: 2, scope: !14238)
!14247 = !DILocation(line: 139, column: 9, scope: !14238)
!14248 = !DILocation(line: 140, column: 35, scope: !14238)
!14249 = !DILocation(line: 142, column: 33, scope: !14238)
!14250 = !DILocation(line: 142, column: 9, scope: !14238)
!14251 = !DILocation(line: 143, column: 1, scope: !14238)
!14252 = !DILocation(line: 142, column: 2, scope: !14238)
!14253 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !411, file: !411, line: 573, type: !14172, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3432, retainedNodes: !14254)
!14254 = !{!14255, !14256, !14257, !14258, !14259}
!14255 = !DILocalVariable(name: "dev", arg: 1, scope: !14253, file: !411, line: 573, type: !14066)
!14256 = !DILocalVariable(name: "count", arg: 2, scope: !14253, file: !411, line: 573, type: !2943)
!14257 = !DILocalVariable(name: "rv", scope: !14253, file: !411, line: 575, type: !425)
!14258 = !DILocalVariable(name: "region", scope: !14253, file: !411, line: 576, type: !439)
!14259 = !DILocalVariable(name: "i", scope: !14253, file: !411, line: 577, type: !439)
!14260 = !DILocation(line: 0, scope: !14253)
!14261 = !DILocation(line: 575, column: 35, scope: !14253)
!14262 = !DILocation(line: 579, column: 9, scope: !14263)
!14263 = distinct !DILexicalBlock(scope: !14253, file: !411, line: 579, column: 6)
!14264 = !DILocation(line: 579, column: 6, scope: !14253)
!14265 = !DILocation(line: 582, column: 8, scope: !14266)
!14266 = distinct !DILexicalBlock(scope: !14267, file: !411, line: 582, column: 8)
!14267 = distinct !DILexicalBlock(scope: !14268, file: !411, line: 581, column: 23)
!14268 = distinct !DILexicalBlock(scope: !14263, file: !411, line: 579, column: 18)
!14269 = !DILocation(line: 582, column: 12, scope: !14266)
!14270 = !DILocation(line: 585, column: 6, scope: !14267)
!14271 = !DILocation(line: 0, scope: !14268)
!14272 = !DILocation(line: 581, column: 17, scope: !14268)
!14273 = !DILocation(line: 581, column: 3, scope: !14268)
!14274 = !DILocation(line: 588, column: 10, scope: !14268)
!14275 = !DILocation(line: 588, column: 16, scope: !14268)
!14276 = !DILocation(line: 589, column: 4, scope: !14277)
!14277 = distinct !DILexicalBlock(scope: !14268, file: !411, line: 588, column: 39)
!14278 = !DILocation(line: 588, column: 3, scope: !14268)
!14279 = distinct !{!14279, !14278, !14280}
!14280 = !DILocation(line: 590, column: 3, scope: !14268)
!14281 = !DILocation(line: 591, column: 10, scope: !14268)
!14282 = !DILocation(line: 592, column: 2, scope: !14268)
!14283 = !DILocation(line: 575, column: 25, scope: !14253)
!14284 = !DILocation(line: 594, column: 2, scope: !14253)
!14285 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !2237, file: !2237, line: 49, type: !14286, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2234, retainedNodes: !437)
!14286 = !DISubroutineType(types: !14287)
!14287 = !{!544}
!14288 = !DILocation(line: 51, column: 10, scope: !14285)
!14289 = !DILocation(line: 51, column: 20, scope: !14285)
!14290 = !DILocation(line: 51, column: 2, scope: !14285)
!14291 = distinct !DISubprogram(name: "coredump", scope: !3439, file: !3439, line: 209, type: !14292, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3435, retainedNodes: !14438)
!14292 = !DISubroutineType(types: !14293)
!14293 = !{null, !32, !14294, !14338}
!14294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14295, size: 32)
!14295 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14296)
!14296 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !3071, line: 141, baseType: !14297)
!14297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !3071, line: 97, size: 256, elements: !14298)
!14298 = !{!14299}
!14299 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !14297, file: !3071, line: 107, baseType: !14300, size: 256)
!14300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !3071, line: 98, size: 256, elements: !14301)
!14301 = !{!14302, !14307, !14312, !14317, !14322, !14327, !14332, !14337}
!14302 = !DIDerivedType(tag: DW_TAG_member, scope: !14300, file: !3071, line: 99, baseType: !14303, size: 32)
!14303 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14300, file: !3071, line: 99, size: 32, elements: !14304)
!14304 = !{!14305, !14306}
!14305 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !14303, file: !3071, line: 99, baseType: !113, size: 32)
!14306 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !14303, file: !3071, line: 99, baseType: !113, size: 32)
!14307 = !DIDerivedType(tag: DW_TAG_member, scope: !14300, file: !3071, line: 100, baseType: !14308, size: 32, offset: 32)
!14308 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14300, file: !3071, line: 100, size: 32, elements: !14309)
!14309 = !{!14310, !14311}
!14310 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !14308, file: !3071, line: 100, baseType: !113, size: 32)
!14311 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !14308, file: !3071, line: 100, baseType: !113, size: 32)
!14312 = !DIDerivedType(tag: DW_TAG_member, scope: !14300, file: !3071, line: 101, baseType: !14313, size: 32, offset: 64)
!14313 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14300, file: !3071, line: 101, size: 32, elements: !14314)
!14314 = !{!14315, !14316}
!14315 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !14313, file: !3071, line: 101, baseType: !113, size: 32)
!14316 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !14313, file: !3071, line: 101, baseType: !113, size: 32)
!14317 = !DIDerivedType(tag: DW_TAG_member, scope: !14300, file: !3071, line: 102, baseType: !14318, size: 32, offset: 96)
!14318 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14300, file: !3071, line: 102, size: 32, elements: !14319)
!14319 = !{!14320, !14321}
!14320 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !14318, file: !3071, line: 102, baseType: !113, size: 32)
!14321 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !14318, file: !3071, line: 102, baseType: !113, size: 32)
!14322 = !DIDerivedType(tag: DW_TAG_member, scope: !14300, file: !3071, line: 103, baseType: !14323, size: 32, offset: 128)
!14323 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14300, file: !3071, line: 103, size: 32, elements: !14324)
!14324 = !{!14325, !14326}
!14325 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !14323, file: !3071, line: 103, baseType: !113, size: 32)
!14326 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !14323, file: !3071, line: 103, baseType: !113, size: 32)
!14327 = !DIDerivedType(tag: DW_TAG_member, scope: !14300, file: !3071, line: 104, baseType: !14328, size: 32, offset: 160)
!14328 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14300, file: !3071, line: 104, size: 32, elements: !14329)
!14329 = !{!14330, !14331}
!14330 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !14328, file: !3071, line: 104, baseType: !113, size: 32)
!14331 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !14328, file: !3071, line: 104, baseType: !113, size: 32)
!14332 = !DIDerivedType(tag: DW_TAG_member, scope: !14300, file: !3071, line: 105, baseType: !14333, size: 32, offset: 192)
!14333 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14300, file: !3071, line: 105, size: 32, elements: !14334)
!14334 = !{!14335, !14336}
!14335 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !14333, file: !3071, line: 105, baseType: !113, size: 32)
!14336 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !14333, file: !3071, line: 105, baseType: !113, size: 32)
!14337 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !14300, file: !3071, line: 106, baseType: !113, size: 32, offset: 224)
!14338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14339, size: 32)
!14339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !651, line: 245, size: 1024, elements: !14340)
!14340 = !{!14341, !14399, !14411, !14412, !14413, !14414, !14420, !14433}
!14341 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !14339, file: !651, line: 247, baseType: !14342, size: 384)
!14342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !651, line: 57, size: 384, elements: !14343)
!14343 = !{!14344, !14368, !14375, !14376, !14377, !14386, !14387, !14388}
!14344 = !DIDerivedType(tag: DW_TAG_member, scope: !14342, file: !651, line: 60, baseType: !14345, size: 64)
!14345 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14342, file: !651, line: 60, size: 64, elements: !14346)
!14346 = !{!14347, !14362}
!14347 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !14345, file: !651, line: 61, baseType: !14348, size: 64)
!14348 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !367, line: 49, baseType: !14349)
!14349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !367, line: 37, size: 64, elements: !14350)
!14350 = !{!14351, !14357}
!14351 = !DIDerivedType(tag: DW_TAG_member, scope: !14349, file: !367, line: 38, baseType: !14352, size: 32)
!14352 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14349, file: !367, line: 38, size: 32, elements: !14353)
!14353 = !{!14354, !14356}
!14354 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !14352, file: !367, line: 39, baseType: !14355, size: 32)
!14355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14349, size: 32)
!14356 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !14352, file: !367, line: 40, baseType: !14355, size: 32)
!14357 = !DIDerivedType(tag: DW_TAG_member, scope: !14349, file: !367, line: 42, baseType: !14358, size: 32, offset: 32)
!14358 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14349, file: !367, line: 42, size: 32, elements: !14359)
!14359 = !{!14360, !14361}
!14360 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !14358, file: !367, line: 43, baseType: !14355, size: 32)
!14361 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !14358, file: !367, line: 44, baseType: !14355, size: 32)
!14362 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !14345, file: !651, line: 62, baseType: !14363, size: 64)
!14363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !676, line: 49, size: 64, elements: !14364)
!14364 = !{!14365}
!14365 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !14363, file: !676, line: 50, baseType: !14366, size: 64)
!14366 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14367, size: 64, elements: !681)
!14367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14363, size: 32)
!14368 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !14342, file: !651, line: 68, baseType: !14369, size: 32, offset: 64)
!14369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14370, size: 32)
!14370 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !363, line: 233, baseType: !14371)
!14371 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 231, size: 64, elements: !14372)
!14372 = !{!14373}
!14373 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !14371, file: !363, line: 232, baseType: !14374, size: 64)
!14374 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !367, line: 48, baseType: !14349)
!14375 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !14342, file: !651, line: 71, baseType: !164, size: 8, offset: 96)
!14376 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !14342, file: !651, line: 74, baseType: !164, size: 8, offset: 104)
!14377 = !DIDerivedType(tag: DW_TAG_member, scope: !14342, file: !651, line: 90, baseType: !14378, size: 16, offset: 112)
!14378 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14342, file: !651, line: 90, size: 16, elements: !14379)
!14379 = !{!14380, !14385}
!14380 = !DIDerivedType(tag: DW_TAG_member, scope: !14378, file: !651, line: 91, baseType: !14381, size: 16)
!14381 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !14378, file: !651, line: 91, size: 16, elements: !14382)
!14382 = !{!14383, !14384}
!14383 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !14381, file: !651, line: 96, baseType: !699, size: 8)
!14384 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !14381, file: !651, line: 97, baseType: !164, size: 8, offset: 8)
!14385 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !14378, file: !651, line: 100, baseType: !168, size: 16)
!14386 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !14342, file: !651, line: 107, baseType: !113, size: 32, offset: 128)
!14387 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !14342, file: !651, line: 127, baseType: !104, size: 32, offset: 160)
!14388 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !14342, file: !651, line: 131, baseType: !14389, size: 192, offset: 192)
!14389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !363, line: 244, size: 192, elements: !14390)
!14390 = !{!14391, !14392, !14398}
!14391 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !14389, file: !363, line: 245, baseType: !14348, size: 64)
!14392 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !14389, file: !363, line: 246, baseType: !14393, size: 32, offset: 64)
!14393 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !363, line: 242, baseType: !14394)
!14394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14395, size: 32)
!14395 = !DISubroutineType(types: !14396)
!14396 = !{null, !14397}
!14397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14389, size: 32)
!14398 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !14389, file: !363, line: 249, baseType: !111, size: 64, offset: 128)
!14399 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !14339, file: !651, line: 250, baseType: !14400, size: 288, offset: 384)
!14400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !718, line: 25, size: 288, elements: !14401)
!14401 = !{!14402, !14403, !14404, !14405, !14406, !14407, !14408, !14409, !14410}
!14402 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !14400, file: !718, line: 26, baseType: !113, size: 32)
!14403 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !14400, file: !718, line: 27, baseType: !113, size: 32, offset: 32)
!14404 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !14400, file: !718, line: 28, baseType: !113, size: 32, offset: 64)
!14405 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !14400, file: !718, line: 29, baseType: !113, size: 32, offset: 96)
!14406 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !14400, file: !718, line: 30, baseType: !113, size: 32, offset: 128)
!14407 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !14400, file: !718, line: 31, baseType: !113, size: 32, offset: 160)
!14408 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !14400, file: !718, line: 32, baseType: !113, size: 32, offset: 192)
!14409 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !14400, file: !718, line: 33, baseType: !113, size: 32, offset: 224)
!14410 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !14400, file: !718, line: 34, baseType: !113, size: 32, offset: 256)
!14411 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !14339, file: !651, line: 253, baseType: !104, size: 32, offset: 672)
!14412 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !14339, file: !651, line: 256, baseType: !14370, size: 64, offset: 704)
!14413 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !14339, file: !651, line: 294, baseType: !108, size: 32, offset: 768)
!14414 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !14339, file: !651, line: 300, baseType: !14415, size: 96, offset: 800)
!14415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !651, line: 149, size: 96, elements: !14416)
!14416 = !{!14417, !14418, !14419}
!14417 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !14415, file: !651, line: 153, baseType: !22, size: 32)
!14418 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !14415, file: !651, line: 162, baseType: !439, size: 32, offset: 32)
!14419 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !14415, file: !651, line: 168, baseType: !439, size: 32, offset: 64)
!14420 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !14339, file: !651, line: 325, baseType: !14421, size: 32, offset: 896)
!14421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14422, size: 32)
!14422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !359, line: 5073, size: 160, elements: !14423)
!14423 = !{!14424, !14430, !14431}
!14424 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !14422, file: !359, line: 5074, baseType: !14425, size: 96)
!14425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !744, line: 56, size: 96, elements: !14426)
!14426 = !{!14427, !14428, !14429}
!14427 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !14425, file: !744, line: 57, baseType: !747, size: 32)
!14428 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !14425, file: !744, line: 58, baseType: !104, size: 32, offset: 32)
!14429 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !14425, file: !744, line: 59, baseType: !439, size: 32, offset: 64)
!14430 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !14422, file: !359, line: 5075, baseType: !14370, size: 64, offset: 96)
!14431 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !14422, file: !359, line: 5076, baseType: !14432, offset: 160)
!14432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !436, line: 43, elements: !437)
!14433 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !14339, file: !651, line: 343, baseType: !14434, size: 64, offset: 928)
!14434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !718, line: 60, size: 64, elements: !14435)
!14435 = !{!14436, !14437}
!14436 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !14434, file: !718, line: 63, baseType: !113, size: 32)
!14437 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !14434, file: !718, line: 66, baseType: !113, size: 32, offset: 32)
!14438 = !{!14439, !14440, !14441}
!14439 = !DILocalVariable(name: "reason", arg: 1, scope: !14291, file: !3439, line: 209, type: !32)
!14440 = !DILocalVariable(name: "esf", arg: 2, scope: !14291, file: !3439, line: 209, type: !14294)
!14441 = !DILocalVariable(name: "thread", arg: 3, scope: !14291, file: !3439, line: 210, type: !14338)
!14442 = !DILocation(line: 0, scope: !14291)
!14443 = !DILocation(line: 212, column: 1, scope: !14291)
!14444 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3439, file: !3439, line: 214, type: !14445, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3435, retainedNodes: !14447)
!14445 = !DISubroutineType(types: !14446)
!14446 = !{null, !22, !22}
!14447 = !{!14448, !14449}
!14448 = !DILocalVariable(name: "start_addr", arg: 1, scope: !14444, file: !3439, line: 214, type: !22)
!14449 = !DILocalVariable(name: "end_addr", arg: 2, scope: !14444, file: !3439, line: 214, type: !22)
!14450 = !DILocation(line: 0, scope: !14444)
!14451 = !DILocation(line: 216, column: 1, scope: !14444)
!14452 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3439, file: !3439, line: 218, type: !14453, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3435, retainedNodes: !14455)
!14453 = !DISubroutineType(types: !14454)
!14454 = !{null, !209, !439}
!14455 = !{!14456, !14457}
!14456 = !DILocalVariable(name: "buf", arg: 1, scope: !14452, file: !3439, line: 218, type: !209)
!14457 = !DILocalVariable(name: "buflen", arg: 2, scope: !14452, file: !3439, line: 218, type: !439)
!14458 = !DILocation(line: 0, scope: !14452)
!14459 = !DILocation(line: 220, column: 1, scope: !14452)
!14460 = distinct !DISubprogram(name: "coredump_query", scope: !3439, file: !3439, line: 222, type: !14461, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3435, retainedNodes: !14463)
!14461 = !DISubroutineType(types: !14462)
!14462 = !{!108, !3438, !104}
!14463 = !{!14464, !14465}
!14464 = !DILocalVariable(name: "query_id", arg: 1, scope: !14460, file: !3439, line: 222, type: !3438)
!14465 = !DILocalVariable(name: "arg", arg: 2, scope: !14460, file: !3439, line: 222, type: !104)
!14466 = !DILocation(line: 0, scope: !14460)
!14467 = !DILocation(line: 224, column: 2, scope: !14460)
!14468 = distinct !DISubprogram(name: "coredump_cmd", scope: !3439, file: !3439, line: 227, type: !14469, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3435, retainedNodes: !14471)
!14469 = !DISubroutineType(types: !14470)
!14470 = !{!108, !3445, !104}
!14471 = !{!14472, !14473}
!14472 = !DILocalVariable(name: "query_id", arg: 1, scope: !14468, file: !3439, line: 227, type: !3445)
!14473 = !DILocalVariable(name: "arg", arg: 2, scope: !14468, file: !3439, line: 227, type: !104)
!14474 = !DILocation(line: 0, scope: !14468)
!14475 = !DILocation(line: 229, column: 2, scope: !14468)
!14476 = distinct !DISubprogram(name: "arch_system_halt", scope: !14477, file: !14477, line: 23, type: !4159, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3435, retainedNodes: !14478)
!14477 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14478 = !{!14479}
!14479 = !DILocalVariable(name: "reason", arg: 1, scope: !14476, file: !14477, line: 23, type: !32)
!14480 = !DILocation(line: 0, scope: !14476)
!14481 = !DILocation(line: 55, column: 2, scope: !14482, inlinedAt: !14486)
!14482 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4146, file: !4146, line: 42, type: !4147, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3435, retainedNodes: !14483)
!14483 = !{!14484, !14485}
!14484 = !DILocalVariable(name: "key", scope: !14482, file: !4146, line: 44, type: !32)
!14485 = !DILocalVariable(name: "tmp", scope: !14482, file: !4146, line: 53, type: !32)
!14486 = distinct !DILocation(line: 31, column: 8, scope: !14476)
!14487 = !{i64 2297396}
!14488 = !DILocation(line: 0, scope: !14482, inlinedAt: !14486)
!14489 = !DILocation(line: 32, column: 2, scope: !14476)
!14490 = !DILocation(line: 32, column: 2, scope: !14491)
!14491 = distinct !DILexicalBlock(scope: !14492, file: !14477, line: 32, column: 2)
!14492 = distinct !DILexicalBlock(scope: !14476, file: !14477, line: 32, column: 2)
!14493 = distinct !{!14493, !14494, !14495}
!14494 = !DILocation(line: 32, column: 2, scope: !14492)
!14495 = !DILocation(line: 34, column: 2, scope: !14492)
!14496 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !14477, file: !14477, line: 39, type: !14497, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3435, retainedNodes: !14499)
!14497 = !DISubroutineType(types: !14498)
!14498 = !{null, !32, !14294}
!14499 = !{!14500, !14501}
!14500 = !DILocalVariable(name: "reason", arg: 1, scope: !14496, file: !14477, line: 39, type: !32)
!14501 = !DILocalVariable(name: "esf", arg: 2, scope: !14496, file: !14477, line: 40, type: !14294)
!14502 = !DILocation(line: 0, scope: !14496)
!14503 = !DILocation(line: 45, column: 2, scope: !14504)
!14504 = distinct !DILexicalBlock(scope: !14505, file: !14477, line: 45, column: 2)
!14505 = distinct !DILexicalBlock(scope: !14506, file: !14477, line: 45, column: 2)
!14506 = distinct !DILexicalBlock(scope: !14507, file: !14477, line: 45, column: 2)
!14507 = distinct !DILexicalBlock(scope: !14496, file: !14477, line: 45, column: 2)
!14508 = !DILocation(line: 46, column: 2, scope: !14496)
!14509 = distinct !DISubprogram(name: "k_fatal_halt", scope: !14477, file: !14477, line: 81, type: !4159, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3435, retainedNodes: !14510)
!14510 = !{!14511}
!14511 = !DILocalVariable(name: "reason", arg: 1, scope: !14509, file: !14477, line: 81, type: !32)
!14512 = !DILocation(line: 0, scope: !14509)
!14513 = !DILocation(line: 83, column: 2, scope: !14509)
!14514 = distinct !DISubprogram(name: "z_fatal_error", scope: !14477, file: !14477, line: 96, type: !14497, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3435, retainedNodes: !14515)
!14515 = !{!14516, !14517, !14518, !14519}
!14516 = !DILocalVariable(name: "reason", arg: 1, scope: !14514, file: !14477, line: 96, type: !32)
!14517 = !DILocalVariable(name: "esf", arg: 2, scope: !14514, file: !14477, line: 96, type: !14294)
!14518 = !DILocalVariable(name: "key", scope: !14514, file: !14477, line: 102, type: !32)
!14519 = !DILocalVariable(name: "thread", scope: !14514, file: !14477, line: 103, type: !14338)
!14520 = !DILocation(line: 0, scope: !14514)
!14521 = !DILocation(line: 55, column: 2, scope: !14482, inlinedAt: !14522)
!14522 = distinct !DILocation(line: 102, column: 21, scope: !14514)
!14523 = !DILocation(line: 0, scope: !14482, inlinedAt: !14522)
!14524 = !DILocation(line: 104, column: 4, scope: !14514)
!14525 = !DILocation(line: 109, column: 2, scope: !14526)
!14526 = distinct !DILexicalBlock(scope: !14527, file: !14477, line: 109, column: 2)
!14527 = distinct !DILexicalBlock(scope: !14528, file: !14477, line: 109, column: 2)
!14528 = distinct !DILexicalBlock(scope: !14529, file: !14477, line: 109, column: 2)
!14529 = distinct !DILexicalBlock(scope: !14514, file: !14477, line: 109, column: 2)
!14530 = !DILocation(line: 119, column: 11, scope: !14531)
!14531 = distinct !DILexicalBlock(scope: !14514, file: !14477, line: 119, column: 6)
!14532 = !DILocation(line: 119, column: 20, scope: !14531)
!14533 = !DILocalVariable(name: "esf", arg: 1, scope: !14534, file: !8146, line: 71, type: !14294)
!14534 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !8146, file: !8146, line: 71, type: !14535, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3435, retainedNodes: !14537)
!14535 = !DISubroutineType(types: !14536)
!14536 = !{!422, !14294}
!14537 = !{!14533}
!14538 = !DILocation(line: 0, scope: !14534, inlinedAt: !14539)
!14539 = distinct !DILocation(line: 119, column: 23, scope: !14531)
!14540 = !DILocation(line: 73, column: 21, scope: !14534, inlinedAt: !14539)
!14541 = !DILocation(line: 73, column: 26, scope: !14534, inlinedAt: !14539)
!14542 = !DILocation(line: 73, column: 9, scope: !14534, inlinedAt: !14539)
!14543 = !DILocation(line: 119, column: 6, scope: !14514)
!14544 = !DILocation(line: 120, column: 3, scope: !14545)
!14545 = distinct !DILexicalBlock(scope: !14546, file: !14477, line: 120, column: 3)
!14546 = distinct !DILexicalBlock(scope: !14547, file: !14477, line: 120, column: 3)
!14547 = distinct !DILexicalBlock(scope: !14548, file: !14477, line: 120, column: 3)
!14548 = distinct !DILexicalBlock(scope: !14549, file: !14477, line: 120, column: 3)
!14549 = distinct !DILexicalBlock(scope: !14531, file: !14477, line: 119, column: 57)
!14550 = !DILocation(line: 121, column: 2, scope: !14549)
!14551 = !DILocation(line: 124, column: 2, scope: !14552)
!14552 = distinct !DILexicalBlock(scope: !14553, file: !14477, line: 124, column: 2)
!14553 = distinct !DILexicalBlock(scope: !14554, file: !14477, line: 124, column: 2)
!14554 = distinct !DILexicalBlock(scope: !14555, file: !14477, line: 124, column: 2)
!14555 = distinct !DILexicalBlock(scope: !14514, file: !14477, line: 124, column: 2)
!14556 = !DILocation(line: 131, column: 2, scope: !14514)
!14557 = !DILocation(line: 0, scope: !14534, inlinedAt: !14558)
!14558 = distinct !DILocation(line: 151, column: 24, scope: !14559)
!14559 = distinct !DILexicalBlock(scope: !14560, file: !14477, line: 151, column: 7)
!14560 = distinct !DILexicalBlock(scope: !14561, file: !14477, line: 146, column: 32)
!14561 = distinct !DILexicalBlock(scope: !14514, file: !14477, line: 146, column: 6)
!14562 = !DILocation(line: 151, column: 7, scope: !14560)
!14563 = !DILocation(line: 151, column: 21, scope: !14559)
!14564 = !DILocalVariable(name: "key", arg: 1, scope: !14565, file: !4146, line: 84, type: !32)
!14565 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4146, file: !4146, line: 84, type: !4159, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3435, retainedNodes: !14566)
!14566 = !{!14564}
!14567 = !DILocation(line: 0, scope: !14565, inlinedAt: !14568)
!14568 = distinct !DILocation(line: 186, column: 2, scope: !14514)
!14569 = !DILocation(line: 95, column: 2, scope: !14565, inlinedAt: !14568)
!14570 = !{i64 2298213}
!14571 = !DILocation(line: 189, column: 3, scope: !14572)
!14572 = distinct !DILexicalBlock(scope: !14573, file: !14477, line: 188, column: 41)
!14573 = distinct !DILexicalBlock(scope: !14514, file: !14477, line: 188, column: 6)
!14574 = !DILocation(line: 191, column: 1, scope: !14514)
!14575 = distinct !DISubprogram(name: "k_current_get", scope: !359, file: !359, line: 530, type: !14576, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3435, retainedNodes: !437)
!14576 = !DISubroutineType(types: !14577)
!14577 = !{!14578}
!14578 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !651, line: 347, baseType: !14338)
!14579 = !DILocation(line: 535, column: 9, scope: !14575)
!14580 = !DILocation(line: 535, column: 2, scope: !14575)
!14581 = distinct !DISubprogram(name: "reason_to_str", scope: !14477, file: !14477, line: 62, type: !14582, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3435, retainedNodes: !14584)
!14582 = !DISubroutineType(types: !14583)
!14583 = !{!105, !32}
!14584 = !{!14585}
!14585 = !DILocalVariable(name: "reason", arg: 1, scope: !14581, file: !14477, line: 62, type: !32)
!14586 = !DILocation(line: 0, scope: !14581)
!14587 = !DILocation(line: 64, column: 2, scope: !14581)
!14588 = !DILocation(line: 0, scope: !14589)
!14589 = distinct !DILexicalBlock(scope: !14581, file: !14477, line: 64, column: 18)
!14590 = !DILocation(line: 78, column: 1, scope: !14581)
!14591 = distinct !DISubprogram(name: "thread_name_get", scope: !14477, file: !14477, line: 51, type: !14592, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3435, retainedNodes: !14594)
!14592 = !DISubroutineType(types: !14593)
!14593 = !{!105, !14338}
!14594 = !{!14595, !14596}
!14595 = !DILocalVariable(name: "thread", arg: 1, scope: !14591, file: !14477, line: 51, type: !14338)
!14596 = !DILocalVariable(name: "thread_name", scope: !14591, file: !14477, line: 53, type: !105)
!14597 = !DILocation(line: 0, scope: !14591)
!14598 = !DILocation(line: 53, column: 36, scope: !14591)
!14599 = !DILocation(line: 53, column: 28, scope: !14591)
!14600 = !DILocation(line: 53, column: 47, scope: !14591)
!14601 = !DILocation(line: 55, column: 19, scope: !14602)
!14602 = distinct !DILexicalBlock(scope: !14591, file: !14477, line: 55, column: 6)
!14603 = !DILocation(line: 55, column: 28, scope: !14602)
!14604 = !DILocation(line: 55, column: 32, scope: !14602)
!14605 = !DILocation(line: 55, column: 47, scope: !14602)
!14606 = !DILocation(line: 55, column: 6, scope: !14591)
!14607 = !DILocation(line: 57, column: 2, scope: !14608)
!14608 = distinct !DILexicalBlock(scope: !14602, file: !14477, line: 55, column: 57)
!14609 = !DILocation(line: 59, column: 2, scope: !14591)
!14610 = distinct !DISubprogram(name: "k_thread_abort", scope: !3868, file: !3868, line: 188, type: !14611, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3435, retainedNodes: !14613)
!14611 = !DISubroutineType(types: !14612)
!14612 = !{null, !14578}
!14613 = !{!14614}
!14614 = !DILocalVariable(name: "thread", arg: 1, scope: !14610, file: !3868, line: 188, type: !14578)
!14615 = !DILocation(line: 0, scope: !14610)
!14616 = !DILocation(line: 197, column: 2, scope: !14617)
!14617 = distinct !DILexicalBlock(scope: !14610, file: !3868, line: 197, column: 2)
!14618 = !{i64 2155078967}
!14619 = !DILocation(line: 198, column: 2, scope: !14610)
!14620 = !DILocation(line: 199, column: 1, scope: !14610)
!14621 = distinct !DISubprogram(name: "z_current_get", scope: !3868, file: !3868, line: 173, type: !14576, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3435, retainedNodes: !437)
!14622 = !DILocation(line: 180, column: 2, scope: !14623)
!14623 = distinct !DILexicalBlock(scope: !14621, file: !3868, line: 180, column: 2)
!14624 = !{i64 2155078899}
!14625 = !DILocation(line: 181, column: 9, scope: !14621)
!14626 = !DILocation(line: 181, column: 2, scope: !14621)
!14627 = distinct !DISubprogram(name: "z_early_memset", scope: !2245, file: !2245, line: 108, type: !14628, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2241, retainedNodes: !14630)
!14628 = !DISubroutineType(types: !14629)
!14629 = !{null, !104, !108, !439}
!14630 = !{!14631, !14632, !14633}
!14631 = !DILocalVariable(name: "dst", arg: 1, scope: !14627, file: !2245, line: 108, type: !104)
!14632 = !DILocalVariable(name: "c", arg: 2, scope: !14627, file: !2245, line: 108, type: !108)
!14633 = !DILocalVariable(name: "n", arg: 3, scope: !14627, file: !2245, line: 108, type: !439)
!14634 = !DILocation(line: 0, scope: !14627)
!14635 = !DILocation(line: 110, column: 9, scope: !14627)
!14636 = !DILocation(line: 111, column: 1, scope: !14627)
!14637 = distinct !DISubprogram(name: "z_early_memcpy", scope: !2245, file: !2245, line: 121, type: !14638, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2241, retainedNodes: !14640)
!14638 = !DISubroutineType(types: !14639)
!14639 = !{null, !104, !13, !439}
!14640 = !{!14641, !14642, !14643}
!14641 = !DILocalVariable(name: "dst", arg: 1, scope: !14637, file: !2245, line: 121, type: !104)
!14642 = !DILocalVariable(name: "src", arg: 2, scope: !14637, file: !2245, line: 121, type: !13)
!14643 = !DILocalVariable(name: "n", arg: 3, scope: !14637, file: !2245, line: 121, type: !439)
!14644 = !DILocation(line: 0, scope: !14637)
!14645 = !DILocation(line: 123, column: 9, scope: !14637)
!14646 = !DILocation(line: 124, column: 1, scope: !14637)
!14647 = distinct !DISubprogram(name: "z_bss_zero", scope: !2245, file: !2245, line: 132, type: !3472, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2241, retainedNodes: !437)
!14648 = !DILocation(line: 143, column: 2, scope: !14647)
!14649 = !DILocation(line: 168, column: 1, scope: !14647)
!14650 = distinct !DISubprogram(name: "z_init_cpu", scope: !2245, file: !2245, line: 372, type: !9708, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2241, retainedNodes: !14651)
!14651 = !{!14652}
!14652 = !DILocalVariable(name: "id", arg: 1, scope: !14650, file: !2245, line: 372, type: !108)
!14653 = !DILocation(line: 0, scope: !14650)
!14654 = !DILocation(line: 374, column: 2, scope: !14650)
!14655 = !DILocation(line: 375, column: 34, scope: !14650)
!14656 = !DILocation(line: 375, column: 19, scope: !14650)
!14657 = !DILocation(line: 375, column: 31, scope: !14650)
!14658 = !DILocation(line: 376, column: 24, scope: !14650)
!14659 = !DILocation(line: 376, column: 19, scope: !14650)
!14660 = !DILocation(line: 376, column: 22, scope: !14650)
!14661 = !DILocation(line: 378, column: 26, scope: !14650)
!14662 = !DILocation(line: 378, column: 4, scope: !14650)
!14663 = !DILocation(line: 378, column: 50, scope: !14650)
!14664 = !DILocation(line: 377, column: 19, scope: !14650)
!14665 = !DILocation(line: 377, column: 29, scope: !14650)
!14666 = !DILocation(line: 384, column: 1, scope: !14650)
!14667 = distinct !DISubprogram(name: "init_idle_thread", scope: !2245, file: !2245, line: 343, type: !9708, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2241, retainedNodes: !14668)
!14668 = !{!14669, !14670, !14671, !14674}
!14669 = !DILocalVariable(name: "i", arg: 1, scope: !14667, file: !2245, line: 343, type: !108)
!14670 = !DILocalVariable(name: "thread", scope: !14667, file: !2245, line: 345, type: !2337)
!14671 = !DILocalVariable(name: "stack", scope: !14667, file: !2245, line: 346, type: !14672)
!14672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14673, size: 32)
!14673 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !5239, line: 44, baseType: !2451)
!14674 = !DILocalVariable(name: "tname", scope: !14667, file: !2245, line: 358, type: !443)
!14675 = !DILocation(line: 0, scope: !14667)
!14676 = !DILocation(line: 345, column: 29, scope: !14667)
!14677 = !DILocation(line: 346, column: 28, scope: !14667)
!14678 = !DILocation(line: 362, column: 37, scope: !14667)
!14679 = !DILocation(line: 362, column: 36, scope: !14667)
!14680 = !DILocation(line: 361, column: 2, scope: !14667)
!14681 = !DILocation(line: 365, column: 2, scope: !14667)
!14682 = !DILocation(line: 370, column: 1, scope: !14667)
!14683 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2452, file: !2452, line: 331, type: !14684, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2241, retainedNodes: !14686)
!14684 = !DISubroutineType(types: !14685)
!14685 = !{!443, !14672}
!14686 = !{!14687}
!14687 = !DILocalVariable(name: "sym", arg: 1, scope: !14683, file: !2452, line: 331, type: !14672)
!14688 = !DILocation(line: 0, scope: !14683)
!14689 = !DILocation(line: 333, column: 21, scope: !14683)
!14690 = !DILocation(line: 333, column: 2, scope: !14683)
!14691 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !14692, file: !14692, line: 155, type: !14693, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2241, retainedNodes: !14695)
!14692 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14693 = !DISubroutineType(types: !14694)
!14694 = !{null, !2337}
!14695 = !{!14696}
!14696 = !DILocalVariable(name: "thread", arg: 1, scope: !14691, file: !14692, line: 155, type: !2337)
!14697 = !DILocation(line: 0, scope: !14691)
!14698 = !DILocation(line: 157, column: 15, scope: !14691)
!14699 = !DILocation(line: 157, column: 28, scope: !14691)
!14700 = !DILocation(line: 158, column: 1, scope: !14691)
!14701 = distinct !DISubprogram(name: "z_cstart", scope: !2245, file: !2245, line: 501, type: !3472, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2241, retainedNodes: !14702)
!14702 = !{!14703}
!14703 = !DILocalVariable(name: "dummy_thread", scope: !14701, file: !2245, line: 518, type: !2338)
!14704 = !DILocation(line: 507, column: 2, scope: !14701)
!14705 = !DILocation(line: 43, column: 14, scope: !14706, inlinedAt: !14710)
!14706 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !14707, file: !14707, line: 40, type: !3472, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2241, retainedNodes: !14708)
!14707 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14708 = !{!14709}
!14709 = !DILocalVariable(name: "msp", scope: !14706, file: !14707, line: 42, type: !113)
!14710 = distinct !DILocation(line: 44, column: 2, scope: !14711, inlinedAt: !14713)
!14711 = distinct !DISubprogram(name: "arch_kernel_init", scope: !14712, file: !14712, line: 42, type: !3472, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2241, retainedNodes: !437)
!14712 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14713 = distinct !DILocation(line: 510, column: 2, scope: !14701)
!14714 = !DILocation(line: 43, column: 3, scope: !14706, inlinedAt: !14710)
!14715 = !DILocation(line: 43, column: 60, scope: !14706, inlinedAt: !14710)
!14716 = !DILocation(line: 0, scope: !14706, inlinedAt: !14710)
!14717 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !14718, file: !7128, line: 1153, type: !113)
!14718 = distinct !DISubprogram(name: "__set_MSP", scope: !7128, file: !7128, line: 1153, type: !7219, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2241, retainedNodes: !14719)
!14719 = !{!14717}
!14720 = !DILocation(line: 0, scope: !14718, inlinedAt: !14721)
!14721 = distinct !DILocation(line: 46, column: 2, scope: !14706, inlinedAt: !14710)
!14722 = !DILocation(line: 1155, column: 3, scope: !14718, inlinedAt: !14721)
!14723 = !{i64 3763335}
!14724 = !DILocation(line: 62, column: 11, scope: !14706, inlinedAt: !14710)
!14725 = !DILocation(line: 102, column: 2, scope: !14726, inlinedAt: !14727)
!14726 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !8146, file: !8146, line: 97, type: !3472, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2241, retainedNodes: !437)
!14727 = distinct !DILocation(line: 45, column: 2, scope: !14711, inlinedAt: !14713)
!14728 = !DILocation(line: 108, column: 2, scope: !14726, inlinedAt: !14727)
!14729 = !DILocation(line: 112, column: 2, scope: !14726, inlinedAt: !14727)
!14730 = !DILocation(line: 113, column: 2, scope: !14726, inlinedAt: !14727)
!14731 = !DILocation(line: 114, column: 2, scope: !14726, inlinedAt: !14727)
!14732 = !DILocation(line: 116, column: 2, scope: !14726, inlinedAt: !14727)
!14733 = !DILocation(line: 123, column: 13, scope: !14726, inlinedAt: !14727)
!14734 = !DILocation(line: 46, column: 2, scope: !14711, inlinedAt: !14713)
!14735 = !DILocation(line: 47, column: 2, scope: !14711, inlinedAt: !14713)
!14736 = !DILocation(line: 174, column: 12, scope: !14737, inlinedAt: !14738)
!14737 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !8146, file: !8146, line: 169, type: !3472, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2241, retainedNodes: !437)
!14738 = distinct !DILocation(line: 48, column: 2, scope: !14711, inlinedAt: !14713)
!14739 = !DILocation(line: 179, column: 12, scope: !14737, inlinedAt: !14738)
!14740 = !DILocation(line: 50, column: 2, scope: !14711, inlinedAt: !14713)
!14741 = !DILocation(line: 57, column: 2, scope: !14711, inlinedAt: !14713)
!14742 = !DILocation(line: 518, column: 2, scope: !14701)
!14743 = !DILocation(line: 518, column: 18, scope: !14701)
!14744 = !DILocation(line: 520, column: 2, scope: !14701)
!14745 = !DILocation(line: 523, column: 2, scope: !14701)
!14746 = !DILocation(line: 526, column: 2, scope: !14701)
!14747 = !DILocation(line: 527, column: 2, scope: !14701)
!14748 = !DILocation(line: 543, column: 24, scope: !14701)
!14749 = !DILocation(line: 543, column: 2, scope: !14701)
!14750 = !DILocation(line: 0, scope: !2476)
!14751 = !DILocation(line: 246, column: 15, scope: !2494)
!14752 = !DILocation(line: 246, column: 36, scope: !2493)
!14753 = !DILocation(line: 246, column: 2, scope: !2494)
!14754 = !DILocation(line: 247, column: 37, scope: !2492)
!14755 = !DILocation(line: 0, scope: !2492)
!14756 = !DILocation(line: 248, column: 19, scope: !2492)
!14757 = !DILocation(line: 248, column: 12, scope: !2492)
!14758 = !DILocation(line: 250, column: 11, scope: !14759)
!14759 = distinct !DILexicalBlock(scope: !2492, file: !2245, line: 250, column: 7)
!14760 = !DILocation(line: 250, column: 7, scope: !2492)
!14761 = !DILocation(line: 254, column: 11, scope: !14762)
!14762 = distinct !DILexicalBlock(scope: !14763, file: !2245, line: 254, column: 8)
!14763 = distinct !DILexicalBlock(scope: !14759, file: !2245, line: 250, column: 20)
!14764 = !DILocation(line: 254, column: 8, scope: !14763)
!14765 = !DILocation(line: 255, column: 9, scope: !14766)
!14766 = distinct !DILexicalBlock(scope: !14762, file: !2245, line: 254, column: 17)
!14767 = !DILocation(line: 258, column: 9, scope: !14766)
!14768 = !DILocation(line: 261, column: 28, scope: !14766)
!14769 = !DILocation(line: 261, column: 10, scope: !14766)
!14770 = !DILocation(line: 261, column: 17, scope: !14766)
!14771 = !DILocation(line: 261, column: 26, scope: !14766)
!14772 = !DILocation(line: 262, column: 4, scope: !14766)
!14773 = !DILocation(line: 263, column: 9, scope: !14763)
!14774 = !DILocation(line: 263, column: 16, scope: !14763)
!14775 = !DILocation(line: 263, column: 28, scope: !14763)
!14776 = !DILocation(line: 264, column: 3, scope: !14763)
!14777 = !DILocation(line: 246, column: 60, scope: !2493)
!14778 = distinct !{!14778, !14753, !14779}
!14779 = !DILocation(line: 265, column: 2, scope: !2494)
!14780 = !DILocation(line: 266, column: 1, scope: !2476)
!14781 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !794, file: !794, line: 1814, type: !7162, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2241, retainedNodes: !14782)
!14782 = !{!14783, !14784}
!14783 = !DILocalVariable(name: "IRQn", arg: 1, scope: !14781, file: !794, line: 1814, type: !1183)
!14784 = !DILocalVariable(name: "priority", arg: 2, scope: !14781, file: !794, line: 1814, type: !113)
!14785 = !DILocation(line: 0, scope: !14781)
!14786 = !DILocation(line: 1822, column: 48, scope: !14787)
!14787 = distinct !DILexicalBlock(scope: !14788, file: !794, line: 1821, column: 3)
!14788 = distinct !DILexicalBlock(scope: !14781, file: !794, line: 1816, column: 7)
!14789 = !DILocation(line: 1822, column: 32, scope: !14787)
!14790 = !DILocation(line: 1822, column: 40, scope: !14787)
!14791 = !DILocation(line: 1822, column: 5, scope: !14787)
!14792 = !DILocation(line: 1822, column: 46, scope: !14787)
!14793 = !DILocation(line: 1824, column: 1, scope: !14781)
!14794 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !14712, file: !14712, line: 32, type: !3472, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !437)
!14795 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !14796, file: !14796, line: 215, type: !14693, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2241, retainedNodes: !14797)
!14796 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14797 = !{!14798}
!14798 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !14795, file: !14796, line: 215, type: !2337)
!14799 = !DILocation(line: 0, scope: !14795)
!14800 = !DILocation(line: 217, column: 21, scope: !14795)
!14801 = !DILocation(line: 217, column: 34, scope: !14795)
!14802 = !DILocation(line: 221, column: 21, scope: !14795)
!14803 = !DILocation(line: 221, column: 34, scope: !14795)
!14804 = !DILocation(line: 223, column: 27, scope: !14795)
!14805 = !DILocation(line: 223, column: 33, scope: !14795)
!14806 = !DILocation(line: 224, column: 27, scope: !14795)
!14807 = !DILocation(line: 224, column: 32, scope: !14795)
!14808 = !DILocation(line: 232, column: 16, scope: !14795)
!14809 = !DILocation(line: 232, column: 30, scope: !14795)
!14810 = !DILocation(line: 239, column: 24, scope: !14795)
!14811 = !DILocation(line: 240, column: 1, scope: !14795)
!14812 = distinct !DISubprogram(name: "prepare_multithreading", scope: !2245, file: !2245, line: 399, type: !14813, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2241, retainedNodes: !14815)
!14813 = !DISubroutineType(types: !14814)
!14814 = !{!443}
!14815 = !{!14816}
!14816 = !DILocalVariable(name: "stack_ptr", scope: !14812, file: !2245, line: 401, type: !443)
!14817 = !DILocation(line: 404, column: 2, scope: !14812)
!14818 = !DILocation(line: 416, column: 24, scope: !14812)
!14819 = !DILocation(line: 418, column: 14, scope: !14812)
!14820 = !DILocation(line: 0, scope: !14812)
!14821 = !DILocation(line: 423, column: 2, scope: !14812)
!14822 = !DILocation(line: 424, column: 2, scope: !14812)
!14823 = !DILocation(line: 426, column: 2, scope: !14812)
!14824 = !DILocation(line: 428, column: 2, scope: !14812)
!14825 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !2245, file: !2245, line: 432, type: !14826, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2241, retainedNodes: !14828)
!14826 = !DISubroutineType(types: !14827)
!14827 = !{null, !443}
!14828 = !{!14829}
!14829 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !14825, file: !2245, line: 432, type: !443)
!14830 = !DILocation(line: 0, scope: !14825)
!14831 = !DILocation(line: 435, column: 2, scope: !14825)
!14832 = !DILocation(line: 445, column: 2, scope: !14825)
!14833 = distinct !DISubprogram(name: "bg_thread_main", scope: !2245, file: !2245, line: 277, type: !5241, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2241, retainedNodes: !14834)
!14834 = !{!14835, !14836, !14837}
!14835 = !DILocalVariable(name: "unused1", arg: 1, scope: !14833, file: !2245, line: 277, type: !104)
!14836 = !DILocalVariable(name: "unused2", arg: 2, scope: !14833, file: !2245, line: 277, type: !104)
!14837 = !DILocalVariable(name: "unused3", arg: 3, scope: !14833, file: !2245, line: 277, type: !104)
!14838 = !DILocation(line: 0, scope: !14833)
!14839 = !DILocation(line: 291, column: 20, scope: !14833)
!14840 = !DILocation(line: 293, column: 2, scope: !14833)
!14841 = !DILocation(line: 297, column: 2, scope: !14833)
!14842 = !DILocation(line: 305, column: 2, scope: !14833)
!14843 = !DILocation(line: 307, column: 2, scope: !14833)
!14844 = !DILocation(line: 330, column: 8, scope: !14833)
!14845 = !DILocation(line: 333, column: 34, scope: !14833)
!14846 = !DILocation(line: 339, column: 1, scope: !14833)
!14847 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2507, file: !2507, line: 45, type: !14848, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !14856)
!14848 = !DISubroutineType(types: !14849)
!14849 = !{null, !14850, !104}
!14850 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !359, line: 103, baseType: !14851)
!14851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14852, size: 32)
!14852 = !DISubroutineType(types: !14853)
!14853 = !{null, !14854, !104}
!14854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14855, size: 32)
!14855 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2512)
!14856 = !{!14857, !14858}
!14857 = !DILocalVariable(name: "user_cb", arg: 1, scope: !14847, file: !2507, line: 45, type: !14850)
!14858 = !DILocalVariable(name: "user_data", arg: 2, scope: !14847, file: !2507, line: 45, type: !104)
!14859 = !DILocation(line: 0, scope: !14847)
!14860 = !DILocation(line: 71, column: 1, scope: !14847)
!14861 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2507, file: !2507, line: 73, type: !14848, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !14862)
!14862 = !{!14863, !14864}
!14863 = !DILocalVariable(name: "user_cb", arg: 1, scope: !14861, file: !2507, line: 73, type: !14850)
!14864 = !DILocalVariable(name: "user_data", arg: 2, scope: !14861, file: !2507, line: 73, type: !104)
!14865 = !DILocation(line: 0, scope: !14861)
!14866 = !DILocation(line: 95, column: 1, scope: !14861)
!14867 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2507, file: !2507, line: 97, type: !8147, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !437)
!14868 = !DILocation(line: 1031, column: 3, scope: !14869, inlinedAt: !14872)
!14869 = distinct !DISubprogram(name: "__get_IPSR", scope: !7128, file: !7128, line: 1027, type: !7209, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !14870)
!14870 = !{!14871}
!14871 = !DILocalVariable(name: "result", scope: !14869, file: !7128, line: 1029, type: !113)
!14872 = distinct !DILocation(line: 48, column: 10, scope: !14873, inlinedAt: !14874)
!14873 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8146, file: !8146, line: 46, type: !8147, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !437)
!14874 = distinct !DILocation(line: 99, column: 9, scope: !14867)
!14875 = !{i64 3768986}
!14876 = !DILocation(line: 0, scope: !14869, inlinedAt: !14872)
!14877 = !DILocation(line: 48, column: 9, scope: !14873, inlinedAt: !14874)
!14878 = !DILocation(line: 99, column: 2, scope: !14867)
!14879 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2507, file: !2507, line: 106, type: !3472, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !437)
!14880 = !DILocation(line: 108, column: 2, scope: !14879)
!14881 = !DILocation(line: 108, column: 17, scope: !14879)
!14882 = !DILocation(line: 108, column: 30, scope: !14879)
!14883 = !DILocation(line: 109, column: 1, scope: !14879)
!14884 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2507, file: !2507, line: 116, type: !3472, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !437)
!14885 = !DILocation(line: 118, column: 2, scope: !14884)
!14886 = !DILocation(line: 118, column: 17, scope: !14884)
!14887 = !DILocation(line: 118, column: 30, scope: !14884)
!14888 = !DILocation(line: 119, column: 1, scope: !14884)
!14889 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2507, file: !2507, line: 126, type: !8147, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !437)
!14890 = !DILocation(line: 128, column: 10, scope: !14889)
!14891 = !DILocation(line: 128, column: 25, scope: !14889)
!14892 = !DILocation(line: 128, column: 38, scope: !14889)
!14893 = !DILocation(line: 128, column: 53, scope: !14889)
!14894 = !DILocation(line: 128, column: 2, scope: !14889)
!14895 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2507, file: !2507, line: 187, type: !14896, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !14898)
!14896 = !DISubroutineType(types: !14897)
!14897 = !{!108, !2511, !105}
!14898 = !{!14899, !14900}
!14899 = !DILocalVariable(name: "thread", arg: 1, scope: !14895, file: !2507, line: 187, type: !2511)
!14900 = !DILocalVariable(name: "value", arg: 2, scope: !14895, file: !2507, line: 187, type: !105)
!14901 = !DILocation(line: 0, scope: !14895)
!14902 = !DILocation(line: 206, column: 2, scope: !14895)
!14903 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2507, file: !2507, line: 238, type: !14904, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !14906)
!14904 = !DISubroutineType(types: !14905)
!14905 = !{!105, !2511}
!14906 = !{!14907}
!14907 = !DILocalVariable(name: "thread", arg: 1, scope: !14903, file: !2507, line: 238, type: !2511)
!14908 = !DILocation(line: 0, scope: !14903)
!14909 = !DILocation(line: 244, column: 2, scope: !14903)
!14910 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2507, file: !2507, line: 248, type: !14911, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !14913)
!14911 = !DISubroutineType(types: !14912)
!14912 = !{!108, !2510, !443, !439}
!14913 = !{!14914, !14915, !14916}
!14914 = !DILocalVariable(name: "thread", arg: 1, scope: !14910, file: !2507, line: 248, type: !2510)
!14915 = !DILocalVariable(name: "buf", arg: 2, scope: !14910, file: !2507, line: 248, type: !443)
!14916 = !DILocalVariable(name: "size", arg: 3, scope: !14910, file: !2507, line: 248, type: !439)
!14917 = !DILocation(line: 0, scope: !14910)
!14918 = !DILocation(line: 257, column: 2, scope: !14910)
!14919 = !DILocation(line: 0, scope: !2506)
!14920 = !DILocation(line: 281, column: 11, scope: !14921)
!14921 = distinct !DILexicalBlock(scope: !2506, file: !2507, line: 281, column: 6)
!14922 = !DILocation(line: 281, column: 20, scope: !14921)
!14923 = !DILocation(line: 275, column: 45, scope: !2506)
!14924 = !DILocation(line: 285, column: 10, scope: !2506)
!14925 = !DILocation(line: 0, scope: !2627)
!14926 = !DILocation(line: 293, column: 39, scope: !14927)
!14927 = distinct !DILexicalBlock(scope: !2627, file: !2507, line: 293, column: 2)
!14928 = !DILocation(line: 293, column: 2, scope: !2627)
!14929 = !DILocation(line: 273, column: 14, scope: !2506)
!14930 = !DILocation(line: 309, column: 2, scope: !2506)
!14931 = !DILocation(line: 309, column: 11, scope: !2506)
!14932 = !DILocation(line: 311, column: 2, scope: !2506)
!14933 = !DILocation(line: 293, column: 26, scope: !14927)
!14934 = !DILocation(line: 294, column: 9, scope: !14935)
!14935 = distinct !DILexicalBlock(scope: !14927, file: !2507, line: 293, column: 54)
!14936 = !DILocation(line: 295, column: 21, scope: !14937)
!14937 = distinct !DILexicalBlock(scope: !14935, file: !2507, line: 295, column: 7)
!14938 = !DILocation(line: 295, column: 28, scope: !14937)
!14939 = !DILocation(line: 295, column: 7, scope: !14935)
!14940 = !DILocation(line: 299, column: 25, scope: !14935)
!14941 = !DILocation(line: 299, column: 41, scope: !14935)
!14942 = !DILocation(line: 300, column: 7, scope: !14935)
!14943 = !DILocation(line: 300, column: 26, scope: !14935)
!14944 = !DILocation(line: 299, column: 10, scope: !14935)
!14945 = !DILocation(line: 299, column: 7, scope: !14935)
!14946 = !DILocation(line: 302, column: 16, scope: !14935)
!14947 = !DILocation(line: 304, column: 20, scope: !14948)
!14948 = distinct !DILexicalBlock(scope: !14935, file: !2507, line: 304, column: 7)
!14949 = !DILocation(line: 304, column: 7, scope: !14935)
!14950 = !DILocation(line: 305, column: 26, scope: !14951)
!14951 = distinct !DILexicalBlock(scope: !14948, file: !2507, line: 304, column: 26)
!14952 = !DILocation(line: 305, column: 42, scope: !14951)
!14953 = !DILocation(line: 305, column: 11, scope: !14951)
!14954 = !DILocation(line: 305, column: 8, scope: !14951)
!14955 = !DILocation(line: 306, column: 3, scope: !14951)
!14956 = !DILocation(line: 293, column: 50, scope: !14927)
!14957 = !DILocation(line: 312, column: 1, scope: !2506)
!14958 = distinct !DISubprogram(name: "copy_bytes", scope: !2507, file: !2507, line: 261, type: !14959, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !14961)
!14959 = !DISubroutineType(types: !14960)
!14960 = !{!439, !443, !439, !105, !439}
!14961 = !{!14962, !14963, !14964, !14965, !14966}
!14962 = !DILocalVariable(name: "dest", arg: 1, scope: !14958, file: !2507, line: 261, type: !443)
!14963 = !DILocalVariable(name: "dest_size", arg: 2, scope: !14958, file: !2507, line: 261, type: !439)
!14964 = !DILocalVariable(name: "src", arg: 3, scope: !14958, file: !2507, line: 261, type: !105)
!14965 = !DILocalVariable(name: "src_size", arg: 4, scope: !14958, file: !2507, line: 261, type: !439)
!14966 = !DILocalVariable(name: "bytes_to_copy", scope: !14958, file: !2507, line: 263, type: !439)
!14967 = !DILocation(line: 0, scope: !14958)
!14968 = !DILocation(line: 265, column: 18, scope: !14958)
!14969 = !DILocation(line: 266, column: 2, scope: !14958)
!14970 = !DILocation(line: 268, column: 2, scope: !14958)
!14971 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2507, file: !2507, line: 383, type: !14972, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !14974)
!14972 = !DISubroutineType(types: !14973)
!14973 = !{null, !2511}
!14974 = !{!14975}
!14975 = !DILocalVariable(name: "thread", arg: 1, scope: !14971, file: !2507, line: 383, type: !2511)
!14976 = !DILocation(line: 0, scope: !14971)
!14977 = !DILocation(line: 387, column: 2, scope: !14971)
!14978 = !DILocation(line: 388, column: 1, scope: !14971)
!14979 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2507, file: !2507, line: 528, type: !14980, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !14987)
!14980 = !DISubroutineType(types: !14981)
!14981 = !{!443, !2511, !14982, !439, !5238, !104, !104, !104, !108, !113, !105}
!14982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14983, size: 32)
!14983 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !5239, line: 44, baseType: !14984)
!14984 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2452, line: 47, size: 8, elements: !14985)
!14985 = !{!14986}
!14986 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !14984, file: !2452, line: 48, baseType: !107, size: 8)
!14987 = !{!14988, !14989, !14990, !14991, !14992, !14993, !14994, !14995, !14996, !14997, !14998}
!14988 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14979, file: !2507, line: 528, type: !2511)
!14989 = !DILocalVariable(name: "stack", arg: 2, scope: !14979, file: !2507, line: 529, type: !14982)
!14990 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14979, file: !2507, line: 529, type: !439)
!14991 = !DILocalVariable(name: "entry", arg: 4, scope: !14979, file: !2507, line: 530, type: !5238)
!14992 = !DILocalVariable(name: "p1", arg: 5, scope: !14979, file: !2507, line: 531, type: !104)
!14993 = !DILocalVariable(name: "p2", arg: 6, scope: !14979, file: !2507, line: 531, type: !104)
!14994 = !DILocalVariable(name: "p3", arg: 7, scope: !14979, file: !2507, line: 531, type: !104)
!14995 = !DILocalVariable(name: "prio", arg: 8, scope: !14979, file: !2507, line: 532, type: !108)
!14996 = !DILocalVariable(name: "options", arg: 9, scope: !14979, file: !2507, line: 532, type: !113)
!14997 = !DILocalVariable(name: "name", arg: 10, scope: !14979, file: !2507, line: 532, type: !105)
!14998 = !DILocalVariable(name: "stack_ptr", scope: !14979, file: !2507, line: 534, type: !443)
!14999 = !DILocation(line: 0, scope: !14979)
!15000 = !DILocation(line: 550, column: 28, scope: !14979)
!15001 = !DILocation(line: 550, column: 2, scope: !14979)
!15002 = !DILocation(line: 553, column: 34, scope: !14979)
!15003 = !DILocation(line: 553, column: 2, scope: !14979)
!15004 = !DILocation(line: 554, column: 14, scope: !14979)
!15005 = !DILocation(line: 564, column: 2, scope: !14979)
!15006 = !DILocation(line: 567, column: 14, scope: !14979)
!15007 = !DILocation(line: 567, column: 24, scope: !14979)
!15008 = !DILocation(line: 612, column: 7, scope: !15009)
!15009 = distinct !DILexicalBlock(scope: !14979, file: !2507, line: 612, column: 6)
!15010 = !DILocation(line: 612, column: 6, scope: !14979)
!15011 = !DILocation(line: 627, column: 40, scope: !14979)
!15012 = !DILocation(line: 637, column: 2, scope: !14979)
!15013 = !DILocation(line: 613, column: 15, scope: !15014)
!15014 = distinct !DILexicalBlock(scope: !15009, file: !2507, line: 612, column: 17)
!15015 = !DILocation(line: 613, column: 29, scope: !15014)
!15016 = !DILocation(line: 638, column: 1, scope: !14979)
!15017 = distinct !DISubprogram(name: "z_waitq_init", scope: !15018, file: !15018, line: 47, type: !15019, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !15021)
!15018 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15019 = !DISubroutineType(types: !15020)
!15020 = !{null, !2542}
!15021 = !{!15022}
!15022 = !DILocalVariable(name: "w", arg: 1, scope: !15017, file: !15018, line: 47, type: !2542)
!15023 = !DILocation(line: 0, scope: !15017)
!15024 = !DILocation(line: 49, column: 21, scope: !15017)
!15025 = !DILocation(line: 49, column: 2, scope: !15017)
!15026 = !DILocation(line: 50, column: 1, scope: !15017)
!15027 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2507, file: !2507, line: 791, type: !15028, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !15031)
!15028 = !DISubroutineType(types: !15029)
!15029 = !{null, !15030, !108, !113, !32}
!15030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2515, size: 32)
!15031 = !{!15032, !15033, !15034, !15035}
!15032 = !DILocalVariable(name: "thread_base", arg: 1, scope: !15027, file: !2507, line: 791, type: !15030)
!15033 = !DILocalVariable(name: "priority", arg: 2, scope: !15027, file: !2507, line: 791, type: !108)
!15034 = !DILocalVariable(name: "initial_state", arg: 3, scope: !15027, file: !2507, line: 792, type: !113)
!15035 = !DILocalVariable(name: "options", arg: 4, scope: !15027, file: !2507, line: 792, type: !32)
!15036 = !DILocation(line: 0, scope: !15027)
!15037 = !DILocation(line: 795, column: 15, scope: !15027)
!15038 = !DILocation(line: 795, column: 25, scope: !15027)
!15039 = !DILocation(line: 796, column: 30, scope: !15027)
!15040 = !DILocation(line: 796, column: 15, scope: !15027)
!15041 = !DILocation(line: 796, column: 28, scope: !15027)
!15042 = !DILocation(line: 797, column: 30, scope: !15027)
!15043 = !DILocation(line: 797, column: 15, scope: !15027)
!15044 = !DILocation(line: 797, column: 28, scope: !15027)
!15045 = !DILocation(line: 799, column: 22, scope: !15027)
!15046 = !DILocation(line: 799, column: 15, scope: !15027)
!15047 = !DILocation(line: 799, column: 20, scope: !15027)
!15048 = !DILocation(line: 801, column: 15, scope: !15027)
!15049 = !DILocation(line: 801, column: 28, scope: !15027)
!15050 = !DILocation(line: 814, column: 2, scope: !15027)
!15051 = !DILocation(line: 815, column: 1, scope: !15027)
!15052 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2507, file: !2507, line: 449, type: !15053, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !15055)
!15053 = !DISubroutineType(types: !15054)
!15054 = !{!443, !2511, !14982, !439}
!15055 = !{!15056, !15057, !15058, !15059, !15060, !15061, !15062, !15063}
!15056 = !DILocalVariable(name: "new_thread", arg: 1, scope: !15052, file: !2507, line: 449, type: !2511)
!15057 = !DILocalVariable(name: "stack", arg: 2, scope: !15052, file: !2507, line: 450, type: !14982)
!15058 = !DILocalVariable(name: "stack_size", arg: 3, scope: !15052, file: !2507, line: 450, type: !439)
!15059 = !DILocalVariable(name: "stack_obj_size", scope: !15052, file: !2507, line: 452, type: !439)
!15060 = !DILocalVariable(name: "stack_buf_size", scope: !15052, file: !2507, line: 452, type: !439)
!15061 = !DILocalVariable(name: "stack_ptr", scope: !15052, file: !2507, line: 453, type: !443)
!15062 = !DILocalVariable(name: "stack_buf_start", scope: !15052, file: !2507, line: 453, type: !443)
!15063 = !DILocalVariable(name: "delta", scope: !15052, file: !2507, line: 454, type: !439)
!15064 = !DILocation(line: 0, scope: !15052)
!15065 = !DILocation(line: 465, column: 20, scope: !15066)
!15066 = distinct !DILexicalBlock(scope: !15052, file: !2507, line: 463, column: 2)
!15067 = !DILocation(line: 466, column: 21, scope: !15066)
!15068 = !DILocation(line: 473, column: 28, scope: !15052)
!15069 = !DILocation(line: 514, column: 33, scope: !15052)
!15070 = !DILocation(line: 514, column: 25, scope: !15052)
!15071 = !DILocation(line: 514, column: 31, scope: !15052)
!15072 = !DILocation(line: 515, column: 25, scope: !15052)
!15073 = !DILocation(line: 515, column: 30, scope: !15052)
!15074 = !DILocation(line: 516, column: 25, scope: !15052)
!15075 = !DILocation(line: 516, column: 31, scope: !15052)
!15076 = !DILocation(line: 520, column: 2, scope: !15052)
!15077 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2452, file: !2452, line: 331, type: !15078, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !15080)
!15078 = !DISubroutineType(types: !15079)
!15079 = !{!443, !14982}
!15080 = !{!15081}
!15081 = !DILocalVariable(name: "sym", arg: 1, scope: !15077, file: !2452, line: 331, type: !14982)
!15082 = !DILocation(line: 0, scope: !15077)
!15083 = !DILocation(line: 333, column: 21, scope: !15077)
!15084 = !DILocation(line: 333, column: 2, scope: !15077)
!15085 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !15086, file: !15086, line: 40, type: !15087, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !15089)
!15086 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15087 = !DISubroutineType(types: !15088)
!15088 = !{null, !15030}
!15089 = !{!15090}
!15090 = !DILocalVariable(name: "thread_base", arg: 1, scope: !15085, file: !15086, line: 40, type: !15030)
!15091 = !DILocation(line: 0, scope: !15085)
!15092 = !DILocation(line: 42, column: 31, scope: !15085)
!15093 = !DILocation(line: 42, column: 2, scope: !15085)
!15094 = !DILocation(line: 43, column: 1, scope: !15085)
!15095 = distinct !DISubprogram(name: "z_init_timeout", scope: !15086, file: !15086, line: 25, type: !2568, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !15096)
!15096 = !{!15097}
!15097 = !DILocalVariable(name: "to", arg: 1, scope: !15095, file: !15086, line: 25, type: !2570)
!15098 = !DILocation(line: 0, scope: !15095)
!15099 = !DILocation(line: 27, column: 22, scope: !15095)
!15100 = !DILocation(line: 27, column: 2, scope: !15095)
!15101 = !DILocation(line: 28, column: 1, scope: !15095)
!15102 = distinct !DISubprogram(name: "sys_dnode_init", scope: !367, file: !367, line: 211, type: !15103, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !15105)
!15103 = !DISubroutineType(types: !15104)
!15104 = !{null, !2614}
!15105 = !{!15106}
!15106 = !DILocalVariable(name: "node", arg: 1, scope: !15102, file: !367, line: 211, type: !2614)
!15107 = !DILocation(line: 0, scope: !15102)
!15108 = !DILocation(line: 213, column: 8, scope: !15102)
!15109 = !DILocation(line: 213, column: 13, scope: !15102)
!15110 = !DILocation(line: 214, column: 8, scope: !15102)
!15111 = !DILocation(line: 214, column: 13, scope: !15102)
!15112 = !DILocation(line: 215, column: 1, scope: !15102)
!15113 = distinct !DISubprogram(name: "sys_dlist_init", scope: !367, file: !367, line: 197, type: !15114, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !15117)
!15114 = !DISubroutineType(types: !15115)
!15115 = !{null, !15116}
!15116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2547, size: 32)
!15117 = !{!15118}
!15118 = !DILocalVariable(name: "list", arg: 1, scope: !15113, file: !367, line: 197, type: !15116)
!15119 = !DILocation(line: 0, scope: !15113)
!15120 = !DILocation(line: 199, column: 8, scope: !15113)
!15121 = !DILocation(line: 199, column: 13, scope: !15113)
!15122 = !DILocation(line: 200, column: 8, scope: !15113)
!15123 = !DILocation(line: 200, column: 13, scope: !15113)
!15124 = !DILocation(line: 201, column: 1, scope: !15113)
!15125 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2507, file: !2507, line: 641, type: !15126, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !15132)
!15126 = !DISubroutineType(types: !15127)
!15127 = !{!2510, !2511, !14982, !439, !5238, !104, !104, !104, !108, !113, !15128}
!15128 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !110, line: 67, baseType: !15129)
!15129 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !110, line: 65, size: 64, elements: !15130)
!15130 = !{!15131}
!15131 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15129, file: !110, line: 66, baseType: !109, size: 64)
!15132 = !{!15133, !15134, !15135, !15136, !15137, !15138, !15139, !15140, !15141, !15142}
!15133 = !DILocalVariable(name: "new_thread", arg: 1, scope: !15125, file: !2507, line: 641, type: !2511)
!15134 = !DILocalVariable(name: "stack", arg: 2, scope: !15125, file: !2507, line: 642, type: !14982)
!15135 = !DILocalVariable(name: "stack_size", arg: 3, scope: !15125, file: !2507, line: 643, type: !439)
!15136 = !DILocalVariable(name: "entry", arg: 4, scope: !15125, file: !2507, line: 643, type: !5238)
!15137 = !DILocalVariable(name: "p1", arg: 5, scope: !15125, file: !2507, line: 644, type: !104)
!15138 = !DILocalVariable(name: "p2", arg: 6, scope: !15125, file: !2507, line: 644, type: !104)
!15139 = !DILocalVariable(name: "p3", arg: 7, scope: !15125, file: !2507, line: 644, type: !104)
!15140 = !DILocalVariable(name: "prio", arg: 8, scope: !15125, file: !2507, line: 645, type: !108)
!15141 = !DILocalVariable(name: "options", arg: 9, scope: !15125, file: !2507, line: 645, type: !113)
!15142 = !DILocalVariable(name: "delay", arg: 10, scope: !15125, file: !2507, line: 645, type: !15128)
!15143 = !DILocation(line: 0, scope: !15125)
!15144 = !DILocation(line: 649, column: 2, scope: !15125)
!15145 = !DILocation(line: 652, column: 7, scope: !15146)
!15146 = distinct !DILexicalBlock(scope: !15125, file: !2507, line: 652, column: 6)
!15147 = !DILocation(line: 652, column: 6, scope: !15125)
!15148 = !DILocation(line: 653, column: 3, scope: !15149)
!15149 = distinct !DILexicalBlock(scope: !15146, file: !2507, line: 652, column: 39)
!15150 = !DILocation(line: 654, column: 2, scope: !15149)
!15151 = !DILocation(line: 656, column: 2, scope: !15125)
!15152 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2507, file: !2507, line: 401, type: !15153, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !15155)
!15153 = !DISubroutineType(types: !15154)
!15154 = !{null, !2511, !15128}
!15155 = !{!15156, !15157}
!15156 = !DILocalVariable(name: "thread", arg: 1, scope: !15152, file: !2507, line: 401, type: !2511)
!15157 = !DILocalVariable(name: "delay", arg: 2, scope: !15152, file: !2507, line: 401, type: !15128)
!15158 = !DILocation(line: 0, scope: !15152)
!15159 = !DILocation(line: 404, column: 6, scope: !15160)
!15160 = distinct !DILexicalBlock(scope: !15152, file: !2507, line: 404, column: 6)
!15161 = !DILocation(line: 404, column: 6, scope: !15152)
!15162 = !DILocation(line: 405, column: 3, scope: !15163)
!15163 = distinct !DILexicalBlock(scope: !15160, file: !2507, line: 404, column: 38)
!15164 = !DILocation(line: 406, column: 2, scope: !15163)
!15165 = !DILocation(line: 407, column: 3, scope: !15166)
!15166 = distinct !DILexicalBlock(scope: !15160, file: !2507, line: 406, column: 9)
!15167 = !DILocation(line: 413, column: 1, scope: !15152)
!15168 = distinct !DISubprogram(name: "k_thread_start", scope: !3868, file: !3868, line: 205, type: !15169, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !15171)
!15169 = !DISubroutineType(types: !15170)
!15170 = !{null, !2510}
!15171 = !{!15172}
!15172 = !DILocalVariable(name: "thread", arg: 1, scope: !15168, file: !3868, line: 205, type: !2510)
!15173 = !DILocation(line: 0, scope: !15168)
!15174 = !DILocation(line: 214, column: 2, scope: !15175)
!15175 = distinct !DILexicalBlock(scope: !15168, file: !3868, line: 214, column: 2)
!15176 = !{i64 2155104191}
!15177 = !DILocation(line: 215, column: 2, scope: !15168)
!15178 = !DILocation(line: 216, column: 1, scope: !15168)
!15179 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !15086, file: !15086, line: 47, type: !15153, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !15180)
!15180 = !{!15181, !15182}
!15181 = !DILocalVariable(name: "thread", arg: 1, scope: !15179, file: !15086, line: 47, type: !2511)
!15182 = !DILocalVariable(name: "ticks", arg: 2, scope: !15179, file: !15086, line: 47, type: !15128)
!15183 = !DILocation(line: 0, scope: !15179)
!15184 = !DILocation(line: 49, column: 30, scope: !15179)
!15185 = !DILocation(line: 49, column: 2, scope: !15179)
!15186 = !DILocation(line: 50, column: 1, scope: !15179)
!15187 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2507, file: !2507, line: 748, type: !3472, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !15188)
!15188 = !{!15189, !15207}
!15189 = !DILocalVariable(name: "thread_data", scope: !15190, file: !2507, line: 750, type: !15191)
!15190 = distinct !DILexicalBlock(scope: !15187, file: !2507, line: 750, column: 2)
!15191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15192, size: 32)
!15192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !359, line: 620, size: 384, elements: !15193)
!15193 = !{!15194, !15195, !15196, !15197, !15198, !15199, !15200, !15201, !15202, !15203, !15204, !15206}
!15194 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !15192, file: !359, line: 621, baseType: !2511, size: 32)
!15195 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !15192, file: !359, line: 622, baseType: !14982, size: 32, offset: 32)
!15196 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !15192, file: !359, line: 623, baseType: !32, size: 32, offset: 64)
!15197 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !15192, file: !359, line: 624, baseType: !5238, size: 32, offset: 96)
!15198 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !15192, file: !359, line: 625, baseType: !104, size: 32, offset: 128)
!15199 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !15192, file: !359, line: 626, baseType: !104, size: 32, offset: 160)
!15200 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !15192, file: !359, line: 627, baseType: !104, size: 32, offset: 192)
!15201 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !15192, file: !359, line: 628, baseType: !108, size: 32, offset: 224)
!15202 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !15192, file: !359, line: 629, baseType: !113, size: 32, offset: 256)
!15203 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !15192, file: !359, line: 630, baseType: !220, size: 32, offset: 288)
!15204 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !15192, file: !359, line: 631, baseType: !15205, size: 32, offset: 320)
!15205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3472, size: 32)
!15206 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !15192, file: !359, line: 632, baseType: !105, size: 32, offset: 352)
!15207 = !DILocalVariable(name: "thread_data", scope: !15208, file: !2507, line: 781, type: !15191)
!15208 = distinct !DILexicalBlock(scope: !15187, file: !2507, line: 781, column: 2)
!15209 = !DILocation(line: 0, scope: !15190)
!15210 = !DILocation(line: 750, column: 2, scope: !15190)
!15211 = !DILocation(line: 780, column: 2, scope: !15187)
!15212 = !DILocation(line: 0, scope: !15208)
!15213 = !DILocation(line: 781, column: 2, scope: !15208)
!15214 = !DILocation(line: 752, column: 17, scope: !15215)
!15215 = distinct !DILexicalBlock(scope: !15216, file: !2507, line: 750, column: 38)
!15216 = distinct !DILexicalBlock(scope: !15190, file: !2507, line: 750, column: 2)
!15217 = !DILocation(line: 753, column: 17, scope: !15215)
!15218 = !DILocation(line: 754, column: 17, scope: !15215)
!15219 = !DILocation(line: 755, column: 17, scope: !15215)
!15220 = !DILocation(line: 756, column: 17, scope: !15215)
!15221 = !DILocation(line: 757, column: 17, scope: !15215)
!15222 = !DILocation(line: 758, column: 17, scope: !15215)
!15223 = !DILocation(line: 759, column: 17, scope: !15215)
!15224 = !DILocation(line: 760, column: 17, scope: !15215)
!15225 = !DILocation(line: 751, column: 3, scope: !15215)
!15226 = !DILocation(line: 763, column: 16, scope: !15215)
!15227 = !DILocation(line: 763, column: 29, scope: !15215)
!15228 = !DILocation(line: 763, column: 39, scope: !15215)
!15229 = !DILocation(line: 750, column: 2, scope: !15216)
!15230 = !DILocation(line: 750, column: 2, scope: !15231)
!15231 = distinct !DILexicalBlock(scope: !15216, file: !2507, line: 750, column: 2)
!15232 = distinct !{!15232, !15210, !15233}
!15233 = !DILocation(line: 764, column: 2, scope: !15190)
!15234 = !DILocation(line: 787, column: 2, scope: !15187)
!15235 = !DILocation(line: 788, column: 1, scope: !15187)
!15236 = !DILocation(line: 782, column: 20, scope: !15237)
!15237 = distinct !DILexicalBlock(scope: !15238, file: !2507, line: 782, column: 7)
!15238 = distinct !DILexicalBlock(scope: !15239, file: !2507, line: 781, column: 38)
!15239 = distinct !DILexicalBlock(scope: !15208, file: !2507, line: 781, column: 2)
!15240 = !DILocation(line: 782, column: 31, scope: !15237)
!15241 = !DILocation(line: 782, column: 7, scope: !15238)
!15242 = !DILocation(line: 783, column: 37, scope: !15243)
!15243 = distinct !DILexicalBlock(scope: !15237, file: !2507, line: 782, column: 51)
!15244 = !DILocation(line: 784, column: 10, scope: !15243)
!15245 = !DILocation(line: 783, column: 4, scope: !15243)
!15246 = !DILocation(line: 785, column: 3, scope: !15243)
!15247 = !DILocation(line: 781, column: 2, scope: !15239)
!15248 = !DILocation(line: 781, column: 2, scope: !15249)
!15249 = distinct !DILexicalBlock(scope: !15239, file: !2507, line: 781, column: 2)
!15250 = distinct !{!15250, !15213, !15251}
!15251 = !DILocation(line: 786, column: 2, scope: !15208)
!15252 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3835, file: !3835, line: 403, type: !3836, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !15253)
!15253 = !{!15254}
!15254 = !DILocalVariable(name: "t", arg: 1, scope: !15252, file: !3835, line: 403, type: !114)
!15255 = !DILocation(line: 0, scope: !15252)
!15256 = !DILocalVariable(name: "t", arg: 1, scope: !15257, file: !3835, line: 102, type: !114)
!15257 = distinct !DISubprogram(name: "z_tmcvt", scope: !3835, file: !3835, line: 102, type: !3843, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !15258)
!15258 = !{!15256, !15259, !15260, !15261, !15262, !15263, !15264, !15265, !15266, !15267, !15268}
!15259 = !DILocalVariable(name: "from_hz", arg: 2, scope: !15257, file: !3835, line: 102, type: !113)
!15260 = !DILocalVariable(name: "to_hz", arg: 3, scope: !15257, file: !3835, line: 103, type: !113)
!15261 = !DILocalVariable(name: "const_hz", arg: 4, scope: !15257, file: !3835, line: 103, type: !422)
!15262 = !DILocalVariable(name: "result32", arg: 5, scope: !15257, file: !3835, line: 104, type: !422)
!15263 = !DILocalVariable(name: "round_up", arg: 6, scope: !15257, file: !3835, line: 104, type: !422)
!15264 = !DILocalVariable(name: "round_off", arg: 7, scope: !15257, file: !3835, line: 105, type: !422)
!15265 = !DILocalVariable(name: "mul_ratio", scope: !15257, file: !3835, line: 107, type: !422)
!15266 = !DILocalVariable(name: "div_ratio", scope: !15257, file: !3835, line: 109, type: !422)
!15267 = !DILocalVariable(name: "off", scope: !15257, file: !3835, line: 116, type: !114)
!15268 = !DILocalVariable(name: "rdivisor", scope: !15269, file: !3835, line: 119, type: !113)
!15269 = distinct !DILexicalBlock(scope: !15270, file: !3835, line: 118, column: 18)
!15270 = distinct !DILexicalBlock(scope: !15257, file: !3835, line: 118, column: 6)
!15271 = !DILocation(line: 0, scope: !15257, inlinedAt: !15272)
!15272 = distinct !DILocation(line: 406, column: 9, scope: !15252)
!15273 = !DILocation(line: 145, column: 13, scope: !15274, inlinedAt: !15272)
!15274 = distinct !DILexicalBlock(scope: !15275, file: !3835, line: 144, column: 10)
!15275 = distinct !DILexicalBlock(scope: !15276, file: !3835, line: 142, column: 7)
!15276 = distinct !DILexicalBlock(scope: !15277, file: !3835, line: 141, column: 24)
!15277 = distinct !DILexicalBlock(scope: !15278, file: !3835, line: 141, column: 13)
!15278 = distinct !DILexicalBlock(scope: !15257, file: !3835, line: 134, column: 6)
!15279 = !DILocation(line: 406, column: 2, scope: !15252)
!15280 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2507, file: !2507, line: 817, type: !5236, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !15281)
!15281 = !{!15282, !15283, !15284, !15285}
!15282 = !DILocalVariable(name: "entry", arg: 1, scope: !15280, file: !2507, line: 817, type: !5238)
!15283 = !DILocalVariable(name: "p1", arg: 2, scope: !15280, file: !2507, line: 818, type: !104)
!15284 = !DILocalVariable(name: "p2", arg: 3, scope: !15280, file: !2507, line: 818, type: !104)
!15285 = !DILocalVariable(name: "p3", arg: 4, scope: !15280, file: !2507, line: 818, type: !104)
!15286 = !DILocation(line: 0, scope: !15280)
!15287 = !DILocation(line: 822, column: 2, scope: !15280)
!15288 = !DILocation(line: 822, column: 17, scope: !15280)
!15289 = !DILocation(line: 822, column: 30, scope: !15280)
!15290 = !DILocation(line: 823, column: 2, scope: !15280)
!15291 = !DILocation(line: 845, column: 2, scope: !15280)
!15292 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2507, file: !2507, line: 888, type: !15293, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !15295)
!15293 = !DISubroutineType(types: !15294)
!15294 = !{!108, !2511}
!15295 = !{!15296}
!15296 = !DILocalVariable(name: "thread", arg: 1, scope: !15292, file: !2507, line: 888, type: !2511)
!15297 = !DILocation(line: 0, scope: !15292)
!15298 = !DILocation(line: 893, column: 2, scope: !15292)
!15299 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2507, file: !2507, line: 897, type: !15300, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !15302)
!15300 = !DISubroutineType(types: !15301)
!15301 = !{!108, !2511, !32}
!15302 = !{!15303, !15304}
!15303 = !DILocalVariable(name: "thread", arg: 1, scope: !15299, file: !2507, line: 897, type: !2511)
!15304 = !DILocalVariable(name: "options", arg: 2, scope: !15299, file: !2507, line: 897, type: !32)
!15305 = !DILocation(line: 0, scope: !15299)
!15306 = !DILocation(line: 902, column: 2, scope: !15299)
!15307 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2507, file: !2507, line: 1072, type: !15308, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !15313)
!15308 = !DISubroutineType(types: !15309)
!15309 = !{!108, !2510, !15310}
!15310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15311, size: 32)
!15311 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !651, line: 234, baseType: !15312)
!15312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !651, line: 192, elements: !437)
!15313 = !{!15314, !15315}
!15314 = !DILocalVariable(name: "thread", arg: 1, scope: !15307, file: !2507, line: 1072, type: !2510)
!15315 = !DILocalVariable(name: "stats", arg: 2, scope: !15307, file: !2507, line: 1073, type: !15310)
!15316 = !DILocation(line: 0, scope: !15307)
!15317 = !DILocation(line: 1075, column: 14, scope: !15318)
!15318 = distinct !DILexicalBlock(scope: !15307, file: !2507, line: 1075, column: 6)
!15319 = !DILocation(line: 1075, column: 23, scope: !15318)
!15320 = !DILocation(line: 1086, column: 1, scope: !15307)
!15321 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2507, file: !2507, line: 1088, type: !15322, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !15324)
!15322 = !DISubroutineType(types: !15323)
!15323 = !{!108, !15310}
!15324 = !{!15325}
!15325 = !DILocalVariable(name: "stats", arg: 1, scope: !15321, file: !2507, line: 1088, type: !15310)
!15326 = !DILocation(line: 0, scope: !15321)
!15327 = !DILocation(line: 1094, column: 12, scope: !15328)
!15328 = distinct !DILexicalBlock(scope: !15321, file: !2507, line: 1094, column: 6)
!15329 = !DILocation(line: 1120, column: 1, scope: !15321)
!15330 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !15331, file: !15331, line: 20, type: !3472, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3453, retainedNodes: !437)
!15331 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15332 = !DILocation(line: 30, column: 2, scope: !15330)
!15333 = !DILocation(line: 31, column: 1, scope: !15330)
!15334 = distinct !DISubprogram(name: "idle", scope: !15331, file: !15331, line: 33, type: !5241, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3453, retainedNodes: !15335)
!15335 = !{!15336, !15337, !15338}
!15336 = !DILocalVariable(name: "unused1", arg: 1, scope: !15334, file: !15331, line: 33, type: !104)
!15337 = !DILocalVariable(name: "unused2", arg: 2, scope: !15334, file: !15331, line: 33, type: !104)
!15338 = !DILocalVariable(name: "unused3", arg: 3, scope: !15334, file: !15331, line: 33, type: !104)
!15339 = !DILocation(line: 0, scope: !15334)
!15340 = !DILocation(line: 41, column: 2, scope: !15334)
!15341 = !DILocation(line: 55, column: 2, scope: !15342, inlinedAt: !15346)
!15342 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4146, file: !4146, line: 42, type: !4147, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3453, retainedNodes: !15343)
!15343 = !{!15344, !15345}
!15344 = !DILocalVariable(name: "key", scope: !15342, file: !4146, line: 44, type: !32)
!15345 = !DILocalVariable(name: "tmp", scope: !15342, file: !4146, line: 53, type: !32)
!15346 = distinct !DILocation(line: 62, column: 10, scope: !15347)
!15347 = distinct !DILexicalBlock(scope: !15334, file: !15331, line: 41, column: 15)
!15348 = !{i64 2295738}
!15349 = !DILocation(line: 0, scope: !15342, inlinedAt: !15346)
!15350 = !DILocation(line: 86, column: 3, scope: !15347)
!15351 = distinct !{!15351, !15340, !15352}
!15352 = !DILocation(line: 105, column: 2, scope: !15334)
!15353 = distinct !DISubprogram(name: "k_cpu_idle", scope: !359, file: !359, line: 5627, type: !3472, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3453, retainedNodes: !437)
!15354 = !DILocation(line: 5629, column: 2, scope: !15353)
!15355 = !DILocation(line: 5630, column: 1, scope: !15353)
!15356 = !DISubprogram(name: "arch_cpu_idle", scope: !5239, file: !5239, line: 167, type: !3472, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !437)
!15357 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2739, file: !2739, line: 93, type: !15358, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !15360)
!15358 = !DISubroutineType(types: !15359)
!15359 = !{!220, !2634, !2634}
!15360 = !{!15361, !15362, !15363, !15364}
!15361 = !DILocalVariable(name: "thread_1", arg: 1, scope: !15357, file: !2739, line: 93, type: !2634)
!15362 = !DILocalVariable(name: "thread_2", arg: 2, scope: !15357, file: !2739, line: 94, type: !2634)
!15363 = !DILocalVariable(name: "b1", scope: !15357, file: !2739, line: 97, type: !220)
!15364 = !DILocalVariable(name: "b2", scope: !15357, file: !2739, line: 98, type: !220)
!15365 = !DILocation(line: 0, scope: !15357)
!15366 = !DILocation(line: 97, column: 30, scope: !15357)
!15367 = !DILocation(line: 98, column: 30, scope: !15357)
!15368 = !DILocation(line: 100, column: 9, scope: !15369)
!15369 = distinct !DILexicalBlock(scope: !15357, file: !2739, line: 100, column: 6)
!15370 = !DILocation(line: 100, column: 6, scope: !15357)
!15371 = !DILocation(line: 125, column: 1, scope: !15357)
!15372 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2739, file: !2739, line: 428, type: !15373, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !15375)
!15373 = !DISubroutineType(types: !15374)
!15374 = !{null, !2634}
!15375 = !{!15376}
!15376 = !DILocalVariable(name: "curr", arg: 1, scope: !15372, file: !2739, line: 428, type: !2634)
!15377 = !DILocation(line: 0, scope: !15372)
!15378 = !DILocation(line: 434, column: 6, scope: !15379)
!15379 = distinct !DILexicalBlock(scope: !15372, file: !2739, line: 434, column: 6)
!15380 = !DILocation(line: 434, column: 23, scope: !15379)
!15381 = !DILocation(line: 434, column: 6, scope: !15372)
!15382 = !DILocation(line: 435, column: 50, scope: !15383)
!15383 = distinct !DILexicalBlock(scope: !15379, file: !2739, line: 434, column: 29)
!15384 = !DILocation(line: 435, column: 48, scope: !15383)
!15385 = !DILocation(line: 435, column: 29, scope: !15383)
!15386 = !DILocation(line: 436, column: 24, scope: !15383)
!15387 = !DILocation(line: 436, column: 3, scope: !15383)
!15388 = !DILocation(line: 437, column: 2, scope: !15383)
!15389 = !DILocation(line: 438, column: 1, scope: !15372)
!15390 = distinct !DISubprogram(name: "slice_time", scope: !2739, file: !2739, line: 407, type: !15391, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !15393)
!15391 = !DISubroutineType(types: !15392)
!15392 = !{!108, !2634}
!15393 = !{!15394, !15395}
!15394 = !DILocalVariable(name: "curr", arg: 1, scope: !15390, file: !2739, line: 407, type: !2634)
!15395 = !DILocalVariable(name: "ret", scope: !15390, file: !2739, line: 409, type: !108)
!15396 = !DILocation(line: 0, scope: !15390)
!15397 = !DILocation(line: 409, column: 12, scope: !15390)
!15398 = !DILocation(line: 416, column: 2, scope: !15390)
!15399 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2739, file: !2739, line: 440, type: !15400, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !15402)
!15400 = !DISubroutineType(types: !15401)
!15401 = !{null, !220, !108}
!15402 = !{!15403, !15404, !15405, !15411}
!15403 = !DILocalVariable(name: "slice", arg: 1, scope: !15399, file: !2739, line: 440, type: !220)
!15404 = !DILocalVariable(name: "prio", arg: 2, scope: !15399, file: !2739, line: 440, type: !108)
!15405 = !DILocalVariable(name: "__i", scope: !15406, file: !2739, line: 442, type: !15407)
!15406 = distinct !DILexicalBlock(scope: !15399, file: !2739, line: 442, column: 2)
!15407 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !436, line: 106, baseType: !15408)
!15408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !436, line: 32, size: 32, elements: !15409)
!15409 = !{!15410}
!15410 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !15408, file: !436, line: 33, baseType: !108, size: 32)
!15411 = !DILocalVariable(name: "__key", scope: !15406, file: !2739, line: 442, type: !15407)
!15412 = !DILocation(line: 0, scope: !15399)
!15413 = !DILocation(line: 0, scope: !15406)
!15414 = !DILocalVariable(name: "l", arg: 1, scope: !15415, file: !436, line: 136, type: !15418)
!15415 = distinct !DISubprogram(name: "k_spin_lock", scope: !436, file: !436, line: 136, type: !15416, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !15419)
!15416 = !DISubroutineType(types: !15417)
!15417 = !{!15407, !15418}
!15418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2728, size: 32)
!15419 = !{!15414, !15420}
!15420 = !DILocalVariable(name: "k", scope: !15415, file: !436, line: 139, type: !15407)
!15421 = !DILocation(line: 0, scope: !15415, inlinedAt: !15422)
!15422 = distinct !DILocation(line: 442, column: 2, scope: !15406)
!15423 = !DILocation(line: 55, column: 2, scope: !15424, inlinedAt: !15428)
!15424 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4146, file: !4146, line: 42, type: !4147, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !15425)
!15425 = !{!15426, !15427}
!15426 = !DILocalVariable(name: "key", scope: !15424, file: !4146, line: 44, type: !32)
!15427 = !DILocalVariable(name: "tmp", scope: !15424, file: !4146, line: 53, type: !32)
!15428 = distinct !DILocation(line: 145, column: 10, scope: !15415, inlinedAt: !15422)
!15429 = !{i64 2339709}
!15430 = !DILocation(line: 0, scope: !15424, inlinedAt: !15428)
!15431 = !DILocation(line: 443, column: 29, scope: !15432)
!15432 = distinct !DILexicalBlock(scope: !15433, file: !2739, line: 442, column: 26)
!15433 = distinct !DILexicalBlock(scope: !15406, file: !2739, line: 442, column: 2)
!15434 = !DILocation(line: 444, column: 17, scope: !15432)
!15435 = !DILocation(line: 445, column: 51, scope: !15436)
!15436 = distinct !DILexicalBlock(scope: !15432, file: !2739, line: 445, column: 7)
!15437 = !DILocation(line: 445, column: 7, scope: !15432)
!15438 = !DILocation(line: 0, scope: !15432)
!15439 = !DILocation(line: 451, column: 18, scope: !15432)
!15440 = !DILocation(line: 452, column: 3, scope: !15432)
!15441 = !DILocalVariable(name: "key", arg: 2, scope: !15442, file: !436, line: 190, type: !15407)
!15442 = distinct !DISubprogram(name: "k_spin_unlock", scope: !436, file: !436, line: 189, type: !15443, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !15445)
!15443 = !DISubroutineType(types: !15444)
!15444 = !{null, !15418, !15407}
!15445 = !{!15446, !15441}
!15446 = !DILocalVariable(name: "l", arg: 1, scope: !15442, file: !436, line: 189, type: !15418)
!15447 = !DILocation(line: 0, scope: !15442, inlinedAt: !15448)
!15448 = distinct !DILocation(line: 442, column: 2, scope: !15433)
!15449 = !DILocalVariable(name: "key", arg: 1, scope: !15450, file: !4146, line: 84, type: !32)
!15450 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4146, file: !4146, line: 84, type: !4159, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !15451)
!15451 = !{!15449}
!15452 = !DILocation(line: 0, scope: !15450, inlinedAt: !15453)
!15453 = distinct !DILocation(line: 215, column: 2, scope: !15442, inlinedAt: !15448)
!15454 = !DILocation(line: 95, column: 2, scope: !15450, inlinedAt: !15453)
!15455 = !{i64 2340526}
!15456 = !DILocation(line: 454, column: 1, scope: !15399)
!15457 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !3835, file: !3835, line: 389, type: !8374, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !15458)
!15458 = !{!15459}
!15459 = !DILocalVariable(name: "t", arg: 1, scope: !15457, file: !3835, line: 389, type: !113)
!15460 = !DILocation(line: 0, scope: !15457)
!15461 = !DILocalVariable(name: "t", arg: 1, scope: !15462, file: !3835, line: 102, type: !114)
!15462 = distinct !DISubprogram(name: "z_tmcvt", scope: !3835, file: !3835, line: 102, type: !3843, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !15463)
!15463 = !{!15461, !15464, !15465, !15466, !15467, !15468, !15469, !15470, !15471, !15472, !15473}
!15464 = !DILocalVariable(name: "from_hz", arg: 2, scope: !15462, file: !3835, line: 102, type: !113)
!15465 = !DILocalVariable(name: "to_hz", arg: 3, scope: !15462, file: !3835, line: 103, type: !113)
!15466 = !DILocalVariable(name: "const_hz", arg: 4, scope: !15462, file: !3835, line: 103, type: !422)
!15467 = !DILocalVariable(name: "result32", arg: 5, scope: !15462, file: !3835, line: 104, type: !422)
!15468 = !DILocalVariable(name: "round_up", arg: 6, scope: !15462, file: !3835, line: 104, type: !422)
!15469 = !DILocalVariable(name: "round_off", arg: 7, scope: !15462, file: !3835, line: 105, type: !422)
!15470 = !DILocalVariable(name: "mul_ratio", scope: !15462, file: !3835, line: 107, type: !422)
!15471 = !DILocalVariable(name: "div_ratio", scope: !15462, file: !3835, line: 109, type: !422)
!15472 = !DILocalVariable(name: "off", scope: !15462, file: !3835, line: 116, type: !114)
!15473 = !DILocalVariable(name: "rdivisor", scope: !15474, file: !3835, line: 119, type: !113)
!15474 = distinct !DILexicalBlock(scope: !15475, file: !3835, line: 118, column: 18)
!15475 = distinct !DILexicalBlock(scope: !15462, file: !3835, line: 118, column: 6)
!15476 = !DILocation(line: 0, scope: !15462, inlinedAt: !15477)
!15477 = distinct !DILocation(line: 392, column: 9, scope: !15457)
!15478 = !DILocation(line: 143, column: 25, scope: !15479, inlinedAt: !15477)
!15479 = distinct !DILexicalBlock(scope: !15480, file: !3835, line: 142, column: 17)
!15480 = distinct !DILexicalBlock(scope: !15481, file: !3835, line: 142, column: 7)
!15481 = distinct !DILexicalBlock(scope: !15482, file: !3835, line: 141, column: 24)
!15482 = distinct !DILexicalBlock(scope: !15483, file: !3835, line: 141, column: 13)
!15483 = distinct !DILexicalBlock(scope: !15462, file: !3835, line: 134, column: 6)
!15484 = !DILocation(line: 392, column: 2, scope: !15457)
!15485 = distinct !DISubprogram(name: "z_time_slice", scope: !2739, file: !2739, line: 502, type: !9708, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !15486)
!15486 = !{!15487, !15488}
!15487 = !DILocalVariable(name: "ticks", arg: 1, scope: !15485, file: !2739, line: 502, type: !108)
!15488 = !DILocalVariable(name: "key", scope: !15485, file: !2739, line: 511, type: !15407)
!15489 = !DILocation(line: 0, scope: !15485)
!15490 = !DILocation(line: 0, scope: !15415, inlinedAt: !15491)
!15491 = distinct !DILocation(line: 511, column: 25, scope: !15485)
!15492 = !DILocation(line: 55, column: 2, scope: !15424, inlinedAt: !15493)
!15493 = distinct !DILocation(line: 145, column: 10, scope: !15415, inlinedAt: !15491)
!15494 = !DILocation(line: 0, scope: !15424, inlinedAt: !15493)
!15495 = !DILocation(line: 514, column: 6, scope: !15496)
!15496 = distinct !DILexicalBlock(scope: !15485, file: !2739, line: 514, column: 6)
!15497 = !DILocation(line: 514, column: 25, scope: !15496)
!15498 = !DILocation(line: 514, column: 22, scope: !15496)
!15499 = !DILocation(line: 514, column: 6, scope: !15485)
!15500 = !DILocation(line: 515, column: 3, scope: !15501)
!15501 = distinct !DILexicalBlock(scope: !15496, file: !2739, line: 514, column: 35)
!15502 = !DILocation(line: 0, scope: !15442, inlinedAt: !15503)
!15503 = distinct !DILocation(line: 516, column: 3, scope: !15501)
!15504 = !DILocation(line: 0, scope: !15450, inlinedAt: !15505)
!15505 = distinct !DILocation(line: 215, column: 2, scope: !15442, inlinedAt: !15503)
!15506 = !DILocation(line: 95, column: 2, scope: !15450, inlinedAt: !15505)
!15507 = !DILocation(line: 517, column: 3, scope: !15501)
!15508 = !DILocation(line: 519, column: 18, scope: !15485)
!15509 = !DILocation(line: 522, column: 6, scope: !15510)
!15510 = distinct !DILexicalBlock(scope: !15485, file: !2739, line: 522, column: 6)
!15511 = !DILocation(line: 522, column: 27, scope: !15510)
!15512 = !DILocation(line: 522, column: 30, scope: !15510)
!15513 = !DILocation(line: 522, column: 6, scope: !15485)
!15514 = !DILocation(line: 523, column: 30, scope: !15515)
!15515 = distinct !DILexicalBlock(scope: !15516, file: !2739, line: 523, column: 7)
!15516 = distinct !DILexicalBlock(scope: !15510, file: !2739, line: 522, column: 51)
!15517 = !DILocation(line: 523, column: 13, scope: !15515)
!15518 = !DILocation(line: 523, column: 7, scope: !15516)
!15519 = !DILocation(line: 530, column: 10, scope: !15520)
!15520 = distinct !DILexicalBlock(scope: !15515, file: !2739, line: 523, column: 43)
!15521 = !DILocation(line: 531, column: 3, scope: !15520)
!15522 = !DILocation(line: 532, column: 30, scope: !15523)
!15523 = distinct !DILexicalBlock(scope: !15515, file: !2739, line: 531, column: 10)
!15524 = !DILocation(line: 535, column: 29, scope: !15525)
!15525 = distinct !DILexicalBlock(scope: !15510, file: !2739, line: 534, column: 9)
!15526 = !DILocation(line: 0, scope: !15442, inlinedAt: !15527)
!15527 = distinct !DILocation(line: 537, column: 2, scope: !15485)
!15528 = !DILocation(line: 0, scope: !15450, inlinedAt: !15529)
!15529 = distinct !DILocation(line: 215, column: 2, scope: !15442, inlinedAt: !15527)
!15530 = !DILocation(line: 95, column: 2, scope: !15450, inlinedAt: !15529)
!15531 = !DILocation(line: 538, column: 1, scope: !15485)
!15532 = distinct !DISubprogram(name: "sliceable", scope: !2739, file: !2739, line: 468, type: !15533, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !15535)
!15533 = !DISubroutineType(types: !15534)
!15534 = !{!422, !2634}
!15535 = !{!15536, !15537}
!15536 = !DILocalVariable(name: "thread", arg: 1, scope: !15532, file: !2739, line: 468, type: !2634)
!15537 = !DILocalVariable(name: "ret", scope: !15532, file: !2739, line: 470, type: !422)
!15538 = !DILocation(line: 0, scope: !15532)
!15539 = !DILocation(line: 470, column: 13, scope: !15532)
!15540 = !DILocation(line: 471, column: 3, scope: !15532)
!15541 = !DILocation(line: 471, column: 7, scope: !15532)
!15542 = !DILocation(line: 472, column: 3, scope: !15532)
!15543 = !DILocation(line: 472, column: 37, scope: !15532)
!15544 = !DILocation(line: 472, column: 24, scope: !15532)
!15545 = !DILocation(line: 472, column: 43, scope: !15532)
!15546 = !DILocation(line: 472, column: 7, scope: !15532)
!15547 = !DILocation(line: 473, column: 3, scope: !15532)
!15548 = !DILocation(line: 473, column: 7, scope: !15532)
!15549 = !DILocation(line: 473, column: 6, scope: !15532)
!15550 = !DILocation(line: 479, column: 2, scope: !15532)
!15551 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2739, file: !2739, line: 482, type: !15552, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !15554)
!15552 = !DISubroutineType(types: !15553)
!15553 = !{!15407, !15407}
!15554 = !{!15555, !15556}
!15555 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !15551, file: !2739, line: 482, type: !15407)
!15556 = !DILocalVariable(name: "curr", scope: !15551, file: !2739, line: 484, type: !2634)
!15557 = !DILocation(line: 0, scope: !15551)
!15558 = !DILocation(line: 484, column: 26, scope: !15551)
!15559 = !DILocation(line: 493, column: 7, scope: !15560)
!15560 = distinct !DILexicalBlock(scope: !15551, file: !2739, line: 493, column: 6)
!15561 = !DILocation(line: 493, column: 6, scope: !15551)
!15562 = !DILocation(line: 494, column: 3, scope: !15563)
!15563 = distinct !DILexicalBlock(scope: !15560, file: !2739, line: 493, column: 49)
!15564 = !DILocation(line: 495, column: 2, scope: !15563)
!15565 = !DILocation(line: 496, column: 2, scope: !15551)
!15566 = !DILocation(line: 499, column: 1, scope: !15551)
!15567 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !14692, file: !14692, line: 106, type: !15533, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !15568)
!15568 = !{!15569, !15570}
!15569 = !DILocalVariable(name: "thread", arg: 1, scope: !15567, file: !14692, line: 106, type: !2634)
!15570 = !DILocalVariable(name: "state", scope: !15567, file: !14692, line: 108, type: !164)
!15571 = !DILocation(line: 0, scope: !15567)
!15572 = !DILocation(line: 108, column: 31, scope: !15567)
!15573 = !DILocation(line: 110, column: 16, scope: !15567)
!15574 = !DILocation(line: 111, column: 41, scope: !15567)
!15575 = !DILocation(line: 110, column: 2, scope: !15567)
!15576 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2739, file: !2739, line: 393, type: !15373, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !15577)
!15577 = !{!15578}
!15578 = !DILocalVariable(name: "thread", arg: 1, scope: !15576, file: !2739, line: 393, type: !2634)
!15579 = !DILocation(line: 0, scope: !15576)
!15580 = !DILocation(line: 395, column: 6, scope: !15581)
!15581 = distinct !DILexicalBlock(scope: !15576, file: !2739, line: 395, column: 6)
!15582 = !DILocation(line: 395, column: 6, scope: !15576)
!15583 = !DILocalVariable(name: "thread", arg: 1, scope: !15584, file: !2739, line: 264, type: !2634)
!15584 = distinct !DISubprogram(name: "dequeue_thread", scope: !2739, file: !2739, line: 264, type: !15373, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !15585)
!15585 = !{!15583}
!15586 = !DILocation(line: 0, scope: !15584, inlinedAt: !15587)
!15587 = distinct !DILocation(line: 396, column: 3, scope: !15588)
!15588 = distinct !DILexicalBlock(scope: !15581, file: !2739, line: 395, column: 34)
!15589 = !DILocation(line: 266, column: 15, scope: !15584, inlinedAt: !15587)
!15590 = !DILocation(line: 266, column: 28, scope: !15584, inlinedAt: !15587)
!15591 = !DILocalVariable(name: "thread", arg: 1, scope: !15592, file: !2739, line: 232, type: !2634)
!15592 = distinct !DISubprogram(name: "runq_remove", scope: !2739, file: !2739, line: 232, type: !15373, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !15593)
!15593 = !{!15591}
!15594 = !DILocation(line: 0, scope: !15592, inlinedAt: !15595)
!15595 = distinct !DILocation(line: 268, column: 3, scope: !15596, inlinedAt: !15587)
!15596 = distinct !DILexicalBlock(scope: !15597, file: !2739, line: 267, column: 35)
!15597 = distinct !DILexicalBlock(scope: !15584, file: !2739, line: 267, column: 6)
!15598 = !DILocation(line: 234, column: 2, scope: !15592, inlinedAt: !15595)
!15599 = !DILocation(line: 397, column: 2, scope: !15588)
!15600 = !DILocalVariable(name: "thread", arg: 1, scope: !15601, file: !2739, line: 250, type: !2634)
!15601 = distinct !DISubprogram(name: "queue_thread", scope: !2739, file: !2739, line: 250, type: !15373, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !15602)
!15602 = !{!15600}
!15603 = !DILocation(line: 0, scope: !15601, inlinedAt: !15604)
!15604 = distinct !DILocation(line: 398, column: 2, scope: !15576)
!15605 = !DILocation(line: 252, column: 15, scope: !15601, inlinedAt: !15604)
!15606 = !DILocation(line: 252, column: 28, scope: !15601, inlinedAt: !15604)
!15607 = !DILocalVariable(name: "thread", arg: 1, scope: !15608, file: !2739, line: 227, type: !2634)
!15608 = distinct !DISubprogram(name: "runq_add", scope: !2739, file: !2739, line: 227, type: !15373, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !15609)
!15609 = !{!15607}
!15610 = !DILocation(line: 0, scope: !15608, inlinedAt: !15611)
!15611 = distinct !DILocation(line: 254, column: 3, scope: !15612, inlinedAt: !15604)
!15612 = distinct !DILexicalBlock(scope: !15613, file: !2739, line: 253, column: 35)
!15613 = distinct !DILexicalBlock(scope: !15601, file: !2739, line: 253, column: 6)
!15614 = !DILocalVariable(name: "pq", arg: 1, scope: !15615, file: !2739, line: 181, type: !15618)
!15615 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2739, file: !2739, line: 181, type: !15616, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !15619)
!15616 = !DISubroutineType(types: !15617)
!15617 = !{null, !15618, !2634}
!15618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2670, size: 32)
!15619 = !{!15614, !15620, !15621}
!15620 = !DILocalVariable(name: "thread", arg: 2, scope: !15615, file: !2739, line: 182, type: !2634)
!15621 = !DILocalVariable(name: "t", scope: !15615, file: !2739, line: 184, type: !2634)
!15622 = !DILocation(line: 0, scope: !15615, inlinedAt: !15623)
!15623 = distinct !DILocation(line: 229, column: 2, scope: !15608, inlinedAt: !15611)
!15624 = !DILocation(line: 188, column: 2, scope: !15625, inlinedAt: !15623)
!15625 = distinct !DILexicalBlock(scope: !15615, file: !2739, line: 188, column: 2)
!15626 = !DILocation(line: 188, column: 2, scope: !15627, inlinedAt: !15623)
!15627 = distinct !DILexicalBlock(scope: !15625, file: !2739, line: 188, column: 2)
!15628 = !DILocation(line: 0, scope: !15625, inlinedAt: !15623)
!15629 = !DILocation(line: 189, column: 7, scope: !15630, inlinedAt: !15623)
!15630 = distinct !DILexicalBlock(scope: !15631, file: !2739, line: 189, column: 7)
!15631 = distinct !DILexicalBlock(scope: !15627, file: !2739, line: 188, column: 56)
!15632 = !DILocation(line: 189, column: 35, scope: !15630, inlinedAt: !15623)
!15633 = !DILocation(line: 189, column: 7, scope: !15631, inlinedAt: !15623)
!15634 = !DILocation(line: 191, column: 21, scope: !15635, inlinedAt: !15623)
!15635 = distinct !DILexicalBlock(scope: !15630, file: !2739, line: 189, column: 40)
!15636 = !DILocation(line: 190, column: 4, scope: !15635, inlinedAt: !15623)
!15637 = !DILocation(line: 192, column: 4, scope: !15635, inlinedAt: !15623)
!15638 = distinct !{!15638, !15624, !15639}
!15639 = !DILocation(line: 194, column: 2, scope: !15625, inlinedAt: !15623)
!15640 = !DILocation(line: 196, column: 37, scope: !15615, inlinedAt: !15623)
!15641 = !DILocation(line: 196, column: 2, scope: !15615, inlinedAt: !15623)
!15642 = !DILocation(line: 197, column: 1, scope: !15615, inlinedAt: !15623)
!15643 = !DILocation(line: 399, column: 25, scope: !15576)
!15644 = !DILocation(line: 399, column: 22, scope: !15576)
!15645 = !DILocation(line: 399, column: 2, scope: !15576)
!15646 = !DILocation(line: 400, column: 1, scope: !15576)
!15647 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !14692, file: !14692, line: 136, type: !15533, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !15648)
!15648 = !{!15649}
!15649 = !DILocalVariable(name: "thread", arg: 1, scope: !15647, file: !14692, line: 136, type: !2634)
!15650 = !DILocation(line: 0, scope: !15647)
!15651 = !DILocation(line: 138, column: 9, scope: !15647)
!15652 = !DILocation(line: 138, column: 2, scope: !15647)
!15653 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2739, file: !2739, line: 1137, type: !15616, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !15654)
!15654 = !{!15655, !15656}
!15655 = !DILocalVariable(name: "pq", arg: 1, scope: !15653, file: !2739, line: 1137, type: !15618)
!15656 = !DILocalVariable(name: "thread", arg: 2, scope: !15653, file: !2739, line: 1137, type: !2634)
!15657 = !DILocation(line: 0, scope: !15653)
!15658 = !DILocation(line: 1141, column: 33, scope: !15653)
!15659 = !DILocation(line: 1141, column: 2, scope: !15653)
!15660 = !DILocation(line: 1142, column: 1, scope: !15653)
!15661 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !367, file: !367, line: 294, type: !15662, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !15664)
!15662 = !DISubroutineType(types: !15663)
!15663 = !{!2735, !15618}
!15664 = !{!15665}
!15665 = !DILocalVariable(name: "list", arg: 1, scope: !15661, file: !367, line: 294, type: !15618)
!15666 = !DILocation(line: 0, scope: !15661)
!15667 = !DILocation(line: 296, column: 9, scope: !15661)
!15668 = !DILocation(line: 296, column: 49, scope: !15661)
!15669 = !DILocation(line: 296, column: 2, scope: !15661)
!15670 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !367, file: !367, line: 443, type: !15671, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !15673)
!15671 = !DISubroutineType(types: !15672)
!15672 = !{null, !2735, !2735}
!15673 = !{!15674, !15675, !15676}
!15674 = !DILocalVariable(name: "successor", arg: 1, scope: !15670, file: !367, line: 443, type: !2735)
!15675 = !DILocalVariable(name: "node", arg: 2, scope: !15670, file: !367, line: 443, type: !2735)
!15676 = !DILocalVariable(name: "prev", scope: !15670, file: !367, line: 445, type: !15677)
!15677 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2735)
!15678 = !DILocation(line: 0, scope: !15670)
!15679 = !DILocation(line: 445, column: 39, scope: !15670)
!15680 = !DILocation(line: 447, column: 8, scope: !15670)
!15681 = !DILocation(line: 447, column: 13, scope: !15670)
!15682 = !DILocation(line: 448, column: 8, scope: !15670)
!15683 = !DILocation(line: 448, column: 13, scope: !15670)
!15684 = !DILocation(line: 449, column: 8, scope: !15670)
!15685 = !DILocation(line: 449, column: 13, scope: !15670)
!15686 = !DILocation(line: 450, column: 18, scope: !15670)
!15687 = !DILocation(line: 451, column: 1, scope: !15670)
!15688 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !367, file: !367, line: 341, type: !15689, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !15691)
!15689 = !DISubroutineType(types: !15690)
!15690 = !{!2735, !15618, !2735}
!15691 = !{!15692, !15693}
!15692 = !DILocalVariable(name: "list", arg: 1, scope: !15688, file: !367, line: 341, type: !15618)
!15693 = !DILocalVariable(name: "node", arg: 2, scope: !15688, file: !367, line: 342, type: !2735)
!15694 = !DILocation(line: 0, scope: !15688)
!15695 = !DILocation(line: 344, column: 15, scope: !15688)
!15696 = !DILocation(line: 344, column: 9, scope: !15688)
!15697 = !DILocation(line: 344, column: 26, scope: !15688)
!15698 = !DILocation(line: 344, column: 2, scope: !15688)
!15699 = distinct !DISubprogram(name: "sys_dlist_append", scope: !367, file: !367, line: 404, type: !15700, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !15702)
!15700 = !DISubroutineType(types: !15701)
!15701 = !{null, !15618, !2735}
!15702 = !{!15703, !15704, !15705}
!15703 = !DILocalVariable(name: "list", arg: 1, scope: !15699, file: !367, line: 404, type: !15618)
!15704 = !DILocalVariable(name: "node", arg: 2, scope: !15699, file: !367, line: 404, type: !2735)
!15705 = !DILocalVariable(name: "tail", scope: !15699, file: !367, line: 406, type: !15677)
!15706 = !DILocation(line: 0, scope: !15699)
!15707 = !DILocation(line: 406, column: 34, scope: !15699)
!15708 = !DILocation(line: 408, column: 8, scope: !15699)
!15709 = !DILocation(line: 408, column: 13, scope: !15699)
!15710 = !DILocation(line: 409, column: 8, scope: !15699)
!15711 = !DILocation(line: 409, column: 13, scope: !15699)
!15712 = !DILocation(line: 411, column: 8, scope: !15699)
!15713 = !DILocation(line: 411, column: 13, scope: !15699)
!15714 = !DILocation(line: 412, column: 13, scope: !15699)
!15715 = !DILocation(line: 413, column: 1, scope: !15699)
!15716 = distinct !DISubprogram(name: "update_cache", scope: !2739, file: !2739, line: 559, type: !9708, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !15717)
!15717 = !{!15718, !15719}
!15718 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !15716, file: !2739, line: 559, type: !108)
!15719 = !DILocalVariable(name: "thread", scope: !15716, file: !2739, line: 562, type: !2634)
!15720 = !DILocation(line: 0, scope: !15716)
!15721 = !DILocation(line: 239, column: 9, scope: !15722, inlinedAt: !15725)
!15722 = distinct !DISubprogram(name: "runq_best", scope: !2739, file: !2739, line: 237, type: !15723, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !437)
!15723 = !DISubroutineType(types: !15724)
!15724 = !{!2634}
!15725 = distinct !DILocation(line: 314, column: 28, scope: !15726, inlinedAt: !15729)
!15726 = distinct !DISubprogram(name: "next_up", scope: !2739, file: !2739, line: 312, type: !15723, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !15727)
!15727 = !{!15728}
!15728 = !DILocalVariable(name: "thread", scope: !15726, file: !2739, line: 314, type: !2634)
!15729 = distinct !DILocation(line: 562, column: 28, scope: !15716)
!15730 = !DILocation(line: 0, scope: !15726, inlinedAt: !15729)
!15731 = !DILocation(line: 340, column: 17, scope: !15726, inlinedAt: !15729)
!15732 = !DILocation(line: 340, column: 9, scope: !15726, inlinedAt: !15729)
!15733 = !DILocalVariable(name: "thread", arg: 1, scope: !15734, file: !2739, line: 127, type: !2634)
!15734 = distinct !DISubprogram(name: "should_preempt", scope: !2739, file: !2739, line: 127, type: !15735, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !15737)
!15735 = !DISubroutineType(types: !15736)
!15736 = !{!422, !2634, !108}
!15737 = !{!15733, !15738}
!15738 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !15734, file: !2739, line: 128, type: !108)
!15739 = !DILocation(line: 0, scope: !15734, inlinedAt: !15740)
!15740 = distinct !DILocation(line: 564, column: 6, scope: !15741)
!15741 = distinct !DILexicalBlock(scope: !15716, file: !2739, line: 564, column: 6)
!15742 = !DILocation(line: 133, column: 17, scope: !15743, inlinedAt: !15740)
!15743 = distinct !DILexicalBlock(scope: !15734, file: !2739, line: 133, column: 6)
!15744 = !DILocation(line: 0, scope: !15741)
!15745 = !DILocation(line: 133, column: 6, scope: !15734, inlinedAt: !15740)
!15746 = !DILocation(line: 140, column: 6, scope: !15747, inlinedAt: !15740)
!15747 = distinct !DILexicalBlock(scope: !15734, file: !2739, line: 140, column: 6)
!15748 = !DILocation(line: 140, column: 6, scope: !15734, inlinedAt: !15740)
!15749 = !DILocation(line: 150, column: 9, scope: !15750, inlinedAt: !15740)
!15750 = distinct !DILexicalBlock(scope: !15734, file: !2739, line: 149, column: 6)
!15751 = !DILocation(line: 149, column: 6, scope: !15734, inlinedAt: !15740)
!15752 = !DILocation(line: 157, column: 6, scope: !15753, inlinedAt: !15740)
!15753 = distinct !DILexicalBlock(scope: !15734, file: !2739, line: 157, column: 6)
!15754 = !DILocation(line: 564, column: 6, scope: !15716)
!15755 = !DILocation(line: 566, column: 14, scope: !15756)
!15756 = distinct !DILexicalBlock(scope: !15757, file: !2739, line: 566, column: 7)
!15757 = distinct !DILexicalBlock(scope: !15741, file: !2739, line: 564, column: 42)
!15758 = !DILocation(line: 566, column: 7, scope: !15757)
!15759 = !DILocation(line: 567, column: 4, scope: !15760)
!15760 = distinct !DILexicalBlock(scope: !15756, file: !2739, line: 566, column: 27)
!15761 = !DILocation(line: 568, column: 3, scope: !15760)
!15762 = !DILocation(line: 585, column: 1, scope: !15716)
!15763 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2739, file: !2739, line: 1144, type: !15764, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !15766)
!15764 = !DISubroutineType(types: !15765)
!15765 = !{!2634, !15618}
!15766 = !{!15767, !15768, !15769}
!15767 = !DILocalVariable(name: "pq", arg: 1, scope: !15763, file: !2739, line: 1144, type: !15618)
!15768 = !DILocalVariable(name: "thread", scope: !15763, file: !2739, line: 1146, type: !2634)
!15769 = !DILocalVariable(name: "n", scope: !15763, file: !2739, line: 1147, type: !2735)
!15770 = !DILocation(line: 0, scope: !15763)
!15771 = !DILocation(line: 1147, column: 19, scope: !15763)
!15772 = !DILocation(line: 1152, column: 2, scope: !15763)
!15773 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !14692, file: !14692, line: 115, type: !15533, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !15774)
!15774 = !{!15775}
!15775 = !DILocalVariable(name: "thread", arg: 1, scope: !15773, file: !14692, line: 115, type: !2634)
!15776 = !DILocation(line: 0, scope: !15773)
!15777 = !DILocation(line: 117, column: 46, scope: !15773)
!15778 = !DILocation(line: 117, column: 10, scope: !15773)
!15779 = !DILocation(line: 117, column: 9, scope: !15773)
!15780 = !DILocation(line: 117, column: 2, scope: !15773)
!15781 = distinct !DISubprogram(name: "is_preempt", scope: !2739, file: !2739, line: 62, type: !15391, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !15782)
!15782 = !{!15783}
!15783 = !DILocalVariable(name: "thread", arg: 1, scope: !15781, file: !2739, line: 62, type: !2634)
!15784 = !DILocation(line: 0, scope: !15781)
!15785 = !DILocation(line: 65, column: 22, scope: !15781)
!15786 = !DILocation(line: 65, column: 30, scope: !15781)
!15787 = !DILocation(line: 65, column: 2, scope: !15781)
!15788 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !15086, file: !15086, line: 35, type: !15789, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !15793)
!15789 = !DISubroutineType(types: !15790)
!15790 = !{!422, !15791}
!15791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15792, size: 32)
!15792 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2685)
!15793 = !{!15794}
!15794 = !DILocalVariable(name: "to", arg: 1, scope: !15788, file: !15086, line: 35, type: !15791)
!15795 = !DILocation(line: 0, scope: !15788)
!15796 = !DILocation(line: 37, column: 35, scope: !15788)
!15797 = !DILocation(line: 37, column: 10, scope: !15788)
!15798 = !DILocation(line: 37, column: 9, scope: !15788)
!15799 = !DILocation(line: 37, column: 2, scope: !15788)
!15800 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !367, file: !367, line: 225, type: !15801, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !15805)
!15801 = !DISubroutineType(types: !15802)
!15802 = !{!422, !15803}
!15803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15804, size: 32)
!15804 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2644)
!15805 = !{!15806}
!15806 = !DILocalVariable(name: "node", arg: 1, scope: !15800, file: !367, line: 225, type: !15803)
!15807 = !DILocation(line: 0, scope: !15800)
!15808 = !DILocation(line: 227, column: 15, scope: !15800)
!15809 = !DILocation(line: 227, column: 20, scope: !15800)
!15810 = !DILocation(line: 227, column: 2, scope: !15800)
!15811 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !367, file: !367, line: 325, type: !15689, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !15812)
!15812 = !{!15813, !15814}
!15813 = !DILocalVariable(name: "list", arg: 1, scope: !15811, file: !367, line: 325, type: !15618)
!15814 = !DILocalVariable(name: "node", arg: 2, scope: !15811, file: !367, line: 326, type: !2735)
!15815 = !DILocation(line: 0, scope: !15811)
!15816 = !DILocation(line: 328, column: 24, scope: !15811)
!15817 = !DILocation(line: 328, column: 15, scope: !15811)
!15818 = !DILocation(line: 328, column: 9, scope: !15811)
!15819 = !DILocation(line: 328, column: 45, scope: !15811)
!15820 = !DILocation(line: 328, column: 2, scope: !15811)
!15821 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !367, file: !367, line: 266, type: !15822, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !15824)
!15822 = !DISubroutineType(types: !15823)
!15823 = !{!422, !15618}
!15824 = !{!15825}
!15825 = !DILocalVariable(name: "list", arg: 1, scope: !15821, file: !367, line: 266, type: !15618)
!15826 = !DILocation(line: 0, scope: !15821)
!15827 = !DILocation(line: 268, column: 15, scope: !15821)
!15828 = !DILocation(line: 268, column: 20, scope: !15821)
!15829 = !DILocation(line: 268, column: 2, scope: !15821)
!15830 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !367, file: !367, line: 496, type: !15831, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !15833)
!15831 = !DISubroutineType(types: !15832)
!15832 = !{null, !2735}
!15833 = !{!15834, !15835, !15836}
!15834 = !DILocalVariable(name: "node", arg: 1, scope: !15830, file: !367, line: 496, type: !2735)
!15835 = !DILocalVariable(name: "prev", scope: !15830, file: !367, line: 498, type: !15677)
!15836 = !DILocalVariable(name: "next", scope: !15830, file: !367, line: 499, type: !15677)
!15837 = !DILocation(line: 0, scope: !15830)
!15838 = !DILocation(line: 498, column: 34, scope: !15830)
!15839 = !DILocation(line: 499, column: 34, scope: !15830)
!15840 = !DILocation(line: 501, column: 8, scope: !15830)
!15841 = !DILocation(line: 501, column: 13, scope: !15830)
!15842 = !DILocation(line: 502, column: 8, scope: !15830)
!15843 = !DILocation(line: 502, column: 13, scope: !15830)
!15844 = !DILocation(line: 503, column: 2, scope: !15830)
!15845 = !DILocation(line: 504, column: 1, scope: !15830)
!15846 = distinct !DISubprogram(name: "sys_dnode_init", scope: !367, file: !367, line: 211, type: !15831, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !15847)
!15847 = !{!15848}
!15848 = !DILocalVariable(name: "node", arg: 1, scope: !15846, file: !367, line: 211, type: !2735)
!15849 = !DILocation(line: 0, scope: !15846)
!15850 = !DILocation(line: 213, column: 8, scope: !15846)
!15851 = !DILocation(line: 213, column: 13, scope: !15846)
!15852 = !DILocation(line: 214, column: 8, scope: !15846)
!15853 = !DILocation(line: 214, column: 13, scope: !15846)
!15854 = !DILocation(line: 215, column: 1, scope: !15846)
!15855 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !14692, file: !14692, line: 131, type: !15856, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !15858)
!15856 = !DISubroutineType(types: !15857)
!15857 = !{!422, !2634, !113}
!15858 = !{!15859, !15860}
!15859 = !DILocalVariable(name: "thread", arg: 1, scope: !15855, file: !14692, line: 131, type: !2634)
!15860 = !DILocalVariable(name: "state", arg: 2, scope: !15855, file: !14692, line: 131, type: !113)
!15861 = !DILocation(line: 0, scope: !15855)
!15862 = !DILocation(line: 133, column: 23, scope: !15855)
!15863 = !DILocation(line: 133, column: 45, scope: !15855)
!15864 = !DILocation(line: 133, column: 2, scope: !15855)
!15865 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !14692, file: !14692, line: 211, type: !15866, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !15868)
!15866 = !DISubroutineType(types: !15867)
!15867 = !{!422, !108, !108}
!15868 = !{!15869, !15870}
!15869 = !DILocalVariable(name: "prio", arg: 1, scope: !15865, file: !14692, line: 211, type: !108)
!15870 = !DILocalVariable(name: "test_prio", arg: 2, scope: !15865, file: !14692, line: 211, type: !108)
!15871 = !DILocation(line: 0, scope: !15865)
!15872 = !DILocation(line: 213, column: 9, scope: !15865)
!15873 = !DILocation(line: 213, column: 2, scope: !15865)
!15874 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !14692, file: !14692, line: 83, type: !15533, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !15875)
!15875 = !{!15876}
!15876 = !DILocalVariable(name: "thread", arg: 1, scope: !15874, file: !14692, line: 83, type: !2634)
!15877 = !DILocation(line: 0, scope: !15874)
!15878 = !DILocation(line: 89, column: 16, scope: !15874)
!15879 = !DILocation(line: 89, column: 2, scope: !15874)
!15880 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !14692, file: !14692, line: 206, type: !15866, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !15881)
!15881 = !{!15882, !15883}
!15882 = !DILocalVariable(name: "prio1", arg: 1, scope: !15880, file: !14692, line: 206, type: !108)
!15883 = !DILocalVariable(name: "prio2", arg: 2, scope: !15880, file: !14692, line: 206, type: !108)
!15884 = !DILocation(line: 0, scope: !15880)
!15885 = !DILocation(line: 208, column: 15, scope: !15880)
!15886 = !DILocation(line: 208, column: 2, scope: !15880)
!15887 = distinct !DISubprogram(name: "z_ready_thread", scope: !2739, file: !2739, line: 635, type: !15373, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !15888)
!15888 = !{!15889, !15890, !15892}
!15889 = !DILocalVariable(name: "thread", arg: 1, scope: !15887, file: !2739, line: 635, type: !2634)
!15890 = !DILocalVariable(name: "__i", scope: !15891, file: !2739, line: 637, type: !15407)
!15891 = distinct !DILexicalBlock(scope: !15887, file: !2739, line: 637, column: 2)
!15892 = !DILocalVariable(name: "__key", scope: !15891, file: !2739, line: 637, type: !15407)
!15893 = !DILocation(line: 0, scope: !15887)
!15894 = !DILocation(line: 0, scope: !15891)
!15895 = !DILocation(line: 0, scope: !15415, inlinedAt: !15896)
!15896 = distinct !DILocation(line: 637, column: 2, scope: !15891)
!15897 = !DILocation(line: 55, column: 2, scope: !15424, inlinedAt: !15898)
!15898 = distinct !DILocation(line: 145, column: 10, scope: !15415, inlinedAt: !15896)
!15899 = !DILocation(line: 0, scope: !15424, inlinedAt: !15898)
!15900 = !DILocation(line: 639, column: 4, scope: !15901)
!15901 = distinct !DILexicalBlock(scope: !15902, file: !2739, line: 638, column: 41)
!15902 = distinct !DILexicalBlock(scope: !15903, file: !2739, line: 638, column: 7)
!15903 = distinct !DILexicalBlock(scope: !15904, file: !2739, line: 637, column: 26)
!15904 = distinct !DILexicalBlock(scope: !15891, file: !2739, line: 637, column: 2)
!15905 = !DILocation(line: 0, scope: !15442, inlinedAt: !15906)
!15906 = distinct !DILocation(line: 637, column: 2, scope: !15904)
!15907 = !DILocation(line: 0, scope: !15450, inlinedAt: !15908)
!15908 = distinct !DILocation(line: 215, column: 2, scope: !15442, inlinedAt: !15906)
!15909 = !DILocation(line: 95, column: 2, scope: !15450, inlinedAt: !15908)
!15910 = !DILocation(line: 642, column: 1, scope: !15887)
!15911 = distinct !DISubprogram(name: "ready_thread", scope: !2739, file: !2739, line: 617, type: !15373, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !15912)
!15912 = !{!15913}
!15913 = !DILocalVariable(name: "thread", arg: 1, scope: !15911, file: !2739, line: 617, type: !2634)
!15914 = !DILocation(line: 0, scope: !15911)
!15915 = !DILocation(line: 626, column: 7, scope: !15916)
!15916 = distinct !DILexicalBlock(scope: !15911, file: !2739, line: 626, column: 6)
!15917 = !DILocation(line: 626, column: 34, scope: !15916)
!15918 = !DILocation(line: 626, column: 37, scope: !15916)
!15919 = !DILocation(line: 626, column: 6, scope: !15911)
!15920 = !DILocation(line: 0, scope: !15601, inlinedAt: !15921)
!15921 = distinct !DILocation(line: 629, column: 3, scope: !15922)
!15922 = distinct !DILexicalBlock(scope: !15916, file: !2739, line: 626, column: 64)
!15923 = !DILocation(line: 252, column: 15, scope: !15601, inlinedAt: !15921)
!15924 = !DILocation(line: 252, column: 28, scope: !15601, inlinedAt: !15921)
!15925 = !DILocation(line: 0, scope: !15608, inlinedAt: !15926)
!15926 = distinct !DILocation(line: 254, column: 3, scope: !15612, inlinedAt: !15921)
!15927 = !DILocation(line: 0, scope: !15615, inlinedAt: !15928)
!15928 = distinct !DILocation(line: 229, column: 2, scope: !15608, inlinedAt: !15926)
!15929 = !DILocation(line: 188, column: 2, scope: !15625, inlinedAt: !15928)
!15930 = !DILocation(line: 188, column: 2, scope: !15627, inlinedAt: !15928)
!15931 = !DILocation(line: 0, scope: !15625, inlinedAt: !15928)
!15932 = !DILocation(line: 189, column: 7, scope: !15630, inlinedAt: !15928)
!15933 = !DILocation(line: 189, column: 35, scope: !15630, inlinedAt: !15928)
!15934 = !DILocation(line: 189, column: 7, scope: !15631, inlinedAt: !15928)
!15935 = !DILocation(line: 191, column: 21, scope: !15635, inlinedAt: !15928)
!15936 = !DILocation(line: 190, column: 4, scope: !15635, inlinedAt: !15928)
!15937 = !DILocation(line: 192, column: 4, scope: !15635, inlinedAt: !15928)
!15938 = distinct !{!15938, !15929, !15939}
!15939 = !DILocation(line: 194, column: 2, scope: !15625, inlinedAt: !15928)
!15940 = !DILocation(line: 196, column: 37, scope: !15615, inlinedAt: !15928)
!15941 = !DILocation(line: 196, column: 2, scope: !15615, inlinedAt: !15928)
!15942 = !DILocation(line: 197, column: 1, scope: !15615, inlinedAt: !15928)
!15943 = !DILocation(line: 630, column: 3, scope: !15922)
!15944 = !DILocation(line: 632, column: 2, scope: !15922)
!15945 = !DILocation(line: 633, column: 1, scope: !15911)
!15946 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !14692, file: !14692, line: 120, type: !15533, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !15947)
!15947 = !{!15948}
!15948 = !DILocalVariable(name: "thread", arg: 1, scope: !15946, file: !14692, line: 120, type: !2634)
!15949 = !DILocation(line: 0, scope: !15946)
!15950 = !DILocation(line: 122, column: 12, scope: !15946)
!15951 = !DILocation(line: 122, column: 62, scope: !15946)
!15952 = !DILocation(line: 123, column: 4, scope: !15946)
!15953 = !DILocation(line: 122, column: 2, scope: !15946)
!15954 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2739, file: !2739, line: 644, type: !15373, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !15955)
!15955 = !{!15956, !15957, !15959}
!15956 = !DILocalVariable(name: "thread", arg: 1, scope: !15954, file: !2739, line: 644, type: !2634)
!15957 = !DILocalVariable(name: "__i", scope: !15958, file: !2739, line: 646, type: !15407)
!15958 = distinct !DILexicalBlock(scope: !15954, file: !2739, line: 646, column: 2)
!15959 = !DILocalVariable(name: "__key", scope: !15958, file: !2739, line: 646, type: !15407)
!15960 = !DILocation(line: 0, scope: !15954)
!15961 = !DILocation(line: 0, scope: !15958)
!15962 = !DILocation(line: 0, scope: !15415, inlinedAt: !15963)
!15963 = distinct !DILocation(line: 646, column: 2, scope: !15958)
!15964 = !DILocation(line: 55, column: 2, scope: !15424, inlinedAt: !15965)
!15965 = distinct !DILocation(line: 145, column: 10, scope: !15415, inlinedAt: !15963)
!15966 = !DILocation(line: 0, scope: !15424, inlinedAt: !15965)
!15967 = !DILocation(line: 647, column: 3, scope: !15968)
!15968 = distinct !DILexicalBlock(scope: !15969, file: !2739, line: 646, column: 26)
!15969 = distinct !DILexicalBlock(scope: !15958, file: !2739, line: 646, column: 2)
!15970 = !DILocation(line: 0, scope: !15442, inlinedAt: !15971)
!15971 = distinct !DILocation(line: 646, column: 2, scope: !15969)
!15972 = !DILocation(line: 0, scope: !15450, inlinedAt: !15973)
!15973 = distinct !DILocation(line: 215, column: 2, scope: !15442, inlinedAt: !15971)
!15974 = !DILocation(line: 95, column: 2, scope: !15450, inlinedAt: !15973)
!15975 = !DILocation(line: 649, column: 1, scope: !15954)
!15976 = distinct !DISubprogram(name: "z_sched_start", scope: !2739, file: !2739, line: 651, type: !15373, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !15977)
!15977 = !{!15978, !15979}
!15978 = !DILocalVariable(name: "thread", arg: 1, scope: !15976, file: !2739, line: 651, type: !2634)
!15979 = !DILocalVariable(name: "key", scope: !15976, file: !2739, line: 653, type: !15407)
!15980 = !DILocation(line: 0, scope: !15976)
!15981 = !DILocation(line: 0, scope: !15415, inlinedAt: !15982)
!15982 = distinct !DILocation(line: 653, column: 25, scope: !15976)
!15983 = !DILocation(line: 55, column: 2, scope: !15424, inlinedAt: !15984)
!15984 = distinct !DILocation(line: 145, column: 10, scope: !15415, inlinedAt: !15982)
!15985 = !DILocation(line: 0, scope: !15424, inlinedAt: !15984)
!15986 = !DILocation(line: 655, column: 6, scope: !15987)
!15987 = distinct !DILexicalBlock(scope: !15976, file: !2739, line: 655, column: 6)
!15988 = !DILocation(line: 655, column: 6, scope: !15976)
!15989 = !DILocation(line: 0, scope: !15442, inlinedAt: !15990)
!15990 = distinct !DILocation(line: 656, column: 3, scope: !15991)
!15991 = distinct !DILexicalBlock(scope: !15987, file: !2739, line: 655, column: 36)
!15992 = !DILocation(line: 0, scope: !15450, inlinedAt: !15993)
!15993 = distinct !DILocation(line: 215, column: 2, scope: !15442, inlinedAt: !15990)
!15994 = !DILocation(line: 95, column: 2, scope: !15450, inlinedAt: !15993)
!15995 = !DILocation(line: 657, column: 3, scope: !15991)
!15996 = !DILocation(line: 660, column: 2, scope: !15976)
!15997 = !DILocation(line: 661, column: 2, scope: !15976)
!15998 = !DILocation(line: 662, column: 2, scope: !15976)
!15999 = !DILocation(line: 663, column: 1, scope: !15976)
!16000 = distinct !DISubprogram(name: "z_has_thread_started", scope: !14692, file: !14692, line: 126, type: !15533, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !16001)
!16001 = !{!16002}
!16002 = !DILocalVariable(name: "thread", arg: 1, scope: !16000, file: !14692, line: 126, type: !2634)
!16003 = !DILocation(line: 0, scope: !16000)
!16004 = !DILocation(line: 128, column: 23, scope: !16000)
!16005 = !DILocation(line: 128, column: 36, scope: !16000)
!16006 = !DILocation(line: 128, column: 56, scope: !16000)
!16007 = !DILocation(line: 128, column: 2, scope: !16000)
!16008 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !14692, file: !14692, line: 155, type: !15373, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !16009)
!16009 = !{!16010}
!16010 = !DILocalVariable(name: "thread", arg: 1, scope: !16008, file: !14692, line: 155, type: !2634)
!16011 = !DILocation(line: 0, scope: !16008)
!16012 = !DILocation(line: 157, column: 15, scope: !16008)
!16013 = !DILocation(line: 157, column: 28, scope: !16008)
!16014 = !DILocation(line: 158, column: 1, scope: !16008)
!16015 = distinct !DISubprogram(name: "z_reschedule", scope: !2739, file: !2739, line: 967, type: !15443, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !16016)
!16016 = !{!16017, !16018}
!16017 = !DILocalVariable(name: "lock", arg: 1, scope: !16015, file: !2739, line: 967, type: !15418)
!16018 = !DILocalVariable(name: "key", arg: 2, scope: !16015, file: !2739, line: 967, type: !15407)
!16019 = !DILocation(line: 0, scope: !16015)
!16020 = !DILocation(line: 969, column: 6, scope: !16021)
!16021 = distinct !DILexicalBlock(scope: !16015, file: !2739, line: 969, column: 6)
!16022 = !DILocation(line: 969, column: 23, scope: !16021)
!16023 = !DILocation(line: 969, column: 26, scope: !16021)
!16024 = !DILocation(line: 969, column: 6, scope: !16015)
!16025 = !DILocalVariable(name: "key", arg: 2, scope: !16026, file: !14796, line: 193, type: !15407)
!16026 = distinct !DISubprogram(name: "z_swap", scope: !14796, file: !14796, line: 193, type: !16027, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !16029)
!16027 = !DISubroutineType(types: !16028)
!16028 = !{!108, !15418, !15407}
!16029 = !{!16030, !16025}
!16030 = !DILocalVariable(name: "lock", arg: 1, scope: !16026, file: !14796, line: 193, type: !15418)
!16031 = !DILocation(line: 0, scope: !16026, inlinedAt: !16032)
!16032 = distinct !DILocation(line: 970, column: 3, scope: !16033)
!16033 = distinct !DILexicalBlock(scope: !16021, file: !2739, line: 969, column: 39)
!16034 = !DILocation(line: 196, column: 9, scope: !16026, inlinedAt: !16032)
!16035 = !DILocation(line: 971, column: 2, scope: !16033)
!16036 = !DILocation(line: 0, scope: !15442, inlinedAt: !16037)
!16037 = distinct !DILocation(line: 972, column: 3, scope: !16038)
!16038 = distinct !DILexicalBlock(scope: !16021, file: !2739, line: 971, column: 9)
!16039 = !DILocation(line: 0, scope: !15450, inlinedAt: !16040)
!16040 = distinct !DILocation(line: 215, column: 2, scope: !15442, inlinedAt: !16037)
!16041 = !DILocation(line: 95, column: 2, scope: !15450, inlinedAt: !16040)
!16042 = !DILocation(line: 975, column: 1, scope: !16015)
!16043 = distinct !DISubprogram(name: "resched", scope: !2739, file: !2739, line: 940, type: !16044, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !16046)
!16044 = !DISubroutineType(types: !16045)
!16045 = !{!422, !113}
!16046 = !{!16047}
!16047 = !DILocalVariable(name: "key", arg: 1, scope: !16043, file: !2739, line: 940, type: !113)
!16048 = !DILocation(line: 0, scope: !16043)
!16049 = !DILocalVariable(name: "key", arg: 1, scope: !16050, file: !4146, line: 112, type: !32)
!16050 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !4146, file: !4146, line: 112, type: !16051, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !16053)
!16051 = !DISubroutineType(types: !16052)
!16052 = !{!422, !32}
!16053 = !{!16049}
!16054 = !DILocation(line: 0, scope: !16050, inlinedAt: !16055)
!16055 = distinct !DILocation(line: 946, column: 9, scope: !16043)
!16056 = !DILocation(line: 115, column: 13, scope: !16050, inlinedAt: !16055)
!16057 = !DILocation(line: 946, column: 32, scope: !16043)
!16058 = !DILocation(line: 1031, column: 3, scope: !16059, inlinedAt: !16062)
!16059 = distinct !DISubprogram(name: "__get_IPSR", scope: !7128, file: !7128, line: 1027, type: !7209, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !16060)
!16060 = !{!16061}
!16061 = !DILocalVariable(name: "result", scope: !16059, file: !7128, line: 1029, type: !113)
!16062 = distinct !DILocation(line: 48, column: 10, scope: !16063, inlinedAt: !16064)
!16063 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8146, file: !8146, line: 46, type: !8147, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !437)
!16064 = distinct !DILocation(line: 946, column: 36, scope: !16043)
!16065 = !{i64 3786143}
!16066 = !DILocation(line: 0, scope: !16059, inlinedAt: !16062)
!16067 = !DILocation(line: 48, column: 9, scope: !16063, inlinedAt: !16064)
!16068 = !DILocation(line: 946, column: 2, scope: !16043)
!16069 = distinct !DISubprogram(name: "need_swap", scope: !2739, file: !2739, line: 953, type: !8147, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !16070)
!16070 = !{!16071}
!16071 = !DILocalVariable(name: "new_thread", scope: !16069, file: !2739, line: 959, type: !2634)
!16072 = !DILocation(line: 962, column: 31, scope: !16069)
!16073 = !DILocation(line: 0, scope: !16069)
!16074 = !DILocation(line: 963, column: 23, scope: !16069)
!16075 = !DILocation(line: 963, column: 20, scope: !16069)
!16076 = !DILocation(line: 963, column: 2, scope: !16069)
!16077 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !14796, file: !14796, line: 181, type: !7138, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !16078)
!16078 = !{!16079, !16080}
!16079 = !DILocalVariable(name: "key", arg: 1, scope: !16077, file: !14796, line: 181, type: !32)
!16080 = !DILocalVariable(name: "ret", scope: !16077, file: !14796, line: 183, type: !108)
!16081 = !DILocation(line: 0, scope: !16077)
!16082 = !DILocation(line: 185, column: 8, scope: !16077)
!16083 = !DILocation(line: 186, column: 2, scope: !16077)
!16084 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2739, file: !2739, line: 665, type: !15373, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !16085)
!16085 = !{!16086, !16087, !16089}
!16086 = !DILocalVariable(name: "thread", arg: 1, scope: !16084, file: !2739, line: 665, type: !2634)
!16087 = !DILocalVariable(name: "__i", scope: !16088, file: !2739, line: 671, type: !15407)
!16088 = distinct !DILexicalBlock(scope: !16084, file: !2739, line: 671, column: 2)
!16089 = !DILocalVariable(name: "__key", scope: !16088, file: !2739, line: 671, type: !15407)
!16090 = !DILocation(line: 0, scope: !16084)
!16091 = !DILocation(line: 669, column: 8, scope: !16084)
!16092 = !DILocation(line: 0, scope: !16088)
!16093 = !DILocation(line: 0, scope: !15415, inlinedAt: !16094)
!16094 = distinct !DILocation(line: 671, column: 2, scope: !16088)
!16095 = !DILocation(line: 55, column: 2, scope: !15424, inlinedAt: !16096)
!16096 = distinct !DILocation(line: 145, column: 10, scope: !15415, inlinedAt: !16094)
!16097 = !DILocation(line: 0, scope: !15424, inlinedAt: !16096)
!16098 = !DILocation(line: 672, column: 7, scope: !16099)
!16099 = distinct !DILexicalBlock(scope: !16100, file: !2739, line: 672, column: 7)
!16100 = distinct !DILexicalBlock(scope: !16101, file: !2739, line: 671, column: 26)
!16101 = distinct !DILexicalBlock(scope: !16088, file: !2739, line: 671, column: 2)
!16102 = !DILocation(line: 672, column: 7, scope: !16100)
!16103 = !DILocation(line: 0, scope: !15584, inlinedAt: !16104)
!16104 = distinct !DILocation(line: 673, column: 4, scope: !16105)
!16105 = distinct !DILexicalBlock(scope: !16099, file: !2739, line: 672, column: 35)
!16106 = !DILocation(line: 266, column: 15, scope: !15584, inlinedAt: !16104)
!16107 = !DILocation(line: 266, column: 28, scope: !15584, inlinedAt: !16104)
!16108 = !DILocation(line: 0, scope: !15592, inlinedAt: !16109)
!16109 = distinct !DILocation(line: 268, column: 3, scope: !15596, inlinedAt: !16104)
!16110 = !DILocation(line: 234, column: 2, scope: !15592, inlinedAt: !16109)
!16111 = !DILocation(line: 674, column: 3, scope: !16105)
!16112 = !DILocation(line: 675, column: 3, scope: !16100)
!16113 = !DILocation(line: 676, column: 26, scope: !16100)
!16114 = !DILocation(line: 676, column: 23, scope: !16100)
!16115 = !DILocation(line: 676, column: 3, scope: !16100)
!16116 = !DILocation(line: 0, scope: !15442, inlinedAt: !16117)
!16117 = distinct !DILocation(line: 671, column: 2, scope: !16101)
!16118 = !DILocation(line: 0, scope: !15450, inlinedAt: !16119)
!16119 = distinct !DILocation(line: 215, column: 2, scope: !15442, inlinedAt: !16117)
!16120 = !DILocation(line: 95, column: 2, scope: !15450, inlinedAt: !16119)
!16121 = !DILocation(line: 679, column: 16, scope: !16122)
!16122 = distinct !DILexicalBlock(scope: !16084, file: !2739, line: 679, column: 6)
!16123 = !DILocation(line: 679, column: 13, scope: !16122)
!16124 = !DILocation(line: 679, column: 6, scope: !16084)
!16125 = !DILocation(line: 680, column: 3, scope: !16126)
!16126 = distinct !DILexicalBlock(scope: !16122, file: !2739, line: 679, column: 26)
!16127 = !DILocation(line: 681, column: 2, scope: !16126)
!16128 = !DILocation(line: 684, column: 1, scope: !16084)
!16129 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !15086, file: !15086, line: 52, type: !15391, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !16130)
!16130 = !{!16131}
!16131 = !DILocalVariable(name: "thread", arg: 1, scope: !16129, file: !15086, line: 52, type: !2634)
!16132 = !DILocation(line: 0, scope: !16129)
!16133 = !DILocation(line: 54, column: 39, scope: !16129)
!16134 = !DILocation(line: 54, column: 9, scope: !16129)
!16135 = !DILocation(line: 54, column: 2, scope: !16129)
!16136 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !14692, file: !14692, line: 141, type: !15373, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !16137)
!16137 = !{!16138}
!16138 = !DILocalVariable(name: "thread", arg: 1, scope: !16136, file: !14692, line: 141, type: !2634)
!16139 = !DILocation(line: 0, scope: !16136)
!16140 = !DILocation(line: 143, column: 15, scope: !16136)
!16141 = !DILocation(line: 143, column: 28, scope: !16136)
!16142 = !DILocation(line: 146, column: 1, scope: !16136)
!16143 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !14692, file: !14692, line: 73, type: !3472, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !437)
!16144 = !DILocation(line: 55, column: 2, scope: !15424, inlinedAt: !16145)
!16145 = distinct !DILocation(line: 75, column: 30, scope: !16143)
!16146 = !DILocation(line: 0, scope: !15424, inlinedAt: !16145)
!16147 = !DILocation(line: 75, column: 9, scope: !16143)
!16148 = !DILocation(line: 76, column: 1, scope: !16143)
!16149 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2739, file: !2739, line: 977, type: !7219, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !16150)
!16150 = !{!16151}
!16151 = !DILocalVariable(name: "key", arg: 1, scope: !16149, file: !2739, line: 977, type: !113)
!16152 = !DILocation(line: 0, scope: !16149)
!16153 = !DILocation(line: 979, column: 6, scope: !16154)
!16154 = distinct !DILexicalBlock(scope: !16149, file: !2739, line: 979, column: 6)
!16155 = !DILocation(line: 979, column: 6, scope: !16149)
!16156 = !DILocation(line: 980, column: 3, scope: !16157)
!16157 = distinct !DILexicalBlock(scope: !16154, file: !2739, line: 979, column: 20)
!16158 = !DILocation(line: 981, column: 2, scope: !16157)
!16159 = !DILocation(line: 0, scope: !15450, inlinedAt: !16160)
!16160 = distinct !DILocation(line: 982, column: 3, scope: !16161)
!16161 = distinct !DILexicalBlock(scope: !16154, file: !2739, line: 981, column: 9)
!16162 = !DILocation(line: 95, column: 2, scope: !15450, inlinedAt: !16160)
!16163 = !DILocation(line: 985, column: 1, scope: !16149)
!16164 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2739, file: !2739, line: 695, type: !15373, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !16165)
!16165 = !{!16166, !16167}
!16166 = !DILocalVariable(name: "thread", arg: 1, scope: !16164, file: !2739, line: 695, type: !2634)
!16167 = !DILocalVariable(name: "key", scope: !16164, file: !2739, line: 699, type: !15407)
!16168 = !DILocation(line: 0, scope: !16164)
!16169 = !DILocation(line: 0, scope: !15415, inlinedAt: !16170)
!16170 = distinct !DILocation(line: 699, column: 25, scope: !16164)
!16171 = !DILocation(line: 55, column: 2, scope: !15424, inlinedAt: !16172)
!16172 = distinct !DILocation(line: 145, column: 10, scope: !15415, inlinedAt: !16170)
!16173 = !DILocation(line: 0, scope: !15424, inlinedAt: !16172)
!16174 = !DILocation(line: 702, column: 7, scope: !16175)
!16175 = distinct !DILexicalBlock(scope: !16164, file: !2739, line: 702, column: 6)
!16176 = !DILocation(line: 702, column: 6, scope: !16164)
!16177 = !DILocation(line: 0, scope: !15442, inlinedAt: !16178)
!16178 = distinct !DILocation(line: 703, column: 3, scope: !16179)
!16179 = distinct !DILexicalBlock(scope: !16175, file: !2739, line: 702, column: 38)
!16180 = !DILocation(line: 0, scope: !15450, inlinedAt: !16181)
!16181 = distinct !DILocation(line: 215, column: 2, scope: !15442, inlinedAt: !16178)
!16182 = !DILocation(line: 95, column: 2, scope: !15450, inlinedAt: !16181)
!16183 = !DILocation(line: 704, column: 3, scope: !16179)
!16184 = !DILocation(line: 707, column: 2, scope: !16164)
!16185 = !DILocation(line: 708, column: 2, scope: !16164)
!16186 = !DILocation(line: 710, column: 2, scope: !16164)
!16187 = !DILocation(line: 713, column: 1, scope: !16164)
!16188 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !14692, file: !14692, line: 96, type: !15533, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !16189)
!16189 = !{!16190}
!16190 = !DILocalVariable(name: "thread", arg: 1, scope: !16188, file: !14692, line: 96, type: !2634)
!16191 = !DILocation(line: 0, scope: !16188)
!16192 = !DILocation(line: 98, column: 23, scope: !16188)
!16193 = !DILocation(line: 98, column: 36, scope: !16188)
!16194 = !DILocation(line: 98, column: 57, scope: !16188)
!16195 = !DILocation(line: 98, column: 2, scope: !16188)
!16196 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !14692, file: !14692, line: 148, type: !15373, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !16197)
!16197 = !{!16198}
!16198 = !DILocalVariable(name: "thread", arg: 1, scope: !16196, file: !14692, line: 148, type: !2634)
!16199 = !DILocation(line: 0, scope: !16196)
!16200 = !DILocation(line: 150, column: 15, scope: !16196)
!16201 = !DILocation(line: 150, column: 28, scope: !16196)
!16202 = !DILocation(line: 153, column: 1, scope: !16196)
!16203 = distinct !DISubprogram(name: "z_pend_thread", scope: !2739, file: !2739, line: 770, type: !16204, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !16210)
!16204 = !DISubroutineType(types: !16205)
!16205 = !{null, !2634, !2665, !16206}
!16206 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !110, line: 67, baseType: !16207)
!16207 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !110, line: 65, size: 64, elements: !16208)
!16208 = !{!16209}
!16209 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16207, file: !110, line: 66, baseType: !109, size: 64)
!16210 = !{!16211, !16212, !16213, !16214, !16216}
!16211 = !DILocalVariable(name: "thread", arg: 1, scope: !16203, file: !2739, line: 770, type: !2634)
!16212 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16203, file: !2739, line: 770, type: !2665)
!16213 = !DILocalVariable(name: "timeout", arg: 3, scope: !16203, file: !2739, line: 771, type: !16206)
!16214 = !DILocalVariable(name: "__i", scope: !16215, file: !2739, line: 774, type: !15407)
!16215 = distinct !DILexicalBlock(scope: !16203, file: !2739, line: 774, column: 2)
!16216 = !DILocalVariable(name: "__key", scope: !16215, file: !2739, line: 774, type: !15407)
!16217 = !DILocation(line: 0, scope: !16203)
!16218 = !DILocation(line: 0, scope: !16215)
!16219 = !DILocation(line: 0, scope: !15415, inlinedAt: !16220)
!16220 = distinct !DILocation(line: 774, column: 2, scope: !16215)
!16221 = !DILocation(line: 55, column: 2, scope: !15424, inlinedAt: !16222)
!16222 = distinct !DILocation(line: 145, column: 10, scope: !15415, inlinedAt: !16220)
!16223 = !DILocation(line: 0, scope: !15424, inlinedAt: !16222)
!16224 = !DILocation(line: 775, column: 3, scope: !16225)
!16225 = distinct !DILexicalBlock(scope: !16226, file: !2739, line: 774, column: 26)
!16226 = distinct !DILexicalBlock(scope: !16215, file: !2739, line: 774, column: 2)
!16227 = !DILocation(line: 0, scope: !15442, inlinedAt: !16228)
!16228 = distinct !DILocation(line: 774, column: 2, scope: !16226)
!16229 = !DILocation(line: 0, scope: !15450, inlinedAt: !16230)
!16230 = distinct !DILocation(line: 215, column: 2, scope: !15442, inlinedAt: !16228)
!16231 = !DILocation(line: 95, column: 2, scope: !15450, inlinedAt: !16230)
!16232 = !DILocation(line: 777, column: 1, scope: !16203)
!16233 = distinct !DISubprogram(name: "pend_locked", scope: !2739, file: !2739, line: 760, type: !16204, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !16234)
!16234 = !{!16235, !16236, !16237}
!16235 = !DILocalVariable(name: "thread", arg: 1, scope: !16233, file: !2739, line: 760, type: !2634)
!16236 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16233, file: !2739, line: 760, type: !2665)
!16237 = !DILocalVariable(name: "timeout", arg: 3, scope: !16233, file: !2739, line: 761, type: !16206)
!16238 = !DILocation(line: 0, scope: !16233)
!16239 = !DILocation(line: 766, column: 2, scope: !16233)
!16240 = !DILocation(line: 767, column: 2, scope: !16233)
!16241 = !DILocation(line: 768, column: 1, scope: !16233)
!16242 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2739, file: !2739, line: 740, type: !16243, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !16245)
!16243 = !DISubroutineType(types: !16244)
!16244 = !{null, !2634, !2665}
!16245 = !{!16246, !16247}
!16246 = !DILocalVariable(name: "thread", arg: 1, scope: !16242, file: !2739, line: 740, type: !2634)
!16247 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16242, file: !2739, line: 740, type: !2665)
!16248 = !DILocation(line: 0, scope: !16242)
!16249 = !DILocation(line: 742, column: 2, scope: !16242)
!16250 = !DILocation(line: 743, column: 2, scope: !16242)
!16251 = !DILocation(line: 747, column: 13, scope: !16252)
!16252 = distinct !DILexicalBlock(scope: !16242, file: !2739, line: 747, column: 6)
!16253 = !DILocation(line: 747, column: 6, scope: !16242)
!16254 = !DILocation(line: 748, column: 16, scope: !16255)
!16255 = distinct !DILexicalBlock(scope: !16252, file: !2739, line: 747, column: 22)
!16256 = !DILocation(line: 748, column: 26, scope: !16255)
!16257 = !DILocation(line: 749, column: 28, scope: !16255)
!16258 = !DILocation(line: 0, scope: !15615, inlinedAt: !16259)
!16259 = distinct !DILocation(line: 749, column: 3, scope: !16255)
!16260 = !DILocation(line: 188, column: 2, scope: !15625, inlinedAt: !16259)
!16261 = !DILocation(line: 188, column: 2, scope: !15627, inlinedAt: !16259)
!16262 = !DILocation(line: 0, scope: !15625, inlinedAt: !16259)
!16263 = !DILocation(line: 189, column: 7, scope: !15630, inlinedAt: !16259)
!16264 = !DILocation(line: 189, column: 35, scope: !15630, inlinedAt: !16259)
!16265 = !DILocation(line: 189, column: 7, scope: !15631, inlinedAt: !16259)
!16266 = !DILocation(line: 191, column: 21, scope: !15635, inlinedAt: !16259)
!16267 = !DILocation(line: 190, column: 4, scope: !15635, inlinedAt: !16259)
!16268 = !DILocation(line: 192, column: 4, scope: !15635, inlinedAt: !16259)
!16269 = distinct !{!16269, !16260, !16270}
!16270 = !DILocation(line: 194, column: 2, scope: !15625, inlinedAt: !16259)
!16271 = !DILocation(line: 196, column: 37, scope: !15615, inlinedAt: !16259)
!16272 = !DILocation(line: 196, column: 2, scope: !15615, inlinedAt: !16259)
!16273 = !DILocation(line: 197, column: 1, scope: !15615, inlinedAt: !16259)
!16274 = !DILocation(line: 751, column: 1, scope: !16242)
!16275 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2739, file: !2739, line: 753, type: !16276, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !16278)
!16276 = !DISubroutineType(types: !16277)
!16277 = !{null, !2634, !16206}
!16278 = !{!16279, !16280}
!16279 = !DILocalVariable(name: "thread", arg: 1, scope: !16275, file: !2739, line: 753, type: !2634)
!16280 = !DILocalVariable(name: "timeout", arg: 2, scope: !16275, file: !2739, line: 753, type: !16206)
!16281 = !DILocation(line: 0, scope: !16275)
!16282 = !DILocation(line: 755, column: 7, scope: !16283)
!16283 = distinct !DILexicalBlock(scope: !16275, file: !2739, line: 755, column: 6)
!16284 = !DILocation(line: 755, column: 6, scope: !16275)
!16285 = !DILocation(line: 756, column: 3, scope: !16286)
!16286 = distinct !DILexicalBlock(scope: !16283, file: !2739, line: 755, column: 41)
!16287 = !DILocation(line: 757, column: 2, scope: !16286)
!16288 = !DILocation(line: 758, column: 1, scope: !16275)
!16289 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !15086, file: !15086, line: 47, type: !16276, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !16290)
!16290 = !{!16291, !16292}
!16291 = !DILocalVariable(name: "thread", arg: 1, scope: !16289, file: !15086, line: 47, type: !2634)
!16292 = !DILocalVariable(name: "ticks", arg: 2, scope: !16289, file: !15086, line: 47, type: !16206)
!16293 = !DILocation(line: 0, scope: !16289)
!16294 = !DILocation(line: 49, column: 30, scope: !16289)
!16295 = !DILocation(line: 49, column: 2, scope: !16289)
!16296 = !DILocation(line: 50, column: 1, scope: !16289)
!16297 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2739, file: !2739, line: 795, type: !2691, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !16298)
!16298 = !{!16299, !16300, !16301, !16303, !16304}
!16299 = !DILocalVariable(name: "timeout", arg: 1, scope: !16297, file: !2739, line: 795, type: !2693)
!16300 = !DILocalVariable(name: "thread", scope: !16297, file: !2739, line: 797, type: !2634)
!16301 = !DILocalVariable(name: "__i", scope: !16302, file: !2739, line: 800, type: !15407)
!16302 = distinct !DILexicalBlock(scope: !16297, file: !2739, line: 800, column: 2)
!16303 = !DILocalVariable(name: "__key", scope: !16302, file: !2739, line: 800, type: !15407)
!16304 = !DILocalVariable(name: "killed", scope: !16305, file: !2739, line: 801, type: !422)
!16305 = distinct !DILexicalBlock(scope: !16306, file: !2739, line: 800, column: 26)
!16306 = distinct !DILexicalBlock(scope: !16302, file: !2739, line: 800, column: 2)
!16307 = !DILocation(line: 0, scope: !16297)
!16308 = !DILocation(line: 797, column: 28, scope: !16297)
!16309 = !DILocation(line: 0, scope: !16302)
!16310 = !DILocation(line: 0, scope: !15415, inlinedAt: !16311)
!16311 = distinct !DILocation(line: 800, column: 2, scope: !16302)
!16312 = !DILocation(line: 55, column: 2, scope: !15424, inlinedAt: !16313)
!16313 = distinct !DILocation(line: 145, column: 10, scope: !15415, inlinedAt: !16311)
!16314 = !DILocation(line: 0, scope: !15424, inlinedAt: !16313)
!16315 = !DILocation(line: 801, column: 27, scope: !16305)
!16316 = !DILocation(line: 801, column: 32, scope: !16305)
!16317 = !DILocation(line: 801, column: 61, scope: !16305)
!16318 = !DILocation(line: 0, scope: !16305)
!16319 = !DILocation(line: 804, column: 7, scope: !16305)
!16320 = !DILocation(line: 805, column: 21, scope: !16321)
!16321 = distinct !DILexicalBlock(scope: !16322, file: !2739, line: 805, column: 8)
!16322 = distinct !DILexicalBlock(scope: !16323, file: !2739, line: 804, column: 16)
!16323 = distinct !DILexicalBlock(scope: !16305, file: !2739, line: 804, column: 7)
!16324 = !DILocation(line: 805, column: 31, scope: !16321)
!16325 = !DILocation(line: 805, column: 8, scope: !16322)
!16326 = !DILocation(line: 806, column: 5, scope: !16327)
!16327 = distinct !DILexicalBlock(scope: !16321, file: !2739, line: 805, column: 40)
!16328 = !DILocation(line: 807, column: 4, scope: !16327)
!16329 = !DILocation(line: 808, column: 4, scope: !16322)
!16330 = !DILocation(line: 809, column: 4, scope: !16322)
!16331 = !DILocation(line: 810, column: 4, scope: !16322)
!16332 = !DILocation(line: 811, column: 3, scope: !16322)
!16333 = !DILocation(line: 0, scope: !15442, inlinedAt: !16334)
!16334 = distinct !DILocation(line: 800, column: 2, scope: !16306)
!16335 = !DILocation(line: 0, scope: !15450, inlinedAt: !16336)
!16336 = distinct !DILocation(line: 215, column: 2, scope: !15442, inlinedAt: !16334)
!16337 = !DILocation(line: 95, column: 2, scope: !15450, inlinedAt: !16336)
!16338 = !DILocation(line: 813, column: 1, scope: !16297)
!16339 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2739, file: !2739, line: 779, type: !15373, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !16340)
!16340 = !{!16341}
!16341 = !DILocalVariable(name: "thread", arg: 1, scope: !16339, file: !2739, line: 779, type: !2634)
!16342 = !DILocation(line: 0, scope: !16339)
!16343 = !DILocation(line: 781, column: 2, scope: !16339)
!16344 = !DILocation(line: 782, column: 2, scope: !16339)
!16345 = !DILocation(line: 783, column: 15, scope: !16339)
!16346 = !DILocation(line: 783, column: 25, scope: !16339)
!16347 = !DILocation(line: 784, column: 1, scope: !16339)
!16348 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !14692, file: !14692, line: 165, type: !15373, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !16349)
!16349 = !{!16350}
!16350 = !DILocalVariable(name: "thread", arg: 1, scope: !16348, file: !14692, line: 165, type: !2634)
!16351 = !DILocation(line: 0, scope: !16348)
!16352 = !DILocation(line: 167, column: 15, scope: !16348)
!16353 = !DILocation(line: 167, column: 28, scope: !16348)
!16354 = !DILocation(line: 168, column: 1, scope: !16348)
!16355 = distinct !DISubprogram(name: "unready_thread", scope: !2739, file: !2739, line: 731, type: !15373, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !16356)
!16356 = !{!16357}
!16357 = !DILocalVariable(name: "thread", arg: 1, scope: !16355, file: !2739, line: 731, type: !2634)
!16358 = !DILocation(line: 0, scope: !16355)
!16359 = !DILocation(line: 733, column: 6, scope: !16360)
!16360 = distinct !DILexicalBlock(scope: !16355, file: !2739, line: 733, column: 6)
!16361 = !DILocation(line: 733, column: 6, scope: !16355)
!16362 = !DILocation(line: 0, scope: !15584, inlinedAt: !16363)
!16363 = distinct !DILocation(line: 734, column: 3, scope: !16364)
!16364 = distinct !DILexicalBlock(scope: !16360, file: !2739, line: 733, column: 34)
!16365 = !DILocation(line: 266, column: 15, scope: !15584, inlinedAt: !16363)
!16366 = !DILocation(line: 266, column: 28, scope: !15584, inlinedAt: !16363)
!16367 = !DILocation(line: 0, scope: !15592, inlinedAt: !16368)
!16368 = distinct !DILocation(line: 268, column: 3, scope: !15596, inlinedAt: !16363)
!16369 = !DILocation(line: 234, column: 2, scope: !15592, inlinedAt: !16368)
!16370 = !DILocation(line: 735, column: 2, scope: !16364)
!16371 = !DILocation(line: 736, column: 25, scope: !16355)
!16372 = !DILocation(line: 736, column: 22, scope: !16355)
!16373 = !DILocation(line: 736, column: 2, scope: !16355)
!16374 = !DILocation(line: 737, column: 1, scope: !16355)
!16375 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !14692, file: !14692, line: 160, type: !15373, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !16376)
!16376 = !{!16377}
!16377 = !DILocalVariable(name: "thread", arg: 1, scope: !16375, file: !14692, line: 160, type: !2634)
!16378 = !DILocation(line: 0, scope: !16375)
!16379 = !DILocation(line: 162, column: 15, scope: !16375)
!16380 = !DILocation(line: 162, column: 28, scope: !16375)
!16381 = !DILocation(line: 163, column: 1, scope: !16375)
!16382 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2739, file: !2739, line: 786, type: !15373, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !16383)
!16383 = !{!16384, !16385, !16387}
!16384 = !DILocalVariable(name: "thread", arg: 1, scope: !16382, file: !2739, line: 786, type: !2634)
!16385 = !DILocalVariable(name: "__i", scope: !16386, file: !2739, line: 788, type: !15407)
!16386 = distinct !DILexicalBlock(scope: !16382, file: !2739, line: 788, column: 2)
!16387 = !DILocalVariable(name: "__key", scope: !16386, file: !2739, line: 788, type: !15407)
!16388 = !DILocation(line: 0, scope: !16382)
!16389 = !DILocation(line: 0, scope: !16386)
!16390 = !DILocation(line: 0, scope: !15415, inlinedAt: !16391)
!16391 = distinct !DILocation(line: 788, column: 2, scope: !16386)
!16392 = !DILocation(line: 55, column: 2, scope: !15424, inlinedAt: !16393)
!16393 = distinct !DILocation(line: 145, column: 10, scope: !15415, inlinedAt: !16391)
!16394 = !DILocation(line: 0, scope: !15424, inlinedAt: !16393)
!16395 = !DILocation(line: 789, column: 3, scope: !16396)
!16396 = distinct !DILexicalBlock(scope: !16397, file: !2739, line: 788, column: 26)
!16397 = distinct !DILexicalBlock(scope: !16386, file: !2739, line: 788, column: 2)
!16398 = !DILocation(line: 0, scope: !15442, inlinedAt: !16399)
!16399 = distinct !DILocation(line: 788, column: 2, scope: !16397)
!16400 = !DILocation(line: 0, scope: !15450, inlinedAt: !16401)
!16401 = distinct !DILocation(line: 215, column: 2, scope: !15442, inlinedAt: !16399)
!16402 = !DILocation(line: 95, column: 2, scope: !15450, inlinedAt: !16401)
!16403 = !DILocation(line: 791, column: 1, scope: !16382)
!16404 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2739, file: !2739, line: 816, type: !16405, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !16407)
!16405 = !DISubroutineType(types: !16406)
!16406 = !{!108, !113, !2665, !16206}
!16407 = !{!16408, !16409, !16410, !16411, !16412, !16414}
!16408 = !DILocalVariable(name: "key", arg: 1, scope: !16404, file: !2739, line: 816, type: !113)
!16409 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16404, file: !2739, line: 816, type: !2665)
!16410 = !DILocalVariable(name: "timeout", arg: 3, scope: !16404, file: !2739, line: 816, type: !16206)
!16411 = !DILocalVariable(name: "ret", scope: !16404, file: !2739, line: 828, type: !108)
!16412 = !DILocalVariable(name: "__i", scope: !16413, file: !2739, line: 829, type: !15407)
!16413 = distinct !DILexicalBlock(scope: !16404, file: !2739, line: 829, column: 2)
!16414 = !DILocalVariable(name: "__key", scope: !16413, file: !2739, line: 829, type: !15407)
!16415 = !DILocation(line: 0, scope: !16404)
!16416 = !DILocation(line: 823, column: 14, scope: !16404)
!16417 = !DILocation(line: 823, column: 2, scope: !16404)
!16418 = !DILocation(line: 826, column: 20, scope: !16404)
!16419 = !DILocation(line: 826, column: 18, scope: !16404)
!16420 = !DILocation(line: 828, column: 12, scope: !16404)
!16421 = !DILocation(line: 0, scope: !16413)
!16422 = !DILocation(line: 0, scope: !15415, inlinedAt: !16423)
!16423 = distinct !DILocation(line: 829, column: 2, scope: !16413)
!16424 = !DILocation(line: 55, column: 2, scope: !15424, inlinedAt: !16425)
!16425 = distinct !DILocation(line: 145, column: 10, scope: !15415, inlinedAt: !16423)
!16426 = !DILocation(line: 0, scope: !15424, inlinedAt: !16425)
!16427 = !DILocation(line: 830, column: 7, scope: !16428)
!16428 = distinct !DILexicalBlock(scope: !16429, file: !2739, line: 830, column: 7)
!16429 = distinct !DILexicalBlock(scope: !16430, file: !2739, line: 829, column: 26)
!16430 = distinct !DILexicalBlock(scope: !16413, file: !2739, line: 829, column: 2)
!16431 = !DILocation(line: 830, column: 26, scope: !16428)
!16432 = !DILocation(line: 830, column: 23, scope: !16428)
!16433 = !DILocation(line: 830, column: 7, scope: !16429)
!16434 = !DILocation(line: 831, column: 20, scope: !16435)
!16435 = distinct !DILexicalBlock(scope: !16428, file: !2739, line: 830, column: 36)
!16436 = !DILocation(line: 832, column: 3, scope: !16435)
!16437 = !DILocation(line: 0, scope: !15442, inlinedAt: !16438)
!16438 = distinct !DILocation(line: 829, column: 2, scope: !16430)
!16439 = !DILocation(line: 0, scope: !15450, inlinedAt: !16440)
!16440 = distinct !DILocation(line: 215, column: 2, scope: !15442, inlinedAt: !16438)
!16441 = !DILocation(line: 95, column: 2, scope: !15450, inlinedAt: !16440)
!16442 = !DILocation(line: 834, column: 2, scope: !16404)
!16443 = distinct !DISubprogram(name: "z_pend_curr", scope: !2739, file: !2739, line: 840, type: !16444, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !16446)
!16444 = !DISubroutineType(types: !16445)
!16445 = !{!108, !15418, !15407, !2665, !16206}
!16446 = !{!16447, !16448, !16449, !16450}
!16447 = !DILocalVariable(name: "lock", arg: 1, scope: !16443, file: !2739, line: 840, type: !15418)
!16448 = !DILocalVariable(name: "key", arg: 2, scope: !16443, file: !2739, line: 840, type: !15407)
!16449 = !DILocalVariable(name: "wait_q", arg: 3, scope: !16443, file: !2739, line: 841, type: !2665)
!16450 = !DILocalVariable(name: "timeout", arg: 4, scope: !16443, file: !2739, line: 841, type: !16206)
!16451 = !DILocation(line: 0, scope: !16443)
!16452 = !DILocation(line: 844, column: 20, scope: !16443)
!16453 = !DILocation(line: 844, column: 18, scope: !16443)
!16454 = !DILocation(line: 0, scope: !15415, inlinedAt: !16455)
!16455 = distinct !DILocation(line: 856, column: 9, scope: !16443)
!16456 = !DILocation(line: 55, column: 2, scope: !15424, inlinedAt: !16457)
!16457 = distinct !DILocation(line: 145, column: 10, scope: !15415, inlinedAt: !16455)
!16458 = !DILocation(line: 0, scope: !15424, inlinedAt: !16457)
!16459 = !DILocation(line: 857, column: 14, scope: !16443)
!16460 = !DILocation(line: 857, column: 2, scope: !16443)
!16461 = !DILocation(line: 0, scope: !16026, inlinedAt: !16462)
!16462 = distinct !DILocation(line: 859, column: 9, scope: !16443)
!16463 = !DILocation(line: 196, column: 9, scope: !16026, inlinedAt: !16462)
!16464 = !DILocation(line: 859, column: 2, scope: !16443)
!16465 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2739, file: !2739, line: 862, type: !16466, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !16468)
!16466 = !DISubroutineType(types: !16467)
!16467 = !{!2634, !2665}
!16468 = !{!16469, !16470, !16471, !16473}
!16469 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16465, file: !2739, line: 862, type: !2665)
!16470 = !DILocalVariable(name: "thread", scope: !16465, file: !2739, line: 864, type: !2634)
!16471 = !DILocalVariable(name: "__i", scope: !16472, file: !2739, line: 866, type: !15407)
!16472 = distinct !DILexicalBlock(scope: !16465, file: !2739, line: 866, column: 2)
!16473 = !DILocalVariable(name: "__key", scope: !16472, file: !2739, line: 866, type: !15407)
!16474 = !DILocation(line: 0, scope: !16465)
!16475 = !DILocation(line: 0, scope: !16472)
!16476 = !DILocation(line: 0, scope: !15415, inlinedAt: !16477)
!16477 = distinct !DILocation(line: 866, column: 2, scope: !16472)
!16478 = !DILocation(line: 55, column: 2, scope: !15424, inlinedAt: !16479)
!16479 = distinct !DILocation(line: 145, column: 10, scope: !15415, inlinedAt: !16477)
!16480 = !DILocation(line: 0, scope: !15424, inlinedAt: !16479)
!16481 = !DILocation(line: 867, column: 12, scope: !16482)
!16482 = distinct !DILexicalBlock(scope: !16483, file: !2739, line: 866, column: 26)
!16483 = distinct !DILexicalBlock(scope: !16472, file: !2739, line: 866, column: 2)
!16484 = !DILocation(line: 869, column: 14, scope: !16485)
!16485 = distinct !DILexicalBlock(scope: !16482, file: !2739, line: 869, column: 7)
!16486 = !DILocation(line: 869, column: 7, scope: !16482)
!16487 = !DILocation(line: 870, column: 4, scope: !16488)
!16488 = distinct !DILexicalBlock(scope: !16485, file: !2739, line: 869, column: 23)
!16489 = !DILocation(line: 871, column: 3, scope: !16488)
!16490 = !DILocation(line: 0, scope: !15442, inlinedAt: !16491)
!16491 = distinct !DILocation(line: 866, column: 2, scope: !16483)
!16492 = !DILocation(line: 0, scope: !15450, inlinedAt: !16493)
!16493 = distinct !DILocation(line: 215, column: 2, scope: !15442, inlinedAt: !16491)
!16494 = !DILocation(line: 95, column: 2, scope: !15450, inlinedAt: !16493)
!16495 = !DILocation(line: 874, column: 2, scope: !16465)
!16496 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2739, file: !2739, line: 877, type: !16466, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !16497)
!16497 = !{!16498, !16499, !16500, !16502}
!16498 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16496, file: !2739, line: 877, type: !2665)
!16499 = !DILocalVariable(name: "thread", scope: !16496, file: !2739, line: 879, type: !2634)
!16500 = !DILocalVariable(name: "__i", scope: !16501, file: !2739, line: 881, type: !15407)
!16501 = distinct !DILexicalBlock(scope: !16496, file: !2739, line: 881, column: 2)
!16502 = !DILocalVariable(name: "__key", scope: !16501, file: !2739, line: 881, type: !15407)
!16503 = !DILocation(line: 0, scope: !16496)
!16504 = !DILocation(line: 0, scope: !16501)
!16505 = !DILocation(line: 0, scope: !15415, inlinedAt: !16506)
!16506 = distinct !DILocation(line: 881, column: 2, scope: !16501)
!16507 = !DILocation(line: 55, column: 2, scope: !15424, inlinedAt: !16508)
!16508 = distinct !DILocation(line: 145, column: 10, scope: !15415, inlinedAt: !16506)
!16509 = !DILocation(line: 0, scope: !15424, inlinedAt: !16508)
!16510 = !DILocation(line: 882, column: 12, scope: !16511)
!16511 = distinct !DILexicalBlock(scope: !16512, file: !2739, line: 881, column: 26)
!16512 = distinct !DILexicalBlock(scope: !16501, file: !2739, line: 881, column: 2)
!16513 = !DILocation(line: 884, column: 14, scope: !16514)
!16514 = distinct !DILexicalBlock(scope: !16511, file: !2739, line: 884, column: 7)
!16515 = !DILocation(line: 884, column: 7, scope: !16511)
!16516 = !DILocation(line: 885, column: 4, scope: !16517)
!16517 = distinct !DILexicalBlock(scope: !16514, file: !2739, line: 884, column: 23)
!16518 = !DILocation(line: 886, column: 10, scope: !16517)
!16519 = !DILocation(line: 887, column: 3, scope: !16517)
!16520 = !DILocation(line: 0, scope: !15442, inlinedAt: !16521)
!16521 = distinct !DILocation(line: 881, column: 2, scope: !16512)
!16522 = !DILocation(line: 0, scope: !15450, inlinedAt: !16523)
!16523 = distinct !DILocation(line: 215, column: 2, scope: !15442, inlinedAt: !16521)
!16524 = !DILocation(line: 95, column: 2, scope: !15450, inlinedAt: !16523)
!16525 = !DILocation(line: 890, column: 2, scope: !16496)
!16526 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2739, file: !2739, line: 893, type: !15373, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !16527)
!16527 = !{!16528}
!16528 = !DILocalVariable(name: "thread", arg: 1, scope: !16526, file: !2739, line: 893, type: !2634)
!16529 = !DILocation(line: 0, scope: !16526)
!16530 = !DILocation(line: 0, scope: !16382, inlinedAt: !16531)
!16531 = distinct !DILocation(line: 895, column: 2, scope: !16526)
!16532 = !DILocation(line: 0, scope: !16386, inlinedAt: !16531)
!16533 = !DILocation(line: 0, scope: !15415, inlinedAt: !16534)
!16534 = distinct !DILocation(line: 788, column: 2, scope: !16386, inlinedAt: !16531)
!16535 = !DILocation(line: 55, column: 2, scope: !15424, inlinedAt: !16536)
!16536 = distinct !DILocation(line: 145, column: 10, scope: !15415, inlinedAt: !16534)
!16537 = !DILocation(line: 0, scope: !15424, inlinedAt: !16536)
!16538 = !DILocation(line: 789, column: 3, scope: !16396, inlinedAt: !16531)
!16539 = !DILocation(line: 0, scope: !15442, inlinedAt: !16540)
!16540 = distinct !DILocation(line: 788, column: 2, scope: !16397, inlinedAt: !16531)
!16541 = !DILocation(line: 0, scope: !15450, inlinedAt: !16542)
!16542 = distinct !DILocation(line: 215, column: 2, scope: !15442, inlinedAt: !16540)
!16543 = !DILocation(line: 95, column: 2, scope: !15450, inlinedAt: !16542)
!16544 = !DILocation(line: 896, column: 8, scope: !16526)
!16545 = !DILocation(line: 897, column: 1, scope: !16526)
!16546 = distinct !DISubprogram(name: "z_set_prio", scope: !2739, file: !2739, line: 902, type: !15735, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !16547)
!16547 = !{!16548, !16549, !16550, !16551, !16553}
!16548 = !DILocalVariable(name: "thread", arg: 1, scope: !16546, file: !2739, line: 902, type: !2634)
!16549 = !DILocalVariable(name: "prio", arg: 2, scope: !16546, file: !2739, line: 902, type: !108)
!16550 = !DILocalVariable(name: "need_sched", scope: !16546, file: !2739, line: 904, type: !422)
!16551 = !DILocalVariable(name: "__i", scope: !16552, file: !2739, line: 906, type: !15407)
!16552 = distinct !DILexicalBlock(scope: !16546, file: !2739, line: 906, column: 2)
!16553 = !DILocalVariable(name: "__key", scope: !16552, file: !2739, line: 906, type: !15407)
!16554 = !DILocation(line: 0, scope: !16546)
!16555 = !DILocation(line: 0, scope: !16552)
!16556 = !DILocation(line: 0, scope: !15415, inlinedAt: !16557)
!16557 = distinct !DILocation(line: 906, column: 2, scope: !16552)
!16558 = !DILocation(line: 55, column: 2, scope: !15424, inlinedAt: !16559)
!16559 = distinct !DILocation(line: 145, column: 10, scope: !15415, inlinedAt: !16557)
!16560 = !DILocation(line: 0, scope: !15424, inlinedAt: !16559)
!16561 = !DILocation(line: 907, column: 16, scope: !16562)
!16562 = distinct !DILexicalBlock(scope: !16563, file: !2739, line: 906, column: 26)
!16563 = distinct !DILexicalBlock(scope: !16552, file: !2739, line: 906, column: 2)
!16564 = !DILocation(line: 909, column: 7, scope: !16562)
!16565 = !DILocation(line: 0, scope: !15584, inlinedAt: !16566)
!16566 = distinct !DILocation(line: 912, column: 5, scope: !16567)
!16567 = distinct !DILexicalBlock(scope: !16568, file: !2739, line: 911, column: 63)
!16568 = distinct !DILexicalBlock(scope: !16569, file: !2739, line: 911, column: 8)
!16569 = distinct !DILexicalBlock(scope: !16570, file: !2739, line: 909, column: 19)
!16570 = distinct !DILexicalBlock(scope: !16562, file: !2739, line: 909, column: 7)
!16571 = !DILocation(line: 266, column: 28, scope: !15584, inlinedAt: !16566)
!16572 = !DILocation(line: 0, scope: !15592, inlinedAt: !16573)
!16573 = distinct !DILocation(line: 268, column: 3, scope: !15596, inlinedAt: !16566)
!16574 = !DILocation(line: 234, column: 2, scope: !15592, inlinedAt: !16573)
!16575 = !DILocation(line: 913, column: 23, scope: !16567)
!16576 = !DILocation(line: 0, scope: !15601, inlinedAt: !16577)
!16577 = distinct !DILocation(line: 914, column: 5, scope: !16567)
!16578 = !DILocation(line: 252, column: 28, scope: !15601, inlinedAt: !16577)
!16579 = !DILocation(line: 0, scope: !15608, inlinedAt: !16580)
!16580 = distinct !DILocation(line: 254, column: 3, scope: !15612, inlinedAt: !16577)
!16581 = !DILocation(line: 0, scope: !15615, inlinedAt: !16582)
!16582 = distinct !DILocation(line: 229, column: 2, scope: !15608, inlinedAt: !16580)
!16583 = !DILocation(line: 188, column: 2, scope: !15625, inlinedAt: !16582)
!16584 = !DILocation(line: 188, column: 2, scope: !15627, inlinedAt: !16582)
!16585 = !DILocation(line: 0, scope: !15625, inlinedAt: !16582)
!16586 = !DILocation(line: 189, column: 7, scope: !15630, inlinedAt: !16582)
!16587 = !DILocation(line: 189, column: 35, scope: !15630, inlinedAt: !16582)
!16588 = !DILocation(line: 189, column: 7, scope: !15631, inlinedAt: !16582)
!16589 = !DILocation(line: 190, column: 4, scope: !15635, inlinedAt: !16582)
!16590 = !DILocation(line: 192, column: 4, scope: !15635, inlinedAt: !16582)
!16591 = distinct !{!16591, !16583, !16592}
!16592 = !DILocation(line: 194, column: 2, scope: !15625, inlinedAt: !16582)
!16593 = !DILocation(line: 196, column: 2, scope: !15615, inlinedAt: !16582)
!16594 = !DILocation(line: 197, column: 1, scope: !15615, inlinedAt: !16582)
!16595 = !DILocation(line: 918, column: 4, scope: !16569)
!16596 = !DILocation(line: 919, column: 3, scope: !16569)
!16597 = !DILocation(line: 920, column: 22, scope: !16598)
!16598 = distinct !DILexicalBlock(scope: !16570, file: !2739, line: 919, column: 10)
!16599 = !DILocation(line: 0, scope: !15442, inlinedAt: !16600)
!16600 = distinct !DILocation(line: 906, column: 2, scope: !16563)
!16601 = !DILocation(line: 0, scope: !15450, inlinedAt: !16602)
!16602 = distinct !DILocation(line: 215, column: 2, scope: !15442, inlinedAt: !16600)
!16603 = !DILocation(line: 95, column: 2, scope: !15450, inlinedAt: !16602)
!16604 = !DILocation(line: 926, column: 2, scope: !16546)
!16605 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2739, file: !2739, line: 929, type: !16606, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !16608)
!16606 = !DISubroutineType(types: !16607)
!16607 = !{null, !2634, !108}
!16608 = !{!16609, !16610, !16611}
!16609 = !DILocalVariable(name: "thread", arg: 1, scope: !16605, file: !2739, line: 929, type: !2634)
!16610 = !DILocalVariable(name: "prio", arg: 2, scope: !16605, file: !2739, line: 929, type: !108)
!16611 = !DILocalVariable(name: "need_sched", scope: !16605, file: !2739, line: 931, type: !422)
!16612 = !DILocation(line: 0, scope: !16605)
!16613 = !DILocation(line: 931, column: 20, scope: !16605)
!16614 = !DILocation(line: 935, column: 17, scope: !16615)
!16615 = distinct !DILexicalBlock(scope: !16605, file: !2739, line: 935, column: 6)
!16616 = !DILocation(line: 935, column: 20, scope: !16615)
!16617 = !DILocation(line: 935, column: 35, scope: !16615)
!16618 = !DILocation(line: 935, column: 48, scope: !16615)
!16619 = !DILocation(line: 935, column: 6, scope: !16605)
!16620 = !DILocation(line: 936, column: 3, scope: !16621)
!16621 = distinct !DILexicalBlock(scope: !16615, file: !2739, line: 935, column: 55)
!16622 = !DILocation(line: 937, column: 2, scope: !16621)
!16623 = !DILocation(line: 938, column: 1, scope: !16605)
!16624 = distinct !DISubprogram(name: "k_sched_lock", scope: !2739, file: !2739, line: 987, type: !3472, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !16625)
!16625 = !{!16626, !16628}
!16626 = !DILocalVariable(name: "__i", scope: !16627, file: !2739, line: 989, type: !15407)
!16627 = distinct !DILexicalBlock(scope: !16624, file: !2739, line: 989, column: 2)
!16628 = !DILocalVariable(name: "__key", scope: !16627, file: !2739, line: 989, type: !15407)
!16629 = !DILocation(line: 0, scope: !16627)
!16630 = !DILocation(line: 0, scope: !15415, inlinedAt: !16631)
!16631 = distinct !DILocation(line: 989, column: 2, scope: !16627)
!16632 = !DILocation(line: 55, column: 2, scope: !15424, inlinedAt: !16633)
!16633 = distinct !DILocation(line: 145, column: 10, scope: !15415, inlinedAt: !16631)
!16634 = !DILocation(line: 0, scope: !15424, inlinedAt: !16633)
!16635 = !DILocation(line: 992, column: 3, scope: !16636)
!16636 = distinct !DILexicalBlock(scope: !16637, file: !2739, line: 989, column: 26)
!16637 = distinct !DILexicalBlock(scope: !16627, file: !2739, line: 989, column: 2)
!16638 = !DILocation(line: 0, scope: !15442, inlinedAt: !16639)
!16639 = distinct !DILocation(line: 989, column: 2, scope: !16637)
!16640 = !DILocation(line: 0, scope: !15450, inlinedAt: !16641)
!16641 = distinct !DILocation(line: 215, column: 2, scope: !15442, inlinedAt: !16639)
!16642 = !DILocation(line: 95, column: 2, scope: !15450, inlinedAt: !16641)
!16643 = !DILocation(line: 994, column: 1, scope: !16624)
!16644 = distinct !DISubprogram(name: "z_sched_lock", scope: !14692, file: !14692, line: 251, type: !3472, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !437)
!16645 = !DILocation(line: 256, column: 4, scope: !16644)
!16646 = !DILocation(line: 256, column: 19, scope: !16644)
!16647 = !DILocation(line: 256, column: 2, scope: !16644)
!16648 = !DILocation(line: 258, column: 2, scope: !16649)
!16649 = distinct !DILexicalBlock(scope: !16644, file: !14692, line: 258, column: 2)
!16650 = !{i64 2155203367}
!16651 = !DILocation(line: 259, column: 1, scope: !16644)
!16652 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2739, file: !2739, line: 996, type: !3472, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !16653)
!16653 = !{!16654, !16656}
!16654 = !DILocalVariable(name: "__i", scope: !16655, file: !2739, line: 998, type: !15407)
!16655 = distinct !DILexicalBlock(scope: !16652, file: !2739, line: 998, column: 2)
!16656 = !DILocalVariable(name: "__key", scope: !16655, file: !2739, line: 998, type: !15407)
!16657 = !DILocation(line: 0, scope: !16655)
!16658 = !DILocation(line: 0, scope: !15415, inlinedAt: !16659)
!16659 = distinct !DILocation(line: 998, column: 2, scope: !16655)
!16660 = !DILocation(line: 55, column: 2, scope: !15424, inlinedAt: !16661)
!16661 = distinct !DILocation(line: 145, column: 10, scope: !15415, inlinedAt: !16659)
!16662 = !DILocation(line: 0, scope: !15424, inlinedAt: !16661)
!16663 = !DILocation(line: 1002, column: 5, scope: !16664)
!16664 = distinct !DILexicalBlock(scope: !16665, file: !2739, line: 998, column: 26)
!16665 = distinct !DILexicalBlock(scope: !16655, file: !2739, line: 998, column: 2)
!16666 = !DILocation(line: 1002, column: 20, scope: !16664)
!16667 = !DILocation(line: 1002, column: 3, scope: !16664)
!16668 = !DILocation(line: 1003, column: 3, scope: !16664)
!16669 = !DILocation(line: 0, scope: !15442, inlinedAt: !16670)
!16670 = distinct !DILocation(line: 998, column: 2, scope: !16665)
!16671 = !DILocation(line: 0, scope: !15450, inlinedAt: !16672)
!16672 = distinct !DILocation(line: 215, column: 2, scope: !15442, inlinedAt: !16670)
!16673 = !DILocation(line: 95, column: 2, scope: !15450, inlinedAt: !16672)
!16674 = !DILocation(line: 1011, column: 2, scope: !16652)
!16675 = !DILocation(line: 1012, column: 1, scope: !16652)
!16676 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2739, file: !2739, line: 1014, type: !15723, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !437)
!16677 = !DILocation(line: 1028, column: 25, scope: !16676)
!16678 = !DILocation(line: 1028, column: 2, scope: !16676)
!16679 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2739, file: !2739, line: 1155, type: !16680, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !16682)
!16680 = !DISubroutineType(types: !16681)
!16681 = !{!422, !2663, !2663}
!16682 = !{!16683, !16684, !16685, !16686, !16687}
!16683 = !DILocalVariable(name: "a", arg: 1, scope: !16679, file: !2739, line: 1155, type: !2663)
!16684 = !DILocalVariable(name: "b", arg: 2, scope: !16679, file: !2739, line: 1155, type: !2663)
!16685 = !DILocalVariable(name: "thread_a", scope: !16679, file: !2739, line: 1157, type: !2634)
!16686 = !DILocalVariable(name: "thread_b", scope: !16679, file: !2739, line: 1157, type: !2634)
!16687 = !DILocalVariable(name: "cmp", scope: !16679, file: !2739, line: 1158, type: !220)
!16688 = !DILocation(line: 0, scope: !16679)
!16689 = !DILocation(line: 1160, column: 13, scope: !16679)
!16690 = !DILocation(line: 1161, column: 13, scope: !16679)
!16691 = !DILocation(line: 1163, column: 8, scope: !16679)
!16692 = !DILocation(line: 1165, column: 10, scope: !16693)
!16693 = distinct !DILexicalBlock(scope: !16679, file: !2739, line: 1165, column: 6)
!16694 = !DILocation(line: 1165, column: 6, scope: !16679)
!16695 = !DILocation(line: 1167, column: 17, scope: !16696)
!16696 = distinct !DILexicalBlock(scope: !16693, file: !2739, line: 1167, column: 13)
!16697 = !DILocation(line: 1167, column: 13, scope: !16693)
!16698 = !DILocation(line: 1170, column: 25, scope: !16699)
!16699 = distinct !DILexicalBlock(scope: !16696, file: !2739, line: 1169, column: 9)
!16700 = !DILocation(line: 1170, column: 52, scope: !16699)
!16701 = !DILocation(line: 1170, column: 35, scope: !16699)
!16702 = !DILocation(line: 1170, column: 3, scope: !16699)
!16703 = !DILocation(line: 0, scope: !16693)
!16704 = !DILocation(line: 1173, column: 1, scope: !16679)
!16705 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2739, file: !2739, line: 1175, type: !16706, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !16721)
!16706 = !DISubroutineType(types: !16707)
!16707 = !{null, !16708, !2634}
!16708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16709, size: 32)
!16709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !16710, line: 37, size: 128, elements: !16711)
!16710 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16711 = !{!16712, !16720}
!16712 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !16709, file: !16710, line: 38, baseType: !16713, size: 96)
!16713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !676, line: 83, size: 96, elements: !16714)
!16714 = !{!16715, !16716, !16719}
!16715 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !16713, file: !676, line: 84, baseType: !2663, size: 32)
!16716 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !16713, file: !676, line: 85, baseType: !16717, size: 32, offset: 32)
!16717 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !676, line: 81, baseType: !16718)
!16718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16680, size: 32)
!16719 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !16713, file: !676, line: 86, baseType: !108, size: 32, offset: 64)
!16720 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !16709, file: !16710, line: 39, baseType: !108, size: 32, offset: 96)
!16721 = !{!16722, !16723, !16724, !16725, !16734}
!16722 = !DILocalVariable(name: "pq", arg: 1, scope: !16705, file: !2739, line: 1175, type: !16708)
!16723 = !DILocalVariable(name: "thread", arg: 2, scope: !16705, file: !2739, line: 1175, type: !2634)
!16724 = !DILocalVariable(name: "t", scope: !16705, file: !2739, line: 1177, type: !2634)
!16725 = !DILocalVariable(name: "__f", scope: !16726, file: !2739, line: 1190, type: !16729)
!16726 = distinct !DILexicalBlock(scope: !16727, file: !2739, line: 1190, column: 3)
!16727 = distinct !DILexicalBlock(scope: !16728, file: !2739, line: 1189, column: 27)
!16728 = distinct !DILexicalBlock(scope: !16705, file: !2739, line: 1189, column: 6)
!16729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !676, line: 155, size: 96, elements: !16730)
!16730 = !{!16731, !16732, !16733}
!16731 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !16729, file: !676, line: 156, baseType: !2734, size: 32)
!16732 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !16729, file: !676, line: 157, baseType: !209, size: 32, offset: 32)
!16733 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !16729, file: !676, line: 158, baseType: !220, size: 32, offset: 64)
!16734 = !DILocalVariable(name: "n", scope: !16735, file: !2739, line: 1190, type: !2663)
!16735 = distinct !DILexicalBlock(scope: !16736, file: !2739, line: 1190, column: 3)
!16736 = distinct !DILexicalBlock(scope: !16726, file: !2739, line: 1190, column: 3)
!16737 = !DILocation(line: 0, scope: !16705)
!16738 = !DILocation(line: 1181, column: 31, scope: !16705)
!16739 = !DILocation(line: 1181, column: 45, scope: !16705)
!16740 = !DILocation(line: 1181, column: 15, scope: !16705)
!16741 = !DILocation(line: 1181, column: 25, scope: !16705)
!16742 = !DILocation(line: 1189, column: 11, scope: !16728)
!16743 = !DILocation(line: 1189, column: 7, scope: !16728)
!16744 = !DILocation(line: 1189, column: 6, scope: !16705)
!16745 = !DILocation(line: 1190, column: 3, scope: !16726)
!16746 = !DILocation(line: 1190, column: 3, scope: !16735)
!16747 = !DILocation(line: 0, scope: !16735)
!16748 = !DILocation(line: 1190, column: 3, scope: !16736)
!16749 = !DILocation(line: 1193, column: 2, scope: !16727)
!16750 = !DILocation(line: 1191, column: 42, scope: !16751)
!16751 = distinct !DILexicalBlock(scope: !16736, file: !2739, line: 1190, column: 54)
!16752 = !DILocation(line: 1191, column: 12, scope: !16751)
!16753 = !DILocation(line: 1191, column: 22, scope: !16751)
!16754 = distinct !{!16754, !16745, !16755}
!16755 = !DILocation(line: 1192, column: 3, scope: !16726)
!16756 = !DILocation(line: 1195, column: 17, scope: !16705)
!16757 = !DILocation(line: 1195, column: 37, scope: !16705)
!16758 = !DILocation(line: 1195, column: 2, scope: !16705)
!16759 = !DILocation(line: 1196, column: 1, scope: !16705)
!16760 = !DISubprogram(name: "z_rb_foreach_next", scope: !676, file: !676, line: 176, type: !16761, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !437)
!16761 = !DISubroutineType(types: !16762)
!16762 = !{!2663, !16763, !16764}
!16763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16713, size: 32)
!16764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16729, size: 32)
!16765 = !DISubprogram(name: "rb_insert", scope: !676, file: !676, line: 105, type: !16766, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !437)
!16766 = !DISubroutineType(types: !16767)
!16767 = !{null, !16763, !2663}
!16768 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2739, file: !2739, line: 1198, type: !16706, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !16769)
!16769 = !{!16770, !16771}
!16770 = !DILocalVariable(name: "pq", arg: 1, scope: !16768, file: !2739, line: 1198, type: !16708)
!16771 = !DILocalVariable(name: "thread", arg: 2, scope: !16768, file: !2739, line: 1198, type: !2634)
!16772 = !DILocation(line: 0, scope: !16768)
!16773 = !DILocation(line: 1202, column: 17, scope: !16768)
!16774 = !DILocation(line: 1202, column: 37, scope: !16768)
!16775 = !DILocation(line: 1202, column: 2, scope: !16768)
!16776 = !DILocation(line: 1204, column: 16, scope: !16777)
!16777 = distinct !DILexicalBlock(scope: !16768, file: !2739, line: 1204, column: 6)
!16778 = !DILocation(line: 1204, column: 7, scope: !16777)
!16779 = !DILocation(line: 1204, column: 6, scope: !16768)
!16780 = !DILocation(line: 1205, column: 7, scope: !16781)
!16781 = distinct !DILexicalBlock(scope: !16777, file: !2739, line: 1204, column: 22)
!16782 = !DILocation(line: 1205, column: 22, scope: !16781)
!16783 = !DILocation(line: 1206, column: 2, scope: !16781)
!16784 = !DILocation(line: 1207, column: 1, scope: !16768)
!16785 = !DISubprogram(name: "rb_remove", scope: !676, file: !676, line: 110, type: !16766, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !437)
!16786 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2739, file: !2739, line: 1209, type: !16787, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !16789)
!16787 = !DISubroutineType(types: !16788)
!16788 = !{!2634, !16708}
!16789 = !{!16790, !16791, !16792}
!16790 = !DILocalVariable(name: "pq", arg: 1, scope: !16786, file: !2739, line: 1209, type: !16708)
!16791 = !DILocalVariable(name: "thread", scope: !16786, file: !2739, line: 1211, type: !2634)
!16792 = !DILocalVariable(name: "n", scope: !16786, file: !2739, line: 1212, type: !2663)
!16793 = !DILocation(line: 0, scope: !16786)
!16794 = !DILocation(line: 1212, column: 37, scope: !16786)
!16795 = !DILocation(line: 1212, column: 21, scope: !16786)
!16796 = !DILocation(line: 1217, column: 2, scope: !16786)
!16797 = distinct !DISubprogram(name: "rb_get_min", scope: !676, file: !676, line: 115, type: !16798, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !16800)
!16798 = !DISubroutineType(types: !16799)
!16799 = !{!2663, !16763}
!16800 = !{!16801}
!16801 = !DILocalVariable(name: "tree", arg: 1, scope: !16797, file: !676, line: 115, type: !16763)
!16802 = !DILocation(line: 0, scope: !16797)
!16803 = !DILocation(line: 117, column: 9, scope: !16797)
!16804 = !DILocation(line: 117, column: 2, scope: !16797)
!16805 = !DISubprogram(name: "z_rb_get_minmax", scope: !676, file: !676, line: 100, type: !16806, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !437)
!16806 = !DISubroutineType(types: !16807)
!16807 = !{!2663, !16763, !164}
!16808 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2739, file: !2739, line: 1246, type: !16809, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !16819)
!16809 = !DISubroutineType(types: !16810)
!16810 = !{!2634, !16811}
!16811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16812, size: 32)
!16812 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !16710, line: 53, size: 2080, elements: !16813)
!16813 = !{!16814, !16818}
!16814 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !16812, file: !16710, line: 54, baseType: !16815, size: 2048)
!16815 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2670, size: 2048, elements: !16816)
!16816 = !{!16817}
!16817 = !DISubrange(count: 32)
!16818 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !16812, file: !16710, line: 55, baseType: !32, size: 32, offset: 2048)
!16819 = !{!16820, !16821, !16822, !16823}
!16820 = !DILocalVariable(name: "pq", arg: 1, scope: !16808, file: !2739, line: 1246, type: !16811)
!16821 = !DILocalVariable(name: "thread", scope: !16808, file: !2739, line: 1252, type: !2634)
!16822 = !DILocalVariable(name: "l", scope: !16808, file: !2739, line: 1253, type: !15618)
!16823 = !DILocalVariable(name: "n", scope: !16808, file: !2739, line: 1254, type: !2735)
!16824 = !DILocation(line: 0, scope: !16808)
!16825 = !DILocation(line: 1248, column: 11, scope: !16826)
!16826 = distinct !DILexicalBlock(scope: !16808, file: !2739, line: 1248, column: 6)
!16827 = !DILocation(line: 1248, column: 7, scope: !16826)
!16828 = !DILocation(line: 1248, column: 6, scope: !16808)
!16829 = !DILocation(line: 1253, column: 31, scope: !16808)
!16830 = !DILocation(line: 1253, column: 20, scope: !16808)
!16831 = !DILocation(line: 1254, column: 19, scope: !16808)
!16832 = !DILocation(line: 1260, column: 1, scope: !16808)
!16833 = distinct !DISubprogram(name: "z_unpend_all", scope: !2739, file: !2739, line: 1262, type: !16834, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !16836)
!16834 = !DISubroutineType(types: !16835)
!16835 = !{!108, !2665}
!16836 = !{!16837, !16838, !16839}
!16837 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16833, file: !2739, line: 1262, type: !2665)
!16838 = !DILocalVariable(name: "need_sched", scope: !16833, file: !2739, line: 1264, type: !108)
!16839 = !DILocalVariable(name: "thread", scope: !16833, file: !2739, line: 1265, type: !2634)
!16840 = !DILocation(line: 0, scope: !16833)
!16841 = !DILocation(line: 1267, column: 19, scope: !16833)
!16842 = !DILocation(line: 1267, column: 41, scope: !16833)
!16843 = !DILocation(line: 1267, column: 2, scope: !16833)
!16844 = !DILocation(line: 1268, column: 3, scope: !16845)
!16845 = distinct !DILexicalBlock(scope: !16833, file: !2739, line: 1267, column: 50)
!16846 = !DILocation(line: 1269, column: 3, scope: !16845)
!16847 = distinct !{!16847, !16843, !16848}
!16848 = !DILocation(line: 1271, column: 2, scope: !16833)
!16849 = !DILocation(line: 1273, column: 2, scope: !16833)
!16850 = distinct !DISubprogram(name: "z_waitq_head", scope: !15018, file: !15018, line: 52, type: !16466, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !16851)
!16851 = !{!16852}
!16852 = !DILocalVariable(name: "w", arg: 1, scope: !16850, file: !15018, line: 52, type: !2665)
!16853 = !DILocation(line: 0, scope: !16850)
!16854 = !DILocation(line: 54, column: 52, scope: !16850)
!16855 = !DILocation(line: 54, column: 28, scope: !16850)
!16856 = !DILocation(line: 54, column: 9, scope: !16850)
!16857 = !DILocation(line: 54, column: 2, scope: !16850)
!16858 = distinct !DISubprogram(name: "init_ready_q", scope: !2739, file: !2739, line: 1276, type: !16859, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !16866)
!16859 = !DISubroutineType(types: !16860)
!16860 = !{null, !16861}
!16861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16862, size: 32)
!16862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !363, line: 83, size: 96, elements: !16863)
!16863 = !{!16864, !16865}
!16864 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !16862, file: !363, line: 86, baseType: !2634, size: 32)
!16865 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !16862, file: !363, line: 90, baseType: !2670, size: 64, offset: 32)
!16866 = !{!16867}
!16867 = !DILocalVariable(name: "rq", arg: 1, scope: !16858, file: !2739, line: 1276, type: !16861)
!16868 = !DILocation(line: 0, scope: !16858)
!16869 = !DILocation(line: 1289, column: 22, scope: !16858)
!16870 = !DILocation(line: 1289, column: 2, scope: !16858)
!16871 = !DILocation(line: 1291, column: 1, scope: !16858)
!16872 = distinct !DISubprogram(name: "sys_dlist_init", scope: !367, file: !367, line: 197, type: !16873, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !16875)
!16873 = !DISubroutineType(types: !16874)
!16874 = !{null, !15618}
!16875 = !{!16876}
!16876 = !DILocalVariable(name: "list", arg: 1, scope: !16872, file: !367, line: 197, type: !15618)
!16877 = !DILocation(line: 0, scope: !16872)
!16878 = !DILocation(line: 199, column: 8, scope: !16872)
!16879 = !DILocation(line: 199, column: 13, scope: !16872)
!16880 = !DILocation(line: 200, column: 8, scope: !16872)
!16881 = !DILocation(line: 200, column: 13, scope: !16872)
!16882 = !DILocation(line: 201, column: 1, scope: !16872)
!16883 = distinct !DISubprogram(name: "z_sched_init", scope: !2739, file: !2739, line: 1293, type: !3472, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !437)
!16884 = !DILocation(line: 1302, column: 2, scope: !16883)
!16885 = !DILocation(line: 1306, column: 2, scope: !16883)
!16886 = !DILocation(line: 1309, column: 1, scope: !16883)
!16887 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2739, file: !2739, line: 1311, type: !16888, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !16891)
!16888 = !DISubroutineType(types: !16889)
!16889 = !{!108, !16890}
!16890 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !651, line: 347, baseType: !2634)
!16891 = !{!16892}
!16892 = !DILocalVariable(name: "thread", arg: 1, scope: !16887, file: !2739, line: 1311, type: !16890)
!16893 = !DILocation(line: 0, scope: !16887)
!16894 = !DILocation(line: 1313, column: 22, scope: !16887)
!16895 = !DILocation(line: 1313, column: 9, scope: !16887)
!16896 = !DILocation(line: 1313, column: 2, scope: !16887)
!16897 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2739, file: !2739, line: 1325, type: !16898, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !16900)
!16898 = !DISubroutineType(types: !16899)
!16899 = !{null, !16890, !108}
!16900 = !{!16901, !16902, !16903}
!16901 = !DILocalVariable(name: "thread", arg: 1, scope: !16897, file: !2739, line: 1325, type: !16890)
!16902 = !DILocalVariable(name: "prio", arg: 2, scope: !16897, file: !2739, line: 1325, type: !108)
!16903 = !DILocalVariable(name: "th", scope: !16897, file: !2739, line: 1334, type: !2634)
!16904 = !DILocation(line: 0, scope: !16897)
!16905 = !DILocation(line: 1336, column: 2, scope: !16897)
!16906 = !DILocation(line: 1337, column: 1, scope: !16897)
!16907 = distinct !DISubprogram(name: "k_can_yield", scope: !2739, file: !2739, line: 1384, type: !8147, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !437)
!16908 = !DILocation(line: 1386, column: 11, scope: !16907)
!16909 = !DILocation(line: 1386, column: 29, scope: !16907)
!16910 = !DILocation(line: 1386, column: 32, scope: !16907)
!16911 = !DILocation(line: 1386, column: 46, scope: !16907)
!16912 = !DILocation(line: 1387, column: 28, scope: !16907)
!16913 = !DILocation(line: 1387, column: 4, scope: !16907)
!16914 = !DILocation(line: 1386, column: 2, scope: !16907)
!16915 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !359, file: !359, line: 989, type: !8147, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !437)
!16916 = !DILocation(line: 993, column: 10, scope: !16915)
!16917 = !DILocation(line: 993, column: 2, scope: !16915)
!16918 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2739, file: !2739, line: 1390, type: !3472, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !16919)
!16919 = !{!16920}
!16920 = !DILocalVariable(name: "key", scope: !16918, file: !2739, line: 1396, type: !15407)
!16921 = !DILocation(line: 0, scope: !15415, inlinedAt: !16922)
!16922 = distinct !DILocation(line: 1396, column: 25, scope: !16918)
!16923 = !DILocation(line: 55, column: 2, scope: !15424, inlinedAt: !16924)
!16924 = distinct !DILocation(line: 145, column: 10, scope: !15415, inlinedAt: !16922)
!16925 = !DILocation(line: 0, scope: !15424, inlinedAt: !16924)
!16926 = !DILocation(line: 0, scope: !16918)
!16927 = !DILocation(line: 1400, column: 18, scope: !16928)
!16928 = distinct !DILexicalBlock(scope: !16929, file: !2739, line: 1399, column: 36)
!16929 = distinct !DILexicalBlock(scope: !16918, file: !2739, line: 1398, column: 6)
!16930 = !DILocation(line: 0, scope: !15584, inlinedAt: !16931)
!16931 = distinct !DILocation(line: 1400, column: 3, scope: !16928)
!16932 = !DILocation(line: 266, column: 15, scope: !15584, inlinedAt: !16931)
!16933 = !DILocation(line: 266, column: 28, scope: !15584, inlinedAt: !16931)
!16934 = !DILocation(line: 0, scope: !15592, inlinedAt: !16935)
!16935 = distinct !DILocation(line: 268, column: 3, scope: !15596, inlinedAt: !16931)
!16936 = !DILocation(line: 234, column: 2, scope: !15592, inlinedAt: !16935)
!16937 = !DILocation(line: 1402, column: 15, scope: !16918)
!16938 = !DILocation(line: 0, scope: !15601, inlinedAt: !16939)
!16939 = distinct !DILocation(line: 1402, column: 2, scope: !16918)
!16940 = !DILocation(line: 252, column: 15, scope: !15601, inlinedAt: !16939)
!16941 = !DILocation(line: 252, column: 28, scope: !15601, inlinedAt: !16939)
!16942 = !DILocation(line: 0, scope: !15608, inlinedAt: !16943)
!16943 = distinct !DILocation(line: 254, column: 3, scope: !15612, inlinedAt: !16939)
!16944 = !DILocation(line: 0, scope: !15615, inlinedAt: !16945)
!16945 = distinct !DILocation(line: 229, column: 2, scope: !15608, inlinedAt: !16943)
!16946 = !DILocation(line: 188, column: 2, scope: !15625, inlinedAt: !16945)
!16947 = !DILocation(line: 188, column: 2, scope: !15627, inlinedAt: !16945)
!16948 = !DILocation(line: 0, scope: !15625, inlinedAt: !16945)
!16949 = !DILocation(line: 189, column: 7, scope: !15630, inlinedAt: !16945)
!16950 = !DILocation(line: 189, column: 35, scope: !15630, inlinedAt: !16945)
!16951 = !DILocation(line: 189, column: 7, scope: !15631, inlinedAt: !16945)
!16952 = !DILocation(line: 191, column: 21, scope: !15635, inlinedAt: !16945)
!16953 = !DILocation(line: 190, column: 4, scope: !15635, inlinedAt: !16945)
!16954 = !DILocation(line: 192, column: 4, scope: !15635, inlinedAt: !16945)
!16955 = distinct !{!16955, !16946, !16956}
!16956 = !DILocation(line: 194, column: 2, scope: !15625, inlinedAt: !16945)
!16957 = !DILocation(line: 196, column: 37, scope: !15615, inlinedAt: !16945)
!16958 = !DILocation(line: 196, column: 2, scope: !15615, inlinedAt: !16945)
!16959 = !DILocation(line: 197, column: 1, scope: !15615, inlinedAt: !16945)
!16960 = !DILocation(line: 1403, column: 2, scope: !16918)
!16961 = !DILocation(line: 0, scope: !16026, inlinedAt: !16962)
!16962 = distinct !DILocation(line: 1404, column: 2, scope: !16918)
!16963 = !DILocation(line: 196, column: 9, scope: !16026, inlinedAt: !16962)
!16964 = !DILocation(line: 1405, column: 1, scope: !16918)
!16965 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2739, file: !2739, line: 1459, type: !16966, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !16968)
!16966 = !DISubroutineType(types: !16967)
!16967 = !{!220, !16206}
!16968 = !{!16969, !16970, !16971}
!16969 = !DILocalVariable(name: "timeout", arg: 1, scope: !16965, file: !2739, line: 1459, type: !16206)
!16970 = !DILocalVariable(name: "ticks", scope: !16965, file: !2739, line: 1461, type: !109)
!16971 = !DILocalVariable(name: "ret", scope: !16965, file: !2739, line: 1480, type: !220)
!16972 = !DILocation(line: 0, scope: !16965)
!16973 = !DILocation(line: 1468, column: 6, scope: !16974)
!16974 = distinct !DILexicalBlock(scope: !16965, file: !2739, line: 1468, column: 6)
!16975 = !DILocation(line: 1468, column: 6, scope: !16965)
!16976 = !DILocation(line: 1469, column: 20, scope: !16977)
!16977 = distinct !DILexicalBlock(scope: !16974, file: !2739, line: 1468, column: 40)
!16978 = !DILocation(line: 1469, column: 3, scope: !16977)
!16979 = !DILocation(line: 1473, column: 3, scope: !16977)
!16980 = !DILocation(line: 1478, column: 10, scope: !16965)
!16981 = !DILocation(line: 1480, column: 16, scope: !16965)
!16982 = !DILocation(line: 1485, column: 1, scope: !16965)
!16983 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3868, file: !3868, line: 310, type: !16984, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !16986)
!16984 = !DISubroutineType(types: !16985)
!16985 = !{null, !16890}
!16986 = !{!16987}
!16987 = !DILocalVariable(name: "thread", arg: 1, scope: !16983, file: !3868, line: 310, type: !16890)
!16988 = !DILocation(line: 0, scope: !16983)
!16989 = !DILocation(line: 319, column: 2, scope: !16990)
!16990 = distinct !DILexicalBlock(scope: !16983, file: !3868, line: 319, column: 2)
!16991 = !{i64 2155121756}
!16992 = !DILocation(line: 320, column: 2, scope: !16983)
!16993 = !DILocation(line: 321, column: 1, scope: !16983)
!16994 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2739, file: !2739, line: 1415, type: !16995, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !16997)
!16995 = !DISubroutineType(types: !16996)
!16996 = !{!220, !109}
!16997 = !{!16998, !16999, !17000, !17001}
!16998 = !DILocalVariable(name: "ticks", arg: 1, scope: !16994, file: !2739, line: 1415, type: !109)
!16999 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !16994, file: !2739, line: 1418, type: !113)
!17000 = !DILocalVariable(name: "timeout", scope: !16994, file: !2739, line: 1430, type: !16206)
!17001 = !DILocalVariable(name: "key", scope: !16994, file: !2739, line: 1437, type: !15407)
!17002 = !DILocation(line: 0, scope: !16994)
!17003 = !DILocation(line: 1425, column: 12, scope: !17004)
!17004 = distinct !DILexicalBlock(scope: !16994, file: !2739, line: 1425, column: 6)
!17005 = !DILocation(line: 1425, column: 6, scope: !16994)
!17006 = !DILocation(line: 1426, column: 3, scope: !17007)
!17007 = distinct !DILexicalBlock(scope: !17004, file: !2739, line: 1425, column: 18)
!17008 = !DILocation(line: 1427, column: 3, scope: !17007)
!17009 = !DILocation(line: 1431, column: 24, scope: !17010)
!17010 = distinct !DILexicalBlock(scope: !16994, file: !2739, line: 1431, column: 6)
!17011 = !DILocation(line: 1431, column: 6, scope: !16994)
!17012 = !DILocation(line: 1432, column: 35, scope: !17013)
!17013 = distinct !DILexicalBlock(scope: !17010, file: !2739, line: 1431, column: 30)
!17014 = !DILocation(line: 1432, column: 27, scope: !17013)
!17015 = !DILocation(line: 1433, column: 2, scope: !17013)
!17016 = !DILocation(line: 1434, column: 27, scope: !17017)
!17017 = distinct !DILexicalBlock(scope: !17010, file: !2739, line: 1433, column: 9)
!17018 = !DILocation(line: 0, scope: !17010)
!17019 = !DILocation(line: 0, scope: !15415, inlinedAt: !17020)
!17020 = distinct !DILocation(line: 1437, column: 25, scope: !16994)
!17021 = !DILocation(line: 55, column: 2, scope: !15424, inlinedAt: !17022)
!17022 = distinct !DILocation(line: 145, column: 10, scope: !15415, inlinedAt: !17020)
!17023 = !DILocation(line: 0, scope: !15424, inlinedAt: !17022)
!17024 = !DILocation(line: 1440, column: 20, scope: !16994)
!17025 = !DILocation(line: 1440, column: 18, scope: !16994)
!17026 = !DILocation(line: 1442, column: 2, scope: !16994)
!17027 = !DILocation(line: 1443, column: 23, scope: !16994)
!17028 = !DILocation(line: 1443, column: 2, scope: !16994)
!17029 = !DILocation(line: 1444, column: 29, scope: !16994)
!17030 = !DILocation(line: 1444, column: 2, scope: !16994)
!17031 = !DILocation(line: 0, scope: !16026, inlinedAt: !17032)
!17032 = distinct !DILocation(line: 1446, column: 8, scope: !16994)
!17033 = !DILocation(line: 196, column: 9, scope: !16026, inlinedAt: !17032)
!17034 = !DILocation(line: 1450, column: 10, scope: !16994)
!17035 = !DILocation(line: 1450, column: 45, scope: !16994)
!17036 = !DILocation(line: 1450, column: 43, scope: !16994)
!17037 = !DILocation(line: 1451, column: 6, scope: !16994)
!17038 = !DILocation(line: 1457, column: 1, scope: !16994)
!17039 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !3835, file: !3835, line: 1103, type: !3836, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !17040)
!17040 = !{!17041}
!17041 = !DILocalVariable(name: "t", arg: 1, scope: !17039, file: !3835, line: 1103, type: !114)
!17042 = !DILocation(line: 0, scope: !17039)
!17043 = !DILocation(line: 0, scope: !15462, inlinedAt: !17044)
!17044 = distinct !DILocation(line: 1106, column: 9, scope: !17039)
!17045 = !DILocation(line: 139, column: 13, scope: !17046, inlinedAt: !17044)
!17046 = distinct !DILexicalBlock(scope: !17047, file: !3835, line: 138, column: 10)
!17047 = distinct !DILexicalBlock(scope: !17048, file: !3835, line: 136, column: 7)
!17048 = distinct !DILexicalBlock(scope: !15483, file: !3835, line: 134, column: 17)
!17049 = !DILocation(line: 1106, column: 2, scope: !17039)
!17050 = distinct !DISubprogram(name: "k_yield", scope: !3868, file: !3868, line: 140, type: !3472, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !437)
!17051 = !DILocation(line: 148, column: 2, scope: !17052)
!17052 = distinct !DILexicalBlock(scope: !17050, file: !3868, line: 148, column: 2)
!17053 = !{i64 2155121076}
!17054 = !DILocation(line: 149, column: 2, scope: !17050)
!17055 = !DILocation(line: 150, column: 1, scope: !17050)
!17056 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2739, file: !2739, line: 1495, type: !17057, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !17059)
!17057 = !DISubroutineType(types: !17058)
!17058 = !{!220, !108}
!17059 = !{!17060, !17061}
!17060 = !DILocalVariable(name: "us", arg: 1, scope: !17056, file: !2739, line: 1495, type: !108)
!17061 = !DILocalVariable(name: "ticks", scope: !17056, file: !2739, line: 1497, type: !220)
!17062 = !DILocation(line: 0, scope: !17056)
!17063 = !DILocation(line: 1501, column: 31, scope: !17056)
!17064 = !DILocation(line: 1501, column: 10, scope: !17056)
!17065 = !DILocation(line: 1502, column: 23, scope: !17056)
!17066 = !DILocation(line: 1502, column: 10, scope: !17056)
!17067 = !DILocation(line: 1506, column: 31, scope: !17056)
!17068 = !DILocation(line: 1506, column: 9, scope: !17056)
!17069 = !DILocation(line: 1506, column: 2, scope: !17056)
!17070 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !3835, file: !3835, line: 571, type: !3836, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !17071)
!17071 = !{!17072}
!17072 = !DILocalVariable(name: "t", arg: 1, scope: !17070, file: !3835, line: 571, type: !114)
!17073 = !DILocation(line: 0, scope: !17070)
!17074 = !DILocation(line: 0, scope: !15462, inlinedAt: !17075)
!17075 = distinct !DILocation(line: 574, column: 9, scope: !17070)
!17076 = !DILocation(line: 135, column: 5, scope: !17048, inlinedAt: !17075)
!17077 = !DILocation(line: 139, column: 13, scope: !17046, inlinedAt: !17075)
!17078 = !DILocation(line: 574, column: 2, scope: !17070)
!17079 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !3835, file: !3835, line: 1187, type: !3836, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !17080)
!17080 = !{!17081}
!17081 = !DILocalVariable(name: "t", arg: 1, scope: !17079, file: !3835, line: 1187, type: !114)
!17082 = !DILocation(line: 0, scope: !17079)
!17083 = !DILocation(line: 0, scope: !15462, inlinedAt: !17084)
!17084 = distinct !DILocation(line: 1190, column: 9, scope: !17079)
!17085 = !DILocation(line: 145, column: 13, scope: !17086, inlinedAt: !17084)
!17086 = distinct !DILexicalBlock(scope: !15480, file: !3835, line: 144, column: 10)
!17087 = !DILocation(line: 1190, column: 2, scope: !17079)
!17088 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2739, file: !2739, line: 1517, type: !16984, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !17089)
!17089 = !{!17090}
!17090 = !DILocalVariable(name: "thread", arg: 1, scope: !17088, file: !2739, line: 1517, type: !16890)
!17091 = !DILocation(line: 0, scope: !17088)
!17092 = !DILocation(line: 1521, column: 6, scope: !17093)
!17093 = distinct !DILexicalBlock(scope: !17088, file: !2739, line: 1521, column: 6)
!17094 = !DILocation(line: 1521, column: 6, scope: !17088)
!17095 = !DILocation(line: 1525, column: 6, scope: !17096)
!17096 = distinct !DILexicalBlock(scope: !17088, file: !2739, line: 1525, column: 6)
!17097 = !DILocation(line: 1525, column: 37, scope: !17096)
!17098 = !DILocation(line: 1525, column: 6, scope: !17088)
!17099 = !DILocation(line: 1527, column: 20, scope: !17100)
!17100 = distinct !DILexicalBlock(scope: !17101, file: !2739, line: 1527, column: 7)
!17101 = distinct !DILexicalBlock(scope: !17096, file: !2739, line: 1525, column: 42)
!17102 = !DILocation(line: 1527, column: 33, scope: !17100)
!17103 = !DILocation(line: 1527, column: 7, scope: !17101)
!17104 = !DILocation(line: 1532, column: 2, scope: !17088)
!17105 = !DILocation(line: 1533, column: 2, scope: !17088)
!17106 = !DILocation(line: 1031, column: 3, scope: !16059, inlinedAt: !17107)
!17107 = distinct !DILocation(line: 48, column: 10, scope: !16063, inlinedAt: !17108)
!17108 = distinct !DILocation(line: 1537, column: 7, scope: !17109)
!17109 = distinct !DILexicalBlock(scope: !17088, file: !2739, line: 1537, column: 6)
!17110 = !DILocation(line: 0, scope: !16059, inlinedAt: !17107)
!17111 = !DILocation(line: 48, column: 9, scope: !16063, inlinedAt: !17108)
!17112 = !DILocation(line: 1537, column: 6, scope: !17088)
!17113 = !DILocation(line: 1538, column: 3, scope: !17114)
!17114 = distinct !DILexicalBlock(scope: !17109, file: !2739, line: 1537, column: 25)
!17115 = !DILocation(line: 1539, column: 2, scope: !17114)
!17116 = !DILocation(line: 1540, column: 1, scope: !17088)
!17117 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !14692, file: !14692, line: 101, type: !15533, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !17118)
!17118 = !{!17119}
!17119 = !DILocalVariable(name: "thread", arg: 1, scope: !17117, file: !14692, line: 101, type: !2634)
!17120 = !DILocation(line: 0, scope: !17117)
!17121 = !DILocation(line: 103, column: 23, scope: !17117)
!17122 = !DILocation(line: 103, column: 36, scope: !17117)
!17123 = !DILocation(line: 103, column: 55, scope: !17117)
!17124 = !DILocation(line: 103, column: 2, scope: !17117)
!17125 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2739, file: !2739, line: 1567, type: !17126, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !17128)
!17126 = !DISubroutineType(types: !17127)
!17127 = !{!16890}
!17128 = !{!17129}
!17129 = !DILocalVariable(name: "ret", scope: !17125, file: !2739, line: 1577, type: !16890)
!17130 = !DILocation(line: 1577, column: 30, scope: !17125)
!17131 = !DILocation(line: 0, scope: !17125)
!17132 = !DILocation(line: 1582, column: 2, scope: !17125)
!17133 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2739, file: !2739, line: 1593, type: !8436, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !437)
!17134 = !DILocation(line: 1031, column: 3, scope: !16059, inlinedAt: !17135)
!17135 = distinct !DILocation(line: 48, column: 10, scope: !16063, inlinedAt: !17136)
!17136 = distinct !DILocation(line: 1595, column: 10, scope: !17133)
!17137 = !DILocation(line: 0, scope: !16059, inlinedAt: !17135)
!17138 = !DILocation(line: 48, column: 9, scope: !16063, inlinedAt: !17136)
!17139 = !DILocation(line: 1595, column: 27, scope: !17133)
!17140 = !DILocation(line: 1595, column: 41, scope: !17133)
!17141 = !DILocation(line: 1595, column: 30, scope: !17133)
!17142 = !DILocation(line: 1595, column: 2, scope: !17133)
!17143 = distinct !DISubprogram(name: "z_thread_abort", scope: !2739, file: !2739, line: 1725, type: !15373, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !17144)
!17144 = !{!17145, !17146}
!17145 = !DILocalVariable(name: "thread", arg: 1, scope: !17143, file: !2739, line: 1725, type: !2634)
!17146 = !DILocalVariable(name: "key", scope: !17143, file: !2739, line: 1727, type: !15407)
!17147 = !DILocation(line: 0, scope: !17143)
!17148 = !DILocation(line: 0, scope: !15415, inlinedAt: !17149)
!17149 = distinct !DILocation(line: 1727, column: 25, scope: !17143)
!17150 = !DILocation(line: 55, column: 2, scope: !15424, inlinedAt: !17151)
!17151 = distinct !DILocation(line: 145, column: 10, scope: !15415, inlinedAt: !17149)
!17152 = !DILocation(line: 0, scope: !15424, inlinedAt: !17151)
!17153 = !DILocation(line: 1729, column: 20, scope: !17154)
!17154 = distinct !DILexicalBlock(scope: !17143, file: !2739, line: 1729, column: 6)
!17155 = !DILocation(line: 1729, column: 33, scope: !17154)
!17156 = !DILocation(line: 1729, column: 48, scope: !17154)
!17157 = !DILocation(line: 1729, column: 6, scope: !17143)
!17158 = !DILocation(line: 0, scope: !15442, inlinedAt: !17159)
!17159 = distinct !DILocation(line: 1730, column: 3, scope: !17160)
!17160 = distinct !DILexicalBlock(scope: !17154, file: !2739, line: 1729, column: 54)
!17161 = !DILocation(line: 0, scope: !15450, inlinedAt: !17162)
!17162 = distinct !DILocation(line: 215, column: 2, scope: !15442, inlinedAt: !17159)
!17163 = !DILocation(line: 95, column: 2, scope: !15450, inlinedAt: !17162)
!17164 = !DILocation(line: 1732, column: 3, scope: !17165)
!17165 = distinct !DILexicalBlock(scope: !17160, file: !2739, line: 1732, column: 3)
!17166 = !{i64 2155857081, i64 2155857097, i64 2155857123, i64 2155857151, i64 2155857171}
!17167 = !DILocation(line: 1733, column: 3, scope: !17160)
!17168 = !DILocation(line: 1736, column: 20, scope: !17169)
!17169 = distinct !DILexicalBlock(scope: !17143, file: !2739, line: 1736, column: 6)
!17170 = !DILocation(line: 1736, column: 33, scope: !17169)
!17171 = !DILocation(line: 1736, column: 49, scope: !17169)
!17172 = !DILocation(line: 1736, column: 6, scope: !17143)
!17173 = !DILocation(line: 0, scope: !15442, inlinedAt: !17174)
!17174 = distinct !DILocation(line: 1737, column: 3, scope: !17175)
!17175 = distinct !DILexicalBlock(scope: !17169, file: !2739, line: 1736, column: 56)
!17176 = !DILocation(line: 0, scope: !15450, inlinedAt: !17177)
!17177 = distinct !DILocation(line: 215, column: 2, scope: !15442, inlinedAt: !17174)
!17178 = !DILocation(line: 95, column: 2, scope: !15450, inlinedAt: !17177)
!17179 = !DILocation(line: 1738, column: 3, scope: !17175)
!17180 = !DILocation(line: 1775, column: 2, scope: !17143)
!17181 = !DILocation(line: 1776, column: 16, scope: !17182)
!17182 = distinct !DILexicalBlock(scope: !17143, file: !2739, line: 1776, column: 6)
!17183 = !DILocation(line: 1776, column: 13, scope: !17182)
!17184 = !DILocation(line: 1776, column: 25, scope: !17182)
!17185 = !DILocation(line: 1031, column: 3, scope: !16059, inlinedAt: !17186)
!17186 = distinct !DILocation(line: 48, column: 10, scope: !16063, inlinedAt: !17187)
!17187 = distinct !DILocation(line: 1776, column: 29, scope: !17182)
!17188 = !DILocation(line: 0, scope: !16059, inlinedAt: !17186)
!17189 = !DILocation(line: 48, column: 9, scope: !16063, inlinedAt: !17187)
!17190 = !DILocation(line: 1776, column: 6, scope: !17143)
!17191 = !DILocation(line: 0, scope: !16026, inlinedAt: !17192)
!17192 = distinct !DILocation(line: 1777, column: 3, scope: !17193)
!17193 = distinct !DILexicalBlock(scope: !17182, file: !2739, line: 1776, column: 47)
!17194 = !DILocation(line: 196, column: 9, scope: !16026, inlinedAt: !17192)
!17195 = !DILocation(line: 1779, column: 2, scope: !17193)
!17196 = !DILocation(line: 0, scope: !15442, inlinedAt: !17197)
!17197 = distinct !DILocation(line: 1780, column: 2, scope: !17143)
!17198 = !DILocation(line: 0, scope: !15450, inlinedAt: !17199)
!17199 = distinct !DILocation(line: 215, column: 2, scope: !15442, inlinedAt: !17197)
!17200 = !DILocation(line: 95, column: 2, scope: !15450, inlinedAt: !17199)
!17201 = !DILocation(line: 1781, column: 1, scope: !17143)
!17202 = distinct !DISubprogram(name: "end_thread", scope: !2739, file: !2739, line: 1690, type: !15373, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !17203)
!17203 = !{!17204}
!17204 = !DILocalVariable(name: "thread", arg: 1, scope: !17202, file: !2739, line: 1690, type: !2634)
!17205 = !DILocation(line: 0, scope: !17202)
!17206 = !DILocation(line: 1695, column: 20, scope: !17207)
!17207 = distinct !DILexicalBlock(scope: !17202, file: !2739, line: 1695, column: 6)
!17208 = !DILocation(line: 1695, column: 33, scope: !17207)
!17209 = !DILocation(line: 1695, column: 49, scope: !17207)
!17210 = !DILocation(line: 1695, column: 6, scope: !17202)
!17211 = !DILocation(line: 1697, column: 29, scope: !17212)
!17212 = distinct !DILexicalBlock(scope: !17207, file: !2739, line: 1695, column: 56)
!17213 = !DILocation(line: 1698, column: 7, scope: !17214)
!17214 = distinct !DILexicalBlock(scope: !17212, file: !2739, line: 1698, column: 7)
!17215 = !DILocation(line: 1698, column: 7, scope: !17212)
!17216 = !DILocation(line: 0, scope: !15584, inlinedAt: !17217)
!17217 = distinct !DILocation(line: 1699, column: 4, scope: !17218)
!17218 = distinct !DILexicalBlock(scope: !17214, file: !2739, line: 1698, column: 35)
!17219 = !DILocation(line: 266, column: 28, scope: !15584, inlinedAt: !17217)
!17220 = !DILocation(line: 0, scope: !15592, inlinedAt: !17221)
!17221 = distinct !DILocation(line: 268, column: 3, scope: !15596, inlinedAt: !17217)
!17222 = !DILocation(line: 234, column: 2, scope: !15592, inlinedAt: !17221)
!17223 = !DILocation(line: 1700, column: 3, scope: !17218)
!17224 = !DILocation(line: 1701, column: 20, scope: !17225)
!17225 = distinct !DILexicalBlock(scope: !17212, file: !2739, line: 1701, column: 7)
!17226 = !DILocation(line: 1701, column: 30, scope: !17225)
!17227 = !DILocation(line: 1701, column: 7, scope: !17212)
!17228 = !DILocation(line: 1702, column: 4, scope: !17229)
!17229 = distinct !DILexicalBlock(scope: !17225, file: !2739, line: 1701, column: 39)
!17230 = !DILocation(line: 1703, column: 3, scope: !17229)
!17231 = !DILocation(line: 1704, column: 9, scope: !17212)
!17232 = !DILocation(line: 1705, column: 23, scope: !17212)
!17233 = !DILocation(line: 1705, column: 3, scope: !17212)
!17234 = !DILocation(line: 1706, column: 3, scope: !17212)
!17235 = !DILocation(line: 1722, column: 2, scope: !17212)
!17236 = !DILocation(line: 1723, column: 1, scope: !17202)
!17237 = distinct !DISubprogram(name: "unpend_all", scope: !2739, file: !2739, line: 1674, type: !17238, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !17240)
!17238 = !DISubroutineType(types: !17239)
!17239 = !{null, !2665}
!17240 = !{!17241, !17242}
!17241 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17237, file: !2739, line: 1674, type: !2665)
!17242 = !DILocalVariable(name: "thread", scope: !17237, file: !2739, line: 1676, type: !2634)
!17243 = !DILocation(line: 0, scope: !17237)
!17244 = !DILocation(line: 1678, column: 19, scope: !17237)
!17245 = !DILocation(line: 1678, column: 41, scope: !17237)
!17246 = !DILocation(line: 1678, column: 2, scope: !17237)
!17247 = !DILocation(line: 1679, column: 3, scope: !17248)
!17248 = distinct !DILexicalBlock(scope: !17237, file: !2739, line: 1678, column: 50)
!17249 = !DILocation(line: 1680, column: 9, scope: !17248)
!17250 = !DILocalVariable(name: "thread", arg: 1, scope: !17251, file: !14712, line: 65, type: !2634)
!17251 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !14712, file: !14712, line: 65, type: !17252, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !17254)
!17252 = !DISubroutineType(types: !17253)
!17253 = !{null, !2634, !32}
!17254 = !{!17250, !17255}
!17255 = !DILocalVariable(name: "value", arg: 2, scope: !17251, file: !14712, line: 65, type: !32)
!17256 = !DILocation(line: 0, scope: !17251, inlinedAt: !17257)
!17257 = distinct !DILocation(line: 1681, column: 3, scope: !17248)
!17258 = !DILocation(line: 67, column: 15, scope: !17251, inlinedAt: !17257)
!17259 = !DILocation(line: 67, column: 33, scope: !17251, inlinedAt: !17257)
!17260 = !DILocation(line: 1682, column: 3, scope: !17248)
!17261 = distinct !{!17261, !17246, !17262}
!17262 = !DILocation(line: 1683, column: 2, scope: !17237)
!17263 = !DILocation(line: 1684, column: 1, scope: !17237)
!17264 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2739, file: !2739, line: 1794, type: !17265, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !17267)
!17265 = !DISubroutineType(types: !17266)
!17266 = !{!108, !2634, !16206}
!17267 = !{!17268, !17269, !17270, !17271}
!17268 = !DILocalVariable(name: "thread", arg: 1, scope: !17264, file: !2739, line: 1794, type: !2634)
!17269 = !DILocalVariable(name: "timeout", arg: 2, scope: !17264, file: !2739, line: 1794, type: !16206)
!17270 = !DILocalVariable(name: "key", scope: !17264, file: !2739, line: 1796, type: !15407)
!17271 = !DILocalVariable(name: "ret", scope: !17264, file: !2739, line: 1797, type: !108)
!17272 = !DILocation(line: 0, scope: !17264)
!17273 = !DILocation(line: 0, scope: !15415, inlinedAt: !17274)
!17274 = distinct !DILocation(line: 1796, column: 25, scope: !17264)
!17275 = !DILocation(line: 55, column: 2, scope: !15424, inlinedAt: !17276)
!17276 = distinct !DILocation(line: 145, column: 10, scope: !15415, inlinedAt: !17274)
!17277 = !DILocation(line: 0, scope: !15424, inlinedAt: !17276)
!17278 = !DILocation(line: 1801, column: 20, scope: !17279)
!17279 = distinct !DILexicalBlock(scope: !17264, file: !2739, line: 1801, column: 6)
!17280 = !DILocation(line: 1801, column: 33, scope: !17279)
!17281 = !DILocation(line: 1801, column: 49, scope: !17279)
!17282 = !DILocation(line: 1801, column: 6, scope: !17264)
!17283 = !DILocation(line: 1803, column: 13, scope: !17284)
!17284 = distinct !DILexicalBlock(scope: !17279, file: !2739, line: 1803, column: 13)
!17285 = !DILocation(line: 1803, column: 13, scope: !17279)
!17286 = !DILocation(line: 1805, column: 24, scope: !17287)
!17287 = distinct !DILexicalBlock(scope: !17284, file: !2739, line: 1805, column: 13)
!17288 = !DILocation(line: 1805, column: 21, scope: !17287)
!17289 = !DILocation(line: 1805, column: 34, scope: !17287)
!17290 = !DILocation(line: 1806, column: 20, scope: !17287)
!17291 = !DILocation(line: 1806, column: 44, scope: !17287)
!17292 = !DILocation(line: 1806, column: 30, scope: !17287)
!17293 = !DILocation(line: 1805, column: 13, scope: !17284)
!17294 = !DILocation(line: 1810, column: 42, scope: !17295)
!17295 = distinct !DILexicalBlock(scope: !17287, file: !2739, line: 1808, column: 9)
!17296 = !DILocation(line: 1810, column: 3, scope: !17295)
!17297 = !DILocation(line: 1811, column: 22, scope: !17295)
!17298 = !DILocation(line: 1811, column: 3, scope: !17295)
!17299 = !DILocation(line: 0, scope: !16026, inlinedAt: !17300)
!17300 = distinct !DILocation(line: 1814, column: 9, scope: !17295)
!17301 = !DILocation(line: 196, column: 9, scope: !16026, inlinedAt: !17300)
!17302 = !DILocation(line: 1817, column: 3, scope: !17295)
!17303 = !DILocation(line: 0, scope: !17279)
!17304 = !DILocation(line: 0, scope: !15442, inlinedAt: !17305)
!17305 = distinct !DILocation(line: 1822, column: 2, scope: !17264)
!17306 = !DILocation(line: 0, scope: !15450, inlinedAt: !17307)
!17307 = distinct !DILocation(line: 215, column: 2, scope: !15442, inlinedAt: !17305)
!17308 = !DILocation(line: 95, column: 2, scope: !15450, inlinedAt: !17307)
!17309 = !DILocation(line: 1823, column: 2, scope: !17264)
!17310 = !DILocation(line: 1824, column: 1, scope: !17264)
!17311 = distinct !DISubprogram(name: "z_sched_wake", scope: !2739, file: !2739, line: 1882, type: !17312, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !17314)
!17312 = !DISubroutineType(types: !17313)
!17313 = !{!422, !2665, !108, !104}
!17314 = !{!17315, !17316, !17317, !17318, !17319, !17320, !17322}
!17315 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17311, file: !2739, line: 1882, type: !2665)
!17316 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !17311, file: !2739, line: 1882, type: !108)
!17317 = !DILocalVariable(name: "swap_data", arg: 3, scope: !17311, file: !2739, line: 1882, type: !104)
!17318 = !DILocalVariable(name: "thread", scope: !17311, file: !2739, line: 1884, type: !2634)
!17319 = !DILocalVariable(name: "ret", scope: !17311, file: !2739, line: 1885, type: !422)
!17320 = !DILocalVariable(name: "__i", scope: !17321, file: !2739, line: 1887, type: !15407)
!17321 = distinct !DILexicalBlock(scope: !17311, file: !2739, line: 1887, column: 2)
!17322 = !DILocalVariable(name: "__key", scope: !17321, file: !2739, line: 1887, type: !15407)
!17323 = !DILocation(line: 0, scope: !17311)
!17324 = !DILocation(line: 0, scope: !17321)
!17325 = !DILocation(line: 0, scope: !15415, inlinedAt: !17326)
!17326 = distinct !DILocation(line: 1887, column: 2, scope: !17321)
!17327 = !DILocation(line: 55, column: 2, scope: !15424, inlinedAt: !17328)
!17328 = distinct !DILocation(line: 145, column: 10, scope: !15415, inlinedAt: !17326)
!17329 = !DILocation(line: 0, scope: !15424, inlinedAt: !17328)
!17330 = !DILocation(line: 1888, column: 12, scope: !17331)
!17331 = distinct !DILexicalBlock(scope: !17332, file: !2739, line: 1887, column: 26)
!17332 = distinct !DILexicalBlock(scope: !17321, file: !2739, line: 1887, column: 2)
!17333 = !DILocation(line: 1890, column: 14, scope: !17334)
!17334 = distinct !DILexicalBlock(scope: !17331, file: !2739, line: 1890, column: 7)
!17335 = !DILocation(line: 1890, column: 7, scope: !17331)
!17336 = !DILocalVariable(name: "thread", arg: 1, scope: !17337, file: !17338, line: 134, type: !2634)
!17337 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !17338, file: !17338, line: 134, type: !17339, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !17341)
!17338 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17339 = !DISubroutineType(types: !17340)
!17340 = !{null, !2634, !32, !104}
!17341 = !{!17336, !17342, !17343}
!17342 = !DILocalVariable(name: "value", arg: 2, scope: !17337, file: !17338, line: 135, type: !32)
!17343 = !DILocalVariable(name: "data", arg: 3, scope: !17337, file: !17338, line: 136, type: !104)
!17344 = !DILocation(line: 0, scope: !17337, inlinedAt: !17345)
!17345 = distinct !DILocation(line: 1891, column: 4, scope: !17346)
!17346 = distinct !DILexicalBlock(scope: !17334, file: !2739, line: 1890, column: 23)
!17347 = !DILocation(line: 0, scope: !17251, inlinedAt: !17348)
!17348 = distinct !DILocation(line: 138, column: 2, scope: !17337, inlinedAt: !17345)
!17349 = !DILocation(line: 67, column: 15, scope: !17251, inlinedAt: !17348)
!17350 = !DILocation(line: 67, column: 33, scope: !17251, inlinedAt: !17348)
!17351 = !DILocation(line: 139, column: 15, scope: !17337, inlinedAt: !17345)
!17352 = !DILocation(line: 139, column: 25, scope: !17337, inlinedAt: !17345)
!17353 = !DILocation(line: 1894, column: 4, scope: !17346)
!17354 = !DILocation(line: 1895, column: 10, scope: !17346)
!17355 = !DILocation(line: 1896, column: 4, scope: !17346)
!17356 = !DILocation(line: 1898, column: 3, scope: !17346)
!17357 = !DILocation(line: 0, scope: !15442, inlinedAt: !17358)
!17358 = distinct !DILocation(line: 1887, column: 2, scope: !17332)
!17359 = !DILocation(line: 0, scope: !15450, inlinedAt: !17360)
!17360 = distinct !DILocation(line: 215, column: 2, scope: !15442, inlinedAt: !17358)
!17361 = !DILocation(line: 95, column: 2, scope: !15450, inlinedAt: !17360)
!17362 = !DILocation(line: 1901, column: 2, scope: !17311)
!17363 = distinct !DISubprogram(name: "z_sched_wait", scope: !2739, file: !2739, line: 1904, type: !17364, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !17367)
!17364 = !DISubroutineType(types: !17365)
!17365 = !{!108, !15418, !15407, !2665, !16206, !17366}
!17366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !104, size: 32)
!17367 = !{!17368, !17369, !17370, !17371, !17372, !17373}
!17368 = !DILocalVariable(name: "lock", arg: 1, scope: !17363, file: !2739, line: 1904, type: !15418)
!17369 = !DILocalVariable(name: "key", arg: 2, scope: !17363, file: !2739, line: 1904, type: !15407)
!17370 = !DILocalVariable(name: "wait_q", arg: 3, scope: !17363, file: !2739, line: 1905, type: !2665)
!17371 = !DILocalVariable(name: "timeout", arg: 4, scope: !17363, file: !2739, line: 1905, type: !16206)
!17372 = !DILocalVariable(name: "data", arg: 5, scope: !17363, file: !2739, line: 1905, type: !17366)
!17373 = !DILocalVariable(name: "ret", scope: !17363, file: !2739, line: 1907, type: !108)
!17374 = !DILocation(line: 0, scope: !17363)
!17375 = !DILocation(line: 1907, column: 12, scope: !17363)
!17376 = !DILocation(line: 1909, column: 11, scope: !17377)
!17377 = distinct !DILexicalBlock(scope: !17363, file: !2739, line: 1909, column: 6)
!17378 = !DILocation(line: 1909, column: 6, scope: !17363)
!17379 = !DILocation(line: 1910, column: 11, scope: !17380)
!17380 = distinct !DILexicalBlock(scope: !17377, file: !2739, line: 1909, column: 20)
!17381 = !DILocation(line: 1910, column: 26, scope: !17380)
!17382 = !DILocation(line: 1910, column: 9, scope: !17380)
!17383 = !DILocation(line: 1911, column: 2, scope: !17380)
!17384 = !DILocation(line: 1912, column: 2, scope: !17363)
!17385 = distinct !DISubprogram(name: "z_data_copy", scope: !17386, file: !17386, line: 22, type: !3472, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3455, retainedNodes: !437)
!17386 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17387 = !DILocation(line: 24, column: 2, scope: !17385)
!17388 = !DILocation(line: 27, column: 2, scope: !17385)
!17389 = !DILocation(line: 71, column: 1, scope: !17385)
!17390 = distinct !DISubprogram(name: "z_add_timeout", scope: !2776, file: !2776, line: 88, type: !17391, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2746, retainedNodes: !17397)
!17391 = !DISubroutineType(types: !17392)
!17392 = !{null, !2749, !2768, !17393}
!17393 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !110, line: 67, baseType: !17394)
!17394 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !110, line: 65, size: 64, elements: !17395)
!17395 = !{!17396}
!17396 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !17394, file: !110, line: 66, baseType: !109, size: 64)
!17397 = !{!17398, !17399, !17400, !17401, !17407, !17408, !17411, !17414}
!17398 = !DILocalVariable(name: "to", arg: 1, scope: !17390, file: !2776, line: 88, type: !2749)
!17399 = !DILocalVariable(name: "fn", arg: 2, scope: !17390, file: !2776, line: 88, type: !2768)
!17400 = !DILocalVariable(name: "timeout", arg: 3, scope: !17390, file: !2776, line: 89, type: !17393)
!17401 = !DILocalVariable(name: "__i", scope: !17402, file: !2776, line: 102, type: !17403)
!17402 = distinct !DILexicalBlock(scope: !17390, file: !2776, line: 102, column: 2)
!17403 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !436, line: 106, baseType: !17404)
!17404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !436, line: 32, size: 32, elements: !17405)
!17405 = !{!17406}
!17406 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !17404, file: !436, line: 33, baseType: !108, size: 32)
!17407 = !DILocalVariable(name: "__key", scope: !17402, file: !2776, line: 102, type: !17403)
!17408 = !DILocalVariable(name: "t", scope: !17409, file: !2776, line: 103, type: !2749)
!17409 = distinct !DILexicalBlock(scope: !17410, file: !2776, line: 102, column: 24)
!17410 = distinct !DILexicalBlock(scope: !17402, file: !2776, line: 102, column: 2)
!17411 = !DILocalVariable(name: "ticks", scope: !17412, file: !2776, line: 107, type: !109)
!17412 = distinct !DILexicalBlock(scope: !17413, file: !2776, line: 106, column: 39)
!17413 = distinct !DILexicalBlock(scope: !17409, file: !2776, line: 105, column: 7)
!17414 = !DILocalVariable(name: "next_time", scope: !17415, file: !2776, line: 137, type: !220)
!17415 = distinct !DILexicalBlock(scope: !17416, file: !2776, line: 127, column: 22)
!17416 = distinct !DILexicalBlock(scope: !17409, file: !2776, line: 127, column: 7)
!17417 = !DILocation(line: 0, scope: !17390)
!17418 = !DILocation(line: 91, column: 6, scope: !17419)
!17419 = distinct !DILexicalBlock(scope: !17390, file: !2776, line: 91, column: 6)
!17420 = !DILocation(line: 91, column: 6, scope: !17390)
!17421 = !DILocation(line: 100, column: 6, scope: !17390)
!17422 = !DILocation(line: 100, column: 9, scope: !17390)
!17423 = !DILocation(line: 0, scope: !17402)
!17424 = !DILocalVariable(name: "l", arg: 1, scope: !17425, file: !436, line: 136, type: !17428)
!17425 = distinct !DISubprogram(name: "k_spin_lock", scope: !436, file: !436, line: 136, type: !17426, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2746, retainedNodes: !17429)
!17426 = !DISubroutineType(types: !17427)
!17427 = !{!17403, !17428}
!17428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2777, size: 32)
!17429 = !{!17424, !17430}
!17430 = !DILocalVariable(name: "k", scope: !17425, file: !436, line: 139, type: !17403)
!17431 = !DILocation(line: 0, scope: !17425, inlinedAt: !17432)
!17432 = distinct !DILocation(line: 102, column: 2, scope: !17402)
!17433 = !DILocation(line: 55, column: 2, scope: !17434, inlinedAt: !17438)
!17434 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4146, file: !4146, line: 42, type: !4147, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2746, retainedNodes: !17435)
!17435 = !{!17436, !17437}
!17436 = !DILocalVariable(name: "key", scope: !17434, file: !4146, line: 44, type: !32)
!17437 = !DILocalVariable(name: "tmp", scope: !17434, file: !4146, line: 53, type: !32)
!17438 = distinct !DILocation(line: 145, column: 10, scope: !17425, inlinedAt: !17432)
!17439 = !{i64 2301251}
!17440 = !DILocation(line: 0, scope: !17434, inlinedAt: !17438)
!17441 = !DILocation(line: 106, column: 33, scope: !17413)
!17442 = !DILocation(line: 105, column: 7, scope: !17409)
!17443 = !DILocation(line: 107, column: 50, scope: !17412)
!17444 = !DILocation(line: 107, column: 48, scope: !17412)
!17445 = !DILocation(line: 0, scope: !17412)
!17446 = !DILocation(line: 109, column: 17, scope: !17412)
!17447 = !DILocation(line: 110, column: 3, scope: !17412)
!17448 = !DILocation(line: 111, column: 31, scope: !17449)
!17449 = distinct !DILexicalBlock(scope: !17413, file: !2776, line: 110, column: 10)
!17450 = !DILocation(line: 111, column: 37, scope: !17449)
!17451 = !DILocation(line: 111, column: 35, scope: !17449)
!17452 = !DILocation(line: 0, scope: !17413)
!17453 = !DILocation(line: 109, column: 8, scope: !17412)
!17454 = !DILocation(line: 109, column: 15, scope: !17412)
!17455 = !DILocation(line: 114, column: 12, scope: !17456)
!17456 = distinct !DILexicalBlock(scope: !17409, file: !2776, line: 114, column: 3)
!17457 = !DILocation(line: 0, scope: !17409)
!17458 = !DILocation(line: 114, column: 3, scope: !17456)
!17459 = !DILocation(line: 115, column: 24, scope: !17460)
!17460 = distinct !DILexicalBlock(scope: !17461, file: !2776, line: 115, column: 8)
!17461 = distinct !DILexicalBlock(scope: !17462, file: !2776, line: 114, column: 45)
!17462 = distinct !DILexicalBlock(scope: !17456, file: !2776, line: 114, column: 3)
!17463 = !DILocation(line: 115, column: 11, scope: !17460)
!17464 = !DILocation(line: 115, column: 18, scope: !17460)
!17465 = !DILocation(line: 115, column: 8, scope: !17461)
!17466 = !DILocation(line: 116, column: 15, scope: !17467)
!17467 = distinct !DILexicalBlock(scope: !17460, file: !2776, line: 115, column: 32)
!17468 = !DILocation(line: 117, column: 26, scope: !17467)
!17469 = !DILocation(line: 117, column: 37, scope: !17467)
!17470 = !DILocation(line: 117, column: 5, scope: !17467)
!17471 = !DILocation(line: 123, column: 7, scope: !17409)
!17472 = !DILocation(line: 120, column: 15, scope: !17461)
!17473 = !DILocation(line: 114, column: 36, scope: !17462)
!17474 = distinct !{!17474, !17458, !17475}
!17475 = !DILocation(line: 121, column: 3, scope: !17456)
!17476 = !DILocation(line: 124, column: 41, scope: !17477)
!17477 = distinct !DILexicalBlock(scope: !17478, file: !2776, line: 123, column: 18)
!17478 = distinct !DILexicalBlock(scope: !17409, file: !2776, line: 123, column: 7)
!17479 = !DILocation(line: 124, column: 4, scope: !17477)
!17480 = !DILocation(line: 125, column: 3, scope: !17477)
!17481 = !DILocation(line: 127, column: 13, scope: !17416)
!17482 = !DILocation(line: 127, column: 10, scope: !17416)
!17483 = !DILocation(line: 127, column: 7, scope: !17409)
!17484 = !DILocation(line: 137, column: 24, scope: !17415)
!17485 = !DILocation(line: 0, scope: !17415)
!17486 = !DILocation(line: 139, column: 18, scope: !17487)
!17487 = distinct !DILexicalBlock(scope: !17415, file: !2776, line: 139, column: 8)
!17488 = !DILocation(line: 139, column: 23, scope: !17487)
!17489 = !DILocation(line: 141, column: 5, scope: !17490)
!17490 = distinct !DILexicalBlock(scope: !17487, file: !2776, line: 140, column: 48)
!17491 = !DILocation(line: 142, column: 4, scope: !17490)
!17492 = !DILocalVariable(name: "key", arg: 2, scope: !17493, file: !436, line: 190, type: !17403)
!17493 = distinct !DISubprogram(name: "k_spin_unlock", scope: !436, file: !436, line: 189, type: !17494, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2746, retainedNodes: !17496)
!17494 = !DISubroutineType(types: !17495)
!17495 = !{null, !17428, !17403}
!17496 = !{!17497, !17492}
!17497 = !DILocalVariable(name: "l", arg: 1, scope: !17493, file: !436, line: 189, type: !17428)
!17498 = !DILocation(line: 0, scope: !17493, inlinedAt: !17499)
!17499 = distinct !DILocation(line: 102, column: 2, scope: !17410)
!17500 = !DILocalVariable(name: "key", arg: 1, scope: !17501, file: !4146, line: 84, type: !32)
!17501 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4146, file: !4146, line: 84, type: !4159, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2746, retainedNodes: !17502)
!17502 = !{!17500}
!17503 = !DILocation(line: 0, scope: !17501, inlinedAt: !17504)
!17504 = distinct !DILocation(line: 215, column: 2, scope: !17493, inlinedAt: !17499)
!17505 = !DILocation(line: 95, column: 2, scope: !17501, inlinedAt: !17504)
!17506 = !{i64 2302068}
!17507 = !DILocation(line: 148, column: 1, scope: !17390)
!17508 = distinct !DISubprogram(name: "elapsed", scope: !2776, file: !2776, line: 62, type: !17509, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2746, retainedNodes: !437)
!17509 = !DISubroutineType(types: !17510)
!17510 = !{!220}
!17511 = !DILocation(line: 64, column: 9, scope: !17508)
!17512 = !DILocation(line: 64, column: 28, scope: !17508)
!17513 = !DILocation(line: 64, column: 35, scope: !17508)
!17514 = !DILocation(line: 64, column: 2, scope: !17508)
!17515 = distinct !DISubprogram(name: "first", scope: !2776, file: !2776, line: 39, type: !17516, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2746, retainedNodes: !17518)
!17516 = !DISubroutineType(types: !17517)
!17517 = !{!2749}
!17518 = !{!17519}
!17519 = !DILocalVariable(name: "t", scope: !17515, file: !2776, line: 41, type: !17520)
!17520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2753, size: 32)
!17521 = !DILocation(line: 41, column: 19, scope: !17515)
!17522 = !DILocation(line: 0, scope: !17515)
!17523 = !DILocation(line: 43, column: 9, scope: !17515)
!17524 = !DILocation(line: 43, column: 2, scope: !17515)
!17525 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !367, file: !367, line: 443, type: !17526, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2746, retainedNodes: !17528)
!17526 = !DISubroutineType(types: !17527)
!17527 = !{null, !17520, !17520}
!17528 = !{!17529, !17530, !17531}
!17529 = !DILocalVariable(name: "successor", arg: 1, scope: !17525, file: !367, line: 443, type: !17520)
!17530 = !DILocalVariable(name: "node", arg: 2, scope: !17525, file: !367, line: 443, type: !17520)
!17531 = !DILocalVariable(name: "prev", scope: !17525, file: !367, line: 445, type: !17532)
!17532 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !17520)
!17533 = !DILocation(line: 0, scope: !17525)
!17534 = !DILocation(line: 445, column: 39, scope: !17525)
!17535 = !DILocation(line: 447, column: 8, scope: !17525)
!17536 = !DILocation(line: 447, column: 13, scope: !17525)
!17537 = !DILocation(line: 448, column: 8, scope: !17525)
!17538 = !DILocation(line: 448, column: 13, scope: !17525)
!17539 = !DILocation(line: 449, column: 8, scope: !17525)
!17540 = !DILocation(line: 449, column: 13, scope: !17525)
!17541 = !DILocation(line: 450, column: 18, scope: !17525)
!17542 = !DILocation(line: 451, column: 1, scope: !17525)
!17543 = distinct !DISubprogram(name: "next", scope: !2776, file: !2776, line: 46, type: !17544, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2746, retainedNodes: !17546)
!17544 = !DISubroutineType(types: !17545)
!17545 = !{!2749, !2749}
!17546 = !{!17547, !17548}
!17547 = !DILocalVariable(name: "t", arg: 1, scope: !17543, file: !2776, line: 46, type: !2749)
!17548 = !DILocalVariable(name: "n", scope: !17543, file: !2776, line: 48, type: !17520)
!17549 = !DILocation(line: 0, scope: !17543)
!17550 = !DILocation(line: 48, column: 58, scope: !17543)
!17551 = !DILocation(line: 48, column: 19, scope: !17543)
!17552 = !DILocation(line: 50, column: 9, scope: !17543)
!17553 = !DILocation(line: 50, column: 2, scope: !17543)
!17554 = distinct !DISubprogram(name: "sys_dlist_append", scope: !367, file: !367, line: 404, type: !17555, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2746, retainedNodes: !17558)
!17555 = !DISubroutineType(types: !17556)
!17556 = !{null, !17557, !17520}
!17557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2782, size: 32)
!17558 = !{!17559, !17560, !17561}
!17559 = !DILocalVariable(name: "list", arg: 1, scope: !17554, file: !367, line: 404, type: !17557)
!17560 = !DILocalVariable(name: "node", arg: 2, scope: !17554, file: !367, line: 404, type: !17520)
!17561 = !DILocalVariable(name: "tail", scope: !17554, file: !367, line: 406, type: !17532)
!17562 = !DILocation(line: 0, scope: !17554)
!17563 = !DILocation(line: 406, column: 34, scope: !17554)
!17564 = !DILocation(line: 408, column: 8, scope: !17554)
!17565 = !DILocation(line: 408, column: 13, scope: !17554)
!17566 = !DILocation(line: 409, column: 8, scope: !17554)
!17567 = !DILocation(line: 409, column: 13, scope: !17554)
!17568 = !DILocation(line: 411, column: 8, scope: !17554)
!17569 = !DILocation(line: 411, column: 13, scope: !17554)
!17570 = !DILocation(line: 412, column: 13, scope: !17554)
!17571 = !DILocation(line: 413, column: 1, scope: !17554)
!17572 = distinct !DISubprogram(name: "next_timeout", scope: !2776, file: !2776, line: 67, type: !17509, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2746, retainedNodes: !17573)
!17573 = !{!17574, !17575, !17576}
!17574 = !DILocalVariable(name: "to", scope: !17572, file: !2776, line: 69, type: !2749)
!17575 = !DILocalVariable(name: "ticks_elapsed", scope: !17572, file: !2776, line: 70, type: !220)
!17576 = !DILocalVariable(name: "ret", scope: !17572, file: !2776, line: 71, type: !220)
!17577 = !DILocation(line: 69, column: 24, scope: !17572)
!17578 = !DILocation(line: 0, scope: !17572)
!17579 = !DILocation(line: 70, column: 26, scope: !17572)
!17580 = !DILocation(line: 73, column: 10, scope: !17581)
!17581 = distinct !DILexicalBlock(scope: !17572, file: !2776, line: 73, column: 6)
!17582 = !DILocation(line: 73, column: 19, scope: !17581)
!17583 = !DILocation(line: 74, column: 21, scope: !17581)
!17584 = !DILocation(line: 74, column: 30, scope: !17581)
!17585 = !DILocation(line: 74, column: 28, scope: !17581)
!17586 = !DILocation(line: 74, column: 45, scope: !17581)
!17587 = !DILocation(line: 73, column: 6, scope: !17572)
!17588 = !DILocation(line: 77, column: 9, scope: !17589)
!17589 = distinct !DILexicalBlock(scope: !17581, file: !2776, line: 76, column: 9)
!17590 = !DILocation(line: 0, scope: !17581)
!17591 = !DILocation(line: 81, column: 20, scope: !17592)
!17592 = distinct !DILexicalBlock(scope: !17572, file: !2776, line: 81, column: 6)
!17593 = !DILocation(line: 81, column: 6, scope: !17592)
!17594 = !DILocation(line: 81, column: 32, scope: !17592)
!17595 = !DILocation(line: 85, column: 2, scope: !17572)
!17596 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !367, file: !367, line: 341, type: !17597, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2746, retainedNodes: !17599)
!17597 = !DISubroutineType(types: !17598)
!17598 = !{!17520, !17557, !17520}
!17599 = !{!17600, !17601}
!17600 = !DILocalVariable(name: "list", arg: 1, scope: !17596, file: !367, line: 341, type: !17557)
!17601 = !DILocalVariable(name: "node", arg: 2, scope: !17596, file: !367, line: 342, type: !17520)
!17602 = !DILocation(line: 0, scope: !17596)
!17603 = !DILocation(line: 344, column: 15, scope: !17596)
!17604 = !DILocation(line: 344, column: 9, scope: !17596)
!17605 = !DILocation(line: 344, column: 26, scope: !17596)
!17606 = !DILocation(line: 344, column: 2, scope: !17596)
!17607 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !367, file: !367, line: 325, type: !17597, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2746, retainedNodes: !17608)
!17608 = !{!17609, !17610}
!17609 = !DILocalVariable(name: "list", arg: 1, scope: !17607, file: !367, line: 325, type: !17557)
!17610 = !DILocalVariable(name: "node", arg: 2, scope: !17607, file: !367, line: 326, type: !17520)
!17611 = !DILocation(line: 0, scope: !17607)
!17612 = !DILocation(line: 328, column: 24, scope: !17607)
!17613 = !DILocation(line: 328, column: 15, scope: !17607)
!17614 = !DILocation(line: 328, column: 9, scope: !17607)
!17615 = !DILocation(line: 328, column: 45, scope: !17607)
!17616 = !DILocation(line: 328, column: 2, scope: !17607)
!17617 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !367, file: !367, line: 294, type: !17618, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2746, retainedNodes: !17620)
!17618 = !DISubroutineType(types: !17619)
!17619 = !{!17520, !17557}
!17620 = !{!17621}
!17621 = !DILocalVariable(name: "list", arg: 1, scope: !17617, file: !367, line: 294, type: !17557)
!17622 = !DILocation(line: 0, scope: !17617)
!17623 = !DILocation(line: 296, column: 9, scope: !17617)
!17624 = !DILocation(line: 296, column: 2, scope: !17617)
!17625 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !367, file: !367, line: 266, type: !17626, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2746, retainedNodes: !17628)
!17626 = !DISubroutineType(types: !17627)
!17627 = !{!422, !17557}
!17628 = !{!17629}
!17629 = !DILocalVariable(name: "list", arg: 1, scope: !17625, file: !367, line: 266, type: !17557)
!17630 = !DILocation(line: 0, scope: !17625)
!17631 = !DILocation(line: 268, column: 15, scope: !17625)
!17632 = !DILocation(line: 268, column: 20, scope: !17625)
!17633 = !DILocation(line: 268, column: 2, scope: !17625)
!17634 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2776, file: !2776, line: 150, type: !17635, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2746, retainedNodes: !17637)
!17635 = !DISubroutineType(types: !17636)
!17636 = !{!108, !2749}
!17637 = !{!17638, !17639, !17640, !17642}
!17638 = !DILocalVariable(name: "to", arg: 1, scope: !17634, file: !2776, line: 150, type: !2749)
!17639 = !DILocalVariable(name: "ret", scope: !17634, file: !2776, line: 152, type: !108)
!17640 = !DILocalVariable(name: "__i", scope: !17641, file: !2776, line: 154, type: !17403)
!17641 = distinct !DILexicalBlock(scope: !17634, file: !2776, line: 154, column: 2)
!17642 = !DILocalVariable(name: "__key", scope: !17641, file: !2776, line: 154, type: !17403)
!17643 = !DILocation(line: 0, scope: !17634)
!17644 = !DILocation(line: 0, scope: !17641)
!17645 = !DILocation(line: 0, scope: !17425, inlinedAt: !17646)
!17646 = distinct !DILocation(line: 154, column: 2, scope: !17641)
!17647 = !DILocation(line: 55, column: 2, scope: !17434, inlinedAt: !17648)
!17648 = distinct !DILocation(line: 145, column: 10, scope: !17425, inlinedAt: !17646)
!17649 = !DILocation(line: 0, scope: !17434, inlinedAt: !17648)
!17650 = !DILocation(line: 155, column: 7, scope: !17651)
!17651 = distinct !DILexicalBlock(scope: !17652, file: !2776, line: 155, column: 7)
!17652 = distinct !DILexicalBlock(scope: !17653, file: !2776, line: 154, column: 24)
!17653 = distinct !DILexicalBlock(scope: !17641, file: !2776, line: 154, column: 2)
!17654 = !DILocation(line: 155, column: 7, scope: !17652)
!17655 = !DILocation(line: 156, column: 4, scope: !17656)
!17656 = distinct !DILexicalBlock(scope: !17651, file: !2776, line: 155, column: 39)
!17657 = !DILocation(line: 158, column: 3, scope: !17656)
!17658 = !DILocation(line: 0, scope: !17493, inlinedAt: !17659)
!17659 = distinct !DILocation(line: 154, column: 2, scope: !17653)
!17660 = !DILocation(line: 0, scope: !17501, inlinedAt: !17661)
!17661 = distinct !DILocation(line: 215, column: 2, scope: !17493, inlinedAt: !17659)
!17662 = !DILocation(line: 95, column: 2, scope: !17501, inlinedAt: !17661)
!17663 = !DILocation(line: 161, column: 2, scope: !17634)
!17664 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !367, file: !367, line: 225, type: !17665, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2746, retainedNodes: !17669)
!17665 = !DISubroutineType(types: !17666)
!17666 = !{!422, !17667}
!17667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17668, size: 32)
!17668 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2753)
!17669 = !{!17670}
!17670 = !DILocalVariable(name: "node", arg: 1, scope: !17664, file: !367, line: 225, type: !17667)
!17671 = !DILocation(line: 0, scope: !17664)
!17672 = !DILocation(line: 227, column: 15, scope: !17664)
!17673 = !DILocation(line: 227, column: 20, scope: !17664)
!17674 = !DILocation(line: 227, column: 2, scope: !17664)
!17675 = distinct !DISubprogram(name: "remove_timeout", scope: !2776, file: !2776, line: 53, type: !2770, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2746, retainedNodes: !17676)
!17676 = !{!17677}
!17677 = !DILocalVariable(name: "t", arg: 1, scope: !17675, file: !2776, line: 53, type: !2749)
!17678 = !DILocation(line: 0, scope: !17675)
!17679 = !DILocation(line: 55, column: 6, scope: !17680)
!17680 = distinct !DILexicalBlock(scope: !17675, file: !2776, line: 55, column: 6)
!17681 = !DILocation(line: 55, column: 14, scope: !17680)
!17682 = !DILocation(line: 55, column: 6, scope: !17675)
!17683 = !DILocation(line: 56, column: 25, scope: !17684)
!17684 = distinct !DILexicalBlock(scope: !17680, file: !2776, line: 55, column: 23)
!17685 = !DILocation(line: 56, column: 12, scope: !17684)
!17686 = !DILocation(line: 56, column: 19, scope: !17684)
!17687 = !DILocation(line: 57, column: 2, scope: !17684)
!17688 = !DILocation(line: 59, column: 23, scope: !17675)
!17689 = !DILocation(line: 59, column: 2, scope: !17675)
!17690 = !DILocation(line: 60, column: 1, scope: !17675)
!17691 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !367, file: !367, line: 496, type: !17692, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2746, retainedNodes: !17694)
!17692 = !DISubroutineType(types: !17693)
!17693 = !{null, !17520}
!17694 = !{!17695, !17696, !17697}
!17695 = !DILocalVariable(name: "node", arg: 1, scope: !17691, file: !367, line: 496, type: !17520)
!17696 = !DILocalVariable(name: "prev", scope: !17691, file: !367, line: 498, type: !17532)
!17697 = !DILocalVariable(name: "next", scope: !17691, file: !367, line: 499, type: !17532)
!17698 = !DILocation(line: 0, scope: !17691)
!17699 = !DILocation(line: 498, column: 34, scope: !17691)
!17700 = !DILocation(line: 499, column: 34, scope: !17691)
!17701 = !DILocation(line: 501, column: 8, scope: !17691)
!17702 = !DILocation(line: 501, column: 13, scope: !17691)
!17703 = !DILocation(line: 502, column: 8, scope: !17691)
!17704 = !DILocation(line: 502, column: 13, scope: !17691)
!17705 = !DILocation(line: 503, column: 2, scope: !17691)
!17706 = !DILocation(line: 504, column: 1, scope: !17691)
!17707 = distinct !DISubprogram(name: "sys_dnode_init", scope: !367, file: !367, line: 211, type: !17692, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2746, retainedNodes: !17708)
!17708 = !{!17709}
!17709 = !DILocalVariable(name: "node", arg: 1, scope: !17707, file: !367, line: 211, type: !17520)
!17710 = !DILocation(line: 0, scope: !17707)
!17711 = !DILocation(line: 213, column: 8, scope: !17707)
!17712 = !DILocation(line: 213, column: 13, scope: !17707)
!17713 = !DILocation(line: 214, column: 8, scope: !17707)
!17714 = !DILocation(line: 214, column: 13, scope: !17707)
!17715 = !DILocation(line: 215, column: 1, scope: !17707)
!17716 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2776, file: !2776, line: 183, type: !17717, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2746, retainedNodes: !17721)
!17717 = !DISubroutineType(types: !17718)
!17718 = !{!109, !17719}
!17719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17720, size: 32)
!17720 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2750)
!17721 = !{!17722, !17723, !17724, !17726}
!17722 = !DILocalVariable(name: "timeout", arg: 1, scope: !17716, file: !2776, line: 183, type: !17719)
!17723 = !DILocalVariable(name: "ticks", scope: !17716, file: !2776, line: 185, type: !109)
!17724 = !DILocalVariable(name: "__i", scope: !17725, file: !2776, line: 187, type: !17403)
!17725 = distinct !DILexicalBlock(scope: !17716, file: !2776, line: 187, column: 2)
!17726 = !DILocalVariable(name: "__key", scope: !17725, file: !2776, line: 187, type: !17403)
!17727 = !DILocation(line: 0, scope: !17716)
!17728 = !DILocation(line: 0, scope: !17725)
!17729 = !DILocation(line: 0, scope: !17425, inlinedAt: !17730)
!17730 = distinct !DILocation(line: 187, column: 2, scope: !17725)
!17731 = !DILocation(line: 55, column: 2, scope: !17434, inlinedAt: !17732)
!17732 = distinct !DILocation(line: 145, column: 10, scope: !17425, inlinedAt: !17730)
!17733 = !DILocation(line: 0, scope: !17434, inlinedAt: !17732)
!17734 = !DILocation(line: 188, column: 11, scope: !17735)
!17735 = distinct !DILexicalBlock(scope: !17736, file: !2776, line: 187, column: 24)
!17736 = distinct !DILexicalBlock(scope: !17725, file: !2776, line: 187, column: 2)
!17737 = !DILocation(line: 0, scope: !17493, inlinedAt: !17738)
!17738 = distinct !DILocation(line: 187, column: 2, scope: !17736)
!17739 = !DILocation(line: 0, scope: !17501, inlinedAt: !17740)
!17740 = distinct !DILocation(line: 215, column: 2, scope: !17493, inlinedAt: !17738)
!17741 = !DILocation(line: 95, column: 2, scope: !17501, inlinedAt: !17740)
!17742 = !DILocation(line: 191, column: 2, scope: !17716)
!17743 = distinct !DISubprogram(name: "timeout_rem", scope: !2776, file: !2776, line: 165, type: !17717, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2746, retainedNodes: !17744)
!17744 = !{!17745, !17746, !17747}
!17745 = !DILocalVariable(name: "timeout", arg: 1, scope: !17743, file: !2776, line: 165, type: !17719)
!17746 = !DILocalVariable(name: "ticks", scope: !17743, file: !2776, line: 167, type: !109)
!17747 = !DILocalVariable(name: "t", scope: !17748, file: !2776, line: 173, type: !2749)
!17748 = distinct !DILexicalBlock(scope: !17743, file: !2776, line: 173, column: 2)
!17749 = !DILocation(line: 0, scope: !17743)
!17750 = !DILocation(line: 169, column: 6, scope: !17751)
!17751 = distinct !DILexicalBlock(scope: !17743, file: !2776, line: 169, column: 6)
!17752 = !DILocation(line: 169, column: 6, scope: !17743)
!17753 = !DILocation(line: 173, column: 28, scope: !17748)
!17754 = !DILocation(line: 0, scope: !17748)
!17755 = !DILocation(line: 173, column: 39, scope: !17756)
!17756 = distinct !DILexicalBlock(scope: !17748, file: !2776, line: 173, column: 2)
!17757 = !DILocation(line: 173, column: 2, scope: !17748)
!17758 = !DILocation(line: 174, column: 15, scope: !17759)
!17759 = distinct !DILexicalBlock(scope: !17756, file: !2776, line: 173, column: 61)
!17760 = !DILocation(line: 174, column: 9, scope: !17759)
!17761 = !DILocation(line: 175, column: 15, scope: !17762)
!17762 = distinct !DILexicalBlock(scope: !17759, file: !2776, line: 175, column: 7)
!17763 = !DILocation(line: 175, column: 7, scope: !17759)
!17764 = !DILocation(line: 173, column: 52, scope: !17756)
!17765 = distinct !{!17765, !17757, !17766}
!17766 = !DILocation(line: 178, column: 2, scope: !17748)
!17767 = !DILocation(line: 180, column: 17, scope: !17743)
!17768 = !DILocation(line: 180, column: 15, scope: !17743)
!17769 = !DILocation(line: 180, column: 2, scope: !17743)
!17770 = !DILocation(line: 181, column: 1, scope: !17743)
!17771 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !15086, file: !15086, line: 35, type: !17772, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2746, retainedNodes: !17774)
!17772 = !DISubroutineType(types: !17773)
!17773 = !{!422, !17719}
!17774 = !{!17775}
!17775 = !DILocalVariable(name: "to", arg: 1, scope: !17771, file: !15086, line: 35, type: !17719)
!17776 = !DILocation(line: 0, scope: !17771)
!17777 = !DILocation(line: 37, column: 35, scope: !17771)
!17778 = !DILocation(line: 37, column: 10, scope: !17771)
!17779 = !DILocation(line: 37, column: 9, scope: !17771)
!17780 = !DILocation(line: 37, column: 2, scope: !17771)
!17781 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2776, file: !2776, line: 194, type: !17717, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2746, retainedNodes: !17782)
!17782 = !{!17783, !17784, !17785, !17787}
!17783 = !DILocalVariable(name: "timeout", arg: 1, scope: !17781, file: !2776, line: 194, type: !17719)
!17784 = !DILocalVariable(name: "ticks", scope: !17781, file: !2776, line: 196, type: !109)
!17785 = !DILocalVariable(name: "__i", scope: !17786, file: !2776, line: 198, type: !17403)
!17786 = distinct !DILexicalBlock(scope: !17781, file: !2776, line: 198, column: 2)
!17787 = !DILocalVariable(name: "__key", scope: !17786, file: !2776, line: 198, type: !17403)
!17788 = !DILocation(line: 0, scope: !17781)
!17789 = !DILocation(line: 0, scope: !17786)
!17790 = !DILocation(line: 0, scope: !17425, inlinedAt: !17791)
!17791 = distinct !DILocation(line: 198, column: 2, scope: !17786)
!17792 = !DILocation(line: 55, column: 2, scope: !17434, inlinedAt: !17793)
!17793 = distinct !DILocation(line: 145, column: 10, scope: !17425, inlinedAt: !17791)
!17794 = !DILocation(line: 0, scope: !17434, inlinedAt: !17793)
!17795 = !DILocation(line: 199, column: 11, scope: !17796)
!17796 = distinct !DILexicalBlock(scope: !17797, file: !2776, line: 198, column: 24)
!17797 = distinct !DILexicalBlock(scope: !17786, file: !2776, line: 198, column: 2)
!17798 = !DILocation(line: 199, column: 23, scope: !17796)
!17799 = !DILocation(line: 0, scope: !17493, inlinedAt: !17800)
!17800 = distinct !DILocation(line: 198, column: 2, scope: !17797)
!17801 = !DILocation(line: 0, scope: !17501, inlinedAt: !17802)
!17802 = distinct !DILocation(line: 215, column: 2, scope: !17493, inlinedAt: !17800)
!17803 = !DILocation(line: 95, column: 2, scope: !17501, inlinedAt: !17802)
!17804 = !DILocation(line: 199, column: 21, scope: !17796)
!17805 = !DILocation(line: 202, column: 2, scope: !17781)
!17806 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2776, file: !2776, line: 205, type: !17509, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2746, retainedNodes: !17807)
!17807 = !{!17808, !17809, !17811}
!17808 = !DILocalVariable(name: "ret", scope: !17806, file: !2776, line: 207, type: !220)
!17809 = !DILocalVariable(name: "__i", scope: !17810, file: !2776, line: 209, type: !17403)
!17810 = distinct !DILexicalBlock(scope: !17806, file: !2776, line: 209, column: 2)
!17811 = !DILocalVariable(name: "__key", scope: !17810, file: !2776, line: 209, type: !17403)
!17812 = !DILocation(line: 0, scope: !17806)
!17813 = !DILocation(line: 0, scope: !17810)
!17814 = !DILocation(line: 0, scope: !17425, inlinedAt: !17815)
!17815 = distinct !DILocation(line: 209, column: 2, scope: !17810)
!17816 = !DILocation(line: 55, column: 2, scope: !17434, inlinedAt: !17817)
!17817 = distinct !DILocation(line: 145, column: 10, scope: !17425, inlinedAt: !17815)
!17818 = !DILocation(line: 0, scope: !17434, inlinedAt: !17817)
!17819 = !DILocation(line: 210, column: 9, scope: !17820)
!17820 = distinct !DILexicalBlock(scope: !17821, file: !2776, line: 209, column: 24)
!17821 = distinct !DILexicalBlock(scope: !17810, file: !2776, line: 209, column: 2)
!17822 = !DILocation(line: 0, scope: !17493, inlinedAt: !17823)
!17823 = distinct !DILocation(line: 209, column: 2, scope: !17821)
!17824 = !DILocation(line: 0, scope: !17501, inlinedAt: !17825)
!17825 = distinct !DILocation(line: 215, column: 2, scope: !17493, inlinedAt: !17823)
!17826 = !DILocation(line: 95, column: 2, scope: !17501, inlinedAt: !17825)
!17827 = !DILocation(line: 212, column: 2, scope: !17806)
!17828 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2776, file: !2776, line: 215, type: !12050, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2746, retainedNodes: !17829)
!17829 = !{!17830, !17831, !17832, !17834, !17835, !17838, !17839}
!17830 = !DILocalVariable(name: "ticks", arg: 1, scope: !17828, file: !2776, line: 215, type: !220)
!17831 = !DILocalVariable(name: "is_idle", arg: 2, scope: !17828, file: !2776, line: 215, type: !422)
!17832 = !DILocalVariable(name: "__i", scope: !17833, file: !2776, line: 217, type: !17403)
!17833 = distinct !DILexicalBlock(scope: !17828, file: !2776, line: 217, column: 2)
!17834 = !DILocalVariable(name: "__key", scope: !17833, file: !2776, line: 217, type: !17403)
!17835 = !DILocalVariable(name: "next_to", scope: !17836, file: !2776, line: 218, type: !108)
!17836 = distinct !DILexicalBlock(scope: !17837, file: !2776, line: 217, column: 24)
!17837 = distinct !DILexicalBlock(scope: !17833, file: !2776, line: 217, column: 2)
!17838 = !DILocalVariable(name: "sooner", scope: !17836, file: !2776, line: 219, type: !422)
!17839 = !DILocalVariable(name: "imminent", scope: !17836, file: !2776, line: 221, type: !422)
!17840 = !DILocation(line: 0, scope: !17828)
!17841 = !DILocation(line: 0, scope: !17833)
!17842 = !DILocation(line: 0, scope: !17425, inlinedAt: !17843)
!17843 = distinct !DILocation(line: 217, column: 2, scope: !17833)
!17844 = !DILocation(line: 55, column: 2, scope: !17434, inlinedAt: !17845)
!17845 = distinct !DILocation(line: 145, column: 10, scope: !17425, inlinedAt: !17843)
!17846 = !DILocation(line: 0, scope: !17434, inlinedAt: !17845)
!17847 = !DILocation(line: 218, column: 17, scope: !17836)
!17848 = !DILocation(line: 0, scope: !17836)
!17849 = !DILocation(line: 221, column: 27, scope: !17836)
!17850 = !DILocation(line: 233, column: 17, scope: !17851)
!17851 = distinct !DILexicalBlock(scope: !17836, file: !2776, line: 233, column: 7)
!17852 = !DILocation(line: 234, column: 26, scope: !17853)
!17853 = distinct !DILexicalBlock(scope: !17851, file: !2776, line: 233, column: 56)
!17854 = !DILocation(line: 234, column: 4, scope: !17853)
!17855 = !DILocation(line: 235, column: 3, scope: !17853)
!17856 = !DILocation(line: 0, scope: !17493, inlinedAt: !17857)
!17857 = distinct !DILocation(line: 217, column: 2, scope: !17837)
!17858 = !DILocation(line: 0, scope: !17501, inlinedAt: !17859)
!17859 = distinct !DILocation(line: 215, column: 2, scope: !17493, inlinedAt: !17857)
!17860 = !DILocation(line: 95, column: 2, scope: !17501, inlinedAt: !17859)
!17861 = !DILocation(line: 237, column: 1, scope: !17828)
!17862 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2776, file: !2776, line: 239, type: !17863, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2746, retainedNodes: !17865)
!17863 = !DISubroutineType(types: !17864)
!17864 = !{null, !220}
!17865 = !{!17866, !17867, !17868, !17870}
!17866 = !DILocalVariable(name: "ticks", arg: 1, scope: !17862, file: !2776, line: 239, type: !220)
!17867 = !DILocalVariable(name: "key", scope: !17862, file: !2776, line: 245, type: !17403)
!17868 = !DILocalVariable(name: "t", scope: !17869, file: !2776, line: 262, type: !2749)
!17869 = distinct !DILexicalBlock(scope: !17862, file: !2776, line: 261, column: 67)
!17870 = !DILocalVariable(name: "dt", scope: !17869, file: !2776, line: 263, type: !108)
!17871 = !DILocation(line: 0, scope: !17862)
!17872 = !DILocation(line: 242, column: 2, scope: !17862)
!17873 = !DILocation(line: 0, scope: !17425, inlinedAt: !17874)
!17874 = distinct !DILocation(line: 245, column: 25, scope: !17862)
!17875 = !DILocation(line: 55, column: 2, scope: !17434, inlinedAt: !17876)
!17876 = distinct !DILocation(line: 145, column: 10, scope: !17425, inlinedAt: !17874)
!17877 = !DILocation(line: 0, scope: !17434, inlinedAt: !17876)
!17878 = !DILocation(line: 261, column: 9, scope: !17862)
!17879 = !DILocation(line: 261, column: 17, scope: !17862)
!17880 = !DILocation(line: 261, column: 25, scope: !17862)
!17881 = !DILocation(line: 261, column: 37, scope: !17862)
!17882 = !DILocation(line: 261, column: 47, scope: !17862)
!17883 = !DILocation(line: 261, column: 44, scope: !17862)
!17884 = !DILocation(line: 261, column: 2, scope: !17862)
!17885 = !DILocation(line: 0, scope: !17869)
!17886 = !DILocation(line: 263, column: 12, scope: !17869)
!17887 = !DILocation(line: 265, column: 16, scope: !17869)
!17888 = !DILocation(line: 265, column: 13, scope: !17869)
!17889 = !DILocation(line: 266, column: 13, scope: !17869)
!17890 = !DILocation(line: 267, column: 3, scope: !17869)
!17891 = !DILocation(line: 0, scope: !17493, inlinedAt: !17892)
!17892 = distinct !DILocation(line: 269, column: 3, scope: !17869)
!17893 = !DILocation(line: 0, scope: !17501, inlinedAt: !17894)
!17894 = distinct !DILocation(line: 215, column: 2, scope: !17493, inlinedAt: !17892)
!17895 = !DILocation(line: 95, column: 2, scope: !17501, inlinedAt: !17894)
!17896 = !DILocation(line: 270, column: 6, scope: !17869)
!17897 = !DILocation(line: 270, column: 3, scope: !17869)
!17898 = !DILocation(line: 0, scope: !17425, inlinedAt: !17899)
!17899 = distinct !DILocation(line: 271, column: 9, scope: !17869)
!17900 = !DILocation(line: 55, column: 2, scope: !17434, inlinedAt: !17901)
!17901 = distinct !DILocation(line: 145, column: 10, scope: !17425, inlinedAt: !17899)
!17902 = !DILocation(line: 0, scope: !17434, inlinedAt: !17901)
!17903 = !DILocation(line: 272, column: 22, scope: !17869)
!17904 = distinct !{!17904, !17884, !17905}
!17905 = !DILocation(line: 273, column: 2, scope: !17862)
!17906 = !DILocation(line: 276, column: 19, scope: !17907)
!17907 = distinct !DILexicalBlock(scope: !17908, file: !2776, line: 275, column: 23)
!17908 = distinct !DILexicalBlock(scope: !17862, file: !2776, line: 275, column: 6)
!17909 = !DILocation(line: 277, column: 2, scope: !17907)
!17910 = !DILocation(line: 279, column: 15, scope: !17862)
!17911 = !DILocation(line: 279, column: 12, scope: !17862)
!17912 = !DILocation(line: 280, column: 21, scope: !17862)
!17913 = !DILocation(line: 282, column: 24, scope: !17862)
!17914 = !DILocation(line: 282, column: 2, scope: !17862)
!17915 = !DILocation(line: 0, scope: !17493, inlinedAt: !17916)
!17916 = distinct !DILocation(line: 284, column: 2, scope: !17862)
!17917 = !DILocation(line: 0, scope: !17501, inlinedAt: !17918)
!17918 = distinct !DILocation(line: 215, column: 2, scope: !17493, inlinedAt: !17916)
!17919 = !DILocation(line: 95, column: 2, scope: !17501, inlinedAt: !17918)
!17920 = !DILocation(line: 285, column: 1, scope: !17862)
!17921 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2776, file: !2776, line: 287, type: !17922, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2746, retainedNodes: !17924)
!17922 = !DISubroutineType(types: !17923)
!17923 = !{!111}
!17924 = !{!17925, !17926, !17928}
!17925 = !DILocalVariable(name: "t", scope: !17921, file: !2776, line: 289, type: !114)
!17926 = !DILocalVariable(name: "__i", scope: !17927, file: !2776, line: 291, type: !17403)
!17927 = distinct !DILexicalBlock(scope: !17921, file: !2776, line: 291, column: 2)
!17928 = !DILocalVariable(name: "__key", scope: !17927, file: !2776, line: 291, type: !17403)
!17929 = !DILocation(line: 0, scope: !17921)
!17930 = !DILocation(line: 0, scope: !17927)
!17931 = !DILocation(line: 0, scope: !17425, inlinedAt: !17932)
!17932 = distinct !DILocation(line: 291, column: 2, scope: !17927)
!17933 = !DILocation(line: 55, column: 2, scope: !17434, inlinedAt: !17934)
!17934 = distinct !DILocation(line: 145, column: 10, scope: !17425, inlinedAt: !17932)
!17935 = !DILocation(line: 0, scope: !17434, inlinedAt: !17934)
!17936 = !DILocation(line: 292, column: 7, scope: !17937)
!17937 = distinct !DILexicalBlock(scope: !17938, file: !2776, line: 291, column: 24)
!17938 = distinct !DILexicalBlock(scope: !17927, file: !2776, line: 291, column: 2)
!17939 = !DILocation(line: 292, column: 19, scope: !17937)
!17940 = !DILocation(line: 0, scope: !17493, inlinedAt: !17941)
!17941 = distinct !DILocation(line: 291, column: 2, scope: !17938)
!17942 = !DILocation(line: 0, scope: !17501, inlinedAt: !17943)
!17943 = distinct !DILocation(line: 215, column: 2, scope: !17493, inlinedAt: !17941)
!17944 = !DILocation(line: 95, column: 2, scope: !17501, inlinedAt: !17943)
!17945 = !DILocation(line: 292, column: 17, scope: !17937)
!17946 = !DILocation(line: 294, column: 2, scope: !17921)
!17947 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2776, file: !2776, line: 297, type: !7209, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2746, retainedNodes: !437)
!17948 = !DILocation(line: 300, column: 19, scope: !17947)
!17949 = !DILocation(line: 300, column: 9, scope: !17947)
!17950 = !DILocation(line: 300, column: 2, scope: !17947)
!17951 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2776, file: !2776, line: 306, type: !17922, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2746, retainedNodes: !437)
!17952 = !DILocation(line: 308, column: 9, scope: !17951)
!17953 = !DILocation(line: 308, column: 2, scope: !17951)
!17954 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2776, file: !2776, line: 319, type: !7219, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2746, retainedNodes: !17955)
!17955 = !{!17956, !17957, !17958, !17959}
!17956 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !17954, file: !2776, line: 319, type: !113)
!17957 = !DILocalVariable(name: "start_cycles", scope: !17954, file: !2776, line: 328, type: !113)
!17958 = !DILocalVariable(name: "cycles_to_wait", scope: !17954, file: !2776, line: 331, type: !113)
!17959 = !DILocalVariable(name: "current_cycles", scope: !17960, file: !2776, line: 338, type: !113)
!17960 = distinct !DILexicalBlock(scope: !17961, file: !2776, line: 337, column: 11)
!17961 = distinct !DILexicalBlock(scope: !17962, file: !2776, line: 337, column: 2)
!17962 = distinct !DILexicalBlock(scope: !17954, file: !2776, line: 337, column: 2)
!17963 = !DILocation(line: 0, scope: !17954)
!17964 = !DILocation(line: 322, column: 19, scope: !17965)
!17965 = distinct !DILexicalBlock(scope: !17954, file: !2776, line: 322, column: 6)
!17966 = !DILocation(line: 322, column: 6, scope: !17954)
!17967 = !DILocation(line: 328, column: 26, scope: !17954)
!17968 = !DILocation(line: 333, column: 43, scope: !17954)
!17969 = !DILocation(line: 337, column: 2, scope: !17954)
!17970 = !DILocation(line: 338, column: 29, scope: !17960)
!17971 = !DILocation(line: 0, scope: !17960)
!17972 = !DILocation(line: 341, column: 23, scope: !17973)
!17973 = distinct !DILexicalBlock(scope: !17960, file: !2776, line: 341, column: 7)
!17974 = !DILocation(line: 341, column: 39, scope: !17973)
!17975 = !DILocation(line: 349, column: 1, scope: !17954)
!17976 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !359, file: !359, line: 1675, type: !7209, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2746, retainedNodes: !437)
!17977 = !DILocation(line: 1677, column: 9, scope: !17976)
!17978 = !DILocation(line: 1677, column: 2, scope: !17976)
!17979 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !17980, file: !17980, line: 24, type: !7209, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2746, retainedNodes: !437)
!17980 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17981 = !DILocation(line: 26, column: 9, scope: !17979)
!17982 = !DILocation(line: 26, column: 2, scope: !17979)
!17983 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2776, file: !2776, line: 364, type: !17984, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2746, retainedNodes: !17986)
!17984 = !DISubroutineType(types: !17985)
!17985 = !{!114, !17393}
!17986 = !{!17987, !17988}
!17987 = !DILocalVariable(name: "timeout", arg: 1, scope: !17983, file: !2776, line: 364, type: !17393)
!17988 = !DILocalVariable(name: "dt", scope: !17983, file: !2776, line: 366, type: !109)
!17989 = !DILocation(line: 0, scope: !17983)
!17990 = !DILocation(line: 368, column: 6, scope: !17983)
!17991 = !DILocation(line: 371, column: 10, scope: !17992)
!17992 = distinct !DILexicalBlock(scope: !17993, file: !2776, line: 370, column: 47)
!17993 = distinct !DILexicalBlock(scope: !17994, file: !2776, line: 370, column: 13)
!17994 = distinct !DILexicalBlock(scope: !17983, file: !2776, line: 368, column: 6)
!17995 = !DILocation(line: 371, column: 3, scope: !17992)
!17996 = !DILocation(line: 376, column: 58, scope: !17997)
!17997 = distinct !DILexicalBlock(scope: !17998, file: !2776, line: 376, column: 7)
!17998 = distinct !DILexicalBlock(scope: !17993, file: !2776, line: 372, column: 9)
!17999 = !DILocation(line: 376, column: 7, scope: !17998)
!18000 = !DILocation(line: 376, column: 43, scope: !17997)
!18001 = !DILocation(line: 377, column: 4, scope: !18002)
!18002 = distinct !DILexicalBlock(scope: !17997, file: !2776, line: 376, column: 64)
!18003 = !DILocation(line: 379, column: 10, scope: !17998)
!18004 = !DILocation(line: 379, column: 33, scope: !17998)
!18005 = !DILocation(line: 379, column: 31, scope: !17998)
!18006 = !DILocation(line: 379, column: 3, scope: !17998)
!18007 = !DILocation(line: 0, scope: !17994)
!18008 = !DILocation(line: 381, column: 1, scope: !17983)
!18009 = distinct !DISubprogram(name: "z_timer_expiration_handler", scope: !2907, file: !2907, line: 23, type: !2812, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2785, retainedNodes: !18010)
!18010 = !{!18011, !18012, !18013, !18014, !18019}
!18011 = !DILocalVariable(name: "t", arg: 1, scope: !18009, file: !2907, line: 23, type: !2814)
!18012 = !DILocalVariable(name: "timer", scope: !18009, file: !2907, line: 25, type: !2788)
!18013 = !DILocalVariable(name: "thread", scope: !18009, file: !2907, line: 26, type: !2834)
!18014 = !DILocalVariable(name: "key", scope: !18009, file: !2907, line: 27, type: !18015)
!18015 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !436, line: 106, baseType: !18016)
!18016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !436, line: 32, size: 32, elements: !18017)
!18017 = !{!18018}
!18018 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !18016, file: !436, line: 33, baseType: !108, size: 32)
!18019 = !DILocalVariable(name: "next", scope: !18020, file: !2907, line: 35, type: !2828)
!18020 = distinct !DILexicalBlock(scope: !18021, file: !2907, line: 34, column: 47)
!18021 = distinct !DILexicalBlock(scope: !18009, file: !2907, line: 33, column: 6)
!18022 = !DILocation(line: 0, scope: !18009)
!18023 = !DILocation(line: 25, column: 26, scope: !18009)
!18024 = !DILocalVariable(name: "l", arg: 1, scope: !18025, file: !436, line: 136, type: !18028)
!18025 = distinct !DISubprogram(name: "k_spin_lock", scope: !436, file: !436, line: 136, type: !18026, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2785, retainedNodes: !18029)
!18026 = !DISubroutineType(types: !18027)
!18027 = !{!18015, !18028}
!18028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2899, size: 32)
!18029 = !{!18024, !18030}
!18030 = !DILocalVariable(name: "k", scope: !18025, file: !436, line: 139, type: !18015)
!18031 = !DILocation(line: 0, scope: !18025, inlinedAt: !18032)
!18032 = distinct !DILocation(line: 27, column: 25, scope: !18009)
!18033 = !DILocation(line: 55, column: 2, scope: !18034, inlinedAt: !18038)
!18034 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4146, file: !4146, line: 42, type: !4147, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2785, retainedNodes: !18035)
!18035 = !{!18036, !18037}
!18036 = !DILocalVariable(name: "key", scope: !18034, file: !4146, line: 44, type: !32)
!18037 = !DILocalVariable(name: "tmp", scope: !18034, file: !4146, line: 53, type: !32)
!18038 = distinct !DILocation(line: 145, column: 10, scope: !18025, inlinedAt: !18032)
!18039 = !{i64 2300302}
!18040 = !DILocation(line: 0, scope: !18034, inlinedAt: !18038)
!18041 = !DILocation(line: 33, column: 7, scope: !18021)
!18042 = !DILocation(line: 33, column: 46, scope: !18021)
!18043 = !DILocation(line: 0, scope: !18020)
!18044 = !DILocation(line: 49, column: 10, scope: !18020)
!18045 = !DILocation(line: 52, column: 3, scope: !18020)
!18046 = !DILocation(line: 54, column: 2, scope: !18020)
!18047 = !DILocation(line: 57, column: 9, scope: !18009)
!18048 = !DILocation(line: 57, column: 16, scope: !18009)
!18049 = !DILocation(line: 60, column: 13, scope: !18050)
!18050 = distinct !DILexicalBlock(scope: !18009, file: !2907, line: 60, column: 6)
!18051 = !DILocation(line: 60, column: 23, scope: !18050)
!18052 = !DILocation(line: 60, column: 6, scope: !18009)
!18053 = !DILocalVariable(name: "key", arg: 2, scope: !18054, file: !436, line: 190, type: !18015)
!18054 = distinct !DISubprogram(name: "k_spin_unlock", scope: !436, file: !436, line: 189, type: !18055, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2785, retainedNodes: !18057)
!18055 = !DISubroutineType(types: !18056)
!18056 = !{null, !18028, !18015}
!18057 = !{!18058, !18053}
!18058 = !DILocalVariable(name: "l", arg: 1, scope: !18054, file: !436, line: 189, type: !18028)
!18059 = !DILocation(line: 0, scope: !18054, inlinedAt: !18060)
!18060 = distinct !DILocation(line: 62, column: 3, scope: !18061)
!18061 = distinct !DILexicalBlock(scope: !18050, file: !2907, line: 60, column: 32)
!18062 = !DILocalVariable(name: "key", arg: 1, scope: !18063, file: !4146, line: 84, type: !32)
!18063 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4146, file: !4146, line: 84, type: !4159, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2785, retainedNodes: !18064)
!18064 = !{!18062}
!18065 = !DILocation(line: 0, scope: !18063, inlinedAt: !18066)
!18066 = distinct !DILocation(line: 215, column: 2, scope: !18054, inlinedAt: !18060)
!18067 = !DILocation(line: 95, column: 2, scope: !18063, inlinedAt: !18066)
!18068 = !{i64 2301119}
!18069 = !DILocation(line: 63, column: 10, scope: !18061)
!18070 = !DILocation(line: 63, column: 3, scope: !18061)
!18071 = !DILocation(line: 0, scope: !18025, inlinedAt: !18072)
!18072 = distinct !DILocation(line: 64, column: 9, scope: !18061)
!18073 = !DILocation(line: 55, column: 2, scope: !18034, inlinedAt: !18074)
!18074 = distinct !DILocation(line: 145, column: 10, scope: !18025, inlinedAt: !18072)
!18075 = !DILocation(line: 0, scope: !18034, inlinedAt: !18074)
!18076 = !DILocation(line: 65, column: 2, scope: !18061)
!18077 = !DILocation(line: 72, column: 32, scope: !18009)
!18078 = !DILocation(line: 72, column: 11, scope: !18009)
!18079 = !DILocation(line: 74, column: 13, scope: !18080)
!18080 = distinct !DILexicalBlock(scope: !18009, file: !2907, line: 74, column: 6)
!18081 = !DILocation(line: 74, column: 6, scope: !18009)
!18082 = !DILocation(line: 0, scope: !18054, inlinedAt: !18083)
!18083 = distinct !DILocation(line: 75, column: 3, scope: !18084)
!18084 = distinct !DILexicalBlock(scope: !18080, file: !2907, line: 74, column: 22)
!18085 = !DILocation(line: 0, scope: !18063, inlinedAt: !18086)
!18086 = distinct !DILocation(line: 215, column: 2, scope: !18054, inlinedAt: !18083)
!18087 = !DILocation(line: 95, column: 2, scope: !18063, inlinedAt: !18086)
!18088 = !DILocation(line: 76, column: 3, scope: !18084)
!18089 = !DILocation(line: 79, column: 2, scope: !18009)
!18090 = !DILocalVariable(name: "thread", arg: 1, scope: !18091, file: !14712, line: 65, type: !2834)
!18091 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !14712, file: !14712, line: 65, type: !18092, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2785, retainedNodes: !18094)
!18092 = !DISubroutineType(types: !18093)
!18093 = !{null, !2834, !32}
!18094 = !{!18090, !18095}
!18095 = !DILocalVariable(name: "value", arg: 2, scope: !18091, file: !14712, line: 65, type: !32)
!18096 = !DILocation(line: 0, scope: !18091, inlinedAt: !18097)
!18097 = distinct !DILocation(line: 81, column: 2, scope: !18009)
!18098 = !DILocation(line: 67, column: 15, scope: !18091, inlinedAt: !18097)
!18099 = !DILocation(line: 67, column: 33, scope: !18091, inlinedAt: !18097)
!18100 = !DILocation(line: 0, scope: !18054, inlinedAt: !18101)
!18101 = distinct !DILocation(line: 83, column: 2, scope: !18009)
!18102 = !DILocation(line: 0, scope: !18063, inlinedAt: !18103)
!18103 = distinct !DILocation(line: 215, column: 2, scope: !18054, inlinedAt: !18101)
!18104 = !DILocation(line: 95, column: 2, scope: !18063, inlinedAt: !18103)
!18105 = !DILocation(line: 85, column: 2, scope: !18009)
!18106 = !DILocation(line: 86, column: 1, scope: !18009)
!18107 = distinct !DISubprogram(name: "k_uptime_ticks", scope: !3868, file: !3868, line: 564, type: !17922, scopeLine: 565, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2785, retainedNodes: !437)
!18108 = !DILocation(line: 573, column: 2, scope: !18109)
!18109 = distinct !DILexicalBlock(scope: !18107, file: !3868, line: 573, column: 2)
!18110 = !{i64 2155083369}
!18111 = !DILocation(line: 574, column: 9, scope: !18107)
!18112 = !DILocation(line: 574, column: 2, scope: !18107)
!18113 = distinct !DISubprogram(name: "z_waitq_head", scope: !15018, file: !15018, line: 52, type: !18114, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2785, retainedNodes: !18116)
!18114 = !DISubroutineType(types: !18115)
!18115 = !{!2834, !2851}
!18116 = !{!18117}
!18117 = !DILocalVariable(name: "w", arg: 1, scope: !18113, file: !15018, line: 52, type: !2851)
!18118 = !DILocation(line: 0, scope: !18113)
!18119 = !DILocation(line: 54, column: 52, scope: !18113)
!18120 = !DILocation(line: 54, column: 28, scope: !18113)
!18121 = !DILocation(line: 54, column: 9, scope: !18113)
!18122 = !DILocation(line: 54, column: 2, scope: !18113)
!18123 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !367, file: !367, line: 294, type: !18124, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2785, retainedNodes: !18127)
!18124 = !DISubroutineType(types: !18125)
!18125 = !{!2905, !18126}
!18126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2821, size: 32)
!18127 = !{!18128}
!18128 = !DILocalVariable(name: "list", arg: 1, scope: !18123, file: !367, line: 294, type: !18126)
!18129 = !DILocation(line: 0, scope: !18123)
!18130 = !DILocation(line: 296, column: 9, scope: !18123)
!18131 = !DILocation(line: 296, column: 49, scope: !18123)
!18132 = !DILocation(line: 296, column: 2, scope: !18123)
!18133 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !367, file: !367, line: 266, type: !18134, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2785, retainedNodes: !18136)
!18134 = !DISubroutineType(types: !18135)
!18135 = !{!422, !18126}
!18136 = !{!18137}
!18137 = !DILocalVariable(name: "list", arg: 1, scope: !18133, file: !367, line: 266, type: !18126)
!18138 = !DILocation(line: 0, scope: !18133)
!18139 = !DILocation(line: 268, column: 15, scope: !18133)
!18140 = !DILocation(line: 268, column: 20, scope: !18133)
!18141 = !DILocation(line: 268, column: 2, scope: !18133)
!18142 = distinct !DISubprogram(name: "k_timer_init", scope: !2907, file: !2907, line: 89, type: !18143, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2785, retainedNodes: !18147)
!18143 = !DISubroutineType(types: !18144)
!18144 = !{null, !2788, !18145, !18146}
!18145 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timer_expiry_t", file: !359, line: 1381, baseType: !2823)
!18146 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timer_stop_t", file: !359, line: 1397, baseType: !2823)
!18147 = !{!18148, !18149, !18150}
!18148 = !DILocalVariable(name: "timer", arg: 1, scope: !18142, file: !2907, line: 89, type: !2788)
!18149 = !DILocalVariable(name: "expiry_fn", arg: 2, scope: !18142, file: !2907, line: 90, type: !18145)
!18150 = !DILocalVariable(name: "stop_fn", arg: 3, scope: !18142, file: !2907, line: 91, type: !18146)
!18151 = !DILocation(line: 0, scope: !18142)
!18152 = !DILocation(line: 93, column: 9, scope: !18142)
!18153 = !DILocation(line: 93, column: 19, scope: !18142)
!18154 = !DILocation(line: 94, column: 9, scope: !18142)
!18155 = !DILocation(line: 94, column: 17, scope: !18142)
!18156 = !DILocation(line: 95, column: 9, scope: !18142)
!18157 = !DILocation(line: 95, column: 16, scope: !18142)
!18158 = !DILocation(line: 98, column: 24, scope: !18159)
!18159 = distinct !DILexicalBlock(scope: !18160, file: !2907, line: 97, column: 41)
!18160 = distinct !DILexicalBlock(scope: !18142, file: !2907, line: 97, column: 6)
!18161 = !DILocation(line: 98, column: 3, scope: !18159)
!18162 = !DILocation(line: 101, column: 25, scope: !18142)
!18163 = !DILocation(line: 101, column: 2, scope: !18142)
!18164 = !DILocation(line: 105, column: 9, scope: !18142)
!18165 = !DILocation(line: 105, column: 19, scope: !18142)
!18166 = !DILocation(line: 108, column: 1, scope: !18142)
!18167 = distinct !DISubprogram(name: "z_waitq_init", scope: !15018, file: !15018, line: 47, type: !18168, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2785, retainedNodes: !18170)
!18168 = !DISubroutineType(types: !18169)
!18169 = !{null, !2851}
!18170 = !{!18171}
!18171 = !DILocalVariable(name: "w", arg: 1, scope: !18167, file: !15018, line: 47, type: !2851)
!18172 = !DILocation(line: 0, scope: !18167)
!18173 = !DILocation(line: 49, column: 21, scope: !18167)
!18174 = !DILocation(line: 49, column: 2, scope: !18167)
!18175 = !DILocation(line: 50, column: 1, scope: !18167)
!18176 = distinct !DISubprogram(name: "z_init_timeout", scope: !15086, file: !15086, line: 25, type: !2812, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2785, retainedNodes: !18177)
!18177 = !{!18178}
!18178 = !DILocalVariable(name: "to", arg: 1, scope: !18176, file: !15086, line: 25, type: !2814)
!18179 = !DILocation(line: 0, scope: !18176)
!18180 = !DILocation(line: 27, column: 22, scope: !18176)
!18181 = !DILocation(line: 27, column: 2, scope: !18176)
!18182 = !DILocation(line: 28, column: 1, scope: !18176)
!18183 = distinct !DISubprogram(name: "sys_dnode_init", scope: !367, file: !367, line: 211, type: !18184, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2785, retainedNodes: !18186)
!18184 = !DISubroutineType(types: !18185)
!18185 = !{null, !2905}
!18186 = !{!18187}
!18187 = !DILocalVariable(name: "node", arg: 1, scope: !18183, file: !367, line: 211, type: !2905)
!18188 = !DILocation(line: 0, scope: !18183)
!18189 = !DILocation(line: 213, column: 8, scope: !18183)
!18190 = !DILocation(line: 213, column: 13, scope: !18183)
!18191 = !DILocation(line: 214, column: 8, scope: !18183)
!18192 = !DILocation(line: 214, column: 13, scope: !18183)
!18193 = !DILocation(line: 215, column: 1, scope: !18183)
!18194 = distinct !DISubprogram(name: "sys_dlist_init", scope: !367, file: !367, line: 197, type: !18195, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2785, retainedNodes: !18197)
!18195 = !DISubroutineType(types: !18196)
!18196 = !{null, !18126}
!18197 = !{!18198}
!18198 = !DILocalVariable(name: "list", arg: 1, scope: !18194, file: !367, line: 197, type: !18126)
!18199 = !DILocation(line: 0, scope: !18194)
!18200 = !DILocation(line: 199, column: 8, scope: !18194)
!18201 = !DILocation(line: 199, column: 13, scope: !18194)
!18202 = !DILocation(line: 200, column: 8, scope: !18194)
!18203 = !DILocation(line: 200, column: 13, scope: !18194)
!18204 = !DILocation(line: 201, column: 1, scope: !18194)
!18205 = distinct !DISubprogram(name: "z_impl_k_timer_start", scope: !2907, file: !2907, line: 111, type: !18206, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2785, retainedNodes: !18208)
!18206 = !DISubroutineType(types: !18207)
!18207 = !{null, !2788, !2828, !2828}
!18208 = !{!18209, !18210, !18211}
!18209 = !DILocalVariable(name: "timer", arg: 1, scope: !18205, file: !2907, line: 111, type: !2788)
!18210 = !DILocalVariable(name: "duration", arg: 2, scope: !18205, file: !2907, line: 111, type: !2828)
!18211 = !DILocalVariable(name: "period", arg: 3, scope: !18205, file: !2907, line: 112, type: !2828)
!18212 = !DILocation(line: 0, scope: !18205)
!18213 = !DILocation(line: 116, column: 6, scope: !18214)
!18214 = distinct !DILexicalBlock(scope: !18205, file: !2907, line: 116, column: 6)
!18215 = !DILocation(line: 116, column: 6, scope: !18205)
!18216 = !DILocation(line: 133, column: 39, scope: !18217)
!18217 = distinct !DILexicalBlock(scope: !18205, file: !2907, line: 133, column: 6)
!18218 = !DILocation(line: 137, column: 33, scope: !18219)
!18219 = distinct !DILexicalBlock(scope: !18205, file: !2907, line: 137, column: 6)
!18220 = !DILocation(line: 137, column: 6, scope: !18205)
!18221 = !DILocation(line: 141, column: 32, scope: !18205)
!18222 = !DILocation(line: 141, column: 8, scope: !18205)
!18223 = !DILocation(line: 142, column: 18, scope: !18205)
!18224 = !DILocation(line: 143, column: 9, scope: !18205)
!18225 = !DILocation(line: 143, column: 16, scope: !18205)
!18226 = !DILocation(line: 145, column: 2, scope: !18205)
!18227 = !DILocation(line: 147, column: 1, scope: !18205)
!18228 = distinct !DISubprogram(name: "z_impl_k_timer_stop", scope: !2907, file: !2907, line: 160, type: !2824, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2785, retainedNodes: !18229)
!18229 = !{!18230, !18231, !18232}
!18230 = !DILocalVariable(name: "timer", arg: 1, scope: !18228, file: !2907, line: 160, type: !2788)
!18231 = !DILocalVariable(name: "inactive", scope: !18228, file: !2907, line: 164, type: !422)
!18232 = !DILocalVariable(name: "pending_thread", scope: !18233, file: !2907, line: 175, type: !2834)
!18233 = distinct !DILexicalBlock(scope: !18234, file: !2907, line: 174, column: 41)
!18234 = distinct !DILexicalBlock(scope: !18228, file: !2907, line: 174, column: 6)
!18235 = !DILocation(line: 0, scope: !18228)
!18236 = !DILocation(line: 164, column: 43, scope: !18228)
!18237 = !DILocation(line: 164, column: 19, scope: !18228)
!18238 = !DILocation(line: 164, column: 52, scope: !18228)
!18239 = !DILocation(line: 166, column: 6, scope: !18228)
!18240 = !DILocation(line: 170, column: 13, scope: !18241)
!18241 = distinct !DILexicalBlock(scope: !18228, file: !2907, line: 170, column: 6)
!18242 = !DILocation(line: 170, column: 21, scope: !18241)
!18243 = !DILocation(line: 170, column: 6, scope: !18228)
!18244 = !DILocation(line: 171, column: 3, scope: !18245)
!18245 = distinct !DILexicalBlock(scope: !18241, file: !2907, line: 170, column: 30)
!18246 = !DILocation(line: 172, column: 2, scope: !18245)
!18247 = !DILocation(line: 175, column: 66, scope: !18233)
!18248 = !DILocation(line: 175, column: 37, scope: !18233)
!18249 = !DILocation(line: 0, scope: !18233)
!18250 = !DILocation(line: 177, column: 22, scope: !18251)
!18251 = distinct !DILexicalBlock(scope: !18233, file: !2907, line: 177, column: 7)
!18252 = !DILocation(line: 177, column: 7, scope: !18233)
!18253 = !DILocation(line: 178, column: 4, scope: !18254)
!18254 = distinct !DILexicalBlock(scope: !18251, file: !2907, line: 177, column: 31)
!18255 = !DILocation(line: 179, column: 4, scope: !18254)
!18256 = !DILocation(line: 180, column: 3, scope: !18254)
!18257 = !DILocation(line: 182, column: 1, scope: !18228)
!18258 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !14692, file: !14692, line: 73, type: !3472, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2785, retainedNodes: !437)
!18259 = !DILocation(line: 55, column: 2, scope: !18034, inlinedAt: !18260)
!18260 = distinct !DILocation(line: 75, column: 30, scope: !18258)
!18261 = !DILocation(line: 0, scope: !18034, inlinedAt: !18260)
!18262 = !DILocation(line: 75, column: 9, scope: !18258)
!18263 = !DILocation(line: 76, column: 1, scope: !18258)
!18264 = distinct !DISubprogram(name: "z_impl_k_timer_status_get", scope: !2907, file: !2907, line: 193, type: !18265, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2785, retainedNodes: !18267)
!18265 = !DISubroutineType(types: !18266)
!18266 = !{!113, !2788}
!18267 = !{!18268, !18269, !18270}
!18268 = !DILocalVariable(name: "timer", arg: 1, scope: !18264, file: !2907, line: 193, type: !2788)
!18269 = !DILocalVariable(name: "key", scope: !18264, file: !2907, line: 195, type: !18015)
!18270 = !DILocalVariable(name: "result", scope: !18264, file: !2907, line: 196, type: !113)
!18271 = !DILocation(line: 0, scope: !18264)
!18272 = !DILocation(line: 0, scope: !18025, inlinedAt: !18273)
!18273 = distinct !DILocation(line: 195, column: 25, scope: !18264)
!18274 = !DILocation(line: 55, column: 2, scope: !18034, inlinedAt: !18275)
!18275 = distinct !DILocation(line: 145, column: 10, scope: !18025, inlinedAt: !18273)
!18276 = !DILocation(line: 0, scope: !18034, inlinedAt: !18275)
!18277 = !DILocation(line: 196, column: 27, scope: !18264)
!18278 = !DILocation(line: 198, column: 16, scope: !18264)
!18279 = !DILocation(line: 0, scope: !18054, inlinedAt: !18280)
!18280 = distinct !DILocation(line: 199, column: 2, scope: !18264)
!18281 = !DILocation(line: 0, scope: !18063, inlinedAt: !18282)
!18282 = distinct !DILocation(line: 215, column: 2, scope: !18054, inlinedAt: !18280)
!18283 = !DILocation(line: 95, column: 2, scope: !18063, inlinedAt: !18282)
!18284 = !DILocation(line: 201, column: 2, scope: !18264)
!18285 = distinct !DISubprogram(name: "z_impl_k_timer_status_sync", scope: !2907, file: !2907, line: 213, type: !18265, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2785, retainedNodes: !18286)
!18286 = !{!18287, !18288, !18289}
!18287 = !DILocalVariable(name: "timer", arg: 1, scope: !18285, file: !2907, line: 213, type: !2788)
!18288 = !DILocalVariable(name: "key", scope: !18285, file: !2907, line: 241, type: !18015)
!18289 = !DILocalVariable(name: "result", scope: !18285, file: !2907, line: 242, type: !113)
!18290 = !DILocation(line: 0, scope: !18285)
!18291 = !DILocation(line: 0, scope: !18025, inlinedAt: !18292)
!18292 = distinct !DILocation(line: 241, column: 25, scope: !18285)
!18293 = !DILocation(line: 55, column: 2, scope: !18034, inlinedAt: !18294)
!18294 = distinct !DILocation(line: 145, column: 10, scope: !18025, inlinedAt: !18292)
!18295 = !DILocation(line: 0, scope: !18034, inlinedAt: !18294)
!18296 = !DILocation(line: 242, column: 27, scope: !18285)
!18297 = !DILocation(line: 244, column: 13, scope: !18298)
!18298 = distinct !DILexicalBlock(scope: !18285, file: !2907, line: 244, column: 6)
!18299 = !DILocation(line: 244, column: 6, scope: !18285)
!18300 = !DILocation(line: 245, column: 38, scope: !18301)
!18301 = distinct !DILexicalBlock(scope: !18302, file: !2907, line: 245, column: 7)
!18302 = distinct !DILexicalBlock(scope: !18298, file: !2907, line: 244, column: 20)
!18303 = !DILocation(line: 245, column: 8, scope: !18301)
!18304 = !DILocation(line: 245, column: 7, scope: !18302)
!18305 = !DILocation(line: 249, column: 42, scope: !18306)
!18306 = distinct !DILexicalBlock(scope: !18301, file: !2907, line: 245, column: 48)
!18307 = !DILocation(line: 249, column: 10, scope: !18306)
!18308 = !DILocation(line: 0, scope: !18025, inlinedAt: !18309)
!18309 = distinct !DILocation(line: 252, column: 10, scope: !18306)
!18310 = !DILocation(line: 55, column: 2, scope: !18034, inlinedAt: !18311)
!18311 = distinct !DILocation(line: 145, column: 10, scope: !18025, inlinedAt: !18309)
!18312 = !DILocation(line: 0, scope: !18034, inlinedAt: !18311)
!18313 = !DILocation(line: 253, column: 20, scope: !18306)
!18314 = !DILocation(line: 254, column: 3, scope: !18306)
!18315 = !DILocation(line: 261, column: 16, scope: !18285)
!18316 = !DILocation(line: 0, scope: !18054, inlinedAt: !18317)
!18317 = distinct !DILocation(line: 262, column: 2, scope: !18285)
!18318 = !DILocation(line: 0, scope: !18063, inlinedAt: !18319)
!18319 = distinct !DILocation(line: 215, column: 2, scope: !18054, inlinedAt: !18317)
!18320 = !DILocation(line: 95, column: 2, scope: !18063, inlinedAt: !18319)
!18321 = !DILocation(line: 269, column: 2, scope: !18285)
!18322 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !15086, file: !15086, line: 35, type: !18323, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2785, retainedNodes: !18327)
!18323 = !DISubroutineType(types: !18324)
!18324 = !{!422, !18325}
!18325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18326, size: 32)
!18326 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2792)
!18327 = !{!18328}
!18328 = !DILocalVariable(name: "to", arg: 1, scope: !18322, file: !15086, line: 35, type: !18325)
!18329 = !DILocation(line: 0, scope: !18322)
!18330 = !DILocation(line: 37, column: 35, scope: !18322)
!18331 = !DILocation(line: 37, column: 10, scope: !18322)
!18332 = !DILocation(line: 37, column: 9, scope: !18322)
!18333 = !DILocation(line: 37, column: 2, scope: !18322)
!18334 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !367, file: !367, line: 225, type: !18335, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2785, retainedNodes: !18339)
!18335 = !DISubroutineType(types: !18336)
!18336 = !{!422, !18337}
!18337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18338, size: 32)
!18338 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2795)
!18339 = !{!18340}
!18340 = !DILocalVariable(name: "node", arg: 1, scope: !18334, file: !367, line: 225, type: !18337)
!18341 = !DILocation(line: 0, scope: !18334)
!18342 = !DILocation(line: 227, column: 15, scope: !18334)
!18343 = !DILocation(line: 227, column: 20, scope: !18334)
!18344 = !DILocation(line: 227, column: 2, scope: !18334)
!18345 = distinct !DISubprogram(name: "boot_banner", scope: !18346, file: !18346, line: 26, type: !3472, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3458, retainedNodes: !437)
!18346 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!18347 = !DILocation(line: 34, column: 2, scope: !18345)
!18348 = !DILocation(line: 36, column: 1, scope: !18345)
