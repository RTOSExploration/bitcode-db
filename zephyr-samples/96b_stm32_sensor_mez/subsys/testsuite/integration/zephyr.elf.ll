; ModuleID = 'build/96b_stm32_sensor_mez/integration/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.ztest_suite_stats = type { i32, i32, i32 }
%struct.ztest_suite_node = type { i8*, i8* ()*, void (i8*)*, void (i8*)*, void (i8*)*, i1 (i8*)*, %struct.ztest_suite_stats* }
%struct.ztest_unit_test_stats = type { i32, i32, i32, i32, i32 }
%struct.ztest_unit_test = type { i8*, i8*, void (i8*)*, i32, %struct.ztest_unit_test_stats* }
%struct.log_source_const_data = type { i8*, i8 }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.k_spinlock }
%struct.k_spinlock = type { i32 }
%struct.arm_mpu_region = type { i32, i8*, %struct.k_spinlock }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.z_thread_stack_element = type { i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, [32 x i8], i32, %struct.ztest_suite_stats, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.anon = type { %struct._dnode }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type opaque
%struct._thread_arch = type { i32, i32 }
%struct.ztest_test_rule = type { void (%struct.ztest_unit_test*, i8*)*, void (%struct.ztest_unit_test*, i8*)* }
%struct.ztest_expected_result_entry = type { i8*, i8*, i32 }
%struct.ztest_arch_api = type { void (i8*)*, i1 (i8*, %struct.ztest_suite_node*)*, i1 (i8*, i8*)* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct.k_spinlock, i32*, i32, %struct._thread_arch }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.k_spinlock, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct._cpu_arch }
%struct._cpu_arch = type {}
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.cbprintf_package_desc = type { i8, i8, i8, i8 }
%struct.str_context = type { i8*, i32, i32 }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.k_spinlock, %struct.k_spinlock }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %struct.k_spinlock*, %struct.k_spinlock* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_PeriphCLKInitTypeDef = type { i32, %struct.ztest_unit_test_stats, %struct.RCC_PLLSAIInitTypeDef, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }
%struct.RCC_PLLSAIInitTypeDef = type { i32, i32, i32, i32 }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.USART_TypeDef }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [97 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [97 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236636 to i8*), void (i8*)* inttoptr (i32 134235287 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236636 to i8*), void (i8*)* inttoptr (i32 134235267 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236636 to i8*), void (i8*)* inttoptr (i32 134235257 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236636 to i8*), void (i8*)* inttoptr (i32 134235357 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236636 to i8*), void (i8*)* inttoptr (i32 134235347 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236636 to i8*), void (i8*)* inttoptr (i32 134235337 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236636 to i8*), void (i8*)* inttoptr (i32 134235327 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236636 to i8*), void (i8*)* inttoptr (i32 134235317 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236636 to i8*), void (i8*)* inttoptr (i32 134235307 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236636 to i8*), void (i8*)* inttoptr (i32 134235297 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236636 to i8*), void (i8*)* inttoptr (i32 134235277 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [49 x i8*] [i8* bitcast (%struct.ztest_suite_node* @z_ztest_test_node_framework_tests to i8*), i8* bitcast (%struct.ztest_unit_test* @z_ztest_unit_test__framework_tests__test_assert to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_cbprintf_package to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_mpu to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_36 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_19 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_90 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_91 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_92 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_93 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_94 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_95 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_96 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_19 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_90 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_91 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_92 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_93 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_94 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_95 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_96 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_48 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_52 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_42 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_45 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_48 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_52 to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_uart_stm32 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_os to i8*)], section "llvm.metadata"
@.str = private unnamed_addr constant [16 x i8] c"framework_tests\00", align 1
@z_ztest_suite_node_stats_framework_tests = dso_local global %struct.ztest_suite_stats zeroinitializer, align 4, !dbg !25
@z_ztest_test_node_framework_tests = internal constant %struct.ztest_suite_node { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i32 0, i32 0), i8* ()* null, void (i8*)* null, void (i8*)* null, void (i8*)* null, i1 (i8*)* null, %struct.ztest_suite_stats* @z_ztest_suite_node_stats_framework_tests }, section "._ztest_suite_node.static.z_ztest_test_node_framework_tests", align 4, !dbg !109
@.str.1 = private unnamed_addr constant [12 x i8] c"test_assert\00", align 1
@z_ztest_unit_test_stats_framework_tests_test_assert = dso_local global %struct.ztest_unit_test_stats zeroinitializer, align 4, !dbg !173
@z_ztest_unit_test__framework_tests__test_assert = internal global %struct.ztest_unit_test { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i32 0, i32 0), void (i8*)* @_framework_tests_test_assert_wrapper, i32 0, %struct.ztest_unit_test_stats* @z_ztest_unit_test_stats_framework_tests_test_assert }, section "._ztest_unit_test.static.z_ztest_unit_test__framework_tests__test_assert", align 4, !dbg !155
@.str.2 = private unnamed_addr constant [17 x i8] c"cbprintf_package\00", align 1
@log_const_cbprintf_package = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i32 0, i32 0), i8 3 }, section ".log_const_cbprintf_package", align 4, !dbg !175
@.str.1.4 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.2.5 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.3 = private unnamed_addr constant [39 x i8] c"ZEPHYR_BASE/lib/os/cbprintf_packaged.c\00", align 1
@.str.4 = private unnamed_addr constant [33 x i8] c"\09String with too many arguments\0A\00", align 1
@.str.5 = private unnamed_addr constant [26 x i8] c"\09str_ptr_pos[] too small\0A\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"\09unexpected size %u\0A\00", align 1
@.str.7 = private unnamed_addr constant [23 x i8] c"\09too many format args\0A\00", align 1
@.str.8 = private unnamed_addr constant [27 x i8] c"in_packaged != ((void *)0)\00", align 1
@.str.9 = private unnamed_addr constant [168 x i8] c"%c: (unsigned) char * used for %%p argument. It's recommended to cast it to void * because it may cause misbehavior in certain configurations. String:\22%s\22 argument:%d\0A\00", align 1
@.str.10 = private unnamed_addr constant [31 x i8] c"scpy_cnt < sizeof(cpy_str_pos)\00", align 1
@.str.11 = private unnamed_addr constant [32 x i8] c"keep_cnt < sizeof(keep_str_pos)\00", align 1
@__rodata_region_start = external dso_local global [0 x i8], align 1
@__rodata_region_end = external dso_local global [0 x i8], align 1
@.str.12 = private unnamed_addr constant [24 x i8] c"packaged != ((void *)0)\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !207
@.str.13 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !216
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !266
@.str.22 = private unnamed_addr constant [5 x i8] c"%c: \00", align 1
@.str.1.24 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.2.25 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.3.23 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.4.27 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.5.28 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.6.26 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.29 = private unnamed_addr constant [52 x i8] c"%c: r0/a1:  0x%08x  r1/a2:  0x%08x  r2/a3:  0x%08x\0A\00", align 1
@.str.1.30 = private unnamed_addr constant [52 x i8] c"%c: r3/a4:  0x%08x r12/ip:  0x%08x r14/lr:  0x%08x\0A\00", align 1
@.str.2.31 = private unnamed_addr constant [20 x i8] c"%c:  xpsr:  0x%08x\0A\00", align 1
@.str.3.32 = private unnamed_addr constant [51 x i8] c"%c: Faulting instruction address (r15/pc): 0x%08x\0A\00", align 1
@.str.33 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.34 = private unnamed_addr constant [27 x i8] c"prio <= ((1UL << (4)) - 1)\00", align 1
@.str.2.35 = private unnamed_addr constant [47 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/irq_manage.c\00", align 1
@.str.3.36 = private unnamed_addr constant [64 x i8] c"\09invalid priority %d for %d irq! values must be less than %lu\0A\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.39 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.40 = private unnamed_addr constant [19 x i8] c"esf != ((void *)0)\00", align 1
@.str.2.41 = private unnamed_addr constant [51 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/cortex_m/fault.c\00", align 1
@.str.3.42 = private unnamed_addr constant [62 x i8] c"\09ESF could not be retrieved successfully. Shall never occur.\0A\00", align 1
@.str.4.55 = private unnamed_addr constant [48 x i8] c"%c: SPSEL in thread mode does not indicate PSP\0A\00", align 1
@.str.5.47 = private unnamed_addr constant [28 x i8] c"%c: ***** HARD FAULT *****\0A\00", align 1
@.str.6.48 = private unnamed_addr constant [38 x i8] c"%c:   Bus fault on vector table read\0A\00", align 1
@.str.7.49 = private unnamed_addr constant [19 x i8] c"%c:   Debug event\0A\00", align 1
@.str.8.50 = private unnamed_addr constant [36 x i8] c"%c:   Fault escalation (see below)\0A\00", align 1
@.str.9.51 = private unnamed_addr constant [33 x i8] c"%c: ARCH_EXCEPT with reason %x\0A\0A\00", align 1
@.str.10.52 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.53 = private unnamed_addr constant [36 x i8] c"\09Fault escalation without FSR info\0A\00", align 1
@.str.12.54 = private unnamed_addr constant [48 x i8] c"\09HardFault without HFSR info Shall never occur\0A\00", align 1
@.str.13.46 = private unnamed_addr constant [27 x i8] c"%c: ***** MPU FAULT *****\0A\00", align 1
@.str.14 = private unnamed_addr constant [56 x i8] c"%c:   Stacking error (context area might be not valid)\0A\00", align 1
@.str.15 = private unnamed_addr constant [24 x i8] c"%c:   Unstacking error\0A\00", align 1
@.str.16 = private unnamed_addr constant [29 x i8] c"%c:   Data Access Violation\0A\00", align 1
@.str.17 = private unnamed_addr constant [27 x i8] c"%c:   MMFAR Address: 0x%x\0A\00", align 1
@.str.18 = private unnamed_addr constant [36 x i8] c"%c:   Instruction Access Violation\0A\00", align 1
@.str.19 = private unnamed_addr constant [52 x i8] c"%c:   Floating-point lazy state preservation error\0A\00", align 1
@.str.20 = private unnamed_addr constant [74 x i8] c"!(((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->CFSR & (1UL << (0U + 4U)))\00", align 1
@.str.21 = private unnamed_addr constant [35 x i8] c"\09Stacking error not a stack fail\0A\0A\00", align 1
@.str.22.45 = private unnamed_addr constant [27 x i8] c"%c: ***** BUS FAULT *****\0A\00", align 1
@.str.23 = private unnamed_addr constant [22 x i8] c"%c:   Stacking error\0A\00", align 1
@.str.24 = private unnamed_addr constant [30 x i8] c"%c:   Precise data bus error\0A\00", align 1
@.str.25 = private unnamed_addr constant [26 x i8] c"%c:   BFAR Address: 0x%x\0A\00", align 1
@.str.26 = private unnamed_addr constant [32 x i8] c"%c:   Imprecise data bus error\0A\00", align 1
@.str.27 = private unnamed_addr constant [29 x i8] c"%c:   Instruction bus error\0A\00", align 1
@.str.28 = private unnamed_addr constant [29 x i8] c"%c: ***** USAGE FAULT *****\0A\00", align 1
@.str.29.43 = private unnamed_addr constant [24 x i8] c"%c:   Division by zero\0A\00", align 1
@.str.30 = private unnamed_addr constant [31 x i8] c"%c:   Unaligned memory access\0A\00", align 1
@.str.31 = private unnamed_addr constant [35 x i8] c"%c:   No coprocessor instructions\0A\00", align 1
@.str.32 = private unnamed_addr constant [42 x i8] c"%c:   Illegal load of EXC_RETURN into PC\0A\00", align 1
@.str.33.44 = private unnamed_addr constant [31 x i8] c"%c:   Illegal use of the EPSR\0A\00", align 1
@.str.34 = private unnamed_addr constant [48 x i8] c"%c:   Attempt to execute undefined instruction\0A\00", align 1
@.str.35 = private unnamed_addr constant [41 x i8] c"%c: ***** Debug monitor exception *****\0A\00", align 1
@.str.36 = private unnamed_addr constant [24 x i8] c"%c: ***** %s %d) *****\0A\00", align 1
@.str.37 = private unnamed_addr constant [21 x i8] c"Reserved Exception (\00", align 1
@.str.38 = private unnamed_addr constant [25 x i8] c"Spurious interrupt (IRQ \00", align 1
@.str.61 = private unnamed_addr constant [4 x i8] c"mpu\00", align 1
@log_const_mpu = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.61, i32 0, i32 0), i8 3 }, section ".log_const_mpu", align 4, !dbg !295
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.k_spinlock { i32 101384192 } }], align 4, !dbg !447
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !301
@.str.67 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.68 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.2.69 = private unnamed_addr constant [48 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/mpu/arm_mpu.c\00", align 1
@.str.3.70 = private unnamed_addr constant [44 x i8] c"\09Configuring %u static MPU regions failed\0A\0A\00", align 1
@.str.4.75 = private unnamed_addr constant [45 x i8] c"\09Configuring %u dynamic MPU regions failed\0A\0A\00", align 1
@.str.5.76 = private unnamed_addr constant [52 x i8] c"\09Request to configure: %u regions (supported: %u)\0A\0A\00", align 1
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !456
@.str.6.77 = private unnamed_addr constant [80 x i8] c"(((MPU_Type *) ((0xE000E000UL) + 0x0D90UL) )->TYPE & (0xFFUL << 8U)) >> 8U == 8\00", align 1
@.str.7.78 = private unnamed_addr constant [33 x i8] c"\09Invalid number of MPU regions\0A\0A\00", align 1
@.str.8.71 = private unnamed_addr constant [40 x i8] c"%c: Partition %u: sanity check failed.\0A\00", align 1
@.str.9.72 = private unnamed_addr constant [43 x i8] c"%c: Failed to allocate new MPU region %u\0A\0A\00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !492
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.87, i32 0, i32 0), %struct.k_spinlock { i32 117571620 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.88, i32 0, i32 0), %struct.k_spinlock { i32 285933600 } }], align 4, !dbg !502
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !507
@.str.87 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.88 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@phase = dso_local local_unnamed_addr global i32 5, align 4, !dbg !527
@test_status = internal unnamed_addr global i32 0, align 4, !dbg !582
@.str.89 = private unnamed_addr constant [69 x i8] c"===================================================================\0A\00", align 1
@.str.1.92 = private unnamed_addr constant [22 x i8] c"PROJECT EXECUTION %s\0A\00", align 1
@.str.2.91 = private unnamed_addr constant [7 x i8] c"FAILED\00", align 1
@.str.3.90 = private unnamed_addr constant [11 x i8] c"SUCCESSFUL\00", align 1
@current_test_failed_assumption = internal unnamed_addr global i1 false, align 1, !dbg !693
@test_result = internal unnamed_addr global i32 0, align 4, !dbg !569
@.str.4.104 = private unnamed_addr constant [51 x i8] c" ERROR: cannot fail in test phase '%s()', bailing\0A\00", align 1
@.str.5.105 = private unnamed_addr constant [51 x i8] c" ERROR: cannot pass in test phase '%s()', bailing\0A\00", align 1
@.str.6.93 = private unnamed_addr constant [51 x i8] c" ERROR: cannot skip in test phase '%s()', bailing\0A\00", align 1
@_ztest_unit_test_list_start = external dso_local global [0 x %struct.ztest_unit_test], align 4
@_ztest_unit_test_list_end = external dso_local global [0 x %struct.ztest_unit_test], align 4
@_ztest_suite_node_list_start = external dso_local global [0 x %struct.ztest_suite_node], align 4
@_ztest_suite_node_list_end = external dso_local global [0 x %struct.ztest_suite_node], align 4
@.str.7.120 = private unnamed_addr constant [37 x i8] c"ERROR: Test suite '%s' did not run.\0A\00", align 1
@.str.8.121 = private unnamed_addr constant [66 x i8] c"ERROR: Test '%s' assigned to test suite '%s' which doesn't exist\0A\00", align 1
@.str.9.122 = private unnamed_addr constant [21 x i8] c"Bad stats for %s.%s\0A\00", align 1
@ztest_thread_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/subsys/testsuite/ztest/src/ztest_new.c\22.0", align 64, !dbg !573
@ztest_thread = internal global %struct.k_thread zeroinitializer, align 8, !dbg !584
@.str.10.95 = private unnamed_addr constant [6 x i8] c"setup\00", align 1
@.str.11.96 = private unnamed_addr constant [7 x i8] c"before\00", align 1
@.str.12.97 = private unnamed_addr constant [5 x i8] c"test\00", align 1
@.str.13.98 = private unnamed_addr constant [6 x i8] c"after\00", align 1
@.str.14.99 = private unnamed_addr constant [9 x i8] c"teardown\00", align 1
@.str.15.100 = private unnamed_addr constant [10 x i8] c"framework\00", align 1
@.str.16.94 = private unnamed_addr constant [10 x i8] c"(unknown)\00", align 1
@.str.17.106 = private unnamed_addr constant [22 x i8] c"Running TESTSUITE %s\0A\00", align 1
@.str.18.108 = private unnamed_addr constant [24 x i8] c"TESTSUITE %s succeeded\0A\00", align 1
@.str.19.107 = private unnamed_addr constant [22 x i8] c"TESTSUITE %s failed.\0A\00", align 1
@.str.20.109 = private unnamed_addr constant [12 x i8] c"START - %s\0A\00", align 1
@tc_spend_time = internal unnamed_addr global i32 0, align 4, !dbg !691
@.str.21.110 = private unnamed_addr constant [29 x i8] c" %s - %s in %u.%03u seconds\0A\00", align 1
@tc_start_time = internal unnamed_addr global i32 0, align 4, !dbg !688
@_ztest_test_rule_list_start = external dso_local global [0 x %struct.ztest_test_rule], align 4
@_ztest_test_rule_list_end = external dso_local global [0 x %struct.ztest_test_rule], align 4
@_ztest_expected_result_entry_list_start = external dso_local global [0 x %struct.ztest_expected_result_entry], align 4
@_ztest_expected_result_entry_list_end = external dso_local global [0 x %struct.ztest_expected_result_entry], align 4
@.str.24.112 = private unnamed_addr constant [5 x i8] c"PASS\00", align 1
@.str.25.113 = private unnamed_addr constant [5 x i8] c"FAIL\00", align 1
@.str.26.114 = private unnamed_addr constant [5 x i8] c"SKIP\00", align 1
@.str.27.111 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str.28.115 = private unnamed_addr constant [41 x i8] c"\0A------ TESTSUITE SUMMARY START ------\0A\0A\00", align 1
@.str.29.116 = private unnamed_addr constant [38 x i8] c"------ TESTSUITE SUMMARY END ------\0A\0A\00", align 1
@.str.30.117 = private unnamed_addr constant [44 x i8] c" - %s - [%s.%s] duration = %u.%03u seconds\0A\00", align 1
@.str.31.118 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.32.119 = private unnamed_addr constant [100 x i8] c"SUITE %s - %3d.%02d%% [%s]: pass = %d, fail = %d, skip = %d, total = %d duration = %u.%03u seconds\0A\00", align 1
@switch.table.get_friendly_phase_name = private unnamed_addr constant [6 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10.95, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11.96, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12.97, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.98, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.14.99, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.15.100, i32 0, i32 0)], align 4
@switch.table.TC_RESULT_TO_STR = private unnamed_addr constant [3 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.24.112, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.25.113, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.26.114, i32 0, i32 0)], align 4
@ztest_api = dso_local local_unnamed_addr constant %struct.ztest_arch_api { void (i8*)* @z_ztest_run_all, i1 (i8*, %struct.ztest_suite_node*)* @z_ztest_should_suite_run, i1 (i8*, i8*)* @z_ztest_should_test_run }, align 4, !dbg !694
@.str.127 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.128 = private unnamed_addr constant [5 x i8] c"line\00", align 1
@.str.2.129 = private unnamed_addr constant [59 x i8] c"ZEPHYR_BASE/drivers/interrupt_controller/intc_exti_stm32.c\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !729
@__devicehdl_dts_ord_36 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !931
@.str.4.125 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_36 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !892
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !875
@__device_dts_ord_36 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4.125, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_36, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_36, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !848
@__init___device_dts_ord_36 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_36 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !864
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !894
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !908
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !910
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !912
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !914
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !916
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !918
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !920
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !922
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !924
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !926
@__devicehdl_dts_ord_8 = dso_local constant [15 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 13, i16 14, i16 32767], section ".__device_handles_pass2", align 2, !dbg !936
@.str.130 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !969
@__devstate_dts_ord_8 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1067
@__init___device_dts_ord_8 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_8 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !1056
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !1108
@__devicehdl_dts_ord_90 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !956
@.str.139 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !1174
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1452
@__devstate_dts_ord_90 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1422
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1408
@__init___device_dts_ord_90 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_90 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1353
@__devicehdl_dts_ord_91 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !954
@.str.1.147 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1454
@__devstate_dts_ord_91 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1426
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1424
@__init___device_dts_ord_91 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_91 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1367
@__devicehdl_dts_ord_92 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !952
@.str.2.148 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1467
@__devstate_dts_ord_92 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1430
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1428
@__init___device_dts_ord_92 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_92 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1373
@__devicehdl_dts_ord_19 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !950
@.str.3.149 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1469
@__devstate_dts_ord_19 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1434
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1432
@__init___device_dts_ord_19 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_19 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1382
@__devicehdl_dts_ord_93 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !948
@.str.4.150 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1471
@__devstate_dts_ord_93 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1438
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1436
@__init___device_dts_ord_93 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_93 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1388
@__devicehdl_dts_ord_94 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !946
@.str.5.151 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1473
@__devstate_dts_ord_94 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1442
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1440
@__init___device_dts_ord_94 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_94 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1394
@__devicehdl_dts_ord_95 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !944
@.str.6.152 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1475
@__devstate_dts_ord_95 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1446
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1444
@__init___device_dts_ord_95 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_95 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1400
@__devicehdl_dts_ord_96 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !942
@.str.7.153 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1477
@__devstate_dts_ord_96 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1450
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1448
@__init___device_dts_ord_96 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_96 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1406
@.str.8.140 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.31.146 = private unnamed_addr constant [12 x i8] c"cb->handler\00", align 1
@.str.32.142 = private unnamed_addr constant [53 x i8] c"ZEPHYR_BASE/include/zephyr/drivers/gpio/gpio_utils.h\00", align 1
@.str.33.145 = private unnamed_addr constant [23 x i8] c"\09No callback handler!\0A\00", align 1
@.str.34.141 = private unnamed_addr constant [9 x i8] c"callback\00", align 1
@.str.35.143 = private unnamed_addr constant [15 x i8] c"\09No callback!\0A\00", align 1
@.str.36.144 = private unnamed_addr constant [18 x i8] c"callback->handler\00", align 1
@.str.157 = private unnamed_addr constant [11 x i8] c"uart_stm32\00", align 1
@log_const_uart_stm32 = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.157, i32 0, i32 0), i8 3 }, section ".log_const_uart_stm32", align 4, !dbg !1479
@__devicehdl_dts_ord_52 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !964
@.str.1.158 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_52 }, align 4, !dbg !1659
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1714
@__devstate_dts_ord_52 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1651
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1716
@__device_dts_ord_52 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.158, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_52, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_52, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1624
@__init___device_dts_ord_52 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_52 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1626
@__devicehdl_dts_ord_42 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !962
@.str.2.165 = private unnamed_addr constant [16 x i8] c"serial@40004400\00", align 1
@uart_stm32_cfg_1 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073759232 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_1, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_42 }, align 4, !dbg !1722
@__devstate_dts_ord_42 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1653
@uart_stm32_data_1 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1732
@__device_dts_ord_42 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2.165, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_1 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_42, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_1 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_42, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1635
@__init___device_dts_ord_42 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_42 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1637
@__devicehdl_dts_ord_45 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !960
@.str.3.166 = private unnamed_addr constant [16 x i8] c"serial@40004800\00", align 1
@uart_stm32_cfg_2 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073760256 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_2, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_45 }, align 4, !dbg !1734
@__devstate_dts_ord_45 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1655
@uart_stm32_data_2 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1744
@__device_dts_ord_45 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3.166, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_2 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_45, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_2 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_45, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1641
@__init___device_dts_ord_45 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_45 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1643
@__devicehdl_dts_ord_48 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !958
@.str.4.169 = private unnamed_addr constant [16 x i8] c"serial@40004c00\00", align 1
@uart_stm32_cfg_3 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073761280 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_3, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_48 }, align 4, !dbg !1746
@__devstate_dts_ord_48 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1657
@uart_stm32_data_3 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1756
@__device_dts_ord_48 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4.169, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_3 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_48, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_3 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_48, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1647
@__init___device_dts_ord_48 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_48 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1649
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 16 }], align 4, !dbg !1703
@__pinctrl_dev_config__device_dts_ord_52 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_52, i32 0, i32 0), i8 1 }, align 4, !dbg !1706
@__pinctrl_states__device_dts_ord_52 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_52, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1708
@__pinctrl_state_pins_0__device_dts_ord_52 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1711
@.str.5.160 = private unnamed_addr constant [51 x i8] c"%c: Failed call clock_control_get_rate(pclken[0])\0A\00", align 1
@.str.6.161 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.7.162 = private unnamed_addr constant [28 x i8] c"((config->usart->BRR)) > 16\00", align 1
@.str.8.163 = private unnamed_addr constant [40 x i8] c"ZEPHYR_BASE/drivers/serial/uart_stm32.c\00", align 1
@.str.9.164 = private unnamed_addr constant [20 x i8] c"\09BaudRateReg >= 16\0A\00", align 1
@.str.10.172 = private unnamed_addr constant [36 x i8] c"%c: clock control device not ready\0A\00", align 1
@.str.11.174 = private unnamed_addr constant [37 x i8] c"%c: Could not enable (LP)UART clock\0A\00", align 1
@.str.12.175 = private unnamed_addr constant [55 x i8] c"%c: Invalid parity setting '%d'.Defaulting to 'none'.\0A\00", align 1
@__device_dts_ord_8 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.130, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_8, i8* null, i16* getelementptr inbounds ([15 x i16], [15 x i16]* @__devicehdl_dts_ord_8, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !1040
@pclken_1 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 131072 }], align 4, !dbg !1724
@__pinctrl_dev_config__device_dts_ord_42 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_42, i32 0, i32 0), i8 1 }, align 4, !dbg !1726
@__pinctrl_states__device_dts_ord_42 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_42, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1728
@__pinctrl_state_pins_0__device_dts_ord_42 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1703, i32 512 }, %struct._thread_arch { i32 1735, i32 0 }], align 4, !dbg !1730
@pclken_2 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 262144 }], align 4, !dbg !1736
@__pinctrl_dev_config__device_dts_ord_45 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_45, i32 0, i32 0), i8 1 }, align 4, !dbg !1738
@__pinctrl_states__device_dts_ord_45 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_45, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1740
@__pinctrl_state_pins_0__device_dts_ord_45 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1799, i32 512 }, %struct._thread_arch { i32 1831, i32 0 }], align 4, !dbg !1742
@pclken_3 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 524288 }], align 4, !dbg !1748
@__pinctrl_dev_config__device_dts_ord_48 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_48, i32 0, i32 0), i8 1 }, align 4, !dbg !1750
@__pinctrl_states__device_dts_ord_48 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_48, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1752
@__pinctrl_state_pins_0__device_dts_ord_48 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1352, i32 512 }, %struct._thread_arch { i32 1384, i32 0 }], align 4, !dbg !1754
@switch.table.uart_stm32_init = private unnamed_addr constant [3 x i32] [i32 0, i32 1536, i32 1024], align 4
@switch.table.uart_stm32_init.13 = private unnamed_addr constant [3 x i32] [i32 0, i32 4096, i32 4096], align 4
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1763
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1874
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1876
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1872
@lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !1867
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1841
@.str.179 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.180 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.2.181 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.3.182 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.4.183 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.5.184 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_90, %struct.device* @__device_dts_ord_91, %struct.device* @__device_dts_ord_92, %struct.device* @__device_dts_ord_19, %struct.device* @__device_dts_ord_93, %struct.device* @__device_dts_ord_94, %struct.device* @__device_dts_ord_95, %struct.device* @__device_dts_ord_96, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1878
@__device_dts_ord_90 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.139, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_90, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_90, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1351
@__device_dts_ord_91 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.147, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_91, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_91, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1365
@__device_dts_ord_92 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.148, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_92, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_92, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1371
@__device_dts_ord_19 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.149, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_19, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_19, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1380
@__device_dts_ord_93 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.150, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_93, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_93, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1386
@__device_dts_ord_94 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.151, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_94, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_94, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1392
@__device_dts_ord_95 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.152, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_95, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_95, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1398
@__device_dts_ord_96 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7.153, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_96, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_96, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1404
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1968
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !2012
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !2015
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !2022
@.str.218 = private unnamed_addr constant [20 x i8] c"%c: Halting system\0A\00", align 1
@.str.1.222 = private unnamed_addr constant [45 x i8] c"%c: >>> ZEPHYR FATAL ERROR %d: %s on CPU %d\0A\00", align 1
@.str.2.223 = private unnamed_addr constant [38 x i8] c"%c: Fault during interrupt handling\0A\0A\00", align 1
@.str.3.224 = private unnamed_addr constant [29 x i8] c"%c: Current thread: %p (%s)\0A\00", align 1
@.str.4.228 = private unnamed_addr constant [14 x i8] c"CPU exception\00", align 1
@.str.5.229 = private unnamed_addr constant [20 x i8] c"Unhandled interrupt\00", align 1
@.str.6.230 = private unnamed_addr constant [15 x i8] c"Stack overflow\00", align 1
@.str.7.231 = private unnamed_addr constant [12 x i8] c"Kernel oops\00", align 1
@.str.8.232 = private unnamed_addr constant [13 x i8] c"Kernel panic\00", align 1
@.str.9.227 = private unnamed_addr constant [14 x i8] c"Unknown error\00", align 1
@.str.10.226 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@switch.table.reason_to_str = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.228, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.229, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6.230, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7.231, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8.232, i32 0, i32 0)], align 4
@.str.234 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@log_const_os = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.234, i32 0, i32 0), i8 3 }, section ".log_const_os", align 4, !dbg !2029
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !2253
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2242
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2248
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2260
@.str.5.240 = private unnamed_addr constant [5 x i8] c"idle\00", align 1
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2265
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.6.244 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.251, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.252, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.253, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.254, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.255, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.256, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.250, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.257, i32 0, i32 0)], align 4, !dbg !2295
@.str.251 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.252 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.253 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.254 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.255 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.256 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.250 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.257 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2410
@.str.8.249 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.9.262 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.10.263 = private unnamed_addr constant [128 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((entry))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.11.264 = private unnamed_addr constant [28 x i8] c"ZEPHYR_BASE/kernel/thread.c\00", align 1
@.str.12.265 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.13.269 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.14.270 = private unnamed_addr constant [37 x i8] c"\09Threads may not be created in ISRs\0A\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@.str.15.274 = private unnamed_addr constant [45 x i8] c"thread_data <= __static_thread_data_list_end\00", align 1
@.str.16.275 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.284 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.285 = private unnamed_addr constant [40 x i8] c"_kernel.cpus[0].current->base.prio >= 0\00", align 1
@.str.2.286 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/kernel/idle.c\00", align 1
@sched_spinlock = dso_local global %struct.k_spinlock zeroinitializer, align 4, !dbg !2423
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2534
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2537
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2539
@.str.287 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.303 = private unnamed_addr constant [61 x i8] c"thread == _kernel.cpus[0].current || is_thread_dummy(thread)\00", align 1
@.str.2.294 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/sched.c\00", align 1
@.str.3.308 = private unnamed_addr constant [55 x i8] c"sizeof(sched_spinlock) == 0 || lock != &sched_spinlock\00", align 1
@.str.4.316 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 0U\00", align 1
@.str.5.296 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.6.311 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.7.293 = private unnamed_addr constant [33 x i8] c"!z_is_idle_thread_object(thread)\00", align 1
@.str.8.320 = private unnamed_addr constant [134 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((((void *)0)))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.9.321 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.10.327 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.328 = private unnamed_addr constant [31 x i8] c"\09aborting essential thread %p\0A\00", align 1
@.str.12.329 = private unnamed_addr constant [34 x i8] c"\09aborted _current back from dead\0A\00", align 1
@.str.13.332 = private unnamed_addr constant [21 x i8] c"\09cannot join in ISR\0A\00", align 1
@.str.14.288 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.15.289 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.16.290 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.17.291 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.18.292 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.19.295 = private unnamed_addr constant [39 x i8] c"_kernel.cpus[0].current != ((void *)0)\00", align 1
@.str.20.307 = private unnamed_addr constant [23 x i8] c"thread->base.pended_on\00", align 1
@.str.21.312 = private unnamed_addr constant [36 x i8] c"ZEPHYR_BASE/kernel/include/ksched.h\00", align 1
@.str.22.313 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 1U\00", align 1
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2250
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2258
@.str.23.322 = private unnamed_addr constant [64 x i8] c"!z_is_thread_state_set(_kernel.cpus[0].current, ((1UL << (4))))\00", align 1
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@.str.338 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.339 = private unnamed_addr constant [32 x i8] c"!sys_dnode_is_linked(&to->node)\00", align 1
@.str.2.340 = private unnamed_addr constant [29 x i8] c"ZEPHYR_BASE/kernel/timeout.c\00", align 1
@.str.3.341 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@timeout_lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2541
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2571
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2576
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !2116
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2574
@.str.4.342 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.343 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.344 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.348 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.349 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.369 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3146 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #23, !dbg !3150, !srcloc !3151
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #23, !dbg !3152, !srcloc !3153
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #23, !dbg !3154, !srcloc !3155
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #23, !dbg !3156, !srcloc !3157
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3158, !srcloc !3159
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #23, !dbg !3160, !srcloc !3161
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #23, !dbg !3162, !srcloc !3163
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #23, !dbg !3164, !srcloc !3165
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #23, !dbg !3166, !srcloc !3167
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #23, !dbg !3168, !srcloc !3169
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #23, !dbg !3170, !srcloc !3171
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #23, !dbg !3172, !srcloc !3173
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #23, !dbg !3174, !srcloc !3175
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #23, !dbg !3176, !srcloc !3177
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #23, !dbg !3178, !srcloc !3179
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #23, !dbg !3180, !srcloc !3181
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #23, !dbg !3182, !srcloc !3183
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -149) #23, !dbg !3184, !srcloc !3185
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3186, !srcloc !3187
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #23, !dbg !3188, !srcloc !3189
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -133) #23, !dbg !3190, !srcloc !3191
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -161) #23, !dbg !3192, !srcloc !3193
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #23, !dbg !3194, !srcloc !3195
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3196, !srcloc !3197
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #23, !dbg !3198, !srcloc !3199
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #23, !dbg !3200, !srcloc !3201
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #23, !dbg !3202, !srcloc !3203
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #23, !dbg !3204, !srcloc !3207
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #23, !dbg !3208, !srcloc !3209
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3210, !srcloc !3211
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3212, !srcloc !3213
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3214, !srcloc !3215
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3216, !srcloc !3217
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #23, !dbg !3218, !srcloc !3219
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #23, !dbg !3220, !srcloc !3221
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #23, !dbg !3222, !srcloc !3223
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #23, !dbg !3224, !srcloc !3225
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3226, !srcloc !3227
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3228, !srcloc !3229
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3230, !srcloc !3231
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3232, !srcloc !3233
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3234, !srcloc !3235
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3236, !srcloc !3237
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #23, !dbg !3238, !srcloc !3239
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #23, !dbg !3240, !srcloc !3241
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #23, !dbg !3242, !srcloc !3243
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #23, !dbg !3244, !srcloc !3245
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #23, !dbg !3246, !srcloc !3247
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #23, !dbg !3248, !srcloc !3249
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3250, !srcloc !3251
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #23, !dbg !3252, !srcloc !3253
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -161) #23, !dbg !3254, !srcloc !3255
  ret void, !dbg !3256
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal void @_framework_tests_test_assert_wrapper(i8* nocapture noundef %0) #2 !dbg !3259 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3261, metadata !DIExpression()), !dbg !3262
  ret void, !dbg !3263
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) local_unnamed_addr #1 !dbg !3264 {
  %6 = alloca [16 x i8], align 1
  %7 = alloca [16 x i8], align 1
  %8 = extractvalue [1 x i32] %4, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !3279, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i8* %0, metadata !3275, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i32 %1, metadata !3276, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i32 %2, metadata !3277, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i8* %3, metadata !3278, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i8* %0, metadata !3280, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i8* %0, metadata !3281, metadata !DIExpression()), !dbg !3342
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !3343
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #23, !dbg !3343
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !3284, metadata !DIExpression()), !dbg !3344
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !3345
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #23, !dbg !3345
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !3286, metadata !DIExpression()), !dbg !3346
  call void @llvm.dbg.value(metadata i32 0, metadata !3287, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i32 0, metadata !3288, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i32 0, metadata !3289, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i32 -1, metadata !3290, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i8 0, metadata !3293, metadata !DIExpression()), !dbg !3342
  %12 = and i32 %2, 4, !dbg !3347
  %13 = icmp eq i32 %12, 0, !dbg !3348
  call void @llvm.dbg.value(metadata i1 %13, metadata !3294, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3342
  %14 = lshr i32 %2, 3, !dbg !3349
  %15 = and i32 %14, 7, !dbg !3349
  %16 = add nuw nsw i32 %15, 1, !dbg !3350
  call void @llvm.dbg.value(metadata i32 %16, metadata !3295, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i8 0, metadata !3296, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i8* %0, metadata !3297, metadata !DIExpression()), !dbg !3342
  %17 = ptrtoint i8* %0 to i32, !dbg !3351
  %18 = and i32 %17, 3, !dbg !3353
  %19 = icmp eq i32 %18, 0, !dbg !3353
  br i1 %19, label %20, label %320, !dbg !3354

20:                                               ; preds = %5
  %21 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !3355
  call void @llvm.dbg.value(metadata i8* %21, metadata !3281, metadata !DIExpression()), !dbg !3342
  %22 = icmp eq i8* %0, null, !dbg !3356
  %23 = and i32 %1, 7, !dbg !3358
  %24 = sub nuw nsw i32 8, %23, !dbg !3358
  %25 = select i1 %22, i32 %23, i32 0, !dbg !3358
  %26 = getelementptr i8, i8* %21, i32 %25, !dbg !3358
  %27 = select i1 %22, i32 %24, i32 %1, !dbg !3358
  call void @llvm.dbg.value(metadata i32 %27, metadata !3276, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i8* %26, metadata !3281, metadata !DIExpression()), !dbg !3342
  br i1 %22, label %33, label %28, !dbg !3359

28:                                               ; preds = %20
  %29 = ptrtoint i8* %26 to i32, !dbg !3361
  %30 = sub i32 4, %17, !dbg !3361
  %31 = add i32 %30, %29, !dbg !3362
  %32 = icmp ugt i32 %31, %27, !dbg !3363
  br i1 %32, label %320, label %33, !dbg !3364

33:                                               ; preds = %28, %20
  %34 = getelementptr inbounds i8, i8* %3, i32 -1, !dbg !3365
  call void @llvm.dbg.value(metadata i8* %34, metadata !3278, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i8* %3, metadata !3292, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i32 4, metadata !3283, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i32 4, metadata !3282, metadata !DIExpression()), !dbg !3342
  %35 = and i32 %2, 2
  %36 = icmp ne i32 %35, 0
  %37 = sub i32 8, %17
  br label %130, !dbg !3366

38:                                               ; preds = %63, %219
  %39 = phi i8 [ %224, %219 ], [ %64, %63 ]
  %40 = phi i8* [ %223, %219 ], [ %65, %63 ]
  %41 = phi i8* [ %221, %219 ], [ %66, %63 ]
  %42 = phi i8* [ %40, %219 ], [ %67, %63 ]
  %43 = phi i8* [ %222, %219 ], [ %68, %63 ]
  %44 = phi i32 [ %113, %219 ], [ %69, %63 ]
  %45 = phi i32 [ %112, %219 ], [ %70, %63 ]
  %46 = phi i1 [ %110, %219 ], [ %71, %63 ]
  call void @llvm.dbg.value(metadata i8* %41, metadata !3279, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i8* %42, metadata !3278, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i8* %43, metadata !3281, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i32 %44, metadata !3282, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i32 %45, metadata !3283, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i32 %72, metadata !3290, metadata !DIExpression()), !dbg !3342
  br i1 %46, label %73, label %47, !dbg !3367

47:                                               ; preds = %38
  %48 = icmp eq i8 %39, 37, !dbg !3368
  %49 = zext i1 %48 to i32, !dbg !3372
  %50 = add nsw i32 %72, %49, !dbg !3372
  %51 = select i1 %48, i32 4, i32 %45, !dbg !3372
  %52 = select i1 %48, i32 4, i32 %44, !dbg !3372
  call void @llvm.dbg.value(metadata i32 %52, metadata !3282, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i32 %51, metadata !3283, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i8 poison, metadata !3293, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i32 %50, metadata !3290, metadata !DIExpression()), !dbg !3342
  br label %53, !dbg !3373

53:                                               ; preds = %73, %47, %74, %76, %77, %78, %106, %104
  %54 = phi i32 [ %72, %106 ], [ %72, %104 ], [ %72, %78 ], [ %72, %77 ], [ %72, %76 ], [ %75, %74 ], [ %50, %47 ], [ %72, %73 ]
  %55 = phi i1 [ false, %106 ], [ false, %104 ], [ true, %78 ], [ true, %77 ], [ true, %76 ], [ false, %74 ], [ %48, %47 ], [ true, %73 ]
  %56 = phi i32 [ %45, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %45, %76 ], [ %45, %74 ], [ %51, %47 ], [ 8, %73 ]
  %57 = phi i32 [ %44, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %44, %76 ], [ %44, %74 ], [ %52, %47 ], [ 8, %73 ]
  %58 = phi i8* [ %43, %106 ], [ %105, %104 ], [ %43, %78 ], [ %43, %77 ], [ %43, %76 ], [ %43, %74 ], [ %43, %47 ], [ %43, %73 ]
  %59 = phi i8* [ %41, %106 ], [ %93, %104 ], [ %41, %78 ], [ %41, %77 ], [ %41, %76 ], [ %41, %74 ], [ %41, %47 ], [ %41, %73 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !3279, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i8* %40, metadata !3278, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i8* %58, metadata !3281, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i32 %57, metadata !3282, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i32 %56, metadata !3283, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i8 poison, metadata !3293, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i32 %54, metadata !3290, metadata !DIExpression()), !dbg !3342
  %60 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3374
  call void @llvm.dbg.value(metadata i8* %60, metadata !3278, metadata !DIExpression()), !dbg !3342
  %61 = load i8, i8* %60, align 1, !dbg !3376
  %62 = icmp eq i8 %61, 0, !dbg !3377
  br i1 %62, label %226, label %63, !dbg !3378, !llvm.loop !3379

63:                                               ; preds = %192, %53
  %64 = phi i8 [ %61, %53 ], [ %199, %192 ]
  %65 = phi i8* [ %60, %53 ], [ %198, %192 ]
  %66 = phi i8* [ %59, %53 ], [ %143, %192 ]
  %67 = phi i8* [ %40, %53 ], [ %141, %192 ]
  %68 = phi i8* [ %58, %53 ], [ %197, %192 ]
  %69 = phi i32 [ %57, %53 ], [ %139, %192 ]
  %70 = phi i32 [ %56, %53 ], [ %138, %192 ]
  %71 = phi i1 [ %55, %53 ], [ %134, %192 ]
  %72 = phi i32 [ %54, %53 ], [ %132, %192 ]
  br label %38, !dbg !3367

73:                                               ; preds = %38
  switch i8 %39, label %106 [
    i8 37, label %74
    i8 35, label %76
    i8 45, label %76
    i8 43, label %76
    i8 32, label %76
    i8 48, label %76
    i8 49, label %76
    i8 50, label %76
    i8 51, label %76
    i8 52, label %76
    i8 53, label %76
    i8 54, label %76
    i8 55, label %76
    i8 56, label %76
    i8 57, label %76
    i8 46, label %76
    i8 104, label %76
    i8 108, label %76
    i8 76, label %76
    i8 42, label %108
    i8 106, label %53
    i8 122, label %77
    i8 116, label %78
    i8 99, label %79
    i8 100, label %79
    i8 105, label %79
    i8 111, label %79
    i8 117, label %79
    i8 120, label %79
    i8 88, label %79
    i8 115, label %109
    i8 112, label %107
    i8 110, label %107
    i8 97, label %87
    i8 65, label %87
    i8 101, label %87
    i8 69, label %87
    i8 102, label %87
    i8 70, label %87
    i8 103, label %87
    i8 71, label %87
  ], !dbg !3382

74:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3293, metadata !DIExpression()), !dbg !3342
  %75 = add nsw i32 %72, -1, !dbg !3383
  call void @llvm.dbg.value(metadata i32 %75, metadata !3290, metadata !DIExpression()), !dbg !3342
  br label %53, !dbg !3384

76:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73
  br label %53, !dbg !3385

77:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3283, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i32 4, metadata !3282, metadata !DIExpression()), !dbg !3342
  br label %53, !dbg !3386

78:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3283, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i32 4, metadata !3282, metadata !DIExpression()), !dbg !3342
  br label %53, !dbg !3387

79:                                               ; preds = %73, %73, %73, %73, %73, %73, %73
  %80 = load i8, i8* %42, align 1, !dbg !3388
  %81 = icmp eq i8 %80, 108, !dbg !3390
  br i1 %81, label %82, label %109, !dbg !3391

82:                                               ; preds = %79
  %83 = getelementptr inbounds i8, i8* %42, i32 -1, !dbg !3392
  %84 = load i8, i8* %83, align 1, !dbg !3392
  %85 = icmp eq i8 %84, 108, !dbg !3395
  %86 = select i1 %85, i32 8, i32 4
  br label %109

87:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73
  %88 = ptrtoint i8* %41 to i32, !dbg !3396
  %89 = add i32 %88, 7, !dbg !3396
  %90 = and i32 %89, -8, !dbg !3396
  %91 = inttoptr i32 %90 to i8*, !dbg !3396
  %92 = inttoptr i32 %90 to double*, !dbg !3396
  %93 = getelementptr inbounds i8, i8* %91, i32 8, !dbg !3396
  %94 = load double, double* %92, align 8, !dbg !3396
  call void @llvm.dbg.value(metadata i8* %93, metadata !3279, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i32 8, metadata !3282, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i32 8, metadata !3283, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata double %94, metadata !3310, metadata !DIExpression()), !dbg !3398
  %95 = ptrtoint i8* %43 to i32, !dbg !3399
  %96 = add i32 %95, 7, !dbg !3399
  %97 = and i32 %96, -8, !dbg !3399
  %98 = inttoptr i32 %97 to i8*, !dbg !3400
  call void @llvm.dbg.value(metadata i8* %98, metadata !3281, metadata !DIExpression()), !dbg !3342
  br i1 %22, label %104, label %99, !dbg !3401

99:                                               ; preds = %87
  %100 = add i32 %37, %97, !dbg !3402
  %101 = icmp ugt i32 %100, %196, !dbg !3406
  br i1 %101, label %320, label %102, !dbg !3407

102:                                              ; preds = %99
  %103 = inttoptr i32 %97 to double*, !dbg !3408
  store double %94, double* %103, align 8, !dbg !3408
  br label %104

104:                                              ; preds = %102, %87
  %105 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !3411
  call void @llvm.dbg.value(metadata i8* %105, metadata !3281, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i8 poison, metadata !3293, metadata !DIExpression()), !dbg !3342
  br label %53

106:                                              ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3293, metadata !DIExpression()), !dbg !3342
  br label %53, !dbg !3412

107:                                              ; preds = %73, %73
  br label %109, !dbg !3413

108:                                              ; preds = %73
  br label %109, !dbg !3413

109:                                              ; preds = %73, %108, %107, %79, %82
  %110 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ true, %108 ], [ false, %73 ]
  %111 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ false, %108 ], [ true, %73 ]
  %112 = phi i32 [ %86, %82 ], [ %45, %79 ], [ 4, %107 ], [ %45, %108 ], [ 4, %73 ], !dbg !3342
  %113 = phi i32 [ %86, %82 ], [ %44, %79 ], [ 4, %107 ], [ %44, %108 ], [ 4, %73 ], !dbg !3342
  call void @llvm.dbg.value(metadata i32 %113, metadata !3282, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i32 %112, metadata !3283, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i8 poison, metadata !3296, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i8 poison, metadata !3293, metadata !DIExpression()), !dbg !3342
  %114 = ptrtoint i8* %43 to i32, !dbg !3413
  %115 = add i32 %114, -1, !dbg !3413
  %116 = add i32 %115, %112, !dbg !3413
  %117 = sub i32 0, %112, !dbg !3413
  %118 = and i32 %116, %117, !dbg !3413
  %119 = inttoptr i32 %118 to i8*, !dbg !3414
  call void @llvm.dbg.value(metadata i8* %119, metadata !3281, metadata !DIExpression()), !dbg !3342
  br i1 %22, label %124, label %120, !dbg !3415

120:                                              ; preds = %109
  %121 = sub i32 %113, %17, !dbg !3417
  %122 = add i32 %121, %118, !dbg !3418
  %123 = icmp ugt i32 %122, %196, !dbg !3419
  br i1 %123, label %320, label %124, !dbg !3420

124:                                              ; preds = %120, %109
  br i1 %111, label %125, label %201, !dbg !3421

125:                                              ; preds = %124
  %126 = inttoptr i32 %118 to i8*, !dbg !3414
  %127 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3422
  call void @llvm.dbg.value(metadata i8* %127, metadata !3279, metadata !DIExpression()), !dbg !3342
  %128 = bitcast i8* %41 to i8**, !dbg !3422
  %129 = load i8*, i8** %128, align 4, !dbg !3422
  call void @llvm.dbg.value(metadata i8* %129, metadata !3292, metadata !DIExpression()), !dbg !3342
  br label %130, !dbg !3423

130:                                              ; preds = %125, %33
  %131 = phi i32 [ 0, %33 ], [ %193, %125 ], !dbg !3342
  %132 = phi i32 [ -1, %33 ], [ %72, %125 ], !dbg !3424
  %133 = phi i8* [ %3, %33 ], [ %129, %125 ], !dbg !3342
  %134 = phi i1 [ false, %33 ], [ %110, %125 ]
  %135 = phi i32 [ 0, %33 ], [ %194, %125 ], !dbg !3425
  %136 = phi i32 [ %16, %33 ], [ %147, %125 ], !dbg !3342
  %137 = phi i32 [ 0, %33 ], [ %195, %125 ], !dbg !3342
  %138 = phi i32 [ 4, %33 ], [ %112, %125 ], !dbg !3342
  %139 = phi i32 [ 4, %33 ], [ %113, %125 ], !dbg !3342
  %140 = phi i8* [ %26, %33 ], [ %126, %125 ], !dbg !3342
  %141 = phi i8* [ %34, %33 ], [ %40, %125 ], !dbg !3342
  %142 = phi i32 [ %27, %33 ], [ %196, %125 ], !dbg !3426
  %143 = phi i8* [ %9, %33 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i8* %143, metadata !3279, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i32 %142, metadata !3276, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i8* %141, metadata !3278, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i8* %140, metadata !3281, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i32 %139, metadata !3282, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i32 %138, metadata !3283, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i32 %137, metadata !3287, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i32 %136, metadata !3295, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i32 %135, metadata !3288, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i8 poison, metadata !3293, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i8* %133, metadata !3292, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i32 %132, metadata !3290, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i32 %131, metadata !3289, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.label(metadata !3341), !dbg !3428
  br i1 %22, label %146, label %144, !dbg !3429

144:                                              ; preds = %130
  %145 = bitcast i8* %140 to i8**, !dbg !3430
  store i8* %133, i8** %145, align 4, !dbg !3433
  br label %146, !dbg !3434

146:                                              ; preds = %144, %130
  %147 = add nsw i32 %136, -1, !dbg !3435
  call void @llvm.dbg.value(metadata i32 %147, metadata !3295, metadata !DIExpression()), !dbg !3342
  %148 = icmp sgt i32 %136, 0, !dbg !3436
  br i1 %148, label %152, label %149, !dbg !3437

149:                                              ; preds = %146
  %150 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %133) #24, !dbg !3438
  %151 = zext i1 %150 to i32, !dbg !3438
  br label %152, !dbg !3437

152:                                              ; preds = %146, %149
  %153 = phi i32 [ %151, %149 ], [ 1, %146 ], !dbg !3437
  %154 = icmp eq i32 %153, 0, !dbg !3437
  call void @llvm.dbg.value(metadata i1 %154, metadata !3319, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3439
  call void @llvm.dbg.value(metadata i1 %36, metadata !3322, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3439
  %155 = or i1 %36, %154, !dbg !3440
  br i1 %155, label %156, label %192, !dbg !3440

156:                                              ; preds = %152
  %157 = ptrtoint i8* %140 to i32, !dbg !3441
  %158 = sub i32 %157, %17, !dbg !3441
  %159 = lshr i32 %158, 2, !dbg !3442
  call void @llvm.dbg.value(metadata i32 %159, metadata !3323, metadata !DIExpression()), !dbg !3443
  %160 = icmp ugt i32 %158, 511
  %161 = select i1 %36, i1 %160, i1 false, !dbg !3444
  br i1 %161, label %162, label %163, !dbg !3444

162:                                              ; preds = %156
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 635) #25, !dbg !3446
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4, i32 0, i32 0)) #25, !dbg !3446
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 635) #25, !dbg !3446
  unreachable, !dbg !3446

163:                                              ; preds = %156
  %164 = icmp ugt i32 %137, 15, !dbg !3451
  br i1 %164, label %165, label %166, !dbg !3453

165:                                              ; preds = %163
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 640) #25, !dbg !3454
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i32 0, i32 0)) #25, !dbg !3454
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 640) #25, !dbg !3454
  unreachable, !dbg !3454

166:                                              ; preds = %163
  br i1 %22, label %177, label %167, !dbg !3459

167:                                              ; preds = %166
  %168 = trunc i32 %159 to i8, !dbg !3460
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %137, !dbg !3463
  store i8 %168, i8* %169, align 1, !dbg !3464
  %170 = trunc i32 %132 to i8, !dbg !3465
  %171 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %137, !dbg !3466
  store i8 %170, i8* %171, align 1, !dbg !3467
  br i1 %154, label %175, label %172, !dbg !3468

172:                                              ; preds = %167
  %173 = or i8 %168, -128, !dbg !3469
  store i8 %173, i8* %169, align 1, !dbg !3469
  %174 = add i32 %131, 1, !dbg !3472
  call void @llvm.dbg.value(metadata i32 %174, metadata !3289, metadata !DIExpression()), !dbg !3342
  br label %187, !dbg !3473

175:                                              ; preds = %167
  %176 = add i32 %135, 1, !dbg !3474
  call void @llvm.dbg.value(metadata i32 %176, metadata !3288, metadata !DIExpression()), !dbg !3342
  br label %187

177:                                              ; preds = %166
  br i1 %154, label %180, label %178, !dbg !3476

178:                                              ; preds = %177
  %179 = add i32 %142, 1, !dbg !3477
  call void @llvm.dbg.value(metadata i32 %179, metadata !3276, metadata !DIExpression()), !dbg !3342
  br label %187, !dbg !3480

180:                                              ; preds = %177
  br i1 %13, label %183, label %181, !dbg !3481

181:                                              ; preds = %180
  %182 = add i32 %142, 2, !dbg !3482
  call void @llvm.dbg.value(metadata i32 %182, metadata !3276, metadata !DIExpression()), !dbg !3342
  br label %187, !dbg !3485

183:                                              ; preds = %180
  %184 = tail call i32 @strlen(i8* noundef %133) #25, !dbg !3486
  %185 = add i32 %142, 2, !dbg !3488
  %186 = add i32 %185, %184, !dbg !3489
  call void @llvm.dbg.value(metadata i32 %186, metadata !3276, metadata !DIExpression()), !dbg !3342
  br label %187

187:                                              ; preds = %178, %183, %181, %172, %175
  %188 = phi i32 [ %174, %172 ], [ %131, %175 ], [ %131, %178 ], [ %131, %181 ], [ %131, %183 ], !dbg !3342
  %189 = phi i32 [ %135, %172 ], [ %176, %175 ], [ %135, %178 ], [ %135, %181 ], [ %135, %183 ], !dbg !3342
  %190 = phi i32 [ %142, %172 ], [ %142, %175 ], [ %179, %178 ], [ %182, %181 ], [ %186, %183 ], !dbg !3342
  call void @llvm.dbg.value(metadata i32 %190, metadata !3276, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i32 %189, metadata !3288, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i32 %188, metadata !3289, metadata !DIExpression()), !dbg !3342
  %191 = add nuw nsw i32 %137, 1, !dbg !3490
  call void @llvm.dbg.value(metadata i32 %191, metadata !3287, metadata !DIExpression()), !dbg !3342
  br label %192

192:                                              ; preds = %152, %187
  %193 = phi i32 [ %188, %187 ], [ %131, %152 ], !dbg !3342
  %194 = phi i32 [ %189, %187 ], [ %135, %152 ], !dbg !3425
  %195 = phi i32 [ %191, %187 ], [ %137, %152 ], !dbg !3342
  %196 = phi i32 [ %190, %187 ], [ %142, %152 ], !dbg !3426
  call void @llvm.dbg.value(metadata i32 %196, metadata !3276, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i32 %195, metadata !3287, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i32 %194, metadata !3288, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i32 %193, metadata !3289, metadata !DIExpression()), !dbg !3342
  %197 = getelementptr inbounds i8, i8* %140, i32 4, !dbg !3491
  call void @llvm.dbg.value(metadata i8* %197, metadata !3281, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i8* %143, metadata !3279, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i8* %141, metadata !3278, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i32 %139, metadata !3282, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i32 %138, metadata !3283, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i8 poison, metadata !3296, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i8 poison, metadata !3293, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i32 %132, metadata !3290, metadata !DIExpression()), !dbg !3342
  %198 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !3374
  call void @llvm.dbg.value(metadata i8* %198, metadata !3278, metadata !DIExpression()), !dbg !3342
  %199 = load i8, i8* %198, align 1, !dbg !3376
  %200 = icmp eq i8 %199, 0, !dbg !3377
  br i1 %200, label %226, label %63, !dbg !3378

201:                                              ; preds = %124
  switch i32 %113, label %218 [
    i32 4, label %202
    i32 8, label %208
  ], !dbg !3492

202:                                              ; preds = %201
  %203 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3493
  call void @llvm.dbg.value(metadata i8* %203, metadata !3279, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i32 undef, metadata !3326, metadata !DIExpression()), !dbg !3494
  br i1 %22, label %219, label %204, !dbg !3495

204:                                              ; preds = %202
  %205 = bitcast i8* %41 to i32*, !dbg !3493
  %206 = load i32, i32* %205, align 4, !dbg !3493
  call void @llvm.dbg.value(metadata i32 %206, metadata !3326, metadata !DIExpression()), !dbg !3494
  %207 = inttoptr i32 %118 to i32*, !dbg !3496
  store i32 %206, i32* %207, align 4, !dbg !3499
  br label %219, !dbg !3500

208:                                              ; preds = %201
  %209 = ptrtoint i8* %41 to i32, !dbg !3501
  %210 = add i32 %209, 7, !dbg !3501
  %211 = and i32 %210, -8, !dbg !3501
  %212 = inttoptr i32 %211 to i8*, !dbg !3501
  %213 = getelementptr inbounds i8, i8* %212, i32 8, !dbg !3501
  call void @llvm.dbg.value(metadata i8* %213, metadata !3279, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i64 undef, metadata !3332, metadata !DIExpression()), !dbg !3502
  br i1 %22, label %219, label %214, !dbg !3503

214:                                              ; preds = %208
  %215 = inttoptr i32 %211 to i64*, !dbg !3501
  %216 = load i64, i64* %215, align 8, !dbg !3501
  call void @llvm.dbg.value(metadata i64 %216, metadata !3332, metadata !DIExpression()), !dbg !3502
  %217 = inttoptr i32 %118 to i64*, !dbg !3504
  store i64 %216, i64* %217, align 8, !dbg !3509
  br label %219, !dbg !3510

218:                                              ; preds = %201
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 709) #25, !dbg !3511
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i32 0, i32 0), i32 noundef %113) #25, !dbg !3511
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 709) #25, !dbg !3511
  unreachable, !dbg !3511

219:                                              ; preds = %208, %214, %202, %204
  %220 = phi i32 [ 4, %204 ], [ 4, %202 ], [ 8, %214 ], [ 8, %208 ]
  %221 = phi i8* [ %203, %204 ], [ %203, %202 ], [ %213, %214 ], [ %213, %208 ], !dbg !3516
  %222 = getelementptr inbounds i8, i8* %119, i32 %220, !dbg !3516
  call void @llvm.dbg.value(metadata i8* %221, metadata !3279, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i8* %40, metadata !3278, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i8* %222, metadata !3281, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i32 %113, metadata !3282, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i32 %112, metadata !3283, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i8 poison, metadata !3296, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i8 poison, metadata !3293, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i32 %72, metadata !3290, metadata !DIExpression()), !dbg !3342
  %223 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3374
  call void @llvm.dbg.value(metadata i8* %223, metadata !3278, metadata !DIExpression()), !dbg !3342
  %224 = load i8, i8* %223, align 1, !dbg !3376
  %225 = icmp eq i8 %224, 0, !dbg !3377
  br i1 %225, label %226, label %38, !dbg !3378

226:                                              ; preds = %192, %219, %53
  %227 = phi i8* [ %222, %219 ], [ %58, %53 ], [ %197, %192 ], !dbg !3517
  %228 = ptrtoint i8* %227 to i32, !dbg !3518
  %229 = sub i32 %228, %17, !dbg !3518
  %230 = lshr i32 %229, 2, !dbg !3520
  %231 = icmp ugt i32 %229, 1023, !dbg !3521
  br i1 %231, label %232, label %233, !dbg !3522

232:                                              ; preds = %226
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 721) #25, !dbg !3523
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i32 0, i32 0)) #25, !dbg !3523
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 721) #25, !dbg !3523
  unreachable, !dbg !3523

233:                                              ; preds = %226
  br i1 %22, label %234, label %237, !dbg !3528

234:                                              ; preds = %233
  %235 = add i32 %196, -8, !dbg !3529
  %236 = add i32 %235, %229, !dbg !3532
  br label %320, !dbg !3533

237:                                              ; preds = %233
  %238 = trunc i32 %230 to i8, !dbg !3534
  store i8 %238, i8* %0, align 1, !dbg !3535
  %239 = trunc i32 %194 to i8, !dbg !3536
  %240 = select i1 %13, i8 %239, i8 0
  %241 = select i1 %13, i8 0, i8 %239
  %242 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !3538
  store i8 %240, i8* %242, align 1, !dbg !3540
  %243 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !3541
  store i8 %241, i8* %243, align 1, !dbg !3542
  %244 = trunc i32 %193 to i8, !dbg !3543
  %245 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !3544
  store i8 %244, i8* %245, align 1, !dbg !3545
  %246 = icmp eq i32 %193, 0, !dbg !3546
  %247 = xor i1 %246, true, !dbg !3547
  %248 = icmp ne i32 %195, 0
  %249 = select i1 %247, i1 %248, i1 false, !dbg !3547
  call void @llvm.dbg.value(metadata i8* %227, metadata !3281, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i32 0, metadata !3291, metadata !DIExpression()), !dbg !3342
  br i1 %249, label %250, label %269, !dbg !3547

250:                                              ; preds = %237
  %251 = sub i32 1, %17
  br label %252, !dbg !3548

252:                                              ; preds = %250, %265
  %253 = phi i8* [ %227, %250 ], [ %266, %265 ]
  %254 = phi i32 [ 0, %250 ], [ %267, %265 ]
  call void @llvm.dbg.value(metadata i8* %253, metadata !3281, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i32 %254, metadata !3291, metadata !DIExpression()), !dbg !3342
  %255 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %254, !dbg !3549
  %256 = load i8, i8* %255, align 1, !dbg !3549
  %257 = icmp sgt i8 %256, -1, !dbg !3551
  br i1 %257, label %265, label %258, !dbg !3552

258:                                              ; preds = %252
  call void @llvm.dbg.value(metadata i8 %256, metadata !3335, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 127, DW_OP_and, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3553
  %259 = ptrtoint i8* %253 to i32, !dbg !3554
  %260 = add i32 %251, %259, !dbg !3556
  %261 = icmp ugt i32 %260, %196, !dbg !3557
  br i1 %261, label %320, label %262, !dbg !3558

262:                                              ; preds = %258
  %263 = and i8 %256, 127, !dbg !3559
  call void @llvm.dbg.value(metadata i8 %263, metadata !3335, metadata !DIExpression()), !dbg !3553
  %264 = getelementptr inbounds i8, i8* %253, i32 1, !dbg !3560
  call void @llvm.dbg.value(metadata i8* %264, metadata !3281, metadata !DIExpression()), !dbg !3342
  store i8 %263, i8* %253, align 1, !dbg !3561
  br label %265

265:                                              ; preds = %262, %252
  %266 = phi i8* [ %264, %262 ], [ %253, %252 ], !dbg !3491
  call void @llvm.dbg.value(metadata i8* %266, metadata !3281, metadata !DIExpression()), !dbg !3342
  %267 = add nuw i32 %254, 1, !dbg !3562
  call void @llvm.dbg.value(metadata i32 %267, metadata !3291, metadata !DIExpression()), !dbg !3342
  %268 = icmp eq i32 %267, %195, !dbg !3563
  br i1 %268, label %269, label %252, !dbg !3548, !llvm.loop !3564

269:                                              ; preds = %265, %237
  %270 = phi i8* [ %227, %237 ], [ %266, %265 ], !dbg !3491
  call void @llvm.dbg.value(metadata i8* %270, metadata !3281, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i32 0, metadata !3291, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i8* %133, metadata !3292, metadata !DIExpression()), !dbg !3342
  %271 = icmp eq i32 %195, 0, !dbg !3566
  br i1 %271, label %316, label %272, !dbg !3569

272:                                              ; preds = %269
  %273 = sub i32 1, %17
  br label %274, !dbg !3569

274:                                              ; preds = %272, %311
  %275 = phi i8* [ %270, %272 ], [ %313, %311 ]
  %276 = phi i8* [ %133, %272 ], [ %312, %311 ]
  %277 = phi i32 [ 0, %272 ], [ %314, %311 ]
  call void @llvm.dbg.value(metadata i8* %275, metadata !3281, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i8* %276, metadata !3292, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i32 %277, metadata !3291, metadata !DIExpression()), !dbg !3342
  br i1 %246, label %282, label %278, !dbg !3570

278:                                              ; preds = %274
  %279 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3573
  %280 = load i8, i8* %279, align 1, !dbg !3573
  %281 = icmp sgt i8 %280, -1, !dbg !3574
  br i1 %281, label %282, label %311, !dbg !3575

282:                                              ; preds = %278, %274
  br i1 %13, label %287, label %283, !dbg !3576

283:                                              ; preds = %282
  call void @llvm.dbg.value(metadata i32 0, metadata !3282, metadata !DIExpression()), !dbg !3342
  %284 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %277, !dbg !3577
  %285 = load i8, i8* %284, align 1, !dbg !3577
  %286 = getelementptr inbounds i8, i8* %275, i32 1, !dbg !3580
  call void @llvm.dbg.value(metadata i8* %286, metadata !3281, metadata !DIExpression()), !dbg !3342
  store i8 %285, i8* %275, align 1, !dbg !3581
  br label %297, !dbg !3582

287:                                              ; preds = %282
  %288 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3583
  %289 = load i8, i8* %288, align 1, !dbg !3583
  %290 = zext i8 %289 to i32, !dbg !3583
  %291 = shl nuw nsw i32 %290, 2, !dbg !3585
  %292 = getelementptr inbounds i8, i8* %0, i32 %291, !dbg !3586
  %293 = bitcast i8* %292 to i8**, !dbg !3587
  %294 = load i8*, i8** %293, align 4, !dbg !3587
  call void @llvm.dbg.value(metadata i8* %294, metadata !3292, metadata !DIExpression()), !dbg !3342
  store i8* null, i8** %293, align 4, !dbg !3588
  %295 = tail call i32 @strlen(i8* noundef %294) #25, !dbg !3589
  %296 = add i32 %295, 1, !dbg !3590
  call void @llvm.dbg.value(metadata i32 %296, metadata !3282, metadata !DIExpression()), !dbg !3342
  br label %297

297:                                              ; preds = %287, %283
  %298 = phi i8* [ %276, %283 ], [ %294, %287 ], !dbg !3342
  %299 = phi i32 [ 0, %283 ], [ %296, %287 ], !dbg !3591
  %300 = phi i8* [ %286, %283 ], [ %275, %287 ], !dbg !3342
  call void @llvm.dbg.value(metadata i8* %300, metadata !3281, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i32 %299, metadata !3282, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i8* %298, metadata !3292, metadata !DIExpression()), !dbg !3342
  %301 = ptrtoint i8* %300 to i32, !dbg !3592
  %302 = add i32 %273, %299, !dbg !3594
  %303 = add i32 %302, %301, !dbg !3595
  %304 = icmp ugt i32 %303, %196, !dbg !3596
  br i1 %304, label %320, label %305, !dbg !3597

305:                                              ; preds = %297
  %306 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3598
  %307 = load i8, i8* %306, align 1, !dbg !3598
  %308 = getelementptr inbounds i8, i8* %300, i32 1, !dbg !3599
  call void @llvm.dbg.value(metadata i8* %308, metadata !3281, metadata !DIExpression()), !dbg !3342
  store i8 %307, i8* %300, align 1, !dbg !3600
  %309 = tail call i8* @memcpy(i8* noundef nonnull %308, i8* noundef %298, i32 noundef %299) #25, !dbg !3601
  %310 = getelementptr inbounds i8, i8* %308, i32 %299, !dbg !3602
  call void @llvm.dbg.value(metadata i8* %310, metadata !3281, metadata !DIExpression()), !dbg !3342
  br label %311, !dbg !3603

311:                                              ; preds = %278, %305
  %312 = phi i8* [ %276, %278 ], [ %298, %305 ], !dbg !3604
  %313 = phi i8* [ %275, %278 ], [ %310, %305 ], !dbg !3342
  call void @llvm.dbg.value(metadata i8* %313, metadata !3281, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.value(metadata i8* %312, metadata !3292, metadata !DIExpression()), !dbg !3342
  %314 = add nuw i32 %277, 1, !dbg !3605
  call void @llvm.dbg.value(metadata i32 %314, metadata !3291, metadata !DIExpression()), !dbg !3342
  %315 = icmp eq i32 %314, %195, !dbg !3566
  br i1 %315, label %316, label %274, !dbg !3569, !llvm.loop !3606

316:                                              ; preds = %311, %269
  %317 = phi i8* [ %270, %269 ], [ %313, %311 ], !dbg !3491
  %318 = ptrtoint i8* %317 to i32, !dbg !3608
  %319 = sub i32 %318, %17, !dbg !3608
  br label %320, !dbg !3609

320:                                              ; preds = %120, %99, %258, %297, %28, %5, %316, %234
  %321 = phi i32 [ %236, %234 ], [ %319, %316 ], [ -14, %5 ], [ -28, %28 ], [ -28, %297 ], [ -28, %258 ], [ -28, %99 ], [ -28, %120 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #23, !dbg !3610
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #23, !dbg !3610
  ret i32 %321, !dbg !3610
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @ptr_in_rodata(i8* noundef readnone %0) unnamed_addr #2 !dbg !3611 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3615, metadata !DIExpression()), !dbg !3616
  %2 = tail call fastcc zeroext i1 @linker_is_in_rodata(i8* noundef %0) #24, !dbg !3617
  ret i1 %2, !dbg !3618
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @linker_is_in_rodata(i8* noundef readnone %0) unnamed_addr #2 !dbg !3619 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3622, metadata !DIExpression()), !dbg !3623
  %2 = icmp uge i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_start, i32 0, i32 0), !dbg !3624
  %3 = icmp ult i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_end, i32 0, i32 0), !dbg !3625
  %4 = and i1 %2, %3, !dbg !3625
  ret i1 %4, !dbg !3626
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, ...) local_unnamed_addr #1 !dbg !3627 {
  %5 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3631, metadata !DIExpression()), !dbg !3637
  call void @llvm.dbg.value(metadata i32 %1, metadata !3632, metadata !DIExpression()), !dbg !3637
  call void @llvm.dbg.value(metadata i32 %2, metadata !3633, metadata !DIExpression()), !dbg !3637
  call void @llvm.dbg.value(metadata i8* %3, metadata !3634, metadata !DIExpression()), !dbg !3637
  %6 = bitcast %struct.__va_list* %5 to i8*, !dbg !3638
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #23, !dbg !3638
  call void @llvm.dbg.declare(metadata %struct.__va_list* %5, metadata !3635, metadata !DIExpression()), !dbg !3639
  call void @llvm.va_start(i8* nonnull %6), !dbg !3640
  %7 = bitcast %struct.__va_list* %5 to i32*, !dbg !3641
  %8 = load i32, i32* %7, align 4, !dbg !3641
  %9 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !3641
  %10 = call i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %9) #24, !dbg !3641
  call void @llvm.dbg.value(metadata i32 %10, metadata !3636, metadata !DIExpression()), !dbg !3637
  call void @llvm.va_end(i8* nonnull %6), !dbg !3642
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #23, !dbg !3643
  ret i32 %10, !dbg !3644
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #5

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbpprintf_external(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #1 !dbg !3645 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3657, metadata !DIExpression()), !dbg !3676
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !3658, metadata !DIExpression()), !dbg !3676
  call void @llvm.dbg.value(metadata i8* %2, metadata !3659, metadata !DIExpression()), !dbg !3676
  call void @llvm.dbg.value(metadata i8* %3, metadata !3660, metadata !DIExpression()), !dbg !3676
  call void @llvm.dbg.value(metadata i8* %3, metadata !3661, metadata !DIExpression()), !dbg !3676
  call void @llvm.dbg.value(metadata i8* %3, metadata !3662, metadata !DIExpression()), !dbg !3676
  %5 = icmp eq i8* %3, null, !dbg !3677
  br i1 %5, label %45, label %6, !dbg !3679

6:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 undef, metadata !3671, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3676
  %7 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !3680
  %8 = load i8, i8* %7, align 1, !dbg !3680
  %9 = zext i8 %8 to i32, !dbg !3681
  call void @llvm.dbg.value(metadata i32 %9, metadata !3672, metadata !DIExpression()), !dbg !3676
  call void @llvm.dbg.value(metadata i8 undef, metadata !3673, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3676
  call void @llvm.dbg.value(metadata i8 undef, metadata !3674, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3676
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 undef), metadata !3668, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3676
  call void @llvm.dbg.value(metadata i32 0, metadata !3670, metadata !DIExpression()), !dbg !3676
  %10 = icmp eq i8 %8, 0, !dbg !3682
  br i1 %10, label %39, label %11, !dbg !3685

11:                                               ; preds = %6
  %12 = load i8, i8* %3, align 1, !dbg !3686
  call void @llvm.dbg.value(metadata i8 %12, metadata !3671, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3676
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 %12), metadata !3668, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3676
  %13 = zext i8 %12 to i32, !dbg !3687
  call void @llvm.dbg.value(metadata i32 %13, metadata !3671, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3676
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %13), metadata !3668, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3676
  %14 = shl nuw nsw i32 %13, 2, !dbg !3688
  call void @llvm.dbg.value(metadata i32 %14, metadata !3671, metadata !DIExpression()), !dbg !3676
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %14), metadata !3668, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3676
  %15 = getelementptr inbounds i8, i8* %3, i32 %14, !dbg !3689
  call void @llvm.dbg.value(metadata !DIArgList(i8* %15, i8 undef, i8 undef), metadata !3668, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3676
  %16 = getelementptr inbounds i8, i8* %3, i32 2, !dbg !3690
  %17 = load i8, i8* %16, align 1, !dbg !3690
  call void @llvm.dbg.value(metadata i8 %17, metadata !3673, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3676
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 %17, i8 undef), metadata !3668, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3676
  %18 = zext i8 %17 to i32, !dbg !3691
  call void @llvm.dbg.value(metadata i32 %18, metadata !3673, metadata !DIExpression()), !dbg !3676
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i32 %18, i8 undef), metadata !3668, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3676
  %19 = getelementptr inbounds i8, i8* %15, i32 %18, !dbg !3692
  call void @llvm.dbg.value(metadata !DIArgList(i8* %19, i8 undef), metadata !3668, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3676
  %20 = getelementptr inbounds i8, i8* %3, i32 3, !dbg !3693
  %21 = load i8, i8* %20, align 1, !dbg !3693
  call void @llvm.dbg.value(metadata i8 %21, metadata !3674, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3676
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 %21, i8 undef, i8 undef), metadata !3668, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3676
  %22 = zext i8 %21 to i32, !dbg !3694
  call void @llvm.dbg.value(metadata i32 %22, metadata !3674, metadata !DIExpression()), !dbg !3676
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %22, i8 undef, i8 undef), metadata !3668, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3676
  %23 = shl nuw nsw i32 %22, 1, !dbg !3695
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %23, i8 undef, i8 undef), metadata !3668, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3676
  %24 = getelementptr inbounds i8, i8* %19, i32 %23, !dbg !3696
  call void @llvm.dbg.value(metadata i8* %24, metadata !3668, metadata !DIExpression()), !dbg !3676
  br label %25, !dbg !3685

25:                                               ; preds = %11, %25
  %26 = phi i8* [ %36, %25 ], [ %24, %11 ]
  %27 = phi i32 [ %37, %25 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8* %26, metadata !3668, metadata !DIExpression()), !dbg !3676
  call void @llvm.dbg.value(metadata i32 %27, metadata !3670, metadata !DIExpression()), !dbg !3676
  %28 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !3697
  call void @llvm.dbg.value(metadata i8* %28, metadata !3668, metadata !DIExpression()), !dbg !3676
  %29 = load i8, i8* %26, align 1, !dbg !3699
  %30 = zext i8 %29 to i32, !dbg !3699
  call void @llvm.dbg.value(metadata i32 %30, metadata !3675, metadata !DIExpression()), !dbg !3676
  %31 = shl nuw nsw i32 %30, 2, !dbg !3700
  %32 = getelementptr inbounds i8, i8* %3, i32 %31, !dbg !3701
  %33 = bitcast i8* %32 to i8**, !dbg !3702
  call void @llvm.dbg.value(metadata i8** %33, metadata !3669, metadata !DIExpression()), !dbg !3676
  store i8* %28, i8** %33, align 4, !dbg !3703
  %34 = tail call i32 @strlen(i8* noundef nonnull %28) #25, !dbg !3704
  %35 = add i32 %34, 1, !dbg !3705
  %36 = getelementptr inbounds i8, i8* %28, i32 %35, !dbg !3706
  call void @llvm.dbg.value(metadata i8* %36, metadata !3668, metadata !DIExpression()), !dbg !3676
  %37 = add nuw nsw i32 %27, 1, !dbg !3707
  call void @llvm.dbg.value(metadata i32 %37, metadata !3670, metadata !DIExpression()), !dbg !3676
  %38 = icmp eq i32 %37, %9, !dbg !3682
  br i1 %38, label %39, label %25, !dbg !3685, !llvm.loop !3708

39:                                               ; preds = %25, %6
  %40 = getelementptr inbounds i8, i8* %3, i32 8, !dbg !3710
  call void @llvm.dbg.value(metadata i8* %40, metadata !3661, metadata !DIExpression()), !dbg !3676
  %41 = getelementptr inbounds i8, i8* %3, i32 4, !dbg !3711
  %42 = bitcast i8* %41 to i8**, !dbg !3711
  %43 = load i8*, i8** %42, align 1, !dbg !3711
  %44 = tail call fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* noundef %1, i8* noundef %2, i8* noundef %43, i8* noundef nonnull %40) #24, !dbg !3712
  br label %45, !dbg !3713

45:                                               ; preds = %4, %39
  %46 = phi i32 [ %44, %39 ], [ -22, %4 ], !dbg !3676
  ret i32 %46, !dbg !3714
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3, i8* noundef %4) unnamed_addr #1 !dbg !3715 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3719, metadata !DIExpression()), !dbg !3729
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !3720, metadata !DIExpression()), !dbg !3729
  call void @llvm.dbg.value(metadata i8* %2, metadata !3721, metadata !DIExpression()), !dbg !3729
  call void @llvm.dbg.value(metadata i8* %3, metadata !3722, metadata !DIExpression()), !dbg !3729
  call void @llvm.dbg.value(metadata i8* %4, metadata !3723, metadata !DIExpression()), !dbg !3729
  call void @llvm.dbg.value(metadata i8* %4, metadata !3724, metadata !DIExpression()), !dbg !3729
  %6 = ptrtoint i8* %4 to i32, !dbg !3730
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !3730
  %8 = tail call i32 %1(i32 (...)* noundef %0, i8* noundef %2, i8* noundef %3, [1 x i32] %7) #25, !dbg !3730
  ret i32 %8, !dbg !3731
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @is_ptr(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !3732 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3736, metadata !DIExpression()), !dbg !3741
  call void @llvm.dbg.value(metadata i32 %1, metadata !3737, metadata !DIExpression()), !dbg !3741
  call void @llvm.dbg.value(metadata i8 0, metadata !3739, metadata !DIExpression()), !dbg !3741
  call void @llvm.dbg.value(metadata i32 0, metadata !3740, metadata !DIExpression()), !dbg !3741
  call void @llvm.dbg.value(metadata i8 poison, metadata !3739, metadata !DIExpression()), !dbg !3741
  call void @llvm.dbg.value(metadata i8* %0, metadata !3736, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3741
  %3 = load i8, i8* %0, align 1, !dbg !3742
  call void @llvm.dbg.value(metadata i8 %3, metadata !3738, metadata !DIExpression()), !dbg !3741
  %4 = icmp eq i8 %3, 0, !dbg !3743
  br i1 %4, label %29, label %5, !dbg !3744

5:                                                ; preds = %2, %22
  %6 = phi i8 [ %27, %22 ], [ %3, %2 ]
  %7 = phi i8* [ %10, %22 ], [ %0, %2 ]
  %8 = phi i32 [ %24, %22 ], [ 0, %2 ]
  %9 = phi i1 [ %26, %22 ], [ false, %2 ]
  %10 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !3745
  call void @llvm.dbg.value(metadata i32 %8, metadata !3740, metadata !DIExpression()), !dbg !3741
  br i1 %9, label %11, label %22, !dbg !3746

11:                                               ; preds = %5
  %12 = icmp eq i32 %8, %1, !dbg !3748
  br i1 %12, label %13, label %17, !dbg !3752

13:                                               ; preds = %11
  %14 = icmp eq i8 %6, 112, !dbg !3753
  br i1 %14, label %29, label %15, !dbg !3756

15:                                               ; preds = %13
  %16 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #24, !dbg !3757
  br i1 %16, label %29, label %22, !dbg !3759

17:                                               ; preds = %11
  %18 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #24, !dbg !3760
  %19 = xor i1 %18, true, !dbg !3762
  %20 = zext i1 %18 to i32, !dbg !3762
  %21 = add nsw i32 %8, %20, !dbg !3762
  br label %22, !dbg !3762

22:                                               ; preds = %17, %15, %5
  %23 = phi i1 [ true, %15 ], [ false, %5 ], [ %19, %17 ]
  %24 = phi i32 [ %1, %15 ], [ %8, %5 ], [ %21, %17 ], !dbg !3741
  call void @llvm.dbg.value(metadata i32 %24, metadata !3740, metadata !DIExpression()), !dbg !3741
  call void @llvm.dbg.value(metadata i8 poison, metadata !3739, metadata !DIExpression()), !dbg !3741
  %25 = icmp eq i8 %6, 37, !dbg !3763
  %26 = xor i1 %25, %23, !dbg !3765
  call void @llvm.dbg.value(metadata i8* %10, metadata !3736, metadata !DIExpression()), !dbg !3741
  call void @llvm.dbg.value(metadata i8* %10, metadata !3736, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3741
  %27 = load i8, i8* %10, align 1, !dbg !3742
  call void @llvm.dbg.value(metadata i8 %27, metadata !3738, metadata !DIExpression()), !dbg !3741
  %28 = icmp eq i8 %27, 0, !dbg !3743
  br i1 %28, label %29, label %5, !dbg !3744, !llvm.loop !3766

29:                                               ; preds = %13, %15, %22, %2
  %30 = phi i1 [ false, %2 ], [ false, %22 ], [ false, %15 ], [ true, %13 ], !dbg !3741
  ret i1 %30, !dbg !3768
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %0) unnamed_addr #2 !dbg !3769 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !3773, metadata !DIExpression()), !dbg !3774
  %2 = add i8 %0, -64, !dbg !3775
  %3 = icmp ult i8 %2, 59, !dbg !3775
  ret i1 %3, !dbg !3776
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package_convert(i8* noundef %0, i32 noundef %1, i32 (i8*, i32, i8*)* noundef %2, i8* noundef %3, i32 noundef %4, i16* noundef %5, i32 noundef %6) local_unnamed_addr #1 !dbg !3777 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  %10 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3785, metadata !DIExpression()), !dbg !3854
  call void @llvm.dbg.value(metadata i32 %1, metadata !3786, metadata !DIExpression()), !dbg !3854
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %2, metadata !3787, metadata !DIExpression()), !dbg !3854
  call void @llvm.dbg.value(metadata i8* %3, metadata !3788, metadata !DIExpression()), !dbg !3854
  call void @llvm.dbg.value(metadata i32 %4, metadata !3789, metadata !DIExpression()), !dbg !3854
  call void @llvm.dbg.value(metadata i16* %5, metadata !3790, metadata !DIExpression()), !dbg !3854
  call void @llvm.dbg.value(metadata i32 %6, metadata !3791, metadata !DIExpression()), !dbg !3854
  %11 = icmp eq i8* %0, null, !dbg !3855
  br i1 %11, label %12, label %13, !dbg !3858

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 916) #25, !dbg !3859
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 916) #25, !dbg !3859
  unreachable, !dbg !3859

13:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i8* %0, metadata !3792, metadata !DIExpression()), !dbg !3854
  %14 = bitcast i8* %0 to i32*, !dbg !3861
  call void @llvm.dbg.value(metadata i32* %14, metadata !3793, metadata !DIExpression()), !dbg !3854
  %15 = and i32 %4, 8, !dbg !3862
  %16 = icmp eq i32 %15, 0, !dbg !3863
  call void @llvm.dbg.value(metadata i1 %16, metadata !3797, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3854
  call void @llvm.dbg.value(metadata i8* %0, metadata !3800, metadata !DIExpression()), !dbg !3854
  %17 = icmp eq i32 %1, 0, !dbg !3864
  br i1 %17, label %18, label %20, !dbg !3865

18:                                               ; preds = %13
  %19 = tail call fastcc i32 @get_package_len(i8* noundef nonnull %0) #24, !dbg !3866
  br label %20, !dbg !3865

20:                                               ; preds = %13, %18
  %21 = phi i32 [ %19, %18 ], [ %1, %13 ], !dbg !3865
  call void @llvm.dbg.value(metadata i32 %21, metadata !3786, metadata !DIExpression()), !dbg !3854
  %22 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !3867
  %23 = load i8, i8* %22, align 1, !dbg !3867
  %24 = zext i8 %23 to i32, !dbg !3868
  call void @llvm.dbg.value(metadata i32 %24, metadata !3795, metadata !DIExpression()), !dbg !3854
  %25 = icmp ne i8 %23, 0, !dbg !3869
  %26 = and i32 %4, 1, !dbg !3870
  %27 = icmp ne i32 %26, 0, !dbg !3870
  %28 = and i1 %27, %25, !dbg !3870
  call void @llvm.dbg.value(metadata i1 %28, metadata !3799, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3854
  %29 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !3871
  %30 = load i8, i8* %29, align 1, !dbg !3871
  %31 = zext i8 %30 to i32, !dbg !3872
  call void @llvm.dbg.value(metadata i32 %31, metadata !3796, metadata !DIExpression()), !dbg !3854
  %32 = icmp ne i8 %30, 0, !dbg !3873
  %33 = and i32 %4, 2, !dbg !3874
  %34 = icmp ne i32 %33, 0, !dbg !3874
  %35 = and i1 %34, %32, !dbg !3874
  call void @llvm.dbg.value(metadata i1 %35, metadata !3798, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3854
  %36 = select i1 %35, i1 true, i1 %28, !dbg !3875
  br i1 %36, label %41, label %37, !dbg !3875

37:                                               ; preds = %20
  %38 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !3877
  br i1 %38, label %287, label %39, !dbg !3880

39:                                               ; preds = %37
  %40 = tail call i32 %2(i8* noundef nonnull %0, i32 noundef %21, i8* noundef %3) #25, !dbg !3881
  br label %287, !dbg !3883

41:                                               ; preds = %20
  %42 = load i8, i8* %0, align 1, !dbg !3884
  %43 = zext i8 %42 to i32, !dbg !3885
  %44 = shl nuw nsw i32 %43, 2, !dbg !3886
  call void @llvm.dbg.value(metadata i32 %44, metadata !3794, metadata !DIExpression()), !dbg !3854
  %45 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !3887
  %46 = bitcast i8* %45 to i8**, !dbg !3888
  %47 = load i8*, i8** %46, align 4, !dbg !3888
  call void @llvm.dbg.value(metadata i8* %47, metadata !3803, metadata !DIExpression()), !dbg !3854
  %48 = getelementptr inbounds i8, i8* %0, i32 %44, !dbg !3889
  call void @llvm.dbg.value(metadata i8* %48, metadata !3804, metadata !DIExpression()), !dbg !3854
  call void @llvm.dbg.value(metadata i32 0, metadata !3805, metadata !DIExpression()), !dbg !3854
  %49 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !3890
  br i1 %49, label %50, label %135, !dbg !3891

50:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 %21, metadata !3802, metadata !DIExpression()), !dbg !3854
  br i1 %28, label %51, label %76, !dbg !3892

51:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %21, metadata !3802, metadata !DIExpression()), !dbg !3854
  call void @llvm.dbg.value(metadata i8* %48, metadata !3804, metadata !DIExpression()), !dbg !3854
  call void @llvm.dbg.value(metadata i32 0, metadata !3805, metadata !DIExpression()), !dbg !3854
  call void @llvm.dbg.value(metadata i32 0, metadata !3806, metadata !DIExpression()), !dbg !3893
  %52 = icmp ne i16* %5, null
  br label %53, !dbg !3894

53:                                               ; preds = %51, %70
  %54 = phi i32 [ %21, %51 ], [ %72, %70 ]
  %55 = phi i8* [ %48, %51 ], [ %73, %70 ]
  %56 = phi i32 [ 0, %51 ], [ %71, %70 ]
  %57 = phi i32 [ 0, %51 ], [ %74, %70 ]
  call void @llvm.dbg.value(metadata i32 %54, metadata !3802, metadata !DIExpression()), !dbg !3854
  call void @llvm.dbg.value(metadata i8* %55, metadata !3804, metadata !DIExpression()), !dbg !3854
  call void @llvm.dbg.value(metadata i32 %56, metadata !3805, metadata !DIExpression()), !dbg !3854
  call void @llvm.dbg.value(metadata i32 %57, metadata !3806, metadata !DIExpression()), !dbg !3893
  %58 = load i8, i8* %55, align 1, !dbg !3895
  %59 = zext i8 %58 to i32, !dbg !3896
  %60 = getelementptr inbounds i32, i32* %14, i32 %59, !dbg !3896
  %61 = bitcast i32* %60 to i8**, !dbg !3897
  %62 = load i8*, i8** %61, align 4, !dbg !3897
  call void @llvm.dbg.value(metadata i8* %62, metadata !3812, metadata !DIExpression()), !dbg !3898
  %63 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %62, i16 noundef zeroext 0) #24, !dbg !3899
  call void @llvm.dbg.value(metadata i32 %63, metadata !3815, metadata !DIExpression()), !dbg !3898
  %64 = icmp ult i32 %56, %6
  %65 = select i1 %52, i1 %64, i1 false, !dbg !3900
  br i1 %65, label %66, label %70, !dbg !3900

66:                                               ; preds = %53
  %67 = trunc i32 %63 to i16, !dbg !3902
  %68 = add nuw i32 %56, 1, !dbg !3904
  call void @llvm.dbg.value(metadata i32 %68, metadata !3805, metadata !DIExpression()), !dbg !3854
  %69 = getelementptr inbounds i16, i16* %5, i32 %56, !dbg !3905
  store i16 %67, i16* %69, align 2, !dbg !3906
  br label %70, !dbg !3907

70:                                               ; preds = %66, %53
  %71 = phi i32 [ %68, %66 ], [ %56, %53 ], !dbg !3854
  call void @llvm.dbg.value(metadata i32 %71, metadata !3805, metadata !DIExpression()), !dbg !3854
  %72 = add nsw i32 %63, %54, !dbg !3908
  call void @llvm.dbg.value(metadata i32 %72, metadata !3802, metadata !DIExpression()), !dbg !3854
  %73 = getelementptr inbounds i8, i8* %55, i32 1, !dbg !3909
  call void @llvm.dbg.value(metadata i8* %73, metadata !3804, metadata !DIExpression()), !dbg !3854
  %74 = add nuw nsw i32 %57, 1, !dbg !3910
  call void @llvm.dbg.value(metadata i32 %74, metadata !3806, metadata !DIExpression()), !dbg !3893
  %75 = icmp eq i32 %74, %24, !dbg !3911
  br i1 %75, label %82, label %53, !dbg !3894, !llvm.loop !3912

76:                                               ; preds = %50
  %77 = and i32 %4, 4
  %78 = icmp ne i32 %77, 0
  %79 = and i1 %78, %25, !dbg !3914
  %80 = select i1 %79, i32 %24, i32 0, !dbg !3914
  %81 = getelementptr i8, i8* %48, i32 %80, !dbg !3914
  br label %82, !dbg !3914

82:                                               ; preds = %70, %76
  %83 = phi i32 [ 0, %76 ], [ %71, %70 ], !dbg !3917
  %84 = phi i8* [ %81, %76 ], [ %73, %70 ], !dbg !3854
  %85 = phi i32 [ %21, %76 ], [ %72, %70 ], !dbg !3918
  call void @llvm.dbg.value(metadata i1 undef, metadata !3816, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3919
  call void @llvm.dbg.value(metadata i32 0, metadata !3817, metadata !DIExpression()), !dbg !3920
  call void @llvm.dbg.value(metadata i32 %85, metadata !3802, metadata !DIExpression()), !dbg !3854
  call void @llvm.dbg.value(metadata i8* %84, metadata !3804, metadata !DIExpression()), !dbg !3854
  call void @llvm.dbg.value(metadata i32 %83, metadata !3805, metadata !DIExpression()), !dbg !3854
  %86 = icmp eq i8 %30, 0, !dbg !3921
  br i1 %86, label %287, label %87, !dbg !3922

87:                                               ; preds = %82
  %88 = and i32 %4, 5, !dbg !3923
  %89 = icmp eq i32 %88, 0, !dbg !3924
  call void @llvm.dbg.value(metadata i1 %89, metadata !3816, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3919
  %90 = icmp eq i32 %33, 0
  %91 = icmp eq i32 %26, 0
  %92 = icmp ne i16* %5, null
  %93 = select i1 %89, i32 -2, i32 -1
  br label %94, !dbg !3922

94:                                               ; preds = %87, %130
  %95 = phi i32 [ %85, %87 ], [ %132, %130 ]
  %96 = phi i8* [ %84, %87 ], [ %100, %130 ]
  %97 = phi i32 [ %83, %87 ], [ %131, %130 ]
  %98 = phi i32 [ 0, %87 ], [ %133, %130 ]
  call void @llvm.dbg.value(metadata i32 %95, metadata !3802, metadata !DIExpression()), !dbg !3854
  call void @llvm.dbg.value(metadata i8* %96, metadata !3804, metadata !DIExpression()), !dbg !3854
  call void @llvm.dbg.value(metadata i32 %97, metadata !3805, metadata !DIExpression()), !dbg !3854
  call void @llvm.dbg.value(metadata i32 %98, metadata !3817, metadata !DIExpression()), !dbg !3920
  %99 = getelementptr inbounds i8, i8* %96, i32 1, !dbg !3925
  call void @llvm.dbg.value(metadata i8* %99, metadata !3804, metadata !DIExpression()), !dbg !3854
  call void @llvm.dbg.value(metadata i8 undef, metadata !3819, metadata !DIExpression()), !dbg !3926
  %100 = getelementptr inbounds i8, i8* %96, i32 2, !dbg !3927
  call void @llvm.dbg.value(metadata i8* %100, metadata !3804, metadata !DIExpression()), !dbg !3854
  %101 = load i8, i8* %99, align 1, !dbg !3928
  call void @llvm.dbg.value(metadata i8 %101, metadata !3822, metadata !DIExpression()), !dbg !3926
  %102 = zext i8 %101 to i32, !dbg !3929
  %103 = getelementptr inbounds i32, i32* %14, i32 %102, !dbg !3929
  %104 = bitcast i32* %103 to i8**, !dbg !3930
  %105 = load i8*, i8** %104, align 4, !dbg !3930
  call void @llvm.dbg.value(metadata i8* %105, metadata !3823, metadata !DIExpression()), !dbg !3926
  %106 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %105) #24, !dbg !3931
  call void @llvm.dbg.value(metadata i1 %106, metadata !3824, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3926
  br i1 %16, label %113, label %107, !dbg !3932

107:                                              ; preds = %94
  %108 = load i8, i8* %96, align 1, !dbg !3934
  call void @llvm.dbg.value(metadata i8 %108, metadata !3819, metadata !DIExpression()), !dbg !3926
  %109 = zext i8 %108 to i32, !dbg !3935
  %110 = tail call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %109) #24, !dbg !3936
  br i1 %110, label %111, label %113, !dbg !3937

111:                                              ; preds = %107
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([168 x i8], [168 x i8]* @.str.9, i32 0, i32 0), i32 noundef 87, i8* noundef %47, i32 noundef %109) #25, !dbg !3938
  %112 = add nsw i32 %95, -2, !dbg !3944
  call void @llvm.dbg.value(metadata i32 %112, metadata !3802, metadata !DIExpression()), !dbg !3854
  br label %130, !dbg !3945

113:                                              ; preds = %107, %94
  br i1 %106, label %114, label %117, !dbg !3946

114:                                              ; preds = %113
  br i1 %91, label %115, label %118, !dbg !3947

115:                                              ; preds = %114
  %116 = add i32 %95, %93, !dbg !3949
  call void @llvm.dbg.value(metadata i32 %116, metadata !3802, metadata !DIExpression()), !dbg !3854
  br label %130, !dbg !3952

117:                                              ; preds = %113
  br i1 %90, label %130, label %118, !dbg !3953

118:                                              ; preds = %117, %114
  call void @llvm.dbg.label(metadata !3850), !dbg !3954
  %119 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %105, i16 noundef zeroext 0) #24, !dbg !3955
  call void @llvm.dbg.value(metadata i32 %119, metadata !3825, metadata !DIExpression()), !dbg !3926
  %120 = icmp ult i32 %97, %6
  %121 = select i1 %92, i1 %120, i1 false, !dbg !3956
  br i1 %121, label %122, label %126, !dbg !3956

122:                                              ; preds = %118
  %123 = trunc i32 %119 to i16, !dbg !3958
  %124 = add nuw i32 %97, 1, !dbg !3960
  call void @llvm.dbg.value(metadata i32 %124, metadata !3805, metadata !DIExpression()), !dbg !3854
  %125 = getelementptr inbounds i16, i16* %5, i32 %97, !dbg !3961
  store i16 %123, i16* %125, align 2, !dbg !3962
  br label %126, !dbg !3963

126:                                              ; preds = %122, %118
  %127 = phi i32 [ %124, %122 ], [ %97, %118 ], !dbg !3854
  call void @llvm.dbg.value(metadata i32 %127, metadata !3805, metadata !DIExpression()), !dbg !3854
  %128 = add i32 %95, -1, !dbg !3964
  %129 = add i32 %128, %119, !dbg !3965
  call void @llvm.dbg.value(metadata i32 %129, metadata !3802, metadata !DIExpression()), !dbg !3854
  br label %130, !dbg !3966

130:                                              ; preds = %115, %126, %117, %111
  %131 = phi i32 [ %97, %111 ], [ %127, %126 ], [ %97, %115 ], [ %97, %117 ], !dbg !3854
  %132 = phi i32 [ %112, %111 ], [ %129, %126 ], [ %116, %115 ], [ %95, %117 ], !dbg !3926
  call void @llvm.dbg.value(metadata i32 %132, metadata !3802, metadata !DIExpression()), !dbg !3854
  call void @llvm.dbg.value(metadata i32 %131, metadata !3805, metadata !DIExpression()), !dbg !3854
  %133 = add nuw nsw i32 %98, 1, !dbg !3967
  call void @llvm.dbg.value(metadata i8* %100, metadata !3804, metadata !DIExpression()), !dbg !3854
  call void @llvm.dbg.value(metadata i32 %133, metadata !3817, metadata !DIExpression()), !dbg !3920
  %134 = icmp eq i32 %133, %31, !dbg !3921
  br i1 %134, label %287, label %94, !dbg !3922, !llvm.loop !3968

135:                                              ; preds = %41
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !3827, metadata !DIExpression()), !dbg !3970
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !3828, metadata !DIExpression()), !dbg !3971
  br i1 %28, label %136, label %138, !dbg !3972

136:                                              ; preds = %135
  call void @llvm.dbg.value(metadata i8 %23, metadata !3829, metadata !DIExpression()), !dbg !3854
  call void @llvm.dbg.value(metadata i8 0, metadata !3830, metadata !DIExpression()), !dbg !3854
  %137 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !3973
  call void @llvm.dbg.value(metadata i8* %137, metadata !3831, metadata !DIExpression()), !dbg !3854
  br label %143, !dbg !3976

138:                                              ; preds = %135
  %139 = and i32 %4, 4
  %140 = icmp ne i32 %139, 0
  %141 = and i1 %140, %25, !dbg !3977
  %142 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0
  br i1 %141, label %143, label %148, !dbg !3977

143:                                              ; preds = %136, %138
  %144 = phi i8 [ 0, %138 ], [ %23, %136 ]
  %145 = phi i8 [ %23, %138 ], [ 0, %136 ]
  %146 = phi i8* [ %142, %138 ], [ %137, %136 ]
  call void @llvm.dbg.value(metadata i8* null, metadata !3831, metadata !DIExpression()), !dbg !3854
  call void @llvm.dbg.value(metadata i8 undef, metadata !3830, metadata !DIExpression()), !dbg !3854
  call void @llvm.dbg.value(metadata i8 0, metadata !3829, metadata !DIExpression()), !dbg !3854
  %147 = call i8* @memcpy(i8* noundef nonnull %146, i8* noundef nonnull %48, i32 noundef %24) #25, !dbg !3979
  br label %148, !dbg !3982

148:                                              ; preds = %138, %143
  %149 = phi i8 [ %145, %143 ], [ 0, %138 ]
  %150 = phi i8 [ %144, %143 ], [ 0, %138 ]
  %151 = getelementptr inbounds i8, i8* %48, i32 %24, !dbg !3983
  call void @llvm.dbg.value(metadata i8* %151, metadata !3804, metadata !DIExpression()), !dbg !3854
  call void @llvm.dbg.value(metadata i32 0, metadata !3833, metadata !DIExpression()), !dbg !3984
  call void @llvm.dbg.value(metadata i8 %149, metadata !3830, metadata !DIExpression()), !dbg !3854
  call void @llvm.dbg.value(metadata i8 %150, metadata !3829, metadata !DIExpression()), !dbg !3854
  %152 = icmp eq i8 %30, 0, !dbg !3985
  br i1 %152, label %153, label %155, !dbg !3986

153:                                              ; preds = %148
  %154 = and i32 %4, 4, !dbg !3987
  br label %160, !dbg !3986

155:                                              ; preds = %148
  %156 = icmp eq i32 %33, 0
  %157 = icmp eq i32 %26, 0
  %158 = and i32 %4, 4
  %159 = icmp eq i32 %158, 0
  br label %179, !dbg !3986

160:                                              ; preds = %235, %153
  %161 = phi i32 [ %154, %153 ], [ %158, %235 ], !dbg !3987
  %162 = phi i8 [ %150, %153 ], [ %236, %235 ], !dbg !3988
  %163 = phi i8 [ %149, %153 ], [ %237, %235 ], !dbg !3989
  %164 = phi i8* [ %151, %153 ], [ %186, %235 ], !dbg !3854
  call void @llvm.dbg.value(metadata i8 undef, metadata !3826, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 8)), !dbg !3854
  %165 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !3990
  %166 = load i8, i8* %165, align 1, !dbg !3990
  %167 = zext i8 %162 to i32, !dbg !3991
  %168 = add i8 %166, %162, !dbg !3992
  call void @llvm.dbg.value(metadata i8 %168, metadata !3826, metadata !DIExpression(DW_OP_LLVM_fragment, 8, 8)), !dbg !3854
  %169 = icmp eq i32 %33, 0, !dbg !3993
  %170 = lshr i8 %163, 1, !dbg !3994
  %171 = select i1 %169, i8 %170, i8 0, !dbg !3994
  call void @llvm.dbg.value(metadata i8 %171, metadata !3826, metadata !DIExpression(DW_OP_LLVM_fragment, 24, 8)), !dbg !3854
  %172 = icmp eq i32 %26, 0, !dbg !3995
  %173 = icmp eq i32 %161, 0, !dbg !3987
  %174 = select i1 %173, i8 0, i8 %163, !dbg !3987
  %175 = select i1 %172, i8 %174, i8 0, !dbg !3987
  call void @llvm.dbg.value(metadata i8 %175, metadata !3826, metadata !DIExpression(DW_OP_LLVM_fragment, 16, 8)), !dbg !3854
  call void @llvm.dbg.declare(metadata %struct.cbprintf_package_desc* undef, metadata !3841, metadata !DIExpression()), !dbg !3996
  %176 = load i32, i32* %14, align 1, !dbg !3997
  store i8 %168, i8* %165, align 1, !dbg !3998
  store i8 %175, i8* %22, align 1, !dbg !3998
  store i8 %171, i8* %29, align 1, !dbg !3998
  %177 = call i32 %2(i8* noundef nonnull %0, i32 noundef %44, i8* noundef %3) #25, !dbg !3999
  call void @llvm.dbg.value(metadata i32 %177, metadata !3832, metadata !DIExpression()), !dbg !3854
  %178 = icmp slt i32 %177, 0, !dbg !4000
  br i1 %178, label %287, label %240, !dbg !4002

179:                                              ; preds = %155, %235
  %180 = phi i8* [ %151, %155 ], [ %186, %235 ]
  %181 = phi i32 [ 0, %155 ], [ %238, %235 ]
  %182 = phi i8 [ %149, %155 ], [ %237, %235 ]
  %183 = phi i8 [ %150, %155 ], [ %236, %235 ]
  call void @llvm.dbg.value(metadata i8* %180, metadata !3804, metadata !DIExpression()), !dbg !3854
  call void @llvm.dbg.value(metadata i32 %181, metadata !3833, metadata !DIExpression()), !dbg !3984
  call void @llvm.dbg.value(metadata i8 %182, metadata !3830, metadata !DIExpression()), !dbg !3854
  call void @llvm.dbg.value(metadata i8 %183, metadata !3829, metadata !DIExpression()), !dbg !3854
  %184 = getelementptr inbounds i8, i8* %180, i32 1, !dbg !4003
  call void @llvm.dbg.value(metadata i8* %184, metadata !3804, metadata !DIExpression()), !dbg !3854
  %185 = load i8, i8* %180, align 1, !dbg !4004
  call void @llvm.dbg.value(metadata i8 %185, metadata !3835, metadata !DIExpression()), !dbg !4005
  %186 = getelementptr inbounds i8, i8* %180, i32 2, !dbg !4006
  call void @llvm.dbg.value(metadata i8* %186, metadata !3804, metadata !DIExpression()), !dbg !3854
  %187 = load i8, i8* %184, align 1, !dbg !4007
  call void @llvm.dbg.value(metadata i8 %187, metadata !3838, metadata !DIExpression()), !dbg !4005
  %188 = zext i8 %187 to i32, !dbg !4008
  %189 = getelementptr inbounds i32, i32* %14, i32 %188, !dbg !4008
  %190 = bitcast i32* %189 to i8**, !dbg !4009
  %191 = load i8*, i8** %190, align 4, !dbg !4009
  call void @llvm.dbg.value(metadata i8* %191, metadata !3839, metadata !DIExpression()), !dbg !4005
  %192 = call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %191) #24, !dbg !4010
  call void @llvm.dbg.value(metadata i1 %192, metadata !3840, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4005
  br i1 %16, label %196, label %193, !dbg !4011

193:                                              ; preds = %179
  %194 = zext i8 %185 to i32, !dbg !4013
  %195 = call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %194) #24, !dbg !4014
  br i1 %195, label %235, label %196, !dbg !4015

196:                                              ; preds = %193, %179
  br i1 %192, label %197, label %213, !dbg !4016

197:                                              ; preds = %196
  br i1 %157, label %205, label %198, !dbg !4017

198:                                              ; preds = %197
  %199 = icmp ult i8 %183, 16, !dbg !4020
  br i1 %199, label %201, label %200, !dbg !4025

200:                                              ; preds = %198
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1086) #25, !dbg !4026
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1086) #25, !dbg !4026
  unreachable, !dbg !4026

201:                                              ; preds = %198
  %202 = zext i8 %183 to i32, !dbg !4020
  %203 = add nuw nsw i8 %183, 1, !dbg !4028
  call void @llvm.dbg.value(metadata i8 %203, metadata !3829, metadata !DIExpression()), !dbg !3854
  %204 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %202, !dbg !4029
  br label %231, !dbg !4030

205:                                              ; preds = %197
  br i1 %159, label %235, label %206, !dbg !4031

206:                                              ; preds = %205
  %207 = icmp ult i8 %182, 16, !dbg !4032
  br i1 %207, label %209, label %208, !dbg !4037

208:                                              ; preds = %206
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1089) #25, !dbg !4038
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1089) #25, !dbg !4038
  unreachable, !dbg !4038

209:                                              ; preds = %206
  %210 = zext i8 %182 to i32, !dbg !4032
  %211 = add nuw nsw i8 %182, 1, !dbg !4040
  call void @llvm.dbg.value(metadata i8 %211, metadata !3830, metadata !DIExpression()), !dbg !3854
  %212 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %210, !dbg !4041
  br label %231, !dbg !4042

213:                                              ; preds = %196
  br i1 %156, label %221, label %214, !dbg !4043

214:                                              ; preds = %213
  %215 = icmp ult i8 %183, 16, !dbg !4045
  br i1 %215, label %217, label %216, !dbg !4050

216:                                              ; preds = %214
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1096) #25, !dbg !4051
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1096) #25, !dbg !4051
  unreachable, !dbg !4051

217:                                              ; preds = %214
  %218 = zext i8 %183 to i32, !dbg !4045
  %219 = add nuw nsw i8 %183, 1, !dbg !4053
  call void @llvm.dbg.value(metadata i8 %219, metadata !3829, metadata !DIExpression()), !dbg !3854
  %220 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %218, !dbg !4054
  br label %231, !dbg !4055

221:                                              ; preds = %213
  %222 = icmp ult i8 %182, 16, !dbg !4056
  br i1 %222, label %224, label %223, !dbg !4060

223:                                              ; preds = %221
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1099) #25, !dbg !4061
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1099) #25, !dbg !4061
  unreachable, !dbg !4061

224:                                              ; preds = %221
  %225 = zext i8 %182 to i32, !dbg !4056
  %226 = add nuw nsw i8 %182, 1, !dbg !4063
  call void @llvm.dbg.value(metadata i8 %226, metadata !3830, metadata !DIExpression()), !dbg !3854
  %227 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %225, !dbg !4064
  store i8 %185, i8* %227, align 1, !dbg !4065
  %228 = add nuw nsw i8 %182, 2, !dbg !4066
  call void @llvm.dbg.value(metadata i8 %228, metadata !3830, metadata !DIExpression()), !dbg !3854
  %229 = zext i8 %226 to i32, !dbg !4067
  %230 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %229, !dbg !4067
  br label %231

231:                                              ; preds = %217, %224, %201, %209
  %232 = phi i8* [ %212, %209 ], [ %204, %201 ], [ %230, %224 ], [ %220, %217 ]
  %233 = phi i8 [ %183, %209 ], [ %203, %201 ], [ %183, %224 ], [ %219, %217 ]
  %234 = phi i8 [ %211, %209 ], [ %182, %201 ], [ %228, %224 ], [ %182, %217 ]
  store i8 %187, i8* %232, align 1, !dbg !4068
  br label %235, !dbg !4069

235:                                              ; preds = %231, %205, %193
  %236 = phi i8 [ %183, %193 ], [ %183, %205 ], [ %233, %231 ], !dbg !3854
  %237 = phi i8 [ %182, %193 ], [ %182, %205 ], [ %234, %231 ], !dbg !3989
  call void @llvm.dbg.value(metadata i8 %237, metadata !3830, metadata !DIExpression()), !dbg !3854
  call void @llvm.dbg.value(metadata i8 %236, metadata !3829, metadata !DIExpression()), !dbg !3854
  %238 = add nuw nsw i32 %181, 1, !dbg !4069
  call void @llvm.dbg.value(metadata i8* %186, metadata !3804, metadata !DIExpression()), !dbg !3854
  call void @llvm.dbg.value(metadata i32 %238, metadata !3833, metadata !DIExpression()), !dbg !3984
  %239 = icmp eq i32 %238, %31, !dbg !3985
  br i1 %239, label %160, label %179, !dbg !3986, !llvm.loop !4070

240:                                              ; preds = %160
  %241 = zext i8 %163 to i32, !dbg !3994
  call void @llvm.dbg.value(metadata i32 %177, metadata !3802, metadata !DIExpression()), !dbg !3854
  store i32 %176, i32* %14, align 1, !dbg !4072
  %242 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !4073
  %243 = call i32 %2(i8* noundef nonnull %242, i32 noundef %241, i8* noundef %3) #25, !dbg !4074
  call void @llvm.dbg.value(metadata i32 %243, metadata !3832, metadata !DIExpression()), !dbg !3854
  %244 = icmp slt i32 %243, 0, !dbg !4075
  br i1 %244, label %287, label %245, !dbg !4077

245:                                              ; preds = %240
  call void @llvm.dbg.value(metadata !DIArgList(i32 %177, i32 %243), metadata !3802, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3854
  %246 = mul nsw i32 %31, -2
  %247 = add i32 %21, %246, !dbg !4078
  %248 = add nuw nsw i32 %44, %24, !dbg !4078
  %249 = sub i32 %247, %248, !dbg !4078
  call void @llvm.dbg.value(metadata i32 %249, metadata !3842, metadata !DIExpression()), !dbg !3854
  %250 = call i32 %2(i8* noundef %164, i32 noundef %249, i8* noundef %3) #25, !dbg !4079
  call void @llvm.dbg.value(metadata i32 %250, metadata !3832, metadata !DIExpression()), !dbg !3854
  %251 = icmp slt i32 %250, 0, !dbg !4080
  br i1 %251, label %287, label %252, !dbg !4082

252:                                              ; preds = %245
  %253 = add nuw nsw i32 %243, %177, !dbg !4083
  call void @llvm.dbg.value(metadata i32 %253, metadata !3802, metadata !DIExpression()), !dbg !3854
  %254 = add nuw nsw i32 %253, %250, !dbg !4084
  call void @llvm.dbg.value(metadata i32 %254, metadata !3802, metadata !DIExpression()), !dbg !3854
  call void @llvm.dbg.value(metadata i32 0, metadata !3843, metadata !DIExpression()), !dbg !4085
  %255 = icmp eq i8 %162, 0, !dbg !4086
  br i1 %255, label %284, label %256, !dbg !4087

256:                                              ; preds = %252
  %257 = icmp eq i16* %5, null
  br label %258, !dbg !4087

258:                                              ; preds = %256, %279
  %259 = phi i32 [ 0, %256 ], [ %282, %279 ]
  %260 = phi i32 [ %254, %256 ], [ %281, %279 ]
  call void @llvm.dbg.value(metadata i32 %259, metadata !3843, metadata !DIExpression()), !dbg !4085
  call void @llvm.dbg.value(metadata i32 %260, metadata !3802, metadata !DIExpression()), !dbg !3854
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4088
  %261 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %259, !dbg !4089
  %262 = load i8, i8* %261, align 1, !dbg !4089
  call void @llvm.dbg.value(metadata i8 %262, metadata !3845, metadata !DIExpression()), !dbg !4090
  store i8 %262, i8* %10, align 1, !dbg !4091
  %263 = zext i8 %262 to i32, !dbg !4092
  %264 = getelementptr inbounds i32, i32* %14, i32 %263, !dbg !4092
  %265 = bitcast i32* %264 to i8**, !dbg !4093
  %266 = load i8*, i8** %265, align 4, !dbg !4093
  call void @llvm.dbg.value(metadata i8* %266, metadata !3848, metadata !DIExpression()), !dbg !4090
  br i1 %257, label %270, label %267, !dbg !4094

267:                                              ; preds = %258
  %268 = getelementptr inbounds i16, i16* %5, i32 %259, !dbg !4095
  %269 = load i16, i16* %268, align 2, !dbg !4095
  br label %270, !dbg !4094

270:                                              ; preds = %258, %267
  %271 = phi i16 [ %269, %267 ], [ 0, %258 ], !dbg !4094
  call void @llvm.dbg.value(metadata i32 undef, metadata !3849, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4090
  call void @llvm.dbg.value(metadata i8* %10, metadata !3845, metadata !DIExpression(DW_OP_deref)), !dbg !4090
  %272 = call i32 %2(i8* noundef nonnull %10, i32 noundef 1, i8* noundef %3) #25, !dbg !4096
  call void @llvm.dbg.value(metadata i32 %272, metadata !3832, metadata !DIExpression()), !dbg !3854
  %273 = icmp slt i32 %272, 0, !dbg !4097
  br i1 %273, label %277, label %274, !dbg !4099

274:                                              ; preds = %270
  call void @llvm.dbg.value(metadata i16 %271, metadata !3849, metadata !DIExpression()), !dbg !4090
  call void @llvm.dbg.value(metadata !DIArgList(i32 %260, i32 %272), metadata !3802, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3854
  %275 = call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef nonnull %2, i8* noundef %3, i8* noundef %266, i16 noundef zeroext %271) #24, !dbg !4100
  call void @llvm.dbg.value(metadata i32 %275, metadata !3832, metadata !DIExpression()), !dbg !3854
  %276 = icmp slt i32 %275, 0, !dbg !4101
  br i1 %276, label %277, label %279, !dbg !4103

277:                                              ; preds = %274, %270
  %278 = phi i32 [ %275, %274 ], [ %272, %270 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !3802, metadata !DIExpression()), !dbg !3854
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4104
  call void @llvm.dbg.value(metadata i32 undef, metadata !3802, metadata !DIExpression()), !dbg !3854
  br label %287

279:                                              ; preds = %274
  %280 = add nsw i32 %272, %260, !dbg !4105
  call void @llvm.dbg.value(metadata i32 %280, metadata !3802, metadata !DIExpression()), !dbg !3854
  %281 = add nsw i32 %280, %275, !dbg !4106
  call void @llvm.dbg.value(metadata i32 %281, metadata !3802, metadata !DIExpression()), !dbg !3854
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4104
  %282 = add nuw nsw i32 %259, 1, !dbg !4107
  call void @llvm.dbg.value(metadata i32 %282, metadata !3843, metadata !DIExpression()), !dbg !4085
  %283 = icmp eq i32 %282, %167, !dbg !4086
  br i1 %283, label %284, label %258, !dbg !4087, !llvm.loop !4108

284:                                              ; preds = %279, %252
  %285 = phi i32 [ %254, %252 ], [ %281, %279 ], !dbg !4084
  call void @llvm.dbg.value(metadata i32 %285, metadata !3802, metadata !DIExpression()), !dbg !3854
  %286 = call i32 %2(i8* noundef null, i32 noundef 0, i8* noundef %3) #25, !dbg !4110
  br label %287, !dbg !4111

287:                                              ; preds = %130, %82, %277, %284, %160, %240, %245, %37, %39
  %288 = phi i32 [ %21, %39 ], [ %21, %37 ], [ %285, %284 ], [ %177, %160 ], [ %243, %240 ], [ %250, %245 ], [ %278, %277 ], [ %85, %82 ], [ %132, %130 ], !dbg !3854
  ret i32 %288, !dbg !4112
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_package_len(i8* noundef %0) unnamed_addr #1 !dbg !4113 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4117, metadata !DIExpression()), !dbg !4125
  %2 = icmp eq i8* %0, null, !dbg !4126
  br i1 %2, label %3, label %4, !dbg !4129

3:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 198) #25, !dbg !4130
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 198) #25, !dbg !4130
  unreachable, !dbg !4130

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4118, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i8* %0, metadata !4119, metadata !DIExpression()), !dbg !4125
  %5 = load i8, i8* %0, align 1, !dbg !4132
  %6 = zext i8 %5 to i32, !dbg !4132
  %7 = shl nuw nsw i32 %6, 2, !dbg !4133
  call void @llvm.dbg.value(metadata i32 %7, metadata !4120, metadata !DIExpression()), !dbg !4125
  %8 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4134
  %9 = load i8, i8* %8, align 1, !dbg !4134
  %10 = zext i8 %9 to i32, !dbg !4134
  call void @llvm.dbg.value(metadata i32 %10, metadata !4121, metadata !DIExpression()), !dbg !4125
  %11 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4135
  %12 = load i8, i8* %11, align 1, !dbg !4135
  %13 = zext i8 %12 to i32, !dbg !4135
  call void @llvm.dbg.value(metadata i32 %13, metadata !4122, metadata !DIExpression()), !dbg !4125
  %14 = getelementptr inbounds i8, i8* %0, i32 %7, !dbg !4136
  call void @llvm.dbg.value(metadata i8* %14, metadata !4118, metadata !DIExpression()), !dbg !4125
  %15 = getelementptr inbounds i8, i8* %14, i32 %13, !dbg !4137
  call void @llvm.dbg.value(metadata i8* %15, metadata !4118, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i32 0, metadata !4123, metadata !DIExpression()), !dbg !4138
  %16 = icmp eq i8 %9, 0, !dbg !4139
  br i1 %16, label %17, label %22, !dbg !4141

17:                                               ; preds = %22, %4
  %18 = phi i8* [ %15, %4 ], [ %28, %22 ], !dbg !4125
  %19 = ptrtoint i8* %18 to i32, !dbg !4142
  %20 = ptrtoint i8* %0 to i32, !dbg !4142
  %21 = sub i32 %19, %20, !dbg !4142
  ret i32 %21, !dbg !4143

22:                                               ; preds = %4, %22
  %23 = phi i32 [ %29, %22 ], [ 0, %4 ]
  %24 = phi i8* [ %28, %22 ], [ %15, %4 ]
  call void @llvm.dbg.value(metadata i32 %23, metadata !4123, metadata !DIExpression()), !dbg !4138
  call void @llvm.dbg.value(metadata i8* %24, metadata !4118, metadata !DIExpression()), !dbg !4125
  %25 = getelementptr inbounds i8, i8* %24, i32 1, !dbg !4144
  call void @llvm.dbg.value(metadata i8* %25, metadata !4118, metadata !DIExpression()), !dbg !4125
  %26 = tail call i32 @strlen(i8* noundef nonnull %25) #25, !dbg !4146
  %27 = add i32 %26, 1, !dbg !4147
  %28 = getelementptr inbounds i8, i8* %25, i32 %27, !dbg !4148
  call void @llvm.dbg.value(metadata i8* %28, metadata !4118, metadata !DIExpression()), !dbg !4125
  %29 = add nuw nsw i32 %23, 1, !dbg !4149
  call void @llvm.dbg.value(metadata i32 %29, metadata !4123, metadata !DIExpression()), !dbg !4138
  %30 = icmp eq i32 %29, %10, !dbg !4139
  br i1 %30, label %17, label %22, !dbg !4141, !llvm.loop !4150
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef readonly %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3) unnamed_addr #1 !dbg !4152 {
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %0, metadata !4156, metadata !DIExpression()), !dbg !4160
  call void @llvm.dbg.value(metadata i8* %1, metadata !4157, metadata !DIExpression()), !dbg !4160
  call void @llvm.dbg.value(metadata i8* %2, metadata !4158, metadata !DIExpression()), !dbg !4160
  call void @llvm.dbg.value(metadata i16 %3, metadata !4159, metadata !DIExpression()), !dbg !4160
  %5 = icmp eq i32 (i8*, i32, i8*)* %0, null, !dbg !4161
  br i1 %5, label %6, label %9, !dbg !4163

6:                                                ; preds = %4
  %7 = tail call i32 @strlen(i8* noundef %2) #25, !dbg !4164
  %8 = add i32 %7, 1, !dbg !4166
  br label %20, !dbg !4167

9:                                                ; preds = %4
  %10 = icmp eq i16 %3, 0, !dbg !4168
  br i1 %10, label %13, label %11, !dbg !4169

11:                                               ; preds = %9
  %12 = zext i16 %3 to i32, !dbg !4169
  br label %16, !dbg !4169

13:                                               ; preds = %9
  %14 = tail call i32 @strlen(i8* noundef %2) #25, !dbg !4170
  %15 = add i32 %14, 1, !dbg !4171
  br label %16, !dbg !4169

16:                                               ; preds = %13, %11
  %17 = phi i32 [ %12, %11 ], [ %15, %13 ], !dbg !4169
  %18 = and i32 %17, 65535, !dbg !4172
  call void @llvm.dbg.value(metadata i32 %17, metadata !4159, metadata !DIExpression()), !dbg !4160
  %19 = tail call i32 %0(i8* noundef %2, i32 noundef %18, i8* noundef %1) #25, !dbg !4173
  br label %20, !dbg !4174

20:                                               ; preds = %16, %6
  %21 = phi i32 [ %8, %6 ], [ %19, %16 ], !dbg !4160
  ret i32 %21, !dbg !4175
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !4176 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4178, metadata !DIExpression()), !dbg !4179
  ret i32 0, !dbg !4180
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #7 !dbg !4181 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !4185, metadata !DIExpression()), !dbg !4186
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !4187
  ret void, !dbg !4188
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #8 !dbg !4189 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !4190
  ret i8* %1, !dbg !4191
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !4192 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4203, metadata !DIExpression()), !dbg !4214
  call void @llvm.dbg.value(metadata i8* %0, metadata !4202, metadata !DIExpression()), !dbg !4214
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #24, !dbg !4215
  ret void, !dbg !4217
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !4218 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4222, metadata !DIExpression()), !dbg !4224
  call void @llvm.dbg.value(metadata i8* %1, metadata !4223, metadata !DIExpression()), !dbg !4224
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4225
  %4 = tail call i32 %3(i32 noundef %0) #25, !dbg !4225
  ret i32 %4, !dbg !4226
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !4227 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4234, metadata !DIExpression()), !dbg !4235
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4231, metadata !DIExpression()), !dbg !4235
  call void @llvm.dbg.value(metadata i8* %1, metadata !4232, metadata !DIExpression()), !dbg !4235
  call void @llvm.dbg.value(metadata i8* %2, metadata !4233, metadata !DIExpression()), !dbg !4235
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #25, !dbg !4236
  ret void, !dbg !4237
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !4238 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4242, metadata !DIExpression()), !dbg !4245
  call void @llvm.dbg.value(metadata i32 %1, metadata !4243, metadata !DIExpression()), !dbg !4245
  call void @llvm.dbg.value(metadata i32 0, metadata !4244, metadata !DIExpression()), !dbg !4245
  %3 = icmp eq i32 %1, 0, !dbg !4246
  br i1 %3, label %13, label %4, !dbg !4249

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !4244, metadata !DIExpression()), !dbg !4245
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4250
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !4252
  %8 = load i8, i8* %7, align 1, !dbg !4252
  %9 = zext i8 %8 to i32, !dbg !4252
  %10 = tail call i32 %6(i32 noundef %9) #25, !dbg !4250
  %11 = add nuw i32 %5, 1, !dbg !4253
  call void @llvm.dbg.value(metadata i32 %11, metadata !4244, metadata !DIExpression()), !dbg !4245
  %12 = icmp eq i32 %11, %1, !dbg !4246
  br i1 %12, label %13, label %4, !dbg !4249, !llvm.loop !4254

13:                                               ; preds = %4, %2
  ret void, !dbg !4256
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !4257 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4261, metadata !DIExpression()), !dbg !4263
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !4264
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !4264
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !4262, metadata !DIExpression()), !dbg !4265
  call void @llvm.va_start(i8* nonnull %3), !dbg !4266
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !4267
  %5 = load i32, i32* %4, align 4, !dbg !4267
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !4267
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #24, !dbg !4267
  call void @llvm.va_end(i8* nonnull %3), !dbg !4268
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !4269
  ret void, !dbg !4269
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !4270 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4274, metadata !DIExpression()), !dbg !4279
  call void @llvm.dbg.value(metadata i32 %1, metadata !4275, metadata !DIExpression()), !dbg !4279
  call void @llvm.dbg.value(metadata i8* %2, metadata !4276, metadata !DIExpression()), !dbg !4279
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !4280
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !4280
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !4277, metadata !DIExpression()), !dbg !4281
  call void @llvm.va_start(i8* nonnull %5), !dbg !4282
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !4283
  %7 = load i32, i32* %6, align 4, !dbg !4283
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !4283
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #24, !dbg !4283
  call void @llvm.dbg.value(metadata i32 %9, metadata !4278, metadata !DIExpression()), !dbg !4279
  call void @llvm.va_end(i8* nonnull %5), !dbg !4284
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !4285
  ret i32 %9, !dbg !4286
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !4287 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !4294, metadata !DIExpression()), !dbg !4301
  call void @llvm.dbg.value(metadata i8* %0, metadata !4291, metadata !DIExpression()), !dbg !4301
  call void @llvm.dbg.value(metadata i32 %1, metadata !4292, metadata !DIExpression()), !dbg !4301
  call void @llvm.dbg.value(metadata i8* %2, metadata !4293, metadata !DIExpression()), !dbg !4301
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !4302
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #23, !dbg !4302
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !4295, metadata !DIExpression()), !dbg !4303
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !4304
  store i8* %0, i8** %7, align 4, !dbg !4304
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !4304
  store i32 %1, i32* %8, align 4, !dbg !4304
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !4304
  store i32 0, i32* %9, align 4, !dbg !4304
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #24, !dbg !4305
  %10 = load i32, i32* %9, align 4, !dbg !4306
  %11 = load i32, i32* %8, align 4, !dbg !4308
  %12 = icmp slt i32 %10, %11, !dbg !4309
  br i1 %12, label %13, label %15, !dbg !4310

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !4311
  store i8 0, i8* %14, align 1, !dbg !4313
  br label %15, !dbg !4314

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #23, !dbg !4315
  ret i32 %10, !dbg !4316
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #9 !dbg !4317 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4322, metadata !DIExpression()), !dbg !4324
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !4323, metadata !DIExpression()), !dbg !4324
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !4325
  %4 = load i8*, i8** %3, align 4, !dbg !4325
  %5 = icmp eq i8* %4, null, !dbg !4327
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !4328
  br i1 %5, label %12, label %8, !dbg !4329

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !4330
  %10 = load i32, i32* %9, align 4, !dbg !4330
  %11 = icmp slt i32 %7, %10, !dbg !4331
  br i1 %11, label %15, label %12, !dbg !4332

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !4333
  %14 = add nsw i32 %7, 1, !dbg !4335
  store i32 %14, i32* %13, align 4, !dbg !4335
  br label %25, !dbg !4336

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !4337
  %17 = icmp eq i32 %7, %16, !dbg !4339
  br i1 %17, label %18, label %21, !dbg !4340

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !4341
  store i32 %19, i32* %6, align 4, !dbg !4341
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4343
  store i8 0, i8* %20, align 1, !dbg !4344
  br label %25, !dbg !4345

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !4346
  %23 = add nsw i32 %7, 1, !dbg !4348
  store i32 %23, i32* %6, align 4, !dbg !4348
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4349
  store i8 %22, i8* %24, align 1, !dbg !4350
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !4351
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #10 !dbg !4352 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !4357, metadata !DIExpression()), !dbg !4361
  call void @llvm.dbg.value(metadata i8* %1, metadata !4358, metadata !DIExpression()), !dbg !4361
  call void @llvm.dbg.value(metadata i8* %2, metadata !4359, metadata !DIExpression()), !dbg !4361
  call void @llvm.dbg.value(metadata i8* %3, metadata !4360, metadata !DIExpression()), !dbg !4361
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #25, !dbg !4362
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #26, !dbg !4363
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #24, !dbg !4364
  unreachable, !dbg !4365
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #11 !dbg !4366 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #26, !dbg !4473
  ret %struct.k_thread* %1, !dbg !4474
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !4475 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !4480, metadata !DIExpression()), !dbg !4481
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4482, !srcloc !4484
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !4485
  ret void, !dbg !4486
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #11 !dbg !4487 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4488, !srcloc !4490
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !4491
  ret %struct.k_thread* %1, !dbg !4492
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !4493 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4506, metadata !DIExpression()), !dbg !4632
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4503, metadata !DIExpression()), !dbg !4632
  call void @llvm.dbg.value(metadata i8* %1, metadata !4504, metadata !DIExpression()), !dbg !4632
  call void @llvm.dbg.value(metadata i8* %2, metadata !4505, metadata !DIExpression()), !dbg !4632
  call void @llvm.dbg.value(metadata i32 %4, metadata !4507, metadata !DIExpression()), !dbg !4632
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !4633
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #23, !dbg !4633
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !4508, metadata !DIExpression()), !dbg !4634
  call void @llvm.dbg.value(metadata i32 0, metadata !4512, metadata !DIExpression()), !dbg !4632
  call void @llvm.dbg.value(metadata i1 undef, metadata !4514, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4632
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !4635

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !4635

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !4636
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !4506, metadata !DIExpression()), !dbg !4632
  call void @llvm.dbg.value(metadata i8* %30, metadata !4505, metadata !DIExpression()), !dbg !4632
  call void @llvm.dbg.value(metadata i32 %29, metadata !4512, metadata !DIExpression()), !dbg !4632
  %31 = load i8, i8* %30, align 1, !dbg !4637
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !4635

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !4637
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4638
  call void @llvm.dbg.value(metadata i8* %34, metadata !4505, metadata !DIExpression()), !dbg !4632
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #25, !dbg !4638
  call void @llvm.dbg.value(metadata i32 %35, metadata !4516, metadata !DIExpression()), !dbg !4639
  %36 = icmp slt i32 %35, 0, !dbg !4640
  %37 = add i32 %29, 1, !dbg !4638
  call void @llvm.dbg.value(metadata i32 undef, metadata !4512, metadata !DIExpression()), !dbg !4632
  br i1 %36, label %365, label %28, !llvm.loop !4642

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4644
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !4521, metadata !DIExpression()), !dbg !4645
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !4645
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !4564, metadata !DIExpression()), !dbg !4646
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !4567, metadata !DIExpression()), !dbg !4646
  call void @llvm.dbg.value(metadata i8* %30, metadata !4570, metadata !DIExpression()), !dbg !4646
  call void @llvm.dbg.value(metadata i32 -1, metadata !4571, metadata !DIExpression()), !dbg !4646
  call void @llvm.dbg.value(metadata i32 -1, metadata !4572, metadata !DIExpression()), !dbg !4646
  call void @llvm.dbg.value(metadata i8* null, metadata !4573, metadata !DIExpression()), !dbg !4646
  call void @llvm.dbg.value(metadata i8* %14, metadata !4574, metadata !DIExpression()), !dbg !4646
  call void @llvm.dbg.value(metadata i8 0, metadata !4575, metadata !DIExpression()), !dbg !4646
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #24, !dbg !4647
  call void @llvm.dbg.value(metadata i8* %39, metadata !4505, metadata !DIExpression()), !dbg !4632
  %40 = load i24, i24* %15, align 8, !dbg !4648
  %41 = and i24 %40, 256, !dbg !4648
  %42 = icmp eq i24 %41, 0, !dbg !4648
  br i1 %42, label %51, label %43, !dbg !4650

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !4651
  call void @llvm.dbg.value(metadata i8* %44, metadata !4506, metadata !DIExpression()), !dbg !4632
  %45 = bitcast i8* %27 to i32*, !dbg !4651
  %46 = load i32, i32* %45, align 4, !dbg !4651
  call void @llvm.dbg.value(metadata i32 %46, metadata !4571, metadata !DIExpression()), !dbg !4646
  %47 = icmp slt i32 %46, 0, !dbg !4653
  br i1 %47, label %48, label %56, !dbg !4655

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !4656
  store i24 %49, i24* %15, align 8, !dbg !4656
  %50 = sub nsw i32 0, %46, !dbg !4658
  call void @llvm.dbg.value(metadata i32 %50, metadata !4571, metadata !DIExpression()), !dbg !4646
  br label %56, !dbg !4659

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !4660
  %53 = icmp eq i24 %52, 0, !dbg !4660
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !4662
  br label %56, !dbg !4662

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !4663
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !4646
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4506, metadata !DIExpression()), !dbg !4632
  call void @llvm.dbg.value(metadata i32 %58, metadata !4571, metadata !DIExpression()), !dbg !4646
  %60 = and i24 %57, 1024, !dbg !4663
  %61 = icmp eq i24 %60, 0, !dbg !4663
  br i1 %61, label %69, label %62, !dbg !4664

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !4665
  call void @llvm.dbg.value(metadata i8* %63, metadata !4506, metadata !DIExpression()), !dbg !4632
  %64 = bitcast i8* %59 to i32*, !dbg !4665
  %65 = load i32, i32* %64, align 4, !dbg !4665
  call void @llvm.dbg.value(metadata i32 %65, metadata !4576, metadata !DIExpression()), !dbg !4666
  %66 = icmp slt i32 %65, 0, !dbg !4667
  br i1 %66, label %67, label %74, !dbg !4669

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !4670
  store i24 %68, i24* %15, align 8, !dbg !4670
  br label %74, !dbg !4672

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !4673
  %71 = icmp eq i24 %70, 0, !dbg !4673
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !4675
  br label %74, !dbg !4675

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !4676
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !4646
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !4646
  call void @llvm.dbg.value(metadata i8* %77, metadata !4506, metadata !DIExpression()), !dbg !4632
  call void @llvm.dbg.value(metadata i32 %76, metadata !4572, metadata !DIExpression()), !dbg !4646
  store i32 0, i32* %16, align 4, !dbg !4677
  store i32 0, i32* %17, align 8, !dbg !4678
  %78 = lshr i24 %75, 16, !dbg !4676
  call void @llvm.dbg.value(metadata i24 %78, metadata !4579, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4646
  %79 = lshr i24 %75, 11, !dbg !4679
  %80 = and i24 %79, 15, !dbg !4679
  %81 = zext i24 %80 to i32, !dbg !4679
  call void @llvm.dbg.value(metadata i32 %81, metadata !4580, metadata !DIExpression()), !dbg !4646
  %82 = trunc i24 %78 to i3, !dbg !4680
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !4680

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !4681

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4684
  call void @llvm.dbg.value(metadata i8* %85, metadata !4506, metadata !DIExpression()), !dbg !4632
  %86 = bitcast i8* %77 to i32*, !dbg !4684
  %87 = load i32, i32* %86, align 4, !dbg !4684
  %88 = sext i32 %87 to i64, !dbg !4684
  store i64 %88, i64* %20, align 8, !dbg !4686
  br label %115, !dbg !4687

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4688
  call void @llvm.dbg.value(metadata i8* %90, metadata !4506, metadata !DIExpression()), !dbg !4632
  %91 = bitcast i8* %77 to i32*, !dbg !4688
  %92 = load i32, i32* %91, align 4, !dbg !4688
  %93 = sext i32 %92 to i64, !dbg !4688
  store i64 %93, i64* %20, align 8, !dbg !4691
  br label %115, !dbg !4692

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !4693
  %96 = add i32 %95, 7, !dbg !4693
  %97 = and i32 %96, -8, !dbg !4693
  %98 = inttoptr i32 %97 to i8*, !dbg !4693
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4693
  call void @llvm.dbg.value(metadata i8* %99, metadata !4506, metadata !DIExpression()), !dbg !4632
  %100 = inttoptr i32 %97 to i64*, !dbg !4693
  %101 = load i64, i64* %100, align 8, !dbg !4693
  store i64 %101, i64* %20, align 8, !dbg !4694
  br label %115, !dbg !4695

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !4696
  %104 = add i32 %103, 7, !dbg !4696
  %105 = and i32 %104, -8, !dbg !4696
  %106 = inttoptr i32 %105 to i8*, !dbg !4696
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !4696
  call void @llvm.dbg.value(metadata i8* %107, metadata !4506, metadata !DIExpression()), !dbg !4632
  %108 = inttoptr i32 %105 to i64*, !dbg !4696
  %109 = load i64, i64* %108, align 8, !dbg !4696
  store i64 %109, i64* %20, align 8, !dbg !4697
  br label %115, !dbg !4698

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4699
  call void @llvm.dbg.value(metadata i8* %111, metadata !4506, metadata !DIExpression()), !dbg !4632
  %112 = bitcast i8* %77 to i32*, !dbg !4699
  %113 = load i32, i32* %112, align 4, !dbg !4699
  %114 = sext i32 %113 to i64, !dbg !4700
  store i64 %114, i64* %20, align 8, !dbg !4701
  br label %115, !dbg !4702

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !4703
  call void @llvm.dbg.value(metadata i8* %117, metadata !4506, metadata !DIExpression()), !dbg !4632
  %118 = trunc i24 %79 to i4, !dbg !4704
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !4704

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !4705
  %121 = ashr exact i64 %120, 56, !dbg !4705
  store i64 %121, i64* %20, align 8, !dbg !4708
  br label %177, !dbg !4709

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !4710
  %124 = ashr exact i64 %123, 48, !dbg !4710
  store i64 %124, i64* %20, align 8, !dbg !4713
  br label %177, !dbg !4714

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !4715

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4718
  call void @llvm.dbg.value(metadata i8* %127, metadata !4506, metadata !DIExpression()), !dbg !4632
  %128 = bitcast i8* %77 to i32*, !dbg !4718
  %129 = load i32, i32* %128, align 4, !dbg !4718
  %130 = zext i32 %129 to i64, !dbg !4718
  store i64 %130, i64* %20, align 8, !dbg !4720
  br label %157, !dbg !4721

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4722
  call void @llvm.dbg.value(metadata i8* %132, metadata !4506, metadata !DIExpression()), !dbg !4632
  call void @llvm.dbg.value(metadata i8* %132, metadata !4506, metadata !DIExpression()), !dbg !4632
  %133 = bitcast i8* %77 to i32*, !dbg !4722
  %134 = load i32, i32* %133, align 4, !dbg !4722
  %135 = zext i32 %134 to i64, !dbg !4722
  store i64 %135, i64* %20, align 8, !dbg !4722
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !4724
  %138 = add i32 %137, 7, !dbg !4724
  %139 = and i32 %138, -8, !dbg !4724
  %140 = inttoptr i32 %139 to i8*, !dbg !4724
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !4724
  call void @llvm.dbg.value(metadata i8* %141, metadata !4506, metadata !DIExpression()), !dbg !4632
  %142 = inttoptr i32 %139 to i64*, !dbg !4724
  %143 = load i64, i64* %142, align 8, !dbg !4724
  store i64 %143, i64* %20, align 8, !dbg !4725
  br label %157, !dbg !4726

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !4727
  %146 = add i32 %145, 7, !dbg !4727
  %147 = and i32 %146, -8, !dbg !4727
  %148 = inttoptr i32 %147 to i8*, !dbg !4727
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !4727
  call void @llvm.dbg.value(metadata i8* %149, metadata !4506, metadata !DIExpression()), !dbg !4632
  %150 = inttoptr i32 %147 to i64*, !dbg !4727
  %151 = load i64, i64* %150, align 8, !dbg !4727
  store i64 %151, i64* %20, align 8, !dbg !4728
  br label %157, !dbg !4729

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4730
  call void @llvm.dbg.value(metadata i8* %153, metadata !4506, metadata !DIExpression()), !dbg !4632
  %154 = bitcast i8* %77 to i32*, !dbg !4730
  %155 = load i32, i32* %154, align 4, !dbg !4730
  %156 = zext i32 %155 to i64, !dbg !4731
  store i64 %156, i64* %20, align 8, !dbg !4732
  br label %157, !dbg !4733

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !4734
  call void @llvm.dbg.value(metadata i8* %159, metadata !4506, metadata !DIExpression()), !dbg !4632
  %160 = trunc i24 %79 to i4, !dbg !4735
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !4735

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !4736
  store i64 %162, i64* %20, align 8, !dbg !4739
  br label %177, !dbg !4740

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !4741
  store i64 %164, i64* %20, align 8, !dbg !4744
  br label %177, !dbg !4745

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !4746
  %167 = add i32 %166, 7, !dbg !4746
  %168 = and i32 %167, -8, !dbg !4746
  %169 = inttoptr i32 %168 to i8*, !dbg !4746
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !4746
  call void @llvm.dbg.value(metadata i8* %170, metadata !4506, metadata !DIExpression()), !dbg !4632
  call void @llvm.dbg.value(metadata i8* %170, metadata !4506, metadata !DIExpression()), !dbg !4632
  %171 = inttoptr i32 %168 to double*, !dbg !4746
  %172 = load double, double* %171, align 8, !dbg !4746
  store double %172, double* %19, align 8, !dbg !4746
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4750
  call void @llvm.dbg.value(metadata i8* %174, metadata !4506, metadata !DIExpression()), !dbg !4632
  %175 = bitcast i8* %77 to i8**, !dbg !4750
  %176 = load i8*, i8** %175, align 4, !dbg !4750
  store i8* %176, i8** %18, align 8, !dbg !4753
  br label %177, !dbg !4754

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !4646
  call void @llvm.dbg.value(metadata i8* %178, metadata !4506, metadata !DIExpression()), !dbg !4632
  %179 = and i24 %75, 3, !dbg !4755
  %180 = icmp eq i24 %179, 0, !dbg !4755
  br i1 %180, label %185, label %181, !dbg !4755

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #24, !dbg !4756
  call void @llvm.dbg.value(metadata i32 %182, metadata !4581, metadata !DIExpression()), !dbg !4757
  %183 = icmp slt i32 %182, 0, !dbg !4758
  %184 = add i32 %182, %29, !dbg !4756
  call void @llvm.dbg.value(metadata i32 undef, metadata !4512, metadata !DIExpression()), !dbg !4632
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !4760
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !4761

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #25, !dbg !4762
  call void @llvm.dbg.value(metadata i32 %188, metadata !4585, metadata !DIExpression()), !dbg !4763
  %189 = icmp slt i32 %188, 0, !dbg !4764
  %190 = add i32 %29, 1, !dbg !4762
  call void @llvm.dbg.value(metadata i32 undef, metadata !4512, metadata !DIExpression()), !dbg !4632
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !4766
  call void @llvm.dbg.value(metadata i8* %192, metadata !4573, metadata !DIExpression()), !dbg !4646
  %193 = icmp sgt i32 %76, -1, !dbg !4767
  br i1 %193, label %194, label %196, !dbg !4769

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #25, !dbg !4770
  call void @llvm.dbg.value(metadata i32 %195, metadata !4588, metadata !DIExpression()), !dbg !4772
  br label %241, !dbg !4773

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #25, !dbg !4774
  call void @llvm.dbg.value(metadata i32 %197, metadata !4588, metadata !DIExpression()), !dbg !4772
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !4573, metadata !DIExpression()), !dbg !4646
  %199 = load i64, i64* %20, align 8, !dbg !4776
  %200 = trunc i64 %199 to i8, !dbg !4777
  store i8 %200, i8* %10, align 1, !dbg !4778
  call void @llvm.dbg.value(metadata i8* %23, metadata !4574, metadata !DIExpression()), !dbg !4646
  br label %245, !dbg !4779

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !4780
  %203 = icmp eq i24 %202, 0, !dbg !4780
  %204 = trunc i24 %75 to i8, !dbg !4782
  %205 = shl i8 %204, 1, !dbg !4782
  %206 = and i8 %205, 32, !dbg !4782
  %207 = select i1 %203, i8 %206, i8 43, !dbg !4782
  call void @llvm.dbg.value(metadata i8 %207, metadata !4575, metadata !DIExpression()), !dbg !4646
  %208 = load i64, i64* %20, align 8, !dbg !4783
  call void @llvm.dbg.value(metadata i64 %208, metadata !4513, metadata !DIExpression()), !dbg !4632
  %209 = icmp slt i64 %208, 0, !dbg !4784
  br i1 %209, label %210, label %212, !dbg !4786

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !4575, metadata !DIExpression()), !dbg !4646
  %211 = sub nsw i64 0, %208, !dbg !4787
  store i64 %211, i64* %20, align 8, !dbg !4789
  br label %212, !dbg !4790

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !4646
  call void @llvm.dbg.value(metadata i8 %213, metadata !4575, metadata !DIExpression()), !dbg !4646
  %214 = load i64, i64* %20, align 8, !dbg !4791
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !4792
  call void @llvm.dbg.value(metadata i8* %215, metadata !4573, metadata !DIExpression()), !dbg !4646
  br label %216, !dbg !4793

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !4794
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !4795
  call void @llvm.dbg.value(metadata i8* %218, metadata !4573, metadata !DIExpression()), !dbg !4646
  call void @llvm.dbg.value(metadata i8 %217, metadata !4575, metadata !DIExpression()), !dbg !4646
  call void @llvm.dbg.label(metadata !4631), !dbg !4796
  %219 = icmp sgt i32 %76, -1, !dbg !4797
  br i1 %219, label %222, label %220, !dbg !4798

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !4799
  br label %245, !dbg !4798

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !4801
  %224 = sub i32 %22, %223, !dbg !4801
  call void @llvm.dbg.value(metadata i32 %224, metadata !4590, metadata !DIExpression()), !dbg !4802
  %225 = load i24, i24* %15, align 8, !dbg !4803
  %226 = and i24 %225, -65, !dbg !4803
  store i24 %226, i24* %15, align 8, !dbg !4803
  %227 = icmp ugt i32 %76, %224, !dbg !4804
  br i1 %227, label %228, label %245, !dbg !4806

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !4807
  store i32 %229, i32* %16, align 4, !dbg !4809
  br label %245, !dbg !4810

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !4811
  %232 = icmp eq i8* %231, null, !dbg !4813
  br i1 %232, label %245, label %233, !dbg !4814

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !4815
  %235 = zext i32 %234 to i64, !dbg !4815
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !4817
  call void @llvm.dbg.value(metadata i8* %236, metadata !4573, metadata !DIExpression()), !dbg !4646
  %237 = load i24, i24* %15, align 8, !dbg !4818
  %238 = or i24 %237, 1048576, !dbg !4818
  store i24 %238, i24* %15, align 8, !dbg !4818
  store i8 120, i8* %21, align 1, !dbg !4819
  br label %216, !dbg !4820

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !4821
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #24, !dbg !4824
  br label %363, !dbg !4825

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !4826
  call void @llvm.dbg.value(metadata i32 %242, metadata !4588, metadata !DIExpression()), !dbg !4772
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !4827
  call void @llvm.dbg.value(metadata i32 -1, metadata !4572, metadata !DIExpression()), !dbg !4646
  call void @llvm.dbg.value(metadata i32 %29, metadata !4512, metadata !DIExpression()), !dbg !4632
  call void @llvm.dbg.value(metadata i8* %192, metadata !4573, metadata !DIExpression()), !dbg !4646
  call void @llvm.dbg.value(metadata i8* %243, metadata !4574, metadata !DIExpression()), !dbg !4646
  call void @llvm.dbg.value(metadata i8 0, metadata !4575, metadata !DIExpression()), !dbg !4646
  %244 = icmp eq i8* %192, null, !dbg !4828
  br i1 %244, label %363, label %245, !dbg !4830, !llvm.loop !4642

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !4799
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !4593, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4646
  call void @llvm.dbg.value(metadata i32 0, metadata !4594, metadata !DIExpression()), !dbg !4646
  %250 = zext i8 %249 to i32, !dbg !4831
  %251 = icmp eq i8 %249, 0, !dbg !4833
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !4593, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4646
  call void @llvm.dbg.value(metadata i32 undef, metadata !4593, metadata !DIExpression()), !dbg !4646
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !4593, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4646
  call void @llvm.dbg.value(metadata i32 undef, metadata !4593, metadata !DIExpression()), !dbg !4646
  %252 = icmp sgt i32 %58, 0, !dbg !4834
  br i1 %252, label %253, label %302, !dbg !4835

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !4799
  %255 = icmp eq i24 %254, 0, !dbg !4799
  %256 = ptrtoint i8* %248 to i32, !dbg !4836
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !4593, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4646
  %257 = ptrtoint i8* %247 to i32, !dbg !4836
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !4593, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4646
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !4593, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4646
  %258 = xor i1 %251, true, !dbg !4837
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4593, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4646
  %259 = sext i1 %258 to i32, !dbg !4837
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4593, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4646
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !4593, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4646
  %260 = lshr i24 %246, 19, !dbg !4838
  %261 = and i24 %260, 1, !dbg !4838
  %262 = select i1 %255, i24 %261, i24 2, !dbg !4838
  %263 = zext i24 %262 to i32, !dbg !4838
  %264 = add i32 %257, %259, !dbg !4838
  %265 = add i32 %256, %263, !dbg !4838
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !4593, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4646
  %266 = and i24 %246, 4194304, !dbg !4839
  %267 = icmp eq i24 %266, 0, !dbg !4839
  %268 = load i32, i32* %16, align 4, !dbg !4841
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !4593, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4646
  call void @llvm.dbg.value(metadata i32 undef, metadata !4593, metadata !DIExpression()), !dbg !4646
  %269 = load i32, i32* %17, align 8, !dbg !4842
  %270 = select i1 %267, i32 0, i32 %269, !dbg !4842
  call void @llvm.dbg.value(metadata i32 undef, metadata !4593, metadata !DIExpression()), !dbg !4646
  %271 = add i32 %264, %58, !dbg !4842
  %272 = add i32 %265, %268, !dbg !4842
  %273 = add i32 %272, %270, !dbg !4843
  %274 = sub i32 %271, %273, !dbg !4843
  call void @llvm.dbg.value(metadata i32 %274, metadata !4571, metadata !DIExpression()), !dbg !4646
  %275 = and i24 %246, 4, !dbg !4844
  %276 = icmp eq i24 %275, 0, !dbg !4844
  br i1 %276, label %277, label %302, !dbg !4845

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !4595, metadata !DIExpression()), !dbg !4846
  %278 = and i24 %246, 64, !dbg !4847
  %279 = icmp eq i24 %278, 0, !dbg !4847
  %280 = select i1 %279, i1 true, i1 %251, !dbg !4848
  %281 = select i1 %279, i8 %249, i8 0, !dbg !4848
  %282 = select i1 %279, i32 32, i32 48, !dbg !4848
  br i1 %280, label %287, label %283, !dbg !4848

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #25, !dbg !4849
  call void @llvm.dbg.value(metadata i32 %284, metadata !4600, metadata !DIExpression()), !dbg !4850
  %285 = icmp slt i32 %284, 0, !dbg !4851
  %286 = add i32 %29, 1, !dbg !4849
  call void @llvm.dbg.value(metadata i32 undef, metadata !4512, metadata !DIExpression()), !dbg !4632
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !4646
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !4636
  call void @llvm.dbg.value(metadata i32 %290, metadata !4512, metadata !DIExpression()), !dbg !4632
  call void @llvm.dbg.value(metadata i8 undef, metadata !4595, metadata !DIExpression()), !dbg !4846
  call void @llvm.dbg.value(metadata i8 %288, metadata !4575, metadata !DIExpression()), !dbg !4646
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !4853
  %292 = add i32 %291, -1, !dbg !4853
  br label %293, !dbg !4853

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !4854
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !4636
  call void @llvm.dbg.value(metadata i32 %295, metadata !4512, metadata !DIExpression()), !dbg !4632
  call void @llvm.dbg.value(metadata i32 %294, metadata !4571, metadata !DIExpression()), !dbg !4646
  call void @llvm.dbg.value(metadata i32 %294, metadata !4571, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4646
  %296 = icmp sgt i32 %294, 0, !dbg !4855
  br i1 %296, label %297, label %302, !dbg !4853

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !4856
  call void @llvm.dbg.value(metadata i32 %298, metadata !4571, metadata !DIExpression()), !dbg !4646
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #25, !dbg !4857
  call void @llvm.dbg.value(metadata i32 %299, metadata !4606, metadata !DIExpression()), !dbg !4858
  %300 = icmp slt i32 %299, 0, !dbg !4859
  %301 = add i32 %295, 1, !dbg !4857
  call void @llvm.dbg.value(metadata i32 undef, metadata !4512, metadata !DIExpression()), !dbg !4632
  br i1 %300, label %361, label %293, !llvm.loop !4861

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !4646
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !4646
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !4636
  call void @llvm.dbg.value(metadata i32 %305, metadata !4512, metadata !DIExpression()), !dbg !4632
  call void @llvm.dbg.value(metadata i32 %304, metadata !4571, metadata !DIExpression()), !dbg !4646
  call void @llvm.dbg.value(metadata i8 %303, metadata !4575, metadata !DIExpression()), !dbg !4646
  %306 = icmp eq i8 %303, 0, !dbg !4863
  br i1 %306, label %312, label %307, !dbg !4864

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !4865
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #25, !dbg !4866
  call void @llvm.dbg.value(metadata i32 %309, metadata !4609, metadata !DIExpression()), !dbg !4867
  %310 = icmp slt i32 %309, 0, !dbg !4868
  %311 = add i32 %305, 1, !dbg !4866
  call void @llvm.dbg.value(metadata i32 undef, metadata !4512, metadata !DIExpression()), !dbg !4632
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !4636
  call void @llvm.dbg.value(metadata i32 %313, metadata !4512, metadata !DIExpression()), !dbg !4632
  %314 = lshr i24 %246, 20, !dbg !4870
  %315 = lshr i24 %246, 19, !dbg !4871
  %316 = or i24 %314, %315, !dbg !4872
  %317 = and i24 %316, 1, !dbg !4872
  %318 = icmp eq i24 %317, 0, !dbg !4872
  br i1 %318, label %323, label %319, !dbg !4873

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !4874
  call void @llvm.dbg.value(metadata i32 %320, metadata !4613, metadata !DIExpression()), !dbg !4875
  %321 = icmp slt i32 %320, 0, !dbg !4876
  %322 = add i32 %313, 1, !dbg !4874
  call void @llvm.dbg.value(metadata i32 undef, metadata !4512, metadata !DIExpression()), !dbg !4632
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !4636
  call void @llvm.dbg.value(metadata i32 %324, metadata !4512, metadata !DIExpression()), !dbg !4632
  %325 = and i24 %246, 1048576, !dbg !4878
  %326 = icmp eq i24 %325, 0, !dbg !4878
  br i1 %326, label %333, label %327, !dbg !4879

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !4880
  %329 = zext i8 %328 to i32, !dbg !4880
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #25, !dbg !4880
  call void @llvm.dbg.value(metadata i32 %330, metadata !4619, metadata !DIExpression()), !dbg !4881
  %331 = icmp slt i32 %330, 0, !dbg !4882
  %332 = add i32 %324, 1, !dbg !4880
  call void @llvm.dbg.value(metadata i32 undef, metadata !4512, metadata !DIExpression()), !dbg !4632
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !4636
  call void @llvm.dbg.value(metadata i32 %334, metadata !4512, metadata !DIExpression()), !dbg !4632
  %335 = load i32, i32* %16, align 4, !dbg !4884
  call void @llvm.dbg.value(metadata i32 %335, metadata !4594, metadata !DIExpression()), !dbg !4646
  br label %336, !dbg !4885

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !4886
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !4636
  call void @llvm.dbg.value(metadata i32 %338, metadata !4512, metadata !DIExpression()), !dbg !4632
  call void @llvm.dbg.value(metadata i32 %337, metadata !4594, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4646
  %339 = icmp sgt i32 %337, 0, !dbg !4887
  br i1 %339, label %340, label %345, !dbg !4885

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !4888
  call void @llvm.dbg.value(metadata i32 %341, metadata !4594, metadata !DIExpression()), !dbg !4646
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !4889
  call void @llvm.dbg.value(metadata i32 %342, metadata !4623, metadata !DIExpression()), !dbg !4890
  %343 = icmp slt i32 %342, 0, !dbg !4891
  %344 = add i32 %338, 1, !dbg !4889
  call void @llvm.dbg.value(metadata i32 undef, metadata !4512, metadata !DIExpression()), !dbg !4632
  br i1 %343, label %361, label %336, !llvm.loop !4893

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #24, !dbg !4895
  call void @llvm.dbg.value(metadata i32 %346, metadata !4626, metadata !DIExpression()), !dbg !4896
  %347 = icmp slt i32 %346, 0, !dbg !4897
  call void @llvm.dbg.value(metadata i32 undef, metadata !4512, metadata !DIExpression()), !dbg !4632
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !4895
  call void @llvm.dbg.value(metadata i32 %349, metadata !4512, metadata !DIExpression()), !dbg !4632
  call void @llvm.dbg.value(metadata i32 %304, metadata !4571, metadata !DIExpression()), !dbg !4646
  %350 = icmp sgt i32 %304, 0, !dbg !4899
  br i1 %350, label %351, label %363, !dbg !4900

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !4900
  %353 = add i32 %352, %338, !dbg !4900
  br label %354, !dbg !4900

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4512, metadata !DIExpression()), !dbg !4632
  call void @llvm.dbg.value(metadata i32 %355, metadata !4571, metadata !DIExpression()), !dbg !4646
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #25, !dbg !4901
  call void @llvm.dbg.value(metadata i32 %356, metadata !4628, metadata !DIExpression()), !dbg !4902
  %357 = icmp slt i32 %356, 0, !dbg !4903
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !4905
  call void @llvm.dbg.value(metadata i32 undef, metadata !4512, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4632
  call void @llvm.dbg.value(metadata i32 %359, metadata !4571, metadata !DIExpression()), !dbg !4646
  %360 = icmp sgt i32 %355, 1, !dbg !4899
  br i1 %360, label %354, label %363, !dbg !4900, !llvm.loop !4906

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !4512, metadata !DIExpression()), !dbg !4632
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4643
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !4636
  call void @llvm.dbg.value(metadata i32 %364, metadata !4512, metadata !DIExpression()), !dbg !4632
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4643
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !4632
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #23, !dbg !4908
  ret i32 %366, !dbg !4908
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #12

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !4909 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4913, metadata !DIExpression()), !dbg !4915
  call void @llvm.dbg.value(metadata i8* %1, metadata !4914, metadata !DIExpression()), !dbg !4915
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !4916
  store i24 0, i24* %3, align 4, !dbg !4916
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !4916
  store i8 0, i8* %4, align 1, !dbg !4916
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !4916
  store i32 0, i32* %5, align 4, !dbg !4916
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !4916
  store i32 0, i32* %6, align 4, !dbg !4916
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4917
  call void @llvm.dbg.value(metadata i8* %7, metadata !4914, metadata !DIExpression()), !dbg !4915
  %8 = load i8, i8* %7, align 1, !dbg !4918
  %9 = icmp eq i8 %8, 37, !dbg !4920
  br i1 %9, label %10, label %12, !dbg !4921

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4922
  call void @llvm.dbg.value(metadata i8* %11, metadata !4914, metadata !DIExpression()), !dbg !4915
  store i8 37, i8* %4, align 1, !dbg !4924
  br label %18, !dbg !4925

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #24, !dbg !4926
  call void @llvm.dbg.value(metadata i8* %13, metadata !4914, metadata !DIExpression()), !dbg !4915
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #24, !dbg !4927
  call void @llvm.dbg.value(metadata i8* %14, metadata !4914, metadata !DIExpression()), !dbg !4915
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #24, !dbg !4928
  call void @llvm.dbg.value(metadata i8* %15, metadata !4914, metadata !DIExpression()), !dbg !4915
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #24, !dbg !4929
  call void @llvm.dbg.value(metadata i8* %16, metadata !4914, metadata !DIExpression()), !dbg !4915
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #24, !dbg !4930
  call void @llvm.dbg.value(metadata i8* %17, metadata !4914, metadata !DIExpression()), !dbg !4915
  br label %18, !dbg !4931

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !4915
  ret i8* %19, !dbg !4932
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !4933 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4937, metadata !DIExpression()), !dbg !4944
  call void @llvm.dbg.value(metadata i8* %1, metadata !4938, metadata !DIExpression()), !dbg !4944
  call void @llvm.dbg.value(metadata i8* %2, metadata !4939, metadata !DIExpression()), !dbg !4944
  call void @llvm.dbg.value(metadata i8* %3, metadata !4940, metadata !DIExpression()), !dbg !4944
  call void @llvm.dbg.value(metadata i32 0, metadata !4941, metadata !DIExpression()), !dbg !4944
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !4945

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !4946
  call void @llvm.dbg.value(metadata i32 %9, metadata !4941, metadata !DIExpression()), !dbg !4944
  call void @llvm.dbg.value(metadata i8* %8, metadata !4939, metadata !DIExpression()), !dbg !4944
  %10 = icmp ult i8* %8, %3, !dbg !4947
  br i1 %10, label %11, label %13, !dbg !4948

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !4949
  br label %17, !dbg !4948

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !4950

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !4951
  %16 = icmp eq i8 %15, 0, !dbg !4950
  br i1 %16, label %24, label %17, !dbg !4945

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !4949
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !4952
  call void @llvm.dbg.value(metadata i8* %19, metadata !4939, metadata !DIExpression()), !dbg !4944
  %20 = zext i8 %18 to i32, !dbg !4953
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #25, !dbg !4954
  call void @llvm.dbg.value(metadata i32 %21, metadata !4942, metadata !DIExpression()), !dbg !4955
  %22 = icmp slt i32 %21, 0, !dbg !4956
  %23 = add i32 %9, 1, !dbg !4958
  call void @llvm.dbg.value(metadata i32 undef, metadata !4941, metadata !DIExpression()), !dbg !4944
  br i1 %22, label %24, label %7, !llvm.loop !4959

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !4944
  ret i32 %25, !dbg !4961
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #13 !dbg !4962 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !4966, metadata !DIExpression()), !dbg !4976
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !4967, metadata !DIExpression()), !dbg !4976
  call void @llvm.dbg.value(metadata i8* %2, metadata !4968, metadata !DIExpression()), !dbg !4976
  call void @llvm.dbg.value(metadata i8* %3, metadata !4969, metadata !DIExpression()), !dbg !4976
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !4977
  %6 = load i8, i8* %5, align 1, !dbg !4977
  %7 = zext i8 %6 to i32, !dbg !4978
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #24, !dbg !4979
  %9 = icmp eq i32 %8, 0, !dbg !4979
  call void @llvm.dbg.value(metadata i1 %9, metadata !4970, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4976
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #24, !dbg !4980
  call void @llvm.dbg.value(metadata i32 %10, metadata !4971, metadata !DIExpression()), !dbg !4976
  %11 = ptrtoint i8* %3 to i32, !dbg !4981
  %12 = ptrtoint i8* %2 to i32, !dbg !4981
  %13 = sub i32 %11, %12, !dbg !4981
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !4982
  call void @llvm.dbg.value(metadata i8* %14, metadata !4973, metadata !DIExpression()), !dbg !4976
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !4983

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !4976
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !4966, metadata !DIExpression()), !dbg !4976
  call void @llvm.dbg.value(metadata i8* %18, metadata !4973, metadata !DIExpression()), !dbg !4976
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !4984
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !4985
  call void @llvm.dbg.value(metadata i32 %25, metadata !4974, metadata !DIExpression()), !dbg !4986
  %26 = icmp ult i32 %25, 10, !dbg !4987
  %27 = select i1 %26, i32 48, i32 %16, !dbg !4988
  %28 = add i32 %27, %25, !dbg !4986
  %29 = trunc i32 %28 to i8, !dbg !4988
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !4989
  call void @llvm.dbg.value(metadata i8* %30, metadata !4973, metadata !DIExpression()), !dbg !4976
  store i8 %29, i8* %30, align 1, !dbg !4990
  call void @llvm.dbg.value(metadata i64 %22, metadata !4966, metadata !DIExpression()), !dbg !4976
  %31 = icmp uge i64 %19, %15, !dbg !4991
  %32 = icmp ugt i8* %30, %2, !dbg !4992
  %33 = and i1 %31, %32, !dbg !4992
  br i1 %33, label %17, label %34, !dbg !4993, !llvm.loop !4994

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !4996
  %36 = load i24, i24* %35, align 4, !dbg !4996
  %37 = and i24 %36, 32, !dbg !4996
  %38 = icmp eq i24 %37, 0, !dbg !4996
  br i1 %38, label %44, label %39, !dbg !4998

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !4999

40:                                               ; preds = %39
  br label %41, !dbg !5001

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !5005
  store i24 %43, i24* %35, align 4, !dbg !5005
  br label %44, !dbg !5006

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !5006
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #9 !dbg !5007 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5013, metadata !DIExpression()), !dbg !5016
  call void @llvm.dbg.value(metadata i8* %1, metadata !5014, metadata !DIExpression()), !dbg !5016
  call void @llvm.dbg.value(metadata i32 %2, metadata !5015, metadata !DIExpression()), !dbg !5016
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5017
  %5 = load i24, i24* %4, align 4, !dbg !5017
  %6 = lshr i24 %5, 11, !dbg !5017
  %7 = and i24 %6, 15, !dbg !5017
  %8 = zext i24 %7 to i32, !dbg !5017
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !5018

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !5019
  store i32 %2, i32* %10, align 4, !dbg !5021
  br label %28, !dbg !5022

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !5023
  store i8 %12, i8* %1, align 1, !dbg !5024
  br label %28, !dbg !5025

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !5026
  %15 = bitcast i8* %1 to i16*, !dbg !5027
  store i16 %14, i16* %15, align 2, !dbg !5028
  br label %28, !dbg !5029

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !5030
  store i32 %2, i32* %17, align 4, !dbg !5031
  br label %28, !dbg !5032

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !5033
  %20 = bitcast i8* %1 to i64*, !dbg !5034
  store i64 %19, i64* %20, align 8, !dbg !5035
  br label %28, !dbg !5036

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !5037
  %23 = bitcast i8* %1 to i64*, !dbg !5038
  store i64 %22, i64* %23, align 8, !dbg !5039
  br label %28, !dbg !5040

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !5041
  store i32 %2, i32* %25, align 4, !dbg !5042
  br label %28, !dbg !5043

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !5044
  store i32 %2, i32* %27, align 4, !dbg !5045
  br label %28, !dbg !5046

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !5047
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #2 !dbg !5048 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5051, metadata !DIExpression()), !dbg !5052
  %2 = add i32 %0, -65, !dbg !5053
  %3 = icmp ult i32 %2, 26, !dbg !5054
  %4 = zext i1 %3 to i32, !dbg !5054
  ret i32 %4, !dbg !5055
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #2 !dbg !5056 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5060, metadata !DIExpression()), !dbg !5061
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !5062

2:                                                ; preds = %1
  br label %4, !dbg !5063

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !5065

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !5066
  ret i32 %5, !dbg !5067
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #13 !dbg !5068 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5070, metadata !DIExpression()), !dbg !5073
  call void @llvm.dbg.value(metadata i8* %1, metadata !5071, metadata !DIExpression()), !dbg !5073
  call void @llvm.dbg.value(metadata i8 1, metadata !5072, metadata !DIExpression()), !dbg !5073
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !5074

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !5072, metadata !DIExpression()), !dbg !5073
  call void @llvm.dbg.value(metadata i8* %5, metadata !5071, metadata !DIExpression()), !dbg !5073
  %6 = load i8, i8* %5, align 1, !dbg !5075
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !5077

7:                                                ; preds = %4
  br label %11, !dbg !5078

8:                                                ; preds = %4
  br label %11, !dbg !5080

9:                                                ; preds = %4
  br label %11, !dbg !5081

10:                                               ; preds = %4
  br label %11, !dbg !5082

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5083
  %14 = or i24 %13, %12, !dbg !5083
  store i24 %14, i24* %3, align 4, !dbg !5083
  call void @llvm.dbg.value(metadata i8 poison, metadata !5072, metadata !DIExpression()), !dbg !5073
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !5071, metadata !DIExpression()), !dbg !5073
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !5072, metadata !DIExpression()), !dbg !5073
  call void @llvm.dbg.value(metadata i8* %15, metadata !5071, metadata !DIExpression()), !dbg !5073
  %17 = load i24, i24* %3, align 4, !dbg !5084
  %18 = and i24 %17, 68, !dbg !5086
  %19 = icmp eq i24 %18, 68, !dbg !5086
  br i1 %19, label %20, label %22, !dbg !5086

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5087
  store i24 %21, i24* %3, align 4, !dbg !5087
  br label %22, !dbg !5089

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5090
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5091 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5093, metadata !DIExpression()), !dbg !5097
  call void @llvm.dbg.value(metadata i8* %1, metadata !5094, metadata !DIExpression()), !dbg !5097
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5098
  %5 = load i24, i24* %4, align 4, !dbg !5099
  %6 = or i24 %5, 128, !dbg !5099
  store i24 %6, i24* %4, align 4, !dbg !5099
  call void @llvm.dbg.value(metadata i8* %1, metadata !5094, metadata !DIExpression()), !dbg !5097
  %7 = load i8, i8* %1, align 1, !dbg !5100
  %8 = icmp eq i8 %7, 42, !dbg !5102
  br i1 %8, label %9, label %12, !dbg !5103

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5104
  store i24 %10, i24* %4, align 4, !dbg !5104
  call void @llvm.dbg.value(metadata i8* %1, metadata !5094, metadata !DIExpression()), !dbg !5097
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5106
  call void @llvm.dbg.value(metadata i8* %11, metadata !5094, metadata !DIExpression()), !dbg !5097
  store i8* %11, i8** %3, align 4, !dbg !5106
  br label %29, !dbg !5107

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5095, metadata !DIExpression()), !dbg !5097
  call void @llvm.dbg.value(metadata i8** %3, metadata !5094, metadata !DIExpression(DW_OP_deref)), !dbg !5097
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !5108
  call void @llvm.dbg.value(metadata i32 %13, metadata !5096, metadata !DIExpression()), !dbg !5097
  %14 = load i8*, i8** %3, align 4, !dbg !5109
  call void @llvm.dbg.value(metadata i8* %14, metadata !5094, metadata !DIExpression()), !dbg !5097
  %15 = icmp eq i8* %14, %1, !dbg !5111
  br i1 %15, label %29, label %16, !dbg !5112

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5113
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5115
  store i32 %13, i32* %18, align 4, !dbg !5116
  %19 = lshr i32 %13, 31, !dbg !5117
  %20 = lshr i24 %17, 1, !dbg !5118
  %21 = and i24 %20, 1, !dbg !5118
  %22 = zext i24 %21 to i32, !dbg !5118
  %23 = or i32 %19, %22, !dbg !5118
  %24 = trunc i32 %23 to i24, !dbg !5118
  %25 = shl nuw nsw i24 %24, 1, !dbg !5118
  %26 = and i24 %17, -131, !dbg !5118
  %27 = or i24 %26, 128, !dbg !5118
  %28 = or i24 %25, %27, !dbg !5118
  store i24 %28, i24* %4, align 4, !dbg !5118
  br label %29, !dbg !5119

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5097
  ret i8* %30, !dbg !5120
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5121 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5123, metadata !DIExpression()), !dbg !5126
  call void @llvm.dbg.value(metadata i8* %1, metadata !5124, metadata !DIExpression()), !dbg !5126
  %4 = load i8, i8* %1, align 1, !dbg !5127
  %5 = icmp eq i8 %4, 46, !dbg !5128
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5129
  %7 = load i24, i24* %6, align 4, !dbg !5130
  %8 = select i1 %5, i24 512, i24 0, !dbg !5130
  %9 = and i24 %7, -513, !dbg !5130
  %10 = or i24 %9, %8, !dbg !5130
  store i24 %10, i24* %6, align 4, !dbg !5130
  br i1 %5, label %11, label %32, !dbg !5131

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5124, metadata !DIExpression()), !dbg !5126
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5132
  call void @llvm.dbg.value(metadata i8* %12, metadata !5124, metadata !DIExpression()), !dbg !5126
  store i8* %12, i8** %3, align 4, !dbg !5132
  %13 = load i8, i8* %12, align 1, !dbg !5133
  %14 = icmp eq i8 %13, 42, !dbg !5135
  br i1 %14, label %15, label %18, !dbg !5136

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !5137
  store i24 %16, i24* %6, align 4, !dbg !5137
  call void @llvm.dbg.value(metadata i8* %12, metadata !5124, metadata !DIExpression()), !dbg !5126
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5139
  call void @llvm.dbg.value(metadata i8* %17, metadata !5124, metadata !DIExpression()), !dbg !5126
  store i8* %17, i8** %3, align 4, !dbg !5139
  br label %32, !dbg !5140

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5124, metadata !DIExpression(DW_OP_deref)), !dbg !5126
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !5141
  call void @llvm.dbg.value(metadata i32 %19, metadata !5125, metadata !DIExpression()), !dbg !5126
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5142
  store i32 %19, i32* %20, align 4, !dbg !5143
  %21 = lshr i32 %19, 31, !dbg !5144
  %22 = load i24, i24* %6, align 4, !dbg !5145
  %23 = lshr i24 %22, 1, !dbg !5145
  %24 = and i24 %23, 1, !dbg !5145
  %25 = zext i24 %24 to i32, !dbg !5145
  %26 = or i32 %21, %25, !dbg !5145
  %27 = trunc i32 %26 to i24, !dbg !5145
  %28 = shl nuw nsw i24 %27, 1, !dbg !5145
  %29 = and i24 %22, -3, !dbg !5145
  %30 = or i24 %28, %29, !dbg !5145
  store i24 %30, i24* %6, align 4, !dbg !5145
  %31 = load i8*, i8** %3, align 4, !dbg !5146
  call void @llvm.dbg.value(metadata i8* %31, metadata !5124, metadata !DIExpression()), !dbg !5126
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5126
  ret i8* %33, !dbg !5147
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !5148 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5150, metadata !DIExpression()), !dbg !5152
  call void @llvm.dbg.value(metadata i8* %1, metadata !5151, metadata !DIExpression()), !dbg !5152
  %3 = load i8, i8* %1, align 1, !dbg !5153
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !5154

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5155
  call void @llvm.dbg.value(metadata i8* %5, metadata !5151, metadata !DIExpression()), !dbg !5152
  %6 = load i8, i8* %5, align 1, !dbg !5158
  %7 = icmp eq i8 %6, 104, !dbg !5159
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5160
  %9 = load i24, i24* %8, align 4, !dbg !5160
  %10 = and i24 %9, -30721, !dbg !5160
  br i1 %7, label %11, label %14, !dbg !5161

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !5162
  store i24 %12, i24* %8, align 4, !dbg !5162
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5164
  call void @llvm.dbg.value(metadata i8* %13, metadata !5151, metadata !DIExpression()), !dbg !5152
  br label %56, !dbg !5165

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !5166
  store i24 %15, i24* %8, align 4, !dbg !5166
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5168
  call void @llvm.dbg.value(metadata i8* %17, metadata !5151, metadata !DIExpression()), !dbg !5152
  %18 = load i8, i8* %17, align 1, !dbg !5170
  %19 = icmp eq i8 %18, 108, !dbg !5171
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !5172
  %21 = load i24, i24* %20, align 4, !dbg !5172
  %22 = and i24 %21, -30721, !dbg !5172
  br i1 %19, label %23, label %26, !dbg !5173

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !5174
  store i24 %24, i24* %20, align 4, !dbg !5174
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5176
  call void @llvm.dbg.value(metadata i8* %25, metadata !5151, metadata !DIExpression()), !dbg !5152
  br label %56, !dbg !5177

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !5178
  store i24 %27, i24* %20, align 4, !dbg !5178
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !5180
  %30 = load i24, i24* %29, align 4, !dbg !5181
  %31 = and i24 %30, -30721, !dbg !5181
  %32 = or i24 %31, 10240, !dbg !5181
  store i24 %32, i24* %29, align 4, !dbg !5181
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5182
  call void @llvm.dbg.value(metadata i8* %33, metadata !5151, metadata !DIExpression()), !dbg !5152
  br label %56, !dbg !5183

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !5184
  %36 = load i24, i24* %35, align 4, !dbg !5185
  %37 = and i24 %36, -30721, !dbg !5185
  %38 = or i24 %37, 12288, !dbg !5185
  store i24 %38, i24* %35, align 4, !dbg !5185
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5186
  call void @llvm.dbg.value(metadata i8* %39, metadata !5151, metadata !DIExpression()), !dbg !5152
  br label %56, !dbg !5187

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !5188
  %42 = load i24, i24* %41, align 4, !dbg !5189
  %43 = and i24 %42, -30721, !dbg !5189
  %44 = or i24 %43, 14336, !dbg !5189
  store i24 %44, i24* %41, align 4, !dbg !5189
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5190
  call void @llvm.dbg.value(metadata i8* %45, metadata !5151, metadata !DIExpression()), !dbg !5152
  br label %56, !dbg !5191

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !5192
  %48 = load i24, i24* %47, align 4, !dbg !5193
  %49 = and i24 %48, -30723, !dbg !5193
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5194
  call void @llvm.dbg.value(metadata i8* %50, metadata !5151, metadata !DIExpression()), !dbg !5152
  %51 = or i24 %49, 16386, !dbg !5195
  store i24 %51, i24* %47, align 4, !dbg !5195
  br label %56, !dbg !5196

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !5197
  %54 = load i24, i24* %53, align 4, !dbg !5198
  %55 = and i24 %54, -30721, !dbg !5198
  store i24 %55, i24* %53, align 4, !dbg !5198
  br label %56, !dbg !5199

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5151, metadata !DIExpression()), !dbg !5152
  ret i8* %57, !dbg !5200
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !5201 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5203, metadata !DIExpression()), !dbg !5208
  call void @llvm.dbg.value(metadata i8* %1, metadata !5204, metadata !DIExpression()), !dbg !5208
  call void @llvm.dbg.value(metadata i8 0, metadata !5205, metadata !DIExpression()), !dbg !5208
  call void @llvm.dbg.value(metadata i8* %1, metadata !5204, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5208
  %3 = load i8, i8* %1, align 1, !dbg !5209
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5210
  store i8 %3, i8* %4, align 1, !dbg !5211
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !5212

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !5213

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5214
  %9 = load i24, i24* %8, align 4, !dbg !5214
  %10 = and i24 %9, -458753, !dbg !5214
  %11 = or i24 %10, %7, !dbg !5214
  call void @llvm.dbg.label(metadata !5206), !dbg !5215
  %12 = and i24 %9, 30720, !dbg !5216
  %13 = icmp eq i24 %12, 16384, !dbg !5216
  %14 = zext i1 %13 to i24, !dbg !5218
  %15 = or i24 %11, %14, !dbg !5218
  %16 = icmp eq i8 %3, 99, !dbg !5219
  br i1 %16, label %17, label %43, !dbg !5221

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !5222
  %19 = icmp ne i24 %18, 0, !dbg !5222
  call void @llvm.dbg.value(metadata i1 %19, metadata !5205, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5208
  br label %43, !dbg !5224

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !5225
  %22 = load i24, i24* %21, align 4, !dbg !5226
  %23 = and i24 %22, -458753, !dbg !5226
  %24 = or i24 %23, 262144, !dbg !5226
  call void @llvm.dbg.value(metadata i8 1, metadata !5205, metadata !DIExpression()), !dbg !5208
  br label %43, !dbg !5227

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !5230
  %27 = load i24, i24* %26, align 4, !dbg !5231
  %28 = and i24 %27, -458753, !dbg !5231
  %29 = or i24 %28, 196608, !dbg !5231
  %30 = and i24 %27, 30720, !dbg !5232
  %31 = icmp eq i24 %30, 16384, !dbg !5232
  br label %43, !dbg !5234

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !5235
  %34 = load i24, i24* %33, align 4, !dbg !5236
  %35 = and i24 %34, -458753, !dbg !5236
  %36 = or i24 %35, 196608, !dbg !5236
  %37 = and i24 %34, 30720, !dbg !5237
  %38 = icmp ne i24 %37, 0, !dbg !5237
  br label %43, !dbg !5239

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !5240
  %41 = load i24, i24* %40, align 4, !dbg !5241
  %42 = or i24 %41, 1, !dbg !5241
  br label %43, !dbg !5242

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !5243
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !5244
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5245
  call void @llvm.dbg.value(metadata i8* %48, metadata !5204, metadata !DIExpression()), !dbg !5208
  call void @llvm.dbg.value(metadata i8 poison, metadata !5205, metadata !DIExpression()), !dbg !5208
  %49 = lshr i24 %44, 1, !dbg !5243
  %50 = and i24 %49, 1, !dbg !5243
  %51 = zext i24 %50 to i32, !dbg !5243
  %52 = or i32 %51, %47, !dbg !5243
  %53 = trunc i32 %52 to i24, !dbg !5243
  %54 = shl nuw nsw i24 %53, 1, !dbg !5243
  %55 = and i24 %44, -3, !dbg !5243
  %56 = or i24 %54, %55, !dbg !5243
  store i24 %56, i24* %46, align 4, !dbg !5243
  ret i8* %48, !dbg !5246
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #13 !dbg !5247 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !5251, metadata !DIExpression()), !dbg !5254
  %2 = load i8*, i8** %0, align 4, !dbg !5255
  call void @llvm.dbg.value(metadata i8* %2, metadata !5252, metadata !DIExpression()), !dbg !5254
  call void @llvm.dbg.value(metadata i32 0, metadata !5253, metadata !DIExpression()), !dbg !5254
  %3 = load i8, i8* %2, align 1, !dbg !5256
  %4 = zext i8 %3 to i32, !dbg !5257
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #24, !dbg !5258
  %6 = icmp eq i32 %5, 0, !dbg !5259
  br i1 %6, label %19, label %7, !dbg !5259

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5253, metadata !DIExpression()), !dbg !5254
  call void @llvm.dbg.value(metadata i8* %10, metadata !5252, metadata !DIExpression()), !dbg !5254
  %11 = mul i32 %9, 10, !dbg !5260
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5262
  call void @llvm.dbg.value(metadata i8* %12, metadata !5252, metadata !DIExpression()), !dbg !5254
  %13 = add i32 %11, -48, !dbg !5263
  %14 = add i32 %13, %8, !dbg !5264
  call void @llvm.dbg.value(metadata i32 %14, metadata !5253, metadata !DIExpression()), !dbg !5254
  %15 = load i8, i8* %12, align 1, !dbg !5256
  %16 = zext i8 %15 to i32, !dbg !5257
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #24, !dbg !5258
  %18 = icmp eq i32 %17, 0, !dbg !5259
  br i1 %18, label %19, label %7, !dbg !5259, !llvm.loop !5265

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !5254
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !5254
  store i8* %20, i8** %0, align 4, !dbg !5267
  ret i32 %21, !dbg !5268
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #2 !dbg !5269 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5271, metadata !DIExpression()), !dbg !5272
  %2 = add i32 %0, -48, !dbg !5273
  %3 = icmp ult i32 %2, 10, !dbg !5274
  %4 = zext i1 %3 to i32, !dbg !5274
  ret i32 %4, !dbg !5275
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @assert_post_action(i8* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !5276 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5281, metadata !DIExpression()), !dbg !5283
  call void @llvm.dbg.value(metadata i32 %1, metadata !5282, metadata !DIExpression()), !dbg !5283
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #23, !dbg !5284, !srcloc !5286
  ret void, !dbg !5287
}

; Function Attrs: noinline nounwind optsize
define dso_local void @assert_print(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5288 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5290, metadata !DIExpression()), !dbg !5298
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !5299
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5299
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !5291, metadata !DIExpression()), !dbg !5300
  call void @llvm.va_start(i8* nonnull %3), !dbg !5301
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !5302
  %5 = load i32, i32* %4, align 4, !dbg !5302
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !5302
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !5302
  call void @llvm.va_end(i8* nonnull %3), !dbg !5303
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5304
  ret void, !dbg !5304
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !5305 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #23, !dbg !5307, !srcloc !5308
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #23, !dbg !5309, !srcloc !5310
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #23, !dbg !5311, !srcloc !5312
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #23, !dbg !5313, !srcloc !5314
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #23, !dbg !5315, !srcloc !5316
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,97\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #23, !dbg !5317, !srcloc !5318
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #23, !dbg !5319, !srcloc !5320
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #23, !dbg !5321, !srcloc !5322
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,512\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #23, !dbg !5323, !srcloc !5324
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #23, !dbg !5325, !srcloc !5326
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #23, !dbg !5327, !srcloc !5328
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #23, !dbg !5329, !srcloc !5330
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #23, !dbg !5331, !srcloc !5332
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #23, !dbg !5333, !srcloc !5334
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #23, !dbg !5335, !srcloc !5336
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #23, !dbg !5337, !srcloc !5338
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #23, !dbg !5339, !srcloc !5340
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DOMAIN_NAME\0A\09.equ\09CONFIG_LOG_DOMAIN_NAME,1\0A\09.type\09CONFIG_LOG_DOMAIN_NAME,%object", ""() #23, !dbg !5341, !srcloc !5342
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #23, !dbg !5343, !srcloc !5344
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #23, !dbg !5345, !srcloc !5346
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #23, !dbg !5347, !srcloc !5348
  tail call void asm sideeffect ".globl\09CONFIG_TEST_EXTRA_STACK_SIZE\0A\09.equ\09CONFIG_TEST_EXTRA_STACK_SIZE,0\0A\09.type\09CONFIG_TEST_EXTRA_STACK_SIZE,%object", ""() #23, !dbg !5349, !srcloc !5350
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #23, !dbg !5351, !srcloc !5352
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #23, !dbg !5353, !srcloc !5354
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #23, !dbg !5355, !srcloc !5356
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #23, !dbg !5357, !srcloc !5358
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #23, !dbg !5359, !srcloc !5360
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #23, !dbg !5361, !srcloc !5362
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #23, !dbg !5363, !srcloc !5364
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #23, !dbg !5365, !srcloc !5366
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #23, !dbg !5367, !srcloc !5368
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,%object", ""() #23, !dbg !5369, !srcloc !5370
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #23, !dbg !5371, !srcloc !5372
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #23, !dbg !5373, !srcloc !5374
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #23, !dbg !5375, !srcloc !5376
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LIS3MDL_MAGN_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LIS3MDL_MAGN_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LIS3MDL_MAGN_ENABLED,%object", ""() #23, !dbg !5377, !srcloc !5378
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,%object", ""() #23, !dbg !5379, !srcloc !5380
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,%object", ""() #23, !dbg !5381, !srcloc !5382
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,%object", ""() #23, !dbg !5383, !srcloc !5384
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #23, !dbg !5385, !srcloc !5386
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !5387, !srcloc !5388
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #23, !dbg !5389, !srcloc !5390
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #23, !dbg !5391, !srcloc !5392
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #23, !dbg !5393, !srcloc !5394
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,%object", ""() #23, !dbg !5395, !srcloc !5396
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #23, !dbg !5397, !srcloc !5398
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #23, !dbg !5399, !srcloc !5400
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED,%object", ""() #23, !dbg !5401, !srcloc !5402
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #23, !dbg !5403, !srcloc !5404
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #23, !dbg !5405, !srcloc !5406
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #23, !dbg !5407, !srcloc !5408
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED,%object", ""() #23, !dbg !5409, !srcloc !5410
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #23, !dbg !5411, !srcloc !5412
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #23, !dbg !5413, !srcloc !5414
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !5415, !srcloc !5416
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #23, !dbg !5417, !srcloc !5418
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #23, !dbg !5419, !srcloc !5420
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #23, !dbg !5421, !srcloc !5422
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #23, !dbg !5423, !srcloc !5424
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #23, !dbg !5425, !srcloc !5426
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #23, !dbg !5427, !srcloc !5428
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,%object", ""() #23, !dbg !5429, !srcloc !5430
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,3\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,%object", ""() #23, !dbg !5431, !srcloc !5432
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #23, !dbg !5433, !srcloc !5434
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #23, !dbg !5435, !srcloc !5436
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #23, !dbg !5437, !srcloc !5438
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #23, !dbg !5439, !srcloc !5440
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #23, !dbg !5441, !srcloc !5442
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #23, !dbg !5443, !srcloc !5444
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #23, !dbg !5445, !srcloc !5446
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #23, !dbg !5447, !srcloc !5448
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #23, !dbg !5449, !srcloc !5450
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #23, !dbg !5451, !srcloc !5452
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #23, !dbg !5453, !srcloc !5454
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #23, !dbg !5455, !srcloc !5456
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #23, !dbg !5457, !srcloc !5458
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #23, !dbg !5459, !srcloc !5460
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #23, !dbg !5461, !srcloc !5462
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #23, !dbg !5463, !srcloc !5464
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #23, !dbg !5465, !srcloc !5466
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #23, !dbg !5467, !srcloc !5468
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #23, !dbg !5469, !srcloc !5470
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #23, !dbg !5471, !srcloc !5472
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #23, !dbg !5473, !srcloc !5474
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #23, !dbg !5475, !srcloc !5476
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #23, !dbg !5477, !srcloc !5478
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #23, !dbg !5479, !srcloc !5480
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #23, !dbg !5481, !srcloc !5482
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #23, !dbg !5483, !srcloc !5484
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #23, !dbg !5485, !srcloc !5486
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #23, !dbg !5487, !srcloc !5488
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #23, !dbg !5489, !srcloc !5490
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_STM32_SENSOR_MEZ\0A\09.equ\09CONFIG_BOARD_96B_STM32_SENSOR_MEZ,1\0A\09.type\09CONFIG_BOARD_96B_STM32_SENSOR_MEZ,%object", ""() #23, !dbg !5491, !srcloc !5492
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #23, !dbg !5493, !srcloc !5494
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #23, !dbg !5495, !srcloc !5496
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #23, !dbg !5497, !srcloc !5498
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #23, !dbg !5499, !srcloc !5500
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #23, !dbg !5501, !srcloc !5502
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F446XX\0A\09.equ\09CONFIG_SOC_STM32F446XX,1\0A\09.type\09CONFIG_SOC_STM32F446XX,%object", ""() #23, !dbg !5503, !srcloc !5504
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_SOC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_SOC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5505, !srcloc !5506
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL\0A\09.equ\09CONFIG_SOC_LOG_LEVEL,3\0A\09.type\09CONFIG_SOC_LOG_LEVEL,%object", ""() #23, !dbg !5507, !srcloc !5508
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #23, !dbg !5509, !srcloc !5510
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #23, !dbg !5511, !srcloc !5512
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #23, !dbg !5513, !srcloc !5514
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #23, !dbg !5515, !srcloc !5516
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #23, !dbg !5517, !srcloc !5518
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #23, !dbg !5519, !srcloc !5520
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #23, !dbg !5521, !srcloc !5522
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #23, !dbg !5523, !srcloc !5524
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #23, !dbg !5525, !srcloc !5526
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #23, !dbg !5527, !srcloc !5528
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #23, !dbg !5529, !srcloc !5530
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #23, !dbg !5531, !srcloc !5532
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #23, !dbg !5533, !srcloc !5534
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #23, !dbg !5535, !srcloc !5536
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #23, !dbg !5537, !srcloc !5538
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #23, !dbg !5539, !srcloc !5540
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #23, !dbg !5541, !srcloc !5542
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #23, !dbg !5543, !srcloc !5544
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #23, !dbg !5545, !srcloc !5546
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #23, !dbg !5547, !srcloc !5548
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #23, !dbg !5549, !srcloc !5550
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #23, !dbg !5551, !srcloc !5552
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #23, !dbg !5553, !srcloc !5554
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #23, !dbg !5555, !srcloc !5556
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #23, !dbg !5557, !srcloc !5558
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #23, !dbg !5559, !srcloc !5560
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #23, !dbg !5561, !srcloc !5562
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #23, !dbg !5563, !srcloc !5564
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARCH_LOG_LEVEL_INF,%object", ""() #23, !dbg !5565, !srcloc !5566
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL,3\0A\09.type\09CONFIG_ARCH_LOG_LEVEL,%object", ""() #23, !dbg !5567, !srcloc !5568
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #23, !dbg !5569, !srcloc !5570
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,128\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #23, !dbg !5571, !srcloc !5572
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #23, !dbg !5573, !srcloc !5574
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #23, !dbg !5575, !srcloc !5576
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #23, !dbg !5577, !srcloc !5578
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #23, !dbg !5579, !srcloc !5580
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #23, !dbg !5581, !srcloc !5582
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #23, !dbg !5583, !srcloc !5584
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #23, !dbg !5585, !srcloc !5586
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #23, !dbg !5587, !srcloc !5588
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #23, !dbg !5589, !srcloc !5590
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #23, !dbg !5591, !srcloc !5592
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #23, !dbg !5593, !srcloc !5594
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #23, !dbg !5595, !srcloc !5596
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #23, !dbg !5597, !srcloc !5598
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #23, !dbg !5599, !srcloc !5600
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #23, !dbg !5601, !srcloc !5602
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #23, !dbg !5603, !srcloc !5604
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #23, !dbg !5605, !srcloc !5606
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #23, !dbg !5607, !srcloc !5608
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #23, !dbg !5609, !srcloc !5610
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #23, !dbg !5611, !srcloc !5612
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #23, !dbg !5613, !srcloc !5614
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #23, !dbg !5615, !srcloc !5616
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5617, !srcloc !5618
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #23, !dbg !5619, !srcloc !5620
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #23, !dbg !5621, !srcloc !5622
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #23, !dbg !5623, !srcloc !5624
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #23, !dbg !5625, !srcloc !5626
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #23, !dbg !5627, !srcloc !5628
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #23, !dbg !5629, !srcloc !5630
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL_INF\0A\09.equ\09CONFIG_MPU_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_MPU_LOG_LEVEL_INF,%object", ""() #23, !dbg !5631, !srcloc !5632
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL\0A\09.equ\09CONFIG_MPU_LOG_LEVEL,3\0A\09.type\09CONFIG_MPU_LOG_LEVEL,%object", ""() #23, !dbg !5633, !srcloc !5634
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #23, !dbg !5635, !srcloc !5636
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #23, !dbg !5637, !srcloc !5638
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #23, !dbg !5639, !srcloc !5640
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5641, !srcloc !5642
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL,3\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL,%object", ""() #23, !dbg !5643, !srcloc !5644
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #23, !dbg !5645, !srcloc !5646
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #23, !dbg !5647, !srcloc !5648
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #23, !dbg !5649, !srcloc !5650
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #23, !dbg !5651, !srcloc !5652
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #23, !dbg !5653, !srcloc !5654
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #23, !dbg !5655, !srcloc !5656
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #23, !dbg !5657, !srcloc !5658
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #23, !dbg !5659, !srcloc !5660
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #23, !dbg !5661, !srcloc !5662
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #23, !dbg !5663, !srcloc !5664
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #23, !dbg !5665, !srcloc !5666
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #23, !dbg !5667, !srcloc !5668
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #23, !dbg !5669, !srcloc !5670
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #23, !dbg !5671, !srcloc !5672
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #23, !dbg !5673, !srcloc !5674
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #23, !dbg !5675, !srcloc !5676
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_NAME\0A\09.equ\09CONFIG_THREAD_NAME,1\0A\09.type\09CONFIG_THREAD_NAME,%object", ""() #23, !dbg !5677, !srcloc !5678
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_MAX_NAME_LEN\0A\09.equ\09CONFIG_THREAD_MAX_NAME_LEN,32\0A\09.type\09CONFIG_THREAD_MAX_NAME_LEN,%object", ""() #23, !dbg !5679, !srcloc !5680
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #23, !dbg !5681, !srcloc !5682
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #23, !dbg !5683, !srcloc !5684
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #23, !dbg !5685, !srcloc !5686
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #23, !dbg !5687, !srcloc !5688
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #23, !dbg !5689, !srcloc !5690
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #23, !dbg !5691, !srcloc !5692
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #23, !dbg !5693, !srcloc !5694
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #23, !dbg !5695, !srcloc !5696
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #23, !dbg !5697, !srcloc !5698
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #23, !dbg !5699, !srcloc !5700
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #23, !dbg !5701, !srcloc !5702
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #23, !dbg !5703, !srcloc !5704
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #23, !dbg !5705, !srcloc !5706
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #23, !dbg !5707, !srcloc !5708
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #23, !dbg !5709, !srcloc !5710
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #23, !dbg !5711, !srcloc !5712
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #23, !dbg !5713, !srcloc !5714
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #23, !dbg !5715, !srcloc !5716
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #23, !dbg !5717, !srcloc !5718
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #23, !dbg !5719, !srcloc !5720
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5721, !srcloc !5722
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #23, !dbg !5723, !srcloc !5724
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #23, !dbg !5725, !srcloc !5726
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #23, !dbg !5727, !srcloc !5728
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #23, !dbg !5729, !srcloc !5730
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #23, !dbg !5731, !srcloc !5732
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,%object", ""() #23, !dbg !5733, !srcloc !5734
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL,%object", ""() #23, !dbg !5735, !srcloc !5736
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #23, !dbg !5737, !srcloc !5738
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #23, !dbg !5739, !srcloc !5740
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #23, !dbg !5741, !srcloc !5742
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_ASYNC\0A\09.equ\09CONFIG_SERIAL_SUPPORT_ASYNC,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_ASYNC,%object", ""() #23, !dbg !5743, !srcloc !5744
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #23, !dbg !5745, !srcloc !5746
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_LOG_LEVEL_INF,%object", ""() #23, !dbg !5747, !srcloc !5748
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL\0A\09.equ\09CONFIG_UART_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_LOG_LEVEL,%object", ""() #23, !dbg !5749, !srcloc !5750
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #23, !dbg !5751, !srcloc !5752
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #23, !dbg !5753, !srcloc !5754
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #23, !dbg !5755, !srcloc !5756
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_INTC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_INTC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5757, !srcloc !5758
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL\0A\09.equ\09CONFIG_INTC_LOG_LEVEL,3\0A\09.type\09CONFIG_INTC_LOG_LEVEL,%object", ""() #23, !dbg !5759, !srcloc !5760
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #23, !dbg !5761, !srcloc !5762
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #23, !dbg !5763, !srcloc !5764
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #23, !dbg !5765, !srcloc !5766
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #23, !dbg !5767, !srcloc !5768
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #23, !dbg !5769, !srcloc !5770
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #23, !dbg !5771, !srcloc !5772
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #23, !dbg !5773, !srcloc !5774
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #23, !dbg !5775, !srcloc !5776
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #23, !dbg !5777, !srcloc !5778
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #23, !dbg !5779, !srcloc !5780
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #23, !dbg !5781, !srcloc !5782
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #23, !dbg !5783, !srcloc !5784
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #23, !dbg !5785, !srcloc !5786
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #23, !dbg !5787, !srcloc !5788
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #23, !dbg !5789, !srcloc !5790
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #23, !dbg !5791, !srcloc !5792
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_GPIO_LOG_LEVEL_INF,%object", ""() #23, !dbg !5793, !srcloc !5794
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL,3\0A\09.type\09CONFIG_GPIO_LOG_LEVEL,%object", ""() #23, !dbg !5795, !srcloc !5796
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #23, !dbg !5797, !srcloc !5798
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL_INF\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL_INF,%object", ""() #23, !dbg !5799, !srcloc !5800
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL,3\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL,%object", ""() #23, !dbg !5801, !srcloc !5802
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5803, !srcloc !5804
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,3\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,%object", ""() #23, !dbg !5805, !srcloc !5806
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,16000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #23, !dbg !5807, !srcloc !5808
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #23, !dbg !5809, !srcloc !5810
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #23, !dbg !5811, !srcloc !5812
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5813, !srcloc !5814
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL,3\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL,%object", ""() #23, !dbg !5815, !srcloc !5816
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #23, !dbg !5817, !srcloc !5818
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #23, !dbg !5819, !srcloc !5820
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_USBC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_USBC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5821, !srcloc !5822
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL\0A\09.equ\09CONFIG_USBC_LOG_LEVEL,3\0A\09.type\09CONFIG_USBC_LOG_LEVEL,%object", ""() #23, !dbg !5823, !srcloc !5824
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #23, !dbg !5825, !srcloc !5826
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #23, !dbg !5827, !srcloc !5828
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #23, !dbg !5829, !srcloc !5830
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #23, !dbg !5831, !srcloc !5832
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #23, !dbg !5833, !srcloc !5834
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #23, !dbg !5835, !srcloc !5836
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #23, !dbg !5837, !srcloc !5838
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #23, !dbg !5839, !srcloc !5840
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #23, !dbg !5841, !srcloc !5842
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #23, !dbg !5843, !srcloc !5844
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #23, !dbg !5845, !srcloc !5846
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #23, !dbg !5847, !srcloc !5848
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #23, !dbg !5849, !srcloc !5850
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #23, !dbg !5851, !srcloc !5852
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #23, !dbg !5853, !srcloc !5854
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #23, !dbg !5855, !srcloc !5856
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #23, !dbg !5857, !srcloc !5858
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,%object", ""() #23, !dbg !5859, !srcloc !5860
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,3\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,%object", ""() #23, !dbg !5861, !srcloc !5862
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #23, !dbg !5863, !srcloc !5864
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #23, !dbg !5865, !srcloc !5866
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #23, !dbg !5867, !srcloc !5868
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #23, !dbg !5869, !srcloc !5870
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #23, !dbg !5871, !srcloc !5872
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #23, !dbg !5873, !srcloc !5874
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT\0A\09.equ\09CONFIG_ASSERT,1\0A\09.type\09CONFIG_ASSERT,%object", ""() #23, !dbg !5875, !srcloc !5876
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_LEVEL\0A\09.equ\09CONFIG_ASSERT_LEVEL,2\0A\09.type\09CONFIG_ASSERT_LEVEL,%object", ""() #23, !dbg !5877, !srcloc !5878
  tail call void asm sideeffect ".globl\09CONFIG_SPIN_VALIDATE\0A\09.equ\09CONFIG_SPIN_VALIDATE,1\0A\09.type\09CONFIG_SPIN_VALIDATE,%object", ""() #23, !dbg !5879, !srcloc !5880
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #23, !dbg !5881, !srcloc !5882
  tail call void asm sideeffect ".globl\09CONFIG_LOG\0A\09.equ\09CONFIG_LOG,1\0A\09.type\09CONFIG_LOG,%object", ""() #23, !dbg !5883, !srcloc !5884
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MODE_MINIMAL\0A\09.equ\09CONFIG_LOG_MODE_MINIMAL,1\0A\09.type\09CONFIG_LOG_MODE_MINIMAL,%object", ""() #23, !dbg !5885, !srcloc !5886
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_MINIMAL\0A\09.equ\09CONFIG_LOG_DEFAULT_MINIMAL,1\0A\09.type\09CONFIG_LOG_DEFAULT_MINIMAL,%object", ""() #23, !dbg !5887, !srcloc !5888
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_LEVEL\0A\09.equ\09CONFIG_LOG_DEFAULT_LEVEL,3\0A\09.type\09CONFIG_LOG_DEFAULT_LEVEL,%object", ""() #23, !dbg !5889, !srcloc !5890
  tail call void asm sideeffect ".globl\09CONFIG_LOG_OVERRIDE_LEVEL\0A\09.equ\09CONFIG_LOG_OVERRIDE_LEVEL,0\0A\09.type\09CONFIG_LOG_OVERRIDE_LEVEL,%object", ""() #23, !dbg !5891, !srcloc !5892
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MAX_LEVEL\0A\09.equ\09CONFIG_LOG_MAX_LEVEL,4\0A\09.type\09CONFIG_LOG_MAX_LEVEL,%object", ""() #23, !dbg !5893, !srcloc !5894
  tail call void asm sideeffect ".globl\09CONFIG_LOG_TEST_CLEAR_MESSAGE_SPACE\0A\09.equ\09CONFIG_LOG_TEST_CLEAR_MESSAGE_SPACE,1\0A\09.type\09CONFIG_LOG_TEST_CLEAR_MESSAGE_SPACE,%object", ""() #23, !dbg !5895, !srcloc !5896
  tail call void asm sideeffect ".globl\09CONFIG_LOG_USE_VLA\0A\09.equ\09CONFIG_LOG_USE_VLA,1\0A\09.type\09CONFIG_LOG_USE_VLA,%object", ""() #23, !dbg !5897, !srcloc !5898
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST\0A\09.equ\09CONFIG_ZTEST,1\0A\09.type\09CONFIG_ZTEST,%object", ""() #23, !dbg !5899, !srcloc !5900
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_NEW_API\0A\09.equ\09CONFIG_ZTEST_NEW_API,1\0A\09.type\09CONFIG_ZTEST_NEW_API,%object", ""() #23, !dbg !5901, !srcloc !5902
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_STACK_SIZE\0A\09.equ\09CONFIG_ZTEST_STACK_SIZE,1024\0A\09.type\09CONFIG_ZTEST_STACK_SIZE,%object", ""() #23, !dbg !5903, !srcloc !5904
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_TEST_DELAY_MS\0A\09.equ\09CONFIG_ZTEST_TEST_DELAY_MS,0\0A\09.type\09CONFIG_ZTEST_TEST_DELAY_MS,%object", ""() #23, !dbg !5905, !srcloc !5906
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_CPU_HOLD_TIME_MS\0A\09.equ\09CONFIG_ZTEST_CPU_HOLD_TIME_MS,3000\0A\09.type\09CONFIG_ZTEST_CPU_HOLD_TIME_MS,%object", ""() #23, !dbg !5907, !srcloc !5908
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ZTEST_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ZTEST_ASSERT_VERBOSE,%object", ""() #23, !dbg !5909, !srcloc !5910
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_THREAD_PRIORITY\0A\09.equ\09CONFIG_ZTEST_THREAD_PRIORITY,-1\0A\09.type\09CONFIG_ZTEST_THREAD_PRIORITY,%object", ""() #23, !dbg !5911, !srcloc !5912
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_VERIFY_RUN_ALL\0A\09.equ\09CONFIG_ZTEST_VERIFY_RUN_ALL,1\0A\09.type\09CONFIG_ZTEST_VERIFY_RUN_ALL,%object", ""() #23, !dbg !5913, !srcloc !5914
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_VERBOSE_OUTPUT\0A\09.equ\09CONFIG_ZTEST_VERBOSE_OUTPUT,1\0A\09.type\09CONFIG_ZTEST_VERBOSE_OUTPUT,%object", ""() #23, !dbg !5915, !srcloc !5916
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_VERBOSE_SUMMARY\0A\09.equ\09CONFIG_ZTEST_VERBOSE_SUMMARY,1\0A\09.type\09CONFIG_ZTEST_VERBOSE_SUMMARY,%object", ""() #23, !dbg !5917, !srcloc !5918
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_FAIL_ON_ASSUME\0A\09.equ\09CONFIG_ZTEST_FAIL_ON_ASSUME,1\0A\09.type\09CONFIG_ZTEST_FAIL_ON_ASSUME,%object", ""() #23, !dbg !5919, !srcloc !5920
  tail call void asm sideeffect ".globl\09CONFIG_TEST_LOGGING_FLUSH_AFTER_TEST\0A\09.equ\09CONFIG_TEST_LOGGING_FLUSH_AFTER_TEST,1\0A\09.type\09CONFIG_TEST_LOGGING_FLUSH_AFTER_TEST,%object", ""() #23, !dbg !5921, !srcloc !5922
  tail call void asm sideeffect ".globl\09CONFIG_TEST\0A\09.equ\09CONFIG_TEST,1\0A\09.type\09CONFIG_TEST,%object", ""() #23, !dbg !5923, !srcloc !5924
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #23, !dbg !5925, !srcloc !5926
  tail call void asm sideeffect ".globl\09CONFIG_TEST_LOGGING_DEFAULTS\0A\09.equ\09CONFIG_TEST_LOGGING_DEFAULTS,1\0A\09.type\09CONFIG_TEST_LOGGING_DEFAULTS,%object", ""() #23, !dbg !5927, !srcloc !5928
  tail call void asm sideeffect ".globl\09CONFIG_TEST_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_TEST_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_TEST_HW_STACK_PROTECTION,%object", ""() #23, !dbg !5929, !srcloc !5930
  tail call void asm sideeffect ".globl\09CONFIG_TEST_ARM_CORTEX_M\0A\09.equ\09CONFIG_TEST_ARM_CORTEX_M,1\0A\09.type\09CONFIG_TEST_ARM_CORTEX_M,%object", ""() #23, !dbg !5931, !srcloc !5932
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #23, !dbg !5933, !srcloc !5934
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5935, !srcloc !5936
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #23, !dbg !5937, !srcloc !5938
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !5939, !srcloc !5940
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !5941, !srcloc !5942
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #23, !dbg !5943, !srcloc !5944
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #23, !dbg !5945, !srcloc !5946
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #23, !dbg !5947, !srcloc !5948
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #23, !dbg !5949, !srcloc !5950
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #23, !dbg !5951, !srcloc !5952
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #23, !dbg !5953, !srcloc !5954
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #23, !dbg !5955, !srcloc !5956
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #23, !dbg !5957, !srcloc !5958
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #23, !dbg !5959, !srcloc !5960
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #23, !dbg !5961, !srcloc !5962
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #23, !dbg !5963, !srcloc !5964
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #23, !dbg !5965, !srcloc !5966
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #23, !dbg !5967, !srcloc !5968
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #23, !dbg !5969, !srcloc !5970
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #23, !dbg !5971, !srcloc !5972
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #23, !dbg !5973, !srcloc !5974
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_SYMBOLS\0A\09.equ\09CONFIG_OUTPUT_SYMBOLS,1\0A\09.type\09CONFIG_OUTPUT_SYMBOLS,%object", ""() #23, !dbg !5975, !srcloc !5976
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #23, !dbg !5977, !srcloc !5978
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #23, !dbg !5979, !srcloc !5980
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #23, !dbg !5981, !srcloc !5982
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #23, !dbg !5983, !srcloc !5984
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #23, !dbg !5985, !srcloc !5986
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #23, !dbg !5987, !srcloc !5988
  ret void, !dbg !5989
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !5990 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5992, metadata !DIExpression()), !dbg !5994
  tail call fastcc void @LL_FLASH_EnableInstCache() #24, !dbg !5995
  tail call fastcc void @LL_FLASH_EnableDataCache() #24, !dbg !5996
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !5997, !srcloc !6006
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !5997
  call void @llvm.dbg.value(metadata i32 %3, metadata !6003, metadata !DIExpression()) #23, !dbg !6007
  call void @llvm.dbg.value(metadata i32 undef, metadata !6004, metadata !DIExpression()) #23, !dbg !6007
  call void @llvm.dbg.value(metadata i32 %3, metadata !5993, metadata !DIExpression()), !dbg !5994
  call void @llvm.dbg.value(metadata i32 %3, metadata !6008, metadata !DIExpression()) #23, !dbg !6013
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !6015, !srcloc !6016
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !6017
  ret i32 0, !dbg !6018
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #14 !dbg !6019 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6021
  %2 = or i32 %1, 512, !dbg !6021
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6021
  ret void, !dbg !6022
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #14 !dbg !6023 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6024
  %2 = or i32 %1, 1024, !dbg !6024
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6024
  ret void, !dbg !6025
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #2 !dbg !6026 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6028, metadata !DIExpression()), !dbg !6029
  ret i32 0, !dbg !6030
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !6031 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6034, metadata !DIExpression()), !dbg !6042
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !6043
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !6043
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !6035, metadata !DIExpression()), !dbg !6044
  call void @llvm.va_start(i8* nonnull %3), !dbg !6045
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !6046
  %5 = load i32, i32* %4, align 4, !dbg !6046
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !6046
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !6046
  call void @llvm.va_end(i8* nonnull %3), !dbg !6047
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !6048
  ret void, !dbg !6048
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !6049 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !6054, metadata !DIExpression()), !dbg !6055
  call void @llvm.dbg.value(metadata i8* %0, metadata !6053, metadata !DIExpression()), !dbg !6055
  tail call void @vprintk(i8* noundef %0, [1 x i32] %1) #25, !dbg !6056
  ret void, !dbg !6057
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_hexdump_print(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6058 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6062, metadata !DIExpression()), !dbg !6066
  call void @llvm.dbg.value(metadata i8* %1, metadata !6063, metadata !DIExpression()), !dbg !6066
  call void @llvm.dbg.value(metadata i32 %2, metadata !6064, metadata !DIExpression()), !dbg !6066
  call void @llvm.dbg.value(metadata i8* %1, metadata !6065, metadata !DIExpression()), !dbg !6066
  %4 = icmp eq i32 %2, 0, !dbg !6067
  br i1 %4, label %14, label %5, !dbg !6068

5:                                                ; preds = %3
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) #24, !dbg !6066
  %7 = zext i8 %6 to i32
  br label %8, !dbg !6068

8:                                                ; preds = %8, %5
  %9 = phi i8* [ %1, %5 ], [ %12, %8 ]
  %10 = phi i32 [ %2, %5 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !6065, metadata !DIExpression()), !dbg !6066
  call void @llvm.dbg.value(metadata i32 %10, metadata !6064, metadata !DIExpression()), !dbg !6066
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22, i32 0, i32 0), i32 noundef %7) #25, !dbg !6069
  tail call fastcc void @minimal_hexdump_line_print(i8* noundef %9, i32 noundef %10) #24, !dbg !6071
  %11 = add i32 %10, -8
  %12 = getelementptr inbounds i8, i8* %9, i32 8
  %13 = icmp ult i32 %10, 9, !dbg !6072
  call void @llvm.dbg.value(metadata i32 %11, metadata !6064, metadata !DIExpression()), !dbg !6066
  call void @llvm.dbg.value(metadata i8* %12, metadata !6065, metadata !DIExpression()), !dbg !6066
  br i1 %13, label %14, label %8, !dbg !6072, !llvm.loop !6073

14:                                               ; preds = %8, %3
  ret void, !dbg !6075
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) unnamed_addr #2 !dbg !6076 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6081, metadata !DIExpression()), !dbg !6082
  %2 = add i32 %0, -1, !dbg !6083
  %3 = icmp ult i32 %2, 4, !dbg !6083
  %4 = shl i32 %2, 3, !dbg !6083
  %5 = lshr i32 1145657157, %4, !dbg !6083
  %6 = trunc i32 %5 to i8, !dbg !6083
  %7 = select i1 %3, i8 %6, i8 63, !dbg !6083
  ret i8 %7, !dbg !6084
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @minimal_hexdump_line_print(i8* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !6085 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6089, metadata !DIExpression()), !dbg !6100
  call void @llvm.dbg.value(metadata i32 %1, metadata !6090, metadata !DIExpression()), !dbg !6100
  call void @llvm.dbg.value(metadata i32 0, metadata !6091, metadata !DIExpression()), !dbg !6101
  br label %4, !dbg !6102

3:                                                ; preds = %12
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.23, i32 0, i32 0)) #25, !dbg !6103
  call void @llvm.dbg.value(metadata i32 0, metadata !6093, metadata !DIExpression()), !dbg !6104
  br label %16, !dbg !6105

4:                                                ; preds = %2, %12
  %5 = phi i32 [ 0, %2 ], [ %13, %12 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !6091, metadata !DIExpression()), !dbg !6101
  %6 = icmp ult i32 %5, %1, !dbg !6106
  br i1 %6, label %7, label %11, !dbg !6110

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !6111
  %9 = load i8, i8* %8, align 1, !dbg !6111
  %10 = zext i8 %9 to i32, !dbg !6113
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.24, i32 0, i32 0), i32 noundef %10) #25, !dbg !6114
  br label %12, !dbg !6115

11:                                               ; preds = %4
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.25, i32 0, i32 0)) #25, !dbg !6116
  br label %12

12:                                               ; preds = %7, %11
  %13 = add nuw nsw i32 %5, 1, !dbg !6118
  call void @llvm.dbg.value(metadata i32 %13, metadata !6091, metadata !DIExpression()), !dbg !6101
  %14 = icmp eq i32 %13, 8, !dbg !6119
  br i1 %14, label %3, label %4, !dbg !6102, !llvm.loop !6120

15:                                               ; preds = %27
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.26, i32 0, i32 0)) #25, !dbg !6122
  ret void, !dbg !6123

16:                                               ; preds = %3, %27
  %17 = phi i32 [ 0, %3 ], [ %28, %27 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !6093, metadata !DIExpression()), !dbg !6104
  %18 = icmp ult i32 %17, %1, !dbg !6124
  br i1 %18, label %19, label %26, !dbg !6125

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %0, i32 %17, !dbg !6126
  %21 = load i8, i8* %20, align 1, !dbg !6126
  call void @llvm.dbg.value(metadata i8 %21, metadata !6095, metadata !DIExpression()), !dbg !6127
  %22 = zext i8 %21 to i32, !dbg !6128
  %23 = tail call fastcc i32 @isprint(i32 noundef %22) #24, !dbg !6129
  %24 = icmp eq i32 %23, 0, !dbg !6130
  %25 = select i1 %24, i32 46, i32 %22, !dbg !6129
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.27, i32 0, i32 0), i32 noundef %25) #25, !dbg !6131
  br label %27, !dbg !6132

26:                                               ; preds = %16
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.28, i32 0, i32 0)) #25, !dbg !6133
  br label %27

27:                                               ; preds = %19, %26
  %28 = add nuw nsw i32 %17, 1, !dbg !6135
  call void @llvm.dbg.value(metadata i32 %28, metadata !6093, metadata !DIExpression()), !dbg !6104
  %29 = icmp eq i32 %28, 8, !dbg !6136
  br i1 %29, label %15, label %16, !dbg !6105, !llvm.loop !6137
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #2 !dbg !6139 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6141, metadata !DIExpression()), !dbg !6142
  %2 = add i32 %0, -32, !dbg !6143
  %3 = icmp ult i32 %2, 95, !dbg !6143
  %4 = zext i1 %3 to i32, !dbg !6143
  ret i32 %4, !dbg !6144
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !6145 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6194, metadata !DIExpression()), !dbg !6196
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !6195, metadata !DIExpression()), !dbg !6196
  %3 = icmp eq %struct.__esf* %1, null, !dbg !6197
  br i1 %3, label %5, label %4, !dbg !6199

4:                                                ; preds = %2
  tail call fastcc void @esf_dump(%struct.__esf* noundef nonnull %1) #24, !dbg !6200
  br label %5, !dbg !6202

5:                                                ; preds = %4, %2
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #25, !dbg !6203
  ret void, !dbg !6204
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @esf_dump(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !6205 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6209, metadata !DIExpression()), !dbg !6210
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6211
  %3 = load i32, i32* %2, align 4, !dbg !6211
  %4 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 1, i32 0, !dbg !6211
  %5 = load i32, i32* %4, align 4, !dbg !6211
  %6 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 2, i32 0, !dbg !6211
  %7 = load i32, i32* %6, align 4, !dbg !6211
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.29, i32 0, i32 0), i32 noundef 69, i32 noundef %3, i32 noundef %5, i32 noundef %7) #25, !dbg !6211
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 3, i32 0, !dbg !6216
  %9 = load i32, i32* %8, align 4, !dbg !6216
  %10 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 4, i32 0, !dbg !6216
  %11 = load i32, i32* %10, align 4, !dbg !6216
  %12 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 5, i32 0, !dbg !6216
  %13 = load i32, i32* %12, align 4, !dbg !6216
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.30, i32 0, i32 0), i32 noundef 69, i32 noundef %9, i32 noundef %11, i32 noundef %13) #25, !dbg !6216
  %14 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 7, !dbg !6221
  %15 = load i32, i32* %14, align 4, !dbg !6221
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.31, i32 0, i32 0), i32 noundef 69, i32 noundef %15) #25, !dbg !6221
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !6226
  %17 = load i32, i32* %16, align 4, !dbg !6226
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #25, !dbg !6226
  ret void, !dbg !6231
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !6232 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6249, metadata !DIExpression()), !dbg !6252
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !6250, metadata !DIExpression()), !dbg !6252
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6253
  %4 = load i32, i32* %3, align 4, !dbg !6253
  call void @llvm.dbg.value(metadata i32 %4, metadata !6251, metadata !DIExpression()), !dbg !6252
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #24, !dbg !6254
  ret void, !dbg !6255
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !6256 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6258, metadata !DIExpression()), !dbg !6261
  call void @llvm.dbg.value(metadata i8* %0, metadata !6259, metadata !DIExpression()), !dbg !6261
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !6262
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #23, !dbg !6262
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !6260, metadata !DIExpression()), !dbg !6263
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !6263
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !6264
  %5 = bitcast i8* %4 to i32*, !dbg !6264
  %6 = load i32, i32* %5, align 4, !dbg !6264
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !6265
  store i32 %6, i32* %7, align 4, !dbg !6266
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #24, !dbg !6267
  unreachable, !dbg !6268
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6269 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6272, metadata !DIExpression()), !dbg !6273
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #24, !dbg !6274
  ret void, !dbg !6275
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6276 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6280, metadata !DIExpression()), !dbg !6281
  %2 = icmp sgt i32 %0, -1, !dbg !6282
  br i1 %2, label %3, label %8, !dbg !6284

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6285, !srcloc !6287
  %4 = and i32 %0, 31, !dbg !6288
  %5 = shl nuw i32 1, %4, !dbg !6289
  %6 = lshr i32 %0, 5, !dbg !6290
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !6291
  store volatile i32 %5, i32* %7, align 4, !dbg !6292
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6293, !srcloc !6294
  br label %8, !dbg !6295

8:                                                ; preds = %3, %1
  ret void, !dbg !6296
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !6297 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6299, metadata !DIExpression()), !dbg !6300
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #24, !dbg !6301
  ret void, !dbg !6302
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6303 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6305, metadata !DIExpression()), !dbg !6306
  %2 = icmp sgt i32 %0, -1, !dbg !6307
  br i1 %2, label %3, label %8, !dbg !6309

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !6310
  %5 = shl nuw i32 1, %4, !dbg !6312
  %6 = lshr i32 %0, 5, !dbg !6313
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !6314
  store volatile i32 %5, i32* %7, align 4, !dbg !6315
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6316, !srcloc !6320
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6321, !srcloc !6324
  br label %8, !dbg !6325

8:                                                ; preds = %3, %1
  ret void, !dbg !6326
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #15 !dbg !6327 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6331, metadata !DIExpression()), !dbg !6332
  %2 = lshr i32 %0, 5, !dbg !6333
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !6334
  %4 = load volatile i32, i32* %3, align 4, !dbg !6334
  %5 = and i32 %0, 31, !dbg !6335
  %6 = shl nuw i32 1, %5, !dbg !6335
  %7 = and i32 %4, %6, !dbg !6336
  ret i32 %7, !dbg !6337
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6338 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6342, metadata !DIExpression()), !dbg !6345
  call void @llvm.dbg.value(metadata i32 %1, metadata !6343, metadata !DIExpression()), !dbg !6345
  call void @llvm.dbg.value(metadata i32 %2, metadata !6344, metadata !DIExpression()), !dbg !6345
  %4 = add i32 %1, 1, !dbg !6346
  call void @llvm.dbg.value(metadata i32 %4, metadata !6343, metadata !DIExpression()), !dbg !6345
  %5 = icmp ult i32 %4, 16, !dbg !6349
  br i1 %5, label %7, label %6, !dbg !6352

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.33, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.34, i32 0, i32 0), i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.35, i32 0, i32 0), i32 noundef 94) #25, !dbg !6353
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.3.36, i32 0, i32 0), i32 noundef %1, i32 noundef %0, i32 noundef 15) #25, !dbg !6353
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.35, i32 0, i32 0), i32 noundef 94) #25, !dbg !6353
  unreachable, !dbg !6353

7:                                                ; preds = %3
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #24, !dbg !6355
  ret void, !dbg !6356
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !6357 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6361, metadata !DIExpression()), !dbg !6363
  call void @llvm.dbg.value(metadata i32 %1, metadata !6362, metadata !DIExpression()), !dbg !6363
  %3 = trunc i32 %1 to i8, !dbg !6364
  %4 = shl i8 %3, 4, !dbg !6364
  %5 = and i32 %0, 15, !dbg !6366
  %6 = add nsw i32 %5, -4, !dbg !6366
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !6366
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6366
  %9 = icmp slt i32 %0, 0, !dbg !6366
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !6366
  store volatile i8 %4, i8* %10, align 1, !dbg !6364
  ret void, !dbg !6367
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !6368 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6370, metadata !DIExpression()), !dbg !6371
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #25, !dbg !6372
  ret void, !dbg !6373
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !6374 {
  tail call void @z_SysNmiOnReset() #25, !dbg !6376
  tail call void @z_arm_int_exit() #25, !dbg !6377
  ret void, !dbg !6378
}

; Function Attrs: optsize
declare !dbg !6379 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !6380 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #10 !dbg !6382 {
  tail call fastcc void @relocate_vector_table() #24, !dbg !6384
  tail call fastcc void @z_arm_floating_point_init() #24, !dbg !6385
  tail call void @z_bss_zero() #25, !dbg !6386
  tail call void @z_data_copy() #25, !dbg !6387
  tail call void @z_arm_interrupt_init() #25, !dbg !6388
  tail call void @z_cstart() #27, !dbg !6389
  unreachable, !dbg !6389
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !6390 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !6391
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6392, !srcloc !6395
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6396, !srcloc !6399
  ret void, !dbg !6400
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !6401 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6402
  %2 = and i32 %1, -15728641, !dbg !6402
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6402
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #23, !dbg !6403, !srcloc !6410
  call void @llvm.dbg.value(metadata i32 %3, metadata !6408, metadata !DIExpression()) #23, !dbg !6411
  %4 = and i32 %3, -5, !dbg !6412
  call void @llvm.dbg.value(metadata i32 %4, metadata !6413, metadata !DIExpression()) #23, !dbg !6418
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #23, !dbg !6420, !srcloc !6421
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6422, !srcloc !6399
  ret void, !dbg !6424
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !6425 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6428, metadata !DIExpression()), !dbg !6429
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6430
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 8, i32 0, !dbg !6431
  store i32 %0, i32* %3, align 4, !dbg !6432
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !6433
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 8, i32 1, !dbg !6434
  store i32 %4, i32* %5, align 4, !dbg !6435
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6436
  %7 = or i32 %6, 268435456, !dbg !6436
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6436
  call void @llvm.dbg.value(metadata i32 0, metadata !6437, metadata !DIExpression()) #23, !dbg !6440
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !6442, !srcloc !6443
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6444
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 8, i32 1, !dbg !6445
  %10 = load i32, i32* %9, align 4, !dbg !6445
  ret i32 %10, !dbg !6446
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #7 !dbg !6447 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6560, metadata !DIExpression()), !dbg !6568
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !6561, metadata !DIExpression()), !dbg !6568
  call void @llvm.dbg.value(metadata i8* %2, metadata !6562, metadata !DIExpression()), !dbg !6568
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !6563, metadata !DIExpression()), !dbg !6568
  call void @llvm.dbg.value(metadata i8* %4, metadata !6564, metadata !DIExpression()), !dbg !6568
  call void @llvm.dbg.value(metadata i8* %5, metadata !6565, metadata !DIExpression()), !dbg !6568
  call void @llvm.dbg.value(metadata i8* %6, metadata !6566, metadata !DIExpression()), !dbg !6568
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !6569
  call void @llvm.dbg.value(metadata i8* %8, metadata !6567, metadata !DIExpression()), !dbg !6568
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !6570
  %10 = bitcast i8* %9 to i32*, !dbg !6570
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !6571
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !6572
  %12 = bitcast i8* %8 to i32*, !dbg !6573
  store i32 %11, i32* %12, align 4, !dbg !6574
  %13 = ptrtoint i8* %4 to i32, !dbg !6575
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !6576
  %15 = bitcast i8* %14 to i32*, !dbg !6576
  store i32 %13, i32* %15, align 4, !dbg !6577
  %16 = ptrtoint i8* %5 to i32, !dbg !6578
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !6579
  %18 = bitcast i8* %17 to i32*, !dbg !6579
  store i32 %16, i32* %18, align 4, !dbg !6580
  %19 = ptrtoint i8* %6 to i32, !dbg !6581
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !6582
  %21 = bitcast i8* %20 to i32*, !dbg !6582
  store i32 %19, i32* %21, align 4, !dbg !6583
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !6584
  %23 = bitcast i8* %22 to i32*, !dbg !6584
  store i32 16777216, i32* %23, align 4, !dbg !6585
  %24 = ptrtoint i8* %8 to i32, !dbg !6586
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !6587
  store i32 %24, i32* %25, align 8, !dbg !6588
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 8, i32 0, !dbg !6589
  store i32 0, i32* %26, align 4, !dbg !6590
  ret void, !dbg !6591
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #8 !dbg !6592 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6597, metadata !DIExpression()), !dbg !6603
  call void @llvm.dbg.value(metadata i32 %1, metadata !6598, metadata !DIExpression()), !dbg !6603
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6604
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !6599, metadata !DIExpression()), !dbg !6603
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !6605
  br i1 %4, label %19, label %5, !dbg !6607

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !6602, metadata !DIExpression()), !dbg !6603
  %6 = icmp eq i32 %0, -22, !dbg !6608
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 6, i32 0, !dbg !6608
  %8 = load i32, i32* %7, align 4, !dbg !6608
  br i1 %6, label %16, label %9, !dbg !6610

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !6608
  %11 = icmp ule i32 %10, %0, !dbg !6608
  %12 = icmp ugt i32 %8, %0, !dbg !6608
  %13 = and i1 %12, %11, !dbg !6608
  %14 = icmp ugt i32 %8, %1, !dbg !6608
  %15 = and i1 %14, %13, !dbg !6608
  br i1 %15, label %18, label %19, !dbg !6608

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !6608
  br i1 %17, label %18, label %19, !dbg !6610

18:                                               ; preds = %9, %16
  br label %19, !dbg !6611

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !6603
  ret i32 %20, !dbg !6613
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #10 !dbg !6614 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6618, metadata !DIExpression()), !dbg !6621
  call void @llvm.dbg.value(metadata i8* %1, metadata !6619, metadata !DIExpression()), !dbg !6621
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !6620, metadata !DIExpression()), !dbg !6621
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6622
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #25, !dbg !6623
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #23, !dbg !6624, !srcloc !6625
  unreachable, !dbg !6626
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !6627 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6645, metadata !DIExpression()), !dbg !6655
  call void @llvm.dbg.value(metadata i32 %1, metadata !6646, metadata !DIExpression()), !dbg !6655
  call void @llvm.dbg.value(metadata i32 %2, metadata !6647, metadata !DIExpression()), !dbg !6655
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !6648, metadata !DIExpression()), !dbg !6655
  call void @llvm.dbg.value(metadata i32 0, metadata !6649, metadata !DIExpression()), !dbg !6655
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6656
  call void @llvm.dbg.value(metadata i32 %8, metadata !6650, metadata !DIExpression(DW_OP_constu, 511, DW_OP_and, DW_OP_stack_value)), !dbg !6655
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #23, !dbg !6657
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #23, !dbg !6657
  %9 = bitcast %struct.__esf* %7 to i8*, !dbg !6658
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #23, !dbg !6658
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !6654, metadata !DIExpression()), !dbg !6659
  call void @llvm.dbg.value(metadata i32 0, metadata !6660, metadata !DIExpression()) #23, !dbg !6663
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !6665, !srcloc !6666
  call void @llvm.dbg.value(metadata i8* %6, metadata !6652, metadata !DIExpression(DW_OP_deref)), !dbg !6655
  %10 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #24, !dbg !6667
  call void @llvm.dbg.value(metadata %struct.__esf* %10, metadata !6653, metadata !DIExpression()), !dbg !6655
  %11 = icmp eq %struct.__esf* %10, null, !dbg !6668
  br i1 %11, label %12, label %13, !dbg !6671

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1.40, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 1057) #25, !dbg !6672
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3.42, i32 0, i32 0)) #25, !dbg !6672
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 1057) #25, !dbg !6672
  unreachable, !dbg !6672

13:                                               ; preds = %4
  %14 = and i32 %8, 511, !dbg !6674
  call void @llvm.dbg.value(metadata i32 %14, metadata !6650, metadata !DIExpression()), !dbg !6655
  call void @llvm.dbg.value(metadata i8* %5, metadata !6651, metadata !DIExpression(DW_OP_deref)), !dbg !6655
  %15 = call fastcc i32 @fault_handle(%struct.__esf* noundef nonnull %10, i32 noundef %14, i8* noundef nonnull %5) #24, !dbg !6675
  call void @llvm.dbg.value(metadata i32 %15, metadata !6649, metadata !DIExpression()), !dbg !6655
  %16 = load i8, i8* %5, align 1, !dbg !6676, !range !6678
  call void @llvm.dbg.value(metadata i8 %16, metadata !6651, metadata !DIExpression()), !dbg !6655
  %17 = icmp eq i8 %16, 0, !dbg !6676
  br i1 %17, label %18, label %35, !dbg !6679

18:                                               ; preds = %13
  %19 = bitcast %struct.__esf* %10 to i8*, !dbg !6680
  %20 = call i8* @memcpy(i8* noundef nonnull %9, i8* noundef nonnull %19, i32 noundef 32) #25, !dbg !6681
  %21 = load i8, i8* %6, align 1, !dbg !6682, !range !6678
  call void @llvm.dbg.value(metadata i8 %21, metadata !6652, metadata !DIExpression()), !dbg !6655
  %22 = icmp eq i8 %21, 0, !dbg !6682
  %23 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !6684
  %24 = load i32, i32* %23, align 4, !dbg !6684
  br i1 %22, label %30, label %25, !dbg !6685

25:                                               ; preds = %18
  %26 = and i32 %24, 511, !dbg !6686
  %27 = icmp eq i32 %26, 0, !dbg !6689
  br i1 %27, label %28, label %34, !dbg !6690

28:                                               ; preds = %25
  %29 = or i32 %24, 511, !dbg !6691
  br label %32, !dbg !6693

30:                                               ; preds = %18
  %31 = and i32 %24, -512, !dbg !6694
  br label %32

32:                                               ; preds = %30, %28
  %33 = phi i32 [ %29, %28 ], [ %31, %30 ]
  store i32 %33, i32* %23, align 4, !dbg !6684
  br label %34, !dbg !6696

34:                                               ; preds = %32, %25
  call void @z_arm_fatal_error(i32 noundef %15, %struct.__esf* noundef nonnull %7) #25, !dbg !6696
  br label %35, !dbg !6697

35:                                               ; preds = %13, %34
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #23, !dbg !6697
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #23, !dbg !6697
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #23, !dbg !6697
  ret void, !dbg !6697
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #1 !dbg !6698 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6703, metadata !DIExpression()), !dbg !6709
  call void @llvm.dbg.value(metadata i32 %1, metadata !6704, metadata !DIExpression()), !dbg !6709
  call void @llvm.dbg.value(metadata i32 %2, metadata !6705, metadata !DIExpression()), !dbg !6709
  call void @llvm.dbg.value(metadata i8* %3, metadata !6706, metadata !DIExpression()), !dbg !6709
  call void @llvm.dbg.value(metadata i8 0, metadata !6707, metadata !DIExpression()), !dbg !6709
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !6708, metadata !DIExpression()), !dbg !6709
  store i8 0, i8* %3, align 1, !dbg !6710
  %5 = icmp ugt i32 %2, -16777217, !dbg !6711
  br i1 %5, label %6, label %17, !dbg !6713

6:                                                ; preds = %4
  %7 = and i32 %2, 12, !dbg !6714
  %8 = icmp eq i32 %7, 8, !dbg !6714
  br i1 %8, label %9, label %10, !dbg !6714

9:                                                ; preds = %6
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.4.55, i32 0, i32 0), i32 noundef 69) #25, !dbg !6716
  br label %17, !dbg !6722

10:                                               ; preds = %6
  %11 = and i32 %2, 8, !dbg !6723
  %12 = icmp eq i32 %11, 0, !dbg !6723
  br i1 %12, label %13, label %14, !dbg !6724

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %0, metadata !6708, metadata !DIExpression()), !dbg !6709
  store i8 1, i8* %3, align 1, !dbg !6727
  br label %14

14:                                               ; preds = %10, %13
  %15 = phi i32 [ %0, %13 ], [ %1, %10 ]
  %16 = inttoptr i32 %15 to %struct.__esf*, !dbg !6709
  call void @llvm.dbg.value(metadata %struct.__esf* %16, metadata !6708, metadata !DIExpression()), !dbg !6709
  br label %17, !dbg !6730

17:                                               ; preds = %4, %14, %9
  %18 = phi %struct.__esf* [ %16, %14 ], [ null, %9 ], [ null, %4 ], !dbg !6709
  ret %struct.__esf* %18, !dbg !6731
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !6732 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6736, metadata !DIExpression()), !dbg !6740
  call void @llvm.dbg.value(metadata i32 %1, metadata !6737, metadata !DIExpression()), !dbg !6740
  call void @llvm.dbg.value(metadata i8* %2, metadata !6738, metadata !DIExpression()), !dbg !6740
  call void @llvm.dbg.value(metadata i32 0, metadata !6739, metadata !DIExpression()), !dbg !6740
  store i8 0, i8* %2, align 1, !dbg !6741
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !6742

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #24, !dbg !6743
  call void @llvm.dbg.value(metadata i32 %5, metadata !6739, metadata !DIExpression()), !dbg !6740
  br label %12, !dbg !6745

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !6746
  call void @llvm.dbg.value(metadata i32 %7, metadata !6739, metadata !DIExpression()), !dbg !6740
  br label %12, !dbg !6747

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !6748
  call void @llvm.dbg.value(metadata i32 0, metadata !6739, metadata !DIExpression()), !dbg !6740
  br label %12, !dbg !6749

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #24, !dbg !6750
  call void @llvm.dbg.value(metadata i32 0, metadata !6739, metadata !DIExpression()), !dbg !6740
  br label %12, !dbg !6751

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #24, !dbg !6752
  br label %12, !dbg !6753

11:                                               ; preds = %3
  tail call fastcc void @reserved_exception(i32 noundef %1) #24, !dbg !6754
  br label %12, !dbg !6755

12:                                               ; preds = %4, %6, %8, %9, %10, %11
  %13 = phi i32 [ 0, %11 ], [ 0, %10 ], [ 0, %9 ], [ 0, %8 ], [ %7, %6 ], [ %5, %4 ], !dbg !6740
  call void @llvm.dbg.value(metadata i32 %13, metadata !6739, metadata !DIExpression()), !dbg !6740
  ret i32 %13, !dbg !6756
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6757 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6761, metadata !DIExpression()), !dbg !6764
  call void @llvm.dbg.value(metadata i8* %1, metadata !6762, metadata !DIExpression()), !dbg !6764
  call void @llvm.dbg.value(metadata i32 0, metadata !6763, metadata !DIExpression()), !dbg !6764
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.47, i32 0, i32 0), i32 noundef 69) #25, !dbg !6765
  store i8 0, i8* %1, align 1, !dbg !6770
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6771
  %4 = and i32 %3, 2, !dbg !6773
  %5 = icmp eq i32 %4, 0, !dbg !6774
  br i1 %5, label %7, label %6, !dbg !6775

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.48, i32 0, i32 0), i32 noundef 69) #25, !dbg !6776
  br label %38, !dbg !6782

7:                                                ; preds = %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6783
  %9 = icmp sgt i32 %8, -1, !dbg !6785
  br i1 %9, label %11, label %10, !dbg !6786

10:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7.49, i32 0, i32 0), i32 noundef 69) #25, !dbg !6787
  br label %38, !dbg !6793

11:                                               ; preds = %7
  %12 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6794
  %13 = and i32 %12, 1073741824, !dbg !6796
  %14 = icmp eq i32 %13, 0, !dbg !6797
  br i1 %14, label %37, label %15, !dbg !6798

15:                                               ; preds = %11
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.50, i32 0, i32 0), i32 noundef 69) #25, !dbg !6799
  %16 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #24, !dbg !6805
  br i1 %16, label %17, label %21, !dbg !6807

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6808
  %19 = load i32, i32* %18, align 4, !dbg !6808
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9.51, i32 0, i32 0), i32 noundef 69, i32 noundef %19) #25, !dbg !6808
  %20 = load i32, i32* %18, align 4, !dbg !6814
  call void @llvm.dbg.value(metadata i32 %20, metadata !6763, metadata !DIExpression()), !dbg !6764
  br label %38, !dbg !6815

21:                                               ; preds = %15
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6816
  %23 = and i32 %22, 255, !dbg !6818
  %24 = icmp eq i32 %23, 0, !dbg !6819
  br i1 %24, label %27, label %25, !dbg !6820

25:                                               ; preds = %21
  %26 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !6821
  call void @llvm.dbg.value(metadata i32 %26, metadata !6763, metadata !DIExpression()), !dbg !6764
  br label %38, !dbg !6823

27:                                               ; preds = %21
  %28 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6824
  %29 = and i32 %28, 65280, !dbg !6826
  %30 = icmp eq i32 %29, 0, !dbg !6827
  br i1 %30, label %32, label %31, !dbg !6828

31:                                               ; preds = %27
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !6829
  call void @llvm.dbg.value(metadata i32 0, metadata !6763, metadata !DIExpression()), !dbg !6764
  br label %38, !dbg !6831

32:                                               ; preds = %27
  %33 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6832
  %34 = icmp ult i32 %33, 65536, !dbg !6834
  br i1 %34, label %36, label %35, !dbg !6835

35:                                               ; preds = %32
  tail call fastcc void @usage_fault() #24, !dbg !6836
  call void @llvm.dbg.value(metadata i32 0, metadata !6763, metadata !DIExpression()), !dbg !6764
  br label %38

36:                                               ; preds = %32
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.52, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 755) #25, !dbg !6838
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11.53, i32 0, i32 0)) #25, !dbg !6838
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 755) #25, !dbg !6838
  unreachable, !dbg !6838

37:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.52, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 760) #25, !dbg !6843
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.12.54, i32 0, i32 0)) #25, !dbg !6843
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 760) #25, !dbg !6843
  unreachable, !dbg !6843

38:                                               ; preds = %10, %17, %31, %35, %25, %6
  %39 = phi i32 [ 0, %6 ], [ 0, %10 ], [ %20, %17 ], [ %26, %25 ], [ 0, %31 ], [ 0, %35 ], !dbg !6764
  call void @llvm.dbg.value(metadata i32 %39, metadata !6763, metadata !DIExpression()), !dbg !6764
  ret i32 %39, !dbg !6848
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !6849 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6851, metadata !DIExpression()), !dbg !6864
  call void @llvm.dbg.value(metadata i32 %1, metadata !6852, metadata !DIExpression()), !dbg !6864
  call void @llvm.dbg.value(metadata i8* %2, metadata !6853, metadata !DIExpression()), !dbg !6864
  call void @llvm.dbg.value(metadata i32 0, metadata !6854, metadata !DIExpression()), !dbg !6864
  call void @llvm.dbg.value(metadata i32 -22, metadata !6855, metadata !DIExpression()), !dbg !6864
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13.46, i32 0, i32 0), i32 noundef 69) #25, !dbg !6865
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6870
  %5 = and i32 %4, 16, !dbg !6872
  %6 = icmp eq i32 %5, 0, !dbg !6873
  br i1 %6, label %8, label %7, !dbg !6874

7:                                                ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.14, i32 0, i32 0), i32 noundef 69) #25, !dbg !6875
  br label %8, !dbg !6881

8:                                                ; preds = %7, %3
  %9 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6882
  %10 = and i32 %9, 8, !dbg !6884
  %11 = icmp eq i32 %10, 0, !dbg !6885
  br i1 %11, label %13, label %12, !dbg !6886

12:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #25, !dbg !6887
  br label %13, !dbg !6893

13:                                               ; preds = %12, %8
  %14 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6894
  %15 = and i32 %14, 2, !dbg !6895
  %16 = icmp eq i32 %15, 0, !dbg !6896
  br i1 %16, label %27, label %17, !dbg !6897

17:                                               ; preds = %13
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.16, i32 0, i32 0), i32 noundef 69) #25, !dbg !6898
  %18 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !6903
  call void @llvm.dbg.value(metadata i32 %18, metadata !6856, metadata !DIExpression()), !dbg !6904
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6905
  %20 = and i32 %19, 128, !dbg !6907
  %21 = icmp eq i32 %20, 0, !dbg !6908
  br i1 %21, label %27, label %22, !dbg !6909

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %18, metadata !6855, metadata !DIExpression()), !dbg !6864
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i32 0, i32 0), i32 noundef 69, i32 noundef %18) #25, !dbg !6910
  %23 = icmp eq i32 %1, 0, !dbg !6916
  br i1 %23, label %27, label %24, !dbg !6918

24:                                               ; preds = %22
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6919
  %26 = and i32 %25, -129, !dbg !6919
  store volatile i32 %26, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6919
  br label %27, !dbg !6921

27:                                               ; preds = %17, %24, %22, %13
  %28 = phi i32 [ -22, %13 ], [ %18, %24 ], [ %18, %22 ], [ -22, %17 ], !dbg !6864
  call void @llvm.dbg.value(metadata i32 %28, metadata !6855, metadata !DIExpression()), !dbg !6864
  %29 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6922
  %30 = and i32 %29, 1, !dbg !6924
  %31 = icmp eq i32 %30, 0, !dbg !6925
  br i1 %31, label %33, label %32, !dbg !6926

32:                                               ; preds = %27
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.18, i32 0, i32 0), i32 noundef 69) #25, !dbg !6927
  br label %33, !dbg !6933

33:                                               ; preds = %32, %27
  %34 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6934
  %35 = and i32 %34, 32, !dbg !6936
  %36 = icmp eq i32 %35, 0, !dbg !6937
  br i1 %36, label %38, label %37, !dbg !6938

37:                                               ; preds = %33
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), i32 noundef 69) #25, !dbg !6939
  br label %38, !dbg !6945

38:                                               ; preds = %37, %33
  %39 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6946
  %40 = and i32 %39, 16, !dbg !6947
  %41 = icmp eq i32 %40, 0, !dbg !6947
  br i1 %41, label %42, label %46, !dbg !6948

42:                                               ; preds = %38
  %43 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6949
  %44 = and i32 %43, 2, !dbg !6950
  %45 = icmp eq i32 %44, 0, !dbg !6950
  br i1 %45, label %60, label %46, !dbg !6951

46:                                               ; preds = %42, %38
  %47 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6952
  %48 = and i32 %47, 2048, !dbg !6953
  %49 = icmp eq i32 %48, 0, !dbg !6953
  br i1 %49, label %60, label %50, !dbg !6954

50:                                               ; preds = %46
  %51 = ptrtoint %struct.__esf* %0 to i32, !dbg !6955
  %52 = tail call i32 @z_check_thread_stack_fail(i32 noundef %28, i32 noundef %51) #25, !dbg !6956
  call void @llvm.dbg.value(metadata i32 %52, metadata !6859, metadata !DIExpression()), !dbg !6957
  %53 = icmp eq i32 %52, 0, !dbg !6958
  br i1 %53, label %55, label %54, !dbg !6960

54:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %52, metadata !6961, metadata !DIExpression()) #23, !dbg !6964
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %52) #23, !dbg !6967, !srcloc !6968
  call void @llvm.dbg.value(metadata i32 2, metadata !6854, metadata !DIExpression()), !dbg !6864
  br label %60, !dbg !6969

55:                                               ; preds = %50
  %56 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6970
  %57 = and i32 %56, 16, !dbg !6970
  %58 = icmp eq i32 %57, 0, !dbg !6970
  br i1 %58, label %60, label %59, !dbg !6974

59:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([74 x i8], [74 x i8]* @.str.20, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 343) #25, !dbg !6975
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.21, i32 0, i32 0)) #25, !dbg !6975
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 343) #25, !dbg !6975
  unreachable, !dbg !6975

60:                                               ; preds = %54, %55, %46, %42
  %61 = phi i32 [ 0, %46 ], [ 0, %42 ], [ 2, %54 ], [ 0, %55 ], !dbg !6864
  call void @llvm.dbg.value(metadata i32 %61, metadata !6854, metadata !DIExpression()), !dbg !6864
  %62 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6977
  %63 = and i32 %62, 32, !dbg !6979
  %64 = icmp eq i32 %63, 0, !dbg !6980
  br i1 %64, label %68, label %65, !dbg !6981

65:                                               ; preds = %60
  %66 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6982
  %67 = and i32 %66, -8193, !dbg !6982
  store volatile i32 %67, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6982
  br label %68, !dbg !6984

68:                                               ; preds = %65, %60
  %69 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6985
  %70 = or i32 %69, 255, !dbg !6985
  store volatile i32 %70, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6985
  store i8 0, i8* %2, align 1, !dbg !6986
  ret i32 %61, !dbg !6987
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6988 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6992, metadata !DIExpression()), !dbg !6999
  call void @llvm.dbg.value(metadata i32 %0, metadata !6993, metadata !DIExpression()), !dbg !6999
  call void @llvm.dbg.value(metadata i8* %1, metadata !6994, metadata !DIExpression()), !dbg !6999
  call void @llvm.dbg.value(metadata i32 0, metadata !6995, metadata !DIExpression()), !dbg !6999
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22.45, i32 0, i32 0), i32 noundef 69) #25, !dbg !7000
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7005
  %4 = and i32 %3, 4096, !dbg !7007
  %5 = icmp eq i32 %4, 0, !dbg !7007
  br i1 %5, label %7, label %6, !dbg !7008

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.23, i32 0, i32 0), i32 noundef 69) #25, !dbg !7009
  br label %7, !dbg !7015

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7016
  %9 = and i32 %8, 2048, !dbg !7018
  %10 = icmp eq i32 %9, 0, !dbg !7018
  br i1 %10, label %12, label %11, !dbg !7019

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #25, !dbg !7020
  br label %12, !dbg !7026

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7027
  %14 = and i32 %13, 512, !dbg !7028
  %15 = icmp eq i32 %14, 0, !dbg !7028
  br i1 %15, label %26, label %16, !dbg !7029

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.24, i32 0, i32 0), i32 noundef 69) #25, !dbg !7030
  %17 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !7035
  call void @llvm.dbg.value(metadata i32 %17, metadata !6996, metadata !DIExpression()), !dbg !7036
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7037
  %19 = and i32 %18, 32768, !dbg !7039
  %20 = icmp eq i32 %19, 0, !dbg !7040
  br i1 %20, label %26, label %21, !dbg !7041

21:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.25, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #25, !dbg !7042
  %22 = icmp eq i32 %0, 0, !dbg !7048
  br i1 %22, label %26, label %23, !dbg !7050

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7051
  %25 = and i32 %24, -32769, !dbg !7051
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7051
  br label %26, !dbg !7053

26:                                               ; preds = %16, %23, %21, %12
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7054
  %28 = and i32 %27, 1024, !dbg !7056
  %29 = icmp eq i32 %28, 0, !dbg !7056
  br i1 %29, label %31, label %30, !dbg !7057

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.26, i32 0, i32 0), i32 noundef 69) #25, !dbg !7058
  br label %31, !dbg !7064

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7065
  %33 = and i32 %32, 256, !dbg !7067
  %34 = icmp eq i32 %33, 0, !dbg !7068
  br i1 %34, label %35, label %39, !dbg !7069

35:                                               ; preds = %31
  %36 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7070
  %37 = and i32 %36, 8192, !dbg !7072
  %38 = icmp eq i32 %37, 0, !dbg !7072
  br i1 %38, label %41, label %39, !dbg !7073

39:                                               ; preds = %35, %31
  %40 = phi i8* [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.27, i32 0, i32 0), %31 ], [ getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), %35 ]
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef %40, i32 noundef 69) #25, !dbg !7074
  br label %41, !dbg !7075

41:                                               ; preds = %39, %35
  %42 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7075
  %43 = or i32 %42, 65280, !dbg !7075
  store volatile i32 %43, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7075
  store i8 0, i8* %1, align 1, !dbg !7076
  ret void, !dbg !7077
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #1 !dbg !7078 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7084, metadata !DIExpression()), !dbg !7086
  call void @llvm.dbg.value(metadata i32 0, metadata !7085, metadata !DIExpression()), !dbg !7086
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i32 0, i32 0), i32 noundef 69) #25, !dbg !7087
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7092
  %2 = and i32 %1, 33554432, !dbg !7094
  %3 = icmp eq i32 %2, 0, !dbg !7095
  br i1 %3, label %5, label %4, !dbg !7096

4:                                                ; preds = %0
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.29.43, i32 0, i32 0), i32 noundef 69) #25, !dbg !7097
  br label %5, !dbg !7103

5:                                                ; preds = %4, %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7104
  %7 = and i32 %6, 16777216, !dbg !7106
  %8 = icmp eq i32 %7, 0, !dbg !7107
  br i1 %8, label %10, label %9, !dbg !7108

9:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.30, i32 0, i32 0), i32 noundef 69) #25, !dbg !7109
  br label %10, !dbg !7115

10:                                               ; preds = %9, %5
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7116
  %12 = and i32 %11, 524288, !dbg !7118
  %13 = icmp eq i32 %12, 0, !dbg !7119
  br i1 %13, label %15, label %14, !dbg !7120

14:                                               ; preds = %10
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.31, i32 0, i32 0), i32 noundef 69) #25, !dbg !7121
  br label %15, !dbg !7127

15:                                               ; preds = %14, %10
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7128
  %17 = and i32 %16, 262144, !dbg !7130
  %18 = icmp eq i32 %17, 0, !dbg !7131
  br i1 %18, label %20, label %19, !dbg !7132

19:                                               ; preds = %15
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.32, i32 0, i32 0), i32 noundef 69) #25, !dbg !7133
  br label %20, !dbg !7139

20:                                               ; preds = %19, %15
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7140
  %22 = and i32 %21, 131072, !dbg !7142
  %23 = icmp eq i32 %22, 0, !dbg !7143
  br i1 %23, label %25, label %24, !dbg !7144

24:                                               ; preds = %20
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.33.44, i32 0, i32 0), i32 noundef 69) #25, !dbg !7145
  br label %25, !dbg !7151

25:                                               ; preds = %24, %20
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7152
  %27 = and i32 %26, 65536, !dbg !7154
  %28 = icmp eq i32 %27, 0, !dbg !7155
  br i1 %28, label %30, label %29, !dbg !7156

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.34, i32 0, i32 0), i32 noundef 69) #25, !dbg !7157
  br label %30, !dbg !7163

30:                                               ; preds = %29, %25
  %31 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7164
  %32 = or i32 %31, -65536, !dbg !7164
  store volatile i32 %32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7164
  ret void, !dbg !7165
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #1 !dbg !7166 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7170, metadata !DIExpression()), !dbg !7172
  call void @llvm.dbg.value(metadata i8* %0, metadata !7171, metadata !DIExpression()), !dbg !7172
  store i8 0, i8* %0, align 1, !dbg !7173
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.35, i32 0, i32 0), i32 noundef 69) #25, !dbg !7174
  ret void, !dbg !7179
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @reserved_exception(i32 noundef %0) unnamed_addr #1 !dbg !7180 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7184, metadata !DIExpression()), !dbg !7186
  call void @llvm.dbg.value(metadata i32 %0, metadata !7185, metadata !DIExpression()), !dbg !7186
  %2 = icmp slt i32 %0, 16, !dbg !7187
  %3 = select i1 %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.38, i32 0, i32 0), !dbg !7187
  %4 = add nsw i32 %0, -16, !dbg !7187
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.36, i32 0, i32 0), i32 noundef 69, i8* noundef %3, i32 noundef %4) #25, !dbg !7187
  ret void, !dbg !7192
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7193 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7197, metadata !DIExpression()), !dbg !7200
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7201
  %3 = load i32, i32* %2, align 4, !dbg !7201
  %4 = inttoptr i32 %3 to i16*, !dbg !7202
  call void @llvm.dbg.value(metadata i16* %4, metadata !7198, metadata !DIExpression()), !dbg !7200
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7203
  %6 = or i32 %5, 256, !dbg !7203
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7203
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7204, !srcloc !7207
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7208, !srcloc !7211
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !7212
  %8 = load i16, i16* %7, align 2, !dbg !7213
  call void @llvm.dbg.value(metadata i16 %8, metadata !7199, metadata !DIExpression()), !dbg !7200
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7214
  %10 = and i32 %9, -257, !dbg !7214
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7214
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7215, !srcloc !7207
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7217, !srcloc !7211
  %11 = icmp eq i16 %8, -8446, !dbg !7219
  ret i1 %11, !dbg !7221
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #14 !dbg !7222 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7223
  %2 = or i32 %1, 16, !dbg !7223
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7223
  ret void, !dbg !7224
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #14 !dbg !7225 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7228, metadata !DIExpression()), !dbg !7229
  br label %1, !dbg !7230

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !7228, metadata !DIExpression()), !dbg !7229
  tail call fastcc void @__NVIC_SetPriority.58(i32 noundef %2) #24, !dbg !7232
  %3 = add nuw nsw i32 %2, 1, !dbg !7235
  call void @llvm.dbg.value(metadata i32 %3, metadata !7228, metadata !DIExpression()), !dbg !7229
  %4 = icmp eq i32 %3, 97, !dbg !7236
  br i1 %4, label %5, label %1, !dbg !7230, !llvm.loop !7237

5:                                                ; preds = %1
  ret void, !dbg !7239
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.58(i32 noundef %0) unnamed_addr #14 !dbg !7240 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7242, metadata !DIExpression()), !dbg !7244
  call void @llvm.dbg.value(metadata i32 1, metadata !7243, metadata !DIExpression()), !dbg !7244
  %2 = and i32 %0, 15, !dbg !7245
  %3 = add nsw i32 %2, -4, !dbg !7245
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !7245
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7245
  %6 = icmp slt i32 %0, 0, !dbg !7245
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !7245
  store volatile i8 16, i8* %7, align 1, !dbg !7246
  ret void, !dbg !7248
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !7249 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7358, metadata !DIExpression()), !dbg !7359
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7360
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !7362
  br i1 %3, label %4, label %12, !dbg !7363

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !7364, !srcloc !7376
  call void @llvm.dbg.value(metadata i32 %5, metadata !7367, metadata !DIExpression()) #23, !dbg !7377
  %6 = icmp eq i32 %5, 0, !dbg !7378
  br i1 %6, label %12, label %7, !dbg !7379

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7380
  %9 = or i32 %8, 268435456, !dbg !7380
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7380
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7382
  %11 = and i32 %10, -32769, !dbg !7382
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7382
  br label %12, !dbg !7383

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !7384
  ret void, !dbg !7385
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !7386 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #25, !dbg !7387
  ret void, !dbg !7388
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !303 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !429, metadata !DIExpression()), !dbg !7389
  call void @llvm.dbg.value(metadata i8 0, metadata !430, metadata !DIExpression()), !dbg !7389
  call void @llvm.dbg.value(metadata i32 64, metadata !432, metadata !DIExpression()), !dbg !7389
  call void @llvm.dbg.value(metadata i32 undef, metadata !431, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !7389
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !7390
  %3 = load i32, i32* %2, align 4, !dbg !7390
  call void @llvm.dbg.value(metadata i32 %3, metadata !431, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !7389
  %4 = add i32 %3, -64, !dbg !7392
  call void @llvm.dbg.value(metadata i32 %4, metadata !431, metadata !DIExpression()), !dbg !7389
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !7393
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !7394
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !7395
  call void @llvm.dbg.value(metadata i8 1, metadata !430, metadata !DIExpression()), !dbg !7389
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #25, !dbg !7396
  ret void, !dbg !7397
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !7398 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7399
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7400, !srcloc !7403
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7404, !srcloc !7407
  ret void, !dbg !7408
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !7409 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #23, !dbg !7410, !srcloc !7413
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7414
  ret void, !dbg !7415
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !7416 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7431, metadata !DIExpression()), !dbg !7435
  call void @llvm.dbg.value(metadata i8 %1, metadata !7432, metadata !DIExpression()), !dbg !7435
  call void @llvm.dbg.value(metadata i32 %2, metadata !7433, metadata !DIExpression()), !dbg !7435
  call void @llvm.dbg.value(metadata i32 %3, metadata !7434, metadata !DIExpression()), !dbg !7435
  %5 = tail call fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !7436
  %6 = icmp eq i32 %5, -22, !dbg !7438
  br i1 %6, label %7, label %9, !dbg !7439

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.68, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 283) #25, !dbg !7440
  %8 = zext i8 %1 to i32, !dbg !7440
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3.70, i32 0, i32 0), i32 noundef %8) #25, !dbg !7440
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 283) #25, !dbg !7440
  unreachable, !dbg !7440

9:                                                ; preds = %4
  ret void, !dbg !7445
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !7446 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7451, metadata !DIExpression()), !dbg !7456
  call void @llvm.dbg.value(metadata i8 %1, metadata !7452, metadata !DIExpression()), !dbg !7456
  call void @llvm.dbg.value(metadata i32 undef, metadata !7453, metadata !DIExpression()), !dbg !7456
  call void @llvm.dbg.value(metadata i32 undef, metadata !7454, metadata !DIExpression()), !dbg !7456
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7457
  call void @llvm.dbg.value(metadata i8 %3, metadata !7455, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7456
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #24, !dbg !7458
  call void @llvm.dbg.value(metadata i32 %4, metadata !7455, metadata !DIExpression()), !dbg !7456
  %5 = trunc i32 %4 to i8, !dbg !7459
  store i8 %5, i8* @static_regions_num, align 1, !dbg !7460
  ret i32 %4, !dbg !7461
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #1 !dbg !7462 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7466, metadata !DIExpression()), !dbg !7472
  call void @llvm.dbg.value(metadata i8 %1, metadata !7467, metadata !DIExpression()), !dbg !7472
  call void @llvm.dbg.value(metadata i8 %2, metadata !7468, metadata !DIExpression()), !dbg !7472
  call void @llvm.dbg.value(metadata i1 %3, metadata !7469, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7472
  %5 = zext i8 %2 to i32, !dbg !7473
  call void @llvm.dbg.value(metadata i32 %5, metadata !7471, metadata !DIExpression()), !dbg !7472
  call void @llvm.dbg.value(metadata i32 0, metadata !7470, metadata !DIExpression()), !dbg !7472
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !7471, metadata !DIExpression()), !dbg !7472
  call void @llvm.dbg.value(metadata i32 0, metadata !7470, metadata !DIExpression()), !dbg !7472
  %7 = icmp eq i8 %1, 0, !dbg !7474
  br i1 %7, label %30, label %8, !dbg !7477

8:                                                ; preds = %4, %26
  %9 = phi i32 [ %27, %26 ], [ %5, %4 ]
  %10 = phi i32 [ %28, %26 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7471, metadata !DIExpression()), !dbg !7472
  call void @llvm.dbg.value(metadata i32 %10, metadata !7470, metadata !DIExpression()), !dbg !7472
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !7478
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !7481
  %13 = load i32, i32* %12, align 4, !dbg !7481
  %14 = icmp eq i32 %13, 0, !dbg !7482
  br i1 %14, label %26, label %15, !dbg !7483

15:                                               ; preds = %8
  br i1 %3, label %16, label %20, !dbg !7484

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !7486
  %18 = icmp eq i32 %17, 0, !dbg !7486
  br i1 %18, label %19, label %20, !dbg !7487

19:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8.71, i32 0, i32 0), i32 noundef 69, i32 noundef %10) #25, !dbg !7488
  br label %30, !dbg !7494

20:                                               ; preds = %16, %15
  %21 = trunc i32 %9 to i8, !dbg !7495
  %22 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %21, %struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !7496
  call void @llvm.dbg.value(metadata i32 %22, metadata !7471, metadata !DIExpression()), !dbg !7472
  %23 = icmp eq i32 %22, -22, !dbg !7497
  br i1 %23, label %30, label %24, !dbg !7499

24:                                               ; preds = %20
  %25 = add nsw i32 %22, 1, !dbg !7500
  call void @llvm.dbg.value(metadata i32 %25, metadata !7471, metadata !DIExpression()), !dbg !7472
  br label %26, !dbg !7501

26:                                               ; preds = %8, %24
  %27 = phi i32 [ %9, %8 ], [ %25, %24 ], !dbg !7472
  call void @llvm.dbg.value(metadata i32 %27, metadata !7471, metadata !DIExpression()), !dbg !7472
  %28 = add nuw nsw i32 %10, 1, !dbg !7502
  call void @llvm.dbg.value(metadata i32 %28, metadata !7470, metadata !DIExpression()), !dbg !7472
  %29 = icmp eq i32 %28, %6, !dbg !7474
  br i1 %29, label %30, label %8, !dbg !7477, !llvm.loop !7503

30:                                               ; preds = %20, %26, %4, %19
  %31 = phi i32 [ -22, %19 ], [ %5, %4 ], [ -22, %20 ], [ %27, %26 ], !dbg !7472
  ret i32 %31, !dbg !7505
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #16 !dbg !7506 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7510, metadata !DIExpression()), !dbg !7512
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !7513
  %3 = load i32, i32* %2, align 4, !dbg !7513
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !7514, !range !7515
  %5 = icmp ult i32 %4, 2, !dbg !7514
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !7516
  br i1 %7, label %8, label %15, !dbg !7516

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !7517
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !7518
  %11 = load i32, i32* %10, align 4, !dbg !7518
  %12 = and i32 %11, %9, !dbg !7519
  %13 = icmp eq i32 %12, 0, !dbg !7520
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !7511, metadata !DIExpression()), !dbg !7512
  ret i32 %16, !dbg !7521
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #1 !dbg !7522 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !7526, metadata !DIExpression()), !dbg !7529
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !7527, metadata !DIExpression()), !dbg !7529
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !7530
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #23, !dbg !7530
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !7528, metadata !DIExpression()), !dbg !7531
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !7532
  %6 = load i32, i32* %5, align 4, !dbg !7532
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !7533
  store i32 %6, i32* %7, align 4, !dbg !7534
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !7535
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !7536
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !7537
  %11 = load i32, i32* %10, align 4, !dbg !7537
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* noundef nonnull %8, %struct.k_spinlock* noundef nonnull %9, i32 noundef %11) #24, !dbg !7538
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #24, !dbg !7539
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #23, !dbg !7540
  ret i32 %12, !dbg !7541
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* nocapture noundef writeonly %0, %struct.k_spinlock* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #17 !dbg !7542 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !7549, metadata !DIExpression()), !dbg !7553
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !7550, metadata !DIExpression()), !dbg !7553
  call void @llvm.dbg.value(metadata i32 undef, metadata !7551, metadata !DIExpression()), !dbg !7553
  call void @llvm.dbg.value(metadata i32 %2, metadata !7552, metadata !DIExpression()), !dbg !7553
  %4 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %1, i32 0, i32 0, !dbg !7554
  %5 = load i32, i32* %4, align 4, !dbg !7554
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #24, !dbg !7555
  %7 = or i32 %6, %5, !dbg !7556
  %8 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !7557
  store i32 %7, i32* %8, align 4, !dbg !7558
  ret void, !dbg !7559
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #1 !dbg !7560 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !7564, metadata !DIExpression()), !dbg !7566
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7565, metadata !DIExpression()), !dbg !7566
  %3 = zext i8 %0 to i32, !dbg !7567
  %4 = icmp ugt i8 %0, 7, !dbg !7569
  br i1 %4, label %5, label %6, !dbg !7570

5:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.9.72, i32 0, i32 0), i32 noundef 69, i32 noundef %3) #25, !dbg !7571
  br label %7, !dbg !7577

6:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #24, !dbg !7578
  br label %7, !dbg !7579

7:                                                ; preds = %6, %5
  %8 = phi i32 [ -22, %5 ], [ %3, %6 ], !dbg !7566
  ret i32 %8, !dbg !7580
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #14 !dbg !7581 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7585, metadata !DIExpression()), !dbg !7587
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7586, metadata !DIExpression()), !dbg !7587
  tail call fastcc void @set_region_number(i32 noundef %0) #24, !dbg !7588
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !7589
  %4 = load i32, i32* %3, align 4, !dbg !7589
  %5 = and i32 %4, -32, !dbg !7590
  %6 = or i32 %5, %0, !dbg !7591
  %7 = or i32 %6, 16, !dbg !7591
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !7592
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !7593
  %9 = load i32, i32* %8, align 4, !dbg !7593
  %10 = or i32 %9, 1, !dbg !7594
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7595
  ret void, !dbg !7596
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #14 !dbg !7597 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7600, metadata !DIExpression()), !dbg !7601
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7602
  ret void, !dbg !7603
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #11 !dbg !7604 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7608, metadata !DIExpression()), !dbg !7609
  %2 = icmp ult i32 %0, 33, !dbg !7610
  br i1 %2, label %11, label %3, !dbg !7612

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !7613
  br i1 %4, label %11, label %5, !dbg !7615

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !7616
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !7617, !range !7515
  %8 = mul nsw i32 %7, -2, !dbg !7618
  %9 = add nsw i32 %8, 62, !dbg !7618
  %10 = and i32 %9, 62, !dbg !7619
  br label %11, !dbg !7620

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !7609
  ret i32 %12, !dbg !7621
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #3

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #1 !dbg !7622 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7626, metadata !DIExpression()), !dbg !7628
  call void @llvm.dbg.value(metadata i8 %1, metadata !7627, metadata !DIExpression()), !dbg !7628
  %3 = tail call fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !7629
  %4 = icmp eq i32 %3, -22, !dbg !7631
  br i1 %4, label %5, label %7, !dbg !7632

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.68, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 314) #25, !dbg !7633
  %6 = zext i8 %1 to i32, !dbg !7633
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4.75, i32 0, i32 0), i32 noundef %6) #25, !dbg !7633
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 314) #25, !dbg !7633
  unreachable, !dbg !7633

7:                                                ; preds = %2
  ret void, !dbg !7638
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !7639 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7643, metadata !DIExpression()), !dbg !7650
  call void @llvm.dbg.value(metadata i8 %1, metadata !7644, metadata !DIExpression()), !dbg !7650
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7651
  call void @llvm.dbg.value(metadata i8 %3, metadata !7645, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7650
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #24, !dbg !7652
  call void @llvm.dbg.value(metadata i32 %4, metadata !7645, metadata !DIExpression()), !dbg !7650
  %5 = icmp ne i32 %4, -22, !dbg !7653
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !7654
  call void @llvm.dbg.value(metadata i32 %4, metadata !7646, metadata !DIExpression()), !dbg !7655
  br i1 %7, label %8, label %12, !dbg !7654

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7646, metadata !DIExpression()), !dbg !7655
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #24, !dbg !7656
  %10 = add i32 %9, 1, !dbg !7659
  call void @llvm.dbg.value(metadata i32 %10, metadata !7646, metadata !DIExpression()), !dbg !7655
  %11 = icmp eq i32 %10, 8, !dbg !7660
  br i1 %11, label %12, label %8, !dbg !7661, !llvm.loop !7662

12:                                               ; preds = %8, %2
  ret i32 %4, !dbg !7664
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #14 !dbg !7665 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7668, metadata !DIExpression()), !dbg !7669
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7670
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7671
  ret void, !dbg !7672
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !7673 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !7678
  %2 = icmp ugt i32 %1, 8, !dbg !7680
  br i1 %2, label %3, label %4, !dbg !7681

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.68, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 341) #25, !dbg !7682
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.5.76, i32 0, i32 0), i32 noundef %1, i32 noundef 8) #25, !dbg !7682
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 341) #25, !dbg !7682
  unreachable, !dbg !7682

4:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #24, !dbg !7687
  call void @llvm.dbg.value(metadata i32 0, metadata !7677, metadata !DIExpression()), !dbg !7688
  %5 = icmp eq i32 %1, 0, !dbg !7689
  br i1 %5, label %13, label %6, !dbg !7692

6:                                                ; preds = %4
  %7 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %8, !dbg !7692

8:                                                ; preds = %6, %8
  %9 = phi i32 [ 0, %6 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7677, metadata !DIExpression()), !dbg !7688
  %10 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %7, i32 %9, !dbg !7693
  tail call fastcc void @region_init(i32 noundef %9, %struct.arm_mpu_region* noundef %10) #24, !dbg !7695
  %11 = add nuw i32 %9, 1, !dbg !7696
  call void @llvm.dbg.value(metadata i32 %11, metadata !7677, metadata !DIExpression()), !dbg !7688
  %12 = icmp eq i32 %11, %1, !dbg !7689
  br i1 %12, label %13, label %8, !dbg !7692, !llvm.loop !7697

13:                                               ; preds = %8, %4
  %14 = trunc i32 %1 to i8, !dbg !7699
  store i8 %14, i8* @static_regions_num, align 1, !dbg !7700
  tail call void @arm_core_mpu_enable() #24, !dbg !7701
  %15 = load volatile i32, i32* inttoptr (i32 -536810096 to i32*), align 16, !dbg !7702
  %16 = and i32 %15, 65280, !dbg !7702
  %17 = icmp eq i32 %16, 2048, !dbg !7702
  br i1 %17, label %19, label %18, !dbg !7705

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.6.77, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 435) #25, !dbg !7706
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.78, i32 0, i32 0)) #25, !dbg !7706
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 435) #25, !dbg !7706
  unreachable, !dbg !7706

19:                                               ; preds = %13
  ret i32 0, !dbg !7708
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !7709 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7716, metadata !DIExpression()), !dbg !7719
  call void @llvm.dbg.value(metadata i8* %1, metadata !7717, metadata !DIExpression()), !dbg !7719
  call void @llvm.dbg.value(metadata i8* %0, metadata !7718, metadata !DIExpression()), !dbg !7719
  %3 = load i8, i8* %1, align 1, !dbg !7720
  %4 = icmp eq i8 %3, 0, !dbg !7721
  br i1 %4, label %13, label %5, !dbg !7722

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !7716, metadata !DIExpression()), !dbg !7719
  call void @llvm.dbg.value(metadata i8* %8, metadata !7717, metadata !DIExpression()), !dbg !7719
  store i8 %6, i8* %7, align 1, !dbg !7723
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7725
  call void @llvm.dbg.value(metadata i8* %9, metadata !7716, metadata !DIExpression()), !dbg !7719
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7726
  call void @llvm.dbg.value(metadata i8* %10, metadata !7717, metadata !DIExpression()), !dbg !7719
  %11 = load i8, i8* %10, align 1, !dbg !7720
  %12 = icmp eq i8 %11, 0, !dbg !7721
  br i1 %12, label %13, label %5, !dbg !7722, !llvm.loop !7727

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !7729
  ret i8* %0, !dbg !7730
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7731 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7735, metadata !DIExpression()), !dbg !7739
  call void @llvm.dbg.value(metadata i8* %1, metadata !7736, metadata !DIExpression()), !dbg !7739
  call void @llvm.dbg.value(metadata i32 %2, metadata !7737, metadata !DIExpression()), !dbg !7739
  call void @llvm.dbg.value(metadata i8* %0, metadata !7738, metadata !DIExpression()), !dbg !7739
  %4 = icmp eq i32 %2, 0, !dbg !7740
  br i1 %4, label %22, label %5, !dbg !7741

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7735, metadata !DIExpression()), !dbg !7739
  call void @llvm.dbg.value(metadata i32 %7, metadata !7737, metadata !DIExpression()), !dbg !7739
  call void @llvm.dbg.value(metadata i8* %8, metadata !7736, metadata !DIExpression()), !dbg !7739
  %9 = load i8, i8* %8, align 1, !dbg !7742
  %10 = icmp eq i8 %9, 0, !dbg !7743
  br i1 %10, label %16, label %11, !dbg !7744

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !7745
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7747
  call void @llvm.dbg.value(metadata i8* %12, metadata !7736, metadata !DIExpression()), !dbg !7739
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7748
  call void @llvm.dbg.value(metadata i8* %13, metadata !7735, metadata !DIExpression()), !dbg !7739
  %14 = add i32 %7, -1, !dbg !7749
  call void @llvm.dbg.value(metadata i32 %14, metadata !7737, metadata !DIExpression()), !dbg !7739
  %15 = icmp eq i32 %14, 0, !dbg !7740
  br i1 %15, label %22, label %5, !dbg !7741, !llvm.loop !7750

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !7735, metadata !DIExpression()), !dbg !7739
  call void @llvm.dbg.value(metadata i32 %18, metadata !7737, metadata !DIExpression()), !dbg !7739
  store i8 0, i8* %17, align 1, !dbg !7752
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7754
  call void @llvm.dbg.value(metadata i8* %19, metadata !7735, metadata !DIExpression()), !dbg !7739
  %20 = add i32 %18, -1, !dbg !7755
  call void @llvm.dbg.value(metadata i32 %20, metadata !7737, metadata !DIExpression()), !dbg !7739
  %21 = icmp eq i32 %20, 0, !dbg !7756
  br i1 %21, label %22, label %16, !dbg !7757, !llvm.loop !7758

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !7760
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !7761 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7765, metadata !DIExpression()), !dbg !7768
  call void @llvm.dbg.value(metadata i32 %1, metadata !7766, metadata !DIExpression()), !dbg !7768
  call void @llvm.dbg.value(metadata i32 %1, metadata !7767, metadata !DIExpression()), !dbg !7768
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7769

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !7765, metadata !DIExpression()), !dbg !7768
  %6 = load i8, i8* %5, align 1, !dbg !7770
  %7 = icmp eq i8 %6, %3, !dbg !7771
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !7772
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7773
  call void @llvm.dbg.value(metadata i8* %10, metadata !7765, metadata !DIExpression()), !dbg !7768
  br i1 %9, label %11, label %4, !dbg !7772, !llvm.loop !7775

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !7777
  ret i8* %12, !dbg !7778
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !7779 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7781, metadata !DIExpression()), !dbg !7784
  call void @llvm.dbg.value(metadata i32 %1, metadata !7782, metadata !DIExpression()), !dbg !7784
  call void @llvm.dbg.value(metadata i8* null, metadata !7783, metadata !DIExpression()), !dbg !7784
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7785

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !7784
  call void @llvm.dbg.value(metadata i8* %6, metadata !7783, metadata !DIExpression()), !dbg !7784
  call void @llvm.dbg.value(metadata i8* %5, metadata !7781, metadata !DIExpression()), !dbg !7784
  %7 = load i8, i8* %5, align 1, !dbg !7786
  %8 = icmp eq i8 %7, %3, !dbg !7789
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !7790
  call void @llvm.dbg.value(metadata i8* %9, metadata !7783, metadata !DIExpression()), !dbg !7784
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7791
  call void @llvm.dbg.value(metadata i8* %10, metadata !7781, metadata !DIExpression()), !dbg !7784
  %11 = icmp eq i8 %7, 0, !dbg !7792
  br i1 %11, label %12, label %4, !dbg !7792, !llvm.loop !7793

12:                                               ; preds = %4
  ret i8* %9, !dbg !7795
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #6 !dbg !7796 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7800, metadata !DIExpression()), !dbg !7802
  call void @llvm.dbg.value(metadata i32 0, metadata !7801, metadata !DIExpression()), !dbg !7802
  %2 = load i8, i8* %0, align 1, !dbg !7803
  %3 = icmp eq i8 %2, 0, !dbg !7804
  br i1 %3, label %11, label %4, !dbg !7805

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7801, metadata !DIExpression()), !dbg !7802
  call void @llvm.dbg.value(metadata i8* %6, metadata !7800, metadata !DIExpression()), !dbg !7802
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7806
  call void @llvm.dbg.value(metadata i8* %7, metadata !7800, metadata !DIExpression()), !dbg !7802
  %8 = add i32 %5, 1, !dbg !7808
  call void @llvm.dbg.value(metadata i32 %8, metadata !7801, metadata !DIExpression()), !dbg !7802
  %9 = load i8, i8* %7, align 1, !dbg !7803
  %10 = icmp eq i8 %9, 0, !dbg !7804
  br i1 %10, label %11, label %4, !dbg !7805, !llvm.loop !7809

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !7802
  ret i32 %12, !dbg !7811
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !7812 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7816, metadata !DIExpression()), !dbg !7819
  call void @llvm.dbg.value(metadata i32 %1, metadata !7817, metadata !DIExpression()), !dbg !7819
  call void @llvm.dbg.value(metadata i32 0, metadata !7818, metadata !DIExpression()), !dbg !7819
  %3 = load i8, i8* %0, align 1, !dbg !7820
  %4 = icmp ne i8 %3, 0, !dbg !7821
  %5 = icmp ne i32 %1, 0, !dbg !7822
  %6 = and i1 %4, %5, !dbg !7822
  br i1 %6, label %7, label %16, !dbg !7823

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7818, metadata !DIExpression()), !dbg !7819
  call void @llvm.dbg.value(metadata i8* %9, metadata !7816, metadata !DIExpression()), !dbg !7819
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7824
  call void @llvm.dbg.value(metadata i8* %10, metadata !7816, metadata !DIExpression()), !dbg !7819
  %11 = add nuw i32 %8, 1, !dbg !7826
  call void @llvm.dbg.value(metadata i32 %11, metadata !7818, metadata !DIExpression()), !dbg !7819
  %12 = load i8, i8* %10, align 1, !dbg !7820
  %13 = icmp ne i8 %12, 0, !dbg !7821
  %14 = icmp ult i32 %11, %1, !dbg !7822
  %15 = select i1 %13, i1 %14, i1 false, !dbg !7822
  br i1 %15, label %7, label %16, !dbg !7823, !llvm.loop !7827

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !7819
  ret i32 %17, !dbg !7829
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #6 !dbg !7830 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7834, metadata !DIExpression()), !dbg !7836
  call void @llvm.dbg.value(metadata i8* %1, metadata !7835, metadata !DIExpression()), !dbg !7836
  %3 = load i8, i8* %0, align 1, !dbg !7837
  %4 = load i8, i8* %1, align 1, !dbg !7838
  %5 = icmp ne i8 %3, %4, !dbg !7839
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !7840
  br i1 %7, label %18, label %8, !dbg !7840

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7835, metadata !DIExpression()), !dbg !7836
  call void @llvm.dbg.value(metadata i8* %10, metadata !7834, metadata !DIExpression()), !dbg !7836
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7841
  call void @llvm.dbg.value(metadata i8* %11, metadata !7834, metadata !DIExpression()), !dbg !7836
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7843
  call void @llvm.dbg.value(metadata i8* %12, metadata !7835, metadata !DIExpression()), !dbg !7836
  %13 = load i8, i8* %11, align 1, !dbg !7837
  %14 = load i8, i8* %12, align 1, !dbg !7838
  %15 = icmp ne i8 %13, %14, !dbg !7839
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !7840
  br i1 %17, label %18, label %8, !dbg !7840, !llvm.loop !7844

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !7837
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !7838
  %21 = zext i8 %19 to i32, !dbg !7847
  %22 = zext i8 %20 to i32, !dbg !7848
  %23 = sub nsw i32 %21, %22, !dbg !7849
  ret i32 %23, !dbg !7850
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #6 !dbg !7851 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7855, metadata !DIExpression()), !dbg !7858
  call void @llvm.dbg.value(metadata i8* %1, metadata !7856, metadata !DIExpression()), !dbg !7858
  call void @llvm.dbg.value(metadata i32 %2, metadata !7857, metadata !DIExpression()), !dbg !7858
  %4 = icmp eq i32 %2, 0, !dbg !7859
  br i1 %4, label %23, label %5, !dbg !7859

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !7857, metadata !DIExpression()), !dbg !7858
  call void @llvm.dbg.value(metadata i8* %7, metadata !7856, metadata !DIExpression()), !dbg !7858
  call void @llvm.dbg.value(metadata i8* %8, metadata !7855, metadata !DIExpression()), !dbg !7858
  %9 = load i8, i8* %8, align 1, !dbg !7860
  %10 = load i8, i8* %7, align 1, !dbg !7861
  %11 = icmp ne i8 %9, %10, !dbg !7862
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !7863
  br i1 %13, label %19, label %14, !dbg !7863

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7864
  call void @llvm.dbg.value(metadata i8* %15, metadata !7855, metadata !DIExpression()), !dbg !7858
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7866
  call void @llvm.dbg.value(metadata i8* %16, metadata !7856, metadata !DIExpression()), !dbg !7858
  %17 = add i32 %6, -1, !dbg !7867
  call void @llvm.dbg.value(metadata i32 %17, metadata !7857, metadata !DIExpression()), !dbg !7858
  %18 = icmp eq i32 %17, 0, !dbg !7859
  br i1 %18, label %23, label %5, !dbg !7859, !llvm.loop !7868

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !7871
  %21 = zext i8 %10 to i32, !dbg !7872
  %22 = sub nsw i32 %20, %21, !dbg !7873
  br label %23, !dbg !7874

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !7874
  ret i32 %24, !dbg !7875
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #13 !dbg !7876 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7880, metadata !DIExpression()), !dbg !7885
  call void @llvm.dbg.value(metadata i8* %1, metadata !7881, metadata !DIExpression()), !dbg !7885
  call void @llvm.dbg.value(metadata i8** %2, metadata !7882, metadata !DIExpression()), !dbg !7885
  %4 = icmp eq i8* %0, null, !dbg !7886
  br i1 %4, label %5, label %7, !dbg !7886

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !7887
  br label %7, !dbg !7886

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !7886
  call void @llvm.dbg.value(metadata i8* %8, metadata !7883, metadata !DIExpression()), !dbg !7885
  %9 = load i8, i8* %8, align 1, !dbg !7888
  %10 = icmp eq i8 %9, 0, !dbg !7888
  br i1 %10, label %33, label %11, !dbg !7889

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7883, metadata !DIExpression()), !dbg !7885
  %14 = zext i8 %12 to i32, !dbg !7888
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #24, !dbg !7890
  %16 = icmp eq i8* %15, null, !dbg !7889
  br i1 %16, label %21, label %17, !dbg !7891

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7892
  call void @llvm.dbg.value(metadata i8* %18, metadata !7883, metadata !DIExpression()), !dbg !7885
  %19 = load i8, i8* %18, align 1, !dbg !7888
  %20 = icmp eq i8 %19, 0, !dbg !7888
  br i1 %20, label %33, label %11, !dbg !7889, !llvm.loop !7894

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !7884, metadata !DIExpression()), !dbg !7885
  %24 = zext i8 %22 to i32, !dbg !7896
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #24, !dbg !7897
  %26 = icmp eq i8* %25, null, !dbg !7898
  br i1 %26, label %27, label %31, !dbg !7899

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7900
  call void @llvm.dbg.value(metadata i8* %28, metadata !7884, metadata !DIExpression()), !dbg !7885
  %29 = load i8, i8* %28, align 1, !dbg !7896
  %30 = icmp eq i8 %29, 0, !dbg !7896
  br i1 %30, label %33, label %21, !dbg !7902, !llvm.loop !7903

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !7905
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7908
  br label %33, !dbg !7909

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !7885
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !7885
  store i8* %34, i8** %2, align 4, !dbg !7885
  ret i8* %35, !dbg !7910
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !7911 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7913, metadata !DIExpression()), !dbg !7915
  call void @llvm.dbg.value(metadata i8* %1, metadata !7914, metadata !DIExpression()), !dbg !7915
  %3 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !7916
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !7917
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #24, !dbg !7918
  ret i8* %0, !dbg !7919
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7920 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7922, metadata !DIExpression()), !dbg !7927
  call void @llvm.dbg.value(metadata i8* %1, metadata !7923, metadata !DIExpression()), !dbg !7927
  call void @llvm.dbg.value(metadata i32 %2, metadata !7924, metadata !DIExpression()), !dbg !7927
  call void @llvm.dbg.value(metadata i8* %0, metadata !7925, metadata !DIExpression()), !dbg !7927
  %4 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !7928
  call void @llvm.dbg.value(metadata i32 %4, metadata !7926, metadata !DIExpression()), !dbg !7927
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !7929
  call void @llvm.dbg.value(metadata i8* %5, metadata !7922, metadata !DIExpression()), !dbg !7927
  call void @llvm.dbg.value(metadata i8* %1, metadata !7923, metadata !DIExpression()), !dbg !7927
  call void @llvm.dbg.value(metadata i32 %2, metadata !7924, metadata !DIExpression()), !dbg !7927
  call void @llvm.dbg.value(metadata i32 %2, metadata !7924, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7927
  %6 = icmp eq i32 %2, 0, !dbg !7930
  br i1 %6, label %18, label %7, !dbg !7931

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !7932
  call void @llvm.dbg.value(metadata i8* %9, metadata !7922, metadata !DIExpression()), !dbg !7927
  call void @llvm.dbg.value(metadata i8* %10, metadata !7923, metadata !DIExpression()), !dbg !7927
  %12 = load i8, i8* %10, align 1, !dbg !7933
  %13 = icmp eq i8 %12, 0, !dbg !7934
  br i1 %13, label %18, label %14, !dbg !7935

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7936
  call void @llvm.dbg.value(metadata i8* %15, metadata !7923, metadata !DIExpression()), !dbg !7927
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7938
  call void @llvm.dbg.value(metadata i8* %16, metadata !7922, metadata !DIExpression()), !dbg !7927
  store i8 %12, i8* %9, align 1, !dbg !7939
  call void @llvm.dbg.value(metadata i32 %11, metadata !7924, metadata !DIExpression()), !dbg !7927
  call void @llvm.dbg.value(metadata i32 %11, metadata !7924, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7927
  %17 = icmp eq i32 %11, 0, !dbg !7930
  br i1 %17, label %18, label %7, !dbg !7931, !llvm.loop !7940

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !7927
  store i8 0, i8* %19, align 1, !dbg !7942
  ret i8* %0, !dbg !7943
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #6 !dbg !7944 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7948, metadata !DIExpression()), !dbg !7953
  call void @llvm.dbg.value(metadata i8* %1, metadata !7949, metadata !DIExpression()), !dbg !7953
  call void @llvm.dbg.value(metadata i32 %2, metadata !7950, metadata !DIExpression()), !dbg !7953
  call void @llvm.dbg.value(metadata i8* %0, metadata !7951, metadata !DIExpression()), !dbg !7953
  call void @llvm.dbg.value(metadata i8* %1, metadata !7952, metadata !DIExpression()), !dbg !7953
  %4 = icmp eq i32 %2, 0, !dbg !7954
  br i1 %4, label %31, label %5, !dbg !7956

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7952, metadata !DIExpression()), !dbg !7953
  call void @llvm.dbg.value(metadata i8* %0, metadata !7951, metadata !DIExpression()), !dbg !7953
  call void @llvm.dbg.value(metadata i32 %2, metadata !7950, metadata !DIExpression()), !dbg !7953
  %6 = add i32 %2, -1, !dbg !7957
  call void @llvm.dbg.value(metadata i32 %6, metadata !7950, metadata !DIExpression()), !dbg !7953
  %7 = icmp eq i32 %6, 0, !dbg !7958
  br i1 %7, label %23, label %8, !dbg !7959

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !7960
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !7960
  br label %11, !dbg !7960

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7952, metadata !DIExpression()), !dbg !7953
  call void @llvm.dbg.value(metadata i8* %14, metadata !7951, metadata !DIExpression()), !dbg !7953
  %15 = load i8, i8* %14, align 1, !dbg !7961
  %16 = load i8, i8* %13, align 1, !dbg !7962
  %17 = icmp eq i8 %15, %16, !dbg !7963
  br i1 %17, label %18, label %23, !dbg !7960

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !7964
  call void @llvm.dbg.value(metadata i8* %19, metadata !7951, metadata !DIExpression()), !dbg !7953
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7966
  call void @llvm.dbg.value(metadata i8* %20, metadata !7952, metadata !DIExpression()), !dbg !7953
  call void @llvm.dbg.value(metadata i32 %12, metadata !7950, metadata !DIExpression()), !dbg !7953
  %21 = add i32 %12, -1, !dbg !7957
  call void @llvm.dbg.value(metadata i32 %21, metadata !7950, metadata !DIExpression()), !dbg !7953
  %22 = icmp eq i32 %21, 0, !dbg !7958
  br i1 %22, label %23, label %11, !dbg !7959, !llvm.loop !7967

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !7953
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !7953
  %26 = load i8, i8* %24, align 1, !dbg !7969
  %27 = zext i8 %26 to i32, !dbg !7969
  %28 = load i8, i8* %25, align 1, !dbg !7970
  %29 = zext i8 %28 to i32, !dbg !7970
  %30 = sub nsw i32 %27, %29, !dbg !7971
  br label %31, !dbg !7972

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !7953
  ret i32 %32, !dbg !7973
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7974 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7978, metadata !DIExpression()), !dbg !7983
  call void @llvm.dbg.value(metadata i8* %1, metadata !7979, metadata !DIExpression()), !dbg !7983
  call void @llvm.dbg.value(metadata i32 %2, metadata !7980, metadata !DIExpression()), !dbg !7983
  call void @llvm.dbg.value(metadata i8* %0, metadata !7981, metadata !DIExpression()), !dbg !7983
  call void @llvm.dbg.value(metadata i8* %1, metadata !7982, metadata !DIExpression()), !dbg !7983
  %4 = ptrtoint i8* %0 to i32, !dbg !7984
  %5 = ptrtoint i8* %1 to i32, !dbg !7984
  %6 = sub i32 %4, %5, !dbg !7984
  %7 = icmp ult i32 %6, %2, !dbg !7986
  br i1 %7, label %10, label %8, !dbg !7987

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7982, metadata !DIExpression()), !dbg !7983
  call void @llvm.dbg.value(metadata i8* %0, metadata !7981, metadata !DIExpression()), !dbg !7983
  call void @llvm.dbg.value(metadata i32 %2, metadata !7980, metadata !DIExpression()), !dbg !7983
  %9 = icmp eq i32 %2, 0, !dbg !7988
  br i1 %9, label %26, label %17, !dbg !7990

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !7980, metadata !DIExpression()), !dbg !7983
  %12 = add i32 %11, -1, !dbg !7991
  call void @llvm.dbg.value(metadata i32 %12, metadata !7980, metadata !DIExpression()), !dbg !7983
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !7994
  %14 = load i8, i8* %13, align 1, !dbg !7994
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !7995
  store i8 %14, i8* %15, align 1, !dbg !7996
  %16 = icmp eq i32 %12, 0, !dbg !7997
  br i1 %16, label %26, label %10, !dbg !7998, !llvm.loop !7999

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !7982, metadata !DIExpression()), !dbg !7983
  call void @llvm.dbg.value(metadata i8* %19, metadata !7981, metadata !DIExpression()), !dbg !7983
  call void @llvm.dbg.value(metadata i32 %20, metadata !7980, metadata !DIExpression()), !dbg !7983
  %21 = load i8, i8* %18, align 1, !dbg !8001
  store i8 %21, i8* %19, align 1, !dbg !8003
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !8004
  call void @llvm.dbg.value(metadata i8* %22, metadata !7981, metadata !DIExpression()), !dbg !7983
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !8005
  call void @llvm.dbg.value(metadata i8* %23, metadata !7982, metadata !DIExpression()), !dbg !7983
  %24 = add i32 %20, -1, !dbg !8006
  call void @llvm.dbg.value(metadata i32 %24, metadata !7980, metadata !DIExpression()), !dbg !7983
  %25 = icmp eq i32 %24, 0, !dbg !7988
  br i1 %25, label %26, label %17, !dbg !7990, !llvm.loop !8007

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !8009
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !8010 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8016, metadata !DIExpression()), !dbg !8021
  call void @llvm.dbg.value(metadata i8* %1, metadata !8017, metadata !DIExpression()), !dbg !8021
  call void @llvm.dbg.value(metadata i32 %2, metadata !8018, metadata !DIExpression()), !dbg !8021
  call void @llvm.dbg.value(metadata i8* %0, metadata !8019, metadata !DIExpression()), !dbg !8021
  call void @llvm.dbg.value(metadata i8* %1, metadata !8020, metadata !DIExpression()), !dbg !8021
  %4 = icmp eq i32 %2, 0, !dbg !8022
  br i1 %4, label %14, label %5, !dbg !8023

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !8020, metadata !DIExpression()), !dbg !8021
  call void @llvm.dbg.value(metadata i8* %7, metadata !8019, metadata !DIExpression()), !dbg !8021
  call void @llvm.dbg.value(metadata i32 %8, metadata !8018, metadata !DIExpression()), !dbg !8021
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8024
  call void @llvm.dbg.value(metadata i8* %9, metadata !8020, metadata !DIExpression()), !dbg !8021
  %10 = load i8, i8* %6, align 1, !dbg !8026
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8027
  call void @llvm.dbg.value(metadata i8* %11, metadata !8019, metadata !DIExpression()), !dbg !8021
  store i8 %10, i8* %7, align 1, !dbg !8028
  %12 = add i32 %8, -1, !dbg !8029
  call void @llvm.dbg.value(metadata i32 %12, metadata !8018, metadata !DIExpression()), !dbg !8021
  %13 = icmp eq i32 %12, 0, !dbg !8022
  br i1 %13, label %14, label %5, !dbg !8023, !llvm.loop !8030

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !8032
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #18 !dbg !8033 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8037, metadata !DIExpression()), !dbg !8042
  call void @llvm.dbg.value(metadata i32 %1, metadata !8038, metadata !DIExpression()), !dbg !8042
  call void @llvm.dbg.value(metadata i32 %2, metadata !8039, metadata !DIExpression()), !dbg !8042
  call void @llvm.dbg.value(metadata i8* %0, metadata !8040, metadata !DIExpression()), !dbg !8042
  %4 = trunc i32 %1 to i8, !dbg !8043
  call void @llvm.dbg.value(metadata i8 %4, metadata !8041, metadata !DIExpression()), !dbg !8042
  call void @llvm.dbg.value(metadata i32 %2, metadata !8039, metadata !DIExpression()), !dbg !8042
  call void @llvm.dbg.value(metadata i8* %0, metadata !8040, metadata !DIExpression()), !dbg !8042
  %5 = icmp eq i32 %2, 0, !dbg !8044
  br i1 %5, label %12, label %6, !dbg !8045

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !8039, metadata !DIExpression()), !dbg !8042
  call void @llvm.dbg.value(metadata i8* %8, metadata !8040, metadata !DIExpression()), !dbg !8042
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8046
  call void @llvm.dbg.value(metadata i8* %9, metadata !8040, metadata !DIExpression()), !dbg !8042
  store i8 %4, i8* %8, align 1, !dbg !8048
  %10 = add i32 %7, -1, !dbg !8049
  call void @llvm.dbg.value(metadata i32 %10, metadata !8039, metadata !DIExpression()), !dbg !8042
  %11 = icmp eq i32 %10, 0, !dbg !8044
  br i1 %11, label %12, label %6, !dbg !8045, !llvm.loop !8050

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !8052
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #6 !dbg !8053 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8057, metadata !DIExpression()), !dbg !8063
  call void @llvm.dbg.value(metadata i32 %1, metadata !8058, metadata !DIExpression()), !dbg !8063
  call void @llvm.dbg.value(metadata i32 %2, metadata !8059, metadata !DIExpression()), !dbg !8063
  %4 = icmp eq i32 %2, 0, !dbg !8064
  br i1 %4, label %17, label %5, !dbg !8065

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !8066

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !8067
  call void @llvm.dbg.value(metadata i8* %9, metadata !8060, metadata !DIExpression()), !dbg !8067
  call void @llvm.dbg.value(metadata i32 %8, metadata !8059, metadata !DIExpression()), !dbg !8063
  call void @llvm.dbg.value(metadata i8* %9, metadata !8060, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8067
  %10 = load i8, i8* %9, align 1, !dbg !8068
  %11 = icmp eq i8 %10, %6, !dbg !8071
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !8072
  call void @llvm.dbg.value(metadata i8* %12, metadata !8060, metadata !DIExpression()), !dbg !8067
  call void @llvm.dbg.value(metadata i32 %13, metadata !8059, metadata !DIExpression()), !dbg !8063
  br i1 %15, label %16, label %7, !dbg !8072, !llvm.loop !8073

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !8075

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !8063
  ret i8* %19, !dbg !8076
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #7 !dbg !8077 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !8079, metadata !DIExpression()), !dbg !8080
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !8081
  ret void, !dbg !8082
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #2 !dbg !8083 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8085, metadata !DIExpression()), !dbg !8086
  ret i32 -1, !dbg !8087
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8088 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8092, metadata !DIExpression()), !dbg !8094
  call void @llvm.dbg.value(metadata i32* %1, metadata !8093, metadata !DIExpression()), !dbg !8094
  %3 = ptrtoint i32* %1 to i32, !dbg !8095
  %4 = and i32 %3, -2, !dbg !8095
  %5 = icmp eq i32 %4, 2, !dbg !8095
  br i1 %5, label %6, label %9, !dbg !8095

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8096
  %8 = tail call i32 %7(i32 noundef %0) #25, !dbg !8096
  br label %9, !dbg !8097

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !8097
  ret i32 %10, !dbg !8098
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8099 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8101, metadata !DIExpression()), !dbg !8103
  call void @llvm.dbg.value(metadata i32* %1, metadata !8102, metadata !DIExpression()), !dbg !8103
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !8104
  ret i32 %3, !dbg !8105
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !8106 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8109, metadata !DIExpression()), !dbg !8111
  call void @llvm.dbg.value(metadata i32* %1, metadata !8110, metadata !DIExpression()), !dbg !8111
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8112, !srcloc !8114
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !8115
  ret i32 %3, !dbg !8116
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !8117 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8122, metadata !DIExpression()), !dbg !8126
  call void @llvm.dbg.value(metadata i32* %1, metadata !8123, metadata !DIExpression()), !dbg !8126
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !8127
  call void @llvm.dbg.value(metadata i32 %3, metadata !8124, metadata !DIExpression()), !dbg !8126
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #24, !dbg !8128
  call void @llvm.dbg.value(metadata i32 %4, metadata !8125, metadata !DIExpression()), !dbg !8126
  %5 = icmp ne i32 %3, %4, !dbg !8129
  %6 = sext i1 %5 to i32, !dbg !8130
  ret i32 %6, !dbg !8131
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !8132 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8136, metadata !DIExpression()), !dbg !8140
  call void @llvm.dbg.value(metadata i32 %1, metadata !8137, metadata !DIExpression()), !dbg !8140
  call void @llvm.dbg.value(metadata i32 %2, metadata !8138, metadata !DIExpression()), !dbg !8140
  call void @llvm.dbg.value(metadata i32* %3, metadata !8139, metadata !DIExpression()), !dbg !8140
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !8141
  ret i32 %5, !dbg !8142
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !8143 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8145, metadata !DIExpression()), !dbg !8149
  call void @llvm.dbg.value(metadata i32 %1, metadata !8146, metadata !DIExpression()), !dbg !8149
  call void @llvm.dbg.value(metadata i32 %2, metadata !8147, metadata !DIExpression()), !dbg !8149
  call void @llvm.dbg.value(metadata i32* %3, metadata !8148, metadata !DIExpression()), !dbg !8149
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8150, !srcloc !8152
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !8153
  ret i32 %5, !dbg !8154
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !8155 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8157, metadata !DIExpression()), !dbg !8165
  call void @llvm.dbg.value(metadata i32 %1, metadata !8158, metadata !DIExpression()), !dbg !8165
  call void @llvm.dbg.value(metadata i32 %2, metadata !8159, metadata !DIExpression()), !dbg !8165
  call void @llvm.dbg.value(metadata i32* %3, metadata !8160, metadata !DIExpression()), !dbg !8165
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !8166
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !8168
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !8168
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !8168
  br i1 %11, label %33, label %12, !dbg !8168

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !8165
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !8165
  call void @llvm.dbg.value(metadata i8* %14, metadata !8163, metadata !DIExpression()), !dbg !8165
  call void @llvm.dbg.value(metadata i32 %13, metadata !8161, metadata !DIExpression()), !dbg !8165
  call void @llvm.dbg.value(metadata i32 %1, metadata !8162, metadata !DIExpression()), !dbg !8165
  br label %15, !dbg !8169

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !8171
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !8165
  call void @llvm.dbg.value(metadata i8* %17, metadata !8163, metadata !DIExpression()), !dbg !8165
  call void @llvm.dbg.value(metadata i32 %16, metadata !8162, metadata !DIExpression()), !dbg !8165
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8172
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8175
  call void @llvm.dbg.value(metadata i8* %19, metadata !8163, metadata !DIExpression()), !dbg !8165
  %20 = load i8, i8* %17, align 1, !dbg !8176
  %21 = zext i8 %20 to i32, !dbg !8177
  %22 = tail call i32 %18(i32 noundef %21) #25, !dbg !8172
  %23 = icmp eq i32 %22, -1, !dbg !8178
  br i1 %23, label %30, label %24, !dbg !8179

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !8180
  call void @llvm.dbg.value(metadata i32 %25, metadata !8162, metadata !DIExpression()), !dbg !8165
  %26 = icmp eq i32 %25, 0, !dbg !8181
  br i1 %26, label %27, label %15, !dbg !8182, !llvm.loop !8183

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !8185
  call void @llvm.dbg.value(metadata i32 %28, metadata !8161, metadata !DIExpression()), !dbg !8165
  %29 = icmp eq i32 %28, 0, !dbg !8186
  br i1 %29, label %30, label %12, !dbg !8187, !llvm.loop !8188

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !8165
  call void @llvm.dbg.value(metadata i32 %31, metadata !8161, metadata !DIExpression()), !dbg !8165
  call void @llvm.dbg.label(metadata !8164), !dbg !8191
  %32 = sub i32 %2, %31, !dbg !8192
  br label %33, !dbg !8193

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !8165
  ret i32 %34, !dbg !8194
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !8195 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8199, metadata !DIExpression()), !dbg !8200
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !8201
  %3 = icmp eq i32 %2, -1, !dbg !8203
  br i1 %3, label %8, label %4, !dbg !8204

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !8205
  %6 = icmp eq i32 %5, -1, !dbg !8206
  %7 = sext i1 %6 to i32, !dbg !8205
  br label %8, !dbg !8207

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !8200
  ret i32 %9, !dbg !8208
}

; Function Attrs: noinline nounwind optsize
define dso_local void @end_report() local_unnamed_addr #1 !dbg !8209 {
  %1 = load i32, i32* @test_status, align 4, !dbg !8210
  %2 = icmp eq i32 %1, 0, !dbg !8210
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.89, i32 0, i32 0)) #25, !dbg !8212
  %3 = select i1 %2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3.90, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2.91, i32 0, i32 0)
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1.92, i32 0, i32 0), i8* noundef %3) #25, !dbg !8212
  ret void, !dbg !8213
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @z_impl_z_test_1cpu_start() local_unnamed_addr #2 !dbg !8214 {
  ret void, !dbg !8215
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @z_impl_z_test_1cpu_stop() local_unnamed_addr #2 !dbg !8216 {
  ret void, !dbg !8217
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_skip_failed_assumption() local_unnamed_addr #1 !dbg !8218 {
  store i1 true, i1* @current_test_failed_assumption, align 1, !dbg !8219
  tail call void @ztest_test_skip() #24, !dbg !8222
  ret void, !dbg !8223
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_test_skip() local_unnamed_addr #1 !dbg !8224 {
  %1 = load i32, i32* @phase, align 4, !dbg !8225
  switch i32 %1, label %4 [
    i32 0, label %2
    i32 1, label %3
    i32 2, label %3
  ], !dbg !8226

2:                                                ; preds = %0
  store i32 4, i32* @test_result, align 4, !dbg !8227
  br label %6, !dbg !8229

3:                                                ; preds = %0, %0
  store i32 3, i32* @test_result, align 4, !dbg !8230
  tail call fastcc void @test_finalize() #24, !dbg !8231
  br label %6, !dbg !8232

4:                                                ; preds = %0
  %5 = tail call fastcc i8* @get_friendly_phase_name(i32 noundef %1) #24, !dbg !8233
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.6.93, i32 0, i32 0), i8* noundef %5) #25, !dbg !8234
  store i32 2, i32* @test_status, align 4, !dbg !8235
  br label %6, !dbg !8236

6:                                                ; preds = %4, %3, %2
  ret void, !dbg !8237
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @test_finalize() unnamed_addr #1 !dbg !8238 {
  tail call fastcc void @k_thread_abort.101(%struct.k_thread* noundef nonnull @ztest_thread) #24, !dbg !8239
  %1 = tail call fastcc %struct.k_thread* @k_current_get.102() #26, !dbg !8242
  tail call fastcc void @k_thread_abort.101(%struct.k_thread* noundef %1) #24, !dbg !8243
  ret void, !dbg !8244
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @get_friendly_phase_name(i32 noundef %0) unnamed_addr #2 !dbg !8245 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8249, metadata !DIExpression()), !dbg !8250
  %2 = icmp ult i32 %0, 6, !dbg !8251
  br i1 %2, label %3, label %6, !dbg !8251

3:                                                ; preds = %1
  %4 = getelementptr inbounds [6 x i8*], [6 x i8*]* @switch.table.get_friendly_phase_name, i32 0, i32 %0, !dbg !8251
  %5 = load i8*, i8** %4, align 4, !dbg !8251
  br label %6, !dbg !8251

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.16.94, i32 0, i32 0), %1 ], !dbg !8252
  ret i8* %7, !dbg !8254
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.101(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !8255 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8261, metadata !DIExpression()), !dbg !8262
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8263, !srcloc !8265
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !8266
  ret void, !dbg !8267
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.102() unnamed_addr #11 !dbg !8268 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.103() #26, !dbg !8271
  ret %struct.k_thread* %1, !dbg !8272
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.103() unnamed_addr #11 !dbg !8273 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8274, !srcloc !8276
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !8277
  ret %struct.k_thread* %1, !dbg !8278
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_test_fail() local_unnamed_addr #1 !dbg !8279 {
  %1 = load i32, i32* @phase, align 4, !dbg !8280
  switch i32 %1, label %4 [
    i32 0, label %2
    i32 1, label %3
    i32 2, label %3
  ], !dbg !8281

2:                                                ; preds = %0
  store i32 5, i32* @test_result, align 4, !dbg !8282
  br label %6, !dbg !8284

3:                                                ; preds = %0, %0
  store i32 2, i32* @test_result, align 4, !dbg !8285
  tail call fastcc void @test_finalize() #24, !dbg !8286
  br label %6, !dbg !8287

4:                                                ; preds = %0
  %5 = tail call fastcc i8* @get_friendly_phase_name(i32 noundef %1) #24, !dbg !8288
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.4.104, i32 0, i32 0), i8* noundef %5) #25, !dbg !8289
  store i32 2, i32* @test_status, align 4, !dbg !8290
  br label %6, !dbg !8291

6:                                                ; preds = %4, %3, %2
  ret void, !dbg !8292
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_test_pass() local_unnamed_addr #1 !dbg !8293 {
  %1 = load i32, i32* @phase, align 4, !dbg !8294
  %2 = icmp eq i32 %1, 2, !dbg !8295
  br i1 %2, label %3, label %4, !dbg !8295

3:                                                ; preds = %0
  store i32 1, i32* @test_result, align 4, !dbg !8296
  br label %8, !dbg !8298

4:                                                ; preds = %0
  %5 = tail call fastcc i8* @get_friendly_phase_name(i32 noundef %1) #24, !dbg !8299
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.5.105, i32 0, i32 0), i8* noundef %5) #25, !dbg !8300
  store i32 2, i32* @test_status, align 4, !dbg !8301
  %6 = load i32, i32* @phase, align 4, !dbg !8302
  %7 = icmp eq i32 %6, 1, !dbg !8304
  br i1 %7, label %8, label %9, !dbg !8305

8:                                                ; preds = %4, %3
  tail call fastcc void @test_finalize() #24, !dbg !8306
  br label %9, !dbg !8307

9:                                                ; preds = %8, %4
  ret void, !dbg !8307
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_simple_1cpu_before(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !8308 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8310, metadata !DIExpression()), !dbg !8311
  tail call fastcc void @z_test_1cpu_start() #24, !dbg !8312
  ret void, !dbg !8313
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_test_1cpu_start() unnamed_addr #1 !dbg !8314 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8316, !srcloc !8318
  ret void, !dbg !8319
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_simple_1cpu_after(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !8320 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8322, metadata !DIExpression()), !dbg !8323
  tail call fastcc void @z_test_1cpu_stop() #24, !dbg !8324
  ret void, !dbg !8325
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_test_1cpu_stop() unnamed_addr #1 !dbg !8326 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8327, !srcloc !8329
  ret void, !dbg !8330
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %0, %struct.ztest_unit_test* noundef readonly %1) local_unnamed_addr #1 !dbg !8331 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8352, metadata !DIExpression()), !dbg !8355
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %1, metadata !8353, metadata !DIExpression()), !dbg !8355
  %3 = icmp eq %struct.ztest_unit_test* %1, null, !dbg !8356
  %4 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %1, i32 1, !dbg !8357
  %5 = select i1 %3, %struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), %struct.ztest_unit_test* %4, !dbg !8357
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %5, metadata !8354, metadata !DIExpression()), !dbg !8355
  %6 = icmp ult %struct.ztest_unit_test* %5, getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0), !dbg !8358
  br i1 %6, label %7, label %16, !dbg !8361

7:                                                ; preds = %2, %13
  %8 = phi %struct.ztest_unit_test* [ %14, %13 ], [ %5, %2 ]
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %8, metadata !8354, metadata !DIExpression()), !dbg !8355
  %9 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %8, i32 0, i32 0, !dbg !8362
  %10 = load i8*, i8** %9, align 4, !dbg !8362
  %11 = tail call i32 @strcmp(i8* noundef %0, i8* noundef %10) #25, !dbg !8365
  %12 = icmp eq i32 %11, 0, !dbg !8366
  br i1 %12, label %16, label %13, !dbg !8367

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %8, i32 1, !dbg !8368
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %14, metadata !8354, metadata !DIExpression()), !dbg !8355
  %15 = icmp ult %struct.ztest_unit_test* %14, getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0), !dbg !8358
  br i1 %15, label %7, label %16, !dbg !8361, !llvm.loop !8369

16:                                               ; preds = %7, %13, %2
  %17 = phi %struct.ztest_unit_test* [ null, %2 ], [ null, %13 ], [ %8, %7 ], !dbg !8355
  ret %struct.ztest_unit_test* %17, !dbg !8371
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_ztest_run_test_suite(i8* noundef %0) local_unnamed_addr #1 !dbg !8372 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8374, metadata !DIExpression()), !dbg !8375
  %2 = tail call fastcc %struct.ztest_suite_node* @ztest_find_test_suite(i8* noundef %0) #24, !dbg !8376
  %3 = tail call fastcc i32 @z_ztest_run_test_suite_ptr(%struct.ztest_suite_node* noundef %2) #24, !dbg !8377
  ret i32 %3, !dbg !8378
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.ztest_suite_node* @ztest_find_test_suite(i8* noundef %0) unnamed_addr #1 !dbg !8379 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8400, metadata !DIExpression()), !dbg !8402
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), metadata !8401, metadata !DIExpression()), !dbg !8402
  br i1 icmp ult (%struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0)), label %2, label %11, !dbg !8403

2:                                                ; preds = %1, %8
  %3 = phi %struct.ztest_suite_node* [ %9, %8 ], [ getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %3, metadata !8401, metadata !DIExpression()), !dbg !8402
  %4 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %3, i32 0, i32 0, !dbg !8405
  %5 = load i8*, i8** %4, align 4, !dbg !8405
  %6 = tail call i32 @strcmp(i8* noundef %0, i8* noundef %5) #25, !dbg !8409
  %7 = icmp eq i32 %6, 0, !dbg !8410
  br i1 %7, label %11, label %8, !dbg !8411

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %3, i32 1, !dbg !8412
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %9, metadata !8401, metadata !DIExpression()), !dbg !8402
  %10 = icmp ult %struct.ztest_suite_node* %9, getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0), !dbg !8413
  br i1 %10, label %2, label %11, !dbg !8403, !llvm.loop !8414

11:                                               ; preds = %2, %8, %1
  %12 = phi %struct.ztest_suite_node* [ null, %1 ], [ null, %8 ], [ %3, %2 ], !dbg !8402
  ret %struct.ztest_suite_node* %12, !dbg !8416
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_ztest_run_test_suite_ptr(%struct.ztest_suite_node* noundef %0) unnamed_addr #1 !dbg !8417 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8421, metadata !DIExpression()), !dbg !8428
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8422, metadata !DIExpression()), !dbg !8428
  call void @llvm.dbg.value(metadata i8* null, metadata !8423, metadata !DIExpression()), !dbg !8428
  call void @llvm.dbg.value(metadata i32 0, metadata !8424, metadata !DIExpression()), !dbg !8428
  call void @llvm.dbg.value(metadata i32 0, metadata !8425, metadata !DIExpression()), !dbg !8428
  %2 = icmp eq %struct.ztest_suite_node* %0, null, !dbg !8429
  br i1 %2, label %3, label %4, !dbg !8431

3:                                                ; preds = %1
  store i32 2, i32* @test_status, align 4, !dbg !8432
  br label %68, !dbg !8434

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 0, !dbg !8435
  %6 = load i8*, i8** %5, align 4, !dbg !8435
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.17.106, i32 0, i32 0), i8* noundef %6) #25, !dbg !8435
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.89, i32 0, i32 0)) #25, !dbg !8435
  store i1 false, i1* @current_test_failed_assumption, align 1, !dbg !8437
  store i32 0, i32* @test_result, align 4, !dbg !8438
  store i32 0, i32* @phase, align 4, !dbg !8439
  %7 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 1, !dbg !8440
  %8 = load i8* ()*, i8* ()** %7, align 4, !dbg !8440
  %9 = icmp eq i8* ()* %8, null, !dbg !8442
  br i1 %9, label %12, label %10, !dbg !8443

10:                                               ; preds = %4
  %11 = tail call i8* %8() #25, !dbg !8444
  call void @llvm.dbg.value(metadata i8* %11, metadata !8423, metadata !DIExpression()), !dbg !8428
  br label %12, !dbg !8446

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ null, %4 ], !dbg !8428
  call void @llvm.dbg.value(metadata i8* %13, metadata !8423, metadata !DIExpression()), !dbg !8428
  call void @llvm.dbg.value(metadata i32 0, metadata !8426, metadata !DIExpression()), !dbg !8447
  call void @llvm.dbg.value(metadata i32 undef, metadata !8426, metadata !DIExpression()), !dbg !8447
  call void @llvm.dbg.value(metadata i32 0, metadata !8424, metadata !DIExpression()), !dbg !8428
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8422, metadata !DIExpression()), !dbg !8428
  %14 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** getelementptr inbounds (%struct.ztest_arch_api, %struct.ztest_arch_api* @ztest_api, i32 0, i32 2), align 4
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8422, metadata !DIExpression()), !dbg !8428
  br label %15, !dbg !8448

15:                                               ; preds = %12, %49
  %16 = phi %struct.ztest_unit_test* [ %19, %49 ], [ null, %12 ], !dbg !8428
  %17 = phi i32 [ %50, %49 ], [ 0, %12 ], !dbg !8451
  call void @llvm.dbg.value(metadata i32 %17, metadata !8424, metadata !DIExpression()), !dbg !8428
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %16, metadata !8422, metadata !DIExpression()), !dbg !8428
  %18 = load i8*, i8** %5, align 4, !dbg !8452
  %19 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %18, %struct.ztest_unit_test* noundef %16) #24, !dbg !8453
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %19, metadata !8422, metadata !DIExpression()), !dbg !8428
  %20 = icmp eq %struct.ztest_unit_test* %19, null, !dbg !8454
  br i1 %20, label %53, label %21, !dbg !8448

21:                                               ; preds = %15
  %22 = load i8*, i8** %5, align 4, !dbg !8455
  %23 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %19, i32 0, i32 1, !dbg !8458
  %24 = load i8*, i8** %23, align 4, !dbg !8458
  %25 = tail call zeroext i1 %14(i8* noundef %22, i8* noundef %24) #25, !dbg !8459
  br i1 %25, label %26, label %49, !dbg !8460

26:                                               ; preds = %21
  %27 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %19, i32 0, i32 4, !dbg !8461
  %28 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %27, align 4, !dbg !8461
  %29 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %28, i32 0, i32 0, !dbg !8463
  %30 = load i32, i32* %29, align 4, !dbg !8464
  %31 = add i32 %30, 1, !dbg !8464
  store i32 %31, i32* %29, align 4, !dbg !8464
  %32 = tail call fastcc i32 @run_test(%struct.ztest_suite_node* noundef nonnull %0, %struct.ztest_unit_test* noundef nonnull %19, i8* noundef %13) #24, !dbg !8465
  call void @llvm.dbg.value(metadata i32 %32, metadata !8425, metadata !DIExpression()), !dbg !8428
  switch i32 %32, label %49 [
    i32 0, label %33
    i32 2, label %36
    i32 1, label %39
  ], !dbg !8466

33:                                               ; preds = %26
  %34 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %27, align 4, !dbg !8467
  %35 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %34, i32 0, i32 3, !dbg !8470
  br label %42, !dbg !8471

36:                                               ; preds = %26
  %37 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %27, align 4, !dbg !8472
  %38 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %37, i32 0, i32 1, !dbg !8475
  br label %42, !dbg !8476

39:                                               ; preds = %26
  %40 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %27, align 4, !dbg !8477
  %41 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %40, i32 0, i32 2, !dbg !8480
  br label %42, !dbg !8481

42:                                               ; preds = %36, %39, %33
  %43 = phi i32* [ %38, %36 ], [ %41, %39 ], [ %35, %33 ]
  %44 = load i32, i32* %43, align 4, !dbg !8482
  %45 = add i32 %44, 1, !dbg !8482
  store i32 %45, i32* %43, align 4, !dbg !8482
  %46 = icmp eq i32 %32, 1, !dbg !8483
  %47 = zext i1 %46 to i32, !dbg !8485
  %48 = add nsw i32 %17, %47, !dbg !8485
  br label %49, !dbg !8485

49:                                               ; preds = %42, %26, %21
  %50 = phi i32 [ %17, %21 ], [ %17, %26 ], [ %48, %42 ], !dbg !8451
  call void @llvm.dbg.value(metadata i32 %50, metadata !8424, metadata !DIExpression()), !dbg !8428
  %51 = load i32, i32* @test_status, align 4, !dbg !8486
  %52 = icmp eq i32 %51, 2, !dbg !8488
  br i1 %52, label %59, label %15, !dbg !8489, !llvm.loop !8490

53:                                               ; preds = %15
  %54 = load i32, i32* @test_status, align 4, !dbg !8492
  %55 = icmp eq i32 %54, 0, !dbg !8448
  call void @llvm.dbg.value(metadata i32 %17, metadata !8424, metadata !DIExpression()), !dbg !8428
  %56 = icmp ne i32 %17, 0
  %57 = select i1 %55, i1 %56, i1 false, !dbg !8494
  br i1 %57, label %58, label %59, !dbg !8494

58:                                               ; preds = %53
  store i32 1, i32* @test_status, align 4, !dbg !8495
  br label %59, !dbg !8497

59:                                               ; preds = %49, %53, %58
  %60 = phi i32 [ %17, %53 ], [ %17, %58 ], [ %50, %49 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !8426, metadata !DIExpression()), !dbg !8447
  call void @llvm.dbg.value(metadata i32 %17, metadata !8424, metadata !DIExpression()), !dbg !8428
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* undef, metadata !8422, metadata !DIExpression()), !dbg !8428
  %61 = icmp sgt i32 %60, 0, !dbg !8498
  %62 = load i8*, i8** %5, align 4, !dbg !8501
  %63 = select i1 %61, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.19.107, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.18.108, i32 0, i32 0)
  tail call void (i8*, ...) @printk(i8* noundef %63, i8* noundef %62) #25, !dbg !8501
  store i32 4, i32* @phase, align 4, !dbg !8502
  %64 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 4, !dbg !8503
  %65 = load void (i8*)*, void (i8*)** %64, align 4, !dbg !8503
  %66 = icmp eq void (i8*)* %65, null, !dbg !8505
  br i1 %66, label %68, label %67, !dbg !8506

67:                                               ; preds = %59
  tail call void %65(i8* noundef %13) #25, !dbg !8507
  br label %68, !dbg !8509

68:                                               ; preds = %59, %67, %3
  %69 = phi i32 [ -1, %3 ], [ %60, %67 ], [ %60, %59 ], !dbg !8428
  ret i32 %69, !dbg !8510
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @run_test(%struct.ztest_suite_node* noundef %0, %struct.ztest_unit_test* noundef %1, i8* noundef %2) unnamed_addr #1 !dbg !8511 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8515, metadata !DIExpression()), !dbg !8519
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %1, metadata !8516, metadata !DIExpression()), !dbg !8519
  call void @llvm.dbg.value(metadata i8* %2, metadata !8517, metadata !DIExpression()), !dbg !8519
  call void @llvm.dbg.value(metadata i32 0, metadata !8518, metadata !DIExpression()), !dbg !8519
  %4 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %1, i32 0, i32 1, !dbg !8520
  %5 = load i8*, i8** %4, align 4, !dbg !8520
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.20.109, i32 0, i32 0), i8* noundef %5) #25, !dbg !8520
  store i32 1, i32* @phase, align 4, !dbg !8522
  tail call fastcc void @get_start_time_cyc() #24, !dbg !8523
  %6 = bitcast %struct.ztest_suite_node* %0 to i8*, !dbg !8526
  %7 = bitcast %struct.ztest_unit_test* %1 to i8*, !dbg !8527
  %8 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %1, i32 0, i32 3, !dbg !8528
  %9 = load i32, i32* %8, align 4, !dbg !8528
  %10 = or i32 %9, 8, !dbg !8529
  tail call fastcc void @k_thread_create(i8* noundef %6, i8* noundef %7, i8* noundef %2, i32 noundef %10) #24, !dbg !8530
  tail call fastcc void @k_object_access_grant() #24, !dbg !8531
  tail call fastcc void @k_object_access_grant() #24, !dbg !8531
  tail call fastcc void @k_object_access_grant() #24, !dbg !8531
  %11 = load i8*, i8** %4, align 4, !dbg !8532
  %12 = icmp eq i8* %11, null, !dbg !8534
  br i1 %12, label %14, label %13, !dbg !8535

13:                                               ; preds = %3
  tail call fastcc void @k_thread_name_set(i8* noundef nonnull %11) #24, !dbg !8536
  br label %14, !dbg !8538

14:                                               ; preds = %13, %3
  %15 = load i32, i32* @test_result, align 4, !dbg !8539
  %16 = and i32 %15, -2, !dbg !8541
  %17 = icmp eq i32 %16, 4, !dbg !8541
  br i1 %17, label %19, label %18, !dbg !8541

18:                                               ; preds = %14
  tail call fastcc void @k_thread_start() #24, !dbg !8542
  tail call fastcc void @k_thread_join() #24, !dbg !8544
  br label %19, !dbg !8545

19:                                               ; preds = %18, %14
  store i32 3, i32* @phase, align 4, !dbg !8546
  %20 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 3, !dbg !8547
  %21 = load void (i8*)*, void (i8*)** %20, align 4, !dbg !8547
  %22 = icmp eq void (i8*)* %21, null, !dbg !8549
  br i1 %22, label %24, label %23, !dbg !8550

23:                                               ; preds = %19
  tail call void %21(i8* noundef %2) #25, !dbg !8551
  br label %24, !dbg !8553

24:                                               ; preds = %23, %19
  tail call fastcc void @run_test_rules(i1 noundef zeroext false, %struct.ztest_unit_test* noundef nonnull %1, i8* noundef %2) #24, !dbg !8554
  tail call fastcc void @get_test_duration_ms() #24, !dbg !8555
  %25 = load i32, i32* @tc_spend_time, align 4, !dbg !8556
  %26 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %1, i32 0, i32 4, !dbg !8558
  %27 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %26, align 4, !dbg !8558
  %28 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %27, i32 0, i32 4, !dbg !8559
  %29 = load i32, i32* %28, align 4, !dbg !8559
  %30 = icmp ugt i32 %25, %29, !dbg !8560
  br i1 %30, label %31, label %32, !dbg !8561

31:                                               ; preds = %24
  store i32 %25, i32* %28, align 4, !dbg !8562
  br label %32, !dbg !8564

32:                                               ; preds = %31, %24
  store i32 5, i32* @phase, align 4, !dbg !8565
  %33 = load i32, i32* @test_result, align 4, !dbg !8566
  switch i32 %33, label %34 [
    i32 5, label %38
    i32 2, label %38
  ], !dbg !8568

34:                                               ; preds = %32
  %35 = add i32 %33, -3, !dbg !8569
  %36 = icmp ult i32 %35, 2, !dbg !8569
  %37 = select i1 %36, i32 2, i32 0, !dbg !8569
  br label %38, !dbg !8569

38:                                               ; preds = %34, %32, %32
  %39 = phi i32 [ 1, %32 ], [ 1, %32 ], [ %37, %34 ], !dbg !8519
  call void @llvm.dbg.value(metadata i32 %39, metadata !8518, metadata !DIExpression()), !dbg !8519
  tail call fastcc void @cleanup_test() #24, !dbg !8571
  call void @llvm.dbg.value(metadata i32 %39, metadata !8518, metadata !DIExpression()), !dbg !8519
  %40 = tail call fastcc i32 @get_final_test_result(%struct.ztest_unit_test* noundef nonnull %1, i32 noundef %39) #24, !dbg !8574
  call void @llvm.dbg.value(metadata i32 %40, metadata !8518, metadata !DIExpression()), !dbg !8519
  %41 = tail call fastcc i8* @TC_RESULT_TO_STR(i32 noundef %40) #24, !dbg !8575
  %42 = load i8*, i8** %4, align 4, !dbg !8575
  %43 = load i32, i32* @tc_spend_time, align 4, !dbg !8575
  %44 = freeze i32 %43
  %45 = udiv i32 %44, 1000, !dbg !8575
  %46 = mul i32 %45, 1000
  %47 = sub i32 %44, %46
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.21.110, i32 0, i32 0), i8* noundef %41, i8* noundef %42, i32 noundef %45, i32 noundef %47) #25, !dbg !8575
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.89, i32 0, i32 0)) #25, !dbg !8575
  %48 = icmp eq i32 %40, 2, !dbg !8577
  br i1 %48, label %49, label %52, !dbg !8579

49:                                               ; preds = %38
  %50 = load i1, i1* @current_test_failed_assumption, align 1, !dbg !8580
  br i1 %50, label %51, label %52, !dbg !8581

51:                                               ; preds = %49
  store i32 1, i32* @test_status, align 4, !dbg !8582
  br label %52, !dbg !8584

52:                                               ; preds = %51, %49, %38
  ret i32 %40, !dbg !8585
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @get_start_time_cyc() unnamed_addr #1 !dbg !8586 {
  %1 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !8587
  store i32 %1, i32* @tc_start_time, align 4, !dbg !8588
  ret void, !dbg !8589
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_create(i8* noundef %0, i8* noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !8590 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !8609, metadata !DIExpression()), !dbg !8610
  call void @llvm.dbg.value(metadata %struct.k_thread* @ztest_thread, metadata !8600, metadata !DIExpression()), !dbg !8610
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @ztest_thread_stack, i32 0, i32 0), metadata !8601, metadata !DIExpression()), !dbg !8610
  call void @llvm.dbg.value(metadata i32 1024, metadata !8602, metadata !DIExpression()), !dbg !8610
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* @test_cb, metadata !8603, metadata !DIExpression()), !dbg !8610
  call void @llvm.dbg.value(metadata i8* %0, metadata !8604, metadata !DIExpression()), !dbg !8610
  call void @llvm.dbg.value(metadata i8* %1, metadata !8605, metadata !DIExpression()), !dbg !8610
  call void @llvm.dbg.value(metadata i8* %2, metadata !8606, metadata !DIExpression()), !dbg !8610
  call void @llvm.dbg.value(metadata i32 -1, metadata !8607, metadata !DIExpression()), !dbg !8610
  call void @llvm.dbg.value(metadata i32 %3, metadata !8608, metadata !DIExpression()), !dbg !8610
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8611, !srcloc !8613
  %5 = tail call %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef nonnull @ztest_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @ztest_thread_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @test_cb, i8* noundef %0, i8* noundef %1, i8* noundef %2, i32 noundef -1, i32 noundef %3, [1 x i64] [i64 -1]) #25, !dbg !8614
  ret void, !dbg !8615
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_object_access_grant() unnamed_addr #1 !dbg !8616 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !8621, metadata !DIExpression()), !dbg !8623
  call void @llvm.dbg.value(metadata %struct.k_thread* @ztest_thread, metadata !8622, metadata !DIExpression()), !dbg !8623
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8624, !srcloc !8626
  ret void, !dbg !8627
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_name_set(i8* noundef %0) unnamed_addr #1 !dbg !8628 {
  call void @llvm.dbg.value(metadata %struct.k_thread* @ztest_thread, metadata !8632, metadata !DIExpression()), !dbg !8634
  call void @llvm.dbg.value(metadata i8* %0, metadata !8633, metadata !DIExpression()), !dbg !8634
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8635, !srcloc !8637
  %2 = tail call i32 @z_impl_k_thread_name_set(%struct.k_thread* noundef nonnull @ztest_thread, i8* noundef %0) #25, !dbg !8638
  ret void, !dbg !8639
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start() unnamed_addr #1 !dbg !8640 {
  call void @llvm.dbg.value(metadata %struct.k_thread* @ztest_thread, metadata !8642, metadata !DIExpression()), !dbg !8643
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8644, !srcloc !8646
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef nonnull @ztest_thread) #25, !dbg !8647
  ret void, !dbg !8648
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_join() unnamed_addr #1 !dbg !8649 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !8654, metadata !DIExpression()), !dbg !8655
  call void @llvm.dbg.value(metadata %struct.k_thread* @ztest_thread, metadata !8653, metadata !DIExpression()), !dbg !8655
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8656, !srcloc !8658
  %1 = tail call i32 @z_impl_k_thread_join(%struct.k_thread* noundef nonnull @ztest_thread, [1 x i64] [i64 -1]) #25, !dbg !8659
  ret void, !dbg !8660
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @run_test_rules(i1 noundef zeroext %0, %struct.ztest_unit_test* noundef %1, i8* noundef %2) unnamed_addr #1 !dbg !8661 {
  call void @llvm.dbg.value(metadata i1 %0, metadata !8665, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8681
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %1, metadata !8666, metadata !DIExpression()), !dbg !8681
  call void @llvm.dbg.value(metadata i8* %2, metadata !8667, metadata !DIExpression()), !dbg !8681
  call void @llvm.dbg.value(metadata %struct.ztest_test_rule* getelementptr inbounds ([0 x %struct.ztest_test_rule], [0 x %struct.ztest_test_rule]* @_ztest_test_rule_list_start, i32 0, i32 0), metadata !8668, metadata !DIExpression()), !dbg !8682
  br i1 icmp ult (%struct.ztest_test_rule* getelementptr inbounds ([0 x %struct.ztest_test_rule], [0 x %struct.ztest_test_rule]* @_ztest_test_rule_list_start, i32 0, i32 0), %struct.ztest_test_rule* getelementptr inbounds ([0 x %struct.ztest_test_rule], [0 x %struct.ztest_test_rule]* @_ztest_test_rule_list_end, i32 0, i32 0)), label %5, label %4, !dbg !8683

4:                                                ; preds = %17, %3
  ret void, !dbg !8684

5:                                                ; preds = %3, %17
  %6 = phi %struct.ztest_test_rule* [ %18, %17 ], [ getelementptr inbounds ([0 x %struct.ztest_test_rule], [0 x %struct.ztest_test_rule]* @_ztest_test_rule_list_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.ztest_test_rule* %6, metadata !8668, metadata !DIExpression()), !dbg !8682
  br i1 %0, label %7, label %11, !dbg !8685

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.ztest_test_rule, %struct.ztest_test_rule* %6, i32 0, i32 0, !dbg !8689
  %9 = load void (%struct.ztest_unit_test*, i8*)*, void (%struct.ztest_unit_test*, i8*)** %8, align 4, !dbg !8689
  %10 = icmp eq void (%struct.ztest_unit_test*, i8*)* %9, null, !dbg !8690
  br i1 %10, label %17, label %15, !dbg !8691

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct.ztest_test_rule, %struct.ztest_test_rule* %6, i32 0, i32 1, !dbg !8692
  %13 = load void (%struct.ztest_unit_test*, i8*)*, void (%struct.ztest_unit_test*, i8*)** %12, align 4, !dbg !8692
  %14 = icmp eq void (%struct.ztest_unit_test*, i8*)* %13, null, !dbg !8694
  br i1 %14, label %17, label %15, !dbg !8695

15:                                               ; preds = %11, %7
  %16 = phi void (%struct.ztest_unit_test*, i8*)* [ %9, %7 ], [ %13, %11 ]
  tail call void %16(%struct.ztest_unit_test* noundef %1, i8* noundef %2) #25, !dbg !8696
  br label %17, !dbg !8697

17:                                               ; preds = %15, %7, %11
  %18 = getelementptr inbounds %struct.ztest_test_rule, %struct.ztest_test_rule* %6, i32 1, !dbg !8697
  call void @llvm.dbg.value(metadata %struct.ztest_test_rule* %18, metadata !8668, metadata !DIExpression()), !dbg !8682
  %19 = icmp ult %struct.ztest_test_rule* %18, getelementptr inbounds ([0 x %struct.ztest_test_rule], [0 x %struct.ztest_test_rule]* @_ztest_test_rule_list_end, i32 0, i32 0), !dbg !8698
  br i1 %19, label %5, label %4, !dbg !8683, !llvm.loop !8699
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @get_test_duration_ms() unnamed_addr #1 !dbg !8701 {
  %1 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !8704
  %2 = load i32, i32* @tc_start_time, align 4, !dbg !8705
  %3 = sub i32 %1, %2, !dbg !8706
  call void @llvm.dbg.value(metadata i32 %3, metadata !8703, metadata !DIExpression()), !dbg !8707
  %4 = tail call fastcc i32 @k_cyc_to_ms_ceil32(i32 noundef %3) #24, !dbg !8708
  store i32 %4, i32* @tc_spend_time, align 4, !dbg !8709
  ret void, !dbg !8710
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cleanup_test() unnamed_addr #1 !dbg !8711 {
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* undef, metadata !8715, metadata !DIExpression()), !dbg !8718
  call void @llvm.dbg.value(metadata i32 0, metadata !8716, metadata !DIExpression()), !dbg !8718
  call void @llvm.dbg.value(metadata i32 0, metadata !8717, metadata !DIExpression()), !dbg !8718
  tail call fastcc void @k_thread_abort.101(%struct.k_thread* noundef nonnull @ztest_thread) #24, !dbg !8719
  call void @llvm.dbg.value(metadata i32 0, metadata !8716, metadata !DIExpression()), !dbg !8718
  ret void, !dbg !8722
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_final_test_result(%struct.ztest_unit_test* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !8723 {
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %0, metadata !8727, metadata !DIExpression()), !dbg !8738
  call void @llvm.dbg.value(metadata i32 %1, metadata !8728, metadata !DIExpression()), !dbg !8738
  call void @llvm.dbg.value(metadata i32 -1, metadata !8729, metadata !DIExpression()), !dbg !8738
  call void @llvm.dbg.value(metadata %struct.ztest_expected_result_entry* getelementptr inbounds ([0 x %struct.ztest_expected_result_entry], [0 x %struct.ztest_expected_result_entry]* @_ztest_expected_result_entry_list_start, i32 0, i32 0), metadata !8730, metadata !DIExpression()), !dbg !8739
  br i1 icmp ult (%struct.ztest_expected_result_entry* getelementptr inbounds ([0 x %struct.ztest_expected_result_entry], [0 x %struct.ztest_expected_result_entry]* @_ztest_expected_result_entry_list_start, i32 0, i32 0), %struct.ztest_expected_result_entry* getelementptr inbounds ([0 x %struct.ztest_expected_result_entry], [0 x %struct.ztest_expected_result_entry]* @_ztest_expected_result_entry_list_end, i32 0, i32 0)), label %3, label %31, !dbg !8740

3:                                                ; preds = %2
  %4 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %0, i32 0, i32 1
  %5 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %0, i32 0, i32 0
  br label %6, !dbg !8740

6:                                                ; preds = %3, %19
  %7 = phi %struct.ztest_expected_result_entry* [ getelementptr inbounds ([0 x %struct.ztest_expected_result_entry], [0 x %struct.ztest_expected_result_entry]* @_ztest_expected_result_entry_list_start, i32 0, i32 0), %3 ], [ %20, %19 ]
  call void @llvm.dbg.value(metadata %struct.ztest_expected_result_entry* %7, metadata !8730, metadata !DIExpression()), !dbg !8739
  %8 = getelementptr inbounds %struct.ztest_expected_result_entry, %struct.ztest_expected_result_entry* %7, i32 0, i32 1, !dbg !8741
  %9 = load i8*, i8** %8, align 4, !dbg !8741
  %10 = load i8*, i8** %4, align 4, !dbg !8745
  %11 = tail call i32 @strcmp(i8* noundef %9, i8* noundef %10) #25, !dbg !8746
  %12 = icmp eq i32 %11, 0, !dbg !8747
  br i1 %12, label %13, label %19, !dbg !8748

13:                                               ; preds = %6
  %14 = getelementptr inbounds %struct.ztest_expected_result_entry, %struct.ztest_expected_result_entry* %7, i32 0, i32 0, !dbg !8749
  %15 = load i8*, i8** %14, align 4, !dbg !8749
  %16 = load i8*, i8** %5, align 4, !dbg !8750
  %17 = tail call i32 @strcmp(i8* noundef %15, i8* noundef %16) #25, !dbg !8751
  %18 = icmp eq i32 %17, 0, !dbg !8752
  br i1 %18, label %22, label %19, !dbg !8753

19:                                               ; preds = %6, %13
  %20 = getelementptr inbounds %struct.ztest_expected_result_entry, %struct.ztest_expected_result_entry* %7, i32 1, !dbg !8754
  call void @llvm.dbg.value(metadata %struct.ztest_expected_result_entry* %20, metadata !8730, metadata !DIExpression()), !dbg !8739
  %21 = icmp ult %struct.ztest_expected_result_entry* %20, getelementptr inbounds ([0 x %struct.ztest_expected_result_entry], [0 x %struct.ztest_expected_result_entry]* @_ztest_expected_result_entry_list_end, i32 0, i32 0), !dbg !8755
  br i1 %21, label %6, label %31, !dbg !8740, !llvm.loop !8756

22:                                               ; preds = %13
  %23 = getelementptr inbounds %struct.ztest_expected_result_entry, %struct.ztest_expected_result_entry* %7, i32 0, i32 2, !dbg !8758
  %24 = load i32, i32* %23, align 4, !dbg !8758
  call void @llvm.dbg.value(metadata i32 %24, metadata !8729, metadata !DIExpression()), !dbg !8738
  switch i32 %24, label %31 [
    i32 0, label %25
    i32 1, label %28
  ], !dbg !8760

25:                                               ; preds = %22
  %26 = icmp ne i32 %1, 1, !dbg !8761
  %27 = zext i1 %26 to i32, !dbg !8764
  br label %31, !dbg !8765

28:                                               ; preds = %22
  %29 = icmp ne i32 %1, 2, !dbg !8766
  %30 = zext i1 %29 to i32, !dbg !8769
  br label %31, !dbg !8770

31:                                               ; preds = %19, %2, %22, %28, %25
  %32 = phi i32 [ %27, %25 ], [ %30, %28 ], [ %1, %22 ], [ %1, %2 ], [ %1, %19 ], !dbg !8738
  ret i32 %32, !dbg !8771
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @TC_RESULT_TO_STR(i32 noundef %0) unnamed_addr #2 !dbg !8772 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8776, metadata !DIExpression()), !dbg !8777
  %2 = icmp ult i32 %0, 3, !dbg !8778
  br i1 %2, label %3, label %6, !dbg !8778

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i8*], [3 x i8*]* @switch.table.TC_RESULT_TO_STR, i32 0, i32 %0, !dbg !8778
  %5 = load i8*, i8** %4, align 4, !dbg !8778
  br label %6, !dbg !8778

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.27.111, i32 0, i32 0), %1 ], !dbg !8779
  ret i8* %7, !dbg !8781
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !8782 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #24, !dbg !8783
  ret i32 %1, !dbg !8784
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_cyc_to_ms_ceil32(i32 noundef %0) unnamed_addr #2 !dbg !8785 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8788, metadata !DIExpression()), !dbg !8789
  %2 = zext i32 %0 to i64, !dbg !8790
  call void @llvm.dbg.value(metadata i64 %2, metadata !8791, metadata !DIExpression()), !dbg !8808
  call void @llvm.dbg.value(metadata i32 84000000, metadata !8796, metadata !DIExpression()), !dbg !8808
  call void @llvm.dbg.value(metadata i32 1000, metadata !8797, metadata !DIExpression()), !dbg !8808
  call void @llvm.dbg.value(metadata i8 1, metadata !8798, metadata !DIExpression()), !dbg !8808
  call void @llvm.dbg.value(metadata i8 1, metadata !8799, metadata !DIExpression()), !dbg !8808
  call void @llvm.dbg.value(metadata i8 1, metadata !8800, metadata !DIExpression()), !dbg !8808
  call void @llvm.dbg.value(metadata i8 0, metadata !8801, metadata !DIExpression()), !dbg !8808
  call void @llvm.dbg.value(metadata i8 0, metadata !8802, metadata !DIExpression()), !dbg !8808
  call void @llvm.dbg.value(metadata i8 1, metadata !8803, metadata !DIExpression()), !dbg !8808
  call void @llvm.dbg.value(metadata i64 0, metadata !8804, metadata !DIExpression()), !dbg !8808
  call void @llvm.dbg.value(metadata i64 83999, metadata !8804, metadata !DIExpression()), !dbg !8808
  call void @llvm.dbg.value(metadata i64 83999, metadata !8804, metadata !DIExpression()), !dbg !8808
  call void @llvm.dbg.value(metadata i64 83999, metadata !8804, metadata !DIExpression()), !dbg !8808
  call void @llvm.dbg.value(metadata i64 83999, metadata !8804, metadata !DIExpression()), !dbg !8808
  %3 = add nuw nsw i64 %2, 83999, !dbg !8810
  call void @llvm.dbg.value(metadata i64 %3, metadata !8791, metadata !DIExpression()), !dbg !8808
  %4 = icmp ult i32 %0, -83999
  %5 = trunc i64 %3 to i32, !dbg !8813
  %6 = udiv i32 %5, 84000, !dbg !8813
  %7 = zext i32 %6 to i64, !dbg !8813
  %8 = udiv i64 %3, 84000, !dbg !8813
  %9 = select i1 %4, i64 %7, i64 %8, !dbg !8813
  %10 = trunc i64 %9 to i32, !dbg !8815
  ret i32 %10, !dbg !8816
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !8817 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #25, !dbg !8819
  ret i32 %1, !dbg !8820
}

; Function Attrs: noinline nounwind optsize
define internal void @test_cb(i8* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2) #1 !dbg !8821 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8823, metadata !DIExpression()), !dbg !8828
  call void @llvm.dbg.value(metadata i8* %1, metadata !8824, metadata !DIExpression()), !dbg !8828
  call void @llvm.dbg.value(metadata i8* %2, metadata !8825, metadata !DIExpression()), !dbg !8828
  call void @llvm.dbg.value(metadata i8* %0, metadata !8826, metadata !DIExpression()), !dbg !8828
  %4 = bitcast i8* %1 to %struct.ztest_unit_test*, !dbg !8829
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %4, metadata !8827, metadata !DIExpression()), !dbg !8828
  store i32 0, i32* @test_result, align 4, !dbg !8830
  tail call fastcc void @run_test_rules(i1 noundef zeroext true, %struct.ztest_unit_test* noundef %4, i8* noundef %2) #24, !dbg !8831
  %5 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !8832
  %6 = bitcast i8* %5 to void (i8*)**, !dbg !8832
  %7 = load void (i8*)*, void (i8*)** %6, align 4, !dbg !8832
  %8 = icmp eq void (i8*)* %7, null, !dbg !8834
  br i1 %8, label %10, label %9, !dbg !8835

9:                                                ; preds = %3
  tail call void %7(i8* noundef %2) #25, !dbg !8836
  br label %10, !dbg !8838

10:                                               ; preds = %9, %3
  tail call fastcc void @run_test_functions(%struct.ztest_unit_test* noundef %4, i8* noundef %2) #24, !dbg !8839
  store i32 1, i32* @test_result, align 4, !dbg !8840
  ret void, !dbg !8841
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @run_test_functions(%struct.ztest_unit_test* nocapture noundef readonly %0, i8* noundef %1) unnamed_addr #1 !dbg !8842 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* undef, metadata !8846, metadata !DIExpression()), !dbg !8849
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %0, metadata !8847, metadata !DIExpression()), !dbg !8849
  call void @llvm.dbg.value(metadata i8* %1, metadata !8848, metadata !DIExpression()), !dbg !8849
  store i32 2, i32* @phase, align 4, !dbg !8850
  %3 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %0, i32 0, i32 2, !dbg !8851
  %4 = load void (i8*)*, void (i8*)** %3, align 4, !dbg !8851
  tail call void %4(i8* noundef %1) #25, !dbg !8852
  ret void, !dbg !8853
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_ztest_run_test_suites(i8* noundef %0) local_unnamed_addr #1 !dbg !8854 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8858, metadata !DIExpression()), !dbg !8862
  call void @llvm.dbg.value(metadata i32 0, metadata !8859, metadata !DIExpression()), !dbg !8862
  %2 = load i32, i32* @test_status, align 4, !dbg !8863
  %3 = icmp eq i32 %2, 2, !dbg !8865
  br i1 %3, label %17, label %4, !dbg !8866

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), metadata !8860, metadata !DIExpression()), !dbg !8867
  call void @llvm.dbg.value(metadata i32 0, metadata !8859, metadata !DIExpression()), !dbg !8862
  br i1 icmp ult (%struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0)), label %5, label %15, !dbg !8868

5:                                                ; preds = %4, %5
  %6 = phi %struct.ztest_suite_node* [ %12, %5 ], [ getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %4 ]
  %7 = phi i32 [ %9, %5 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %6, metadata !8860, metadata !DIExpression()), !dbg !8867
  call void @llvm.dbg.value(metadata i32 %7, metadata !8859, metadata !DIExpression()), !dbg !8862
  %8 = tail call fastcc i32 @__ztest_run_test_suite(%struct.ztest_suite_node* noundef nonnull %6, i8* noundef %0) #24, !dbg !8869
  %9 = add nsw i32 %8, %7, !dbg !8872
  call void @llvm.dbg.value(metadata i32 %9, metadata !8859, metadata !DIExpression()), !dbg !8862
  %10 = load i32, i32* @test_status, align 4, !dbg !8873
  %11 = icmp ne i32 %10, 2, !dbg !8875
  %12 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %6, i32 1, !dbg !8876
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %12, metadata !8860, metadata !DIExpression()), !dbg !8867
  %13 = icmp ult %struct.ztest_suite_node* %12, getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0)
  %14 = select i1 %11, i1 %13, i1 false, !dbg !8877
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %12, metadata !8860, metadata !DIExpression()), !dbg !8867
  call void @llvm.dbg.value(metadata i32 %9, metadata !8859, metadata !DIExpression()), !dbg !8862
  br i1 %14, label %5, label %15, !dbg !8877, !llvm.loop !8878

15:                                               ; preds = %5, %4
  %16 = phi i32 [ 0, %4 ], [ %9, %5 ], !dbg !8862
  call void @llvm.dbg.value(metadata i32 %16, metadata !8859, metadata !DIExpression()), !dbg !8862
  tail call fastcc void @__ztest_show_suite_summary() #24, !dbg !8880
  br label %17, !dbg !8881

17:                                               ; preds = %1, %15
  %18 = phi i32 [ %16, %15 ], [ 0, %1 ], !dbg !8862
  ret i32 %18, !dbg !8882
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @__ztest_run_test_suite(%struct.ztest_suite_node* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !8883 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8887, metadata !DIExpression()), !dbg !8898
  call void @llvm.dbg.value(metadata i8* %1, metadata !8888, metadata !DIExpression()), !dbg !8898
  %3 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 6, !dbg !8899
  %4 = load %struct.ztest_suite_stats*, %struct.ztest_suite_stats** %3, align 4, !dbg !8899
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %4, metadata !8889, metadata !DIExpression()), !dbg !8898
  call void @llvm.dbg.value(metadata i32 0, metadata !8890, metadata !DIExpression()), !dbg !8898
  tail call fastcc void @__ztest_init_unit_test_result_for_suite(%struct.ztest_suite_node* noundef %0) #24, !dbg !8900
  call void @llvm.dbg.value(metadata i32 0, metadata !8891, metadata !DIExpression()), !dbg !8901
  call void @llvm.dbg.value(metadata i32 0, metadata !8890, metadata !DIExpression()), !dbg !8898
  call void @llvm.dbg.value(metadata i32 undef, metadata !8891, metadata !DIExpression()), !dbg !8901
  %5 = load i1 (i8*, %struct.ztest_suite_node*)*, i1 (i8*, %struct.ztest_suite_node*)** getelementptr inbounds (%struct.ztest_arch_api, %struct.ztest_arch_api* @ztest_api, i32 0, i32 1), align 4
  %6 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %4, i32 0, i32 1
  %7 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %4, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 0, metadata !8890, metadata !DIExpression()), !dbg !8898
  %8 = tail call zeroext i1 %5(i8* noundef %1, %struct.ztest_suite_node* noundef %0) #25, !dbg !8902
  br i1 %8, label %9, label %16, !dbg !8903

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %4, i32 0, i32 2
  %11 = tail call fastcc i32 @z_ztest_run_test_suite_ptr(%struct.ztest_suite_node* noundef nonnull %0) #24, !dbg !8904
  call void @llvm.dbg.value(metadata i32 %11, metadata !8893, metadata !DIExpression()), !dbg !8905
  call void @llvm.dbg.value(metadata i32 1, metadata !8890, metadata !DIExpression()), !dbg !8898
  %12 = load i32, i32* %7, align 4, !dbg !8906
  %13 = add i32 %12, 1, !dbg !8906
  store i32 %13, i32* %7, align 4, !dbg !8906
  %14 = icmp ne i32 %11, 0, !dbg !8907
  %15 = zext i1 %14 to i32, !dbg !8908
  br label %16, !dbg !8909

16:                                               ; preds = %2, %9
  %17 = phi i32* [ %10, %9 ], [ %6, %2 ]
  %18 = phi i32 [ %15, %9 ], [ 1, %2 ]
  %19 = phi i32 [ 1, %9 ], [ 0, %2 ], !dbg !8898
  %20 = load i32, i32* %17, align 4, !dbg !8910
  %21 = add i32 %20, %18, !dbg !8910
  store i32 %21, i32* %17, align 4, !dbg !8910
  call void @llvm.dbg.value(metadata i32 %19, metadata !8890, metadata !DIExpression()), !dbg !8898
  call void @llvm.dbg.value(metadata i32 undef, metadata !8891, metadata !DIExpression()), !dbg !8901
  ret i32 %19, !dbg !8911
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__ztest_show_suite_summary() unnamed_addr #1 !dbg !8912 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.28.115, i32 0, i32 0)) #25, !dbg !8916
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), metadata !8914, metadata !DIExpression()), !dbg !8917
  br i1 icmp ult (%struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0)), label %2, label %1, !dbg !8918

1:                                                ; preds = %2, %0
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.29.116, i32 0, i32 0)) #25, !dbg !8919
  ret void, !dbg !8920

2:                                                ; preds = %0, %2
  %3 = phi %struct.ztest_suite_node* [ %4, %2 ], [ getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %3, metadata !8914, metadata !DIExpression()), !dbg !8917
  tail call fastcc void @__ztest_show_suite_summary_verbose(%struct.ztest_suite_node* noundef nonnull %3) #24, !dbg !8921
  %4 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %3, i32 1, !dbg !8924
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %4, metadata !8914, metadata !DIExpression()), !dbg !8917
  %5 = icmp ult %struct.ztest_suite_node* %4, getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0), !dbg !8925
  br i1 %5, label %2, label %1, !dbg !8918, !llvm.loop !8926
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__ztest_show_suite_summary_verbose(%struct.ztest_suite_node* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8928 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8932, metadata !DIExpression()), !dbg !8936
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8933, metadata !DIExpression()), !dbg !8936
  call void @llvm.dbg.value(metadata i32 0, metadata !8934, metadata !DIExpression()), !dbg !8936
  call void @llvm.dbg.value(metadata i32 0, metadata !8935, metadata !DIExpression()), !dbg !8936
  tail call fastcc void @__ztest_show_suite_summary_oneline(%struct.ztest_suite_node* noundef %0) #24, !dbg !8937
  %2 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 poison, metadata !8935, metadata !DIExpression()), !dbg !8936
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8933, metadata !DIExpression()), !dbg !8936
  %3 = load i8*, i8** %2, align 4, !dbg !8938
  %4 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %3, %struct.ztest_unit_test* noundef null) #24, !dbg !8939
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %4, metadata !8933, metadata !DIExpression()), !dbg !8936
  %5 = icmp eq %struct.ztest_unit_test* %4, null, !dbg !8940
  br i1 %5, label %36, label %6, !dbg !8941

6:                                                ; preds = %1, %20
  %7 = phi %struct.ztest_unit_test* [ %34, %20 ], [ %4, %1 ]
  %8 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %7, i32 0, i32 4, !dbg !8942
  %9 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !8942
  %10 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %9, i32 0, i32 1, !dbg !8945
  %11 = load i32, i32* %10, align 4, !dbg !8945
  %12 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %9, i32 0, i32 0, !dbg !8946
  %13 = load i32, i32* %12, align 4, !dbg !8946
  %14 = icmp eq i32 %11, %13, !dbg !8947
  br i1 %14, label %20, label %15, !dbg !8948

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %9, i32 0, i32 3, !dbg !8949
  %17 = load i32, i32* %16, align 4, !dbg !8949
  %18 = icmp ne i32 %17, %13, !dbg !8951
  %19 = zext i1 %18 to i32
  br label %20

20:                                               ; preds = %15, %6
  %21 = phi i32 [ 2, %6 ], [ %19, %15 ], !dbg !8952
  call void @llvm.dbg.value(metadata i32 %21, metadata !8934, metadata !DIExpression()), !dbg !8936
  %22 = tail call fastcc i8* @TC_RESULT_TO_STR(i32 noundef %21) #24, !dbg !8953
  %23 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %7, i32 0, i32 0, !dbg !8953
  %24 = load i8*, i8** %23, align 4, !dbg !8953
  %25 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %7, i32 0, i32 1, !dbg !8953
  %26 = load i8*, i8** %25, align 4, !dbg !8953
  %27 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %9, i32 0, i32 4, !dbg !8953
  %28 = load i32, i32* %27, align 4, !dbg !8953
  %29 = freeze i32 %28
  %30 = udiv i32 %29, 1000, !dbg !8953
  %31 = mul i32 %30, 1000
  %32 = sub i32 %29, %31
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30.117, i32 0, i32 0), i8* noundef %22, i8* noundef %24, i8* noundef %26, i32 noundef %30, i32 noundef %32) #25, !dbg !8953
  call void @llvm.dbg.value(metadata i32 poison, metadata !8935, metadata !DIExpression()), !dbg !8936
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %7, metadata !8933, metadata !DIExpression()), !dbg !8936
  %33 = load i8*, i8** %2, align 4, !dbg !8938
  %34 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %33, %struct.ztest_unit_test* noundef nonnull %7) #24, !dbg !8939
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %34, metadata !8933, metadata !DIExpression()), !dbg !8936
  %35 = icmp eq %struct.ztest_unit_test* %34, null, !dbg !8940
  br i1 %35, label %36, label %6, !dbg !8941, !llvm.loop !8954

36:                                               ; preds = %20, %1
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.31.118, i32 0, i32 0)) #25, !dbg !8956
  ret void, !dbg !8957
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__ztest_show_suite_summary_oneline(%struct.ztest_suite_node* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8958 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8960, metadata !DIExpression()), !dbg !8974
  call void @llvm.dbg.value(metadata i32 0, metadata !8961, metadata !DIExpression()), !dbg !8974
  call void @llvm.dbg.value(metadata i32 0, metadata !8962, metadata !DIExpression()), !dbg !8974
  call void @llvm.dbg.value(metadata i32 0, metadata !8963, metadata !DIExpression()), !dbg !8974
  call void @llvm.dbg.value(metadata i32 0, metadata !8964, metadata !DIExpression()), !dbg !8974
  call void @llvm.dbg.value(metadata i32 0, metadata !8965, metadata !DIExpression()), !dbg !8974
  call void @llvm.dbg.value(metadata i32 0, metadata !8966, metadata !DIExpression()), !dbg !8974
  call void @llvm.dbg.value(metadata i32 0, metadata !8967, metadata !DIExpression()), !dbg !8974
  call void @llvm.dbg.value(metadata i32 0, metadata !8968, metadata !DIExpression()), !dbg !8974
  call void @llvm.dbg.value(metadata i32 0, metadata !8969, metadata !DIExpression()), !dbg !8974
  call void @llvm.dbg.value(metadata i32 0, metadata !8970, metadata !DIExpression()), !dbg !8974
  call void @llvm.dbg.value(metadata i32 0, metadata !8971, metadata !DIExpression()), !dbg !8974
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8972, metadata !DIExpression()), !dbg !8974
  call void @llvm.dbg.value(metadata i32 0, metadata !8973, metadata !DIExpression()), !dbg !8974
  %2 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 0, metadata !8973, metadata !DIExpression()), !dbg !8974
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8972, metadata !DIExpression()), !dbg !8974
  call void @llvm.dbg.value(metadata i32 0, metadata !8964, metadata !DIExpression()), !dbg !8974
  call void @llvm.dbg.value(metadata i32 0, metadata !8963, metadata !DIExpression()), !dbg !8974
  call void @llvm.dbg.value(metadata i32 0, metadata !8962, metadata !DIExpression()), !dbg !8974
  call void @llvm.dbg.value(metadata i32 0, metadata !8961, metadata !DIExpression()), !dbg !8974
  %3 = load i8*, i8** %2, align 4, !dbg !8975
  %4 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %3, %struct.ztest_unit_test* noundef null) #24, !dbg !8976
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %4, metadata !8972, metadata !DIExpression()), !dbg !8974
  %5 = icmp eq %struct.ztest_unit_test* %4, null, !dbg !8977
  br i1 %5, label %58, label %6, !dbg !8978

6:                                                ; preds = %1, %34
  %7 = phi %struct.ztest_unit_test* [ %39, %34 ], [ %4, %1 ]
  %8 = phi i32 [ %18, %34 ], [ 0, %1 ]
  %9 = phi i32 [ %13, %34 ], [ 0, %1 ]
  %10 = phi i32 [ %37, %34 ], [ 0, %1 ]
  %11 = phi i32 [ %36, %34 ], [ 0, %1 ]
  %12 = phi i32 [ %35, %34 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8973, metadata !DIExpression()), !dbg !8974
  call void @llvm.dbg.value(metadata i32 %9, metadata !8964, metadata !DIExpression()), !dbg !8974
  call void @llvm.dbg.value(metadata i32 %10, metadata !8963, metadata !DIExpression()), !dbg !8974
  call void @llvm.dbg.value(metadata i32 %11, metadata !8962, metadata !DIExpression()), !dbg !8974
  call void @llvm.dbg.value(metadata i32 %12, metadata !8961, metadata !DIExpression()), !dbg !8974
  %13 = add nuw nsw i32 %9, 1, !dbg !8979
  call void @llvm.dbg.value(metadata i32 %13, metadata !8964, metadata !DIExpression()), !dbg !8974
  %14 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %7, i32 0, i32 4, !dbg !8981
  %15 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %14, align 4, !dbg !8981
  %16 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %15, i32 0, i32 4, !dbg !8982
  %17 = load i32, i32* %16, align 4, !dbg !8982
  %18 = add i32 %17, %8, !dbg !8983
  call void @llvm.dbg.value(metadata i32 %18, metadata !8973, metadata !DIExpression()), !dbg !8974
  %19 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %15, i32 0, i32 1, !dbg !8984
  %20 = load i32, i32* %19, align 4, !dbg !8984
  %21 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %15, i32 0, i32 0, !dbg !8986
  %22 = load i32, i32* %21, align 4, !dbg !8986
  %23 = icmp eq i32 %20, %22, !dbg !8987
  br i1 %23, label %24, label %26, !dbg !8988

24:                                               ; preds = %6
  %25 = add nsw i32 %10, 1, !dbg !8989
  call void @llvm.dbg.value(metadata i32 %25, metadata !8963, metadata !DIExpression()), !dbg !8974
  br label %34, !dbg !8991

26:                                               ; preds = %6
  %27 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %15, i32 0, i32 3, !dbg !8992
  %28 = load i32, i32* %27, align 4, !dbg !8992
  %29 = icmp eq i32 %28, %22, !dbg !8994
  br i1 %29, label %30, label %32, !dbg !8995

30:                                               ; preds = %26
  %31 = add nsw i32 %12, 1, !dbg !8996
  call void @llvm.dbg.value(metadata i32 %31, metadata !8961, metadata !DIExpression()), !dbg !8974
  br label %34, !dbg !8998

32:                                               ; preds = %26
  %33 = add nsw i32 %11, 1, !dbg !8999
  call void @llvm.dbg.value(metadata i32 %33, metadata !8962, metadata !DIExpression()), !dbg !8974
  br label %34

34:                                               ; preds = %30, %32, %24
  %35 = phi i32 [ %12, %24 ], [ %31, %30 ], [ %12, %32 ], !dbg !8974
  %36 = phi i32 [ %11, %24 ], [ %11, %30 ], [ %33, %32 ], !dbg !8974
  %37 = phi i32 [ %25, %24 ], [ %10, %30 ], [ %10, %32 ], !dbg !8974
  call void @llvm.dbg.value(metadata i32 %18, metadata !8973, metadata !DIExpression()), !dbg !8974
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %7, metadata !8972, metadata !DIExpression()), !dbg !8974
  call void @llvm.dbg.value(metadata i32 %13, metadata !8964, metadata !DIExpression()), !dbg !8974
  call void @llvm.dbg.value(metadata i32 %37, metadata !8963, metadata !DIExpression()), !dbg !8974
  call void @llvm.dbg.value(metadata i32 %36, metadata !8962, metadata !DIExpression()), !dbg !8974
  call void @llvm.dbg.value(metadata i32 %35, metadata !8961, metadata !DIExpression()), !dbg !8974
  %38 = load i8*, i8** %2, align 4, !dbg !8975
  %39 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %38, %struct.ztest_unit_test* noundef nonnull %7) #24, !dbg !8976
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %39, metadata !8972, metadata !DIExpression()), !dbg !8974
  %40 = icmp eq %struct.ztest_unit_test* %39, null, !dbg !8977
  br i1 %40, label %41, label %6, !dbg !8978, !llvm.loop !9001

41:                                               ; preds = %34
  %42 = icmp eq i32 %13, %37, !dbg !9003
  br i1 %42, label %58, label %43, !dbg !9005

43:                                               ; preds = %41
  %44 = icmp sgt i32 %36, 0, !dbg !9006
  %45 = zext i1 %44 to i32, !dbg !9008
  call void @llvm.dbg.value(metadata i32 %45, metadata !8971, metadata !DIExpression()), !dbg !8974
  %46 = sub nsw i32 %13, %37, !dbg !9009
  call void @llvm.dbg.value(metadata i32 %46, metadata !8965, metadata !DIExpression()), !dbg !8974
  %47 = mul nsw i32 %35, 100000, !dbg !9010
  call void @llvm.dbg.value(metadata i32 %47, metadata !8966, metadata !DIExpression()), !dbg !8974
  %48 = sdiv i32 %47, %46, !dbg !9011
  call void @llvm.dbg.value(metadata i32 %48, metadata !8967, metadata !DIExpression()), !dbg !8974
  %49 = sdiv i32 %48, 1000, !dbg !9012
  call void @llvm.dbg.value(metadata i32 %49, metadata !8968, metadata !DIExpression()), !dbg !8974
  %50 = mul nsw i32 %49, -1000, !dbg !9013
  %51 = add i32 %50, %48, !dbg !9014
  %52 = sdiv i32 %51, 10, !dbg !9015
  call void @llvm.dbg.value(metadata i32 %52, metadata !8969, metadata !DIExpression()), !dbg !8974
  %53 = mul nsw i32 %52, -10, !dbg !9016
  %54 = add i32 %53, %51, !dbg !9017
  call void @llvm.dbg.value(metadata i32 %54, metadata !8970, metadata !DIExpression()), !dbg !8974
  %55 = icmp sgt i32 %54, 4, !dbg !9018
  %56 = zext i1 %55 to i32, !dbg !9020
  %57 = add nsw i32 %52, %56, !dbg !9020
  br label %58, !dbg !9020

58:                                               ; preds = %1, %43, %41
  %59 = phi i32 [ %18, %41 ], [ %18, %43 ], [ 0, %1 ]
  %60 = phi i32 [ %13, %41 ], [ %13, %43 ], [ 0, %1 ]
  %61 = phi i32 [ %37, %41 ], [ %37, %43 ], [ 0, %1 ]
  %62 = phi i32 [ %36, %41 ], [ %36, %43 ], [ 0, %1 ]
  %63 = phi i32 [ %35, %41 ], [ %35, %43 ], [ 0, %1 ]
  %64 = phi i32 [ 0, %41 ], [ %49, %43 ], [ 0, %1 ], !dbg !9021
  %65 = phi i32 [ 0, %41 ], [ %57, %43 ], [ 0, %1 ], !dbg !9021
  %66 = phi i32 [ 2, %41 ], [ %45, %43 ], [ 2, %1 ], !dbg !9021
  call void @llvm.dbg.value(metadata i32 %66, metadata !8971, metadata !DIExpression()), !dbg !8974
  call void @llvm.dbg.value(metadata i32 %65, metadata !8969, metadata !DIExpression()), !dbg !8974
  call void @llvm.dbg.value(metadata i32 %64, metadata !8968, metadata !DIExpression()), !dbg !8974
  %67 = tail call fastcc i8* @TC_RESULT_TO_STR(i32 noundef %66) #24, !dbg !9022
  %68 = load i8*, i8** %2, align 4, !dbg !9022
  %69 = freeze i32 %59
  %70 = udiv i32 %69, 1000, !dbg !9022
  %71 = mul i32 %70, 1000
  %72 = sub i32 %69, %71
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([100 x i8], [100 x i8]* @.str.32.119, i32 0, i32 0), i8* noundef %67, i32 noundef %64, i32 noundef %65, i8* noundef %68, i32 noundef %63, i32 noundef %62, i32 noundef %61, i32 noundef %60, i32 noundef %70, i32 noundef %72) #25, !dbg !9022
  ret void, !dbg !9023
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__ztest_init_unit_test_result_for_suite(%struct.ztest_suite_node* nocapture noundef readonly %0) unnamed_addr #1 !dbg !9024 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !9026, metadata !DIExpression()), !dbg !9028
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !9027, metadata !DIExpression()), !dbg !9028
  %2 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !9027, metadata !DIExpression()), !dbg !9028
  %3 = load i8*, i8** %2, align 4, !dbg !9029
  %4 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %3, %struct.ztest_unit_test* noundef null) #24, !dbg !9030
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %4, metadata !9027, metadata !DIExpression()), !dbg !9028
  %5 = icmp eq %struct.ztest_unit_test* %4, null, !dbg !9031
  br i1 %5, label %22, label %6, !dbg !9032

6:                                                ; preds = %1, %6
  %7 = phi %struct.ztest_unit_test* [ %20, %6 ], [ %4, %1 ]
  %8 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %7, i32 0, i32 4, !dbg !9033
  %9 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !9033
  %10 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %9, i32 0, i32 0, !dbg !9035
  store i32 0, i32* %10, align 4, !dbg !9036
  %11 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !9037
  %12 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %11, i32 0, i32 1, !dbg !9038
  store i32 0, i32* %12, align 4, !dbg !9039
  %13 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !9040
  %14 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %13, i32 0, i32 2, !dbg !9041
  store i32 0, i32* %14, align 4, !dbg !9042
  %15 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !9043
  %16 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %15, i32 0, i32 3, !dbg !9044
  store i32 0, i32* %16, align 4, !dbg !9045
  %17 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !9046
  %18 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %17, i32 0, i32 4, !dbg !9047
  store i32 0, i32* %18, align 4, !dbg !9048
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %7, metadata !9027, metadata !DIExpression()), !dbg !9028
  %19 = load i8*, i8** %2, align 4, !dbg !9029
  %20 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %19, %struct.ztest_unit_test* noundef nonnull %7) #24, !dbg !9030
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %20, metadata !9027, metadata !DIExpression()), !dbg !9028
  %21 = icmp eq %struct.ztest_unit_test* %20, null, !dbg !9031
  br i1 %21, label %22, label %6, !dbg !9032, !llvm.loop !9049

22:                                               ; preds = %6, %1
  ret void, !dbg !9051
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_verify_all_test_suites_ran() local_unnamed_addr #1 !dbg !9052 {
  call void @llvm.dbg.value(metadata i8 1, metadata !9054, metadata !DIExpression()), !dbg !9057
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), metadata !9055, metadata !DIExpression()), !dbg !9057
  call void @llvm.dbg.value(metadata i8 poison, metadata !9054, metadata !DIExpression()), !dbg !9057
  br i1 icmp ult (%struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0)), label %3, label %1, !dbg !9058

1:                                                ; preds = %14, %0
  %2 = phi i1 [ true, %0 ], [ %15, %14 ]
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), metadata !9056, metadata !DIExpression()), !dbg !9057
  call void @llvm.dbg.value(metadata i8 poison, metadata !9054, metadata !DIExpression()), !dbg !9057
  br i1 icmp ult (%struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), %struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0)), label %18, label %33, !dbg !9062

3:                                                ; preds = %0, %14
  %4 = phi %struct.ztest_suite_node* [ %16, %14 ], [ getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %0 ]
  %5 = phi i1 [ %15, %14 ], [ true, %0 ]
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %4, metadata !9055, metadata !DIExpression()), !dbg !9057
  %6 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %4, i32 0, i32 6, !dbg !9064
  %7 = load %struct.ztest_suite_stats*, %struct.ztest_suite_stats** %6, align 4, !dbg !9064
  %8 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %7, i32 0, i32 0, !dbg !9068
  %9 = load i32, i32* %8, align 4, !dbg !9068
  %10 = icmp eq i32 %9, 0, !dbg !9069
  br i1 %10, label %11, label %14, !dbg !9070

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %4, i32 0, i32 0, !dbg !9071
  %13 = load i8*, i8** %12, align 4, !dbg !9071
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.7.120, i32 0, i32 0), i8* noundef %13) #25, !dbg !9073
  call void @llvm.dbg.value(metadata i8 0, metadata !9054, metadata !DIExpression()), !dbg !9057
  br label %14, !dbg !9074

14:                                               ; preds = %3, %11
  %15 = phi i1 [ false, %11 ], [ %5, %3 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !9054, metadata !DIExpression()), !dbg !9057
  %16 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %4, i32 1, !dbg !9075
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %16, metadata !9055, metadata !DIExpression()), !dbg !9057
  %17 = icmp ult %struct.ztest_suite_node* %16, getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0), !dbg !9076
  br i1 %17, label %3, label %1, !dbg !9058, !llvm.loop !9077

18:                                               ; preds = %1, %29
  %19 = phi %struct.ztest_unit_test* [ %31, %29 ], [ getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), %1 ]
  %20 = phi i1 [ %30, %29 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %19, metadata !9056, metadata !DIExpression()), !dbg !9057
  %21 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %19, i32 0, i32 0, !dbg !9079
  %22 = load i8*, i8** %21, align 4, !dbg !9079
  %23 = tail call fastcc %struct.ztest_suite_node* @ztest_find_test_suite(i8* noundef %22) #24, !dbg !9082
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %23, metadata !9055, metadata !DIExpression()), !dbg !9057
  %24 = icmp eq %struct.ztest_suite_node* %23, null, !dbg !9083
  br i1 %24, label %25, label %29, !dbg !9085

25:                                               ; preds = %18
  %26 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %19, i32 0, i32 1, !dbg !9086
  %27 = load i8*, i8** %26, align 4, !dbg !9086
  %28 = load i8*, i8** %21, align 4, !dbg !9088
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.8.121, i32 0, i32 0), i8* noundef %27, i8* noundef %28) #25, !dbg !9089
  call void @llvm.dbg.value(metadata i8 0, metadata !9054, metadata !DIExpression()), !dbg !9057
  br label %29, !dbg !9090

29:                                               ; preds = %18, %25
  %30 = phi i1 [ false, %25 ], [ %20, %18 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !9054, metadata !DIExpression()), !dbg !9057
  %31 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %19, i32 1, !dbg !9091
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %31, metadata !9056, metadata !DIExpression()), !dbg !9057
  %32 = icmp ult %struct.ztest_unit_test* %31, getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0), !dbg !9092
  br i1 %32, label %18, label %33, !dbg !9062, !llvm.loop !9093

33:                                               ; preds = %29, %1
  %34 = phi i1 [ %2, %1 ], [ %30, %29 ]
  br i1 %34, label %36, label %35, !dbg !9095

35:                                               ; preds = %33
  store i32 1, i32* @test_status, align 4, !dbg !9096
  br label %36, !dbg !9099

36:                                               ; preds = %35, %33
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), metadata !9056, metadata !DIExpression()), !dbg !9057
  br i1 icmp ult (%struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), %struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0)), label %37, label %60, !dbg !9100

37:                                               ; preds = %36, %57
  %38 = phi %struct.ztest_unit_test* [ %58, %57 ], [ getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), %36 ]
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %38, metadata !9056, metadata !DIExpression()), !dbg !9057
  %39 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %38, i32 0, i32 4, !dbg !9102
  %40 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %39, align 4, !dbg !9102
  %41 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %40, i32 0, i32 2, !dbg !9106
  %42 = load i32, i32* %41, align 4, !dbg !9106
  %43 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %40, i32 0, i32 3, !dbg !9107
  %44 = load i32, i32* %43, align 4, !dbg !9107
  %45 = add i32 %44, %42, !dbg !9108
  %46 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %40, i32 0, i32 1, !dbg !9109
  %47 = load i32, i32* %46, align 4, !dbg !9109
  %48 = add i32 %45, %47, !dbg !9110
  %49 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %40, i32 0, i32 0, !dbg !9111
  %50 = load i32, i32* %49, align 4, !dbg !9111
  %51 = icmp eq i32 %48, %50, !dbg !9112
  br i1 %51, label %57, label %52, !dbg !9113

52:                                               ; preds = %37
  %53 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %38, i32 0, i32 0, !dbg !9114
  %54 = load i8*, i8** %53, align 4, !dbg !9114
  %55 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %38, i32 0, i32 1, !dbg !9116
  %56 = load i8*, i8** %55, align 4, !dbg !9116
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.122, i32 0, i32 0), i8* noundef %54, i8* noundef %56) #25, !dbg !9117
  store i32 1, i32* @test_status, align 4, !dbg !9118
  br label %57, !dbg !9119

57:                                               ; preds = %37, %52
  %58 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %38, i32 1, !dbg !9120
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %58, metadata !9056, metadata !DIExpression()), !dbg !9057
  %59 = icmp ult %struct.ztest_unit_test* %58, getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0), !dbg !9121
  br i1 %59, label %37, label %60, !dbg !9100, !llvm.loop !9122

60:                                               ; preds = %57, %36
  ret void, !dbg !9124
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_run_all(i8* noundef %0) local_unnamed_addr #1 !dbg !9125 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9127, metadata !DIExpression()), !dbg !9128
  %2 = load void (i8*)*, void (i8*)** getelementptr inbounds (%struct.ztest_arch_api, %struct.ztest_arch_api* @ztest_api, i32 0, i32 0), align 4, !dbg !9129
  tail call void %2(i8* noundef %0) #25, !dbg !9130
  ret void, !dbg !9131
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @test_main() local_unnamed_addr #1 !dbg !9132 {
  tail call void @ztest_run_all(i8* noundef null) #24, !dbg !9133
  tail call void @ztest_verify_all_test_suites_ran() #24, !dbg !9134
  ret void, !dbg !9135
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !9136 {
  tail call void @test_main() #24, !dbg !9137
  tail call void @end_report() #24, !dbg !9138
  ret void, !dbg !9139
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ztest_run_all(i8* noundef %0) #1 !dbg !9140 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9142, metadata !DIExpression()), !dbg !9143
  tail call fastcc void @ztest_run_test_suites(i8* noundef %0) #24, !dbg !9144
  ret void, !dbg !9145
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_ztest_should_suite_run(i8* noundef %0, %struct.ztest_suite_node* nocapture noundef readonly %1) #1 !dbg !9146 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9148, metadata !DIExpression()), !dbg !9151
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %1, metadata !9149, metadata !DIExpression()), !dbg !9151
  call void @llvm.dbg.value(metadata i8 1, metadata !9150, metadata !DIExpression()), !dbg !9151
  %3 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %1, i32 0, i32 5, !dbg !9152
  %4 = load i1 (i8*)*, i1 (i8*)** %3, align 4, !dbg !9152
  %5 = icmp eq i1 (i8*)* %4, null, !dbg !9154
  br i1 %5, label %8, label %6, !dbg !9155

6:                                                ; preds = %2
  %7 = tail call zeroext i1 %4(i8* noundef %0) #25, !dbg !9156
  call void @llvm.dbg.value(metadata i1 %7, metadata !9150, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9151
  br label %8, !dbg !9158

8:                                                ; preds = %6, %2
  %9 = phi i1 [ %7, %6 ], [ true, %2 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !9150, metadata !DIExpression()), !dbg !9151
  ret i1 %9, !dbg !9159
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i1 @z_ztest_should_test_run(i8* nocapture readnone %0, i8* nocapture readnone %1) #2 !dbg !9160 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !9162, metadata !DIExpression()), !dbg !9164
  call void @llvm.dbg.value(metadata i8* undef, metadata !9163, metadata !DIExpression()), !dbg !9164
  ret i1 true, !dbg !9165
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ztest_run_test_suites(i8* noundef %0) unnamed_addr #1 !dbg !9166 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9169, metadata !DIExpression()), !dbg !9170
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9171, !srcloc !9173
  %2 = tail call i32 @z_impl_ztest_run_test_suites(i8* noundef %0) #25, !dbg !9174
  ret void, !dbg !9175
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i8* @ztest_relative_filename(i8* noundef readnone returned %0) local_unnamed_addr #2 !dbg !9176 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9180, metadata !DIExpression()), !dbg !9181
  ret i8* %0, !dbg !9182
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !9183 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9185, metadata !DIExpression()), !dbg !9186
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #24, !dbg !9187
  ret void, !dbg !9188
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !9189 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9193, metadata !DIExpression()), !dbg !9199
  call void @llvm.dbg.value(metadata i32 %1, metadata !9194, metadata !DIExpression()), !dbg !9199
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !9195, metadata !DIExpression()), !dbg !9199
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !9200
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !9200
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !9200
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !9196, metadata !DIExpression()), !dbg !9199
  call void @llvm.dbg.value(metadata i32 %0, metadata !9198, metadata !DIExpression()), !dbg !9199
  %7 = icmp slt i32 %0, %1, !dbg !9201
  br i1 %7, label %8, label %22, !dbg !9204

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9198, metadata !DIExpression()), !dbg !9199
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #24, !dbg !9205
  %11 = icmp eq i32 %10, 0, !dbg !9205
  br i1 %11, label %19, label %12, !dbg !9208

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #24, !dbg !9209
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !9211
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !9211
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !9213
  br i1 %15, label %19, label %16, !dbg !9214

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !9215
  %18 = load i8*, i8** %17, align 4, !dbg !9215
  tail call void %14(i32 noundef %9, i8* noundef %18) #25, !dbg !9216
  br label %19, !dbg !9217

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !9218
  call void @llvm.dbg.value(metadata i32 %20, metadata !9198, metadata !DIExpression()), !dbg !9199
  %21 = icmp eq i32 %20, %1, !dbg !9201
  br i1 %21, label %22, label %8, !dbg !9204, !llvm.loop !9219

22:                                               ; preds = %19, %3
  ret void, !dbg !9221
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #15 !dbg !9222 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9224, metadata !DIExpression()), !dbg !9225
  %2 = shl nuw i32 1, %0, !dbg !9226
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #24, !dbg !9229
  ret i32 %3, !dbg !9230
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #14 !dbg !9231 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9235, metadata !DIExpression()), !dbg !9236
  %2 = shl nuw i32 1, %0, !dbg !9237
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #24, !dbg !9240
  ret void, !dbg !9241
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #14 !dbg !9242 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9245, metadata !DIExpression()), !dbg !9246
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !9247
  ret void, !dbg !9248
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #15 !dbg !9249 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9251, metadata !DIExpression()), !dbg !9252
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !9253
  %3 = and i32 %2, %0, !dbg !9253
  %4 = icmp eq i32 %3, %0, !dbg !9254
  %5 = zext i1 %4 to i32, !dbg !9254
  ret i32 %5, !dbg !9255
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !9256 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9258, metadata !DIExpression()), !dbg !9259
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #24, !dbg !9260
  ret void, !dbg !9261
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !9262 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9264, metadata !DIExpression()), !dbg !9265
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #24, !dbg !9266
  ret void, !dbg !9267
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !9268 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9270, metadata !DIExpression()), !dbg !9271
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #24, !dbg !9272
  ret void, !dbg !9273
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !9274 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9276, metadata !DIExpression()), !dbg !9277
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #24, !dbg !9278
  ret void, !dbg !9279
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !9280 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9282, metadata !DIExpression()), !dbg !9283
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #24, !dbg !9284
  ret void, !dbg !9285
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !9286 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9288, metadata !DIExpression()), !dbg !9289
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #24, !dbg !9290
  ret void, !dbg !9291
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !9292 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9294, metadata !DIExpression()), !dbg !9295
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #24, !dbg !9296
  ret void, !dbg !9297
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !9298 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9300, metadata !DIExpression()), !dbg !9301
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #24, !dbg !9302
  ret void, !dbg !9303
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !9304 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9306, metadata !DIExpression()), !dbg !9307
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #24, !dbg !9308
  ret void, !dbg !9309
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !9310 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9312, metadata !DIExpression()), !dbg !9313
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #24, !dbg !9314
  ret void, !dbg !9315
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !9316 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9318, metadata !DIExpression()), !dbg !9319
  tail call fastcc void @__stm32_exti_connect_irqs() #24, !dbg !9320
  ret i32 0, !dbg !9321
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !896 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !900, metadata !DIExpression()), !dbg !9322
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #25, !dbg !9323
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #25, !dbg !9325
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #25, !dbg !9327
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #25, !dbg !9329
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #25, !dbg !9331
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #25, !dbg !9333
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #25, !dbg !9335
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #25, !dbg !9337
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #25, !dbg !9339
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #25, !dbg !9341
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #25, !dbg !9343
  ret void, !dbg !9345
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !9346 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9348, metadata !DIExpression()), !dbg !9350
  call void @llvm.dbg.value(metadata i32 0, metadata !9349, metadata !DIExpression()), !dbg !9350
  call void @llvm.dbg.value(metadata i32 undef, metadata !9349, metadata !DIExpression()), !dbg !9350
  %2 = lshr i32 6684671, %0, !dbg !9351
  %3 = and i32 %2, 1, !dbg !9351
  %4 = or i32 %3, %0, !dbg !9353
  %5 = icmp eq i32 %4, 0, !dbg !9353
  br i1 %5, label %6, label %7, !dbg !9353

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.127, i32 0, i32 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.128, i32 0, i32 0), i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.129, i32 0, i32 0), i32 noundef 123) #25, !dbg !9354
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.129, i32 0, i32 0), i32 noundef 123) #25, !dbg !9354
  unreachable, !dbg !9354

7:                                                ; preds = %1
  %8 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !9359
  %9 = load i32, i32* %8, align 4, !dbg !9359
  call void @llvm.dbg.value(metadata i32 %9, metadata !9349, metadata !DIExpression()), !dbg !9350
  %10 = shl nuw i32 1, %0, !dbg !9360
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %10) #24, !dbg !9361
  tail call void @arch_irq_enable(i32 noundef %9) #25, !dbg !9362
  ret void, !dbg !9363
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #14 !dbg !9364 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9366, metadata !DIExpression()), !dbg !9367
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9368
  %3 = or i32 %2, %0, !dbg !9368
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9368
  ret void, !dbg !9369
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #14 !dbg !9370 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9372, metadata !DIExpression()), !dbg !9373
  %2 = icmp slt i32 %0, 32, !dbg !9374
  br i1 %2, label %3, label %5, !dbg !9376

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !9377
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #24, !dbg !9379
  br label %5, !dbg !9380

5:                                                ; preds = %1, %3
  ret void, !dbg !9381
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #14 !dbg !9382 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9384, metadata !DIExpression()), !dbg !9385
  %2 = xor i32 %0, -1, !dbg !9386
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9386
  %4 = and i32 %3, %2, !dbg !9386
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9386
  ret void, !dbg !9387
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #14 !dbg !9388 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9392, metadata !DIExpression()), !dbg !9394
  call void @llvm.dbg.value(metadata i32 %1, metadata !9393, metadata !DIExpression()), !dbg !9394
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !9395

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !9396
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #24, !dbg !9398
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #24, !dbg !9399
  br label %11, !dbg !9400

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !9401
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #24, !dbg !9402
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #24, !dbg !9403
  br label %11, !dbg !9404

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !9405
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #24, !dbg !9406
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #24, !dbg !9407
  br label %11, !dbg !9408

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !9409
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #24, !dbg !9410
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #24, !dbg !9411
  br label %11, !dbg !9412

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !9413
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !9414 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9416, metadata !DIExpression()), !dbg !9417
  %2 = xor i32 %0, -1, !dbg !9418
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9418
  %4 = and i32 %3, %2, !dbg !9418
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9418
  ret void, !dbg !9419
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !9420 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9422, metadata !DIExpression()), !dbg !9423
  %2 = xor i32 %0, -1, !dbg !9424
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9424
  %4 = and i32 %3, %2, !dbg !9424
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9424
  ret void, !dbg !9425
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !9426 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9428, metadata !DIExpression()), !dbg !9429
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9430
  %3 = or i32 %2, %0, !dbg !9430
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9430
  ret void, !dbg !9431
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !9432 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9434, metadata !DIExpression()), !dbg !9435
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9436
  %3 = or i32 %2, %0, !dbg !9436
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9436
  ret void, !dbg !9437
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #9 !dbg !9438 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9442, metadata !DIExpression()), !dbg !9448
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !9443, metadata !DIExpression()), !dbg !9448
  call void @llvm.dbg.value(metadata i8* %2, metadata !9444, metadata !DIExpression()), !dbg !9448
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_36, metadata !9445, metadata !DIExpression()), !dbg !9448
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !9447, metadata !DIExpression()), !dbg !9448
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !9449
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !9449
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !9451
  br i1 %6, label %7, label %9, !dbg !9452

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !9453
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !9454
  store i8* %2, i8** %8, align 4, !dbg !9455
  br label %9, !dbg !9456

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !9448
  ret i32 %10, !dbg !9457
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #7 !dbg !9458 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9460, metadata !DIExpression()), !dbg !9463
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_36, metadata !9461, metadata !DIExpression()), !dbg !9463
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !9462, metadata !DIExpression()), !dbg !9463
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !9464
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !9465
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !9466
  store i8* null, i8** %3, align 4, !dbg !9467
  ret void, !dbg !9468
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #14 !dbg !9469 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9471, metadata !DIExpression()), !dbg !9476
  call void @llvm.dbg.value(metadata i8* %1, metadata !9472, metadata !DIExpression()), !dbg !9476
  call void @llvm.dbg.value(metadata i8* %1, metadata !9473, metadata !DIExpression()), !dbg !9476
  %3 = bitcast i8* %1 to i32*, !dbg !9477
  %4 = load i32, i32* %3, align 4, !dbg !9477
  %5 = add i32 %4, -169, !dbg !9477
  %6 = icmp ult i32 %5, -121, !dbg !9477
  br i1 %6, label %15, label %7, !dbg !9479

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !9480
  %9 = inttoptr i32 %8 to i32*, !dbg !9481
  call void @llvm.dbg.value(metadata i32* %9, metadata !9474, metadata !DIExpression()), !dbg !9476
  %10 = load volatile i32, i32* %9, align 4, !dbg !9482
  call void @llvm.dbg.value(metadata i32 %10, metadata !9475, metadata !DIExpression()), !dbg !9476
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9483
  %12 = bitcast i8* %11 to i32*, !dbg !9483
  %13 = load i32, i32* %12, align 4, !dbg !9483
  %14 = or i32 %13, %10, !dbg !9484
  call void @llvm.dbg.value(metadata i32 %14, metadata !9475, metadata !DIExpression()), !dbg !9476
  store volatile i32 %14, i32* %9, align 4, !dbg !9485
  br label %15, !dbg !9486

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !9476
  ret i32 %16, !dbg !9487
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #14 !dbg !9488 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9490, metadata !DIExpression()), !dbg !9495
  call void @llvm.dbg.value(metadata i8* %1, metadata !9491, metadata !DIExpression()), !dbg !9495
  call void @llvm.dbg.value(metadata i8* %1, metadata !9492, metadata !DIExpression()), !dbg !9495
  %3 = bitcast i8* %1 to i32*, !dbg !9496
  %4 = load i32, i32* %3, align 4, !dbg !9496
  %5 = add i32 %4, -169, !dbg !9496
  %6 = icmp ult i32 %5, -121, !dbg !9496
  br i1 %6, label %16, label %7, !dbg !9498

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !9499
  %9 = inttoptr i32 %8 to i32*, !dbg !9500
  call void @llvm.dbg.value(metadata i32* %9, metadata !9493, metadata !DIExpression()), !dbg !9495
  %10 = load volatile i32, i32* %9, align 4, !dbg !9501
  call void @llvm.dbg.value(metadata i32 %10, metadata !9494, metadata !DIExpression()), !dbg !9495
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9502
  %12 = bitcast i8* %11 to i32*, !dbg !9502
  %13 = load i32, i32* %12, align 4, !dbg !9502
  %14 = xor i32 %13, -1, !dbg !9503
  %15 = and i32 %10, %14, !dbg !9504
  call void @llvm.dbg.value(metadata i32 %15, metadata !9494, metadata !DIExpression()), !dbg !9495
  store volatile i32 %15, i32* %9, align 4, !dbg !9505
  br label %16, !dbg !9506

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !9495
  ret i32 %17, !dbg !9507
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !9508 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9510, metadata !DIExpression()), !dbg !9518
  call void @llvm.dbg.value(metadata i8* %1, metadata !9511, metadata !DIExpression()), !dbg !9518
  call void @llvm.dbg.value(metadata i32* %2, metadata !9512, metadata !DIExpression()), !dbg !9518
  call void @llvm.dbg.value(metadata i8* %1, metadata !9513, metadata !DIExpression()), !dbg !9518
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !9519
  call void @llvm.dbg.value(metadata i32 %4, metadata !9514, metadata !DIExpression()), !dbg !9518
  call void @llvm.dbg.value(metadata i32 undef, metadata !9515, metadata !DIExpression()), !dbg !9518
  call void @llvm.dbg.value(metadata i32 undef, metadata !9516, metadata !DIExpression()), !dbg !9518
  call void @llvm.dbg.value(metadata i32 %4, metadata !9517, metadata !DIExpression()), !dbg !9518
  %5 = bitcast i8* %1 to i32*, !dbg !9520
  %6 = load i32, i32* %5, align 4, !dbg !9520
  switch i32 %6, label %21 [
    i32 48, label %19
    i32 52, label %19
    i32 56, label %19
    i32 64, label %7
    i32 68, label %9
    i32 168, label %19
    i32 6, label %19
    i32 1, label %11
    i32 2, label %14
    i32 4, label %17
    i32 5, label %18
  ], !dbg !9521

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #24, !dbg !9522
  call void @llvm.dbg.value(metadata i32 %8, metadata !9515, metadata !DIExpression()), !dbg !9518
  br label %19, !dbg !9523

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 1) #24, !dbg !9525
  call void @llvm.dbg.value(metadata i32 %10, metadata !9516, metadata !DIExpression()), !dbg !9518
  br label %19, !dbg !9526

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #25, !dbg !9527
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12, i32 noundef 2) #24, !dbg !9528
  br label %19, !dbg !9529

14:                                               ; preds = %3
  %15 = tail call i32 @get_pllsrc_frequency() #25, !dbg !9530
  %16 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %15, i32 noundef 8) #24, !dbg !9531
  br label %19, !dbg !9532

17:                                               ; preds = %3
  br label %19, !dbg !9533

18:                                               ; preds = %3
  br label %19, !dbg !9534

19:                                               ; preds = %3, %3, %3, %3, %3, %18, %17, %14, %11, %9, %7
  %20 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ %16, %14 ], [ 0, %17 ], [ 32000, %18 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %20, i32* %2, align 4, !dbg !9535
  br label %21, !dbg !9536

21:                                               ; preds = %19, %3
  %22 = phi i32 [ -134, %3 ], [ 0, %19 ], !dbg !9518
  ret i32 %22, !dbg !9536
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #14 !dbg !9537 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9539, metadata !DIExpression()), !dbg !9547
  call void @llvm.dbg.value(metadata i8* %1, metadata !9540, metadata !DIExpression()), !dbg !9547
  call void @llvm.dbg.value(metadata i8* %2, metadata !9541, metadata !DIExpression()), !dbg !9547
  call void @llvm.dbg.value(metadata i8* %1, metadata !9542, metadata !DIExpression()), !dbg !9547
  %4 = bitcast i8* %1 to i32*, !dbg !9548
  %5 = load i32, i32* %4, align 4, !dbg !9548
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #24, !dbg !9549
  call void @llvm.dbg.value(metadata i32 %6, metadata !9546, metadata !DIExpression()), !dbg !9547
  %7 = icmp slt i32 %6, 0, !dbg !9550
  br i1 %7, label %22, label %8, !dbg !9552

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !9542, metadata !DIExpression()), !dbg !9547
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9553
  %10 = bitcast i8* %9 to i32*, !dbg !9553
  %11 = load i32, i32* %10, align 4, !dbg !9553
  %12 = lshr i32 %11, 16, !dbg !9553
  %13 = and i32 %12, 7, !dbg !9553
  %14 = lshr i32 %11, 8, !dbg !9554
  %15 = and i32 %14, 31, !dbg !9554
  %16 = shl i32 %13, %15, !dbg !9555
  call void @llvm.dbg.value(metadata i32 %16, metadata !9545, metadata !DIExpression()), !dbg !9547
  %17 = and i32 %11, 255, !dbg !9556
  %18 = or i32 %17, 1073887232, !dbg !9557
  %19 = inttoptr i32 %18 to i32*, !dbg !9558
  call void @llvm.dbg.value(metadata i32* %19, metadata !9543, metadata !DIExpression()), !dbg !9547
  %20 = load volatile i32, i32* %19, align 4, !dbg !9559
  call void @llvm.dbg.value(metadata i32 %20, metadata !9544, metadata !DIExpression()), !dbg !9547
  %21 = or i32 %16, %20, !dbg !9560
  call void @llvm.dbg.value(metadata i32 %21, metadata !9544, metadata !DIExpression()), !dbg !9547
  store volatile i32 %21, i32* %19, align 4, !dbg !9561
  br label %22, !dbg !9562

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !9547
  ret i32 %23, !dbg !9563
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #2 !dbg !9564 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9568, metadata !DIExpression()), !dbg !9570
  call void @llvm.dbg.value(metadata i32 0, metadata !9569, metadata !DIExpression()), !dbg !9570
  %2 = add i32 %0, -1, !dbg !9571
  %3 = icmp ult i32 %2, 6, !dbg !9571
  br i1 %3, label %4, label %7, !dbg !9571

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !9571
  %6 = load i32, i32* %5, align 4, !dbg !9571
  call void @llvm.dbg.value(metadata i32 %6, metadata !9569, metadata !DIExpression()), !dbg !9570
  br label %7, !dbg !9572

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !9570
  ret i32 %8, !dbg !9573
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #2 !dbg !9574 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9578, metadata !DIExpression()), !dbg !9580
  call void @llvm.dbg.value(metadata i32 %1, metadata !9579, metadata !DIExpression()), !dbg !9580
  %3 = udiv i32 %0, %1, !dbg !9581
  ret i32 %3, !dbg !9582
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #2 !dbg !9583 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9587, metadata !DIExpression()), !dbg !9591
  call void @llvm.dbg.value(metadata i32 8, metadata !9588, metadata !DIExpression()), !dbg !9591
  call void @llvm.dbg.value(metadata i32 84, metadata !9589, metadata !DIExpression()), !dbg !9591
  call void @llvm.dbg.value(metadata i32 %1, metadata !9590, metadata !DIExpression()), !dbg !9591
  %3 = mul i32 %0, 84, !dbg !9592
  %4 = shl nsw i32 %1, 3, !dbg !9593
  %5 = udiv i32 %3, %4, !dbg !9594
  ret i32 %5, !dbg !9595
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !9596 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !9598, metadata !DIExpression()), !dbg !9601
  tail call void @config_enable_default_clocks() #25, !dbg !9602
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #25, !dbg !9603
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #24, !dbg !9603
  %4 = lshr i32 %3, 4, !dbg !9603
  %5 = and i32 %4, 15, !dbg !9603
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !9603
  %7 = load i8, i8* %6, align 1, !dbg !9603
  %8 = zext i8 %7 to i32, !dbg !9603
  %9 = lshr i32 %2, %8, !dbg !9603
  call void @llvm.dbg.value(metadata i32 %9, metadata !9599, metadata !DIExpression()), !dbg !9601
  call void @llvm.dbg.value(metadata !DIArgList(i32 84000000, i8 undef), metadata !9600, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !9601
  %10 = icmp ult i32 %9, 84000000, !dbg !9604
  br i1 %10, label %11, label %13, !dbg !9606

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #25, !dbg !9607
  br label %13, !dbg !9609

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #24, !dbg !9610
  tail call fastcc void @set_up_plls() #24, !dbg !9611
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !9612
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #24, !dbg !9615
  br label %14, !dbg !9616

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !9617
  %16 = icmp eq i32 %15, 8, !dbg !9618
  br i1 %16, label %17, label %14, !dbg !9616, !llvm.loop !9619

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 83999999, !dbg !9621
  br i1 %18, label %19, label %21, !dbg !9623

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #25, !dbg !9624
  br label %21, !dbg !9626

21:                                               ; preds = %19, %17
  store i32 84000000, i32* @SystemCoreClock, align 4, !dbg !9627
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #24, !dbg !9628
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #24, !dbg !9629
  ret i32 0, !dbg !9630
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #15 !dbg !9631 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9633
  %2 = and i32 %1, 240, !dbg !9633
  ret i32 %2, !dbg !9634
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #14 !dbg !9635 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #24, !dbg !9636
  tail call fastcc void @LL_RCC_HSE_Enable() #24, !dbg !9641
  br label %1, !dbg !9642

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #24, !dbg !9643
  %3 = icmp eq i32 %2, 1, !dbg !9644
  br i1 %3, label %4, label %1, !dbg !9642, !llvm.loop !9645

4:                                                ; preds = %1
  tail call fastcc void @LL_RCC_LSI_Enable() #24, !dbg !9647
  br label %5, !dbg !9650

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #24, !dbg !9651
  %7 = icmp eq i32 %6, 1, !dbg !9652
  br i1 %7, label %8, label %5, !dbg !9650, !llvm.loop !9653

8:                                                ; preds = %5
  ret void, !dbg !9655
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !9656 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !9657
  %2 = icmp eq i32 %1, 8, !dbg !9659
  br i1 %2, label %3, label %4, !dbg !9660

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !9661
  tail call fastcc void @stm32_clock_switch_to_hsi() #24, !dbg !9663
  br label %4, !dbg !9664

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #24, !dbg !9665
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9666
  %6 = and i32 %5, -196609, !dbg !9666
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9666
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9667
  %8 = and i32 %7, -251658241, !dbg !9667
  %9 = or i32 %8, 134217728, !dbg !9667
  store volatile i32 %9, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9667
  tail call void @config_pll_sysclock() #25, !dbg !9668
  tail call fastcc void @LL_RCC_PLL_Enable() #24, !dbg !9669
  br label %10, !dbg !9670

10:                                               ; preds = %10, %4
  %11 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #24, !dbg !9671
  %12 = icmp eq i32 %11, 1, !dbg !9672
  br i1 %12, label %13, label %10, !dbg !9670, !llvm.loop !9673

13:                                               ; preds = %10
  ret void, !dbg !9675
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #14 !dbg !9676 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9678, metadata !DIExpression()), !dbg !9679
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9680
  %2 = and i32 %1, -241, !dbg !9680
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9680
  ret void, !dbg !9681
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #14 !dbg !9682 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9684, metadata !DIExpression()), !dbg !9685
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9686
  %3 = and i32 %2, -4, !dbg !9686
  %4 = or i32 %3, %0, !dbg !9686
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9686
  ret void, !dbg !9687
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #15 !dbg !9688 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9689
  %2 = and i32 %1, 12, !dbg !9689
  ret i32 %2, !dbg !9690
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #14 !dbg !9691 {
  call void @llvm.dbg.value(metadata i32 4096, metadata !9693, metadata !DIExpression()), !dbg !9694
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9695
  %2 = and i32 %1, -7169, !dbg !9695
  %3 = or i32 %2, 4096, !dbg !9695
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9695
  ret void, !dbg !9696
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #14 !dbg !9697 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9699, metadata !DIExpression()), !dbg !9700
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9701
  %2 = and i32 %1, -57345, !dbg !9701
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9701
  ret void, !dbg !9702
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #14 !dbg !9703 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !9704
  %2 = icmp eq i32 %1, 1, !dbg !9706
  br i1 %2, label %7, label %3, !dbg !9707

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #24, !dbg !9708
  br label %4, !dbg !9710

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !9711
  %6 = icmp eq i32 %5, 1, !dbg !9712
  br i1 %6, label %7, label %4, !dbg !9710, !llvm.loop !9713

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #24, !dbg !9715
  br label %8, !dbg !9716

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !9717
  %10 = icmp eq i32 %9, 0, !dbg !9718
  br i1 %10, label %11, label %8, !dbg !9716, !llvm.loop !9719

11:                                               ; preds = %8
  ret void, !dbg !9721
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #14 !dbg !9722 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9723
  %2 = and i32 %1, -16777217, !dbg !9723
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9723
  ret void, !dbg !9724
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #14 !dbg !9725 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9726
  %2 = or i32 %1, 16777216, !dbg !9726
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9726
  ret void, !dbg !9727
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #15 !dbg !9728 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9729
  %2 = lshr i32 %1, 25, !dbg !9730
  %3 = and i32 %2, 1, !dbg !9730
  ret i32 %3, !dbg !9731
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #15 !dbg !9732 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9733
  %2 = lshr i32 %1, 1, !dbg !9734
  %3 = and i32 %2, 1, !dbg !9734
  ret i32 %3, !dbg !9735
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #14 !dbg !9736 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9737
  %2 = or i32 %1, 1, !dbg !9737
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9737
  ret void, !dbg !9738
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #14 !dbg !9739 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9740
  %2 = and i32 %1, -262145, !dbg !9740
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9740
  ret void, !dbg !9741
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #14 !dbg !9742 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9743
  %2 = or i32 %1, 65536, !dbg !9743
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9743
  ret void, !dbg !9744
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #15 !dbg !9745 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9746
  %2 = lshr i32 %1, 17, !dbg !9747
  %3 = and i32 %2, 1, !dbg !9747
  ret i32 %3, !dbg !9748
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #14 !dbg !9749 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !9750
  %2 = or i32 %1, 1, !dbg !9750
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !9750
  ret void, !dbg !9751
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #15 !dbg !9752 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !9753
  %2 = lshr i32 %1, 1, !dbg !9754
  %3 = and i32 %2, 1, !dbg !9754
  ret i32 %3, !dbg !9755
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #2 !dbg !9756 {
  ret i32 16000000, !dbg !9758
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #14 !dbg !9762 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #24, !dbg !9763
  ret void, !dbg !9764
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #14 !dbg !9765 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !9769, metadata !DIExpression()), !dbg !9773
  call void @llvm.dbg.value(metadata i32 8, metadata !9770, metadata !DIExpression()), !dbg !9773
  call void @llvm.dbg.value(metadata i32 84, metadata !9771, metadata !DIExpression()), !dbg !9773
  call void @llvm.dbg.value(metadata i32 0, metadata !9772, metadata !DIExpression()), !dbg !9773
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9774
  %2 = and i32 %1, -4227072, !dbg !9774
  %3 = or i32 %2, 4199688, !dbg !9774
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9774
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9775
  %5 = and i32 %4, -196609, !dbg !9775
  store volatile i32 %5, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9775
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9776
  %7 = and i32 %6, -1879048193, !dbg !9776
  store volatile i32 %7, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9776
  ret void, !dbg !9777
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #19 !dbg !9778 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #24, !dbg !9779
  ret void, !dbg !9780
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #19 !dbg !9781 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !9784, metadata !DIExpression()), !dbg !9786
  %2 = bitcast i32* %1 to i8*, !dbg !9787
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !9787
  call void @llvm.dbg.declare(metadata i32* %1, metadata !9785, metadata !DIExpression()), !dbg !9788
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9789
  %4 = or i32 %3, 268435456, !dbg !9789
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9789
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9790
  %6 = and i32 %5, 268435456, !dbg !9790
  store volatile i32 %6, i32* %1, align 4, !dbg !9791
  %7 = load volatile i32, i32* %1, align 4, !dbg !9792
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !9793
  ret void, !dbg !9793
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !9794 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9796, metadata !DIExpression()), !dbg !9797
  %2 = tail call fastcc zeroext i1 @device_is_ready() #24, !dbg !9798
  br i1 %2, label %3, label %4, !dbg !9800

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #24, !dbg !9801
  br label %4, !dbg !9802

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !9797
  ret i32 %5, !dbg !9803
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !9804 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !9809, metadata !DIExpression()), !dbg !9810
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9811, !srcloc !9813
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #24, !dbg !9814
  ret i1 %1, !dbg !9815
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !9816 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !9817
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !9818
  ret void, !dbg !9819
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !9820 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9822, metadata !DIExpression()), !dbg !9823
  %2 = icmp eq i32 %0, 10, !dbg !9824
  br i1 %2, label %3, label %4, !dbg !9826

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #24, !dbg !9827
  br label %4, !dbg !9829

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !9830
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #24, !dbg !9831
  ret i32 %0, !dbg !9832
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !9833 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !9836, metadata !DIExpression()), !dbg !9838
  call void @llvm.dbg.value(metadata i8 %0, metadata !9837, metadata !DIExpression()), !dbg !9838
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9839, !srcloc !9841
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #24, !dbg !9842
  ret void, !dbg !9843
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !9844 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !9846, metadata !DIExpression()), !dbg !9849
  call void @llvm.dbg.value(metadata i8 %0, metadata !9847, metadata !DIExpression()), !dbg !9849
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_48, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9850
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !9848, metadata !DIExpression()), !dbg !9849
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !9851
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !9851
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_48, i8 noundef zeroext %0) #25, !dbg !9852
  ret void, !dbg !9853
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !9854 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !9856, metadata !DIExpression()), !dbg !9857
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_48) #25, !dbg !9858
  ret i1 %1, !dbg !9859
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #2 !dbg !9860 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !9909, metadata !DIExpression()), !dbg !9912
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !9910, metadata !DIExpression()), !dbg !9912
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !9911, metadata !DIExpression()), !dbg !9912
  ret void, !dbg !9913
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !9914 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9916, metadata !DIExpression()), !dbg !9921
  call void @llvm.dbg.value(metadata i8 %1, metadata !9917, metadata !DIExpression()), !dbg !9921
  call void @llvm.dbg.value(metadata i32 %2, metadata !9918, metadata !DIExpression()), !dbg !9921
  %5 = bitcast i32* %4 to i8*, !dbg !9922
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9922
  call void @llvm.dbg.value(metadata i32* %4, metadata !9920, metadata !DIExpression(DW_OP_deref)), !dbg !9921
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #24, !dbg !9923
  call void @llvm.dbg.value(metadata i32 %6, metadata !9919, metadata !DIExpression()), !dbg !9921
  %7 = icmp eq i32 %6, 0, !dbg !9924
  br i1 %7, label %8, label %31, !dbg !9926

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !9919, metadata !DIExpression()), !dbg !9921
  %9 = and i32 %2, 131072, !dbg !9927
  %10 = icmp eq i32 %9, 0, !dbg !9929
  br i1 %10, label %28, label %11, !dbg !9930

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !9931
  %13 = icmp eq i32 %12, 0, !dbg !9934
  br i1 %13, label %18, label %14, !dbg !9935

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !9936
  %16 = shl nuw i32 1, %15, !dbg !9936
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #24, !dbg !9938
  br label %25, !dbg !9939

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !9940
  %20 = icmp eq i32 %19, 0, !dbg !9942
  %21 = zext i8 %1 to i32, !dbg !9921
  br i1 %20, label %25, label %22, !dbg !9943

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !9944
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #24, !dbg !9946
  br label %25, !dbg !9947

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !9948
  %27 = load i32, i32* %4, align 4, !dbg !9949
  call void @llvm.dbg.value(metadata i32 %30, metadata !9920, metadata !DIExpression()), !dbg !9921
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #24, !dbg !9950
  br label %31, !dbg !9951

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !9948
  %30 = load i32, i32* %4, align 4, !dbg !9949
  call void @llvm.dbg.value(metadata i32 %30, metadata !9920, metadata !DIExpression()), !dbg !9921
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #24, !dbg !9950
  call void @llvm.dbg.value(metadata i32 0, metadata !9919, metadata !DIExpression()), !dbg !9921
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9952
  ret i32 %6, !dbg !9952
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #15 !dbg !9953 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9957, metadata !DIExpression()), !dbg !9962
  call void @llvm.dbg.value(metadata i32* %1, metadata !9958, metadata !DIExpression()), !dbg !9962
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9963
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9963
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9963
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9959, metadata !DIExpression()), !dbg !9962
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9964
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9964
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9964
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9961, metadata !DIExpression()), !dbg !9962
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #24, !dbg !9965
  store i32 %9, i32* %1, align 4, !dbg !9966
  ret i32 0, !dbg !9967
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #14 !dbg !9968 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9970, metadata !DIExpression()), !dbg !9976
  call void @llvm.dbg.value(metadata i32 %1, metadata !9971, metadata !DIExpression()), !dbg !9976
  call void @llvm.dbg.value(metadata i32 %2, metadata !9972, metadata !DIExpression()), !dbg !9976
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9977
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !9977
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !9977
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !9973, metadata !DIExpression()), !dbg !9976
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !9978
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !9978
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !9978
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !9974, metadata !DIExpression()), !dbg !9976
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #24, !dbg !9979
  call void @llvm.dbg.value(metadata i32 %10, metadata !9975, metadata !DIExpression()), !dbg !9976
  %11 = xor i32 %1, -1, !dbg !9980
  %12 = and i32 %10, %11, !dbg !9981
  %13 = and i32 %2, %1, !dbg !9982
  %14 = or i32 %12, %13, !dbg !9983
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #24, !dbg !9984
  ret i32 0, !dbg !9985
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !9986 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9988, metadata !DIExpression()), !dbg !9992
  call void @llvm.dbg.value(metadata i32 %1, metadata !9989, metadata !DIExpression()), !dbg !9992
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9993
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9993
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9993
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9990, metadata !DIExpression()), !dbg !9992
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9994
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9994
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9994
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9991, metadata !DIExpression()), !dbg !9992
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !9995
  store volatile i32 %1, i32* %9, align 4, !dbg !9995
  ret i32 0, !dbg !9996
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !9997 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9999, metadata !DIExpression()), !dbg !10003
  call void @llvm.dbg.value(metadata i32 %1, metadata !10000, metadata !DIExpression()), !dbg !10003
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10004
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10004
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10004
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10001, metadata !DIExpression()), !dbg !10003
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10005
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10005
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10005
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10002, metadata !DIExpression()), !dbg !10003
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #24, !dbg !10006
  ret i32 0, !dbg !10007
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !10008 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10010, metadata !DIExpression()), !dbg !10014
  call void @llvm.dbg.value(metadata i32 %1, metadata !10011, metadata !DIExpression()), !dbg !10014
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10015
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10015
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10015
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10012, metadata !DIExpression()), !dbg !10014
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10016
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10016
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10016
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10013, metadata !DIExpression()), !dbg !10014
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !10017
  %10 = load volatile i32, i32* %9, align 4, !dbg !10017
  %11 = xor i32 %10, %1, !dbg !10017
  store volatile i32 %11, i32* %9, align 4, !dbg !10017
  ret i32 0, !dbg !10018
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !10019 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10021, metadata !DIExpression()), !dbg !10031
  call void @llvm.dbg.value(metadata i8 %1, metadata !10022, metadata !DIExpression()), !dbg !10031
  call void @llvm.dbg.value(metadata i32 %2, metadata !10023, metadata !DIExpression()), !dbg !10031
  call void @llvm.dbg.value(metadata i32 %3, metadata !10024, metadata !DIExpression()), !dbg !10031
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10032
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !10032
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !10032
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !10025, metadata !DIExpression()), !dbg !10031
  call void @llvm.dbg.value(metadata i8* undef, metadata !10026, metadata !DIExpression()), !dbg !10031
  call void @llvm.dbg.value(metadata i32 0, metadata !10028, metadata !DIExpression()), !dbg !10031
  call void @llvm.dbg.value(metadata i32 0, metadata !10029, metadata !DIExpression()), !dbg !10031
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !10033

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !10034
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #24, !dbg !10038
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !10039
  %12 = load i32, i32* %11, align 4, !dbg !10039
  %13 = icmp eq i32 %10, %12, !dbg !10040
  br i1 %13, label %14, label %29, !dbg !10041

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #25, !dbg !10042
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #25, !dbg !10044
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #25, !dbg !10045
  br label %29, !dbg !10046

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10047
  %17 = load i8*, i8** %16, align 4, !dbg !10047
  call void @llvm.dbg.value(metadata i8* %17, metadata !10026, metadata !DIExpression()), !dbg !10031
  %18 = zext i8 %1 to i32, !dbg !10048
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #25, !dbg !10050
  %20 = icmp eq i32 %19, 0, !dbg !10051
  br i1 %20, label %21, label %29, !dbg !10052

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !10053
  %23 = load i32, i32* %22, align 4, !dbg !10053
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #24, !dbg !10054
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !10055

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !10028, metadata !DIExpression()), !dbg !10031
  br label %27, !dbg !10056

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !10028, metadata !DIExpression()), !dbg !10031
  br label %27, !dbg !10058

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !10028, metadata !DIExpression()), !dbg !10031
  br label %27, !dbg !10059

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !10031
  call void @llvm.dbg.value(metadata i32 %28, metadata !10028, metadata !DIExpression()), !dbg !10031
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #25, !dbg !10060
  tail call void @stm32_exti_enable(i32 noundef %18) #25, !dbg !10061
  br label %29, !dbg !10061

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !10031
  call void @llvm.dbg.value(metadata i32 %30, metadata !10029, metadata !DIExpression()), !dbg !10031
  call void @llvm.dbg.label(metadata !10030), !dbg !10062
  ret i32 %30, !dbg !10063
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #1 !dbg !10064 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10066, metadata !DIExpression()), !dbg !10070
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !10067, metadata !DIExpression()), !dbg !10070
  call void @llvm.dbg.value(metadata i1 %2, metadata !10068, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10070
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10071
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !10071
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !10071
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !10069, metadata !DIExpression()), !dbg !10070
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !10072
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #24, !dbg !10073
  ret i32 %8, !dbg !10074
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #1 !dbg !10075 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10081, metadata !DIExpression()), !dbg !10084
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !10082, metadata !DIExpression()), !dbg !10084
  call void @llvm.dbg.value(metadata i1 %2, metadata !10083, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10084
  %4 = icmp eq %struct.gpio_callback* %1, null, !dbg !10085
  br i1 %4, label %5, label %6, !dbg !10088

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.140, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.34.141, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.142, i32 0, i32 0), i32 noundef 42) #25, !dbg !10089
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35.143, i32 0, i32 0)) #25, !dbg !10089
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.142, i32 0, i32 0), i32 noundef 42) #25, !dbg !10089
  unreachable, !dbg !10089

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 1, !dbg !10091
  %8 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %7, align 4, !dbg !10091
  %9 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %8, null, !dbg !10091
  br i1 %9, label %10, label %11, !dbg !10094

10:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.140, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.36.144, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.142, i32 0, i32 0), i32 noundef 43) #25, !dbg !10095
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33.145, i32 0, i32 0)) #25, !dbg !10095
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.142, i32 0, i32 0), i32 noundef 43) #25, !dbg !10095
  unreachable, !dbg !10095

11:                                               ; preds = %6
  %12 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #24, !dbg !10097
  br i1 %12, label %18, label %13, !dbg !10099

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !10100
  %15 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef nonnull %14) #24, !dbg !10103
  %16 = or i1 %15, %2, !dbg !10104
  %17 = select i1 %16, i32 0, i32 -22, !dbg !10104
  br i1 %2, label %19, label %21, !dbg !10104

18:                                               ; preds = %11
  br i1 %2, label %19, label %21, !dbg !10105

19:                                               ; preds = %18, %13
  %20 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !10106
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef nonnull %20) #24, !dbg !10109
  br label %21, !dbg !10110

21:                                               ; preds = %13, %19, %18
  %22 = phi i32 [ %17, %13 ], [ -22, %18 ], [ 0, %19 ], !dbg !10084
  ret i32 %22, !dbg !10111
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !10112 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10116, metadata !DIExpression()), !dbg !10117
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10118
  %3 = icmp eq %struct._snode* %2, null, !dbg !10118
  ret i1 %3, !dbg !10118
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #13 !dbg !10119 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10123, metadata !DIExpression()), !dbg !10127
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10124, metadata !DIExpression()), !dbg !10127
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10125, metadata !DIExpression()), !dbg !10127
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10128
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10126, metadata !DIExpression()), !dbg !10127
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10125, metadata !DIExpression()), !dbg !10127
  %4 = icmp eq %struct._snode* %3, null, !dbg !10130
  br i1 %4, label %15, label %5, !dbg !10128

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10126, metadata !DIExpression()), !dbg !10127
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10125, metadata !DIExpression()), !dbg !10127
  %6 = icmp eq %struct._snode* %3, %1, !dbg !10132
  br i1 %6, label %9, label %11, !dbg !10135

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10126, metadata !DIExpression()), !dbg !10127
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10125, metadata !DIExpression()), !dbg !10127
  %8 = icmp eq %struct._snode* %13, %1, !dbg !10132
  br i1 %8, label %9, label %11, !dbg !10135, !llvm.loop !10136

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #24, !dbg !10137
  br label %15, !dbg !10137

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10126, metadata !DIExpression()), !dbg !10127
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10125, metadata !DIExpression()), !dbg !10127
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #24, !dbg !10130
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10126, metadata !DIExpression()), !dbg !10127
  %14 = icmp eq %struct._snode* %13, null, !dbg !10130
  br i1 %14, label %15, label %7, !dbg !10128, !llvm.loop !10136

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !10139
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !10140 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10144, metadata !DIExpression()), !dbg !10146
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10145, metadata !DIExpression()), !dbg !10146
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10147
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #24, !dbg !10147
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #24, !dbg !10147
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !10148
  %5 = icmp eq %struct._snode* %4, null, !dbg !10148
  br i1 %5, label %6, label %8, !dbg !10147

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10150
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #24, !dbg !10150
  br label %8, !dbg !10150

8:                                                ; preds = %6, %2
  ret void, !dbg !10147
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !10152 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10156, metadata !DIExpression()), !dbg !10157
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10158
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10158
  ret %struct._snode* %3, !dbg !10159
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !10160 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10164, metadata !DIExpression()), !dbg !10166
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10165, metadata !DIExpression()), !dbg !10166
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10167
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10168
  ret void, !dbg !10169
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !10170 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10172, metadata !DIExpression()), !dbg !10174
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10173, metadata !DIExpression()), !dbg !10174
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10175
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10176
  ret void, !dbg !10177
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !10178 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10180, metadata !DIExpression()), !dbg !10181
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10182
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10182
  ret %struct._snode* %3, !dbg !10183
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !10184 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10186, metadata !DIExpression()), !dbg !10188
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10187, metadata !DIExpression()), !dbg !10188
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10189
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10190
  ret void, !dbg !10191
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #9 !dbg !10192 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10196, metadata !DIExpression()), !dbg !10199
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10197, metadata !DIExpression()), !dbg !10199
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !10198, metadata !DIExpression()), !dbg !10199
  %4 = icmp eq %struct._snode* %1, null, !dbg !10200
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #24, !dbg !10202
  br i1 %4, label %6, label %11, !dbg !10203

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #24, !dbg !10204
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !10206
  %8 = icmp eq %struct._snode* %7, %2, !dbg !10206
  br i1 %8, label %9, label %15, !dbg !10204

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10208
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #24, !dbg !10208
  br label %15, !dbg !10208

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #24, !dbg !10210
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !10212
  %13 = icmp eq %struct._snode* %12, %2, !dbg !10212
  br i1 %13, label %14, label %15, !dbg !10210

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #24, !dbg !10214
  br label %15, !dbg !10214

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #24, !dbg !10203
  ret void, !dbg !10203
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #8 !dbg !10216 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10220, metadata !DIExpression()), !dbg !10221
  %2 = icmp eq %struct._snode* %0, null, !dbg !10222
  br i1 %2, label %5, label %3, !dbg !10222

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #24, !dbg !10222
  br label %5, !dbg !10222

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !10222
  ret %struct._snode* %6, !dbg !10222
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !10223 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10225, metadata !DIExpression()), !dbg !10226
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #24, !dbg !10227
  ret %struct._snode* %2, !dbg !10227
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !10228 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10230, metadata !DIExpression()), !dbg !10231
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10232
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10232
  ret %struct._snode* %3, !dbg !10233
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !10234 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10236, metadata !DIExpression()), !dbg !10239
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #24, !dbg !10240, !range !10241
  call void @llvm.dbg.value(metadata i32 %2, metadata !10237, metadata !DIExpression()), !dbg !10239
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #24, !dbg !10242
  call void @llvm.dbg.value(metadata i32 %3, metadata !10238, metadata !DIExpression()), !dbg !10239
  ret i32 %3, !dbg !10243
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !10244 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10246, metadata !DIExpression()), !dbg !10249
  call void @llvm.dbg.value(metadata i8* %1, metadata !10247, metadata !DIExpression()), !dbg !10249
  call void @llvm.dbg.value(metadata i8* %1, metadata !10248, metadata !DIExpression()), !dbg !10249
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !10250
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !10250
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10251
  %6 = bitcast i8* %5 to %struct.device**, !dbg !10251
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !10251
  %8 = shl nuw i32 1, %0, !dbg !10252
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #24, !dbg !10253
  ret void, !dbg !10254
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10255 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !10259, metadata !DIExpression()), !dbg !10265
  call void @llvm.dbg.value(metadata i32 %1, metadata !10260, metadata !DIExpression()), !dbg !10265
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10261, metadata !DIExpression()), !dbg !10265
  %4 = bitcast i64* %3 to i8*, !dbg !10266
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #23, !dbg !10266
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !10263, metadata !DIExpression()), !dbg !10265
  store i64 70368744177732, i64* %3, align 8, !dbg !10267
  call void @llvm.dbg.value(metadata i64* %3, metadata !10263, metadata !DIExpression(DW_OP_deref)), !dbg !10265
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #24, !dbg !10268
  call void @llvm.dbg.value(metadata i32 %5, metadata !10264, metadata !DIExpression()), !dbg !10265
  %6 = icmp eq i32 %5, 0, !dbg !10269
  br i1 %6, label %7, label %8, !dbg !10271

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #24, !dbg !10272
  br label %8, !dbg !10273

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #23, !dbg !10274
  ret void, !dbg !10274
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !10275 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10277, metadata !DIExpression()), !dbg !10280
  call void @llvm.dbg.value(metadata i8* %0, metadata !10278, metadata !DIExpression()), !dbg !10280
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_8, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !10281
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !10279, metadata !DIExpression()), !dbg !10280
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !10282
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !10282
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_8, i8* noundef %0) #25, !dbg !10283
  ret i32 %5, !dbg !10284
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10285 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10287, metadata !DIExpression()), !dbg !10290
  call void @llvm.dbg.value(metadata i32 %1, metadata !10288, metadata !DIExpression()), !dbg !10290
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #24, !dbg !10291
  call void @llvm.dbg.value(metadata i32 %3, metadata !10289, metadata !DIExpression()), !dbg !10290
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #24, !dbg !10292
  ret void, !dbg !10293
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #2 !dbg !10294 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10298, metadata !DIExpression()), !dbg !10299
  %2 = sdiv i32 %0, 4, !dbg !10300
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !10301
  %6 = add nsw i32 %5, 16, !dbg !10302
  %7 = shl i32 15, %6, !dbg !10303
  %8 = or i32 %7, %2, !dbg !10304
  ret i32 %8, !dbg !10305
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10306 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10310, metadata !DIExpression()), !dbg !10312
  call void @llvm.dbg.value(metadata i32 %1, metadata !10311, metadata !DIExpression()), !dbg !10312
  %3 = and i32 %1, 255, !dbg !10313
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !10313
  %5 = load volatile i32, i32* %4, align 4, !dbg !10313
  %6 = lshr i32 %1, 16, !dbg !10313
  %7 = xor i32 %6, -1, !dbg !10313
  %8 = and i32 %5, %7, !dbg !10313
  call void @llvm.dbg.value(metadata i32 %6, metadata !10314, metadata !DIExpression()) #23, !dbg !10318
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !10320, !srcloc !10321
  call void @llvm.dbg.value(metadata i32 %9, metadata !10317, metadata !DIExpression()) #23, !dbg !10318
  call void @llvm.dbg.value(metadata i32 %9, metadata !10322, metadata !DIExpression()) #23, !dbg !10327
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #23, !dbg !10329, !range !7515
  %11 = shl i32 %0, %10, !dbg !10313
  %12 = or i32 %11, %8, !dbg !10313
  store volatile i32 %12, i32* %4, align 4, !dbg !10313
  ret void, !dbg !10330
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10331 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10335, metadata !DIExpression()), !dbg !10340
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !10336, metadata !DIExpression()), !dbg !10340
  call void @llvm.dbg.value(metadata i32 %2, metadata !10337, metadata !DIExpression()), !dbg !10340
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10341
  %5 = icmp eq %struct._snode* %4, null, !dbg !10341
  br i1 %5, label %24, label %6, !dbg !10341

6:                                                ; preds = %3, %22
  %7 = phi %struct._snode* [ %8, %22 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #24, !dbg !10343
  %9 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10339, metadata !DIExpression()), !dbg !10340
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %9, metadata !10338, metadata !DIExpression()), !dbg !10340
  %10 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !10344
  %11 = bitcast %struct._snode* %10 to i32*, !dbg !10344
  %12 = load i32, i32* %11, align 4, !dbg !10344
  %13 = and i32 %12, %2, !dbg !10348
  %14 = icmp eq i32 %13, 0, !dbg !10348
  br i1 %14, label %22, label %15, !dbg !10349

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !10350
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !10350
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !10350
  %19 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %18, null, !dbg !10350
  br i1 %19, label %20, label %21, !dbg !10354

20:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.140, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31.146, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.142, i32 0, i32 0), i32 noundef 77) #25, !dbg !10355
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33.145, i32 0, i32 0)) #25, !dbg !10355
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.142, i32 0, i32 0), i32 noundef 77) #25, !dbg !10355
  unreachable, !dbg !10355

21:                                               ; preds = %15
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %9, i32 noundef %13) #25, !dbg !10357
  br label %22, !dbg !10358

22:                                               ; preds = %6, %21
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10338, metadata !DIExpression()), !dbg !10340
  %23 = icmp eq %struct._snode* %8, null, !dbg !10359
  br i1 %23, label %24, label %6, !dbg !10359

24:                                               ; preds = %22, %3
  ret void, !dbg !10360
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !10361 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10363, metadata !DIExpression()), !dbg !10364
  %2 = and i32 %0, 255, !dbg !10365
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !10365
  %4 = load volatile i32, i32* %3, align 4, !dbg !10365
  %5 = lshr i32 %0, 16, !dbg !10365
  %6 = and i32 %4, %5, !dbg !10365
  call void @llvm.dbg.value(metadata i32 %5, metadata !10314, metadata !DIExpression()) #23, !dbg !10366
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #28, !dbg !10368, !srcloc !10321
  call void @llvm.dbg.value(metadata i32 %7, metadata !10317, metadata !DIExpression()) #23, !dbg !10366
  call void @llvm.dbg.value(metadata i32 %7, metadata !10322, metadata !DIExpression()) #23, !dbg !10369
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !10371, !range !7515
  %9 = lshr i32 %6, %8, !dbg !10372
  ret i32 %9, !dbg !10373
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !10374 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10379, metadata !DIExpression()), !dbg !10381
  call void @llvm.dbg.value(metadata i32 %1, metadata !10380, metadata !DIExpression()), !dbg !10381
  %3 = shl i32 %1, 16, !dbg !10382
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !10382
  store volatile i32 %3, i32* %4, align 4, !dbg !10382
  ret void, !dbg !10383
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #15 !dbg !10384 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10388, metadata !DIExpression()), !dbg !10389
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10390
  %3 = load volatile i32, i32* %2, align 4, !dbg !10390
  ret i32 %3, !dbg !10391
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !10392 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10394, metadata !DIExpression()), !dbg !10396
  call void @llvm.dbg.value(metadata i32 %1, metadata !10395, metadata !DIExpression()), !dbg !10396
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10397
  store volatile i32 %1, i32* %3, align 4, !dbg !10397
  ret void, !dbg !10398
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #15 !dbg !10399 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10401, metadata !DIExpression()), !dbg !10402
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !10403
  %3 = load volatile i32, i32* %2, align 4, !dbg !10403
  ret i32 %3, !dbg !10404
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #9 !dbg !10405 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10409, metadata !DIExpression()), !dbg !10411
  call void @llvm.dbg.value(metadata i32* %1, metadata !10410, metadata !DIExpression()), !dbg !10411
  %3 = and i32 %0, 131072, !dbg !10412
  %4 = icmp eq i32 %3, 0, !dbg !10414
  br i1 %4, label %22, label %5, !dbg !10415

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !10416
  %6 = and i32 %0, 2, !dbg !10418
  %7 = icmp eq i32 %6, 0, !dbg !10420
  br i1 %7, label %11, label %8, !dbg !10421

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !10422
  %10 = icmp eq i32 %9, 0, !dbg !10422
  br i1 %10, label %33, label %11, !dbg !10425

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !10426
  store i32 %12, i32* %1, align 4, !dbg !10426
  %13 = and i32 %0, 16, !dbg !10427
  %14 = icmp eq i32 %13, 0, !dbg !10429
  br i1 %14, label %17, label %15, !dbg !10430

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !10431
  br label %31, !dbg !10433

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !10434
  %19 = icmp eq i32 %18, 0, !dbg !10436
  br i1 %19, label %33, label %20, !dbg !10437

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !10438
  br label %31, !dbg !10440

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !10441
  %24 = icmp eq i32 %23, 0, !dbg !10443
  br i1 %24, label %31, label %25, !dbg !10444

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !10445
  %27 = icmp eq i32 %26, 0, !dbg !10448
  br i1 %27, label %28, label %31, !dbg !10449

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !10450
  br label %33, !dbg !10451

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !10411
  ret i32 %34, !dbg !10451
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !10452 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10456, metadata !DIExpression()), !dbg !10467
  call void @llvm.dbg.value(metadata i32 %1, metadata !10457, metadata !DIExpression()), !dbg !10467
  call void @llvm.dbg.value(metadata i32 %2, metadata !10458, metadata !DIExpression()), !dbg !10467
  call void @llvm.dbg.value(metadata i32 %3, metadata !10459, metadata !DIExpression()), !dbg !10467
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10468
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !10468
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !10468
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !10460, metadata !DIExpression()), !dbg !10467
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !10469
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !10469
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !10469
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !10461, metadata !DIExpression()), !dbg !10467
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #24, !dbg !10470
  call void @llvm.dbg.value(metadata i32 %11, metadata !10462, metadata !DIExpression()), !dbg !10467
  %12 = and i32 %2, 48, !dbg !10471
  call void @llvm.dbg.value(metadata i32 %12, metadata !10463, metadata !DIExpression()), !dbg !10467
  call void @llvm.dbg.value(metadata i32 %2, metadata !10464, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !10467
  call void @llvm.dbg.value(metadata i32 %2, metadata !10465, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !10467
  call void @llvm.dbg.value(metadata i32 %2, metadata !10466, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !10467
  %13 = lshr i32 %2, 6, !dbg !10472
  %14 = and i32 %13, 1, !dbg !10472
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #24, !dbg !10473
  %15 = lshr i32 %2, 7, !dbg !10474
  %16 = and i32 %15, 3, !dbg !10474
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #24, !dbg !10475
  %17 = lshr i32 %2, 9, !dbg !10476
  %18 = and i32 %17, 3, !dbg !10476
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #24, !dbg !10477
  %19 = icmp eq i32 %12, 32, !dbg !10478
  br i1 %19, label %20, label %24, !dbg !10480

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !10481
  br i1 %21, label %22, label %23, !dbg !10484

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !10485
  br label %24, !dbg !10487

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !10488
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !10490
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #24, !dbg !10491
  ret void, !dbg !10492
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #2 !dbg !10493 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10495, metadata !DIExpression()), !dbg !10497
  %2 = shl nuw i32 1, %0, !dbg !10498
  call void @llvm.dbg.value(metadata i32 %2, metadata !10496, metadata !DIExpression()), !dbg !10497
  ret i32 %2, !dbg !10499
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !10500 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10504, metadata !DIExpression()), !dbg !10507
  call void @llvm.dbg.value(metadata i32 %1, metadata !10505, metadata !DIExpression()), !dbg !10507
  call void @llvm.dbg.value(metadata i32 %2, metadata !10506, metadata !DIExpression()), !dbg !10507
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !10508
  %5 = load volatile i32, i32* %4, align 4, !dbg !10508
  %6 = xor i32 %1, -1, !dbg !10508
  %7 = and i32 %5, %6, !dbg !10508
  %8 = mul i32 %2, %1, !dbg !10508
  %9 = or i32 %7, %8, !dbg !10508
  store volatile i32 %9, i32* %4, align 4, !dbg !10508
  ret void, !dbg !10509
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10510 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10512, metadata !DIExpression()), !dbg !10515
  call void @llvm.dbg.value(metadata i32 %1, metadata !10513, metadata !DIExpression()), !dbg !10515
  call void @llvm.dbg.value(metadata i32 %2, metadata !10514, metadata !DIExpression()), !dbg !10515
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !10516
  %5 = load volatile i32, i32* %4, align 4, !dbg !10516
  call void @llvm.dbg.value(metadata i32 %1, metadata !10314, metadata !DIExpression()) #23, !dbg !10517
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !10519, !srcloc !10321
  call void @llvm.dbg.value(metadata i32 %6, metadata !10317, metadata !DIExpression()) #23, !dbg !10517
  call void @llvm.dbg.value(metadata i32 %6, metadata !10322, metadata !DIExpression()) #23, !dbg !10520
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !10522, !range !7515
  %8 = shl nuw nsw i32 %7, 1, !dbg !10516
  %9 = shl i32 3, %8, !dbg !10516
  %10 = xor i32 %9, -1, !dbg !10516
  %11 = and i32 %5, %10, !dbg !10516
  call void @llvm.dbg.value(metadata i32 %1, metadata !10314, metadata !DIExpression()) #23, !dbg !10523
  call void @llvm.dbg.value(metadata i32 %6, metadata !10317, metadata !DIExpression()) #23, !dbg !10523
  call void @llvm.dbg.value(metadata i32 %6, metadata !10322, metadata !DIExpression()) #23, !dbg !10525
  %12 = shl i32 %2, %8, !dbg !10516
  %13 = or i32 %11, %12, !dbg !10516
  store volatile i32 %13, i32* %4, align 4, !dbg !10516
  ret void, !dbg !10527
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10528 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10530, metadata !DIExpression()), !dbg !10533
  call void @llvm.dbg.value(metadata i32 %1, metadata !10531, metadata !DIExpression()), !dbg !10533
  call void @llvm.dbg.value(metadata i32 %2, metadata !10532, metadata !DIExpression()), !dbg !10533
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !10534
  %5 = load volatile i32, i32* %4, align 4, !dbg !10534
  call void @llvm.dbg.value(metadata i32 %1, metadata !10314, metadata !DIExpression()) #23, !dbg !10535
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !10537, !srcloc !10321
  call void @llvm.dbg.value(metadata i32 %6, metadata !10317, metadata !DIExpression()) #23, !dbg !10535
  call void @llvm.dbg.value(metadata i32 %6, metadata !10322, metadata !DIExpression()) #23, !dbg !10538
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !10540, !range !7515
  %8 = shl nuw nsw i32 %7, 1, !dbg !10534
  %9 = shl i32 3, %8, !dbg !10534
  %10 = xor i32 %9, -1, !dbg !10534
  %11 = and i32 %5, %10, !dbg !10534
  call void @llvm.dbg.value(metadata i32 %1, metadata !10314, metadata !DIExpression()) #23, !dbg !10541
  call void @llvm.dbg.value(metadata i32 %6, metadata !10317, metadata !DIExpression()) #23, !dbg !10541
  call void @llvm.dbg.value(metadata i32 %6, metadata !10322, metadata !DIExpression()) #23, !dbg !10543
  %12 = shl i32 %2, %8, !dbg !10534
  %13 = or i32 %11, %12, !dbg !10534
  store volatile i32 %13, i32* %4, align 4, !dbg !10534
  ret void, !dbg !10545
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10546 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10548, metadata !DIExpression()), !dbg !10551
  call void @llvm.dbg.value(metadata i32 %1, metadata !10549, metadata !DIExpression()), !dbg !10551
  call void @llvm.dbg.value(metadata i32 %2, metadata !10550, metadata !DIExpression()), !dbg !10551
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !10552
  %5 = load volatile i32, i32* %4, align 4, !dbg !10552
  call void @llvm.dbg.value(metadata i32 %1, metadata !10314, metadata !DIExpression()) #23, !dbg !10553
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !10555, !srcloc !10321
  call void @llvm.dbg.value(metadata i32 %6, metadata !10317, metadata !DIExpression()) #23, !dbg !10553
  call void @llvm.dbg.value(metadata i32 %6, metadata !10322, metadata !DIExpression()) #23, !dbg !10556
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !10558, !range !7515
  %8 = shl nuw nsw i32 %7, 2, !dbg !10552
  %9 = shl i32 15, %8, !dbg !10552
  %10 = xor i32 %9, -1, !dbg !10552
  %11 = and i32 %5, %10, !dbg !10552
  call void @llvm.dbg.value(metadata i32 %1, metadata !10314, metadata !DIExpression()) #23, !dbg !10559
  call void @llvm.dbg.value(metadata i32 %6, metadata !10317, metadata !DIExpression()) #23, !dbg !10559
  call void @llvm.dbg.value(metadata i32 %6, metadata !10322, metadata !DIExpression()) #23, !dbg !10561
  %12 = shl i32 %2, %8, !dbg !10552
  %13 = or i32 %11, %12, !dbg !10552
  store volatile i32 %13, i32* %4, align 4, !dbg !10552
  ret void, !dbg !10563
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10564 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10566, metadata !DIExpression()), !dbg !10569
  call void @llvm.dbg.value(metadata i32 %1, metadata !10567, metadata !DIExpression()), !dbg !10569
  call void @llvm.dbg.value(metadata i32 %2, metadata !10568, metadata !DIExpression()), !dbg !10569
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !10570
  %5 = load volatile i32, i32* %4, align 4, !dbg !10570
  %6 = lshr i32 %1, 8, !dbg !10570
  call void @llvm.dbg.value(metadata i32 %6, metadata !10314, metadata !DIExpression()) #23, !dbg !10571
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !10573, !srcloc !10321
  call void @llvm.dbg.value(metadata i32 %7, metadata !10317, metadata !DIExpression()) #23, !dbg !10571
  call void @llvm.dbg.value(metadata i32 %7, metadata !10322, metadata !DIExpression()) #23, !dbg !10574
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !10576, !range !7515
  %9 = shl nuw nsw i32 %8, 2, !dbg !10570
  %10 = shl i32 15, %9, !dbg !10570
  %11 = xor i32 %10, -1, !dbg !10570
  %12 = and i32 %5, %11, !dbg !10570
  call void @llvm.dbg.value(metadata i32 %6, metadata !10314, metadata !DIExpression()) #23, !dbg !10577
  call void @llvm.dbg.value(metadata i32 %7, metadata !10317, metadata !DIExpression()) #23, !dbg !10577
  call void @llvm.dbg.value(metadata i32 %7, metadata !10322, metadata !DIExpression()) #23, !dbg !10579
  %13 = shl i32 %2, %9, !dbg !10570
  %14 = or i32 %12, %13, !dbg !10570
  store volatile i32 %14, i32* %4, align 4, !dbg !10570
  ret void, !dbg !10581
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10582 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10584, metadata !DIExpression()), !dbg !10587
  call void @llvm.dbg.value(metadata i32 %1, metadata !10585, metadata !DIExpression()), !dbg !10587
  call void @llvm.dbg.value(metadata i32 %2, metadata !10586, metadata !DIExpression()), !dbg !10587
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !10588
  %5 = load volatile i32, i32* %4, align 4, !dbg !10588
  call void @llvm.dbg.value(metadata i32 %1, metadata !10314, metadata !DIExpression()) #23, !dbg !10589
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !10591, !srcloc !10321
  call void @llvm.dbg.value(metadata i32 %6, metadata !10317, metadata !DIExpression()) #23, !dbg !10589
  call void @llvm.dbg.value(metadata i32 %6, metadata !10322, metadata !DIExpression()) #23, !dbg !10592
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !10594, !range !7515
  %8 = shl nuw nsw i32 %7, 1, !dbg !10588
  %9 = shl i32 3, %8, !dbg !10588
  %10 = xor i32 %9, -1, !dbg !10588
  %11 = and i32 %5, %10, !dbg !10588
  call void @llvm.dbg.value(metadata i32 %1, metadata !10314, metadata !DIExpression()) #23, !dbg !10595
  call void @llvm.dbg.value(metadata i32 %6, metadata !10317, metadata !DIExpression()) #23, !dbg !10595
  call void @llvm.dbg.value(metadata i32 %6, metadata !10322, metadata !DIExpression()) #23, !dbg !10597
  %12 = shl i32 %2, %8, !dbg !10588
  %13 = or i32 %11, %12, !dbg !10588
  store volatile i32 %13, i32* %4, align 4, !dbg !10588
  ret void, !dbg !10599
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !10600 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10602, metadata !DIExpression()), !dbg !10605
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10606
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !10606
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !10606
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !10603, metadata !DIExpression()), !dbg !10605
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !10607
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !10608
  %6 = tail call fastcc zeroext i1 @device_is_ready.155() #24, !dbg !10609
  br i1 %6, label %7, label %11, !dbg !10611

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #24, !dbg !10612
  call void @llvm.dbg.value(metadata i32 %8, metadata !10604, metadata !DIExpression()), !dbg !10605
  %9 = icmp slt i32 %8, 0, !dbg !10613
  %10 = select i1 %9, i32 %8, i32 0, !dbg !10615
  br label %11, !dbg !10615

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !10605
  ret i32 %12, !dbg !10616
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.155() unnamed_addr #1 !dbg !10617 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10621, metadata !DIExpression()), !dbg !10622
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !10623, !srcloc !10625
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.156() #24, !dbg !10626
  ret i1 %1, !dbg !10627
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef readonly %0) unnamed_addr #1 !dbg !10628 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10632, metadata !DIExpression()), !dbg !10637
  call void @llvm.dbg.value(metadata i8 1, metadata !10633, metadata !DIExpression()), !dbg !10637
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10638
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !10638
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !10638
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !10634, metadata !DIExpression()), !dbg !10637
  call void @llvm.dbg.value(metadata i32 0, metadata !10635, metadata !DIExpression()), !dbg !10637
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10636, metadata !DIExpression()), !dbg !10637
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !10639
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !10642
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #24, !dbg !10643
  call void @llvm.dbg.value(metadata i32 %7, metadata !10635, metadata !DIExpression()), !dbg !10637
  ret i32 %7, !dbg !10644
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.156() unnamed_addr #1 !dbg !10645 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10647, metadata !DIExpression()), !dbg !10648
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_8) #25, !dbg !10649
  ret i1 %1, !dbg !10650
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !10651 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10655, metadata !DIExpression()), !dbg !10663
  call void @llvm.dbg.value(metadata i32 %1, metadata !10656, metadata !DIExpression()), !dbg !10663
  call void @llvm.dbg.value(metadata i32 %2, metadata !10657, metadata !DIExpression()), !dbg !10663
  call void @llvm.dbg.value(metadata i32 %3, metadata !10658, metadata !DIExpression()), !dbg !10663
  call void @llvm.dbg.value(metadata i32 0, metadata !10659, metadata !DIExpression()), !dbg !10663
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #24, !dbg !10664
  %5 = icmp eq i32 %3, 17, !dbg !10665
  br i1 %5, label %6, label %14, !dbg !10666

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !10667
  call void @llvm.dbg.value(metadata i32 %7, metadata !10660, metadata !DIExpression()), !dbg !10668
  %8 = icmp eq i32 %7, 0, !dbg !10669
  %9 = shl nuw i32 1, %1, !dbg !10671
  br i1 %8, label %12, label %10, !dbg !10672

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !10673
  br label %14, !dbg !10675

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !10676
  br label %14, !dbg !10679

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !10680
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #19 !dbg !10681 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10683, metadata !DIExpression()), !dbg !10687
  call void @llvm.dbg.value(metadata i8* %1, metadata !10684, metadata !DIExpression()), !dbg !10687
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10688
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10688
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10688
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10685, metadata !DIExpression()), !dbg !10687
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10689
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10689
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #24, !dbg !10691
  %9 = icmp eq i32 %8, 0, !dbg !10691
  br i1 %9, label %12, label %10, !dbg !10692

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10693
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #24, !dbg !10695
  br label %12, !dbg !10696

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10697
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #24, !dbg !10699
  %15 = icmp eq i32 %14, 0, !dbg !10699
  br i1 %15, label %19, label %16, !dbg !10700

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10701
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #24, !dbg !10702
  store i8 %18, i8* %1, align 1, !dbg !10703
  br label %19, !dbg !10704

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !10687
  ret i32 %20, !dbg !10705
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !10706 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10708, metadata !DIExpression()), !dbg !10712
  call void @llvm.dbg.value(metadata i8 %1, metadata !10709, metadata !DIExpression()), !dbg !10712
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10713
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10713
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10713
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10710, metadata !DIExpression()), !dbg !10712
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !10714

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10715
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #24, !dbg !10718
  %10 = icmp eq i32 %9, 0, !dbg !10718
  br i1 %10, label %18, label %11, !dbg !10719

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10720, !srcloc !10727
  call void @llvm.dbg.value(metadata i32 undef, metadata !10723, metadata !DIExpression()) #23, !dbg !10728
  call void @llvm.dbg.value(metadata i32 undef, metadata !10724, metadata !DIExpression()) #23, !dbg !10728
  call void @llvm.dbg.value(metadata i32 undef, metadata !10711, metadata !DIExpression()), !dbg !10712
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10729
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #24, !dbg !10731
  %15 = icmp eq i32 %14, 0, !dbg !10731
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !10720
  br i1 %15, label %17, label %19, !dbg !10732

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !10723, metadata !DIExpression()) #23, !dbg !10728
  call void @llvm.dbg.value(metadata i32 %16, metadata !10711, metadata !DIExpression()), !dbg !10712
  call void @llvm.dbg.value(metadata i32 undef, metadata !10733, metadata !DIExpression()) #23, !dbg !10736
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !10738, !srcloc !10739
  br label %18, !dbg !10740

18:                                               ; preds = %17, %7
  br label %7, !dbg !10715, !llvm.loop !10741

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !10720
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10743
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #24, !dbg !10744
  call void @llvm.dbg.value(metadata i32 %20, metadata !10733, metadata !DIExpression()) #23, !dbg !10745
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !10747, !srcloc !10739
  ret void, !dbg !10748
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #19 !dbg !10749 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10751, metadata !DIExpression()), !dbg !10754
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10755
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10755
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10755
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10752, metadata !DIExpression()), !dbg !10754
  call void @llvm.dbg.value(metadata i32 0, metadata !10753, metadata !DIExpression()), !dbg !10754
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10756
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10756
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #24, !dbg !10758
  %8 = icmp ne i32 %7, 0, !dbg !10758
  %9 = zext i1 %8 to i32, !dbg !10759
  call void @llvm.dbg.value(metadata i32 %9, metadata !10753, metadata !DIExpression()), !dbg !10754
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10760
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #24, !dbg !10762
  %12 = icmp eq i32 %11, 0, !dbg !10762
  %13 = or i32 %9, 2, !dbg !10763
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !10763
  call void @llvm.dbg.value(metadata i32 %14, metadata !10753, metadata !DIExpression()), !dbg !10754
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10764
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #24, !dbg !10766
  %17 = icmp eq i32 %16, 0, !dbg !10766
  %18 = or i32 %14, 4, !dbg !10767
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !10767
  call void @llvm.dbg.value(metadata i32 %19, metadata !10753, metadata !DIExpression()), !dbg !10754
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10768
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #24, !dbg !10770
  %22 = icmp eq i32 %21, 0, !dbg !10770
  %23 = or i32 %19, 8, !dbg !10771
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !10771
  call void @llvm.dbg.value(metadata i32 %24, metadata !10753, metadata !DIExpression()), !dbg !10754
  %25 = and i32 %24, 8, !dbg !10772
  %26 = icmp eq i32 %25, 0, !dbg !10772
  br i1 %26, label %29, label %27, !dbg !10774

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10775
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #24, !dbg !10777
  br label %29, !dbg !10778

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !10779
  %31 = icmp eq i32 %30, 0, !dbg !10779
  br i1 %31, label %34, label %32, !dbg !10781

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10782
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #24, !dbg !10784
  br label %34, !dbg !10785

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !10786
  %36 = icmp eq i32 %35, 0, !dbg !10786
  br i1 %36, label %39, label %37, !dbg !10788

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10789
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #24, !dbg !10791
  br label %39, !dbg !10792

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !10793
  %41 = icmp eq i32 %40, 0, !dbg !10793
  br i1 %41, label %44, label %42, !dbg !10795

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10796
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #24, !dbg !10798
  br label %44, !dbg !10799

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10800
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #24, !dbg !10801
  ret i32 %24, !dbg !10802
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !10803 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10805, metadata !DIExpression()), !dbg !10814
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !10806, metadata !DIExpression()), !dbg !10814
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10815
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10815
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10815
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10807, metadata !DIExpression()), !dbg !10814
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10816
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !10816
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !10816
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !10808, metadata !DIExpression()), !dbg !10814
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !10817
  %10 = load i8, i8* %9, align 4, !dbg !10817
  %11 = zext i8 %10 to i32, !dbg !10818
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #24, !dbg !10819
  call void @llvm.dbg.value(metadata i32 %12, metadata !10810, metadata !DIExpression()), !dbg !10814
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !10820
  %14 = load i8, i8* %13, align 1, !dbg !10820
  %15 = zext i8 %14 to i32, !dbg !10821
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #24, !dbg !10822
  call void @llvm.dbg.value(metadata i32 %16, metadata !10811, metadata !DIExpression()), !dbg !10814
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !10823
  %18 = load i8, i8* %17, align 2, !dbg !10823
  %19 = zext i8 %18 to i32, !dbg !10824
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #24, !dbg !10825
  call void @llvm.dbg.value(metadata i32 %20, metadata !10812, metadata !DIExpression()), !dbg !10814
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !10826
  %22 = load i8, i8* %21, align 1, !dbg !10826
  %23 = zext i8 %22 to i32, !dbg !10827
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #24, !dbg !10828
  call void @llvm.dbg.value(metadata i32 %24, metadata !10813, metadata !DIExpression()), !dbg !10814
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !10829

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !10831
  br i1 %26, label %69, label %27, !dbg !10833

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !10834

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !10835
  br i1 %29, label %65, label %30, !dbg !10835

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !10837
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !10814
  br i1 %31, label %38, label %34, !dbg !10839

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !10840
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
    i32 1073761280, label %36
    i32 1073762304, label %36
    i32 1073812480, label %36
  ], !dbg !10840

36:                                               ; preds = %34, %34, %34, %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !10843
  br i1 %37, label %38, label %69, !dbg !10844

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10845
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #24, !dbg !10846
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #24, !dbg !10847
  %41 = icmp eq i32 %12, %40, !dbg !10849
  br i1 %41, label %43, label %42, !dbg !10850

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #24, !dbg !10851
  br label %43, !dbg !10853

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #24, !dbg !10854
  %45 = icmp eq i32 %16, %44, !dbg !10856
  br i1 %45, label %47, label %46, !dbg !10857

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #24, !dbg !10858
  br label %47, !dbg !10860

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #24, !dbg !10861
  %49 = icmp eq i32 %20, %48, !dbg !10863
  br i1 %49, label %51, label %50, !dbg !10864

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #24, !dbg !10865
  br label %51, !dbg !10867

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #24, !dbg !10868
  %53 = icmp eq i32 %24, %52, !dbg !10870
  br i1 %53, label %55, label %54, !dbg !10871

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #24, !dbg !10872
  br label %55, !dbg !10874

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !10875
  %57 = load i32, i32* %56, align 4, !dbg !10875
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !10877
  %59 = load i32, i32* %58, align 4, !dbg !10877
  %60 = icmp eq i32 %57, %59, !dbg !10878
  br i1 %60, label %63, label %61, !dbg !10879

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #24, !dbg !10880
  %62 = load i32, i32* %56, align 4, !dbg !10882
  store i32 %62, i32* %58, align 4, !dbg !10883
  br label %63, !dbg !10884

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !10885
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #24, !dbg !10886
  br label %69, !dbg !10887

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !10835
  %67 = and i8 %66, 1, !dbg !10835
  %68 = icmp eq i8 %67, 0, !dbg !10835
  br i1 %68, label %30, label %69, !dbg !10835

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !10814
  ret i32 %70, !dbg !10888
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #20 !dbg !10889 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10891, metadata !DIExpression()), !dbg !10894
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !10892, metadata !DIExpression()), !dbg !10894
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10895
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !10895
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !10895
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !10893, metadata !DIExpression()), !dbg !10894
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !10896
  %7 = load i32, i32* %6, align 4, !dbg !10896
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !10897
  store i32 %7, i32* %8, align 4, !dbg !10898
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !10899, !range !10900
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #24, !dbg !10901
  %11 = trunc i32 %10 to i8, !dbg !10901
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !10902
  store i8 %11, i8* %12, align 4, !dbg !10903
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #24, !dbg !10904, !range !10905
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #24, !dbg !10906
  %15 = trunc i32 %14 to i8, !dbg !10906
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !10907
  store i8 %15, i8* %16, align 1, !dbg !10908
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #24, !dbg !10909
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !10910, !range !10900
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #24, !dbg !10911
  %20 = trunc i32 %19 to i8, !dbg !10911
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !10912
  store i8 %20, i8* %21, align 2, !dbg !10913
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #24, !dbg !10914, !range !10915
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #24, !dbg !10916
  %24 = trunc i32 %23 to i8, !dbg !10916
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !10917
  store i8 %24, i8* %25, align 1, !dbg !10918
  ret i32 0, !dbg !10919
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !10920 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10924, metadata !DIExpression()), !dbg !10926
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10927
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10927
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10927
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10925, metadata !DIExpression()), !dbg !10926
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10928
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10928
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #24, !dbg !10929
  ret i32 %7, !dbg !10930
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #2 !dbg !10931 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10935, metadata !DIExpression()), !dbg !10936
  %2 = icmp eq i32 %0, 1024, !dbg !10937
  %3 = select i1 %2, i32 2, i32 0, !dbg !10937
  %4 = icmp eq i32 %0, 1536, !dbg !10937
  %5 = select i1 %4, i32 1, i32 %3, !dbg !10937
  ret i32 %5, !dbg !10938
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !10939 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10941, metadata !DIExpression()), !dbg !10943
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10944
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10944
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10944
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10942, metadata !DIExpression()), !dbg !10943
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10945
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10945
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #24, !dbg !10946
  ret i32 %7, !dbg !10947
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #11 !dbg !10948 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10952, metadata !DIExpression()), !dbg !10953
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !10954
  %3 = icmp ult i32 %2, 4, !dbg !10954
  br i1 %3, label %4, label %7, !dbg !10954

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !10954
  %6 = load i32, i32* %5, align 4, !dbg !10954
  br label %7, !dbg !10954

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !10955
  ret i32 %8, !dbg !10957
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !10958 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10960, metadata !DIExpression()), !dbg !10962
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10963
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10963
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10963
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10961, metadata !DIExpression()), !dbg !10962
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10964
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10964
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #24, !dbg !10965
  ret i32 %7, !dbg !10966
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #2 !dbg !10967 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10971, metadata !DIExpression()), !dbg !10973
  call void @llvm.dbg.value(metadata i32 %1, metadata !10972, metadata !DIExpression()), !dbg !10973
  %3 = icmp eq i32 %0, 4096, !dbg !10974
  %4 = icmp eq i32 %1, 0, !dbg !10974
  %5 = select i1 %4, i32 4, i32 3, !dbg !10974
  %6 = select i1 %4, i32 3, i32 2, !dbg !10974
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !10974
  ret i32 %7, !dbg !10975
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !10976 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10978, metadata !DIExpression()), !dbg !10980
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10981
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10981
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10981
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10979, metadata !DIExpression()), !dbg !10980
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10982
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10982
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #24, !dbg !10983
  ret i32 %7, !dbg !10984
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #2 !dbg !10985 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10989, metadata !DIExpression()), !dbg !10990
  %2 = icmp eq i32 %0, 768, !dbg !10991
  %3 = zext i1 %2 to i32, !dbg !10990
  ret i32 %3, !dbg !10993
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10994 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10999, metadata !DIExpression()), !dbg !11000
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11001
  %3 = load volatile i32, i32* %2, align 4, !dbg !11001
  %4 = and i32 %3, 768, !dbg !11001
  ret i32 %4, !dbg !11002
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11003 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11005, metadata !DIExpression()), !dbg !11006
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11007
  %3 = load volatile i32, i32* %2, align 4, !dbg !11007
  %4 = and i32 %3, 4096, !dbg !11007
  ret i32 %4, !dbg !11008
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11009 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11011, metadata !DIExpression()), !dbg !11012
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11013
  %3 = load volatile i32, i32* %2, align 4, !dbg !11013
  %4 = and i32 %3, 12288, !dbg !11013
  ret i32 %4, !dbg !11014
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11015 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11017, metadata !DIExpression()), !dbg !11018
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11019
  %3 = load volatile i32, i32* %2, align 4, !dbg !11019
  %4 = and i32 %3, 1536, !dbg !11019
  ret i32 %4, !dbg !11020
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #2 !dbg !11021 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11025, metadata !DIExpression()), !dbg !11026
  %2 = icmp eq i32 %0, 2, !dbg !11027
  %3 = select i1 %2, i32 1024, i32 0, !dbg !11027
  %4 = icmp eq i32 %0, 1, !dbg !11027
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !11027
  ret i32 %5, !dbg !11028
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #2 !dbg !11029 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11033, metadata !DIExpression()), !dbg !11034
  %2 = icmp ult i32 %0, 3, !dbg !11035
  br i1 %2, label %3, label %6, !dbg !11035

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !11035
  %5 = load i32, i32* %4, align 4, !dbg !11035
  br label %6, !dbg !11035

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !11036
  ret i32 %7, !dbg !11038
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #2 !dbg !11039 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11043, metadata !DIExpression()), !dbg !11045
  call void @llvm.dbg.value(metadata i32 %1, metadata !11044, metadata !DIExpression()), !dbg !11045
  %3 = icmp eq i32 %0, 4, !dbg !11046
  %4 = icmp eq i32 %1, 0, !dbg !11046
  %5 = select i1 %4, i32 0, i32 4096, !dbg !11046
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !11046
  ret i32 %6, !dbg !11047
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #2 !dbg !11048 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11052, metadata !DIExpression()), !dbg !11053
  %2 = icmp eq i32 %0, 1, !dbg !11054
  %3 = select i1 %2, i32 768, i32 0, !dbg !11053
  ret i32 %3, !dbg !11056
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !11057 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11061, metadata !DIExpression()), !dbg !11062
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11063
  %3 = load volatile i32, i32* %2, align 4, !dbg !11063
  %4 = and i32 %3, -8193, !dbg !11063
  store volatile i32 %4, i32* %2, align 4, !dbg !11063
  ret void, !dbg !11064
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !11065 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11069, metadata !DIExpression()), !dbg !11072
  call void @llvm.dbg.value(metadata i32 %1, metadata !11070, metadata !DIExpression()), !dbg !11072
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11073
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11073
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11073
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11071, metadata !DIExpression()), !dbg !11072
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11074
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11074
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !11075
  ret void, !dbg !11076
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !11077 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11079, metadata !DIExpression()), !dbg !11082
  call void @llvm.dbg.value(metadata i32 %1, metadata !11080, metadata !DIExpression()), !dbg !11082
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11083
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11083
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11083
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11081, metadata !DIExpression()), !dbg !11082
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11084
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11084
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !11085
  ret void, !dbg !11086
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !11087 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11089, metadata !DIExpression()), !dbg !11092
  call void @llvm.dbg.value(metadata i32 %1, metadata !11090, metadata !DIExpression()), !dbg !11092
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11093
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11093
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11093
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11091, metadata !DIExpression()), !dbg !11092
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11094
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11094
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !11095
  ret void, !dbg !11096
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !11097 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11099, metadata !DIExpression()), !dbg !11102
  call void @llvm.dbg.value(metadata i32 %1, metadata !11100, metadata !DIExpression()), !dbg !11102
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11103
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11103
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11103
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11101, metadata !DIExpression()), !dbg !11102
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11104
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11104
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !11105
  ret void, !dbg !11106
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !11107 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11109, metadata !DIExpression()), !dbg !11114
  call void @llvm.dbg.value(metadata i32 %1, metadata !11110, metadata !DIExpression()), !dbg !11114
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11115
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !11115
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !11115
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !11111, metadata !DIExpression()), !dbg !11114
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11116
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !11116
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !11116
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !11112, metadata !DIExpression()), !dbg !11114
  %10 = bitcast i32* %3 to i8*, !dbg !11117
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #23, !dbg !11117
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !11118
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !11118
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !11122
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !11122
  %15 = load i8*, i8** %14, align 4, !dbg !11122
  call void @llvm.dbg.value(metadata i32* %3, metadata !11113, metadata !DIExpression(DW_OP_deref)), !dbg !11114
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #24, !dbg !11123
  %17 = icmp slt i32 %16, 0, !dbg !11124
  br i1 %17, label %18, label %21, !dbg !11125

18:                                               ; preds = %2
  %19 = call fastcc zeroext i8 @z_log_minimal_level_to_char.159(i32 noundef 1) #24, !dbg !11126
  %20 = zext i8 %19 to i32, !dbg !11126
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.5.160, i32 0, i32 0), i32 noundef %20) #25, !dbg !11126
  br label %31, !dbg !11132

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !11133
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11133
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %23) #24, !dbg !11134
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11135
  %25 = load i32, i32* %3, align 4, !dbg !11136
  call void @llvm.dbg.value(metadata i32 %25, metadata !11113, metadata !DIExpression()), !dbg !11114
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %24, i32 noundef %25, i32 noundef %1) #24, !dbg !11137
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11138
  %27 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %26, i32 0, i32 2, !dbg !11138
  %28 = load volatile i32, i32* %27, align 4, !dbg !11138
  %29 = icmp ugt i32 %28, 16, !dbg !11138
  br i1 %29, label %31, label %30, !dbg !11141

30:                                               ; preds = %21
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6.161, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.7.162, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8.163, i32 0, i32 0), i32 noundef 190) #25, !dbg !11142
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.9.164, i32 0, i32 0)) #25, !dbg !11142
  call void @assert_post_action(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8.163, i32 0, i32 0), i32 noundef 190) #25, !dbg !11142
  unreachable, !dbg !11142

31:                                               ; preds = %21, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #23, !dbg !11144
  ret void, !dbg !11144
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !11145 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11147, metadata !DIExpression()), !dbg !11148
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11149
  %3 = load volatile i32, i32* %2, align 4, !dbg !11149
  %4 = or i32 %3, 8192, !dbg !11149
  store volatile i32 %4, i32* %2, align 4, !dbg !11149
  ret void, !dbg !11150
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !11151 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11153, metadata !DIExpression()), !dbg !11157
  call void @llvm.dbg.value(metadata i8* %1, metadata !11154, metadata !DIExpression()), !dbg !11157
  call void @llvm.dbg.value(metadata i32* %2, metadata !11155, metadata !DIExpression()), !dbg !11157
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11158
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !11158
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !11158
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !11156, metadata !DIExpression()), !dbg !11157
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !11159
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !11159
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !11161
  br i1 %9, label %12, label %10, !dbg !11162

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #25, !dbg !11163
  br label %12, !dbg !11164

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !11157
  ret i32 %13, !dbg !11165
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.159(i32 noundef %0) unnamed_addr #2 !dbg !11166 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11168, metadata !DIExpression()), !dbg !11169
  %2 = icmp eq i32 %0, 2, !dbg !11170
  %3 = select i1 %2, i8 87, i8 63, !dbg !11170
  %4 = icmp eq i32 %0, 1, !dbg !11170
  %5 = select i1 %4, i8 69, i8 %3, !dbg !11170
  ret i8 %5, !dbg !11171
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !11172 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11176, metadata !DIExpression()), !dbg !11178
  call void @llvm.dbg.value(metadata i32 0, metadata !11177, metadata !DIExpression()), !dbg !11178
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11179
  %3 = load volatile i32, i32* %2, align 4, !dbg !11179
  %4 = and i32 %3, -32769, !dbg !11179
  store volatile i32 %4, i32* %2, align 4, !dbg !11179
  ret void, !dbg !11180
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !11181 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11185, metadata !DIExpression()), !dbg !11189
  call void @llvm.dbg.value(metadata i32 %1, metadata !11186, metadata !DIExpression()), !dbg !11189
  call void @llvm.dbg.value(metadata i32 0, metadata !11187, metadata !DIExpression()), !dbg !11189
  call void @llvm.dbg.value(metadata i32 %2, metadata !11188, metadata !DIExpression()), !dbg !11189
  %4 = zext i32 %1 to i64, !dbg !11190
  %5 = mul nuw nsw i64 %4, 25, !dbg !11190
  %6 = zext i32 %2 to i64, !dbg !11190
  %7 = shl nuw nsw i64 %6, 2, !dbg !11190
  %8 = udiv i64 %5, %7, !dbg !11190
  %9 = trunc i64 %8 to i32, !dbg !11190
  %10 = udiv i32 %9, 100, !dbg !11190
  %11 = shl nuw nsw i32 %10, 4, !dbg !11190
  %12 = mul i32 %10, -100, !dbg !11190
  %13 = add i32 %12, %9, !dbg !11190
  %14 = shl i32 %13, 4, !dbg !11190
  %15 = add i32 %14, 50, !dbg !11190
  %16 = udiv i32 %15, 100, !dbg !11190
  %17 = and i32 %16, 240, !dbg !11190
  %18 = add nuw nsw i32 %17, %11, !dbg !11190
  %19 = and i32 %16, 15, !dbg !11190
  %20 = and i32 %18, 65520, !dbg !11193
  %21 = or i32 %20, %19, !dbg !11193
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !11194
  store volatile i32 %21, i32* %22, align 4, !dbg !11195
  ret void, !dbg !11196
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !11197 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11199, metadata !DIExpression()), !dbg !11201
  call void @llvm.dbg.value(metadata i32 %1, metadata !11200, metadata !DIExpression()), !dbg !11201
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11202
  %4 = load volatile i32, i32* %3, align 4, !dbg !11202
  %5 = and i32 %4, -769, !dbg !11202
  %6 = or i32 %5, %1, !dbg !11202
  store volatile i32 %6, i32* %3, align 4, !dbg !11202
  ret void, !dbg !11203
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !11204 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11206, metadata !DIExpression()), !dbg !11208
  call void @llvm.dbg.value(metadata i32 %1, metadata !11207, metadata !DIExpression()), !dbg !11208
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11209
  %4 = load volatile i32, i32* %3, align 4, !dbg !11209
  %5 = and i32 %4, -4097, !dbg !11209
  %6 = or i32 %5, %1, !dbg !11209
  store volatile i32 %6, i32* %3, align 4, !dbg !11209
  ret void, !dbg !11210
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !11211 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11213, metadata !DIExpression()), !dbg !11215
  call void @llvm.dbg.value(metadata i32 %1, metadata !11214, metadata !DIExpression()), !dbg !11215
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11216
  %4 = load volatile i32, i32* %3, align 4, !dbg !11216
  %5 = and i32 %4, -12289, !dbg !11216
  %6 = or i32 %5, %1, !dbg !11216
  store volatile i32 %6, i32* %3, align 4, !dbg !11216
  ret void, !dbg !11217
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !11218 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11220, metadata !DIExpression()), !dbg !11222
  call void @llvm.dbg.value(metadata i32 %1, metadata !11221, metadata !DIExpression()), !dbg !11222
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11223
  %4 = load volatile i32, i32* %3, align 4, !dbg !11223
  %5 = and i32 %4, -1537, !dbg !11223
  %6 = or i32 %5, %1, !dbg !11223
  store volatile i32 %6, i32* %3, align 4, !dbg !11223
  ret void, !dbg !11224
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11225 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11227, metadata !DIExpression()), !dbg !11228
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11229
  %3 = load volatile i32, i32* %2, align 4, !dbg !11229
  %4 = lshr i32 %3, 3, !dbg !11230
  %5 = and i32 %4, 1, !dbg !11230
  ret i32 %5, !dbg !11231
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11232 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11234, metadata !DIExpression()), !dbg !11235
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11236
  %3 = load volatile i32, i32* %2, align 4, !dbg !11236
  %4 = and i32 %3, 1, !dbg !11236
  ret i32 %4, !dbg !11237
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11238 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11240, metadata !DIExpression()), !dbg !11241
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11242
  %3 = load volatile i32, i32* %2, align 4, !dbg !11242
  %4 = lshr i32 %3, 1, !dbg !11243
  %5 = and i32 %4, 1, !dbg !11243
  ret i32 %5, !dbg !11244
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11245 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11247, metadata !DIExpression()), !dbg !11248
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11249
  %3 = load volatile i32, i32* %2, align 4, !dbg !11249
  %4 = lshr i32 %3, 8, !dbg !11250
  %5 = and i32 %4, 1, !dbg !11250
  ret i32 %5, !dbg !11251
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !11252 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11254, metadata !DIExpression()), !dbg !11255
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11256
  store volatile i32 -257, i32* %2, align 4, !dbg !11256
  ret void, !dbg !11257
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !11258 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11260, metadata !DIExpression()), !dbg !11262
  %3 = bitcast i32* %2 to i8*, !dbg !11263
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11263
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11261, metadata !DIExpression()), !dbg !11264
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11265
  %5 = load volatile i32, i32* %4, align 4, !dbg !11265
  store volatile i32 %5, i32* %2, align 4, !dbg !11266
  %6 = load volatile i32, i32* %2, align 4, !dbg !11267
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11268
  %8 = load volatile i32, i32* %7, align 4, !dbg !11268
  store volatile i32 %8, i32* %2, align 4, !dbg !11269
  %9 = load volatile i32, i32* %2, align 4, !dbg !11270
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11271
  ret void, !dbg !11271
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !11272 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11274, metadata !DIExpression()), !dbg !11276
  %3 = bitcast i32* %2 to i8*, !dbg !11277
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11277
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11275, metadata !DIExpression()), !dbg !11278
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11279
  %5 = load volatile i32, i32* %4, align 4, !dbg !11279
  store volatile i32 %5, i32* %2, align 4, !dbg !11280
  %6 = load volatile i32, i32* %2, align 4, !dbg !11281
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11282
  %8 = load volatile i32, i32* %7, align 4, !dbg !11282
  store volatile i32 %8, i32* %2, align 4, !dbg !11283
  %9 = load volatile i32, i32* %2, align 4, !dbg !11284
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11285
  ret void, !dbg !11285
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !11286 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11288, metadata !DIExpression()), !dbg !11290
  %3 = bitcast i32* %2 to i8*, !dbg !11291
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11291
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11289, metadata !DIExpression()), !dbg !11292
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11293
  %5 = load volatile i32, i32* %4, align 4, !dbg !11293
  store volatile i32 %5, i32* %2, align 4, !dbg !11294
  %6 = load volatile i32, i32* %2, align 4, !dbg !11295
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11296
  %8 = load volatile i32, i32* %7, align 4, !dbg !11296
  store volatile i32 %8, i32* %2, align 4, !dbg !11297
  %9 = load volatile i32, i32* %2, align 4, !dbg !11298
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11299
  ret void, !dbg !11299
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !11300 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11302, metadata !DIExpression()), !dbg !11304
  %3 = bitcast i32* %2 to i8*, !dbg !11305
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11305
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11303, metadata !DIExpression()), !dbg !11306
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11307
  %5 = load volatile i32, i32* %4, align 4, !dbg !11307
  store volatile i32 %5, i32* %2, align 4, !dbg !11308
  %6 = load volatile i32, i32* %2, align 4, !dbg !11309
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11310
  %8 = load volatile i32, i32* %7, align 4, !dbg !11310
  store volatile i32 %8, i32* %2, align 4, !dbg !11311
  %9 = load volatile i32, i32* %2, align 4, !dbg !11312
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11313
  ret void, !dbg !11313
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11314 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11316, metadata !DIExpression()), !dbg !11317
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11318
  %3 = load volatile i32, i32* %2, align 4, !dbg !11318
  %4 = lshr i32 %3, 7, !dbg !11319
  %5 = and i32 %4, 1, !dbg !11319
  ret i32 %5, !dbg !11320
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #14 !dbg !11321 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11325, metadata !DIExpression()), !dbg !11327
  call void @llvm.dbg.value(metadata i8 %1, metadata !11326, metadata !DIExpression()), !dbg !11327
  %3 = zext i8 %1 to i32, !dbg !11328
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11329
  store volatile i32 %3, i32* %4, align 4, !dbg !11330
  ret void, !dbg !11331
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11332 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11334, metadata !DIExpression()), !dbg !11335
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11336
  %3 = load volatile i32, i32* %2, align 4, !dbg !11336
  %4 = lshr i32 %3, 5, !dbg !11337
  %5 = and i32 %4, 1, !dbg !11337
  ret i32 %5, !dbg !11338
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11339 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11343, metadata !DIExpression()), !dbg !11344
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11345
  %3 = load volatile i32, i32* %2, align 4, !dbg !11345
  %4 = trunc i32 %3 to i8, !dbg !11346
  ret i8 %4, !dbg !11347
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !11348 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11350, metadata !DIExpression()), !dbg !11356
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11357
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11357
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11357
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11351, metadata !DIExpression()), !dbg !11356
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11358
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !11358
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !11358
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !11352, metadata !DIExpression()), !dbg !11356
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #24, !dbg !11359
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !11360
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !11360
  %10 = tail call fastcc zeroext i1 @device_is_ready.171(%struct.device* noundef %9) #24, !dbg !11362
  br i1 %10, label %14, label %11, !dbg !11363

11:                                               ; preds = %1
  %12 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.159(i32 noundef 1) #24, !dbg !11364
  %13 = zext i8 %12 to i32, !dbg !11364
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.10.172, i32 0, i32 0), i32 noundef %13) #25, !dbg !11364
  br label %62, !dbg !11370

14:                                               ; preds = %1
  %15 = load %struct.device*, %struct.device** %8, align 4, !dbg !11371
  %16 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !11372
  %17 = bitcast %struct._thread_arch** %16 to i8**, !dbg !11372
  %18 = load i8*, i8** %17, align 4, !dbg !11372
  %19 = tail call fastcc i32 @clock_control_on.173(%struct.device* noundef %15, i8* noundef %18) #24, !dbg !11373
  call void @llvm.dbg.value(metadata i32 %19, metadata !11355, metadata !DIExpression()), !dbg !11356
  %20 = icmp eq i32 %19, 0, !dbg !11374
  br i1 %20, label %24, label %21, !dbg !11376

21:                                               ; preds = %14
  %22 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.159(i32 noundef 1) #24, !dbg !11377
  %23 = zext i8 %22 to i32, !dbg !11377
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.11.174, i32 0, i32 0), i32 noundef %23) #25, !dbg !11377
  br label %62, !dbg !11383

24:                                               ; preds = %14
  %25 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !11384
  %26 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %25, align 4, !dbg !11384
  %27 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %26) #24, !dbg !11385
  call void @llvm.dbg.value(metadata i32 %27, metadata !11355, metadata !DIExpression()), !dbg !11356
  %28 = icmp slt i32 %27, 0, !dbg !11386
  br i1 %28, label %62, label %29, !dbg !11388

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11389
  %31 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11389
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %31) #24, !dbg !11390
  %32 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11391
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %32) #24, !dbg !11392
  %33 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !11393
  %34 = load i32, i32* %33, align 4, !dbg !11393
  %35 = icmp ult i32 %34, 3, !dbg !11395
  br i1 %35, label %39, label %36, !dbg !11395

36:                                               ; preds = %29
  %37 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.159(i32 noundef 2) #24, !dbg !11396
  %38 = zext i8 %37 to i32, !dbg !11396
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.12.175, i32 0, i32 0), i32 noundef %38, i32 noundef %34) #25, !dbg !11396
  call void @llvm.dbg.value(metadata i32 0, metadata !11353, metadata !DIExpression()), !dbg !11356
  call void @llvm.dbg.value(metadata i32 0, metadata !11354, metadata !DIExpression()), !dbg !11356
  br label %44

39:                                               ; preds = %29
  %40 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init, i32 0, i32 %34, !dbg !11395
  %41 = load i32, i32* %40, align 4, !dbg !11395
  %42 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init.13, i32 0, i32 %34, !dbg !11395
  %43 = load i32, i32* %42, align 4, !dbg !11395
  br label %44, !dbg !11395

44:                                               ; preds = %39, %36
  %45 = phi i32 [ 0, %36 ], [ %41, %39 ], !dbg !11405
  %46 = phi i32 [ 0, %36 ], [ %43, %39 ], !dbg !11405
  call void @llvm.dbg.value(metadata i32 %46, metadata !11354, metadata !DIExpression()), !dbg !11356
  call void @llvm.dbg.value(metadata i32 %45, metadata !11353, metadata !DIExpression()), !dbg !11356
  %47 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11406
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %47, i32 noundef %46, i32 noundef %45) #24, !dbg !11407
  %48 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !11408
  %49 = load i8, i8* %48, align 4, !dbg !11408, !range !6678
  %50 = icmp eq i8 %49, 0, !dbg !11408
  br i1 %50, label %52, label %51, !dbg !11410

51:                                               ; preds = %44
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #24, !dbg !11411
  br label %52, !dbg !11413

52:                                               ; preds = %51, %44
  %53 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !11414
  %54 = load i32, i32* %53, align 4, !dbg !11414
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %54) #24, !dbg !11415
  %55 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !11416
  %56 = load i8, i8* %55, align 4, !dbg !11416, !range !6678
  %57 = icmp eq i8 %56, 0, !dbg !11416
  br i1 %57, label %60, label %58, !dbg !11418

58:                                               ; preds = %52
  %59 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11419
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %59) #24, !dbg !11421
  br label %60, !dbg !11422

60:                                               ; preds = %58, %52
  %61 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11423
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %61) #24, !dbg !11424
  br label %62, !dbg !11425

62:                                               ; preds = %24, %60, %21, %11
  %63 = phi i32 [ %19, %21 ], [ 0, %60 ], [ -19, %11 ], [ %27, %24 ], !dbg !11356
  ret i32 %63, !dbg !11426
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #9 !dbg !11427 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11431, metadata !DIExpression()), !dbg !11435
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11436
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !11436
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !11436
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !11432, metadata !DIExpression()), !dbg !11435
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !11433, metadata !DIExpression()), !dbg !11435
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !11437
  store %struct.device* @__device_dts_ord_8, %struct.device** %5, align 4, !dbg !11438
  ret void, !dbg !11439
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.171(%struct.device* noundef %0) unnamed_addr #1 !dbg !11440 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11444, metadata !DIExpression()), !dbg !11445
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11446, !srcloc !11448
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.176(%struct.device* noundef %0) #24, !dbg !11449
  ret i1 %2, !dbg !11450
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.173(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !11451 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11453, metadata !DIExpression()), !dbg !11456
  call void @llvm.dbg.value(metadata i8* %1, metadata !11454, metadata !DIExpression()), !dbg !11456
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11457
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !11457
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !11457
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !11455, metadata !DIExpression()), !dbg !11456
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !11458
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !11458
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #25, !dbg !11459
  ret i32 %8, !dbg !11460
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !11461 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !11465, metadata !DIExpression()), !dbg !11469
  call void @llvm.dbg.value(metadata i8 0, metadata !11466, metadata !DIExpression()), !dbg !11469
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !11470
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !11470
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !11468, metadata !DIExpression(DW_OP_deref)), !dbg !11469
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #25, !dbg !11471
  call void @llvm.dbg.value(metadata i32 %4, metadata !11467, metadata !DIExpression()), !dbg !11469
  %5 = icmp slt i32 %4, 0, !dbg !11472
  br i1 %5, label %9, label %6, !dbg !11474

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !11475
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !11468, metadata !DIExpression()), !dbg !11469
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #24, !dbg !11476
  br label %9, !dbg !11477

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !11469
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !11478
  ret i32 %10, !dbg !11478
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11479 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11481, metadata !DIExpression()), !dbg !11485
  call void @llvm.dbg.value(metadata i32 12, metadata !11482, metadata !DIExpression()), !dbg !11485
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !11486

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !11487, metadata !DIExpression()) #23, !dbg !11493
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #23, !dbg !11496, !srcloc !11497
  call void @llvm.dbg.value(metadata i32 %4, metadata !11492, metadata !DIExpression()) #23, !dbg !11493
  %5 = or i32 %4, 12, !dbg !11498
  call void @llvm.dbg.value(metadata i32 %5, metadata !11483, metadata !DIExpression()), !dbg !11499
  call void @llvm.dbg.value(metadata i32 %5, metadata !11500, metadata !DIExpression()) #23, !dbg !11507
  call void @llvm.dbg.value(metadata i32* %2, metadata !11505, metadata !DIExpression()) #23, !dbg !11507
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #23, !dbg !11509, !srcloc !11510
  call void @llvm.dbg.value(metadata i32 %6, metadata !11506, metadata !DIExpression()) #23, !dbg !11507
  %7 = icmp eq i32 %6, 0, !dbg !11486
  br i1 %7, label %8, label %3, !dbg !11498, !llvm.loop !11511

8:                                                ; preds = %3
  ret void, !dbg !11512
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !11513 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11515, metadata !DIExpression()), !dbg !11519
  call void @llvm.dbg.value(metadata i32 %1, metadata !11516, metadata !DIExpression()), !dbg !11519
  call void @llvm.dbg.value(metadata i32 %2, metadata !11517, metadata !DIExpression()), !dbg !11519
  call void @llvm.dbg.value(metadata i32 0, metadata !11518, metadata !DIExpression()), !dbg !11519
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11520
  %5 = load volatile i32, i32* %4, align 4, !dbg !11520
  %6 = and i32 %5, -5633, !dbg !11520
  %7 = or i32 %2, %1, !dbg !11520
  %8 = or i32 %7, %6, !dbg !11520
  store volatile i32 %8, i32* %4, align 4, !dbg !11520
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11521
  %10 = load volatile i32, i32* %9, align 4, !dbg !11521
  %11 = and i32 %10, -12289, !dbg !11521
  store volatile i32 %11, i32* %9, align 4, !dbg !11521
  ret void, !dbg !11522
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !11523 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11525, metadata !DIExpression()), !dbg !11526
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11527
  %3 = load volatile i32, i32* %2, align 4, !dbg !11527
  %4 = or i32 %3, 8, !dbg !11527
  store volatile i32 %4, i32* %2, align 4, !dbg !11527
  ret void, !dbg !11528
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !11529 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !11533, metadata !DIExpression()), !dbg !11536
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !11534, metadata !DIExpression()), !dbg !11536
  call void @llvm.dbg.value(metadata i32 0, metadata !11535, metadata !DIExpression()), !dbg !11536
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !11537
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !11537
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !11538
  %5 = load i8, i8* %4, align 4, !dbg !11538
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #25, !dbg !11539
  ret i32 %6, !dbg !11540
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.176(%struct.device* noundef %0) unnamed_addr #1 !dbg !11541 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11543, metadata !DIExpression()), !dbg !11544
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !11545
  ret i1 %2, !dbg !11546
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #14 !dbg !11547 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11549, metadata !DIExpression()), !dbg !11550
  tail call fastcc void @__NVIC_SetPriority.178() #24, !dbg !11551
  store i32 8399, i32* @last_load, align 4, !dbg !11552
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11553
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11554
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11555
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11556
  %3 = or i32 %2, 7, !dbg !11556
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11556
  ret i32 0, !dbg !11557
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.178() unnamed_addr #14 !dbg !11558 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !11560, metadata !DIExpression()), !dbg !11562
  call void @llvm.dbg.value(metadata i32 1, metadata !11561, metadata !DIExpression()), !dbg !11562
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !11563
  ret void, !dbg !11566
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !11567 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11569, metadata !DIExpression()), !dbg !11571
  %2 = tail call fastcc i32 @elapsed() #24, !dbg !11572
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11573
  %4 = load i32, i32* @cycle_count, align 4, !dbg !11574
  %5 = add i32 %4, %3, !dbg !11574
  store i32 %5, i32* @cycle_count, align 4, !dbg !11574
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11575
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !11576
  %7 = sub i32 %5, %6, !dbg !11579
  %8 = udiv i32 %7, 8400, !dbg !11580
  call void @llvm.dbg.value(metadata i32 %8, metadata !11570, metadata !DIExpression()), !dbg !11571
  %9 = mul nuw i32 %8, 8400, !dbg !11581
  %10 = add i32 %9, %6, !dbg !11582
  store i32 %10, i32* @announced_cycles, align 4, !dbg !11582
  tail call void @sys_clock_announce(i32 noundef %8) #25, !dbg !11583
  tail call void @z_arm_int_exit() #25, !dbg !11584
  ret void, !dbg !11585
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #14 !dbg !11586 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11591
  call void @llvm.dbg.value(metadata i32 %1, metadata !11588, metadata !DIExpression()), !dbg !11592
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11593
  call void @llvm.dbg.value(metadata i32 %2, metadata !11589, metadata !DIExpression()), !dbg !11592
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11594
  call void @llvm.dbg.value(metadata i32 %3, metadata !11590, metadata !DIExpression()), !dbg !11592
  %4 = and i32 %2, 65536, !dbg !11595
  %5 = icmp ne i32 %4, 0, !dbg !11595
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !11597
  %8 = load i32, i32* @last_load, align 4, !dbg !11592
  br i1 %7, label %9, label %13, !dbg !11597

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11598
  %11 = add i32 %10, %8, !dbg !11598
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !11598
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11600
  br label %13, !dbg !11601

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !11602
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11603
  %16 = add i32 %14, %15, !dbg !11604
  ret i32 %16, !dbg !11605
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !11606 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11610, metadata !DIExpression()), !dbg !11623
  call void @llvm.dbg.value(metadata i1 %1, metadata !11611, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11623
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !11624
  br i1 %4, label %5, label %8, !dbg !11624

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11626
  %7 = and i32 %6, -2, !dbg !11626
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11626
  store i32 -16777216, i32* @last_load, align 4, !dbg !11628
  br label %60, !dbg !11629

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !11630
  call void @llvm.dbg.value(metadata i32 %9, metadata !11615, metadata !DIExpression()), !dbg !11623
  br i1 %3, label %18, label %10, !dbg !11631

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !11631
  call void @llvm.dbg.value(metadata i32 undef, metadata !11610, metadata !DIExpression()), !dbg !11623
  %12 = icmp slt i32 %11, 1, !dbg !11632
  br i1 %12, label %18, label %13, !dbg !11632

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !11632
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !11632
  %16 = mul nuw nsw i32 %15, 8400, !dbg !11632
  %17 = add nuw nsw i32 %16, 8399, !dbg !11632
  br label %18, !dbg !11632

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !11610, metadata !DIExpression()), !dbg !11623
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11633, metadata !DIExpression()) #23, !dbg !11640
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11642, !srcloc !11648
  call void @llvm.dbg.value(metadata i32 undef, metadata !11645, metadata !DIExpression()) #23, !dbg !11649
  call void @llvm.dbg.value(metadata i32 undef, metadata !11646, metadata !DIExpression()) #23, !dbg !11649
  call void @llvm.dbg.value(metadata i32 undef, metadata !11639, metadata !DIExpression()) #23, !dbg !11640
  %21 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11650
  br i1 %21, label %23, label %22, !dbg !11653

22:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.179, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.180, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.181, i32 0, i32 0), i32 noundef 148) #25, !dbg !11654
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.182, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11654
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.181, i32 0, i32 0), i32 noundef 148) #25, !dbg !11654
  unreachable, !dbg !11654

23:                                               ; preds = %18
  %24 = extractvalue { i32, i32 } %20, 0, !dbg !11642
  call void @llvm.dbg.value(metadata i32 %24, metadata !11645, metadata !DIExpression()) #23, !dbg !11649
  call void @llvm.dbg.value(metadata i32 %24, metadata !11639, metadata !DIExpression()) #23, !dbg !11640
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11656
  call void @llvm.dbg.value(metadata i32 %24, metadata !11616, metadata !DIExpression()), !dbg !11623
  %25 = tail call fastcc i32 @elapsed() #24, !dbg !11657
  call void @llvm.dbg.value(metadata i32 %25, metadata !11621, metadata !DIExpression()), !dbg !11623
  %26 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11658
  call void @llvm.dbg.value(metadata i32 %26, metadata !11613, metadata !DIExpression()), !dbg !11623
  %27 = load i32, i32* @cycle_count, align 4, !dbg !11659
  %28 = add i32 %27, %25, !dbg !11659
  store i32 %28, i32* @cycle_count, align 4, !dbg !11659
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11660
  %29 = load i32, i32* @announced_cycles, align 4, !dbg !11661
  %30 = sub i32 %28, %29, !dbg !11662
  call void @llvm.dbg.value(metadata i32 %30, metadata !11622, metadata !DIExpression()), !dbg !11623
  %31 = icmp slt i32 %30, 0, !dbg !11663
  br i1 %31, label %41, label %32, !dbg !11665

32:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 undef, metadata !11612, metadata !DIExpression()), !dbg !11623
  call void @llvm.dbg.value(metadata i32 undef, metadata !11612, metadata !DIExpression()), !dbg !11623
  %33 = add nuw i32 %19, %30, !dbg !11666
  %34 = urem i32 %33, 8400, !dbg !11668
  call void @llvm.dbg.value(metadata !DIArgList(i32 %33, i32 %34), metadata !11612, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11623
  %35 = sub nuw nsw i32 %19, %34, !dbg !11669
  call void @llvm.dbg.value(metadata i32 %35, metadata !11612, metadata !DIExpression()), !dbg !11623
  %36 = icmp ugt i32 %35, 1024, !dbg !11670
  br i1 %36, label %37, label %39, !dbg !11670

37:                                               ; preds = %32
  call void @llvm.dbg.value(metadata i32 %35, metadata !11612, metadata !DIExpression()), !dbg !11623
  %38 = icmp ugt i32 %35, 16766400, !dbg !11671
  br i1 %38, label %41, label %39, !dbg !11673

39:                                               ; preds = %32, %37
  %40 = phi i32 [ %35, %37 ], [ 1024, %32 ]
  br label %41

41:                                               ; preds = %37, %23, %39
  %42 = phi i32 [ %40, %39 ], [ 1024, %23 ], [ 16766400, %37 ]
  store i32 %42, i32* @last_load, align 4, !dbg !11674
  %43 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11675
  call void @llvm.dbg.value(metadata i32 %43, metadata !11614, metadata !DIExpression()), !dbg !11623
  %44 = add nsw i32 %42, -1, !dbg !11676
  store volatile i32 %44, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11677
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11678
  %45 = icmp ult i32 %26, %43, !dbg !11679
  br i1 %45, label %46, label %51, !dbg !11681

46:                                               ; preds = %41
  %47 = load i32, i32* @cycle_count, align 4, !dbg !11682
  %48 = add i32 %26, %9, !dbg !11684
  %49 = sub i32 %48, %43, !dbg !11685
  %50 = add i32 %49, %47, !dbg !11682
  br label %55, !dbg !11686

51:                                               ; preds = %41
  %52 = sub i32 %26, %43, !dbg !11687
  %53 = load i32, i32* @cycle_count, align 4, !dbg !11689
  %54 = add i32 %52, %53, !dbg !11689
  br label %55

55:                                               ; preds = %51, %46
  %56 = phi i32 [ %54, %51 ], [ %50, %46 ], !dbg !11690
  store i32 %56, i32* @cycle_count, align 4, !dbg !11690
  call void @llvm.dbg.value(metadata i32 undef, metadata !11691, metadata !DIExpression()) #23, !dbg !11697
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11696, metadata !DIExpression()) #23, !dbg !11697
  %57 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11699
  br i1 %57, label %59, label %58, !dbg !11702

58:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.179, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.183, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.181, i32 0, i32 0), i32 noundef 194) #25, !dbg !11703
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.184, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11703
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.181, i32 0, i32 0), i32 noundef 194) #25, !dbg !11703
  unreachable, !dbg !11703

59:                                               ; preds = %55
  call void @llvm.dbg.value(metadata i32 %24, metadata !11691, metadata !DIExpression()) #23, !dbg !11697
  call void @llvm.dbg.value(metadata i32 %24, metadata !11705, metadata !DIExpression()) #23, !dbg !11708
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #23, !dbg !11710, !srcloc !11711
  br label %60

60:                                               ; preds = %59, %5
  ret void, !dbg !11712
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !11713 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11633, metadata !DIExpression()) #23, !dbg !11717
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11719, !srcloc !11648
  call void @llvm.dbg.value(metadata i32 undef, metadata !11645, metadata !DIExpression()) #23, !dbg !11721
  call void @llvm.dbg.value(metadata i32 undef, metadata !11646, metadata !DIExpression()) #23, !dbg !11721
  call void @llvm.dbg.value(metadata i32 undef, metadata !11639, metadata !DIExpression()) #23, !dbg !11717
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11722
  br i1 %2, label %4, label %3, !dbg !11723

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.179, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.180, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.181, i32 0, i32 0), i32 noundef 148) #25, !dbg !11724
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.182, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11724
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.181, i32 0, i32 0), i32 noundef 148) #25, !dbg !11724
  unreachable, !dbg !11724

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !11645, metadata !DIExpression()) #23, !dbg !11721
  call void @llvm.dbg.value(metadata i32 undef, metadata !11639, metadata !DIExpression()) #23, !dbg !11717
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11725
  call void @llvm.dbg.value(metadata i32 undef, metadata !11715, metadata !DIExpression()), !dbg !11726
  %5 = tail call fastcc i32 @elapsed() #24, !dbg !11727
  %6 = load i32, i32* @cycle_count, align 4, !dbg !11728
  %7 = load i32, i32* @announced_cycles, align 4, !dbg !11729
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %7, i32 %6), metadata !11716, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11726
  call void @llvm.dbg.value(metadata i32 undef, metadata !11691, metadata !DIExpression()) #23, !dbg !11730
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11696, metadata !DIExpression()) #23, !dbg !11730
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11732
  br i1 %8, label %10, label %9, !dbg !11733

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.179, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.183, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.181, i32 0, i32 0), i32 noundef 194) #25, !dbg !11734
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.184, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11734
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.181, i32 0, i32 0), i32 noundef 194) #25, !dbg !11734
  unreachable, !dbg !11734

10:                                               ; preds = %4
  %11 = add i32 %6, %5, !dbg !11735
  call void @llvm.dbg.value(metadata !DIArgList(i32 %11, i32 %7), metadata !11716, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11726
  %12 = sub i32 %11, %7, !dbg !11736
  call void @llvm.dbg.value(metadata i32 %12, metadata !11716, metadata !DIExpression()), !dbg !11726
  %13 = extractvalue { i32, i32 } %1, 0, !dbg !11719
  call void @llvm.dbg.value(metadata i32 %13, metadata !11645, metadata !DIExpression()) #23, !dbg !11721
  call void @llvm.dbg.value(metadata i32 %13, metadata !11639, metadata !DIExpression()) #23, !dbg !11717
  call void @llvm.dbg.value(metadata i32 %13, metadata !11715, metadata !DIExpression()), !dbg !11726
  call void @llvm.dbg.value(metadata i32 undef, metadata !11691, metadata !DIExpression()) #23, !dbg !11730
  call void @llvm.dbg.value(metadata i32 undef, metadata !11705, metadata !DIExpression()) #23, !dbg !11737
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #23, !dbg !11739, !srcloc !11711
  %14 = udiv i32 %12, 8400, !dbg !11740
  ret i32 %14, !dbg !11741
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !11742 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11633, metadata !DIExpression()) #23, !dbg !11746
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11748, !srcloc !11648
  call void @llvm.dbg.value(metadata i32 undef, metadata !11645, metadata !DIExpression()) #23, !dbg !11750
  call void @llvm.dbg.value(metadata i32 undef, metadata !11646, metadata !DIExpression()) #23, !dbg !11750
  call void @llvm.dbg.value(metadata i32 undef, metadata !11639, metadata !DIExpression()) #23, !dbg !11746
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11751
  br i1 %2, label %4, label %3, !dbg !11752

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.179, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.180, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.181, i32 0, i32 0), i32 noundef 148) #25, !dbg !11753
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.182, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11753
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.181, i32 0, i32 0), i32 noundef 148) #25, !dbg !11753
  unreachable, !dbg !11753

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !11645, metadata !DIExpression()) #23, !dbg !11750
  call void @llvm.dbg.value(metadata i32 undef, metadata !11639, metadata !DIExpression()) #23, !dbg !11746
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11754
  call void @llvm.dbg.value(metadata i32 undef, metadata !11744, metadata !DIExpression()), !dbg !11755
  %5 = tail call fastcc i32 @elapsed() #24, !dbg !11756
  %6 = load i32, i32* @cycle_count, align 4, !dbg !11757
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %6), metadata !11745, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !11755
  call void @llvm.dbg.value(metadata i32 undef, metadata !11691, metadata !DIExpression()) #23, !dbg !11758
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11696, metadata !DIExpression()) #23, !dbg !11758
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11760
  br i1 %7, label %9, label %8, !dbg !11761

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.179, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.183, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.181, i32 0, i32 0), i32 noundef 194) #25, !dbg !11762
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.184, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11762
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.181, i32 0, i32 0), i32 noundef 194) #25, !dbg !11762
  unreachable, !dbg !11762

9:                                                ; preds = %4
  %10 = add i32 %6, %5, !dbg !11763
  call void @llvm.dbg.value(metadata i32 %10, metadata !11745, metadata !DIExpression()), !dbg !11755
  %11 = extractvalue { i32, i32 } %1, 0, !dbg !11748
  call void @llvm.dbg.value(metadata i32 %11, metadata !11645, metadata !DIExpression()) #23, !dbg !11750
  call void @llvm.dbg.value(metadata i32 %11, metadata !11639, metadata !DIExpression()) #23, !dbg !11746
  call void @llvm.dbg.value(metadata i32 %11, metadata !11744, metadata !DIExpression()), !dbg !11755
  call void @llvm.dbg.value(metadata i32 undef, metadata !11691, metadata !DIExpression()) #23, !dbg !11758
  call void @llvm.dbg.value(metadata i32 undef, metadata !11705, metadata !DIExpression()) #23, !dbg !11764
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #23, !dbg !11766, !srcloc !11711
  ret i32 %10, !dbg !11767
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #14 !dbg !11768 {
  %1 = load i32, i32* @last_load, align 4, !dbg !11769
  %2 = icmp eq i32 %1, -16777216, !dbg !11771
  br i1 %2, label %3, label %6, !dbg !11772

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11773
  %5 = or i32 %4, 1, !dbg !11773
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11773
  br label %6, !dbg !11775

6:                                                ; preds = %3, %0
  ret void, !dbg !11776
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #14 !dbg !11777 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11778
  %2 = and i32 %1, -2, !dbg !11778
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11778
  ret void, !dbg !11779
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #13 !dbg !11780 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !11806, metadata !DIExpression()), !dbg !11809
  call void @llvm.dbg.value(metadata i8 %1, metadata !11807, metadata !DIExpression()), !dbg !11809
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !11808, metadata !DIExpression()), !dbg !11809
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !11810
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11810
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !11809
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11811
  %8 = load i8, i8* %6, align 4, !dbg !11812
  %9 = zext i8 %8 to i32, !dbg !11813
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !11813
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !11814
  br i1 %11, label %18, label %24, !dbg !11815

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !11809
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11811
  %14 = load i8, i8* %6, align 4, !dbg !11812
  %15 = zext i8 %14 to i32, !dbg !11813
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !11813
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !11814
  br i1 %17, label %18, label %24, !dbg !11815, !llvm.loop !11816

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !11818
  %21 = load i8, i8* %20, align 1, !dbg !11818
  %22 = icmp eq i8 %21, %1, !dbg !11821
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !11822
  br i1 %22, label %24, label %12, !dbg !11823

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !11809
  ret i32 %25, !dbg !11824
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11825 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !11836, metadata !DIExpression()), !dbg !11852
  call void @llvm.dbg.value(metadata i8 %1, metadata !11837, metadata !DIExpression()), !dbg !11852
  call void @llvm.dbg.value(metadata i32 %2, metadata !11838, metadata !DIExpression()), !dbg !11852
  call void @llvm.dbg.value(metadata i32 0, metadata !11841, metadata !DIExpression()), !dbg !11852
  call void @llvm.dbg.value(metadata i32 0, metadata !11842, metadata !DIExpression()), !dbg !11852
  call void @llvm.dbg.value(metadata i8 0, metadata !11843, metadata !DIExpression()), !dbg !11853
  %4 = icmp eq i8 %1, 0, !dbg !11854
  br i1 %4, label %35, label %5, !dbg !11855

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !11854
  br label %9, !dbg !11855

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !11843, metadata !DIExpression()), !dbg !11853
  call void @llvm.dbg.value(metadata i32 %29, metadata !11841, metadata !DIExpression()), !dbg !11852
  %8 = icmp eq i32 %34, %6, !dbg !11854
  br i1 %8, label %35, label %9, !dbg !11855, !llvm.loop !11856

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !11843, metadata !DIExpression()), !dbg !11853
  call void @llvm.dbg.value(metadata i32 %11, metadata !11841, metadata !DIExpression()), !dbg !11852
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !11858
  %13 = load i32, i32* %12, align 4, !dbg !11858
  call void @llvm.dbg.value(metadata i32 %13, metadata !11840, metadata !DIExpression()), !dbg !11852
  %14 = and i32 %13, 31, !dbg !11859
  %15 = icmp ult i32 %14, 16, !dbg !11860
  br i1 %15, label %16, label %20, !dbg !11861

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !11862
  %18 = load i32, i32* %17, align 4, !dbg !11862
  %19 = or i32 %18, 32, !dbg !11864
  call void @llvm.dbg.value(metadata i32 %19, metadata !11841, metadata !DIExpression()), !dbg !11852
  br label %28, !dbg !11865

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !11866

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !11867
  %23 = load i32, i32* %22, align 4, !dbg !11867
  call void @llvm.dbg.value(metadata i32 %23, metadata !11845, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !11868
  %24 = lshr i32 %23, 7, !dbg !11869
  %25 = and i32 %24, 16, !dbg !11869
  %26 = or i32 %25, %23, !dbg !11869
  call void @llvm.dbg.value(metadata i32 %26, metadata !11841, metadata !DIExpression()), !dbg !11852
  br label %28, !dbg !11870

27:                                               ; preds = %20
  br label %28

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ %11, %27 ], [ 48, %20 ], !dbg !11852
  call void @llvm.dbg.value(metadata i32 %29, metadata !11841, metadata !DIExpression()), !dbg !11852
  %30 = lshr i32 %13, 5, !dbg !11871
  %31 = and i32 %30, 255, !dbg !11871
  call void @llvm.dbg.value(metadata i32 %31, metadata !11839, metadata !DIExpression()), !dbg !11852
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #24, !dbg !11872
  call void @llvm.dbg.value(metadata i32 %32, metadata !11842, metadata !DIExpression()), !dbg !11852
  %33 = icmp slt i32 %32, 0, !dbg !11873
  %34 = add nuw nsw i32 %10, 1, !dbg !11875
  call void @llvm.dbg.value(metadata i32 %34, metadata !11843, metadata !DIExpression()), !dbg !11853
  br i1 %33, label %35, label %7, !dbg !11876

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !11877
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11878 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11882, metadata !DIExpression()), !dbg !11886
  call void @llvm.dbg.value(metadata i32 %1, metadata !11883, metadata !DIExpression()), !dbg !11886
  call void @llvm.dbg.value(metadata i32 %2, metadata !11884, metadata !DIExpression()), !dbg !11886
  %4 = icmp ugt i32 %0, 175, !dbg !11887
  br i1 %4, label %16, label %5, !dbg !11889

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !11890
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !11891
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !11891
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !11885, metadata !DIExpression()), !dbg !11886
  %9 = add nsw i32 %6, -8, !dbg !11892
  %10 = icmp ult i32 %9, 3, !dbg !11892
  br i1 %10, label %16, label %11, !dbg !11894

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.191(%struct.device* noundef %8) #24, !dbg !11895
  br i1 %12, label %13, label %16, !dbg !11896

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !11897
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #25, !dbg !11898
  br label %16, !dbg !11899

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !11886
  ret i32 %17, !dbg !11900
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.191(%struct.device* noundef %0) unnamed_addr #1 !dbg !11901 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11905, metadata !DIExpression()), !dbg !11906
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11907, !srcloc !11909
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.192(%struct.device* noundef %0) #24, !dbg !11910
  ret i1 %2, !dbg !11911
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.192(%struct.device* noundef %0) unnamed_addr #1 !dbg !11912 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11914, metadata !DIExpression()), !dbg !11915
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !11916
  ret i1 %2, !dbg !11917
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #2 !dbg !11918 {
  ret void, !dbg !11919
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #15 !dbg !11920 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11922, metadata !DIExpression()), !dbg !11927
  call void @llvm.dbg.value(metadata i32 0, metadata !11923, metadata !DIExpression()), !dbg !11927
  call void @llvm.dbg.value(metadata i32 2, metadata !11924, metadata !DIExpression()), !dbg !11927
  call void @llvm.dbg.value(metadata i32 0, metadata !11925, metadata !DIExpression()), !dbg !11927
  call void @llvm.dbg.value(metadata i32 2, metadata !11926, metadata !DIExpression()), !dbg !11927
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11928
  %2 = and i32 %1, 12, !dbg !11929
  call void @llvm.dbg.value(metadata i32 %2, metadata !11922, metadata !DIExpression()), !dbg !11927
  %3 = icmp eq i32 %2, 8, !dbg !11930
  br i1 %3, label %4, label %18, !dbg !11930

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11931
  call void @llvm.dbg.value(metadata i32 %5, metadata !11925, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !11927
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11933
  %7 = and i32 %6, 63, !dbg !11934
  call void @llvm.dbg.value(metadata i32 %7, metadata !11926, metadata !DIExpression()), !dbg !11927
  %8 = udiv i32 16000000, %7, !dbg !11935
  %9 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11935
  %10 = lshr i32 %9, 6, !dbg !11935
  %11 = and i32 %10, 511, !dbg !11935
  %12 = mul i32 %11, %8, !dbg !11935
  call void @llvm.dbg.value(metadata i32 %12, metadata !11923, metadata !DIExpression()), !dbg !11927
  call void @llvm.dbg.value(metadata i32 %12, metadata !11923, metadata !DIExpression()), !dbg !11927
  call void @llvm.dbg.value(metadata i32 %12, metadata !11923, metadata !DIExpression()), !dbg !11927
  %13 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11937
  %14 = lshr i32 %13, 15, !dbg !11938
  %15 = and i32 %14, 6, !dbg !11938
  %16 = add nuw nsw i32 %15, 2, !dbg !11938
  call void @llvm.dbg.value(metadata i32 %16, metadata !11924, metadata !DIExpression()), !dbg !11927
  %17 = udiv i32 %12, %16, !dbg !11939
  br label %18, !dbg !11940

18:                                               ; preds = %0, %4
  %19 = phi i32 [ %17, %4 ], [ 16000000, %0 ]
  store i32 %19, i32* @SystemCoreClock, align 4, !dbg !11941
  %20 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11942
  %21 = lshr i32 %20, 4, !dbg !11943
  %22 = and i32 %21, 15, !dbg !11943
  %23 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %22, !dbg !11944
  %24 = load i8, i8* %23, align 1, !dbg !11944
  %25 = zext i8 %24 to i32, !dbg !11944
  call void @llvm.dbg.value(metadata i32 %25, metadata !11922, metadata !DIExpression()), !dbg !11927
  %26 = lshr i32 %19, %25, !dbg !11945
  store i32 %26, i32* @SystemCoreClock, align 4, !dbg !11945
  ret void, !dbg !11946
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_PeriphCLKConfig(%struct.RCC_PeriphCLKInitTypeDef* noundef readonly %0) local_unnamed_addr #1 !dbg !11947 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_PeriphCLKInitTypeDef* %0, metadata !11989, metadata !DIExpression()), !dbg !12003
  call void @llvm.dbg.value(metadata i32 0, metadata !11990, metadata !DIExpression()), !dbg !12003
  call void @llvm.dbg.value(metadata i32 0, metadata !11991, metadata !DIExpression()), !dbg !12003
  call void @llvm.dbg.value(metadata i32 0, metadata !11992, metadata !DIExpression()), !dbg !12003
  call void @llvm.dbg.value(metadata i32 0, metadata !11993, metadata !DIExpression()), !dbg !12003
  call void @llvm.dbg.value(metadata i32 0, metadata !11994, metadata !DIExpression()), !dbg !12003
  call void @llvm.dbg.value(metadata i32 0, metadata !11995, metadata !DIExpression()), !dbg !12003
  call void @llvm.dbg.value(metadata i32 0, metadata !11996, metadata !DIExpression()), !dbg !12003
  call void @llvm.dbg.value(metadata i32 0, metadata !11997, metadata !DIExpression()), !dbg !12003
  call void @llvm.dbg.value(metadata i32 0, metadata !11998, metadata !DIExpression()), !dbg !12003
  %3 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 0, !dbg !12004
  %4 = load i32, i32* %3, align 4, !dbg !12004
  %5 = and i32 %4, 1, !dbg !12006
  %6 = icmp eq i32 %5, 0, !dbg !12007
  br i1 %6, label %17, label %7, !dbg !12008

7:                                                ; preds = %1
  %8 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12009
  %9 = and i32 %8, -100663297, !dbg !12009
  %10 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 7, !dbg !12009
  %11 = load i32, i32* %10, align 4, !dbg !12009
  %12 = or i32 %9, %11, !dbg !12009
  store volatile i32 %12, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12009
  %13 = load i32, i32* %10, align 4, !dbg !12011
  %14 = icmp eq i32 %13, 0, !dbg !12013
  %15 = zext i1 %14 to i32, !dbg !12014
  %16 = load i32, i32* %3, align 4, !dbg !12015
  br label %17, !dbg !12014

17:                                               ; preds = %7, %1
  %18 = phi i32 [ %4, %1 ], [ %16, %7 ], !dbg !12015
  %19 = phi i32 [ 0, %1 ], [ %15, %7 ], !dbg !12003
  call void @llvm.dbg.value(metadata i32 %19, metadata !11997, metadata !DIExpression()), !dbg !12003
  %20 = and i32 %18, 2, !dbg !12017
  %21 = icmp eq i32 %20, 0, !dbg !12018
  br i1 %21, label %32, label %22, !dbg !12019

22:                                               ; preds = %17
  %23 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12020
  %24 = and i32 %23, -402653185, !dbg !12020
  %25 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 8, !dbg !12020
  %26 = load i32, i32* %25, align 4, !dbg !12020
  %27 = or i32 %24, %26, !dbg !12020
  store volatile i32 %27, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12020
  %28 = load i32, i32* %25, align 4, !dbg !12022
  %29 = icmp eq i32 %28, 0, !dbg !12024
  %30 = select i1 %29, i32 1, i32 %19, !dbg !12025
  %31 = load i32, i32* %3, align 4, !dbg !12026
  br label %32, !dbg !12025

32:                                               ; preds = %22, %17
  %33 = phi i32 [ %18, %17 ], [ %31, %22 ], !dbg !12026
  %34 = phi i32 [ %19, %17 ], [ %30, %22 ], !dbg !12003
  call void @llvm.dbg.value(metadata i32 %34, metadata !11997, metadata !DIExpression()), !dbg !12003
  %35 = and i32 %33, 4, !dbg !12028
  %36 = icmp eq i32 %35, 0, !dbg !12029
  br i1 %36, label %49, label %37, !dbg !12030

37:                                               ; preds = %32
  %38 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12031
  %39 = and i32 %38, -3145729, !dbg !12031
  %40 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !12031
  %41 = load i32, i32* %40, align 4, !dbg !12031
  %42 = or i32 %39, %41, !dbg !12031
  store volatile i32 %42, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12031
  %43 = load i32, i32* %40, align 4, !dbg !12033
  %44 = icmp eq i32 %43, 1048576, !dbg !12035
  %45 = select i1 %44, i32 1, i32 %34, !dbg !12036
  call void @llvm.dbg.value(metadata i32 %45, metadata !11997, metadata !DIExpression()), !dbg !12003
  %46 = icmp eq i32 %43, 0, !dbg !12037
  %47 = zext i1 %46 to i32, !dbg !12039
  %48 = load i32, i32* %3, align 4, !dbg !12040
  br label %49, !dbg !12039

49:                                               ; preds = %37, %32
  %50 = phi i32 [ %33, %32 ], [ %48, %37 ], !dbg !12040
  %51 = phi i32 [ %34, %32 ], [ %45, %37 ], !dbg !12003
  %52 = phi i32 [ 0, %32 ], [ %47, %37 ], !dbg !12003
  call void @llvm.dbg.value(metadata i32 %52, metadata !11998, metadata !DIExpression()), !dbg !12003
  call void @llvm.dbg.value(metadata i32 %51, metadata !11997, metadata !DIExpression()), !dbg !12003
  %53 = and i32 %50, 8, !dbg !12042
  %54 = icmp eq i32 %53, 0, !dbg !12043
  br i1 %54, label %67, label %55, !dbg !12044

55:                                               ; preds = %49
  %56 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12045
  %57 = and i32 %56, -12582913, !dbg !12045
  %58 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !12045
  %59 = load i32, i32* %58, align 4, !dbg !12045
  %60 = or i32 %57, %59, !dbg !12045
  store volatile i32 %60, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12045
  %61 = load i32, i32* %58, align 4, !dbg !12047
  %62 = icmp eq i32 %61, 4194304, !dbg !12049
  %63 = select i1 %62, i32 1, i32 %51, !dbg !12050
  call void @llvm.dbg.value(metadata i32 %63, metadata !11997, metadata !DIExpression()), !dbg !12003
  %64 = icmp eq i32 %61, 0, !dbg !12051
  %65 = select i1 %64, i32 1, i32 %52, !dbg !12053
  %66 = load i32, i32* %3, align 4, !dbg !12054
  br label %67, !dbg !12053

67:                                               ; preds = %55, %49
  %68 = phi i32 [ %50, %49 ], [ %66, %55 ], !dbg !12054
  %69 = phi i32 [ %51, %49 ], [ %63, %55 ], !dbg !12003
  %70 = phi i32 [ %52, %49 ], [ %65, %55 ], !dbg !12003
  call void @llvm.dbg.value(metadata i32 %70, metadata !11998, metadata !DIExpression()), !dbg !12003
  call void @llvm.dbg.value(metadata i32 %69, metadata !11997, metadata !DIExpression()), !dbg !12003
  %71 = and i32 %68, 32, !dbg !12055
  %72 = icmp eq i32 %71, 0, !dbg !12056
  br i1 %72, label %131, label %73, !dbg !12057

73:                                               ; preds = %67
  %74 = bitcast i32* %2 to i8*, !dbg !12058
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %74), !dbg !12058
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11999, metadata !DIExpression()), !dbg !12058
  store volatile i32 0, i32* %2, align 4, !dbg !12058
  %75 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12058
  %76 = or i32 %75, 268435456, !dbg !12058
  store volatile i32 %76, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12058
  %77 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12058
  %78 = and i32 %77, 268435456, !dbg !12058
  store volatile i32 %78, i32* %2, align 4, !dbg !12058
  %79 = load volatile i32, i32* %2, align 4, !dbg !12058
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %74), !dbg !12059
  %80 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12060
  %81 = or i32 %80, 256, !dbg !12060
  store volatile i32 %81, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12060
  %82 = tail call i32 @HAL_GetTick() #25, !dbg !12061
  call void @llvm.dbg.value(metadata i32 %82, metadata !11990, metadata !DIExpression()), !dbg !12003
  br label %83, !dbg !12062

83:                                               ; preds = %87, %73
  %84 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12063
  %85 = and i32 %84, 256, !dbg !12064
  %86 = icmp eq i32 %85, 0, !dbg !12065
  br i1 %86, label %87, label %91, !dbg !12062

87:                                               ; preds = %83
  %88 = tail call i32 @HAL_GetTick() #25, !dbg !12066
  %89 = sub i32 %88, %82, !dbg !12069
  %90 = icmp ugt i32 %89, 2, !dbg !12070
  br i1 %90, label %439, label %83, !dbg !12071, !llvm.loop !12072

91:                                               ; preds = %83
  %92 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12074
  %93 = and i32 %92, 768, !dbg !12075
  call void @llvm.dbg.value(metadata i32 %93, metadata !11991, metadata !DIExpression()), !dbg !12003
  %94 = icmp eq i32 %93, 0, !dbg !12076
  br i1 %94, label %116, label %95, !dbg !12078

95:                                               ; preds = %91
  %96 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 9, !dbg !12079
  %97 = load i32, i32* %96, align 4, !dbg !12079
  %98 = and i32 %97, 768, !dbg !12080
  %99 = icmp eq i32 %93, %98, !dbg !12081
  br i1 %99, label %116, label %100, !dbg !12082

100:                                              ; preds = %95
  %101 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12083
  %102 = and i32 %101, -769, !dbg !12085
  call void @llvm.dbg.value(metadata i32 %102, metadata !11991, metadata !DIExpression()), !dbg !12003
  store volatile i32 1, i32* inttoptr (i32 1111952960 to i32*), align 64, !dbg !12086
  store volatile i32 0, i32* inttoptr (i32 1111952960 to i32*), align 64, !dbg !12087
  store volatile i32 %102, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12088
  %103 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12089
  %104 = and i32 %103, 1, !dbg !12089
  %105 = icmp eq i32 %104, 0, !dbg !12089
  br i1 %105, label %116, label %106, !dbg !12091

106:                                              ; preds = %100
  %107 = tail call i32 @HAL_GetTick() #25, !dbg !12092
  call void @llvm.dbg.value(metadata i32 %107, metadata !11990, metadata !DIExpression()), !dbg !12003
  br label %108, !dbg !12094

108:                                              ; preds = %112, %106
  %109 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12095
  %110 = and i32 %109, 2, !dbg !12096
  %111 = icmp eq i32 %110, 0, !dbg !12096
  br i1 %111, label %112, label %116, !dbg !12094

112:                                              ; preds = %108
  %113 = tail call i32 @HAL_GetTick() #25, !dbg !12097
  %114 = sub i32 %113, %107, !dbg !12100
  %115 = icmp ugt i32 %114, 5000, !dbg !12101
  br i1 %115, label %439, label %108, !dbg !12102, !llvm.loop !12103

116:                                              ; preds = %108, %91, %95, %100
  %117 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 9, !dbg !12105
  %118 = load i32, i32* %117, align 4, !dbg !12105
  %119 = and i32 %118, 768, !dbg !12105
  %120 = icmp eq i32 %119, 768, !dbg !12105
  %121 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12105
  %122 = and i32 %121, -2031617, !dbg !12105
  %123 = and i32 %118, 268434687, !dbg !12105
  %124 = select i1 %120, i32 %123, i32 0, !dbg !12105
  %125 = or i32 %122, %124, !dbg !12105
  store volatile i32 %125, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12105
  %126 = load i32, i32* %117, align 4, !dbg !12105
  %127 = and i32 %126, 4095, !dbg !12105
  %128 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12105
  %129 = or i32 %128, %127, !dbg !12105
  store volatile i32 %129, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12105
  %130 = load i32, i32* %3, align 4, !dbg !12107
  br label %131, !dbg !12109

131:                                              ; preds = %116, %67
  %132 = phi i32 [ %130, %116 ], [ %68, %67 ], !dbg !12107
  %133 = and i32 %132, 16, !dbg !12110
  %134 = icmp eq i32 %133, 0, !dbg !12111
  br i1 %134, label %140, label %135, !dbg !12112

135:                                              ; preds = %131
  %136 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 15, !dbg !12113
  %137 = load i8, i8* %136, align 4, !dbg !12113
  %138 = zext i8 %137 to i32, !dbg !12113
  store volatile i32 %138, i32* inttoptr (i32 1111953888 to i32*), align 32, !dbg !12113
  %139 = load i32, i32* %3, align 4, !dbg !12115
  br label %140, !dbg !12117

140:                                              ; preds = %135, %131
  %141 = phi i32 [ %139, %135 ], [ %132, %131 ], !dbg !12115
  %142 = and i32 %141, 128, !dbg !12118
  %143 = icmp eq i32 %142, 0, !dbg !12119
  br i1 %143, label %151, label %144, !dbg !12120

144:                                              ; preds = %140
  %145 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12121
  %146 = and i32 %145, -12582913, !dbg !12121
  %147 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 12, !dbg !12121
  %148 = load i32, i32* %147, align 4, !dbg !12121
  %149 = or i32 %146, %148, !dbg !12121
  store volatile i32 %149, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12121
  %150 = load i32, i32* %3, align 4, !dbg !12123
  br label %151, !dbg !12125

151:                                              ; preds = %144, %140
  %152 = phi i32 [ %150, %144 ], [ %141, %140 ], !dbg !12123
  %153 = and i32 %152, 64, !dbg !12126
  %154 = icmp eq i32 %153, 0, !dbg !12127
  br i1 %154, label %162, label %155, !dbg !12128

155:                                              ; preds = %151
  %156 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12129
  %157 = and i32 %156, -67108865, !dbg !12129
  %158 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 11, !dbg !12129
  %159 = load i32, i32* %158, align 4, !dbg !12129
  %160 = or i32 %157, %159, !dbg !12129
  store volatile i32 %160, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12129
  %161 = load i32, i32* %3, align 4, !dbg !12131
  br label %162, !dbg !12133

162:                                              ; preds = %155, %151
  %163 = phi i32 [ %161, %155 ], [ %152, %151 ], !dbg !12131
  %164 = and i32 %163, 256, !dbg !12134
  %165 = icmp eq i32 %164, 0, !dbg !12135
  br i1 %165, label %176, label %166, !dbg !12136

166:                                              ; preds = %162
  %167 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12137
  %168 = and i32 %167, -134217729, !dbg !12137
  %169 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 14, !dbg !12137
  %170 = load i32, i32* %169, align 4, !dbg !12137
  %171 = or i32 %168, %170, !dbg !12137
  store volatile i32 %171, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12137
  %172 = load i32, i32* %169, align 4, !dbg !12139
  %173 = icmp eq i32 %172, 134217728, !dbg !12141
  %174 = select i1 %173, i32 1, i32 %70, !dbg !12142
  %175 = load i32, i32* %3, align 4, !dbg !12143
  br label %176, !dbg !12142

176:                                              ; preds = %166, %162
  %177 = phi i32 [ %163, %162 ], [ %175, %166 ], !dbg !12143
  %178 = phi i32 [ %70, %162 ], [ %174, %166 ], !dbg !12003
  call void @llvm.dbg.value(metadata i32 %178, metadata !11998, metadata !DIExpression()), !dbg !12003
  %179 = and i32 %177, 512, !dbg !12145
  %180 = icmp eq i32 %179, 0, !dbg !12146
  br i1 %180, label %188, label %181, !dbg !12147

181:                                              ; preds = %176
  %182 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12148
  %183 = and i32 %182, -268435457, !dbg !12148
  %184 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 10, !dbg !12148
  %185 = load i32, i32* %184, align 4, !dbg !12148
  %186 = or i32 %183, %185, !dbg !12148
  store volatile i32 %186, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12148
  %187 = load i32, i32* %3, align 4, !dbg !12150
  br label %188, !dbg !12152

188:                                              ; preds = %181, %176
  %189 = phi i32 [ %187, %181 ], [ %177, %176 ], !dbg !12150
  %190 = and i32 %189, 1024, !dbg !12153
  %191 = icmp eq i32 %190, 0, !dbg !12154
  br i1 %191, label %204, label %192, !dbg !12155

192:                                              ; preds = %188
  %193 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12156
  %194 = and i32 %193, -536870913, !dbg !12156
  %195 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 13, !dbg !12156
  %196 = load i32, i32* %195, align 4, !dbg !12156
  %197 = or i32 %194, %196, !dbg !12156
  store volatile i32 %197, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12156
  %198 = load i32, i32* %195, align 4, !dbg !12158
  %199 = icmp eq i32 %198, 536870912, !dbg !12160
  %200 = icmp eq i32 %69, 1
  %201 = select i1 %199, i1 true, i1 %200, !dbg !12161
  call void @llvm.dbg.value(metadata i32 %69, metadata !11997, metadata !DIExpression()), !dbg !12003
  br i1 %201, label %209, label %202, !dbg !12161

202:                                              ; preds = %192
  %203 = load i32, i32* %3, align 4, !dbg !12162
  br label %206, !dbg !12161

204:                                              ; preds = %188
  call void @llvm.dbg.value(metadata i32 %69, metadata !11997, metadata !DIExpression()), !dbg !12003
  %205 = icmp eq i32 %69, 1, !dbg !12164
  br i1 %205, label %209, label %206, !dbg !12165

206:                                              ; preds = %202, %204
  %207 = phi i32 [ %203, %202 ], [ %189, %204 ], !dbg !12162
  %208 = icmp eq i32 %207, 2048, !dbg !12166
  br i1 %208, label %209, label %356, !dbg !12167

209:                                              ; preds = %192, %206, %204
  store volatile i32 0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !12168
  %210 = tail call i32 @HAL_GetTick() #25, !dbg !12170
  call void @llvm.dbg.value(metadata i32 %210, metadata !11990, metadata !DIExpression()), !dbg !12003
  br label %211, !dbg !12171

211:                                              ; preds = %215, %209
  %212 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12172
  %213 = and i32 %212, 134217728, !dbg !12172
  %214 = icmp eq i32 %213, 0, !dbg !12172
  br i1 %214, label %219, label %215, !dbg !12171

215:                                              ; preds = %211
  %216 = tail call i32 @HAL_GetTick() #25, !dbg !12173
  %217 = sub i32 %216, %210, !dbg !12176
  %218 = icmp ugt i32 %217, 2, !dbg !12177
  br i1 %218, label %439, label %211, !dbg !12178, !llvm.loop !12179

219:                                              ; preds = %211
  %220 = load i32, i32* %3, align 4, !dbg !12181
  %221 = and i32 %220, 1, !dbg !12183
  %222 = icmp eq i32 %221, 0, !dbg !12184
  br i1 %222, label %227, label %223, !dbg !12185

223:                                              ; preds = %219
  %224 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 7, !dbg !12186
  %225 = load i32, i32* %224, align 4, !dbg !12186
  %226 = icmp eq i32 %225, 0, !dbg !12187
  br i1 %226, label %234, label %227, !dbg !12188

227:                                              ; preds = %223, %219
  %228 = and i32 %220, 2, !dbg !12189
  %229 = icmp eq i32 %228, 0, !dbg !12190
  br i1 %229, label %252, label %230, !dbg !12191

230:                                              ; preds = %227
  %231 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 8, !dbg !12192
  %232 = load i32, i32* %231, align 4, !dbg !12192
  %233 = icmp eq i32 %232, 0, !dbg !12193
  br i1 %233, label %234, label %252, !dbg !12194

234:                                              ; preds = %230, %223
  %235 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12195
  %236 = and i32 %235, 196608, !dbg !12197
  call void @llvm.dbg.value(metadata i32 %236, metadata !11992, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !12003
  %237 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12198
  %238 = and i32 %237, 251658240, !dbg !12199
  call void @llvm.dbg.value(metadata i32 %238, metadata !11993, metadata !DIExpression()), !dbg !12003
  %239 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !12200
  %240 = load i32, i32* %239, align 4, !dbg !12200
  %241 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !12200
  %242 = load i32, i32* %241, align 4, !dbg !12200
  %243 = shl i32 %242, 6, !dbg !12200
  %244 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 4, !dbg !12200
  %245 = load i32, i32* %244, align 4, !dbg !12200
  %246 = shl i32 %245, 28, !dbg !12200
  %247 = or i32 %240, %236, !dbg !12200
  %248 = or i32 %247, %238, !dbg !12200
  %249 = or i32 %248, %243, !dbg !12200
  %250 = or i32 %249, %246, !dbg !12200
  store volatile i32 %250, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12200
  %251 = load i32, i32* %3, align 4, !dbg !12201
  br label %252, !dbg !12203

252:                                              ; preds = %234, %230, %227
  %253 = phi i32 [ %251, %234 ], [ %220, %230 ], [ %220, %227 ], !dbg !12201
  %254 = and i32 %253, 4, !dbg !12204
  %255 = icmp eq i32 %254, 0, !dbg !12205
  br i1 %255, label %260, label %256, !dbg !12206

256:                                              ; preds = %252
  %257 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !12207
  %258 = load i32, i32* %257, align 4, !dbg !12207
  %259 = icmp eq i32 %258, 1048576, !dbg !12208
  br i1 %259, label %267, label %260, !dbg !12209

260:                                              ; preds = %256, %252
  %261 = and i32 %253, 8, !dbg !12210
  %262 = icmp eq i32 %261, 0, !dbg !12211
  br i1 %262, label %291, label %263, !dbg !12212

263:                                              ; preds = %260
  %264 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !12213
  %265 = load i32, i32* %264, align 4, !dbg !12213
  %266 = icmp eq i32 %265, 4194304, !dbg !12214
  br i1 %266, label %267, label %291, !dbg !12215

267:                                              ; preds = %263, %256
  %268 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12216
  %269 = and i32 %268, 196608, !dbg !12218
  call void @llvm.dbg.value(metadata i32 %269, metadata !11992, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !12003
  %270 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12219
  %271 = and i32 %270, 1879048192, !dbg !12220
  call void @llvm.dbg.value(metadata i32 %271, metadata !11994, metadata !DIExpression()), !dbg !12003
  %272 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !12221
  %273 = load i32, i32* %272, align 4, !dbg !12221
  %274 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !12221
  %275 = load i32, i32* %274, align 4, !dbg !12221
  %276 = shl i32 %275, 6, !dbg !12221
  %277 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 3, !dbg !12221
  %278 = load i32, i32* %277, align 4, !dbg !12221
  %279 = shl i32 %278, 24, !dbg !12221
  %280 = or i32 %273, %269, !dbg !12221
  %281 = or i32 %280, %271, !dbg !12221
  %282 = or i32 %281, %276, !dbg !12221
  %283 = or i32 %282, %279, !dbg !12221
  store volatile i32 %283, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12221
  %284 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12222
  %285 = and i32 %284, -32, !dbg !12222
  %286 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 3, !dbg !12222
  %287 = load i32, i32* %286, align 4, !dbg !12222
  %288 = add i32 %287, -1, !dbg !12222
  %289 = or i32 %288, %285, !dbg !12222
  store volatile i32 %289, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12222
  %290 = load i32, i32* %3, align 4, !dbg !12223
  br label %291, !dbg !12225

291:                                              ; preds = %267, %263, %260
  %292 = phi i32 [ %290, %267 ], [ %253, %263 ], [ %253, %260 ], !dbg !12223
  %293 = and i32 %292, 1024, !dbg !12226
  %294 = icmp eq i32 %293, 0, !dbg !12227
  br i1 %294, label %321, label %295, !dbg !12228

295:                                              ; preds = %291
  %296 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 13, !dbg !12229
  %297 = load i32, i32* %296, align 4, !dbg !12229
  %298 = icmp eq i32 %297, 536870912, !dbg !12230
  br i1 %298, label %299, label %321, !dbg !12231

299:                                              ; preds = %295
  %300 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12232
  call void @llvm.dbg.value(metadata i32 %300, metadata !11993, metadata !DIExpression(DW_OP_constu, 15, DW_OP_shr, DW_OP_constu, 6, DW_OP_and, DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !12003
  %301 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12234
  %302 = and i32 %301, 1879048192, !dbg !12235
  call void @llvm.dbg.value(metadata i32 %302, metadata !11994, metadata !DIExpression()), !dbg !12003
  %303 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !12236
  %304 = load i32, i32* %303, align 4, !dbg !12236
  %305 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !12236
  %306 = load i32, i32* %305, align 4, !dbg !12236
  %307 = shl i32 %306, 6, !dbg !12236
  %308 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 2, !dbg !12236
  %309 = load i32, i32* %308, align 4, !dbg !12236
  %310 = shl i32 %309, 15, !dbg !12236
  %311 = add i32 %310, -65536, !dbg !12236
  %312 = and i32 %311, -65536, !dbg !12236
  %313 = shl i32 %300, 9, !dbg !12236
  %314 = and i32 %313, 100663296, !dbg !12236
  %315 = add nuw nsw i32 %314, 33554432, !dbg !12236
  %316 = or i32 %302, %304, !dbg !12236
  %317 = or i32 %316, %315, !dbg !12236
  %318 = or i32 %317, %307, !dbg !12236
  %319 = or i32 %318, %312, !dbg !12236
  store volatile i32 %319, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12236
  %320 = load i32, i32* %3, align 4, !dbg !12237
  br label %321, !dbg !12239

321:                                              ; preds = %299, %295, %291
  %322 = phi i32 [ %320, %299 ], [ %292, %295 ], [ %292, %291 ], !dbg !12237
  %323 = and i32 %322, 2048, !dbg !12240
  %324 = icmp eq i32 %323, 0, !dbg !12241
  br i1 %324, label %346, label %325, !dbg !12242

325:                                              ; preds = %321
  %326 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !12243
  %327 = load i32, i32* %326, align 4, !dbg !12243
  %328 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !12243
  %329 = load i32, i32* %328, align 4, !dbg !12243
  %330 = shl i32 %329, 6, !dbg !12243
  %331 = or i32 %330, %327, !dbg !12243
  %332 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 2, !dbg !12243
  %333 = load i32, i32* %332, align 4, !dbg !12243
  %334 = shl i32 %333, 15, !dbg !12243
  %335 = add i32 %334, -65536, !dbg !12243
  %336 = and i32 %335, -65536, !dbg !12243
  %337 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 3, !dbg !12243
  %338 = load i32, i32* %337, align 4, !dbg !12243
  %339 = shl i32 %338, 24, !dbg !12243
  %340 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 4, !dbg !12243
  %341 = load i32, i32* %340, align 4, !dbg !12243
  %342 = shl i32 %341, 28, !dbg !12243
  %343 = or i32 %331, %339, !dbg !12243
  %344 = or i32 %343, %336, !dbg !12243
  %345 = or i32 %344, %342, !dbg !12243
  store volatile i32 %345, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12243
  br label %346, !dbg !12245

346:                                              ; preds = %325, %321
  store volatile i32 1, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !12246
  %347 = tail call i32 @HAL_GetTick() #25, !dbg !12247
  call void @llvm.dbg.value(metadata i32 %347, metadata !11990, metadata !DIExpression()), !dbg !12003
  br label %348, !dbg !12248

348:                                              ; preds = %352, %346
  %349 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12249
  %350 = and i32 %349, 134217728, !dbg !12250
  %351 = icmp eq i32 %350, 0, !dbg !12250
  br i1 %351, label %352, label %356, !dbg !12248

352:                                              ; preds = %348
  %353 = tail call i32 @HAL_GetTick() #25, !dbg !12251
  %354 = sub i32 %353, %347, !dbg !12254
  %355 = icmp ugt i32 %354, 2, !dbg !12255
  br i1 %355, label %439, label %348, !dbg !12256, !llvm.loop !12257

356:                                              ; preds = %348, %206
  %357 = icmp eq i32 %178, 1, !dbg !12259
  br i1 %357, label %358, label %439, !dbg !12261

358:                                              ; preds = %356
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !12262
  %359 = tail call i32 @HAL_GetTick() #25, !dbg !12264
  call void @llvm.dbg.value(metadata i32 %359, metadata !11990, metadata !DIExpression()), !dbg !12003
  br label %360, !dbg !12265

360:                                              ; preds = %364, %358
  %361 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12266
  %362 = and i32 %361, 536870912, !dbg !12266
  %363 = icmp eq i32 %362, 0, !dbg !12266
  br i1 %363, label %368, label %364, !dbg !12265

364:                                              ; preds = %360
  %365 = tail call i32 @HAL_GetTick() #25, !dbg !12267
  %366 = sub i32 %365, %359, !dbg !12270
  %367 = icmp ugt i32 %366, 2, !dbg !12271
  br i1 %367, label %439, label %360, !dbg !12272, !llvm.loop !12273

368:                                              ; preds = %360
  %369 = load i32, i32* %3, align 4, !dbg !12275
  %370 = and i32 %369, 4, !dbg !12277
  %371 = icmp eq i32 %370, 0, !dbg !12278
  br i1 %371, label %376, label %372, !dbg !12279

372:                                              ; preds = %368
  %373 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !12280
  %374 = load i32, i32* %373, align 4, !dbg !12280
  %375 = icmp eq i32 %374, 0, !dbg !12281
  br i1 %375, label %383, label %376, !dbg !12282

376:                                              ; preds = %372, %368
  %377 = and i32 %369, 8, !dbg !12283
  %378 = icmp eq i32 %377, 0, !dbg !12284
  br i1 %378, label %405, label %379, !dbg !12285

379:                                              ; preds = %376
  %380 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !12286
  %381 = load i32, i32* %380, align 4, !dbg !12286
  %382 = icmp eq i32 %381, 0, !dbg !12287
  br i1 %382, label %383, label %405, !dbg !12288

383:                                              ; preds = %379, %372
  %384 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12289
  %385 = and i32 %384, 196608, !dbg !12291
  call void @llvm.dbg.value(metadata i32 %385, metadata !11995, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !12003
  %386 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 0, !dbg !12292
  %387 = load i32, i32* %386, align 4, !dbg !12292
  %388 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 1, !dbg !12292
  %389 = load i32, i32* %388, align 4, !dbg !12292
  %390 = shl i32 %389, 6, !dbg !12292
  %391 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 3, !dbg !12292
  %392 = load i32, i32* %391, align 4, !dbg !12292
  %393 = shl i32 %392, 24, !dbg !12292
  %394 = or i32 %385, %387, !dbg !12292
  %395 = or i32 %394, %390, !dbg !12292
  %396 = or i32 %395, %393, !dbg !12292
  store volatile i32 %396, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12292
  %397 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12293
  %398 = and i32 %397, -7937, !dbg !12293
  %399 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 4, !dbg !12293
  %400 = load i32, i32* %399, align 4, !dbg !12293
  %401 = shl i32 %400, 8, !dbg !12293
  %402 = add i32 %401, -256, !dbg !12293
  %403 = or i32 %402, %398, !dbg !12293
  store volatile i32 %403, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12293
  %404 = load i32, i32* %3, align 4, !dbg !12294
  br label %405, !dbg !12296

405:                                              ; preds = %383, %379, %376
  %406 = phi i32 [ %404, %383 ], [ %369, %379 ], [ %369, %376 ], !dbg !12294
  %407 = and i32 %406, 256, !dbg !12297
  %408 = icmp eq i32 %407, 0, !dbg !12298
  br i1 %408, label %429, label %409, !dbg !12299

409:                                              ; preds = %405
  %410 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 14, !dbg !12300
  %411 = load i32, i32* %410, align 4, !dbg !12300
  %412 = icmp eq i32 %411, 134217728, !dbg !12301
  br i1 %412, label %413, label %429, !dbg !12302

413:                                              ; preds = %409
  %414 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12303
  %415 = and i32 %414, 251658240, !dbg !12305
  call void @llvm.dbg.value(metadata i32 %415, metadata !11996, metadata !DIExpression()), !dbg !12003
  %416 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 0, !dbg !12306
  %417 = load i32, i32* %416, align 4, !dbg !12306
  %418 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 1, !dbg !12306
  %419 = load i32, i32* %418, align 4, !dbg !12306
  %420 = shl i32 %419, 6, !dbg !12306
  %421 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 2, !dbg !12306
  %422 = load i32, i32* %421, align 4, !dbg !12306
  %423 = shl i32 %422, 15, !dbg !12306
  %424 = add i32 %423, -65536, !dbg !12306
  %425 = and i32 %424, -65536, !dbg !12306
  %426 = or i32 %415, %417, !dbg !12306
  %427 = or i32 %426, %420, !dbg !12306
  %428 = or i32 %427, %425, !dbg !12306
  store volatile i32 %428, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12306
  br label %429, !dbg !12307

429:                                              ; preds = %413, %409, %405
  store volatile i32 1, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !12308
  %430 = tail call i32 @HAL_GetTick() #25, !dbg !12309
  call void @llvm.dbg.value(metadata i32 %430, metadata !11990, metadata !DIExpression()), !dbg !12003
  br label %431, !dbg !12310

431:                                              ; preds = %435, %429
  %432 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12311
  %433 = and i32 %432, 536870912, !dbg !12312
  %434 = icmp eq i32 %433, 0, !dbg !12312
  br i1 %434, label %435, label %439, !dbg !12310

435:                                              ; preds = %431
  %436 = tail call i32 @HAL_GetTick() #25, !dbg !12313
  %437 = sub i32 %436, %430, !dbg !12316
  %438 = icmp ugt i32 %437, 2, !dbg !12317
  br i1 %438, label %439, label %431, !dbg !12318, !llvm.loop !12319

439:                                              ; preds = %87, %112, %215, %352, %364, %431, %435, %356
  %440 = phi i32 [ 0, %356 ], [ 0, %431 ], [ 3, %435 ], [ 3, %364 ], [ 3, %352 ], [ 3, %215 ], [ 3, %112 ], [ 3, %87 ], !dbg !12003
  ret i32 %440, !dbg !12321
}

; Function Attrs: optsize
declare !dbg !12322 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCCEx_GetPeriphCLKConfig(%struct.RCC_PeriphCLKInitTypeDef* noundef writeonly %0) local_unnamed_addr #15 !dbg !12324 {
  call void @llvm.dbg.value(metadata %struct.RCC_PeriphCLKInitTypeDef* %0, metadata !12328, metadata !DIExpression()), !dbg !12330
  %2 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 0, !dbg !12331
  store i32 2047, i32* %2, align 4, !dbg !12332
  %3 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12333
  %4 = and i32 %3, 63, !dbg !12334
  %5 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !12335
  store i32 %4, i32* %5, align 4, !dbg !12336
  %6 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12337
  %7 = lshr i32 %6, 6, !dbg !12338
  %8 = and i32 %7, 511, !dbg !12338
  %9 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !12339
  store i32 %8, i32* %9, align 4, !dbg !12340
  %10 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12341
  %11 = lshr i32 %10, 15, !dbg !12342
  %12 = and i32 %11, 6, !dbg !12342
  %13 = add nuw nsw i32 %12, 2, !dbg !12342
  %14 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 2, !dbg !12343
  store i32 %13, i32* %14, align 4, !dbg !12344
  %15 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12345
  %16 = lshr i32 %15, 24, !dbg !12346
  %17 = and i32 %16, 15, !dbg !12346
  %18 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 3, !dbg !12347
  store i32 %17, i32* %18, align 4, !dbg !12348
  %19 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12349
  %20 = lshr i32 %19, 28, !dbg !12350
  %21 = and i32 %20, 7, !dbg !12350
  %22 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 4, !dbg !12351
  store i32 %21, i32* %22, align 4, !dbg !12352
  %23 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12353
  %24 = and i32 %23, 63, !dbg !12354
  %25 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 0, !dbg !12355
  store i32 %24, i32* %25, align 4, !dbg !12356
  %26 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12357
  %27 = lshr i32 %26, 6, !dbg !12358
  %28 = and i32 %27, 511, !dbg !12358
  %29 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 1, !dbg !12359
  store i32 %28, i32* %29, align 4, !dbg !12360
  %30 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12361
  %31 = lshr i32 %30, 15, !dbg !12362
  %32 = and i32 %31, 6, !dbg !12362
  %33 = add nuw nsw i32 %32, 2, !dbg !12362
  %34 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 2, !dbg !12363
  store i32 %33, i32* %34, align 4, !dbg !12364
  %35 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12365
  %36 = lshr i32 %35, 24, !dbg !12366
  %37 = and i32 %36, 15, !dbg !12366
  %38 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 3, !dbg !12367
  store i32 %37, i32* %38, align 4, !dbg !12368
  %39 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12369
  %40 = and i32 %39, 31, !dbg !12370
  %41 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 3, !dbg !12371
  store i32 %40, i32* %41, align 4, !dbg !12372
  %42 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12373
  %43 = lshr i32 %42, 8, !dbg !12374
  %44 = and i32 %43, 31, !dbg !12374
  %45 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 4, !dbg !12375
  store i32 %44, i32* %45, align 4, !dbg !12376
  %46 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12377
  %47 = and i32 %46, 3145728, !dbg !12377
  %48 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !12378
  store i32 %47, i32* %48, align 4, !dbg !12379
  %49 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12380
  %50 = and i32 %49, 12582912, !dbg !12380
  %51 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !12381
  store i32 %50, i32* %51, align 4, !dbg !12382
  %52 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12383
  %53 = and i32 %52, 100663296, !dbg !12383
  %54 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 7, !dbg !12384
  store i32 %53, i32* %54, align 4, !dbg !12385
  %55 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12386
  %56 = and i32 %55, 402653184, !dbg !12386
  %57 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 8, !dbg !12387
  store i32 %56, i32* %57, align 4, !dbg !12388
  %58 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12389
  %59 = and i32 %58, 2031616, !dbg !12390
  call void @llvm.dbg.value(metadata i32 %59, metadata !12329, metadata !DIExpression()), !dbg !12330
  %60 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12391
  %61 = and i32 %60, 768, !dbg !12392
  %62 = or i32 %61, %59, !dbg !12393
  %63 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 9, !dbg !12394
  store i32 %62, i32* %63, align 4, !dbg !12395
  %64 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12396
  %65 = and i32 %64, 67108864, !dbg !12396
  %66 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 11, !dbg !12397
  store i32 %65, i32* %66, align 4, !dbg !12398
  %67 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12399
  %68 = and i32 %67, 12582912, !dbg !12399
  %69 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 12, !dbg !12400
  store i32 %68, i32* %69, align 4, !dbg !12401
  %70 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12402
  %71 = and i32 %70, 134217728, !dbg !12402
  %72 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 14, !dbg !12403
  store i32 %71, i32* %72, align 4, !dbg !12404
  %73 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12405
  %74 = and i32 %73, 268435456, !dbg !12405
  %75 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 10, !dbg !12406
  store i32 %74, i32* %75, align 4, !dbg !12407
  %76 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12408
  %77 = and i32 %76, 536870912, !dbg !12408
  %78 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 13, !dbg !12409
  store i32 %77, i32* %78, align 4, !dbg !12410
  %79 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12411
  %80 = lshr i32 %79, 24, !dbg !12413
  %81 = trunc i32 %80 to i8, !dbg !12413
  %82 = and i8 %81, 1, !dbg !12413
  %83 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 15, !dbg !12414
  store i8 %82, i8* %83, align 4, !dbg !12416
  ret void, !dbg !12417
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCCEx_GetPeriphCLKFreq(i32 noundef %0) local_unnamed_addr #15 !dbg !12418 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12420, metadata !DIExpression()), !dbg !12427
  call void @llvm.dbg.value(metadata i32 0, metadata !12421, metadata !DIExpression()), !dbg !12427
  call void @llvm.dbg.value(metadata i32 0, metadata !12422, metadata !DIExpression()), !dbg !12427
  call void @llvm.dbg.value(metadata i32 0, metadata !12423, metadata !DIExpression()), !dbg !12427
  call void @llvm.dbg.value(metadata i32 0, metadata !12424, metadata !DIExpression()), !dbg !12427
  call void @llvm.dbg.value(metadata i32 0, metadata !12425, metadata !DIExpression()), !dbg !12427
  call void @llvm.dbg.value(metadata i32 0, metadata !12426, metadata !DIExpression()), !dbg !12427
  switch i32 %0, label %123 [
    i32 4, label %2
    i32 8, label %2
    i32 1, label %57
    i32 2, label %90
  ], !dbg !12428

2:                                                ; preds = %1, %1
  %3 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12429
  call void @llvm.dbg.value(metadata i32 %3, metadata !12424, metadata !DIExpression()), !dbg !12427
  call void @llvm.dbg.value(metadata i32 %3, metadata !12424, metadata !DIExpression(DW_OP_constu, 15728640, DW_OP_and, DW_OP_stack_value)), !dbg !12427
  %4 = lshr i32 %3, 20, !dbg !12432
  %5 = and i32 %4, 15, !dbg !12432
  switch i32 %5, label %123 [
    i32 0, label %6
    i32 1, label %24
    i32 4, label %24
    i32 2, label %41
    i32 8, label %41
    i32 3, label %54
    i32 12, label %55
  ], !dbg !12432

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12433
  call void @llvm.dbg.value(metadata i32 undef, metadata !12423, metadata !DIExpression()), !dbg !12427
  call void @llvm.dbg.value(metadata i32 undef, metadata !12423, metadata !DIExpression()), !dbg !12427
  %8 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12437
  %9 = and i32 %8, 63, !dbg !12437
  %10 = udiv i32 16000000, %9, !dbg !12437
  call void @llvm.dbg.value(metadata i32 %10, metadata !12423, metadata !DIExpression()), !dbg !12427
  %11 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12438
  %12 = lshr i32 %11, 24, !dbg !12439
  %13 = and i32 %12, 15, !dbg !12439
  call void @llvm.dbg.value(metadata i32 %13, metadata !12421, metadata !DIExpression()), !dbg !12427
  %14 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12440
  %15 = lshr i32 %14, 6, !dbg !12441
  %16 = and i32 %15, 511, !dbg !12441
  %17 = mul i32 %16, %10, !dbg !12442
  %18 = udiv i32 %17, %13, !dbg !12443
  call void @llvm.dbg.value(metadata i32 %18, metadata !12422, metadata !DIExpression()), !dbg !12427
  %19 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12444
  %20 = lshr i32 %19, 8, !dbg !12445
  %21 = and i32 %20, 31, !dbg !12445
  %22 = add nuw nsw i32 %21, 1, !dbg !12446
  call void @llvm.dbg.value(metadata i32 %22, metadata !12421, metadata !DIExpression()), !dbg !12427
  %23 = udiv i32 %18, %22, !dbg !12447
  call void @llvm.dbg.value(metadata i32 %23, metadata !12422, metadata !DIExpression()), !dbg !12427
  br label %123, !dbg !12448

24:                                               ; preds = %2, %2
  %25 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12449
  call void @llvm.dbg.value(metadata i32 undef, metadata !12423, metadata !DIExpression()), !dbg !12427
  call void @llvm.dbg.value(metadata i32 undef, metadata !12423, metadata !DIExpression()), !dbg !12427
  %26 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12452
  %27 = and i32 %26, 63, !dbg !12452
  %28 = udiv i32 16000000, %27, !dbg !12452
  call void @llvm.dbg.value(metadata i32 %28, metadata !12423, metadata !DIExpression()), !dbg !12427
  %29 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12453
  %30 = lshr i32 %29, 24, !dbg !12454
  %31 = and i32 %30, 15, !dbg !12454
  call void @llvm.dbg.value(metadata i32 %31, metadata !12421, metadata !DIExpression()), !dbg !12427
  %32 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12455
  %33 = lshr i32 %32, 6, !dbg !12456
  %34 = and i32 %33, 511, !dbg !12456
  %35 = mul i32 %34, %28, !dbg !12457
  %36 = udiv i32 %35, %31, !dbg !12458
  call void @llvm.dbg.value(metadata i32 %36, metadata !12422, metadata !DIExpression()), !dbg !12427
  %37 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12459
  %38 = and i32 %37, 31, !dbg !12460
  %39 = add nuw nsw i32 %38, 1, !dbg !12461
  call void @llvm.dbg.value(metadata i32 %39, metadata !12421, metadata !DIExpression()), !dbg !12427
  %40 = udiv i32 %36, %39, !dbg !12462
  call void @llvm.dbg.value(metadata i32 %40, metadata !12422, metadata !DIExpression()), !dbg !12427
  br label %123, !dbg !12463

41:                                               ; preds = %2, %2
  %42 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12464
  call void @llvm.dbg.value(metadata i32 undef, metadata !12423, metadata !DIExpression()), !dbg !12427
  call void @llvm.dbg.value(metadata i32 undef, metadata !12423, metadata !DIExpression()), !dbg !12427
  %43 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12467
  %44 = and i32 %43, 63, !dbg !12467
  %45 = udiv i32 16000000, %44, !dbg !12467
  call void @llvm.dbg.value(metadata i32 %45, metadata !12423, metadata !DIExpression()), !dbg !12427
  %46 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12468
  %47 = lshr i32 %46, 28, !dbg !12469
  %48 = and i32 %47, 7, !dbg !12469
  call void @llvm.dbg.value(metadata i32 %48, metadata !12421, metadata !DIExpression()), !dbg !12427
  %49 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12470
  %50 = lshr i32 %49, 6, !dbg !12471
  %51 = and i32 %50, 511, !dbg !12471
  %52 = mul i32 %51, %45, !dbg !12472
  %53 = udiv i32 %52, %48, !dbg !12473
  call void @llvm.dbg.value(metadata i32 %53, metadata !12422, metadata !DIExpression()), !dbg !12427
  br label %123, !dbg !12474

54:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 12288000, metadata !12422, metadata !DIExpression()), !dbg !12427
  br label %123, !dbg !12475

55:                                               ; preds = %2
  %56 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12477
  call void @llvm.dbg.value(metadata i32 16000000, metadata !12422, metadata !DIExpression()), !dbg !12427
  call void @llvm.dbg.value(metadata i32 16000000, metadata !12422, metadata !DIExpression()), !dbg !12427
  br label %123

57:                                               ; preds = %1
  %58 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12480
  call void @llvm.dbg.value(metadata i32 %58, metadata !12425, metadata !DIExpression(DW_OP_constu, 100663296, DW_OP_and, DW_OP_stack_value)), !dbg !12427
  %59 = lshr i32 %58, 25, !dbg !12482
  %60 = and i32 %59, 3, !dbg !12482
  switch i32 %60, label %89 [
    i32 1, label %123
    i32 0, label %61
    i32 2, label %74
    i32 3, label %87
  ], !dbg !12482

61:                                               ; preds = %57
  %62 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12483
  call void @llvm.dbg.value(metadata i32 undef, metadata !12423, metadata !DIExpression()), !dbg !12427
  call void @llvm.dbg.value(metadata i32 undef, metadata !12423, metadata !DIExpression()), !dbg !12427
  %63 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12487
  %64 = and i32 %63, 63, !dbg !12487
  %65 = udiv i32 16000000, %64, !dbg !12487
  call void @llvm.dbg.value(metadata i32 %65, metadata !12423, metadata !DIExpression()), !dbg !12427
  %66 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12488
  %67 = lshr i32 %66, 6, !dbg !12489
  %68 = and i32 %67, 511, !dbg !12489
  %69 = mul i32 %68, %65, !dbg !12490
  call void @llvm.dbg.value(metadata i32 %69, metadata !12426, metadata !DIExpression()), !dbg !12427
  %70 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12491
  %71 = lshr i32 %70, 28, !dbg !12492
  %72 = and i32 %71, 7, !dbg !12492
  %73 = udiv i32 %69, %72, !dbg !12493
  call void @llvm.dbg.value(metadata i32 %73, metadata !12422, metadata !DIExpression()), !dbg !12427
  br label %123, !dbg !12494

74:                                               ; preds = %57
  %75 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12495
  call void @llvm.dbg.value(metadata i32 undef, metadata !12423, metadata !DIExpression()), !dbg !12427
  call void @llvm.dbg.value(metadata i32 undef, metadata !12423, metadata !DIExpression()), !dbg !12427
  %76 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12498
  %77 = and i32 %76, 63, !dbg !12498
  %78 = udiv i32 16000000, %77, !dbg !12498
  call void @llvm.dbg.value(metadata i32 %78, metadata !12423, metadata !DIExpression()), !dbg !12427
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12499
  %80 = lshr i32 %79, 6, !dbg !12500
  %81 = and i32 %80, 511, !dbg !12500
  %82 = mul i32 %81, %78, !dbg !12501
  call void @llvm.dbg.value(metadata i32 %82, metadata !12426, metadata !DIExpression()), !dbg !12427
  %83 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12502
  %84 = lshr i32 %83, 28, !dbg !12503
  %85 = and i32 %84, 7, !dbg !12503
  %86 = udiv i32 %82, %85, !dbg !12504
  call void @llvm.dbg.value(metadata i32 %86, metadata !12422, metadata !DIExpression()), !dbg !12427
  br label %123, !dbg !12505

87:                                               ; preds = %57
  %88 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12506
  call void @llvm.dbg.value(metadata i32 16000000, metadata !12422, metadata !DIExpression()), !dbg !12427
  call void @llvm.dbg.value(metadata i32 16000000, metadata !12422, metadata !DIExpression()), !dbg !12427
  br label %123

89:                                               ; preds = %57
  unreachable

90:                                               ; preds = %1
  %91 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12509
  call void @llvm.dbg.value(metadata i32 %91, metadata !12425, metadata !DIExpression(DW_OP_constu, 402653184, DW_OP_and, DW_OP_stack_value)), !dbg !12427
  %92 = lshr i32 %91, 27, !dbg !12511
  %93 = and i32 %92, 3, !dbg !12511
  switch i32 %93, label %122 [
    i32 1, label %123
    i32 0, label %94
    i32 2, label %107
    i32 3, label %120
  ], !dbg !12511

94:                                               ; preds = %90
  %95 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12512
  call void @llvm.dbg.value(metadata i32 undef, metadata !12423, metadata !DIExpression()), !dbg !12427
  call void @llvm.dbg.value(metadata i32 undef, metadata !12423, metadata !DIExpression()), !dbg !12427
  %96 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12516
  %97 = and i32 %96, 63, !dbg !12516
  %98 = udiv i32 16000000, %97, !dbg !12516
  call void @llvm.dbg.value(metadata i32 %98, metadata !12423, metadata !DIExpression()), !dbg !12427
  %99 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12517
  %100 = lshr i32 %99, 6, !dbg !12518
  %101 = and i32 %100, 511, !dbg !12518
  %102 = mul i32 %101, %98, !dbg !12519
  call void @llvm.dbg.value(metadata i32 %102, metadata !12426, metadata !DIExpression()), !dbg !12427
  %103 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12520
  %104 = lshr i32 %103, 28, !dbg !12521
  %105 = and i32 %104, 7, !dbg !12521
  %106 = udiv i32 %102, %105, !dbg !12522
  call void @llvm.dbg.value(metadata i32 %106, metadata !12422, metadata !DIExpression()), !dbg !12427
  br label %123, !dbg !12523

107:                                              ; preds = %90
  %108 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12524
  call void @llvm.dbg.value(metadata i32 undef, metadata !12423, metadata !DIExpression()), !dbg !12427
  call void @llvm.dbg.value(metadata i32 undef, metadata !12423, metadata !DIExpression()), !dbg !12427
  %109 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12527
  %110 = and i32 %109, 63, !dbg !12527
  %111 = udiv i32 16000000, %110, !dbg !12527
  call void @llvm.dbg.value(metadata i32 %111, metadata !12423, metadata !DIExpression()), !dbg !12427
  %112 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12528
  %113 = lshr i32 %112, 6, !dbg !12529
  %114 = and i32 %113, 511, !dbg !12529
  %115 = mul i32 %114, %111, !dbg !12530
  call void @llvm.dbg.value(metadata i32 %115, metadata !12426, metadata !DIExpression()), !dbg !12427
  %116 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12531
  %117 = lshr i32 %116, 28, !dbg !12532
  %118 = and i32 %117, 7, !dbg !12532
  %119 = udiv i32 %115, %118, !dbg !12533
  call void @llvm.dbg.value(metadata i32 %119, metadata !12422, metadata !DIExpression()), !dbg !12427
  br label %123, !dbg !12534

120:                                              ; preds = %90
  %121 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12535
  call void @llvm.dbg.value(metadata i32 16000000, metadata !12422, metadata !DIExpression()), !dbg !12427
  call void @llvm.dbg.value(metadata i32 16000000, metadata !12422, metadata !DIExpression()), !dbg !12427
  br label %123

122:                                              ; preds = %90
  unreachable

123:                                              ; preds = %120, %90, %87, %57, %55, %94, %107, %61, %74, %6, %24, %41, %54, %2, %1
  %124 = phi i32 [ 0, %1 ], [ %119, %107 ], [ %106, %94 ], [ %86, %74 ], [ %73, %61 ], [ 0, %2 ], [ 12288000, %54 ], [ %53, %41 ], [ %40, %24 ], [ %23, %6 ], [ 16000000, %55 ], [ 12288000, %57 ], [ 16000000, %87 ], [ 12288000, %90 ], [ 16000000, %120 ], !dbg !12427
  call void @llvm.dbg.value(metadata i32 %124, metadata !12422, metadata !DIExpression()), !dbg !12427
  ret i32 %124, !dbg !12538
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCCEx_SelectLSEMode(i8 noundef zeroext %0) local_unnamed_addr #14 !dbg !12539 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !12543, metadata !DIExpression()), !dbg !12544
  %2 = icmp eq i8 %0, 1, !dbg !12545
  %3 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12547
  %4 = and i32 %3, -9, !dbg !12548
  %5 = select i1 %2, i32 8, i32 0, !dbg !12548
  %6 = or i32 %4, %5, !dbg !12548
  store volatile i32 %6, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12547
  ret void, !dbg !12549
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_EnablePLLI2S(%struct.ztest_unit_test_stats* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !12550 {
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test_stats* %0, metadata !12555, metadata !DIExpression()), !dbg !12557
  store volatile i32 0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !12558
  %2 = tail call i32 @HAL_GetTick() #25, !dbg !12559
  call void @llvm.dbg.value(metadata i32 %2, metadata !12556, metadata !DIExpression()), !dbg !12557
  br label %3, !dbg !12560

3:                                                ; preds = %7, %1
  %4 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12561
  %5 = and i32 %4, 134217728, !dbg !12561
  %6 = icmp eq i32 %5, 0, !dbg !12561
  br i1 %6, label %11, label %7, !dbg !12560

7:                                                ; preds = %3
  %8 = tail call i32 @HAL_GetTick() #25, !dbg !12562
  %9 = sub i32 %8, %2, !dbg !12565
  %10 = icmp ugt i32 %9, 2, !dbg !12566
  br i1 %10, label %41, label %3, !dbg !12567, !llvm.loop !12568

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 0, !dbg !12570
  %13 = load i32, i32* %12, align 4, !dbg !12570
  %14 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 1, !dbg !12570
  %15 = load i32, i32* %14, align 4, !dbg !12570
  %16 = shl i32 %15, 6, !dbg !12570
  %17 = or i32 %16, %13, !dbg !12570
  %18 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 2, !dbg !12570
  %19 = load i32, i32* %18, align 4, !dbg !12570
  %20 = shl i32 %19, 15, !dbg !12570
  %21 = add i32 %20, -65536, !dbg !12570
  %22 = and i32 %21, -65536, !dbg !12570
  %23 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 3, !dbg !12570
  %24 = load i32, i32* %23, align 4, !dbg !12570
  %25 = shl i32 %24, 24, !dbg !12570
  %26 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 4, !dbg !12570
  %27 = load i32, i32* %26, align 4, !dbg !12570
  %28 = shl i32 %27, 28, !dbg !12570
  %29 = or i32 %17, %25, !dbg !12570
  %30 = or i32 %29, %22, !dbg !12570
  %31 = or i32 %30, %28, !dbg !12570
  store volatile i32 %31, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12570
  store volatile i32 1, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !12571
  %32 = tail call i32 @HAL_GetTick() #25, !dbg !12572
  call void @llvm.dbg.value(metadata i32 %32, metadata !12556, metadata !DIExpression()), !dbg !12557
  br label %33, !dbg !12573

33:                                               ; preds = %37, %11
  %34 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12574
  %35 = and i32 %34, 134217728, !dbg !12575
  %36 = icmp eq i32 %35, 0, !dbg !12575
  br i1 %36, label %37, label %41, !dbg !12573

37:                                               ; preds = %33
  %38 = tail call i32 @HAL_GetTick() #25, !dbg !12576
  %39 = sub i32 %38, %32, !dbg !12579
  %40 = icmp ugt i32 %39, 2, !dbg !12580
  br i1 %40, label %41, label %33, !dbg !12581, !llvm.loop !12582

41:                                               ; preds = %7, %33, %37
  %42 = phi i32 [ 0, %33 ], [ 3, %37 ], [ 3, %7 ], !dbg !12557
  ret i32 %42, !dbg !12584
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_DisablePLLI2S() local_unnamed_addr #1 !dbg !12585 {
  store volatile i32 0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !12590
  %1 = tail call i32 @HAL_GetTick() #25, !dbg !12591
  call void @llvm.dbg.value(metadata i32 %1, metadata !12589, metadata !DIExpression()), !dbg !12592
  br label %2, !dbg !12593

2:                                                ; preds = %6, %0
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12594
  %4 = and i32 %3, 134217728, !dbg !12594
  %5 = icmp eq i32 %4, 0, !dbg !12595
  br i1 %5, label %10, label %6, !dbg !12593

6:                                                ; preds = %2
  %7 = tail call i32 @HAL_GetTick() #25, !dbg !12596
  %8 = sub i32 %7, %1, !dbg !12599
  %9 = icmp ugt i32 %8, 2, !dbg !12600
  br i1 %9, label %10, label %2, !dbg !12601, !llvm.loop !12602

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 3, %6 ], [ 0, %2 ], !dbg !12592
  ret i32 %11, !dbg !12604
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_EnablePLLSAI(%struct.RCC_PLLSAIInitTypeDef* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !12605 {
  call void @llvm.dbg.value(metadata %struct.RCC_PLLSAIInitTypeDef* %0, metadata !12610, metadata !DIExpression()), !dbg !12612
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !12613
  %2 = tail call i32 @HAL_GetTick() #25, !dbg !12614
  call void @llvm.dbg.value(metadata i32 %2, metadata !12611, metadata !DIExpression()), !dbg !12612
  br label %3, !dbg !12615

3:                                                ; preds = %7, %1
  %4 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12616
  %5 = and i32 %4, 536870912, !dbg !12616
  %6 = icmp eq i32 %5, 0, !dbg !12616
  br i1 %6, label %11, label %7, !dbg !12615

7:                                                ; preds = %3
  %8 = tail call i32 @HAL_GetTick() #25, !dbg !12617
  %9 = sub i32 %8, %2, !dbg !12620
  %10 = icmp ugt i32 %9, 2, !dbg !12621
  br i1 %10, label %37, label %3, !dbg !12622, !llvm.loop !12623

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 0, !dbg !12625
  %13 = load i32, i32* %12, align 4, !dbg !12625
  %14 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 1, !dbg !12625
  %15 = load i32, i32* %14, align 4, !dbg !12625
  %16 = shl i32 %15, 6, !dbg !12625
  %17 = or i32 %16, %13, !dbg !12625
  %18 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 2, !dbg !12625
  %19 = load i32, i32* %18, align 4, !dbg !12625
  %20 = shl i32 %19, 15, !dbg !12625
  %21 = add i32 %20, -65536, !dbg !12625
  %22 = and i32 %21, -65536, !dbg !12625
  %23 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 3, !dbg !12625
  %24 = load i32, i32* %23, align 4, !dbg !12625
  %25 = shl i32 %24, 24, !dbg !12625
  %26 = or i32 %17, %25, !dbg !12625
  %27 = or i32 %26, %22, !dbg !12625
  store volatile i32 %27, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12625
  store volatile i32 1, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !12626
  %28 = tail call i32 @HAL_GetTick() #25, !dbg !12627
  call void @llvm.dbg.value(metadata i32 %28, metadata !12611, metadata !DIExpression()), !dbg !12612
  br label %29, !dbg !12628

29:                                               ; preds = %33, %11
  %30 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12629
  %31 = and i32 %30, 536870912, !dbg !12630
  %32 = icmp eq i32 %31, 0, !dbg !12630
  br i1 %32, label %33, label %37, !dbg !12628

33:                                               ; preds = %29
  %34 = tail call i32 @HAL_GetTick() #25, !dbg !12631
  %35 = sub i32 %34, %28, !dbg !12634
  %36 = icmp ugt i32 %35, 2, !dbg !12635
  br i1 %36, label %37, label %29, !dbg !12636, !llvm.loop !12637

37:                                               ; preds = %7, %29, %33
  %38 = phi i32 [ 0, %29 ], [ 3, %33 ], [ 3, %7 ], !dbg !12612
  ret i32 %38, !dbg !12639
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_DisablePLLSAI() local_unnamed_addr #1 !dbg !12640 {
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !12643
  %1 = tail call i32 @HAL_GetTick() #25, !dbg !12644
  call void @llvm.dbg.value(metadata i32 %1, metadata !12642, metadata !DIExpression()), !dbg !12645
  br label %2, !dbg !12646

2:                                                ; preds = %6, %0
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12647
  %4 = and i32 %3, 536870912, !dbg !12647
  %5 = icmp eq i32 %4, 0, !dbg !12647
  br i1 %5, label %10, label %6, !dbg !12646

6:                                                ; preds = %2
  %7 = tail call i32 @HAL_GetTick() #25, !dbg !12648
  %8 = sub i32 %7, %1, !dbg !12651
  %9 = icmp ugt i32 %8, 2, !dbg !12652
  br i1 %9, label %10, label %2, !dbg !12653, !llvm.loop !12654

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 3, %6 ], [ 0, %2 ], !dbg !12645
  ret i32 %11, !dbg !12656
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #15 !dbg !12657 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12659, metadata !DIExpression()), !dbg !12664
  call void @llvm.dbg.value(metadata i32 0, metadata !12660, metadata !DIExpression()), !dbg !12664
  call void @llvm.dbg.value(metadata i32 0, metadata !12661, metadata !DIExpression()), !dbg !12664
  call void @llvm.dbg.value(metadata i32 0, metadata !12662, metadata !DIExpression()), !dbg !12664
  call void @llvm.dbg.value(metadata i32 0, metadata !12663, metadata !DIExpression()), !dbg !12664
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12665
  %2 = lshr i32 %1, 2, !dbg !12666
  %3 = and i32 %2, 3, !dbg !12666
  switch i32 %3, label %37 [
    i32 0, label %38
    i32 1, label %38
    i32 2, label %4
    i32 3, label %21
  ], !dbg !12666

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12667
  %6 = and i32 %5, 63, !dbg !12670
  call void @llvm.dbg.value(metadata i32 %6, metadata !12659, metadata !DIExpression()), !dbg !12664
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12671
  %8 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12673
  %9 = lshr i32 %8, 6, !dbg !12673
  %10 = and i32 %9, 511, !dbg !12673
  %11 = zext i32 %10 to i64, !dbg !12673
  %12 = mul nuw nsw i64 %11, 16000000, !dbg !12673
  %13 = zext i32 %6 to i64, !dbg !12673
  %14 = udiv i64 %12, %13, !dbg !12673
  %15 = trunc i64 %14 to i32, !dbg !12673
  call void @llvm.dbg.value(metadata i32 %15, metadata !12660, metadata !DIExpression()), !dbg !12664
  call void @llvm.dbg.value(metadata i32 %15, metadata !12660, metadata !DIExpression()), !dbg !12664
  call void @llvm.dbg.value(metadata i32 %15, metadata !12660, metadata !DIExpression()), !dbg !12664
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12674
  %17 = lshr i32 %16, 15, !dbg !12675
  %18 = and i32 %17, 6, !dbg !12675
  %19 = add nuw nsw i32 %18, 2, !dbg !12675
  call void @llvm.dbg.value(metadata i32 %19, metadata !12661, metadata !DIExpression()), !dbg !12664
  %20 = udiv i32 %15, %19, !dbg !12676
  call void @llvm.dbg.value(metadata i32 %20, metadata !12663, metadata !DIExpression()), !dbg !12664
  br label %38, !dbg !12677

21:                                               ; preds = %0
  %22 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12678
  %23 = and i32 %22, 63, !dbg !12680
  call void @llvm.dbg.value(metadata i32 %23, metadata !12659, metadata !DIExpression()), !dbg !12664
  %24 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12681
  %25 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12683
  %26 = lshr i32 %25, 6, !dbg !12683
  %27 = and i32 %26, 511, !dbg !12683
  %28 = zext i32 %27 to i64, !dbg !12683
  %29 = mul nuw nsw i64 %28, 16000000, !dbg !12683
  %30 = zext i32 %23 to i64, !dbg !12683
  %31 = udiv i64 %29, %30, !dbg !12683
  %32 = trunc i64 %31 to i32, !dbg !12683
  call void @llvm.dbg.value(metadata i32 %32, metadata !12660, metadata !DIExpression()), !dbg !12664
  call void @llvm.dbg.value(metadata i32 %32, metadata !12660, metadata !DIExpression()), !dbg !12664
  call void @llvm.dbg.value(metadata i32 %32, metadata !12660, metadata !DIExpression()), !dbg !12664
  %33 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12684
  %34 = lshr i32 %33, 28, !dbg !12685
  %35 = and i32 %34, 7, !dbg !12685
  call void @llvm.dbg.value(metadata i32 %35, metadata !12662, metadata !DIExpression()), !dbg !12664
  %36 = udiv i32 %32, %35, !dbg !12686
  call void @llvm.dbg.value(metadata i32 %36, metadata !12663, metadata !DIExpression()), !dbg !12664
  br label %38, !dbg !12687

37:                                               ; preds = %0
  unreachable

38:                                               ; preds = %0, %0, %21, %4
  %39 = phi i32 [ %36, %21 ], [ %20, %4 ], [ 16000000, %0 ], [ 16000000, %0 ], !dbg !12688
  call void @llvm.dbg.value(metadata i32 %39, metadata !12663, metadata !DIExpression()), !dbg !12664
  ret i32 %39, !dbg !12689
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !12690 {
  %1 = tail call i32 @HAL_GetTick() #25, !dbg !12693
  call void @llvm.dbg.value(metadata i32 %1, metadata !12692, metadata !DIExpression()), !dbg !12694
  %2 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12695
  %3 = or i32 %2, 1, !dbg !12695
  store volatile i32 %3, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12695
  br label %4, !dbg !12696

4:                                                ; preds = %8, %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12697
  %6 = and i32 %5, 2, !dbg !12697
  %7 = icmp eq i32 %6, 0, !dbg !12698
  br i1 %7, label %8, label %12, !dbg !12696

8:                                                ; preds = %4
  %9 = tail call i32 @HAL_GetTick() #25, !dbg !12699
  %10 = sub i32 %9, %1, !dbg !12702
  %11 = icmp ugt i32 %10, 2, !dbg !12703
  br i1 %11, label %89, label %4, !dbg !12704, !llvm.loop !12705

12:                                               ; preds = %4
  %13 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12707
  %14 = or i32 %13, 128, !dbg !12707
  store volatile i32 %14, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12707
  %15 = tail call i32 @HAL_GetTick() #25, !dbg !12708
  call void @llvm.dbg.value(metadata i32 %15, metadata !12692, metadata !DIExpression()), !dbg !12694
  store volatile i32 0, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12709
  br label %16, !dbg !12710

16:                                               ; preds = %21, %12
  %17 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12711
  %18 = and i32 %17, 12, !dbg !12711
  %19 = icmp eq i32 %18, 0, !dbg !12712
  %20 = tail call i32 @HAL_GetTick() #25, !dbg !12694
  br i1 %19, label %24, label %21, !dbg !12710

21:                                               ; preds = %16
  %22 = sub i32 %20, %15, !dbg !12713
  %23 = icmp ugt i32 %22, 5000, !dbg !12716
  br i1 %23, label %89, label %16, !dbg !12717, !llvm.loop !12718

24:                                               ; preds = %16
  call void @llvm.dbg.value(metadata i32 %20, metadata !12692, metadata !DIExpression()), !dbg !12694
  %25 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12720
  %26 = and i32 %25, -851969, !dbg !12720
  store volatile i32 %26, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12720
  br label %27, !dbg !12721

27:                                               ; preds = %32, %24
  %28 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12722
  %29 = and i32 %28, 131072, !dbg !12722
  %30 = icmp eq i32 %29, 0, !dbg !12723
  %31 = tail call i32 @HAL_GetTick() #25, !dbg !12694
  br i1 %30, label %35, label %32, !dbg !12721

32:                                               ; preds = %27
  %33 = sub i32 %31, %20, !dbg !12724
  %34 = icmp ugt i32 %33, 100, !dbg !12727
  br i1 %34, label %89, label %27, !dbg !12728, !llvm.loop !12729

35:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %31, metadata !12692, metadata !DIExpression()), !dbg !12694
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12731
  %37 = and i32 %36, -16777217, !dbg !12731
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12731
  br label %38, !dbg !12732

38:                                               ; preds = %43, %35
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12733
  %40 = and i32 %39, 33554432, !dbg !12733
  %41 = icmp eq i32 %40, 0, !dbg !12734
  %42 = tail call i32 @HAL_GetTick() #25, !dbg !12694
  br i1 %41, label %46, label %43, !dbg !12732

43:                                               ; preds = %38
  %44 = sub i32 %42, %31, !dbg !12735
  %45 = icmp ugt i32 %44, 2, !dbg !12738
  br i1 %45, label %89, label %38, !dbg !12739, !llvm.loop !12740

46:                                               ; preds = %38
  call void @llvm.dbg.value(metadata i32 %42, metadata !12692, metadata !DIExpression()), !dbg !12694
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12742
  %48 = and i32 %47, -67108865, !dbg !12742
  store volatile i32 %48, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12742
  br label %49, !dbg !12743

49:                                               ; preds = %54, %46
  %50 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12744
  %51 = and i32 %50, 134217728, !dbg !12744
  %52 = icmp eq i32 %51, 0, !dbg !12745
  %53 = tail call i32 @HAL_GetTick() #25, !dbg !12694
  br i1 %52, label %57, label %54, !dbg !12743

54:                                               ; preds = %49
  %55 = sub i32 %53, %42, !dbg !12746
  %56 = icmp ugt i32 %55, 2, !dbg !12749
  br i1 %56, label %89, label %49, !dbg !12750, !llvm.loop !12751

57:                                               ; preds = %49
  call void @llvm.dbg.value(metadata i32 %53, metadata !12692, metadata !DIExpression()), !dbg !12694
  %58 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12753
  %59 = and i32 %58, -268435457, !dbg !12753
  store volatile i32 %59, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12753
  br label %60, !dbg !12754

60:                                               ; preds = %64, %57
  %61 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12755
  %62 = and i32 %61, 536870912, !dbg !12755
  %63 = icmp eq i32 %62, 0, !dbg !12756
  br i1 %63, label %68, label %64, !dbg !12754

64:                                               ; preds = %60
  %65 = tail call i32 @HAL_GetTick() #25, !dbg !12757
  %66 = sub i32 %65, %53, !dbg !12760
  %67 = icmp ugt i32 %66, 2, !dbg !12761
  br i1 %67, label %89, label %60, !dbg !12762, !llvm.loop !12763

68:                                               ; preds = %60
  store volatile i32 603992080, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12765
  store volatile i32 603992080, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12766
  store volatile i32 67121168, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12767
  %69 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12768
  %70 = and i32 %69, -7937, !dbg !12768
  store volatile i32 %70, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12768
  %71 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12769
  %72 = and i32 %71, -8193, !dbg !12769
  store volatile i32 %72, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12769
  %73 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12770
  %74 = and i32 %73, -16385, !dbg !12770
  store volatile i32 %74, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12770
  %75 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12771
  %76 = or i32 %75, 10420224, !dbg !12771
  store volatile i32 %76, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12771
  %77 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12772
  %78 = or i32 %77, 2097152, !dbg !12772
  store volatile i32 %78, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12772
  %79 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12773
  %80 = or i32 %79, 4194304, !dbg !12773
  store volatile i32 %80, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12773
  %81 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12774
  %82 = and i32 %81, -2, !dbg !12774
  store volatile i32 %82, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12774
  %83 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12775
  %84 = or i32 %83, 16777216, !dbg !12775
  store volatile i32 %84, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12775
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !12776
  %85 = load i32, i32* @uwTickPrio, align 4, !dbg !12777
  %86 = tail call i32 @HAL_InitTick(i32 noundef %85) #25, !dbg !12779
  %87 = icmp ne i32 %86, 0, !dbg !12780
  %88 = zext i1 %87 to i32, !dbg !12781
  br label %89, !dbg !12781

89:                                               ; preds = %8, %21, %32, %43, %54, %64, %68
  %90 = phi i32 [ %88, %68 ], [ 3, %64 ], [ 3, %54 ], [ 3, %43 ], [ 3, %32 ], [ 3, %21 ], [ 3, %8 ], !dbg !12694
  ret i32 %90, !dbg !12782
}

; Function Attrs: optsize
declare !dbg !12783 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef readonly %0) local_unnamed_addr #1 !dbg !12786 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !12812, metadata !DIExpression()), !dbg !12823
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !12824
  br i1 %3, label %337, label %4, !dbg !12826

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !12827
  %6 = load i32, i32* %5, align 4, !dbg !12827
  %7 = and i32 %6, 1, !dbg !12829
  %8 = icmp eq i32 %7, 0, !dbg !12830
  br i1 %8, label %74, label %9, !dbg !12831

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12832
  %11 = and i32 %10, 12, !dbg !12832
  %12 = icmp eq i32 %11, 4, !dbg !12835
  br i1 %12, label %29, label %13, !dbg !12836

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12837
  %15 = and i32 %14, 12, !dbg !12837
  %16 = icmp eq i32 %15, 8, !dbg !12838
  br i1 %16, label %17, label %21, !dbg !12839

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12840
  %19 = and i32 %18, 4194304, !dbg !12841
  %20 = icmp eq i32 %19, 0, !dbg !12842
  br i1 %20, label %21, label %29, !dbg !12843

21:                                               ; preds = %17, %13
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12844
  %23 = and i32 %22, 12, !dbg !12844
  %24 = icmp eq i32 %23, 12, !dbg !12845
  br i1 %24, label %25, label %37, !dbg !12846

25:                                               ; preds = %21
  %26 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12847
  %27 = and i32 %26, 4194304, !dbg !12848
  %28 = icmp eq i32 %27, 0, !dbg !12849
  br i1 %28, label %37, label %29, !dbg !12850

29:                                               ; preds = %25, %17, %9
  %30 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12851
  %31 = and i32 %30, 131072, !dbg !12851
  %32 = icmp eq i32 %31, 0, !dbg !12851
  br i1 %32, label %74, label %33, !dbg !12854

33:                                               ; preds = %29
  %34 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12855
  %35 = load i32, i32* %34, align 4, !dbg !12855
  %36 = icmp eq i32 %35, 0, !dbg !12856
  br i1 %36, label %337, label %74, !dbg !12857

37:                                               ; preds = %21, %25
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12858
  %39 = load i32, i32* %38, align 4, !dbg !12858
  switch i32 %39, label %48 [
    i32 65536, label %40
    i32 327680, label %43
  ], !dbg !12862

40:                                               ; preds = %37
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12863
  %42 = or i32 %41, 65536, !dbg !12863
  br label %53, !dbg !12863

43:                                               ; preds = %37
  %44 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12865
  %45 = or i32 %44, 262144, !dbg !12865
  store volatile i32 %45, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12865
  %46 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12865
  %47 = or i32 %46, 65536, !dbg !12865
  br label %53, !dbg !12865

48:                                               ; preds = %37
  %49 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12868
  %50 = and i32 %49, -65537, !dbg !12868
  store volatile i32 %50, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12868
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12868
  %52 = and i32 %51, -262145, !dbg !12868
  br label %53

53:                                               ; preds = %43, %48, %40
  %54 = phi i32 [ %47, %43 ], [ %52, %48 ], [ %42, %40 ]
  store volatile i32 %54, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12870
  %55 = load i32, i32* %38, align 4, !dbg !12871
  %56 = icmp eq i32 %55, 0, !dbg !12873
  %57 = tail call i32 @HAL_GetTick() #25, !dbg !12874
  call void @llvm.dbg.value(metadata i32 %57, metadata !12813, metadata !DIExpression()), !dbg !12823
  call void @llvm.dbg.value(metadata i32 %57, metadata !12813, metadata !DIExpression()), !dbg !12823
  br i1 %56, label %66, label %58, !dbg !12875

58:                                               ; preds = %53, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12876
  %60 = and i32 %59, 131072, !dbg !12878
  %61 = icmp eq i32 %60, 0, !dbg !12878
  br i1 %61, label %62, label %74, !dbg !12879

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #25, !dbg !12880
  %64 = sub i32 %63, %57, !dbg !12883
  %65 = icmp ugt i32 %64, 100, !dbg !12884
  br i1 %65, label %337, label %58, !dbg !12885, !llvm.loop !12886

66:                                               ; preds = %53, %70
  %67 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12888
  %68 = and i32 %67, 131072, !dbg !12888
  %69 = icmp eq i32 %68, 0, !dbg !12888
  br i1 %69, label %74, label %70, !dbg !12890

70:                                               ; preds = %66
  %71 = tail call i32 @HAL_GetTick() #25, !dbg !12891
  %72 = sub i32 %71, %57, !dbg !12894
  %73 = icmp ugt i32 %72, 100, !dbg !12895
  br i1 %73, label %337, label %66, !dbg !12896, !llvm.loop !12897

74:                                               ; preds = %58, %66, %33, %29, %4
  %75 = load i32, i32* %5, align 4, !dbg !12899
  %76 = and i32 %75, 2, !dbg !12901
  %77 = icmp eq i32 %76, 0, !dbg !12902
  br i1 %77, label %137, label %78, !dbg !12903

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12904
  %80 = and i32 %79, 12, !dbg !12904
  %81 = icmp eq i32 %80, 0, !dbg !12907
  br i1 %81, label %98, label %82, !dbg !12908

82:                                               ; preds = %78
  %83 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12909
  %84 = and i32 %83, 12, !dbg !12909
  %85 = icmp eq i32 %84, 8, !dbg !12910
  br i1 %85, label %86, label %90, !dbg !12911

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12912
  %88 = and i32 %87, 4194304, !dbg !12913
  %89 = icmp eq i32 %88, 0, !dbg !12914
  br i1 %89, label %98, label %90, !dbg !12915

90:                                               ; preds = %86, %82
  %91 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12916
  %92 = and i32 %91, 12, !dbg !12916
  %93 = icmp eq i32 %92, 12, !dbg !12917
  br i1 %93, label %94, label %106, !dbg !12918

94:                                               ; preds = %90
  %95 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12919
  %96 = and i32 %95, 4194304, !dbg !12920
  %97 = icmp eq i32 %96, 0, !dbg !12921
  br i1 %97, label %98, label %106, !dbg !12922

98:                                               ; preds = %94, %86, %78
  %99 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12923
  %100 = and i32 %99, 2, !dbg !12923
  %101 = icmp eq i32 %100, 0, !dbg !12923
  br i1 %101, label %130, label %102, !dbg !12926

102:                                              ; preds = %98
  %103 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12927
  %104 = load i32, i32* %103, align 4, !dbg !12927
  %105 = icmp eq i32 %104, 1, !dbg !12928
  br i1 %105, label %130, label %337, !dbg !12929

106:                                              ; preds = %94, %90
  %107 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12930
  %108 = load i32, i32* %107, align 4, !dbg !12930
  %109 = icmp eq i32 %108, 0, !dbg !12933
  br i1 %109, label %120, label %110, !dbg !12934

110:                                              ; preds = %106
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12935
  %111 = tail call i32 @HAL_GetTick() #25, !dbg !12937
  call void @llvm.dbg.value(metadata i32 %111, metadata !12813, metadata !DIExpression()), !dbg !12823
  br label %112, !dbg !12938

112:                                              ; preds = %116, %110
  %113 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12939
  %114 = and i32 %113, 2, !dbg !12940
  %115 = icmp eq i32 %114, 0, !dbg !12940
  br i1 %115, label %116, label %130, !dbg !12938

116:                                              ; preds = %112
  %117 = tail call i32 @HAL_GetTick() #25, !dbg !12941
  %118 = sub i32 %117, %111, !dbg !12944
  %119 = icmp ugt i32 %118, 2, !dbg !12945
  br i1 %119, label %337, label %112, !dbg !12946, !llvm.loop !12947

120:                                              ; preds = %106
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12949
  %121 = tail call i32 @HAL_GetTick() #25, !dbg !12951
  call void @llvm.dbg.value(metadata i32 %121, metadata !12813, metadata !DIExpression()), !dbg !12823
  br label %122, !dbg !12952

122:                                              ; preds = %126, %120
  %123 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12953
  %124 = and i32 %123, 2, !dbg !12953
  %125 = icmp eq i32 %124, 0, !dbg !12953
  br i1 %125, label %137, label %126, !dbg !12952

126:                                              ; preds = %122
  %127 = tail call i32 @HAL_GetTick() #25, !dbg !12954
  %128 = sub i32 %127, %121, !dbg !12957
  %129 = icmp ugt i32 %128, 2, !dbg !12958
  br i1 %129, label %337, label %122, !dbg !12959, !llvm.loop !12960

130:                                              ; preds = %112, %98, %102
  %131 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12962
  %132 = and i32 %131, -249, !dbg !12962
  %133 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !12962
  %134 = load i32, i32* %133, align 4, !dbg !12962
  %135 = shl i32 %134, 3, !dbg !12962
  %136 = or i32 %135, %132, !dbg !12962
  store volatile i32 %136, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12962
  br label %137, !dbg !12963

137:                                              ; preds = %122, %130, %74
  %138 = load i32, i32* %5, align 4, !dbg !12963
  %139 = and i32 %138, 8, !dbg !12965
  %140 = icmp eq i32 %139, 0, !dbg !12966
  br i1 %140, label %165, label %141, !dbg !12967

141:                                              ; preds = %137
  %142 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !12968
  %143 = load i32, i32* %142, align 4, !dbg !12968
  %144 = icmp eq i32 %143, 0, !dbg !12971
  br i1 %144, label %155, label %145, !dbg !12972

145:                                              ; preds = %141
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !12973
  %146 = tail call i32 @HAL_GetTick() #25, !dbg !12975
  call void @llvm.dbg.value(metadata i32 %146, metadata !12813, metadata !DIExpression()), !dbg !12823
  br label %147, !dbg !12976

147:                                              ; preds = %151, %145
  %148 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12977
  %149 = and i32 %148, 2, !dbg !12978
  %150 = icmp eq i32 %149, 0, !dbg !12978
  br i1 %150, label %151, label %165, !dbg !12976

151:                                              ; preds = %147
  %152 = tail call i32 @HAL_GetTick() #25, !dbg !12979
  %153 = sub i32 %152, %146, !dbg !12982
  %154 = icmp ugt i32 %153, 2, !dbg !12983
  br i1 %154, label %337, label %147, !dbg !12984, !llvm.loop !12985

155:                                              ; preds = %141
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !12987
  %156 = tail call i32 @HAL_GetTick() #25, !dbg !12989
  call void @llvm.dbg.value(metadata i32 %156, metadata !12813, metadata !DIExpression()), !dbg !12823
  br label %157, !dbg !12990

157:                                              ; preds = %161, %155
  %158 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12991
  %159 = and i32 %158, 2, !dbg !12991
  %160 = icmp eq i32 %159, 0, !dbg !12991
  br i1 %160, label %165, label %161, !dbg !12990

161:                                              ; preds = %157
  %162 = tail call i32 @HAL_GetTick() #25, !dbg !12992
  %163 = sub i32 %162, %156, !dbg !12995
  %164 = icmp ugt i32 %163, 2, !dbg !12996
  br i1 %164, label %337, label %157, !dbg !12997, !llvm.loop !12998

165:                                              ; preds = %147, %157, %137
  %166 = load i32, i32* %5, align 4, !dbg !13000
  %167 = and i32 %166, 4, !dbg !13001
  %168 = icmp eq i32 %167, 0, !dbg !13002
  br i1 %168, label %237, label %169, !dbg !13003

169:                                              ; preds = %165
  call void @llvm.dbg.value(metadata i32 0, metadata !12815, metadata !DIExpression()), !dbg !13004
  %170 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13005
  %171 = and i32 %170, 268435456, !dbg !13005
  %172 = icmp eq i32 %171, 0, !dbg !13005
  br i1 %172, label %173, label %180, !dbg !13006

173:                                              ; preds = %169
  %174 = bitcast i32* %2 to i8*, !dbg !13007
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %174), !dbg !13007
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12819, metadata !DIExpression()), !dbg !13007
  store volatile i32 0, i32* %2, align 4, !dbg !13007
  %175 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13007
  %176 = or i32 %175, 268435456, !dbg !13007
  store volatile i32 %176, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13007
  %177 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13007
  %178 = and i32 %177, 268435456, !dbg !13007
  store volatile i32 %178, i32* %2, align 4, !dbg !13007
  %179 = load volatile i32, i32* %2, align 4, !dbg !13007
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %174), !dbg !13008
  call void @llvm.dbg.value(metadata i32 1, metadata !12815, metadata !DIExpression()), !dbg !13004
  br label %180, !dbg !13009

180:                                              ; preds = %173, %169
  call void @llvm.dbg.value(metadata i32 undef, metadata !12815, metadata !DIExpression()), !dbg !13004
  %181 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13010
  %182 = and i32 %181, 256, !dbg !13010
  %183 = icmp eq i32 %182, 0, !dbg !13010
  br i1 %183, label %184, label %196, !dbg !13012

184:                                              ; preds = %180
  %185 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13013
  %186 = or i32 %185, 256, !dbg !13013
  store volatile i32 %186, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13013
  %187 = tail call i32 @HAL_GetTick() #25, !dbg !13015
  call void @llvm.dbg.value(metadata i32 %187, metadata !12813, metadata !DIExpression()), !dbg !12823
  br label %188, !dbg !13016

188:                                              ; preds = %192, %184
  %189 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13017
  %190 = and i32 %189, 256, !dbg !13017
  %191 = icmp eq i32 %190, 0, !dbg !13017
  br i1 %191, label %192, label %196, !dbg !13016

192:                                              ; preds = %188
  %193 = tail call i32 @HAL_GetTick() #25, !dbg !13018
  %194 = sub i32 %193, %187, !dbg !13021
  %195 = icmp ugt i32 %194, 2, !dbg !13022
  br i1 %195, label %337, label %188, !dbg !13023, !llvm.loop !13024

196:                                              ; preds = %188, %180
  %197 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !13026
  %198 = load i32, i32* %197, align 4, !dbg !13026
  switch i32 %198, label %207 [
    i32 1, label %199
    i32 5, label %202
  ], !dbg !13029

199:                                              ; preds = %196
  %200 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13030
  %201 = or i32 %200, 1, !dbg !13030
  br label %212, !dbg !13030

202:                                              ; preds = %196
  %203 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13032
  %204 = or i32 %203, 4, !dbg !13032
  store volatile i32 %204, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13032
  %205 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13032
  %206 = or i32 %205, 1, !dbg !13032
  br label %212, !dbg !13032

207:                                              ; preds = %196
  %208 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13035
  %209 = and i32 %208, -2, !dbg !13035
  store volatile i32 %209, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13035
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13035
  %211 = and i32 %210, -5, !dbg !13035
  br label %212

212:                                              ; preds = %202, %207, %199
  %213 = phi i32 [ %206, %202 ], [ %211, %207 ], [ %201, %199 ]
  store volatile i32 %213, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13037
  %214 = load i32, i32* %197, align 4, !dbg !13038
  %215 = icmp eq i32 %214, 0, !dbg !13040
  %216 = tail call i32 @HAL_GetTick() #25, !dbg !13041
  call void @llvm.dbg.value(metadata i32 %216, metadata !12813, metadata !DIExpression()), !dbg !12823
  call void @llvm.dbg.value(metadata i32 %216, metadata !12813, metadata !DIExpression()), !dbg !12823
  br i1 %215, label %225, label %217, !dbg !13042

217:                                              ; preds = %212, %221
  %218 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13043
  %219 = and i32 %218, 2, !dbg !13045
  %220 = icmp eq i32 %219, 0, !dbg !13045
  br i1 %220, label %221, label %233, !dbg !13046

221:                                              ; preds = %217
  %222 = tail call i32 @HAL_GetTick() #25, !dbg !13047
  %223 = sub i32 %222, %216, !dbg !13050
  %224 = icmp ugt i32 %223, 5000, !dbg !13051
  br i1 %224, label %337, label %217, !dbg !13052, !llvm.loop !13053

225:                                              ; preds = %212, %229
  %226 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13055
  %227 = and i32 %226, 2, !dbg !13055
  %228 = icmp eq i32 %227, 0, !dbg !13055
  br i1 %228, label %233, label %229, !dbg !13057

229:                                              ; preds = %225
  %230 = tail call i32 @HAL_GetTick() #25, !dbg !13058
  %231 = sub i32 %230, %216, !dbg !13061
  %232 = icmp ugt i32 %231, 5000, !dbg !13062
  br i1 %232, label %337, label %225, !dbg !13063, !llvm.loop !13064

233:                                              ; preds = %217, %225
  br i1 %172, label %234, label %237, !dbg !13066

234:                                              ; preds = %233
  %235 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13067
  %236 = and i32 %235, -268435457, !dbg !13067
  store volatile i32 %236, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13067
  br label %237, !dbg !13070

237:                                              ; preds = %234, %233, %165
  %238 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !13071
  %239 = load i32, i32* %238, align 4, !dbg !13071
  %240 = icmp eq i32 %239, 0, !dbg !13073
  br i1 %240, label %336, label %241, !dbg !13074

241:                                              ; preds = %237
  %242 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13075
  %243 = and i32 %242, 12, !dbg !13075
  %244 = icmp eq i32 %243, 8, !dbg !13078
  br i1 %244, label %297, label %245, !dbg !13079

245:                                              ; preds = %241
  %246 = icmp eq i32 %239, 2, !dbg !13080
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !13083
  %247 = tail call i32 @HAL_GetTick() #25, !dbg !13083
  call void @llvm.dbg.value(metadata i32 %247, metadata !12813, metadata !DIExpression()), !dbg !12823
  call void @llvm.dbg.value(metadata i32 %247, metadata !12813, metadata !DIExpression()), !dbg !12823
  br i1 %246, label %248, label %289, !dbg !13084

248:                                              ; preds = %245, %252
  %249 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13085
  %250 = and i32 %249, 33554432, !dbg !13085
  %251 = icmp eq i32 %250, 0, !dbg !13085
  br i1 %251, label %256, label %252, !dbg !13087

252:                                              ; preds = %248
  %253 = tail call i32 @HAL_GetTick() #25, !dbg !13088
  %254 = sub i32 %253, %247, !dbg !13091
  %255 = icmp ugt i32 %254, 2, !dbg !13092
  br i1 %255, label %337, label %248, !dbg !13093, !llvm.loop !13094

256:                                              ; preds = %248
  %257 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !13096
  %258 = load i32, i32* %257, align 4, !dbg !13096
  %259 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !13096
  %260 = load i32, i32* %259, align 4, !dbg !13096
  %261 = or i32 %260, %258, !dbg !13096
  %262 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !13096
  %263 = load i32, i32* %262, align 4, !dbg !13096
  %264 = shl i32 %263, 6, !dbg !13096
  %265 = or i32 %261, %264, !dbg !13096
  %266 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !13096
  %267 = load i32, i32* %266, align 4, !dbg !13096
  %268 = shl i32 %267, 15, !dbg !13096
  %269 = add i32 %268, -65536, !dbg !13096
  %270 = and i32 %269, -65536, !dbg !13096
  %271 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !13096
  %272 = load i32, i32* %271, align 4, !dbg !13096
  %273 = shl i32 %272, 24, !dbg !13096
  %274 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !13096
  %275 = load i32, i32* %274, align 4, !dbg !13096
  %276 = shl i32 %275, 28, !dbg !13096
  %277 = or i32 %265, %273, !dbg !13096
  %278 = or i32 %277, %270, !dbg !13096
  %279 = or i32 %278, %276, !dbg !13096
  store volatile i32 %279, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13096
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !13097
  %280 = tail call i32 @HAL_GetTick() #25, !dbg !13098
  call void @llvm.dbg.value(metadata i32 %280, metadata !12813, metadata !DIExpression()), !dbg !12823
  br label %281, !dbg !13099

281:                                              ; preds = %285, %256
  %282 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13100
  %283 = and i32 %282, 33554432, !dbg !13101
  %284 = icmp eq i32 %283, 0, !dbg !13101
  br i1 %284, label %285, label %336, !dbg !13099

285:                                              ; preds = %281
  %286 = tail call i32 @HAL_GetTick() #25, !dbg !13102
  %287 = sub i32 %286, %280, !dbg !13105
  %288 = icmp ugt i32 %287, 2, !dbg !13106
  br i1 %288, label %337, label %281, !dbg !13107, !llvm.loop !13108

289:                                              ; preds = %245, %293
  %290 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13110
  %291 = and i32 %290, 33554432, !dbg !13110
  %292 = icmp eq i32 %291, 0, !dbg !13110
  br i1 %292, label %336, label %293, !dbg !13112

293:                                              ; preds = %289
  %294 = tail call i32 @HAL_GetTick() #25, !dbg !13113
  %295 = sub i32 %294, %247, !dbg !13116
  %296 = icmp ugt i32 %295, 2, !dbg !13117
  br i1 %296, label %337, label %289, !dbg !13118, !llvm.loop !13119

297:                                              ; preds = %241
  %298 = icmp eq i32 %239, 1, !dbg !13121
  br i1 %298, label %337, label %299, !dbg !13124

299:                                              ; preds = %297
  %300 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13125
  call void @llvm.dbg.value(metadata i32 %300, metadata !12814, metadata !DIExpression()), !dbg !12823
  %301 = and i32 %300, 4194304, !dbg !13127
  %302 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !13129
  %303 = load i32, i32* %302, align 4, !dbg !13129
  %304 = icmp eq i32 %301, %303, !dbg !13130
  br i1 %304, label %305, label %337, !dbg !13131

305:                                              ; preds = %299
  %306 = and i32 %300, 63, !dbg !13132
  %307 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !13133
  %308 = load i32, i32* %307, align 4, !dbg !13133
  %309 = icmp eq i32 %306, %308, !dbg !13134
  br i1 %309, label %310, label %337, !dbg !13135

310:                                              ; preds = %305
  %311 = and i32 %300, 32704, !dbg !13136
  %312 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !13137
  %313 = load i32, i32* %312, align 4, !dbg !13137
  %314 = shl i32 %313, 6, !dbg !13138
  %315 = icmp eq i32 %311, %314, !dbg !13139
  br i1 %315, label %316, label %337, !dbg !13140

316:                                              ; preds = %310
  %317 = and i32 %300, 196608, !dbg !13141
  %318 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !13142
  %319 = load i32, i32* %318, align 4, !dbg !13142
  %320 = shl i32 %319, 15, !dbg !13143
  %321 = add i32 %320, -65536, !dbg !13143
  %322 = and i32 %321, -65536, !dbg !13143
  %323 = icmp eq i32 %317, %322, !dbg !13144
  br i1 %323, label %324, label %337, !dbg !13145

324:                                              ; preds = %316
  %325 = and i32 %300, 251658240, !dbg !13146
  %326 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !13147
  %327 = load i32, i32* %326, align 4, !dbg !13147
  %328 = shl i32 %327, 24, !dbg !13148
  %329 = icmp eq i32 %325, %328, !dbg !13149
  br i1 %329, label %330, label %337, !dbg !13150

330:                                              ; preds = %324
  %331 = and i32 %300, 1879048192, !dbg !13151
  %332 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !13152
  %333 = load i32, i32* %332, align 4, !dbg !13152
  %334 = shl i32 %333, 28, !dbg !13153
  %335 = icmp eq i32 %331, %334, !dbg !13154
  br i1 %335, label %336, label %337, !dbg !13155

336:                                              ; preds = %289, %281, %330, %237
  br label %337, !dbg !13156

337:                                              ; preds = %62, %70, %116, %126, %151, %161, %192, %221, %229, %293, %252, %285, %299, %305, %310, %316, %324, %330, %297, %102, %33, %1, %336
  %338 = phi i32 [ 0, %336 ], [ 1, %1 ], [ 1, %33 ], [ 1, %102 ], [ 1, %297 ], [ 1, %330 ], [ 1, %324 ], [ 1, %316 ], [ 1, %310 ], [ 1, %305 ], [ 1, %299 ], [ 3, %285 ], [ 3, %252 ], [ 3, %293 ], [ 3, %229 ], [ 3, %221 ], [ 3, %192 ], [ 3, %161 ], [ 3, %151 ], [ 3, %126 ], [ 3, %116 ], [ 3, %70 ], [ 3, %62 ], !dbg !12823
  ret i32 %338, !dbg !13157
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* nocapture noundef writeonly %0) local_unnamed_addr #15 !dbg !13158 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !13162, metadata !DIExpression()), !dbg !13163
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !13164
  store i32 15, i32* %2, align 4, !dbg !13165
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13166
  %4 = and i32 %3, 262144, !dbg !13168
  %5 = icmp eq i32 %4, 0, !dbg !13169
  br i1 %5, label %8, label %6, !dbg !13170

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !13171
  store i32 327680, i32* %7, align 4, !dbg !13173
  br label %15, !dbg !13174

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13175
  %10 = and i32 %9, 65536, !dbg !13177
  %11 = icmp eq i32 %10, 0, !dbg !13178
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !13179
  br i1 %11, label %14, label %13, !dbg !13180

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !13181
  br label %15, !dbg !13183

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !13184
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13186
  %17 = and i32 %16, 1, !dbg !13188
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !13189
  store i32 %17, i32* %18, align 4, !dbg !13191
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13192
  %20 = lshr i32 %19, 3, !dbg !13193
  %21 = and i32 %20, 31, !dbg !13193
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !13194
  store i32 %21, i32* %22, align 4, !dbg !13195
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13196
  %24 = and i32 %23, 4, !dbg !13198
  %25 = icmp eq i32 %24, 0, !dbg !13199
  br i1 %25, label %28, label %26, !dbg !13200

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !13201
  store i32 5, i32* %27, align 4, !dbg !13203
  br label %35, !dbg !13204

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13205
  %30 = and i32 %29, 1, !dbg !13207
  %31 = icmp eq i32 %30, 0, !dbg !13208
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !13209
  br i1 %31, label %34, label %33, !dbg !13210

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !13211
  br label %35, !dbg !13213

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !13214
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !13216
  %37 = and i32 %36, 1, !dbg !13218
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !13219
  store i32 %37, i32* %38, align 4, !dbg !13221
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13222
  %40 = and i32 %39, 16777216, !dbg !13224
  %41 = icmp eq i32 %40, 0, !dbg !13225
  %42 = select i1 %41, i32 1, i32 2, !dbg !13226
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !13227
  store i32 %42, i32* %43, align 4, !dbg !13229
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13230
  %45 = and i32 %44, 4194304, !dbg !13231
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !13232
  store i32 %45, i32* %46, align 4, !dbg !13233
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13234
  %48 = and i32 %47, 63, !dbg !13235
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !13236
  store i32 %48, i32* %49, align 4, !dbg !13237
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13238
  %51 = lshr i32 %50, 6, !dbg !13239
  %52 = and i32 %51, 511, !dbg !13239
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !13240
  store i32 %52, i32* %53, align 4, !dbg !13241
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13242
  %55 = shl i32 %54, 1, !dbg !13243
  %56 = and i32 %55, 393216, !dbg !13243
  %57 = add nuw nsw i32 %56, 131072, !dbg !13243
  %58 = lshr exact i32 %57, 16, !dbg !13244
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !13245
  store i32 %58, i32* %59, align 4, !dbg !13246
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13247
  %61 = lshr i32 %60, 24, !dbg !13248
  %62 = and i32 %61, 15, !dbg !13248
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !13249
  store i32 %62, i32* %63, align 4, !dbg !13250
  %64 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13251
  %65 = lshr i32 %64, 28, !dbg !13252
  %66 = and i32 %65, 7, !dbg !13252
  %67 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !13253
  store i32 %66, i32* %67, align 4, !dbg !13254
  ret void, !dbg !13255
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #14 !dbg !13256 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13259, metadata !DIExpression()), !dbg !13260
  tail call fastcc void @LL_InitTick(i32 noundef %0) #24, !dbg !13261
  ret void, !dbg !13262
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #14 !dbg !13263 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13266, metadata !DIExpression()), !dbg !13268
  call void @llvm.dbg.value(metadata i32 1000, metadata !13267, metadata !DIExpression()), !dbg !13268
  %2 = udiv i32 %0, 1000, !dbg !13269
  %3 = add nsw i32 %2, -1, !dbg !13270
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !13271
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !13272
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13273
  ret void, !dbg !13274
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #19 !dbg !13275 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !13277, metadata !DIExpression()), !dbg !13279
  %3 = bitcast i32* %2 to i8*, !dbg !13280
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !13280
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13278, metadata !DIExpression()), !dbg !13281
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13282
  store volatile i32 %4, i32* %2, align 4, !dbg !13281
  %5 = load volatile i32, i32* %2, align 4, !dbg !13283
  %6 = icmp eq i32 %0, -1, !dbg !13284
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13277, metadata !DIExpression()), !dbg !13279
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !13279
  call void @llvm.dbg.value(metadata i32 %8, metadata !13277, metadata !DIExpression()), !dbg !13279
  br label %9, !dbg !13286

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !13277, metadata !DIExpression()), !dbg !13279
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13287
  call void @llvm.dbg.value(metadata i32 undef, metadata !13277, metadata !DIExpression()), !dbg !13279
  %12 = shl i32 %11, 15, !dbg !13279
  %13 = ashr i32 %12, 31, !dbg !13279
  %14 = add i32 %13, %10, !dbg !13279
  call void @llvm.dbg.value(metadata i32 %14, metadata !13277, metadata !DIExpression()), !dbg !13279
  %15 = icmp eq i32 %14, 0, !dbg !13286
  br i1 %15, label %16, label %9, !dbg !13286

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !13290
  ret void, !dbg !13290
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #7 !dbg !13291 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13293, metadata !DIExpression()), !dbg !13294
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !13295
  ret void, !dbg !13296
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #14 !dbg !13297 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13302, metadata !DIExpression()), !dbg !13307
  call void @llvm.dbg.value(metadata i32 0, metadata !13305, metadata !DIExpression()), !dbg !13307
  call void @llvm.dbg.value(metadata i32 0, metadata !13306, metadata !DIExpression()), !dbg !13307
  %2 = icmp eq i32 %0, 0, !dbg !13308
  br i1 %2, label %72, label %3, !dbg !13310

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !13311
  %5 = icmp eq i32 %4, 49152, !dbg !13314
  br i1 %5, label %6, label %21, !dbg !13315

6:                                                ; preds = %3
  %7 = icmp ult i32 %0, 150000001, !dbg !13316
  %8 = select i1 %7, i32 0, i32 5, !dbg !13319
  call void @llvm.dbg.value(metadata i32 %8, metadata !13305, metadata !DIExpression()), !dbg !13307
  %9 = add i32 %0, -120000001, !dbg !13320
  %10 = icmp ult i32 %9, 30000000, !dbg !13320
  %11 = select i1 %10, i32 4, i32 %8, !dbg !13320
  call void @llvm.dbg.value(metadata i32 %11, metadata !13305, metadata !DIExpression()), !dbg !13307
  %12 = icmp ult i32 %9, -30000000, !dbg !13322
  %13 = select i1 %12, i32 %11, i32 3, !dbg !13322
  call void @llvm.dbg.value(metadata i32 %13, metadata !13305, metadata !DIExpression()), !dbg !13307
  %14 = icmp ugt i32 %0, 60000000, !dbg !13324
  %15 = icmp eq i32 %13, 0
  %16 = and i1 %14, %15, !dbg !13326
  br i1 %16, label %21, label %17, !dbg !13326

17:                                               ; preds = %6
  %18 = icmp ugt i32 %0, 30000000, !dbg !13327
  %19 = and i1 %18, %15, !dbg !13330
  %20 = select i1 %19, i32 1, i32 %13, !dbg !13330
  br label %21, !dbg !13330

21:                                               ; preds = %17, %6, %3
  %22 = phi i32 [ 0, %3 ], [ 2, %6 ], [ %20, %17 ], !dbg !13307
  call void @llvm.dbg.value(metadata i32 %22, metadata !13305, metadata !DIExpression()), !dbg !13307
  %23 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !13331
  %24 = icmp eq i32 %23, 32768, !dbg !13333
  br i1 %24, label %25, label %45, !dbg !13334

25:                                               ; preds = %21
  %26 = icmp ugt i32 %0, 150000000, !dbg !13335
  %27 = icmp eq i32 %22, 0
  %28 = and i1 %26, %27, !dbg !13338
  %29 = select i1 %28, i32 5, i32 %22, !dbg !13338
  call void @llvm.dbg.value(metadata i32 %29, metadata !13305, metadata !DIExpression()), !dbg !13307
  %30 = icmp ugt i32 %0, 12000000, !dbg !13339
  %31 = icmp eq i32 %29, 0
  %32 = and i1 %30, %31, !dbg !13341
  %33 = select i1 %32, i32 4, i32 %29, !dbg !13341
  call void @llvm.dbg.value(metadata i32 %33, metadata !13305, metadata !DIExpression()), !dbg !13307
  %34 = icmp ugt i32 %0, 90000000, !dbg !13342
  %35 = icmp eq i32 %33, 0
  %36 = and i1 %34, %35, !dbg !13344
  %37 = select i1 %36, i32 3, i32 %33, !dbg !13344
  call void @llvm.dbg.value(metadata i32 %37, metadata !13305, metadata !DIExpression()), !dbg !13307
  %38 = icmp ugt i32 %0, 60000000, !dbg !13345
  %39 = icmp eq i32 %37, 0
  %40 = select i1 %38, i1 %39, i1 false, !dbg !13347
  br i1 %40, label %45, label %41, !dbg !13347

41:                                               ; preds = %25
  %42 = icmp ugt i32 %0, 30000000, !dbg !13348
  %43 = select i1 %42, i1 %39, i1 false, !dbg !13351
  %44 = select i1 %43, i32 1, i32 %37, !dbg !13351
  br label %45, !dbg !13351

45:                                               ; preds = %41, %25, %21
  %46 = phi i32 [ %22, %21 ], [ 2, %25 ], [ %44, %41 ], !dbg !13352
  call void @llvm.dbg.value(metadata i32 %46, metadata !13305, metadata !DIExpression()), !dbg !13307
  %47 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !13353
  %48 = icmp eq i32 %47, 16384, !dbg !13355
  br i1 %48, label %49, label %61, !dbg !13356

49:                                               ; preds = %45
  %50 = icmp ugt i32 %0, 90000000, !dbg !13357
  %51 = icmp eq i32 %46, 0
  %52 = select i1 %50, i1 %51, i1 false, !dbg !13360
  %53 = select i1 %52, i32 3, i32 %46, !dbg !13360
  call void @llvm.dbg.value(metadata i32 %53, metadata !13305, metadata !DIExpression()), !dbg !13307
  %54 = icmp ugt i32 %0, 60000000, !dbg !13361
  %55 = icmp eq i32 %53, 0
  %56 = select i1 %54, i1 %55, i1 false, !dbg !13363
  br i1 %56, label %61, label %57, !dbg !13363

57:                                               ; preds = %49
  %58 = icmp ugt i32 %0, 30000000, !dbg !13364
  %59 = select i1 %58, i1 %55, i1 false, !dbg !13367
  %60 = select i1 %59, i32 1, i32 %53, !dbg !13367
  br label %61, !dbg !13367

61:                                               ; preds = %57, %49, %45
  %62 = phi i32 [ %46, %45 ], [ 2, %49 ], [ %60, %57 ], !dbg !13352
  call void @llvm.dbg.value(metadata i32 %62, metadata !13305, metadata !DIExpression()), !dbg !13307
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %62) #24, !dbg !13368
  call void @llvm.dbg.value(metadata i32 2, metadata !13303, metadata !DIExpression()), !dbg !13307
  br label %63, !dbg !13369

63:                                               ; preds = %63, %61
  %64 = phi i32 [ 2, %61 ], [ %66, %63 ], !dbg !13352
  call void @llvm.dbg.value(metadata i32 %64, metadata !13303, metadata !DIExpression()), !dbg !13307
  %65 = tail call fastcc i32 @LL_FLASH_GetLatency() #24, !dbg !13370
  call void @llvm.dbg.value(metadata i32 %65, metadata !13304, metadata !DIExpression()), !dbg !13307
  %66 = add nsw i32 %64, -1, !dbg !13372
  call void @llvm.dbg.value(metadata i32 %66, metadata !13303, metadata !DIExpression()), !dbg !13307
  %67 = icmp ne i32 %65, %62, !dbg !13373
  %68 = icmp ne i32 %66, 0, !dbg !13374
  %69 = select i1 %67, i1 %68, i1 false, !dbg !13374
  br i1 %69, label %63, label %70, !dbg !13375, !llvm.loop !13376

70:                                               ; preds = %63
  %71 = zext i1 %67 to i32
  br label %72

72:                                               ; preds = %70, %1
  %73 = phi i32 [ 1, %1 ], [ %71, %70 ], !dbg !13378
  call void @llvm.dbg.value(metadata i32 %73, metadata !13306, metadata !DIExpression()), !dbg !13307
  ret i32 %73, !dbg !13379
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #15 !dbg !13380 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13382
  %2 = and i32 %1, 49152, !dbg !13382
  ret i32 %2, !dbg !13383
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #14 !dbg !13384 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13386, metadata !DIExpression()), !dbg !13387
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13388
  %3 = and i32 %2, -16, !dbg !13388
  %4 = or i32 %3, %0, !dbg !13388
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13388
  ret void, !dbg !13389
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #15 !dbg !13390 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13391
  %2 = and i32 %1, 15, !dbg !13391
  ret i32 %2, !dbg !13392
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct.ztest_suite_stats* nocapture noundef readonly %0, %struct.ztest_suite_stats* nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !13393 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %0, metadata !13411, metadata !DIExpression()), !dbg !13415
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %1, metadata !13412, metadata !DIExpression()), !dbg !13415
  call void @llvm.dbg.value(metadata i32 0, metadata !13413, metadata !DIExpression()), !dbg !13415
  call void @llvm.dbg.value(metadata i32 0, metadata !13414, metadata !DIExpression()), !dbg !13415
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !13416
  %4 = icmp eq i32 %3, 0, !dbg !13418
  br i1 %4, label %5, label %21, !dbg !13419

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct.ztest_suite_stats* noundef %0) #24, !dbg !13420
  call void @llvm.dbg.value(metadata i32 %6, metadata !13414, metadata !DIExpression()), !dbg !13415
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.201() #24, !dbg !13422
  %8 = icmp eq i32 %7, 1, !dbg !13424
  br i1 %8, label %13, label %9, !dbg !13425

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.202() #24, !dbg !13426
  br label %10, !dbg !13428

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.201() #24, !dbg !13429
  %12 = icmp eq i32 %11, 1, !dbg !13430
  br i1 %12, label %13, label %10, !dbg !13428, !llvm.loop !13431

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %0, i32 0, i32 0, !dbg !13433
  %15 = load i32, i32* %14, align 4, !dbg !13433
  %16 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %0, i32 0, i32 1, !dbg !13434
  %17 = load i32, i32* %16, align 4, !dbg !13434
  %18 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %0, i32 0, i32 2, !dbg !13435
  %19 = load i32, i32* %18, align 4, !dbg !13435
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.203(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #24, !dbg !13436
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct.ztest_suite_stats* noundef %1) #24, !dbg !13437
  call void @llvm.dbg.value(metadata i32 %20, metadata !13413, metadata !DIExpression()), !dbg !13415
  br label %21, !dbg !13438

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !13439
  call void @llvm.dbg.value(metadata i32 %22, metadata !13413, metadata !DIExpression()), !dbg !13415
  ret i32 %22, !dbg !13440
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #15 !dbg !13441 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13445, metadata !DIExpression()), !dbg !13446
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.205() #24, !dbg !13447
  %2 = icmp ne i32 %1, 0, !dbg !13449
  call void @llvm.dbg.value(metadata i1 %2, metadata !13445, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13446
  %3 = tail call fastcc i32 @LL_RCC_PLLSAI_IsReady() #24, !dbg !13450
  %4 = icmp ne i32 %3, 0, !dbg !13452
  call void @llvm.dbg.value(metadata i1 undef, metadata !13445, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13446
  %5 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #24, !dbg !13453
  %6 = icmp ne i32 %5, 0, !dbg !13455
  %7 = select i1 %6, i1 true, i1 %4, !dbg !13456
  %8 = select i1 %7, i1 true, i1 %2, !dbg !13456
  %9 = zext i1 %8 to i32, !dbg !13456
  call void @llvm.dbg.value(metadata i32 %9, metadata !13445, metadata !DIExpression()), !dbg !13446
  ret i32 %9, !dbg !13457
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct.ztest_suite_stats* nocapture noundef readonly %1) unnamed_addr #8 !dbg !13458 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13462, metadata !DIExpression()), !dbg !13465
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %1, metadata !13463, metadata !DIExpression()), !dbg !13465
  call void @llvm.dbg.value(metadata i32 0, metadata !13464, metadata !DIExpression()), !dbg !13465
  %3 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %1, i32 0, i32 0, !dbg !13466
  %4 = load i32, i32* %3, align 4, !dbg !13466
  %5 = and i32 %4, 63, !dbg !13467
  %6 = udiv i32 %0, %5, !dbg !13468
  call void @llvm.dbg.value(metadata i32 %6, metadata !13464, metadata !DIExpression()), !dbg !13465
  %7 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %1, i32 0, i32 1, !dbg !13469
  %8 = load i32, i32* %7, align 4, !dbg !13469
  %9 = and i32 %8, 511, !dbg !13470
  %10 = mul i32 %9, %6, !dbg !13471
  call void @llvm.dbg.value(metadata i32 %10, metadata !13464, metadata !DIExpression()), !dbg !13465
  %11 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %1, i32 0, i32 2, !dbg !13472
  %12 = load i32, i32* %11, align 4, !dbg !13472
  %13 = lshr i32 %12, 15, !dbg !13473
  %14 = and i32 %13, 131070, !dbg !13473
  %15 = add nuw nsw i32 %14, 2, !dbg !13473
  %16 = udiv i32 %10, %15, !dbg !13474
  call void @llvm.dbg.value(metadata i32 %16, metadata !13464, metadata !DIExpression()), !dbg !13465
  ret i32 %16, !dbg !13475
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.201() unnamed_addr #15 !dbg !13476 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13477
  %2 = lshr i32 %1, 1, !dbg !13478
  %3 = and i32 %2, 1, !dbg !13478
  ret i32 %3, !dbg !13479
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.202() unnamed_addr #14 !dbg !13480 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13481
  %2 = or i32 %1, 1, !dbg !13481
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13481
  ret void, !dbg !13482
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.203(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #14 !dbg !13483 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13485, metadata !DIExpression()), !dbg !13489
  call void @llvm.dbg.value(metadata i32 %1, metadata !13486, metadata !DIExpression()), !dbg !13489
  call void @llvm.dbg.value(metadata i32 %2, metadata !13487, metadata !DIExpression()), !dbg !13489
  call void @llvm.dbg.value(metadata i32 %3, metadata !13488, metadata !DIExpression()), !dbg !13489
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13490
  %6 = and i32 %5, -4227072, !dbg !13490
  %7 = or i32 %1, %0, !dbg !13490
  %8 = shl i32 %2, 6, !dbg !13490
  %9 = or i32 %7, %8, !dbg !13490
  %10 = or i32 %9, %6, !dbg !13490
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13490
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13491
  %12 = and i32 %11, -196609, !dbg !13491
  %13 = or i32 %12, %3, !dbg !13491
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13491
  %14 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13492
  %15 = and i32 %14, -1879048193, !dbg !13492
  %16 = or i32 %15, %3, !dbg !13492
  store volatile i32 %16, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13492
  ret void, !dbg !13493
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct.ztest_suite_stats* nocapture noundef readonly %1) unnamed_addr #14 !dbg !13494 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13498, metadata !DIExpression()), !dbg !13502
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %1, metadata !13499, metadata !DIExpression()), !dbg !13502
  call void @llvm.dbg.value(metadata i32 0, metadata !13500, metadata !DIExpression()), !dbg !13502
  call void @llvm.dbg.value(metadata i32 0, metadata !13501, metadata !DIExpression()), !dbg !13502
  %3 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %1, i32 0, i32 0, !dbg !13503
  %4 = load i32, i32* %3, align 4, !dbg !13503
  %5 = lshr i32 %4, 4, !dbg !13503
  %6 = and i32 %5, 15, !dbg !13503
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !13503
  %8 = load i8, i8* %7, align 1, !dbg !13503
  %9 = zext i8 %8 to i32, !dbg !13503
  %10 = lshr i32 %0, %9, !dbg !13503
  call void @llvm.dbg.value(metadata i32 %10, metadata !13501, metadata !DIExpression()), !dbg !13502
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !13504
  %12 = icmp ult i32 %11, %10, !dbg !13506
  br i1 %12, label %13, label %16, !dbg !13507

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !13508
  call void @llvm.dbg.value(metadata i32 %14, metadata !13500, metadata !DIExpression()), !dbg !13502
  %15 = icmp eq i32 %14, 0, !dbg !13510
  br i1 %15, label %16, label %30, !dbg !13512

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.204() #24, !dbg !13513
  br label %17, !dbg !13515

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.205() #24, !dbg !13516
  %19 = icmp eq i32 %18, 1, !dbg !13517
  br i1 %19, label %20, label %17, !dbg !13515, !llvm.loop !13518

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !13520
  tail call fastcc void @LL_RCC_SetAHBPrescaler.206(i32 noundef %21) #24, !dbg !13521
  tail call fastcc void @LL_RCC_SetSysClkSource.207() #24, !dbg !13522
  br label %22, !dbg !13523

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.208() #24, !dbg !13524
  %24 = icmp eq i32 %23, 8, !dbg !13525
  br i1 %24, label %25, label %22, !dbg !13523, !llvm.loop !13526

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %1, i32 0, i32 1, !dbg !13528
  %27 = load i32, i32* %26, align 4, !dbg !13528
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.209(i32 noundef %27) #24, !dbg !13529
  %28 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %1, i32 0, i32 2, !dbg !13530
  %29 = load i32, i32* %28, align 4, !dbg !13530
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.210(i32 noundef %29) #24, !dbg !13531
  br label %30, !dbg !13532

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !13533
  %33 = icmp ugt i32 %32, %10, !dbg !13535
  br i1 %33, label %34, label %36, !dbg !13536

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !13537
  call void @llvm.dbg.value(metadata i32 %35, metadata !13500, metadata !DIExpression()), !dbg !13502
  br label %36, !dbg !13539

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !13502
  call void @llvm.dbg.value(metadata i32 %37, metadata !13500, metadata !DIExpression()), !dbg !13502
  %38 = icmp eq i32 %37, 0, !dbg !13540
  br i1 %38, label %39, label %40, !dbg !13542

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #24, !dbg !13543
  br label %40, !dbg !13545

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !13546
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.204() unnamed_addr #14 !dbg !13547 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13548
  %2 = or i32 %1, 16777216, !dbg !13548
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13548
  ret void, !dbg !13549
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.205() unnamed_addr #15 !dbg !13550 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13551
  %2 = lshr i32 %1, 25, !dbg !13552
  %3 = and i32 %2, 1, !dbg !13552
  ret i32 %3, !dbg !13553
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.206(i32 noundef %0) unnamed_addr #14 !dbg !13554 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13556, metadata !DIExpression()), !dbg !13557
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13558
  %3 = and i32 %2, -241, !dbg !13558
  %4 = or i32 %3, %0, !dbg !13558
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13558
  ret void, !dbg !13559
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.207() unnamed_addr #14 !dbg !13560 {
  call void @llvm.dbg.value(metadata i32 2, metadata !13562, metadata !DIExpression()), !dbg !13563
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13564
  %2 = and i32 %1, -4, !dbg !13564
  %3 = or i32 %2, 2, !dbg !13564
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13564
  ret void, !dbg !13565
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.208() unnamed_addr #15 !dbg !13566 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13567
  %2 = and i32 %1, 12, !dbg !13567
  ret i32 %2, !dbg !13568
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.209(i32 noundef %0) unnamed_addr #14 !dbg !13569 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13571, metadata !DIExpression()), !dbg !13572
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13573
  %3 = and i32 %2, -7169, !dbg !13573
  %4 = or i32 %3, %0, !dbg !13573
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13573
  ret void, !dbg !13574
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.210(i32 noundef %0) unnamed_addr #14 !dbg !13575 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13577, metadata !DIExpression()), !dbg !13578
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13579
  %3 = and i32 %2, -57345, !dbg !13579
  %4 = or i32 %3, %0, !dbg !13579
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13579
  ret void, !dbg !13580
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLSAI_IsReady() unnamed_addr #15 !dbg !13581 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13582
  %2 = lshr i32 %1, 29, !dbg !13583
  %3 = and i32 %2, 1, !dbg !13583
  ret i32 %3, !dbg !13584
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #15 !dbg !13585 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13586
  %2 = lshr i32 %1, 27, !dbg !13587
  %3 = and i32 %2, 1, !dbg !13587
  ret i32 %3, !dbg !13588
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct.ztest_suite_stats* nocapture noundef readonly %2, %struct.ztest_suite_stats* nocapture noundef readonly %3) local_unnamed_addr #14 !dbg !13589 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13593, metadata !DIExpression()), !dbg !13599
  call void @llvm.dbg.value(metadata i32 %1, metadata !13594, metadata !DIExpression()), !dbg !13599
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %2, metadata !13595, metadata !DIExpression()), !dbg !13599
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %3, metadata !13596, metadata !DIExpression()), !dbg !13599
  call void @llvm.dbg.value(metadata i32 0, metadata !13597, metadata !DIExpression()), !dbg !13599
  call void @llvm.dbg.value(metadata i32 0, metadata !13598, metadata !DIExpression()), !dbg !13599
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !13600
  %6 = icmp eq i32 %5, 0, !dbg !13602
  br i1 %6, label %7, label %27, !dbg !13603

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct.ztest_suite_stats* noundef %2) #24, !dbg !13604
  call void @llvm.dbg.value(metadata i32 %8, metadata !13598, metadata !DIExpression()), !dbg !13599
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.211() #24, !dbg !13606
  %10 = icmp eq i32 %9, 1, !dbg !13608
  br i1 %10, label %19, label %11, !dbg !13609

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !13610
  br i1 %12, label %13, label %14, !dbg !13613

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #24, !dbg !13614
  br label %15, !dbg !13616

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.212() #24, !dbg !13617
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.213() #24, !dbg !13619
  br label %16, !dbg !13620

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.211() #24, !dbg !13621
  %18 = icmp eq i32 %17, 1, !dbg !13622
  br i1 %18, label %19, label %16, !dbg !13620, !llvm.loop !13623

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %2, i32 0, i32 0, !dbg !13625
  %21 = load i32, i32* %20, align 4, !dbg !13625
  %22 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %2, i32 0, i32 1, !dbg !13626
  %23 = load i32, i32* %22, align 4, !dbg !13626
  %24 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %2, i32 0, i32 2, !dbg !13627
  %25 = load i32, i32* %24, align 4, !dbg !13627
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.203(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #24, !dbg !13628
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct.ztest_suite_stats* noundef %3) #24, !dbg !13629
  call void @llvm.dbg.value(metadata i32 %26, metadata !13597, metadata !DIExpression()), !dbg !13599
  br label %27, !dbg !13630

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !13631
  call void @llvm.dbg.value(metadata i32 %28, metadata !13597, metadata !DIExpression()), !dbg !13599
  ret i32 %28, !dbg !13632
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.211() unnamed_addr #15 !dbg !13633 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13634
  %2 = lshr i32 %1, 17, !dbg !13635
  %3 = and i32 %2, 1, !dbg !13635
  ret i32 %3, !dbg !13636
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #14 !dbg !13637 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13638
  %2 = or i32 %1, 262144, !dbg !13638
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13638
  ret void, !dbg !13639
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.212() unnamed_addr #14 !dbg !13640 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13641
  %2 = and i32 %1, -262145, !dbg !13641
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13641
  ret void, !dbg !13642
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.213() unnamed_addr #14 !dbg !13643 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13644
  %2 = or i32 %1, 65536, !dbg !13644
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13644
  ret void, !dbg !13645
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #21 !dbg !13646 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !13649, metadata !DIExpression()), !dbg !13665
  call void @llvm.dbg.value(metadata i32 undef, metadata !13649, metadata !DIExpression()), !dbg !13665
  call void @llvm.dbg.value(metadata i32 undef, metadata !13649, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !13665
  ret void, !dbg !13666
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !13667 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13671, metadata !DIExpression()), !dbg !13673
  %2 = icmp eq i8* %0, null, !dbg !13674
  br i1 %2, label %29, label %3, !dbg !13676

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !13677
  %5 = icmp eq i8 %4, 0, !dbg !13678
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !13679
  br i1 %6, label %29, label %8, !dbg !13679

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !13672, metadata !DIExpression()), !dbg !13673
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !13680

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !13672, metadata !DIExpression()), !dbg !13673
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #24, !dbg !13682
  br i1 %10, label %11, label %15, !dbg !13687

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !13688
  %13 = load i8*, i8** %12, align 4, !dbg !13688
  %14 = icmp eq i8* %13, %0, !dbg !13689
  br i1 %14, label %29, label %15, !dbg !13690

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !13691
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !13672, metadata !DIExpression()), !dbg !13673
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13692
  br i1 %17, label %7, label %8, !dbg !13693, !llvm.loop !13694

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !13672, metadata !DIExpression()), !dbg !13673
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #24, !dbg !13696
  br i1 %20, label %21, label %26, !dbg !13700

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !13701
  %23 = load i8*, i8** %22, align 4, !dbg !13701
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #25, !dbg !13702
  %25 = icmp eq i32 %24, 0, !dbg !13703
  br i1 %25, label %29, label %26, !dbg !13704

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !13705
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !13672, metadata !DIExpression()), !dbg !13673
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13706
  br i1 %28, label %29, label %18, !dbg !13680, !llvm.loop !13707

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !13673
  ret %struct.device* %30, !dbg !13709
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #8 !dbg !13710 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13714, metadata !DIExpression()), !dbg !13715
  %2 = icmp eq %struct.device* %0, null, !dbg !13716
  br i1 %2, label %14, label %3, !dbg !13718

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !13719
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !13719
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !13720
  %7 = load i8, i8* %6, align 1, !dbg !13720
  %8 = and i8 %7, 1, !dbg !13720
  %9 = icmp eq i8 %8, 0, !dbg !13720
  br i1 %9, label %14, label %10, !dbg !13721

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !13722
  %12 = load i8, i8* %11, align 1, !dbg !13722
  %13 = icmp eq i8 %12, 0, !dbg !13723
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !13715
  ret i1 %15, !dbg !13724
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #7 !dbg !13725 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !13730, metadata !DIExpression()), !dbg !13731
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !13732
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !13733
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13734 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13742, metadata !DIExpression()), !dbg !13747
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13743, metadata !DIExpression()), !dbg !13747
  call void @llvm.dbg.value(metadata i8* %2, metadata !13744, metadata !DIExpression()), !dbg !13747
  %5 = bitcast i32* %4 to i8*, !dbg !13748
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13748
  call void @llvm.dbg.value(metadata i32 0, metadata !13745, metadata !DIExpression()), !dbg !13747
  store i32 0, i32* %4, align 4, !dbg !13749
  call void @llvm.dbg.value(metadata i32* %4, metadata !13745, metadata !DIExpression(DW_OP_deref)), !dbg !13747
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !13750
  call void @llvm.dbg.value(metadata i16* %6, metadata !13746, metadata !DIExpression()), !dbg !13747
  %7 = load i32, i32* %4, align 4, !dbg !13751
  call void @llvm.dbg.value(metadata i32 %7, metadata !13745, metadata !DIExpression()), !dbg !13747
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !13752
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13753
  ret i32 %8, !dbg !13754
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !13755 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13759, metadata !DIExpression()), !dbg !13765
  call void @llvm.dbg.value(metadata i32* %1, metadata !13760, metadata !DIExpression()), !dbg !13765
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13766
  %4 = load i16*, i16** %3, align 4, !dbg !13766
  call void @llvm.dbg.value(metadata i16* %4, metadata !13761, metadata !DIExpression()), !dbg !13765
  %5 = icmp eq i16* %4, null, !dbg !13767
  br i1 %5, label %14, label %6, !dbg !13768

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !13769
  call void @llvm.dbg.value(metadata i32 %7, metadata !13762, metadata !DIExpression()), !dbg !13769
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !13770
  %9 = load i16, i16* %8, align 2, !dbg !13770
  %10 = add i16 %9, -32767, !dbg !13771
  %11 = icmp ult i16 %10, 2, !dbg !13771
  %12 = add i32 %7, 1, !dbg !13772
  call void @llvm.dbg.value(metadata i32 %12, metadata !13762, metadata !DIExpression()), !dbg !13769
  br i1 %11, label %13, label %6, !dbg !13771, !llvm.loop !13774

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !13777
  br label %14, !dbg !13778

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !13779
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !13780 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !13784, metadata !DIExpression()), !dbg !13795
  call void @llvm.dbg.value(metadata i32 %1, metadata !13785, metadata !DIExpression()), !dbg !13795
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !13786, metadata !DIExpression()), !dbg !13795
  call void @llvm.dbg.value(metadata i8* %3, metadata !13787, metadata !DIExpression()), !dbg !13795
  call void @llvm.dbg.value(metadata i32 0, metadata !13788, metadata !DIExpression()), !dbg !13796
  %5 = icmp eq i32 %1, 0, !dbg !13797
  br i1 %5, label %16, label %8, !dbg !13798

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !13788, metadata !DIExpression()), !dbg !13796
  %7 = icmp eq i32 %15, %1, !dbg !13797
  br i1 %7, label %16, label %8, !dbg !13798, !llvm.loop !13799

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !13788, metadata !DIExpression()), !dbg !13796
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !13801
  %11 = load i16, i16* %10, align 2, !dbg !13801
  call void @llvm.dbg.value(metadata i16 %11, metadata !13790, metadata !DIExpression()), !dbg !13802
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #24, !dbg !13803
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !13793, metadata !DIExpression()), !dbg !13802
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #25, !dbg !13804
  call void @llvm.dbg.value(metadata i32 %13, metadata !13794, metadata !DIExpression()), !dbg !13802
  %14 = icmp slt i32 %13, 0, !dbg !13805
  %15 = add nuw i32 %9, 1, !dbg !13807
  call void @llvm.dbg.value(metadata i32 %15, metadata !13788, metadata !DIExpression()), !dbg !13796
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !13808
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #2 !dbg !13809 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !13813, metadata !DIExpression()), !dbg !13816
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !13814, metadata !DIExpression()), !dbg !13816
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !13815, metadata !DIExpression()), !dbg !13816
  %2 = sext i16 %0 to i32, !dbg !13817
  %3 = icmp slt i16 %0, 1, !dbg !13819
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !13820
  %6 = add nsw i32 %2, -1, !dbg !13820
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !13820
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !13820
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !13814, metadata !DIExpression()), !dbg !13816
  ret %struct.device* %8, !dbg !13821
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13822 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13824, metadata !DIExpression()), !dbg !13829
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13825, metadata !DIExpression()), !dbg !13829
  call void @llvm.dbg.value(metadata i8* %2, metadata !13826, metadata !DIExpression()), !dbg !13829
  %5 = bitcast i32* %4 to i8*, !dbg !13830
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13830
  call void @llvm.dbg.value(metadata i32 0, metadata !13827, metadata !DIExpression()), !dbg !13829
  store i32 0, i32* %4, align 4, !dbg !13831
  call void @llvm.dbg.value(metadata i32* %4, metadata !13827, metadata !DIExpression(DW_OP_deref)), !dbg !13829
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !13832
  call void @llvm.dbg.value(metadata i16* %6, metadata !13828, metadata !DIExpression()), !dbg !13829
  %7 = load i32, i32* %4, align 4, !dbg !13833
  call void @llvm.dbg.value(metadata i32 %7, metadata !13827, metadata !DIExpression()), !dbg !13829
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !13834
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13835
  ret i32 %8, !dbg !13836
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !13837 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13839, metadata !DIExpression()), !dbg !13844
  call void @llvm.dbg.value(metadata i32* %1, metadata !13840, metadata !DIExpression()), !dbg !13844
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13845
  %4 = load i16*, i16** %3, align 4, !dbg !13845
  call void @llvm.dbg.value(metadata i16* %4, metadata !13841, metadata !DIExpression()), !dbg !13844
  call void @llvm.dbg.value(metadata i32 0, metadata !13842, metadata !DIExpression()), !dbg !13844
  call void @llvm.dbg.value(metadata i32 0, metadata !13843, metadata !DIExpression()), !dbg !13844
  %5 = icmp eq i16* %4, null, !dbg !13846
  br i1 %5, label %22, label %6, !dbg !13848

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !13842, metadata !DIExpression()), !dbg !13844
  call void @llvm.dbg.value(metadata i16* %8, metadata !13841, metadata !DIExpression()), !dbg !13844
  %9 = load i16, i16* %8, align 2, !dbg !13849
  %10 = icmp eq i16 %9, -32768, !dbg !13853
  call void @llvm.dbg.value(metadata i32 undef, metadata !13842, metadata !DIExpression()), !dbg !13844
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !13854
  call void @llvm.dbg.value(metadata i16* %11, metadata !13841, metadata !DIExpression()), !dbg !13844
  %12 = zext i1 %10 to i32, !dbg !13855
  %13 = add i32 %7, %12, !dbg !13855
  call void @llvm.dbg.value(metadata i32 %13, metadata !13842, metadata !DIExpression()), !dbg !13844
  %14 = icmp eq i32 %13, 2, !dbg !13856
  br i1 %14, label %15, label %6, !dbg !13857

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !13844
  call void @llvm.dbg.value(metadata i32 %16, metadata !13843, metadata !DIExpression()), !dbg !13844
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !13858
  %18 = load i16, i16* %17, align 2, !dbg !13858
  %19 = icmp eq i16 %18, 32767, !dbg !13859
  %20 = add i32 %16, 1, !dbg !13860
  call void @llvm.dbg.value(metadata i32 %20, metadata !13843, metadata !DIExpression()), !dbg !13844
  br i1 %19, label %21, label %15, !dbg !13862, !llvm.loop !13863

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !13865
  br label %22, !dbg !13866

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !13867
  call void @llvm.dbg.value(metadata i16* %23, metadata !13841, metadata !DIExpression()), !dbg !13844
  ret i16* %23, !dbg !13868
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #8 !dbg !13869 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13872
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 5, !dbg !13873
  ret i32* %2, !dbg !13874
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #2 !dbg !13875 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14026, metadata !DIExpression()), !dbg !14029
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !14027, metadata !DIExpression()), !dbg !14029
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14028, metadata !DIExpression()), !dbg !14029
  ret void, !dbg !14030
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !14031 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14035, metadata !DIExpression()), !dbg !14037
  call void @llvm.dbg.value(metadata i32 %1, metadata !14036, metadata !DIExpression()), !dbg !14037
  ret void, !dbg !14038
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !14039 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14043, metadata !DIExpression()), !dbg !14045
  call void @llvm.dbg.value(metadata i32 %1, metadata !14044, metadata !DIExpression()), !dbg !14045
  ret void, !dbg !14046
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #2 !dbg !14047 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14051, metadata !DIExpression()), !dbg !14053
  call void @llvm.dbg.value(metadata i8* %1, metadata !14052, metadata !DIExpression()), !dbg !14053
  ret i32 -134, !dbg !14054
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #2 !dbg !14055 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14059, metadata !DIExpression()), !dbg !14061
  call void @llvm.dbg.value(metadata i8* %1, metadata !14060, metadata !DIExpression()), !dbg !14061
  ret i32 -134, !dbg !14062
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #10 !dbg !14063 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14066, metadata !DIExpression()), !dbg !14067
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14068, !srcloc !14074
  call void @llvm.dbg.value(metadata i32 undef, metadata !14071, metadata !DIExpression()) #23, !dbg !14075
  call void @llvm.dbg.value(metadata i32 undef, metadata !14072, metadata !DIExpression()) #23, !dbg !14075
  br label %3, !dbg !14076

3:                                                ; preds = %3, %1
  br label %3, !dbg !14077, !llvm.loop !14080
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !14083 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14087, metadata !DIExpression()), !dbg !14089
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !14088, metadata !DIExpression()), !dbg !14089
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.218, i32 0, i32 0), i32 noundef 69) #25, !dbg !14090
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !14095
  unreachable, !dbg !14095
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #10 !dbg !14096 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14098, metadata !DIExpression()), !dbg !14099
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !14100
  unreachable, !dbg !14100
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !14101 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14103, metadata !DIExpression()), !dbg !14107
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !14104, metadata !DIExpression()), !dbg !14107
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14108, !srcloc !14074
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !14108
  call void @llvm.dbg.value(metadata i32 %4, metadata !14071, metadata !DIExpression()) #23, !dbg !14110
  call void @llvm.dbg.value(metadata i32 undef, metadata !14072, metadata !DIExpression()) #23, !dbg !14110
  call void @llvm.dbg.value(metadata i32 %4, metadata !14105, metadata !DIExpression()), !dbg !14107
  %5 = tail call fastcc %struct.k_thread* @k_current_get.221() #26, !dbg !14111
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14106, metadata !DIExpression()), !dbg !14107
  %6 = tail call fastcc i8* @reason_to_str(i32 noundef %0) #24, !dbg !14112
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.222, i32 0, i32 0), i32 noundef 69, i32 noundef %0, i8* noundef %6, i32 noundef 0) #25, !dbg !14112
  %7 = icmp eq %struct.__esf* %1, null, !dbg !14117
  br i1 %7, label %20, label %8, !dbg !14119

8:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !14120, metadata !DIExpression()), !dbg !14125
  %9 = getelementptr inbounds %struct.__esf, %struct.__esf* %1, i32 0, i32 0, i32 7, !dbg !14127
  %10 = load i32, i32* %9, align 4, !dbg !14127
  %11 = and i32 %10, 511, !dbg !14128
  %12 = icmp eq i32 %11, 0, !dbg !14129
  br i1 %12, label %14, label %13, !dbg !14130

13:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.223, i32 0, i32 0), i32 noundef 69) #25, !dbg !14131
  br label %14, !dbg !14137

14:                                               ; preds = %8, %13
  %15 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %5) #24, !dbg !14138
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.224, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %5, i8* noundef %15) #25, !dbg !14138
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #24, !dbg !14143
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !14120, metadata !DIExpression()), !dbg !14144
  %16 = load i32, i32* %9, align 4, !dbg !14149
  %17 = and i32 %16, 511, !dbg !14150
  %18 = icmp eq i32 %17, 0, !dbg !14151
  br i1 %18, label %22, label %19, !dbg !14152

19:                                               ; preds = %14
  call void @llvm.dbg.value(metadata i32 %4, metadata !14153, metadata !DIExpression()) #23, !dbg !14156
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !14159, !srcloc !14160
  br label %25, !dbg !14161

20:                                               ; preds = %2
  %21 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %5) #24, !dbg !14138
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.224, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %5, i8* noundef %21) #25, !dbg !14138
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #24, !dbg !14143
  br label %22, !dbg !14162

22:                                               ; preds = %20, %14
  %23 = icmp eq i32 %0, 1, !dbg !14163
  call void @llvm.dbg.value(metadata i32 %4, metadata !14153, metadata !DIExpression()) #23, !dbg !14166
  call void @llvm.dbg.value(metadata i32 %4, metadata !14153, metadata !DIExpression()) #23, !dbg !14169
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !14107
  br i1 %23, label %25, label %24, !dbg !14171

24:                                               ; preds = %22
  tail call fastcc void @k_thread_abort.225(%struct.k_thread* noundef %5) #24, !dbg !14172
  br label %25, !dbg !14175

25:                                               ; preds = %22, %24, %19
  ret void, !dbg !14175
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.221() unnamed_addr #11 !dbg !14176 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.233() #26, !dbg !14180
  ret %struct.k_thread* %1, !dbg !14181
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @reason_to_str(i32 noundef %0) unnamed_addr #2 !dbg !14182 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14186, metadata !DIExpression()), !dbg !14187
  %2 = icmp ult i32 %0, 5, !dbg !14188
  br i1 %2, label %3, label %6, !dbg !14188

3:                                                ; preds = %1
  %4 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table.reason_to_str, i32 0, i32 %0, !dbg !14188
  %5 = load i8*, i8** %4, align 4, !dbg !14188
  br label %6, !dbg !14188

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9.227, i32 0, i32 0), %1 ], !dbg !14189
  ret i8* %7, !dbg !14191
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @thread_name_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14192 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14196, metadata !DIExpression()), !dbg !14198
  %2 = icmp eq %struct.k_thread* %0, null, !dbg !14199
  br i1 %2, label %9, label %3, !dbg !14200

3:                                                ; preds = %1
  %4 = tail call i8* @k_thread_name_get(%struct.k_thread* noundef nonnull %0) #25, !dbg !14201
  call void @llvm.dbg.value(metadata i8* %4, metadata !14197, metadata !DIExpression()), !dbg !14198
  %5 = icmp eq i8* %4, null, !dbg !14202
  br i1 %5, label %9, label %6, !dbg !14204

6:                                                ; preds = %3
  %7 = load i8, i8* %4, align 1, !dbg !14205
  %8 = icmp eq i8 %7, 0, !dbg !14206
  br i1 %8, label %9, label %10, !dbg !14207

9:                                                ; preds = %1, %6, %3
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.226, i32 0, i32 0), metadata !14197, metadata !DIExpression()), !dbg !14198
  br label %10, !dbg !14208

10:                                               ; preds = %9, %6
  %11 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.226, i32 0, i32 0), %9 ], [ %4, %6 ], !dbg !14198
  call void @llvm.dbg.value(metadata i8* %11, metadata !14197, metadata !DIExpression()), !dbg !14198
  ret i8* %11, !dbg !14210
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.225(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14211 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14215, metadata !DIExpression()), !dbg !14216
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !14217, !srcloc !14219
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !14220
  ret void, !dbg !14221
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.233() unnamed_addr #11 !dbg !14222 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !14223, !srcloc !14225
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !14226
  ret %struct.k_thread* %1, !dbg !14227
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !14228 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14232, metadata !DIExpression()), !dbg !14235
  call void @llvm.dbg.value(metadata i32 %1, metadata !14233, metadata !DIExpression()), !dbg !14235
  call void @llvm.dbg.value(metadata i32 %2, metadata !14234, metadata !DIExpression()), !dbg !14235
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #25, !dbg !14236
  ret void, !dbg !14237
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !14238 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14242, metadata !DIExpression()), !dbg !14245
  call void @llvm.dbg.value(metadata i8* %1, metadata !14243, metadata !DIExpression()), !dbg !14245
  call void @llvm.dbg.value(metadata i32 %2, metadata !14244, metadata !DIExpression()), !dbg !14245
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #25, !dbg !14246
  ret void, !dbg !14247
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !14248 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #24, !dbg !14249
  ret void, !dbg !14250
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !14251 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14253, metadata !DIExpression()), !dbg !14254
  tail call fastcc void @init_idle_thread(i32 noundef %0) #24, !dbg !14255
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !14256
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !14257
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !14258
  %4 = trunc i32 %0 to i8, !dbg !14259
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !14260
  store i8 %4, i8* %5, align 4, !dbg !14261
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !14262
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #24, !dbg !14263
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !14264
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !14265
  store i8* %8, i8** %9, align 4, !dbg !14266
  ret void, !dbg !14267
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !14268 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14270, metadata !DIExpression()), !dbg !14276
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !14277
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14271, metadata !DIExpression()), !dbg !14276
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !14278
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !14272, metadata !DIExpression()), !dbg !14276
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.240, i32 0, i32 0), metadata !14275, metadata !DIExpression()), !dbg !14276
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !14279
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !14280
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.240, i32 0, i32 0)) #25, !dbg !14281
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #24, !dbg !14282
  ret void, !dbg !14283
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #2 !dbg !14284 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !14288, metadata !DIExpression()), !dbg !14289
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !14290
  ret i8* %2, !dbg !14291
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !14292 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14297, metadata !DIExpression()), !dbg !14298
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14299
  %3 = load i8, i8* %2, align 1, !dbg !14300
  %4 = and i8 %3, -5, !dbg !14300
  store i8 %4, i8* %2, align 1, !dbg !14300
  ret void, !dbg !14301
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #10 !dbg !14302 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #24, !dbg !14305
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #25, !dbg !14306
  %3 = ptrtoint i8* %2 to i32, !dbg !14315
  %4 = add i32 %3, 2048, !dbg !14316
  call void @llvm.dbg.value(metadata i32 %4, metadata !14310, metadata !DIExpression()) #23, !dbg !14317
  call void @llvm.dbg.value(metadata i32 %4, metadata !14318, metadata !DIExpression()) #23, !dbg !14321
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #23, !dbg !14323, !srcloc !14324
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !14325
  %6 = or i32 %5, 512, !dbg !14325
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !14325
  tail call fastcc void @__NVIC_SetPriority.243(i32 noundef -2, i32 noundef 255) #25, !dbg !14326
  tail call fastcc void @__NVIC_SetPriority.243(i32 noundef -5, i32 noundef 0) #25, !dbg !14329
  tail call fastcc void @__NVIC_SetPriority.243(i32 noundef -12, i32 noundef 0) #25, !dbg !14330
  tail call fastcc void @__NVIC_SetPriority.243(i32 noundef -11, i32 noundef 0) #25, !dbg !14331
  tail call fastcc void @__NVIC_SetPriority.243(i32 noundef -10, i32 noundef 0) #25, !dbg !14332
  tail call fastcc void @__NVIC_SetPriority.243(i32 noundef -4, i32 noundef 0) #25, !dbg !14333
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !14334
  %8 = or i32 %7, 458752, !dbg !14334
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !14334
  tail call void @z_arm_fault_init() #25, !dbg !14335
  tail call void @z_arm_cpu_idle_init() #25, !dbg !14336
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !14337
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !14340
  %9 = tail call i32 @z_arm_mpu_init() #25, !dbg !14341
  tail call void @z_arm_configure_static_mpu_regions() #25, !dbg !14342
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !14343
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %10) #23, !dbg !14343
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !14304, metadata !DIExpression()), !dbg !14344
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #24, !dbg !14345
  call void @z_device_state_init() #25, !dbg !14346
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #24, !dbg !14347
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #24, !dbg !14348
  %11 = call fastcc i8* @prepare_multithreading() #24, !dbg !14349
  call fastcc void @switch_to_main_thread(i8* noundef %11) #29, !dbg !14350
  unreachable, !dbg !14350
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2267 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2271, metadata !DIExpression()), !dbg !14351
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !14352
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !14352
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2272, metadata !DIExpression()), !dbg !14351
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2272, metadata !DIExpression()), !dbg !14351
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !14353
  br i1 %7, label %8, label %35, !dbg !14354

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2272, metadata !DIExpression()), !dbg !14351
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !14355
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !14355
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2282, metadata !DIExpression()), !dbg !14356
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !14357
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !14357
  %14 = tail call i32 %13(%struct.device* noundef %11) #25, !dbg !14358
  call void @llvm.dbg.value(metadata i32 %14, metadata !2286, metadata !DIExpression()), !dbg !14356
  %15 = icmp eq %struct.device* %11, null, !dbg !14359
  br i1 %15, label %32, label %16, !dbg !14361

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !14362
  br i1 %17, label %26, label %18, !dbg !14365

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !14366
  call void @llvm.dbg.value(metadata i32 %19, metadata !2286, metadata !DIExpression()), !dbg !14356
  %20 = icmp ult i32 %19, 255, !dbg !14368
  %21 = select i1 %20, i32 %19, i32 255, !dbg !14368
  call void @llvm.dbg.value(metadata i32 %21, metadata !2286, metadata !DIExpression()), !dbg !14356
  %22 = trunc i32 %21 to i8, !dbg !14369
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !14370
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !14370
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !14371
  store i8 %22, i8* %25, align 1, !dbg !14372
  br label %26, !dbg !14373

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !14374
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !14374
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !14375
  %30 = load i8, i8* %29, align 1, !dbg !14376
  %31 = or i8 %30, 1, !dbg !14376
  store i8 %31, i8* %29, align 1, !dbg !14376
  br label %32, !dbg !14377

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !14378
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2272, metadata !DIExpression()), !dbg !14351
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !14353
  br i1 %34, label %8, label %35, !dbg !14354, !llvm.loop !14379

35:                                               ; preds = %32, %1
  ret void, !dbg !14381
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.243(i32 noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !14382 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14384, metadata !DIExpression()), !dbg !14386
  call void @llvm.dbg.value(metadata i32 %1, metadata !14385, metadata !DIExpression()), !dbg !14386
  %3 = trunc i32 %1 to i8, !dbg !14387
  %4 = shl i8 %3, 4, !dbg !14387
  %5 = and i32 %0, 15, !dbg !14390
  %6 = add nsw i32 %5, -4, !dbg !14391
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !14392
  store volatile i8 %4, i8* %7, align 1, !dbg !14393
  ret void, !dbg !14394
}

; Function Attrs: optsize
declare !dbg !14395 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #7 !dbg !14396 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14399, metadata !DIExpression()), !dbg !14400
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14401
  store i8 1, i8* %2, align 1, !dbg !14402
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !14403
  store i8 1, i8* %3, align 4, !dbg !14404
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !14405
  store i32 0, i32* %4, align 4, !dbg !14406
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 1, !dbg !14407
  store i32 0, i32* %5, align 4, !dbg !14408
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, !dbg !14409
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !14410
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14411
  ret void, !dbg !14412
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !14413 {
  tail call void @z_sched_init() #25, !dbg !14418
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14419
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.244, i32 0, i32 0)) #25, !dbg !14420
  call void @llvm.dbg.value(metadata i8* %1, metadata !14417, metadata !DIExpression()), !dbg !14421
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #24, !dbg !14422
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !14423
  tail call void @z_init_cpu(i32 noundef 0) #24, !dbg !14424
  ret i8* %1, !dbg !14425
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #10 !dbg !14426 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14430, metadata !DIExpression()), !dbg !14431
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #25, !dbg !14432
  unreachable, !dbg !14433
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !14434 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14436, metadata !DIExpression()), !dbg !14439
  call void @llvm.dbg.value(metadata i8* %1, metadata !14437, metadata !DIExpression()), !dbg !14439
  call void @llvm.dbg.value(metadata i8* %2, metadata !14438, metadata !DIExpression()), !dbg !14439
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !14440
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #24, !dbg !14441
  tail call void @boot_banner() #25, !dbg !14442
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #24, !dbg !14443
  tail call void @z_init_static_threads() #25, !dbg !14444
  tail call void @main() #25, !dbg !14445
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !14446
  %5 = and i8 %4, -2, !dbg !14446
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !14446
  ret void, !dbg !14447
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #2 !dbg !14448 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !14458, metadata !DIExpression()), !dbg !14460
  call void @llvm.dbg.value(metadata i8* %1, metadata !14459, metadata !DIExpression()), !dbg !14460
  ret void, !dbg !14461
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #2 !dbg !14462 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !14464, metadata !DIExpression()), !dbg !14466
  call void @llvm.dbg.value(metadata i8* %1, metadata !14465, metadata !DIExpression()), !dbg !14466
  ret void, !dbg !14467
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !14468 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !14469, !srcloc !14476
  call void @llvm.dbg.value(metadata i32 %1, metadata !14472, metadata !DIExpression()) #23, !dbg !14477
  %2 = icmp ne i32 %1, 0, !dbg !14478
  ret i1 %2, !dbg !14479
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #9 !dbg !14480 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14481
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !14482
  %3 = load i8, i8* %2, align 4, !dbg !14483
  %4 = or i8 %3, 1, !dbg !14483
  store i8 %4, i8* %2, align 4, !dbg !14483
  ret void, !dbg !14484
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #9 !dbg !14485 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14486
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !14487
  %3 = load i8, i8* %2, align 4, !dbg !14488
  %4 = and i8 %3, -2, !dbg !14488
  store i8 %4, i8* %2, align 4, !dbg !14488
  ret void, !dbg !14489
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #8 !dbg !14490 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14491
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !14492
  %3 = load i8, i8* %2, align 4, !dbg !14492
  %4 = and i8 %3, 1, !dbg !14493
  %5 = icmp ne i8 %4, 0, !dbg !14494
  ret i1 %5, !dbg !14495
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !14496 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14500, metadata !DIExpression()), !dbg !14502
  call void @llvm.dbg.value(metadata i8* %1, metadata !14501, metadata !DIExpression()), !dbg !14502
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !14503
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %0, !dbg !14505
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14500, metadata !DIExpression()), !dbg !14502
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 4, i32 0, !dbg !14506
  %7 = tail call i8* @strncpy(i8* noundef nonnull %6, i8* noundef %1, i32 noundef 31) #25, !dbg !14507
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 4, i32 31, !dbg !14508
  store i8 0, i8* %8, align 1, !dbg !14509
  ret i32 0, !dbg !14510
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local nonnull i8* @k_thread_name_get(%struct.k_thread* noundef readnone %0) local_unnamed_addr #2 !dbg !14511 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14515, metadata !DIExpression()), !dbg !14516
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !14517
  ret i8* %2, !dbg !14518
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !14519 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14523, metadata !DIExpression()), !dbg !14526
  call void @llvm.dbg.value(metadata i8* %1, metadata !14524, metadata !DIExpression()), !dbg !14526
  call void @llvm.dbg.value(metadata i32 %2, metadata !14525, metadata !DIExpression()), !dbg !14526
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !14527
  %5 = tail call i8* @strncpy(i8* noundef %1, i8* noundef nonnull %4, i32 noundef %2) #25, !dbg !14528
  ret i32 0, !dbg !14529
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2297 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2414, metadata !DIExpression()), !dbg !14530
  call void @llvm.dbg.value(metadata i8* %1, metadata !2415, metadata !DIExpression()), !dbg !14530
  call void @llvm.dbg.value(metadata i32 %2, metadata !2416, metadata !DIExpression()), !dbg !14530
  call void @llvm.dbg.value(metadata i32 0, metadata !2417, metadata !DIExpression()), !dbg !14530
  call void @llvm.dbg.value(metadata i8 undef, metadata !2419, metadata !DIExpression()), !dbg !14530
  %4 = icmp eq i8* %1, null, !dbg !14531
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !14533
  br i1 %6, label %46, label %7, !dbg !14533

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14534
  %9 = load i8, i8* %8, align 1, !dbg !14534
  call void @llvm.dbg.value(metadata i8 %9, metadata !2419, metadata !DIExpression()), !dbg !14530
  %10 = add i32 %2, -1, !dbg !14535
  call void @llvm.dbg.value(metadata i32 %10, metadata !2416, metadata !DIExpression()), !dbg !14530
  call void @llvm.dbg.value(metadata i8 0, metadata !2420, metadata !DIExpression()), !dbg !14536
  call void @llvm.dbg.value(metadata i8 %9, metadata !2419, metadata !DIExpression()), !dbg !14530
  call void @llvm.dbg.value(metadata i32 0, metadata !2417, metadata !DIExpression()), !dbg !14530
  %11 = icmp eq i8 %9, 0, !dbg !14537
  br i1 %11, label %12, label %15, !dbg !14539

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !14540
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !14541
  store i8 0, i8* %14, align 1, !dbg !14542
  br label %46, !dbg !14543

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2420, metadata !DIExpression()), !dbg !14536
  call void @llvm.dbg.value(metadata i8 %17, metadata !2419, metadata !DIExpression()), !dbg !14530
  call void @llvm.dbg.value(metadata i32 %18, metadata !2417, metadata !DIExpression()), !dbg !14530
  %19 = zext i8 %17 to i32, !dbg !14544
  %20 = zext i8 %16 to i32, !dbg !14545
  %21 = shl nuw i32 1, %20, !dbg !14545
  call void @llvm.dbg.value(metadata i32 %21, metadata !2418, metadata !DIExpression()), !dbg !14530
  %22 = and i32 %21, %19, !dbg !14547
  %23 = icmp eq i32 %22, 0, !dbg !14549
  br i1 %23, label %42, label %24, !dbg !14550

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !14551
  %26 = sub i32 %10, %18, !dbg !14552
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !14553
  %28 = load i8*, i8** %27, align 4, !dbg !14553
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !14554
  %30 = load i32, i32* %29, align 4, !dbg !14554
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #24, !dbg !14555
  %32 = add i32 %31, %18, !dbg !14556
  call void @llvm.dbg.value(metadata i32 %32, metadata !2417, metadata !DIExpression()), !dbg !14530
  %33 = trunc i32 %21 to i8, !dbg !14557
  %34 = xor i8 %33, -1, !dbg !14557
  %35 = and i8 %17, %34, !dbg !14557
  call void @llvm.dbg.value(metadata i8 %35, metadata !2419, metadata !DIExpression()), !dbg !14530
  %36 = icmp eq i8 %35, 0, !dbg !14558
  br i1 %36, label %12, label %37, !dbg !14560

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !14561
  %39 = sub i32 %10, %32, !dbg !14563
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.249, i32 0, i32 0), i32 noundef 1) #24, !dbg !14564
  %41 = add i32 %40, %32, !dbg !14565
  call void @llvm.dbg.value(metadata i32 %41, metadata !2417, metadata !DIExpression()), !dbg !14530
  br label %42, !dbg !14566

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !14530
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !14530
  call void @llvm.dbg.value(metadata i8 %44, metadata !2419, metadata !DIExpression()), !dbg !14530
  call void @llvm.dbg.value(metadata i32 %43, metadata !2417, metadata !DIExpression()), !dbg !14530
  %45 = add i8 %16, 1, !dbg !14567
  call void @llvm.dbg.value(metadata i8 %45, metadata !2420, metadata !DIExpression()), !dbg !14536
  br label %15, !dbg !14539

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.250, i32 0, i32 0), %3 ], !dbg !14530
  ret i8* %47, !dbg !14568
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !14569 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14573, metadata !DIExpression()), !dbg !14578
  call void @llvm.dbg.value(metadata i32 %1, metadata !14574, metadata !DIExpression()), !dbg !14578
  call void @llvm.dbg.value(metadata i8* %2, metadata !14575, metadata !DIExpression()), !dbg !14578
  call void @llvm.dbg.value(metadata i32 %3, metadata !14576, metadata !DIExpression()), !dbg !14578
  %5 = icmp ult i32 %1, %3, !dbg !14579
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !14579
  call void @llvm.dbg.value(metadata i32 %6, metadata !14577, metadata !DIExpression()), !dbg !14578
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #25, !dbg !14580
  ret i32 %6, !dbg !14581
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14582 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14586, metadata !DIExpression()), !dbg !14587
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #25, !dbg !14588
  ret void, !dbg !14589
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef %9) local_unnamed_addr #1 !dbg !14590 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14599, metadata !DIExpression()), !dbg !14610
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14600, metadata !DIExpression()), !dbg !14610
  call void @llvm.dbg.value(metadata i32 %2, metadata !14601, metadata !DIExpression()), !dbg !14610
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14602, metadata !DIExpression()), !dbg !14610
  call void @llvm.dbg.value(metadata i8* %4, metadata !14603, metadata !DIExpression()), !dbg !14610
  call void @llvm.dbg.value(metadata i8* %5, metadata !14604, metadata !DIExpression()), !dbg !14610
  call void @llvm.dbg.value(metadata i8* %6, metadata !14605, metadata !DIExpression()), !dbg !14610
  call void @llvm.dbg.value(metadata i32 %7, metadata !14606, metadata !DIExpression()), !dbg !14610
  call void @llvm.dbg.value(metadata i32 %8, metadata !14607, metadata !DIExpression()), !dbg !14610
  call void @llvm.dbg.value(metadata i8* %9, metadata !14608, metadata !DIExpression()), !dbg !14610
  %11 = icmp eq i32 %7, 15, !dbg !14611
  br i1 %11, label %12, label %15, !dbg !14611

12:                                               ; preds = %10
  %13 = bitcast void (i8*, i8*, i8*)* %3 to i8*, !dbg !14611
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef %13) #24, !dbg !14611
  br i1 %14, label %19, label %18, !dbg !14611

15:                                               ; preds = %10
  %16 = add i32 %7, 16, !dbg !14611
  %17 = icmp ult i32 %16, 31, !dbg !14611
  br i1 %17, label %19, label %18, !dbg !14611

18:                                               ; preds = %12, %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([128 x i8], [128 x i8]* @.str.10.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.264, i32 0, i32 0), i32 noundef 536) #25, !dbg !14615
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.12.265, i32 0, i32 0), i32 noundef %7, i32 noundef 14, i32 noundef -16) #25, !dbg !14615
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.264, i32 0, i32 0), i32 noundef 536) #25, !dbg !14615
  unreachable, !dbg !14615

19:                                               ; preds = %15, %12
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !14617
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %20) #24, !dbg !14618
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !14619
  tail call void @z_init_thread_base(%struct._thread_base* noundef %21, i32 noundef %7, i32 noundef 4, i32 noundef %8) #24, !dbg !14620
  %22 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #24, !dbg !14621
  call void @llvm.dbg.value(metadata i8* %22, metadata !14609, metadata !DIExpression()), !dbg !14610
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %22, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #25, !dbg !14622
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !14623
  store i8* null, i8** %23, align 4, !dbg !14624
  %24 = icmp eq i8* %9, null, !dbg !14625
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !14627
  br i1 %24, label %29, label %26, !dbg !14628

26:                                               ; preds = %19
  %27 = tail call i8* @strncpy(i8* noundef nonnull %25, i8* noundef nonnull %9, i32 noundef 31) #25, !dbg !14629
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 31, !dbg !14631
  store i8 0, i8* %28, align 1, !dbg !14632
  br label %30, !dbg !14633

29:                                               ; preds = %19
  store i8 0, i8* %25, align 8, !dbg !14634
  br label %30

30:                                               ; preds = %29, %26
  %31 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14636
  %32 = icmp eq %struct.k_thread* %31, null, !dbg !14636
  br i1 %32, label %36, label %33, !dbg !14638

33:                                               ; preds = %30
  %34 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %31, i32 0, i32 7, !dbg !14639
  %35 = load %struct.k_heap*, %struct.k_heap** %34, align 8, !dbg !14639
  br label %36, !dbg !14640

36:                                               ; preds = %30, %33
  %37 = phi %struct.k_heap* [ %35, %33 ], [ null, %30 ], !dbg !14610
  %38 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, !dbg !14641
  store %struct.k_heap* %37, %struct.k_heap** %38, align 8, !dbg !14643
  ret i8* %22, !dbg !14644
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef readnone %0) unnamed_addr #2 !dbg !14645 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14649, metadata !DIExpression()), !dbg !14650
  %2 = icmp eq i8* %0, bitcast (void (i8*, i8*, i8*)* @idle to i8*), !dbg !14651
  ret i1 %2, !dbg !14652
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #7 !dbg !14653 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14658, metadata !DIExpression()), !dbg !14659
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !14660
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #24, !dbg !14661
  ret void, !dbg !14662
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #7 !dbg !14663 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14668, metadata !DIExpression()), !dbg !14672
  call void @llvm.dbg.value(metadata i32 %1, metadata !14669, metadata !DIExpression()), !dbg !14672
  call void @llvm.dbg.value(metadata i32 %2, metadata !14670, metadata !DIExpression()), !dbg !14672
  call void @llvm.dbg.value(metadata i32 %3, metadata !14671, metadata !DIExpression()), !dbg !14672
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !14673
  store %union.anon* null, %union.anon** %5, align 8, !dbg !14674
  %6 = trunc i32 %3 to i8, !dbg !14675
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !14676
  store i8 %6, i8* %7, align 4, !dbg !14677
  %8 = trunc i32 %2 to i8, !dbg !14678
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !14679
  store i8 %8, i8* %9, align 1, !dbg !14680
  %10 = trunc i32 %1 to i8, !dbg !14681
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !14682
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !14682
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !14682
  store i8 %10, i8* %13, align 2, !dbg !14683
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !14684
  store i8 0, i8* %14, align 1, !dbg !14685
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #24, !dbg !14686
  ret void, !dbg !14687
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !14688 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14692, metadata !DIExpression()), !dbg !14700
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14693, metadata !DIExpression()), !dbg !14700
  call void @llvm.dbg.value(metadata i32 %2, metadata !14694, metadata !DIExpression()), !dbg !14700
  call void @llvm.dbg.value(metadata i32 0, metadata !14699, metadata !DIExpression()), !dbg !14700
  %4 = add i32 %2, 7, !dbg !14701
  %5 = and i32 %4, -8, !dbg !14701
  %6 = add i32 %5, 64, !dbg !14701
  call void @llvm.dbg.value(metadata i32 %6, metadata !14695, metadata !DIExpression()), !dbg !14700
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.266(%struct.z_thread_stack_element* noundef %1) #24, !dbg !14703
  call void @llvm.dbg.value(metadata i8* %7, metadata !14698, metadata !DIExpression()), !dbg !14700
  call void @llvm.dbg.value(metadata i32 %5, metadata !14696, metadata !DIExpression()), !dbg !14700
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !14704
  call void @llvm.dbg.value(metadata i8* %8, metadata !14697, metadata !DIExpression()), !dbg !14700
  call void @llvm.dbg.value(metadata i32 0, metadata !14699, metadata !DIExpression()), !dbg !14700
  %9 = ptrtoint i8* %7 to i32, !dbg !14705
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !14706
  store i32 %9, i32* %10, align 4, !dbg !14707
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 1, !dbg !14708
  store i32 %5, i32* %11, align 4, !dbg !14709
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 2, !dbg !14710
  store i32 0, i32* %12, align 4, !dbg !14711
  call void @llvm.dbg.value(metadata i8* %8, metadata !14697, metadata !DIExpression()), !dbg !14700
  ret i8* %8, !dbg !14712
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.266(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #2 !dbg !14713 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !14717, metadata !DIExpression()), !dbg !14718
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !14719
  ret i8* %2, !dbg !14720
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !14721 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14726, metadata !DIExpression()), !dbg !14727
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !14728
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !14729
  ret void, !dbg !14730
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !14731 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14733, metadata !DIExpression()), !dbg !14734
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14735
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #24, !dbg !14736
  ret void, !dbg !14737
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !14738 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14742, metadata !DIExpression()), !dbg !14743
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14744
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14745
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14746
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14747
  ret void, !dbg !14748
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !14749 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14754, metadata !DIExpression()), !dbg !14755
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14756
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14757
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14758
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14759
  ret void, !dbg !14760
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !14761 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14778, metadata !DIExpression()), !dbg !14779
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14769, metadata !DIExpression()), !dbg !14779
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14770, metadata !DIExpression()), !dbg !14779
  call void @llvm.dbg.value(metadata i32 %2, metadata !14771, metadata !DIExpression()), !dbg !14779
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14772, metadata !DIExpression()), !dbg !14779
  call void @llvm.dbg.value(metadata i8* %4, metadata !14773, metadata !DIExpression()), !dbg !14779
  call void @llvm.dbg.value(metadata i8* %5, metadata !14774, metadata !DIExpression()), !dbg !14779
  call void @llvm.dbg.value(metadata i8* %6, metadata !14775, metadata !DIExpression()), !dbg !14779
  call void @llvm.dbg.value(metadata i32 %7, metadata !14776, metadata !DIExpression()), !dbg !14779
  call void @llvm.dbg.value(metadata i32 %8, metadata !14777, metadata !DIExpression()), !dbg !14779
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !14780, !srcloc !14476
  call void @llvm.dbg.value(metadata i32 %11, metadata !14472, metadata !DIExpression()) #23, !dbg !14785
  %12 = icmp eq i32 %11, 0, !dbg !14786
  br i1 %12, label %14, label %13, !dbg !14787

13:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.264, i32 0, i32 0), i32 noundef 647) #25, !dbg !14788
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.14.270, i32 0, i32 0)) #25, !dbg !14788
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.264, i32 0, i32 0), i32 noundef 647) #25, !dbg !14788
  unreachable, !dbg !14788

14:                                               ; preds = %10
  %15 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %15, metadata !14778, metadata !DIExpression()), !dbg !14779
  %16 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef null) #24, !dbg !14790
  %17 = icmp eq i64 %15, -1, !dbg !14791
  br i1 %17, label %19, label %18, !dbg !14793

18:                                               ; preds = %14
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #24, !dbg !14794
  br label %19, !dbg !14796

19:                                               ; preds = %18, %14
  ret %struct.k_thread* %0, !dbg !14797
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14798 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !14803, metadata !DIExpression()), !dbg !14804
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14802, metadata !DIExpression()), !dbg !14804
  %4 = icmp eq i64 %3, 0, !dbg !14805
  br i1 %4, label %5, label %6, !dbg !14807

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start.271(%struct.k_thread* noundef %0) #24, !dbg !14808
  br label %7, !dbg !14810

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !14811
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !14813
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start.271(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14814 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14818, metadata !DIExpression()), !dbg !14819
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !14820, !srcloc !14822
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #24, !dbg !14823
  ret void, !dbg !14824
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14825 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14828, metadata !DIExpression()), !dbg !14829
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14827, metadata !DIExpression()), !dbg !14829
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14830
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !14831
  ret void, !dbg !14832
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !14833 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14835, metadata !DIExpression()), !dbg !14855
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %1, label %2, !dbg !14856

1:                                                ; preds = %6, %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.274, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.264, i32 0, i32 0), i32 noundef 750) #25, !dbg !14860
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.275, i32 0, i32 0)) #25, !dbg !14860
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.264, i32 0, i32 0), i32 noundef 750) #25, !dbg !14860
  unreachable, !dbg !14860

2:                                                ; preds = %0, %6
  %3 = phi %struct._static_thread_data* [ %31, %6 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !14835, metadata !DIExpression()), !dbg !14855
  %4 = icmp ult %struct._static_thread_data* %3, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14863
  br i1 %4, label %6, label %5, !dbg !14864

5:                                                ; preds = %2
  tail call void @k_sched_lock() #25, !dbg !14865
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14853, metadata !DIExpression()), !dbg !14866
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %33, label %34, !dbg !14867

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !14871
  %8 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !14871
  %9 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !14873
  %10 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %9, align 4, !dbg !14873
  %11 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !14874
  %12 = load i32, i32* %11, align 4, !dbg !14874
  %13 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !14875
  %14 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %13, align 4, !dbg !14875
  %15 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !14876
  %16 = load i8*, i8** %15, align 4, !dbg !14876
  %17 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !14877
  %18 = load i8*, i8** %17, align 4, !dbg !14877
  %19 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !14878
  %20 = load i8*, i8** %19, align 4, !dbg !14878
  %21 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !14879
  %22 = load i32, i32* %21, align 4, !dbg !14879
  %23 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !14880
  %24 = load i32, i32* %23, align 4, !dbg !14880
  %25 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 11, !dbg !14881
  %26 = load i8*, i8** %25, align 4, !dbg !14881
  %27 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %8, %struct.z_thread_stack_element* noundef %10, i32 noundef %12, void (i8*, i8*, i8*)* noundef %14, i8* noundef %16, i8* noundef %18, i8* noundef %20, i32 noundef %22, i32 noundef %24, i8* noundef %26) #24, !dbg !14882
  %28 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !14883
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 2, !dbg !14884
  %30 = bitcast i8** %29 to %struct._static_thread_data**, !dbg !14885
  store %struct._static_thread_data* %3, %struct._static_thread_data** %30, align 4, !dbg !14885
  %31 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !14886
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !14835, metadata !DIExpression()), !dbg !14855
  %32 = icmp ugt %struct._static_thread_data* %31, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14887
  br i1 %32, label %1, label %2, !dbg !14856, !llvm.loop !14888

33:                                               ; preds = %50, %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.274, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.264, i32 0, i32 0), i32 noundef 781) #25, !dbg !14890
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.275, i32 0, i32 0)) #25, !dbg !14890
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.264, i32 0, i32 0), i32 noundef 781) #25, !dbg !14890
  unreachable, !dbg !14890

34:                                               ; preds = %5, %50
  %35 = phi %struct._static_thread_data* [ %51, %50 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %5 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %35, metadata !14853, metadata !DIExpression()), !dbg !14866
  %36 = icmp ult %struct._static_thread_data* %35, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14893
  br i1 %36, label %38, label %37, !dbg !14894

37:                                               ; preds = %34
  tail call void @k_sched_unlock() #25, !dbg !14895
  ret void, !dbg !14896

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 0, i32 9, !dbg !14897
  %40 = load i32, i32* %39, align 4, !dbg !14897
  %41 = icmp eq i32 %40, -1, !dbg !14900
  br i1 %41, label %50, label %42, !dbg !14901

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 0, i32 0, !dbg !14902
  %44 = load %struct.k_thread*, %struct.k_thread** %43, align 4, !dbg !14902
  %45 = icmp sgt i32 %40, 0, !dbg !14904
  %46 = select i1 %45, i32 %40, i32 0, !dbg !14904
  %47 = zext i32 %46 to i64, !dbg !14904
  %48 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %47) #24, !dbg !14904
  %49 = insertvalue [1 x i64] poison, i64 %48, 0, !dbg !14905
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %44, [1 x i64] %49) #24, !dbg !14905
  br label %50, !dbg !14906

50:                                               ; preds = %38, %42
  %51 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 1, !dbg !14907
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %51, metadata !14853, metadata !DIExpression()), !dbg !14866
  %52 = icmp ugt %struct._static_thread_data* %51, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14908
  br i1 %52, label %33, label %34, !dbg !14867, !llvm.loop !14909
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #2 !dbg !14911 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14915, metadata !DIExpression()), !dbg !14916
  call void @llvm.dbg.value(metadata i64 %0, metadata !14917, metadata !DIExpression()), !dbg !14932
  call void @llvm.dbg.value(metadata i32 1000, metadata !14920, metadata !DIExpression()), !dbg !14932
  call void @llvm.dbg.value(metadata i32 10000, metadata !14921, metadata !DIExpression()), !dbg !14932
  call void @llvm.dbg.value(metadata i8 1, metadata !14922, metadata !DIExpression()), !dbg !14932
  call void @llvm.dbg.value(metadata i8 0, metadata !14923, metadata !DIExpression()), !dbg !14932
  call void @llvm.dbg.value(metadata i8 1, metadata !14924, metadata !DIExpression()), !dbg !14932
  call void @llvm.dbg.value(metadata i8 0, metadata !14925, metadata !DIExpression()), !dbg !14932
  call void @llvm.dbg.value(metadata i8 1, metadata !14926, metadata !DIExpression()), !dbg !14932
  call void @llvm.dbg.value(metadata i8 0, metadata !14927, metadata !DIExpression()), !dbg !14932
  call void @llvm.dbg.value(metadata i64 0, metadata !14928, metadata !DIExpression()), !dbg !14932
  call void @llvm.dbg.value(metadata i64 0, metadata !14928, metadata !DIExpression()), !dbg !14932
  %2 = mul i64 %0, 10, !dbg !14934
  ret i64 %2, !dbg !14940
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #10 !dbg !14941 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !14943, metadata !DIExpression()), !dbg !14947
  call void @llvm.dbg.value(metadata i8* %1, metadata !14944, metadata !DIExpression()), !dbg !14947
  call void @llvm.dbg.value(metadata i8* %2, metadata !14945, metadata !DIExpression()), !dbg !14947
  call void @llvm.dbg.value(metadata i8* %3, metadata !14946, metadata !DIExpression()), !dbg !14947
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14948
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !14949
  %7 = load i8, i8* %6, align 4, !dbg !14950
  %8 = or i8 %7, 4, !dbg !14950
  store i8 %8, i8* %6, align 4, !dbg !14950
  tail call void @z_thread_essential_clear() #24, !dbg !14951
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !14952
  unreachable, !dbg !14952
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !14953 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14958, metadata !DIExpression()), !dbg !14960
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !14961
  %3 = load i32, i32* %2, align 4, !dbg !14961
  call void @llvm.dbg.value(metadata i32 %3, metadata !14959, metadata !DIExpression()), !dbg !14960
  %4 = icmp eq i32 %3, 0, !dbg !14962
  br i1 %4, label %10, label %5, !dbg !14964

5:                                                ; preds = %1
  %6 = and i32 %3, 3, !dbg !14965
  %7 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !14968
  %8 = zext i8 %7 to i32, !dbg !14969
  %9 = icmp eq i32 %6, %8, !dbg !14970
  br i1 %9, label %11, label %10, !dbg !14971

10:                                               ; preds = %5, %1
  br label %11, !dbg !14972

11:                                               ; preds = %5, %10
  %12 = phi i1 [ true, %10 ], [ false, %5 ], !dbg !14960
  ret i1 %12, !dbg !14973
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* nocapture noundef %0) local_unnamed_addr #9 !dbg !14974 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14976, metadata !DIExpression()), !dbg !14977
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !14978
  %3 = load i32, i32* %2, align 4, !dbg !14978
  %4 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !14980
  %5 = zext i8 %4 to i32, !dbg !14981
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14982
  %7 = ptrtoint %struct.k_thread* %6 to i32, !dbg !14983
  %8 = or i32 %7, %5, !dbg !14984
  %9 = icmp eq i32 %3, %8, !dbg !14985
  br i1 %9, label %10, label %11, !dbg !14986

10:                                               ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !14987
  br label %11, !dbg !14988

11:                                               ; preds = %1, %10
  ret i1 %9, !dbg !14989
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_spin_lock_set_owner(%struct.k_spinlock* nocapture noundef writeonly %0) local_unnamed_addr #9 !dbg !14990 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14994, metadata !DIExpression()), !dbg !14995
  %2 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !14996
  %3 = zext i8 %2 to i32, !dbg !14997
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14998
  %5 = ptrtoint %struct.k_thread* %4 to i32, !dbg !14999
  %6 = or i32 %5, %3, !dbg !15000
  %7 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !15001
  store i32 %6, i32* %7, align 4, !dbg !15002
  ret void, !dbg !15003
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #2 !dbg !15004 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15008, metadata !DIExpression()), !dbg !15009
  ret i32 -134, !dbg !15010
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #2 !dbg !15011 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15015, metadata !DIExpression()), !dbg !15017
  call void @llvm.dbg.value(metadata i32 %1, metadata !15016, metadata !DIExpression()), !dbg !15017
  ret i32 -134, !dbg !15018
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct._cpu_arch* noundef readnone %1) local_unnamed_addr #2 !dbg !15019 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15026, metadata !DIExpression()), !dbg !15028
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %1, metadata !15027, metadata !DIExpression()), !dbg !15028
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !15029
  %4 = icmp eq %struct._cpu_arch* %1, null
  %5 = or i1 %3, %4, !dbg !15031
  %6 = select i1 %5, i32 -22, i32 0, !dbg !15028
  ret i32 %6, !dbg !15032
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct._cpu_arch* noundef readnone %0) local_unnamed_addr #2 !dbg !15033 {
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %0, metadata !15037, metadata !DIExpression()), !dbg !15038
  %2 = icmp eq %struct._cpu_arch* %0, null, !dbg !15039
  %3 = select i1 %2, i32 -22, i32 0, !dbg !15038
  ret i32 %3, !dbg !15041
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !15042 {
  tail call void @sys_clock_idle_exit() #25, !dbg !15044
  ret void, !dbg !15045
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #10 !dbg !15046 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15048, metadata !DIExpression()), !dbg !15051
  call void @llvm.dbg.value(metadata i8* %1, metadata !15049, metadata !DIExpression()), !dbg !15051
  call void @llvm.dbg.value(metadata i8* %2, metadata !15050, metadata !DIExpression()), !dbg !15051
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15052
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !15052
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !15052
  %7 = load i8, i8* %6, align 2, !dbg !15052
  %8 = icmp sgt i8 %7, -1, !dbg !15052
  br i1 %8, label %10, label %9, !dbg !15055

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.286, i32 0, i32 0), i32 noundef 39) #25, !dbg !15056
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.286, i32 0, i32 0), i32 noundef 39) #25, !dbg !15056
  unreachable, !dbg !15056

10:                                               ; preds = %3, %10
  %11 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15058, !srcloc !15065
  call void @llvm.dbg.value(metadata i32 undef, metadata !15061, metadata !DIExpression()) #23, !dbg !15066
  call void @llvm.dbg.value(metadata i32 undef, metadata !15062, metadata !DIExpression()) #23, !dbg !15066
  tail call fastcc void @k_cpu_idle() #24, !dbg !15067
  br label %10, !dbg !15068, !llvm.loop !15069
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !15071 {
  tail call void @arch_cpu_idle() #25, !dbg !15072
  ret void, !dbg !15073
}

; Function Attrs: optsize
declare !dbg !15074 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !15075 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15079, metadata !DIExpression()), !dbg !15083
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15080, metadata !DIExpression()), !dbg !15083
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15084
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !15084
  %5 = load i8, i8* %4, align 2, !dbg !15084
  call void @llvm.dbg.value(metadata i8 %5, metadata !15081, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !15083
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !15085
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !15085
  %8 = load i8, i8* %7, align 2, !dbg !15085
  call void @llvm.dbg.value(metadata i8 %8, metadata !15082, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !15083
  %9 = icmp eq i8 %8, %5, !dbg !15086
  %10 = sext i8 %5 to i32, !dbg !15088
  %11 = sext i8 %8 to i32, !dbg !15088
  %12 = sub nsw i32 %11, %10, !dbg !15088
  %13 = select i1 %9, i32 0, i32 %12, !dbg !15088
  ret i32 %13, !dbg !15089
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !15090 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !15094, metadata !DIExpression()), !dbg !15095
  %2 = tail call fastcc i32 @slice_time() #24, !dbg !15096
  %3 = icmp eq i32 %2, 0, !dbg !15098
  br i1 %3, label %8, label %4, !dbg !15099

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #25, !dbg !15100
  %6 = add i32 %5, %2, !dbg !15102
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15103
  %7 = tail call fastcc i32 @slice_time() #24, !dbg !15104
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #25, !dbg !15105
  br label %8, !dbg !15106

8:                                                ; preds = %4, %1
  ret void, !dbg !15107
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #8 !dbg !15108 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !15112, metadata !DIExpression()), !dbg !15114
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !15115
  call void @llvm.dbg.value(metadata i32 %1, metadata !15113, metadata !DIExpression()), !dbg !15114
  ret i32 %1, !dbg !15116
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15117 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15121, metadata !DIExpression()), !dbg !15130
  call void @llvm.dbg.value(metadata i32 %1, metadata !15122, metadata !DIExpression()), !dbg !15130
  call void @llvm.dbg.value(metadata i32 0, metadata !15123, metadata !DIExpression()), !dbg !15131
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15132, metadata !DIExpression()) #23, !dbg !15139
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15141, !srcloc !15147
  call void @llvm.dbg.value(metadata i32 undef, metadata !15144, metadata !DIExpression()) #23, !dbg !15148
  call void @llvm.dbg.value(metadata i32 undef, metadata !15145, metadata !DIExpression()) #23, !dbg !15148
  call void @llvm.dbg.value(metadata i32 undef, metadata !15138, metadata !DIExpression()) #23, !dbg !15139
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15149
  br i1 %4, label %6, label %5, !dbg !15152

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !15153
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15153
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !15153
  unreachable, !dbg !15153

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !15144, metadata !DIExpression()) #23, !dbg !15148
  call void @llvm.dbg.value(metadata i32 undef, metadata !15138, metadata !DIExpression()) #23, !dbg !15139
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15155
  call void @llvm.dbg.value(metadata i32 undef, metadata !15129, metadata !DIExpression()), !dbg !15131
  call void @llvm.dbg.value(metadata i32 undef, metadata !15123, metadata !DIExpression()), !dbg !15131
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15156
  %7 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #24, !dbg !15159
  %8 = icmp sgt i32 %0, 0, !dbg !15160
  %9 = icmp sgt i32 %7, 2, !dbg !15162
  %10 = select i1 %9, i32 %7, i32 2, !dbg !15162
  %11 = select i1 %8, i32 %10, i32 %7, !dbg !15162
  store i32 %11, i32* @slice_ticks, align 4, !dbg !15163
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !15164
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !15165
  call void @llvm.dbg.value(metadata i32 undef, metadata !15166, metadata !DIExpression()) #23, !dbg !15172
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15171, metadata !DIExpression()) #23, !dbg !15172
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15174
  br i1 %12, label %14, label %13, !dbg !15177

13:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !15178
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.292, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15178
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !15178
  unreachable, !dbg !15178

14:                                               ; preds = %6
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !15141
  call void @llvm.dbg.value(metadata i32 %15, metadata !15144, metadata !DIExpression()) #23, !dbg !15148
  call void @llvm.dbg.value(metadata i32 %15, metadata !15138, metadata !DIExpression()) #23, !dbg !15139
  call void @llvm.dbg.value(metadata i32 %15, metadata !15129, metadata !DIExpression()), !dbg !15131
  call void @llvm.dbg.value(metadata i32 undef, metadata !15166, metadata !DIExpression()) #23, !dbg !15172
  call void @llvm.dbg.value(metadata i32 undef, metadata !15180, metadata !DIExpression()) #23, !dbg !15183
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !15185, !srcloc !15186
  call void @llvm.dbg.value(metadata i32 1, metadata !15123, metadata !DIExpression()), !dbg !15131
  call void @llvm.dbg.value(metadata i32 undef, metadata !15123, metadata !DIExpression()), !dbg !15131
  ret void, !dbg !15187
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #2 !dbg !15188 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15190, metadata !DIExpression()), !dbg !15191
  call void @llvm.dbg.value(metadata i32 %0, metadata !15192, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15207
  call void @llvm.dbg.value(metadata i32 1000, metadata !15195, metadata !DIExpression()), !dbg !15207
  call void @llvm.dbg.value(metadata i32 10000, metadata !15196, metadata !DIExpression()), !dbg !15207
  call void @llvm.dbg.value(metadata i8 1, metadata !15197, metadata !DIExpression()), !dbg !15207
  call void @llvm.dbg.value(metadata i1 true, metadata !15198, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15207
  call void @llvm.dbg.value(metadata i1 true, metadata !15199, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15207
  call void @llvm.dbg.value(metadata i8 0, metadata !15200, metadata !DIExpression()), !dbg !15207
  call void @llvm.dbg.value(metadata i1 true, metadata !15201, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15207
  call void @llvm.dbg.value(metadata i1 false, metadata !15202, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15207
  call void @llvm.dbg.value(metadata i64 0, metadata !15203, metadata !DIExpression()), !dbg !15207
  call void @llvm.dbg.value(metadata i64 0, metadata !15203, metadata !DIExpression()), !dbg !15207
  %2 = mul i32 %0, 10, !dbg !15209
  ret i32 %2, !dbg !15215
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !15216 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15218, metadata !DIExpression()), !dbg !15220
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15132, metadata !DIExpression()) #23, !dbg !15221
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15223, !srcloc !15147
  call void @llvm.dbg.value(metadata i32 undef, metadata !15144, metadata !DIExpression()) #23, !dbg !15225
  call void @llvm.dbg.value(metadata i32 undef, metadata !15145, metadata !DIExpression()) #23, !dbg !15225
  call void @llvm.dbg.value(metadata i32 undef, metadata !15138, metadata !DIExpression()) #23, !dbg !15221
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15226
  br i1 %3, label %5, label %4, !dbg !15227

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !15228
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15228
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !15228
  unreachable, !dbg !15228

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !15223
  call void @llvm.dbg.value(metadata i32 %6, metadata !15144, metadata !DIExpression()) #23, !dbg !15225
  call void @llvm.dbg.value(metadata i32 %6, metadata !15138, metadata !DIExpression()) #23, !dbg !15221
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15229
  call void @llvm.dbg.value(metadata i32 %6, metadata !15219, metadata !DIExpression()), !dbg !15220
  %7 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !15230
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15232
  %9 = icmp eq %struct.k_thread* %7, %8, !dbg !15233
  br i1 %9, label %10, label %14, !dbg !15234

10:                                               ; preds = %5
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !15235
  call void @llvm.dbg.value(metadata i32 undef, metadata !15166, metadata !DIExpression()) #23, !dbg !15237
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15171, metadata !DIExpression()) #23, !dbg !15237
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15239
  br i1 %11, label %13, label %12, !dbg !15240

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !15241
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.292, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15241
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !15241
  unreachable, !dbg !15241

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %6, metadata !15166, metadata !DIExpression()) #23, !dbg !15237
  call void @llvm.dbg.value(metadata i32 %6, metadata !15180, metadata !DIExpression()) #23, !dbg !15242
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !15244, !srcloc !15186
  br label %33, !dbg !15245

14:                                               ; preds = %5
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !15246
  %15 = tail call fastcc i32 @slice_time() #24, !dbg !15247
  %16 = icmp eq i32 %15, 0, !dbg !15247
  br i1 %16, label %27, label %17, !dbg !15249

17:                                               ; preds = %14
  %18 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %8) #24, !dbg !15250
  br i1 %18, label %19, label %27, !dbg !15251

19:                                               ; preds = %17
  %20 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15252
  %21 = icmp sgt i32 %20, %0, !dbg !15255
  br i1 %21, label %25, label %22, !dbg !15256

22:                                               ; preds = %19
  %23 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !15257
  %24 = tail call fastcc i32 @slice_expired_locked([1 x i32] %23) #24, !dbg !15257
  call void @llvm.dbg.value(metadata i32 %24, metadata !15219, metadata !DIExpression()), !dbg !15220
  br label %28, !dbg !15259

25:                                               ; preds = %19
  %26 = sub nsw i32 %20, %0, !dbg !15260
  store i32 %26, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15260
  br label %28

27:                                               ; preds = %17, %14
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15262
  br label %28

28:                                               ; preds = %22, %25, %27
  %29 = phi i32 [ %24, %22 ], [ %6, %25 ], [ %6, %27 ], !dbg !15220
  call void @llvm.dbg.value(metadata i32 %29, metadata !15219, metadata !DIExpression()), !dbg !15220
  call void @llvm.dbg.value(metadata i32 undef, metadata !15166, metadata !DIExpression()) #23, !dbg !15264
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15171, metadata !DIExpression()) #23, !dbg !15264
  %30 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15266
  br i1 %30, label %32, label %31, !dbg !15267

31:                                               ; preds = %28
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !15268
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.292, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15268
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !15268
  unreachable, !dbg !15268

32:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %29, metadata !15166, metadata !DIExpression()) #23, !dbg !15264
  call void @llvm.dbg.value(metadata i32 %29, metadata !15180, metadata !DIExpression()) #23, !dbg !15269
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %29) #23, !dbg !15271, !srcloc !15186
  br label %33, !dbg !15272

33:                                               ; preds = %32, %13
  ret void, !dbg !15272
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #8 !dbg !15273 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15277, metadata !DIExpression()), !dbg !15279
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #24, !dbg !15280
  %3 = icmp eq i32 %2, 0, !dbg !15280
  br i1 %3, label %16, label %4, !dbg !15281

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !15282
  br i1 %5, label %16, label %6, !dbg !15283

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15284
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !15284
  %9 = load i8, i8* %8, align 2, !dbg !15284
  %10 = sext i8 %9 to i32, !dbg !15285
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !15286
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #24, !dbg !15287
  br i1 %12, label %16, label %13, !dbg !15288

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #24, !dbg !15289
  %15 = xor i1 %14, true, !dbg !15290
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !15279
  call void @llvm.dbg.value(metadata i1 %17, metadata !15278, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15279
  ret i1 %17, !dbg !15291
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !15292 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15296, metadata !DIExpression()), !dbg !15298
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15299
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15297, metadata !DIExpression()), !dbg !15298
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #24, !dbg !15300
  br i1 %3, label %5, label %4, !dbg !15302

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #24, !dbg !15303
  br label %5, !dbg !15305

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !15296, metadata !DIExpression()), !dbg !15298
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !15306
  ret i32 %6, !dbg !15307
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15308 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15310, metadata !DIExpression()), !dbg !15312
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15313
  %3 = load i8, i8* %2, align 1, !dbg !15313
  call void @llvm.dbg.value(metadata i8 %3, metadata !15311, metadata !DIExpression()), !dbg !15312
  %4 = and i8 %3, 31, !dbg !15314
  %5 = icmp ne i8 %4, 0, !dbg !15315
  ret i1 %5, !dbg !15316
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15317 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15319, metadata !DIExpression()), !dbg !15320
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !15321
  br i1 %2, label %3, label %7, !dbg !15323

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15324, metadata !DIExpression()) #23, !dbg !15327
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15330
  %5 = load i8, i8* %4, align 1, !dbg !15331
  %6 = and i8 %5, 127, !dbg !15331
  store i8 %6, i8* %4, align 1, !dbg !15331
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15332, metadata !DIExpression()) #23, !dbg !15335
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15339
  br label %7, !dbg !15340

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15341, metadata !DIExpression()) #23, !dbg !15344
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15346
  %9 = load i8, i8* %8, align 1, !dbg !15347
  %10 = or i8 %9, -128, !dbg !15347
  store i8 %10, i8* %8, align 1, !dbg !15347
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15348, metadata !DIExpression()) #23, !dbg !15351
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15355, metadata !DIExpression()) #23, !dbg !15363
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15361, metadata !DIExpression()) #23, !dbg !15363
  %11 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !15365
  br i1 %11, label %12, label %13, !dbg !15368

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.293, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 186) #25, !dbg !15369
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 186) #25, !dbg !15369
  unreachable, !dbg !15369

13:                                               ; preds = %7
  %14 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15371
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !15362, metadata !DIExpression()) #23, !dbg !15363
  %15 = icmp eq %struct._dnode* %14, null, !dbg !15373
  br i1 %15, label %26, label %16, !dbg !15371

16:                                               ; preds = %13, %23
  %17 = phi %struct._dnode* [ %24, %23 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !15362, metadata !DIExpression()) #23, !dbg !15363
  %18 = bitcast %struct._dnode* %17 to %struct.k_thread*, !dbg !15375
  call void @llvm.dbg.value(metadata %struct.k_thread* %18, metadata !15362, metadata !DIExpression()) #23, !dbg !15363
  %19 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %18) #25, !dbg !15376
  %20 = icmp sgt i32 %19, 0, !dbg !15379
  br i1 %20, label %21, label %23, !dbg !15380

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15381
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %17, %struct._dnode* noundef %22) #25, !dbg !15383
  br label %28, !dbg !15384

23:                                               ; preds = %16
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %17) #25, !dbg !15373
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !15362, metadata !DIExpression()) #23, !dbg !15363
  %25 = icmp eq %struct._dnode* %24, null, !dbg !15373
  br i1 %25, label %26, label %16, !dbg !15371, !llvm.loop !15385

26:                                               ; preds = %23, %13
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15387
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %27) #25, !dbg !15388
  br label %28, !dbg !15389

28:                                               ; preds = %21, %26
  %29 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15390
  %30 = icmp eq %struct.k_thread* %29, %0, !dbg !15391
  %31 = zext i1 %30 to i32, !dbg !15391
  tail call fastcc void @update_cache(i32 noundef %31) #24, !dbg !15392
  ret void, !dbg !15393
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15394 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15396, metadata !DIExpression()), !dbg !15397
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0, i32 noundef 128) #24, !dbg !15398
  ret i1 %2, !dbg !15399
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !15400 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !15402, metadata !DIExpression()), !dbg !15404
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15403, metadata !DIExpression()), !dbg !15404
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !15405
  br i1 %3, label %4, label %5, !dbg !15408

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.293, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 1139) #25, !dbg !15409
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 1139) #25, !dbg !15409
  unreachable, !dbg !15409

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !15411
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %6) #24, !dbg !15412
  ret void, !dbg !15413
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #2 !dbg !15414 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15416, metadata !DIExpression()), !dbg !15417
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !15418
  ret i1 %2, !dbg !15419
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !15420 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15424, metadata !DIExpression()), !dbg !15425
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #24, !dbg !15426
  br i1 %2, label %6, label %3, !dbg !15426

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15427
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15427
  br label %6, !dbg !15426

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !15426
  ret %struct._dnode* %7, !dbg !15428
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !15429 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15433, metadata !DIExpression()), !dbg !15437
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15434, metadata !DIExpression()), !dbg !15437
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15438
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15438
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !15435, metadata !DIExpression()), !dbg !15437
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15439
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !15440
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15441
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !15442
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15443
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15444
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15445
  ret void, !dbg !15446
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #8 !dbg !15447 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15451, metadata !DIExpression()), !dbg !15453
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15452, metadata !DIExpression()), !dbg !15453
  %3 = icmp eq %struct._dnode* %1, null, !dbg !15454
  br i1 %3, label %6, label %4, !dbg !15455

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #24, !dbg !15456
  br label %6, !dbg !15455

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !15455
  ret %struct._dnode* %7, !dbg !15457
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !15458 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15462, metadata !DIExpression()), !dbg !15465
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15463, metadata !DIExpression()), !dbg !15465
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15466
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15466
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !15464, metadata !DIExpression()), !dbg !15465
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15467
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !15468
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15469
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !15470
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15471
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15472
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15473
  ret void, !dbg !15474
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !15475 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15477, metadata !DIExpression()), !dbg !15479
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15480
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15487, metadata !DIExpression()) #23, !dbg !15489
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15490
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !15491
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !15491
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !15478, metadata !DIExpression()), !dbg !15479
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !15492, metadata !DIExpression()) #23, !dbg !15498
  call void @llvm.dbg.value(metadata i32 %0, metadata !15497, metadata !DIExpression()) #23, !dbg !15498
  %6 = icmp eq i32 %0, 0, !dbg !15501
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15503
  br i1 %6, label %8, label %18, !dbg !15504

8:                                                ; preds = %1
  %9 = icmp eq %struct.k_thread* %7, null, !dbg !15505
  br i1 %9, label %10, label %11, !dbg !15508

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.19.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 137) #25, !dbg !15509
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.296, i32 0, i32 0)) #25, !dbg !15509
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 137) #25, !dbg !15509
  unreachable, !dbg !15509

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef nonnull %7) #25, !dbg !15511
  br i1 %12, label %18, label %13, !dbg !15513

13:                                               ; preds = %11
  %14 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #25, !dbg !15514
  br i1 %14, label %18, label %15, !dbg !15516

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef nonnull %7) #25, !dbg !15517
  %17 = icmp eq i32 %16, 0, !dbg !15517
  br i1 %17, label %21, label %18, !dbg !15519

18:                                               ; preds = %1, %13, %11, %15
  %19 = icmp eq %struct.k_thread* %5, %7, !dbg !15520
  br i1 %19, label %21, label %20, !dbg !15523

20:                                               ; preds = %18
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !15524
  br label %21, !dbg !15526

21:                                               ; preds = %15, %18, %20
  %22 = phi %struct.k_thread* [ %5, %20 ], [ %5, %18 ], [ %7, %15 ], !dbg !15503
  store %struct.k_thread* %22, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15503
  ret void, !dbg !15527
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #8 !dbg !15528 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15532, metadata !DIExpression()), !dbg !15535
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15533, metadata !DIExpression()), !dbg !15535
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #24, !dbg !15536
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !15534, metadata !DIExpression()), !dbg !15535
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15533, metadata !DIExpression()), !dbg !15535
  ret %struct.k_thread* %3, !dbg !15537
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15538 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15540, metadata !DIExpression()), !dbg !15541
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15542
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !15543
  %4 = xor i1 %3, true, !dbg !15544
  ret i1 %4, !dbg !15545
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15546 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15548, metadata !DIExpression()), !dbg !15549
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !15550
  %3 = load i16, i16* %2, align 2, !dbg !15550
  %4 = icmp ult i16 %3, 128, !dbg !15551
  %5 = zext i1 %4 to i32, !dbg !15551
  ret i32 %5, !dbg !15552
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15553 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15559, metadata !DIExpression()), !dbg !15560
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15561
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #24, !dbg !15562
  %4 = xor i1 %3, true, !dbg !15563
  ret i1 %4, !dbg !15564
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15565 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15571, metadata !DIExpression()), !dbg !15572
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15573
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15573
  %4 = icmp ne %struct._dnode* %3, null, !dbg !15574
  ret i1 %4, !dbg !15575
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #8 !dbg !15576 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15578, metadata !DIExpression()), !dbg !15580
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15579, metadata !DIExpression()), !dbg !15580
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15581
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15581
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !15582
  br i1 %5, label %9, label %6, !dbg !15583

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15584
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !15584
  br label %9, !dbg !15583

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !15583
  ret %struct._dnode* %10, !dbg !15585
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !15586 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15590, metadata !DIExpression()), !dbg !15591
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15592
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15592
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !15593
  ret i1 %4, !dbg !15594
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !15595 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15599, metadata !DIExpression()), !dbg !15602
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15603
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15603
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !15600, metadata !DIExpression()), !dbg !15602
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15604
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15604
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !15601, metadata !DIExpression()), !dbg !15602
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !15605
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !15606
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !15607
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !15608
  tail call fastcc void @sys_dnode_init.297(%struct._dnode* noundef %0) #24, !dbg !15609
  ret void, !dbg !15610
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.297(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !15611 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15613, metadata !DIExpression()), !dbg !15614
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15615
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !15616
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15617
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !15618
  ret void, !dbg !15619
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #8 !dbg !15620 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15624, metadata !DIExpression()), !dbg !15626
  call void @llvm.dbg.value(metadata i32 %1, metadata !15625, metadata !DIExpression()), !dbg !15626
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15627
  %4 = load i8, i8* %3, align 1, !dbg !15627
  %5 = zext i8 %4 to i32, !dbg !15628
  %6 = and i32 %5, %1, !dbg !15629
  %7 = icmp ne i32 %6, 0, !dbg !15630
  ret i1 %7, !dbg !15631
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #2 !dbg !15632 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15636, metadata !DIExpression()), !dbg !15638
  call void @llvm.dbg.value(metadata i32 %1, metadata !15637, metadata !DIExpression()), !dbg !15638
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #24, !dbg !15639
  ret i1 %3, !dbg !15640
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #2 !dbg !15641 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15643, metadata !DIExpression()), !dbg !15645
  call void @llvm.dbg.value(metadata i32 %1, metadata !15644, metadata !DIExpression()), !dbg !15645
  %3 = icmp slt i32 %0, %1, !dbg !15646
  ret i1 %3, !dbg !15647
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15648 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15650, metadata !DIExpression()), !dbg !15654
  call void @llvm.dbg.value(metadata i32 0, metadata !15651, metadata !DIExpression()), !dbg !15655
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15132, metadata !DIExpression()) #23, !dbg !15656
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15658, !srcloc !15147
  call void @llvm.dbg.value(metadata i32 undef, metadata !15144, metadata !DIExpression()) #23, !dbg !15660
  call void @llvm.dbg.value(metadata i32 undef, metadata !15145, metadata !DIExpression()) #23, !dbg !15660
  call void @llvm.dbg.value(metadata i32 undef, metadata !15138, metadata !DIExpression()) #23, !dbg !15656
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15661
  br i1 %3, label %5, label %4, !dbg !15662

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !15663
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15663
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !15663
  unreachable, !dbg !15663

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15144, metadata !DIExpression()) #23, !dbg !15660
  call void @llvm.dbg.value(metadata i32 undef, metadata !15138, metadata !DIExpression()) #23, !dbg !15656
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15664
  call void @llvm.dbg.value(metadata i32 undef, metadata !15653, metadata !DIExpression()), !dbg !15655
  call void @llvm.dbg.value(metadata i32 undef, metadata !15651, metadata !DIExpression()), !dbg !15655
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !15665
  call void @llvm.dbg.value(metadata i32 undef, metadata !15166, metadata !DIExpression()) #23, !dbg !15670
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15171, metadata !DIExpression()) #23, !dbg !15670
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15672
  br i1 %6, label %8, label %7, !dbg !15673

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !15674
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.292, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15674
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !15674
  unreachable, !dbg !15674

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15658
  call void @llvm.dbg.value(metadata i32 %9, metadata !15144, metadata !DIExpression()) #23, !dbg !15660
  call void @llvm.dbg.value(metadata i32 %9, metadata !15138, metadata !DIExpression()) #23, !dbg !15656
  call void @llvm.dbg.value(metadata i32 %9, metadata !15653, metadata !DIExpression()), !dbg !15655
  call void @llvm.dbg.value(metadata i32 undef, metadata !15166, metadata !DIExpression()) #23, !dbg !15670
  call void @llvm.dbg.value(metadata i32 undef, metadata !15180, metadata !DIExpression()) #23, !dbg !15675
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15677, !srcloc !15186
  call void @llvm.dbg.value(metadata i32 1, metadata !15651, metadata !DIExpression()), !dbg !15655
  call void @llvm.dbg.value(metadata i32 undef, metadata !15651, metadata !DIExpression()), !dbg !15655
  ret void, !dbg !15678
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15679 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15681, metadata !DIExpression()), !dbg !15682
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !15683
  br i1 %2, label %27, label %3, !dbg !15685

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !15686
  br i1 %4, label %5, label %27, !dbg !15687

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15341, metadata !DIExpression()) #23, !dbg !15688
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15691
  %7 = load i8, i8* %6, align 1, !dbg !15692
  %8 = or i8 %7, -128, !dbg !15692
  store i8 %8, i8* %6, align 1, !dbg !15692
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15348, metadata !DIExpression()) #23, !dbg !15693
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15355, metadata !DIExpression()) #23, !dbg !15695
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15361, metadata !DIExpression()) #23, !dbg !15695
  %9 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !15697
  br i1 %9, label %10, label %11, !dbg !15698

10:                                               ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.293, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 186) #25, !dbg !15699
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 186) #25, !dbg !15699
  unreachable, !dbg !15699

11:                                               ; preds = %5
  %12 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15700
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !15362, metadata !DIExpression()) #23, !dbg !15695
  %13 = icmp eq %struct._dnode* %12, null, !dbg !15701
  br i1 %13, label %24, label %14, !dbg !15700

14:                                               ; preds = %11, %21
  %15 = phi %struct._dnode* [ %22, %21 ], [ %12, %11 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !15362, metadata !DIExpression()) #23, !dbg !15695
  %16 = bitcast %struct._dnode* %15 to %struct.k_thread*, !dbg !15702
  call void @llvm.dbg.value(metadata %struct.k_thread* %16, metadata !15362, metadata !DIExpression()) #23, !dbg !15695
  %17 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %16) #25, !dbg !15703
  %18 = icmp sgt i32 %17, 0, !dbg !15704
  br i1 %18, label %19, label %21, !dbg !15705

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15706
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %15, %struct._dnode* noundef %20) #25, !dbg !15707
  br label %26, !dbg !15708

21:                                               ; preds = %14
  %22 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %15) #25, !dbg !15701
  call void @llvm.dbg.value(metadata %struct._dnode* %22, metadata !15362, metadata !DIExpression()) #23, !dbg !15695
  %23 = icmp eq %struct._dnode* %22, null, !dbg !15701
  br i1 %23, label %24, label %14, !dbg !15700, !llvm.loop !15709

24:                                               ; preds = %21, %11
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15711
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %25) #25, !dbg !15712
  br label %26, !dbg !15713

26:                                               ; preds = %19, %24
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !15714
  br label %27, !dbg !15715

27:                                               ; preds = %26, %3, %1
  ret void, !dbg !15716
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15717 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15719, metadata !DIExpression()), !dbg !15720
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !15721
  br i1 %2, label %6, label %3, !dbg !15722

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #24, !dbg !15723
  %5 = xor i1 %4, true, !dbg !15722
  br label %6, !dbg !15722

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !15724
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15725 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15727, metadata !DIExpression()), !dbg !15731
  call void @llvm.dbg.value(metadata i32 0, metadata !15728, metadata !DIExpression()), !dbg !15732
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15132, metadata !DIExpression()) #23, !dbg !15733
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15735, !srcloc !15147
  call void @llvm.dbg.value(metadata i32 undef, metadata !15144, metadata !DIExpression()) #23, !dbg !15737
  call void @llvm.dbg.value(metadata i32 undef, metadata !15145, metadata !DIExpression()) #23, !dbg !15737
  call void @llvm.dbg.value(metadata i32 undef, metadata !15138, metadata !DIExpression()) #23, !dbg !15733
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15738
  br i1 %3, label %5, label %4, !dbg !15739

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !15740
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15740
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !15740
  unreachable, !dbg !15740

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15144, metadata !DIExpression()) #23, !dbg !15737
  call void @llvm.dbg.value(metadata i32 undef, metadata !15138, metadata !DIExpression()) #23, !dbg !15733
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15741
  call void @llvm.dbg.value(metadata i32 undef, metadata !15730, metadata !DIExpression()), !dbg !15732
  call void @llvm.dbg.value(metadata i32 undef, metadata !15728, metadata !DIExpression()), !dbg !15732
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #24, !dbg !15742
  call void @llvm.dbg.value(metadata i32 undef, metadata !15166, metadata !DIExpression()) #23, !dbg !15745
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15171, metadata !DIExpression()) #23, !dbg !15745
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15747
  br i1 %6, label %8, label %7, !dbg !15748

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !15749
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.292, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15749
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !15749
  unreachable, !dbg !15749

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15735
  call void @llvm.dbg.value(metadata i32 %9, metadata !15144, metadata !DIExpression()) #23, !dbg !15737
  call void @llvm.dbg.value(metadata i32 %9, metadata !15138, metadata !DIExpression()) #23, !dbg !15733
  call void @llvm.dbg.value(metadata i32 %9, metadata !15730, metadata !DIExpression()), !dbg !15732
  call void @llvm.dbg.value(metadata i32 undef, metadata !15166, metadata !DIExpression()) #23, !dbg !15745
  call void @llvm.dbg.value(metadata i32 undef, metadata !15180, metadata !DIExpression()) #23, !dbg !15750
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15752, !srcloc !15186
  call void @llvm.dbg.value(metadata i32 1, metadata !15728, metadata !DIExpression()), !dbg !15732
  call void @llvm.dbg.value(metadata i32 undef, metadata !15728, metadata !DIExpression()), !dbg !15732
  ret void, !dbg !15753
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15754 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15756, metadata !DIExpression()), !dbg !15758
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15132, metadata !DIExpression()) #23, !dbg !15759
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15761, !srcloc !15147
  call void @llvm.dbg.value(metadata i32 undef, metadata !15144, metadata !DIExpression()) #23, !dbg !15763
  call void @llvm.dbg.value(metadata i32 undef, metadata !15145, metadata !DIExpression()) #23, !dbg !15763
  call void @llvm.dbg.value(metadata i32 undef, metadata !15138, metadata !DIExpression()) #23, !dbg !15759
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15764
  br i1 %3, label %5, label %4, !dbg !15765

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !15766
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15766
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !15766
  unreachable, !dbg !15766

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !15761
  call void @llvm.dbg.value(metadata i32 %6, metadata !15144, metadata !DIExpression()) #23, !dbg !15763
  call void @llvm.dbg.value(metadata i32 %6, metadata !15138, metadata !DIExpression()) #23, !dbg !15759
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15767
  call void @llvm.dbg.value(metadata i32 %6, metadata !15757, metadata !DIExpression()), !dbg !15758
  %7 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #24, !dbg !15768
  br i1 %7, label %8, label %12, !dbg !15770

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !15166, metadata !DIExpression()) #23, !dbg !15771
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15171, metadata !DIExpression()) #23, !dbg !15771
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15774
  br i1 %9, label %11, label %10, !dbg !15775

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !15776
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.292, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15776
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !15776
  unreachable, !dbg !15776

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !15166, metadata !DIExpression()) #23, !dbg !15771
  call void @llvm.dbg.value(metadata i32 %6, metadata !15180, metadata !DIExpression()) #23, !dbg !15777
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !15779, !srcloc !15186
  br label %14, !dbg !15780

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_started.302(%struct.k_thread* noundef %0) #24, !dbg !15781
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !15782
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !15783
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #24, !dbg !15783
  br label %14, !dbg !15784

14:                                               ; preds = %12, %11
  ret void, !dbg !15784
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15785 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15787, metadata !DIExpression()), !dbg !15788
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15789
  %3 = load i8, i8* %2, align 1, !dbg !15789
  %4 = and i8 %3, 4, !dbg !15790
  %5 = icmp eq i8 %4, 0, !dbg !15791
  ret i1 %5, !dbg !15792
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.302(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15793 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15795, metadata !DIExpression()), !dbg !15796
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15797
  %3 = load i8, i8* %2, align 1, !dbg !15798
  %4 = and i8 %3, -5, !dbg !15798
  store i8 %4, i8* %2, align 1, !dbg !15798
  ret void, !dbg !15799
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !15800 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !15803, metadata !DIExpression()), !dbg !15804
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15802, metadata !DIExpression()), !dbg !15804
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #24, !dbg !15805
  br i1 %4, label %5, label %12, !dbg !15807

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #24, !dbg !15808
  br i1 %6, label %7, label %12, !dbg !15809

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !15810, metadata !DIExpression()) #23, !dbg !15816
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15815, metadata !DIExpression()) #23, !dbg !15816
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15819, metadata !DIExpression()) #23, !dbg !15824
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #25, !dbg !15826
  br i1 %8, label %10, label %9, !dbg !15829

9:                                                ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 225) #25, !dbg !15830
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.292, i32 0, i32 0), %struct.k_spinlock* noundef %0) #25, !dbg !15830
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 225) #25, !dbg !15830
  unreachable, !dbg !15830

10:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 %3, metadata !15810, metadata !DIExpression()) #23, !dbg !15816
  %11 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !15832
  br label %16, !dbg !15833

12:                                               ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !15166, metadata !DIExpression()) #23, !dbg !15834
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15171, metadata !DIExpression()) #23, !dbg !15834
  %13 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #25, !dbg !15837
  br i1 %13, label %15, label %14, !dbg !15838

14:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !15839
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.292, i32 0, i32 0), %struct.k_spinlock* noundef %0) #25, !dbg !15839
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !15839
  unreachable, !dbg !15839

15:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 %3, metadata !15166, metadata !DIExpression()) #23, !dbg !15834
  call void @llvm.dbg.value(metadata i32 %3, metadata !15180, metadata !DIExpression()) #23, !dbg !15840
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !15842, !srcloc !15186
  br label %16

16:                                               ; preds = %15, %10
  ret void, !dbg !15843
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !15844 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15848, metadata !DIExpression()), !dbg !15849
  call void @llvm.dbg.value(metadata i32 %0, metadata !15850, metadata !DIExpression()), !dbg !15855
  %2 = icmp eq i32 %0, 0, !dbg !15857
  br i1 %2, label %3, label %6, !dbg !15858

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15859, !srcloc !15866
  call void @llvm.dbg.value(metadata i32 %4, metadata !15862, metadata !DIExpression()) #23, !dbg !15867
  %5 = icmp eq i32 %4, 0, !dbg !15868
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !15849
  ret i1 %7, !dbg !15869
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #8 !dbg !15870 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15873
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15872, metadata !DIExpression()), !dbg !15874
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15875
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !15876
  ret i1 %3, !dbg !15877
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !15878 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15880, metadata !DIExpression()), !dbg !15882
  %2 = tail call i32 @arch_swap(i32 noundef %0) #25, !dbg !15883
  call void @llvm.dbg.value(metadata i32 %2, metadata !15881, metadata !DIExpression()), !dbg !15882
  ret i32 %2, !dbg !15884
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15885 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15887, metadata !DIExpression()), !dbg !15891
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !15892
  call void @llvm.dbg.value(metadata i32 0, metadata !15888, metadata !DIExpression()), !dbg !15893
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15132, metadata !DIExpression()) #23, !dbg !15894
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15896, !srcloc !15147
  call void @llvm.dbg.value(metadata i32 undef, metadata !15144, metadata !DIExpression()) #23, !dbg !15898
  call void @llvm.dbg.value(metadata i32 undef, metadata !15145, metadata !DIExpression()) #23, !dbg !15898
  call void @llvm.dbg.value(metadata i32 undef, metadata !15138, metadata !DIExpression()) #23, !dbg !15894
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15899
  br i1 %4, label %6, label %5, !dbg !15900

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !15901
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15901
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !15901
  unreachable, !dbg !15901

6:                                                ; preds = %1
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !15896
  call void @llvm.dbg.value(metadata i32 %7, metadata !15144, metadata !DIExpression()) #23, !dbg !15898
  call void @llvm.dbg.value(metadata i32 %7, metadata !15138, metadata !DIExpression()) #23, !dbg !15894
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15902
  call void @llvm.dbg.value(metadata i32 %7, metadata !15890, metadata !DIExpression()), !dbg !15893
  call void @llvm.dbg.value(metadata i32 undef, metadata !15888, metadata !DIExpression()), !dbg !15893
  %8 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !15903
  br i1 %8, label %9, label %13, !dbg !15907

9:                                                ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15324, metadata !DIExpression()) #23, !dbg !15908
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15911
  %11 = load i8, i8* %10, align 1, !dbg !15912
  %12 = and i8 %11, 127, !dbg !15912
  store i8 %12, i8* %10, align 1, !dbg !15912
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15332, metadata !DIExpression()) #23, !dbg !15913
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15915
  br label %13, !dbg !15916

13:                                               ; preds = %9, %6
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #24, !dbg !15917
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15918
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !15919
  %16 = zext i1 %15 to i32, !dbg !15919
  tail call fastcc void @update_cache(i32 noundef %16) #24, !dbg !15920
  call void @llvm.dbg.value(metadata i32 undef, metadata !15166, metadata !DIExpression()) #23, !dbg !15921
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15171, metadata !DIExpression()) #23, !dbg !15921
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15923
  br i1 %17, label %19, label %18, !dbg !15924

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !15925
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.292, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15925
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !15925
  unreachable, !dbg !15925

19:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %7, metadata !15166, metadata !DIExpression()) #23, !dbg !15921
  call void @llvm.dbg.value(metadata i32 %7, metadata !15180, metadata !DIExpression()) #23, !dbg !15926
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !15928, !srcloc !15186
  call void @llvm.dbg.value(metadata i32 1, metadata !15888, metadata !DIExpression()), !dbg !15893
  call void @llvm.dbg.value(metadata i32 undef, metadata !15888, metadata !DIExpression()), !dbg !15893
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15929
  %21 = icmp eq %struct.k_thread* %20, %0, !dbg !15931
  br i1 %21, label %22, label %23, !dbg !15932

22:                                               ; preds = %19
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !15933
  br label %23, !dbg !15935

23:                                               ; preds = %22, %19
  ret void, !dbg !15936
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15937 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15939, metadata !DIExpression()), !dbg !15940
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15941
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !15942
  ret i32 %3, !dbg !15943
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15944 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15946, metadata !DIExpression()), !dbg !15947
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15948
  %3 = load i8, i8* %2, align 1, !dbg !15949
  %4 = or i8 %3, 16, !dbg !15949
  store i8 %4, i8* %2, align 1, !dbg !15949
  ret void, !dbg !15950
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !15951 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15952, !srcloc !15147
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15952
  call void @llvm.dbg.value(metadata i32 %2, metadata !15144, metadata !DIExpression()) #23, !dbg !15954
  call void @llvm.dbg.value(metadata i32 undef, metadata !15145, metadata !DIExpression()) #23, !dbg !15954
  tail call void @z_reschedule_irqlock(i32 noundef %2) #24, !dbg !15955
  ret void, !dbg !15956
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !15957 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15959, metadata !DIExpression()), !dbg !15960
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #24, !dbg !15961
  br i1 %2, label %3, label %5, !dbg !15963

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !15964
  br label %6, !dbg !15966

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !15180, metadata !DIExpression()) #23, !dbg !15967
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #23, !dbg !15970, !srcloc !15186
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !15971
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15972 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15974, metadata !DIExpression()), !dbg !15976
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15132, metadata !DIExpression()) #23, !dbg !15977
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15979, !srcloc !15147
  call void @llvm.dbg.value(metadata i32 undef, metadata !15144, metadata !DIExpression()) #23, !dbg !15981
  call void @llvm.dbg.value(metadata i32 undef, metadata !15145, metadata !DIExpression()) #23, !dbg !15981
  call void @llvm.dbg.value(metadata i32 undef, metadata !15138, metadata !DIExpression()) #23, !dbg !15977
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15982
  br i1 %3, label %5, label %4, !dbg !15983

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !15984
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15984
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !15984
  unreachable, !dbg !15984

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !15979
  call void @llvm.dbg.value(metadata i32 %6, metadata !15144, metadata !DIExpression()) #23, !dbg !15981
  call void @llvm.dbg.value(metadata i32 %6, metadata !15138, metadata !DIExpression()) #23, !dbg !15977
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15985
  call void @llvm.dbg.value(metadata i32 %6, metadata !15975, metadata !DIExpression()), !dbg !15976
  %7 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #24, !dbg !15986
  br i1 %7, label %12, label %8, !dbg !15988

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !15166, metadata !DIExpression()) #23, !dbg !15989
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15171, metadata !DIExpression()) #23, !dbg !15989
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15992
  br i1 %9, label %11, label %10, !dbg !15993

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !15994
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.292, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15994
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !15994
  unreachable, !dbg !15994

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !15166, metadata !DIExpression()) #23, !dbg !15989
  call void @llvm.dbg.value(metadata i32 %6, metadata !15180, metadata !DIExpression()) #23, !dbg !15995
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !15997, !srcloc !15186
  br label %14, !dbg !15998

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !15999
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !16000
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !16001
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #24, !dbg !16001
  br label %14, !dbg !16002

14:                                               ; preds = %12, %11
  ret void, !dbg !16002
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !16003 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16005, metadata !DIExpression()), !dbg !16006
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16007
  %3 = load i8, i8* %2, align 1, !dbg !16007
  %4 = and i8 %3, 16, !dbg !16008
  %5 = icmp ne i8 %4, 0, !dbg !16009
  ret i1 %5, !dbg !16010
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !16011 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16013, metadata !DIExpression()), !dbg !16014
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16015
  %3 = load i8, i8* %2, align 1, !dbg !16016
  %4 = and i8 %3, -17, !dbg !16016
  store i8 %4, i8* %2, align 1, !dbg !16016
  ret void, !dbg !16017
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16018 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16028, metadata !DIExpression()), !dbg !16032
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16026, metadata !DIExpression()), !dbg !16032
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !16027, metadata !DIExpression()), !dbg !16032
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16033
  %5 = icmp eq %struct.k_thread* %4, %0, !dbg !16033
  br i1 %5, label %9, label %6, !dbg !16033

6:                                                ; preds = %3
  %7 = tail call fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* noundef %0) #24, !dbg !16033
  br i1 %7, label %9, label %8, !dbg !16036

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 773) #25, !dbg !16037
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 773) #25, !dbg !16037
  unreachable, !dbg !16037

9:                                                ; preds = %3, %6
  call void @llvm.dbg.value(metadata i32 0, metadata !16029, metadata !DIExpression()), !dbg !16039
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15132, metadata !DIExpression()) #23, !dbg !16040
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16042, !srcloc !15147
  call void @llvm.dbg.value(metadata i32 undef, metadata !15144, metadata !DIExpression()) #23, !dbg !16044
  call void @llvm.dbg.value(metadata i32 undef, metadata !15145, metadata !DIExpression()) #23, !dbg !16044
  call void @llvm.dbg.value(metadata i32 undef, metadata !15138, metadata !DIExpression()) #23, !dbg !16040
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16045
  br i1 %11, label %13, label %12, !dbg !16046

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !16047
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16047
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !16047
  unreachable, !dbg !16047

13:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !15144, metadata !DIExpression()) #23, !dbg !16044
  call void @llvm.dbg.value(metadata i32 undef, metadata !15138, metadata !DIExpression()) #23, !dbg !16040
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16048
  call void @llvm.dbg.value(metadata i32 undef, metadata !16031, metadata !DIExpression()), !dbg !16039
  call void @llvm.dbg.value(metadata i32 undef, metadata !16029, metadata !DIExpression()), !dbg !16039
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #24, !dbg !16049
  call void @llvm.dbg.value(metadata i32 undef, metadata !15166, metadata !DIExpression()) #23, !dbg !16052
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15171, metadata !DIExpression()) #23, !dbg !16052
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16054
  br i1 %14, label %16, label %15, !dbg !16055

15:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !16056
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.292, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16056
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !16056
  unreachable, !dbg !16056

16:                                               ; preds = %13
  %17 = extractvalue { i32, i32 } %10, 0, !dbg !16042
  call void @llvm.dbg.value(metadata i32 %17, metadata !15144, metadata !DIExpression()) #23, !dbg !16044
  call void @llvm.dbg.value(metadata i32 %17, metadata !15138, metadata !DIExpression()) #23, !dbg !16040
  call void @llvm.dbg.value(metadata i32 %17, metadata !16031, metadata !DIExpression()), !dbg !16039
  call void @llvm.dbg.value(metadata i32 undef, metadata !15166, metadata !DIExpression()) #23, !dbg !16052
  call void @llvm.dbg.value(metadata i32 undef, metadata !15180, metadata !DIExpression()) #23, !dbg !16057
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %17) #23, !dbg !16059, !srcloc !15186
  call void @llvm.dbg.value(metadata i32 1, metadata !16029, metadata !DIExpression()), !dbg !16039
  call void @llvm.dbg.value(metadata i32 undef, metadata !16029, metadata !DIExpression()), !dbg !16039
  ret void, !dbg !16060
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !16061 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16063, metadata !DIExpression()), !dbg !16064
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16065
  %3 = load i8, i8* %2, align 1, !dbg !16065
  %4 = and i8 %3, 1, !dbg !16066
  %5 = icmp ne i8 %4, 0, !dbg !16067
  ret i1 %5, !dbg !16068
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !16069 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16073, metadata !DIExpression()), !dbg !16074
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16071, metadata !DIExpression()), !dbg !16074
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !16072, metadata !DIExpression()), !dbg !16074
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #24, !dbg !16075
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #24, !dbg !16076
  ret void, !dbg !16077
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !16078 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16082, metadata !DIExpression()), !dbg !16084
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !16083, metadata !DIExpression()), !dbg !16084
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #24, !dbg !16085
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #24, !dbg !16086
  %3 = icmp eq %union.anon* %1, null, !dbg !16087
  br i1 %3, label %24, label %4, !dbg !16089

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16090
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !16092
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !16093
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !15355, metadata !DIExpression()) #23, !dbg !16094
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15361, metadata !DIExpression()) #23, !dbg !16094
  %7 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !16096
  br i1 %7, label %8, label %9, !dbg !16097

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.293, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 186) #25, !dbg !16098
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 186) #25, !dbg !16098
  unreachable, !dbg !16098

9:                                                ; preds = %4
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #25, !dbg !16099
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !15362, metadata !DIExpression()) #23, !dbg !16094
  %11 = icmp eq %struct._dnode* %10, null, !dbg !16100
  br i1 %11, label %22, label %12, !dbg !16099

12:                                               ; preds = %9, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !15362, metadata !DIExpression()) #23, !dbg !16094
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !16101
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !15362, metadata !DIExpression()) #23, !dbg !16094
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %14) #25, !dbg !16102
  %16 = icmp sgt i32 %15, 0, !dbg !16103
  br i1 %16, label %17, label %19, !dbg !16104

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16105
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #25, !dbg !16106
  br label %24, !dbg !16107

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %13) #25, !dbg !16100
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !15362, metadata !DIExpression()) #23, !dbg !16094
  %21 = icmp eq %struct._dnode* %20, null, !dbg !16100
  br i1 %21, label %22, label %12, !dbg !16099, !llvm.loop !16108

22:                                               ; preds = %19, %9
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16110
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %23) #25, !dbg !16111
  br label %24, !dbg !16112

24:                                               ; preds = %22, %17, %2
  ret void, !dbg !16113
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !16114 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !16119, metadata !DIExpression()), !dbg !16120
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16118, metadata !DIExpression()), !dbg !16120
  %4 = icmp eq i64 %3, -1, !dbg !16121
  br i1 %4, label %6, label %5, !dbg !16123

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.304(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !16124
  br label %6, !dbg !16126

6:                                                ; preds = %5, %2
  ret void, !dbg !16127
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.304(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !16128 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16131, metadata !DIExpression()), !dbg !16132
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16130, metadata !DIExpression()), !dbg !16132
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !16133
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !16134
  ret void, !dbg !16135
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !16136 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16138, metadata !DIExpression()), !dbg !16146
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !16147
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !16147
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16139, metadata !DIExpression()), !dbg !16146
  call void @llvm.dbg.value(metadata i32 0, metadata !16140, metadata !DIExpression()), !dbg !16148
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15132, metadata !DIExpression()) #23, !dbg !16149
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16151, !srcloc !15147
  call void @llvm.dbg.value(metadata i32 undef, metadata !15144, metadata !DIExpression()) #23, !dbg !16153
  call void @llvm.dbg.value(metadata i32 undef, metadata !15145, metadata !DIExpression()) #23, !dbg !16153
  call void @llvm.dbg.value(metadata i32 undef, metadata !15138, metadata !DIExpression()) #23, !dbg !16149
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16154
  br i1 %5, label %7, label %6, !dbg !16155

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !16156
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16156
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !16156
  unreachable, !dbg !16156

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15144, metadata !DIExpression()) #23, !dbg !16153
  call void @llvm.dbg.value(metadata i32 undef, metadata !15138, metadata !DIExpression()) #23, !dbg !16149
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16157
  call void @llvm.dbg.value(metadata i32 undef, metadata !16142, metadata !DIExpression()), !dbg !16148
  call void @llvm.dbg.value(metadata i32 undef, metadata !16140, metadata !DIExpression()), !dbg !16148
  %8 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !16158
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %8, i32 0, i32 3, !dbg !16159
  %10 = load i8, i8* %9, align 1, !dbg !16159
  %11 = and i8 %10, 40, !dbg !16160
  %12 = icmp eq i8 %11, 0, !dbg !16160
  call void @llvm.dbg.value(metadata i1 %12, metadata !16143, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16161
  br i1 %12, label %13, label %20, !dbg !16162

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !16163
  %15 = bitcast void (%struct._timeout*)** %14 to %union.anon**, !dbg !16163
  %16 = load %union.anon*, %union.anon** %15, align 8, !dbg !16163
  %17 = icmp eq %union.anon* %16, null, !dbg !16167
  br i1 %17, label %19, label %18, !dbg !16168

18:                                               ; preds = %13
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #24, !dbg !16169
  br label %19, !dbg !16171

19:                                               ; preds = %18, %13
  tail call fastcc void @z_mark_thread_as_started.302(%struct.k_thread* noundef nonnull %3) #24, !dbg !16172
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #24, !dbg !16173
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #24, !dbg !16174
  br label %20, !dbg !16175

20:                                               ; preds = %19, %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !15166, metadata !DIExpression()) #23, !dbg !16176
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15171, metadata !DIExpression()) #23, !dbg !16176
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16178
  br i1 %21, label %23, label %22, !dbg !16179

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !16180
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.292, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16180
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !16180
  unreachable, !dbg !16180

23:                                               ; preds = %20
  %24 = extractvalue { i32, i32 } %4, 0, !dbg !16151
  call void @llvm.dbg.value(metadata i32 %24, metadata !15144, metadata !DIExpression()) #23, !dbg !16153
  call void @llvm.dbg.value(metadata i32 %24, metadata !15138, metadata !DIExpression()) #23, !dbg !16149
  call void @llvm.dbg.value(metadata i32 %24, metadata !16142, metadata !DIExpression()), !dbg !16148
  call void @llvm.dbg.value(metadata i32 undef, metadata !15166, metadata !DIExpression()) #23, !dbg !16176
  call void @llvm.dbg.value(metadata i32 undef, metadata !15180, metadata !DIExpression()) #23, !dbg !16181
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #23, !dbg !16183, !srcloc !15186
  call void @llvm.dbg.value(metadata i32 1, metadata !16140, metadata !DIExpression()), !dbg !16148
  call void @llvm.dbg.value(metadata i32 undef, metadata !16140, metadata !DIExpression()), !dbg !16148
  ret void, !dbg !16184
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16185 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16187, metadata !DIExpression()), !dbg !16188
  %2 = tail call fastcc %union.anon* @pended_on_thread(%struct.k_thread* noundef %0) #24, !dbg !16189
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !16190
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #24, !dbg !16191
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16192
  store %union.anon* null, %union.anon** %3, align 8, !dbg !16193
  ret void, !dbg !16194
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %union.anon* @pended_on_thread(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #1 !dbg !16195 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16199, metadata !DIExpression()), !dbg !16200
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16201
  %3 = load %union.anon*, %union.anon** %2, align 8, !dbg !16201
  %4 = icmp eq %union.anon* %3, null, !dbg !16201
  br i1 %4, label %5, label %6, !dbg !16204

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.307, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 726) #25, !dbg !16205
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 726) #25, !dbg !16205
  unreachable, !dbg !16205

6:                                                ; preds = %1
  ret %union.anon* %3, !dbg !16207
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !16208 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16210, metadata !DIExpression()), !dbg !16211
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16212
  %3 = load i8, i8* %2, align 1, !dbg !16213
  %4 = and i8 %3, -3, !dbg !16213
  store i8 %4, i8* %2, align 1, !dbg !16213
  ret void, !dbg !16214
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16215 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16217, metadata !DIExpression()), !dbg !16218
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !16219
  br i1 %2, label %3, label %7, !dbg !16221

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15324, metadata !DIExpression()) #23, !dbg !16222
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16225
  %5 = load i8, i8* %4, align 1, !dbg !16226
  %6 = and i8 %5, 127, !dbg !16226
  store i8 %6, i8* %4, align 1, !dbg !16226
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15332, metadata !DIExpression()) #23, !dbg !16227
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !16229
  br label %7, !dbg !16230

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16231
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !16232
  %10 = zext i1 %9 to i32, !dbg !16232
  tail call fastcc void @update_cache(i32 noundef %10) #24, !dbg !16233
  ret void, !dbg !16234
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !16235 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16237, metadata !DIExpression()), !dbg !16238
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16239
  %3 = load i8, i8* %2, align 1, !dbg !16240
  %4 = or i8 %3, 2, !dbg !16240
  store i8 %4, i8* %2, align 1, !dbg !16240
  ret void, !dbg !16241
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* noundef %0) local_unnamed_addr #22 !dbg !16242 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16244, metadata !DIExpression()), !dbg !16248
  call void @llvm.dbg.value(metadata i32 0, metadata !16245, metadata !DIExpression()), !dbg !16249
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15132, metadata !DIExpression()) #23, !dbg !16250
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16252, !srcloc !15147
  call void @llvm.dbg.value(metadata i32 undef, metadata !15144, metadata !DIExpression()) #23, !dbg !16254
  call void @llvm.dbg.value(metadata i32 undef, metadata !15145, metadata !DIExpression()) #23, !dbg !16254
  call void @llvm.dbg.value(metadata i32 undef, metadata !15138, metadata !DIExpression()) #23, !dbg !16250
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16255
  br i1 %3, label %5, label %4, !dbg !16256

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !16257
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16257
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !16257
  unreachable, !dbg !16257

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15144, metadata !DIExpression()) #23, !dbg !16254
  call void @llvm.dbg.value(metadata i32 undef, metadata !15138, metadata !DIExpression()) #23, !dbg !16250
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16258
  call void @llvm.dbg.value(metadata i32 undef, metadata !16247, metadata !DIExpression()), !dbg !16249
  call void @llvm.dbg.value(metadata i32 undef, metadata !16245, metadata !DIExpression()), !dbg !16249
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #24, !dbg !16259
  call void @llvm.dbg.value(metadata i32 undef, metadata !15166, metadata !DIExpression()) #23, !dbg !16262
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15171, metadata !DIExpression()) #23, !dbg !16262
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16264
  br i1 %6, label %8, label %7, !dbg !16265

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !16266
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.292, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16266
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !16266
  unreachable, !dbg !16266

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !16252
  call void @llvm.dbg.value(metadata i32 %9, metadata !15144, metadata !DIExpression()) #23, !dbg !16254
  call void @llvm.dbg.value(metadata i32 %9, metadata !15138, metadata !DIExpression()) #23, !dbg !16250
  call void @llvm.dbg.value(metadata i32 %9, metadata !16247, metadata !DIExpression()), !dbg !16249
  call void @llvm.dbg.value(metadata i32 undef, metadata !15166, metadata !DIExpression()) #23, !dbg !16262
  call void @llvm.dbg.value(metadata i32 undef, metadata !15180, metadata !DIExpression()) #23, !dbg !16267
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !16269, !srcloc !15186
  call void @llvm.dbg.value(metadata i32 1, metadata !16245, metadata !DIExpression()), !dbg !16249
  call void @llvm.dbg.value(metadata i32 undef, metadata !16245, metadata !DIExpression()), !dbg !16249
  ret void, !dbg !16270
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16271 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16277, metadata !DIExpression()), !dbg !16282
  call void @llvm.dbg.value(metadata i32 %0, metadata !16275, metadata !DIExpression()), !dbg !16282
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !16276, metadata !DIExpression()), !dbg !16282
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16283
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #24, !dbg !16284
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16285
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !16286
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !16287
  call void @llvm.dbg.value(metadata i32 %6, metadata !16278, metadata !DIExpression()), !dbg !16282
  call void @llvm.dbg.value(metadata i32 0, metadata !16279, metadata !DIExpression()), !dbg !16288
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15132, metadata !DIExpression()) #23, !dbg !16289
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16291, !srcloc !15147
  call void @llvm.dbg.value(metadata i32 undef, metadata !15144, metadata !DIExpression()) #23, !dbg !16293
  call void @llvm.dbg.value(metadata i32 undef, metadata !15145, metadata !DIExpression()) #23, !dbg !16293
  call void @llvm.dbg.value(metadata i32 undef, metadata !15138, metadata !DIExpression()) #23, !dbg !16289
  %8 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16294
  br i1 %8, label %10, label %9, !dbg !16295

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !16296
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16296
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !16296
  unreachable, !dbg !16296

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !15144, metadata !DIExpression()) #23, !dbg !16293
  call void @llvm.dbg.value(metadata i32 undef, metadata !15138, metadata !DIExpression()) #23, !dbg !16289
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16297
  call void @llvm.dbg.value(metadata i32 undef, metadata !16281, metadata !DIExpression()), !dbg !16288
  call void @llvm.dbg.value(metadata i32 undef, metadata !16279, metadata !DIExpression()), !dbg !16288
  %11 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !16298
  %12 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16302
  %13 = icmp eq %struct.k_thread* %11, %12, !dbg !16303
  br i1 %13, label %14, label %15, !dbg !16304

14:                                               ; preds = %10
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !16305
  br label %15, !dbg !16307

15:                                               ; preds = %10, %14
  call void @llvm.dbg.value(metadata i32 undef, metadata !15166, metadata !DIExpression()) #23, !dbg !16308
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15171, metadata !DIExpression()) #23, !dbg !16308
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16310
  br i1 %16, label %18, label %17, !dbg !16311

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !16312
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.292, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16312
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !16312
  unreachable, !dbg !16312

18:                                               ; preds = %15
  %19 = extractvalue { i32, i32 } %7, 0, !dbg !16291
  call void @llvm.dbg.value(metadata i32 %19, metadata !15144, metadata !DIExpression()) #23, !dbg !16293
  call void @llvm.dbg.value(metadata i32 %19, metadata !15138, metadata !DIExpression()) #23, !dbg !16289
  call void @llvm.dbg.value(metadata i32 %19, metadata !16281, metadata !DIExpression()), !dbg !16288
  call void @llvm.dbg.value(metadata i32 undef, metadata !15166, metadata !DIExpression()) #23, !dbg !16308
  call void @llvm.dbg.value(metadata i32 undef, metadata !15180, metadata !DIExpression()) #23, !dbg !16313
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %19) #23, !dbg !16315, !srcloc !15186
  call void @llvm.dbg.value(metadata i32 1, metadata !16279, metadata !DIExpression()), !dbg !16288
  call void @llvm.dbg.value(metadata i32 undef, metadata !16279, metadata !DIExpression()), !dbg !16288
  ret i32 %6, !dbg !16316
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !16317 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16322, metadata !DIExpression()), !dbg !16325
  call void @llvm.dbg.value(metadata i64 undef, metadata !16324, metadata !DIExpression()), !dbg !16325
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16321, metadata !DIExpression()), !dbg !16325
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !16323, metadata !DIExpression()), !dbg !16325
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16326
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !16327
  %6 = icmp eq %struct.k_spinlock* %0, @sched_spinlock, !dbg !16328
  br i1 %6, label %7, label %8, !dbg !16331

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3.308, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 846) #25, !dbg !16332
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 846) #25, !dbg !16332
  unreachable, !dbg !16332

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15132, metadata !DIExpression()) #23, !dbg !16334
  %9 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16336, !srcloc !15147
  call void @llvm.dbg.value(metadata i32 undef, metadata !15144, metadata !DIExpression()) #23, !dbg !16338
  call void @llvm.dbg.value(metadata i32 undef, metadata !15145, metadata !DIExpression()) #23, !dbg !16338
  call void @llvm.dbg.value(metadata i32 undef, metadata !15138, metadata !DIExpression()) #23, !dbg !16334
  %10 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16339
  br i1 %10, label %12, label %11, !dbg !16340

11:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !16341
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16341
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !16341
  unreachable, !dbg !16341

12:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 undef, metadata !15144, metadata !DIExpression()) #23, !dbg !16338
  call void @llvm.dbg.value(metadata i32 undef, metadata !15138, metadata !DIExpression()) #23, !dbg !16334
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16342
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16343
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %13, %union.anon* noundef %2, [1 x i64] %3) #24, !dbg !16344
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15819, metadata !DIExpression()) #23, !dbg !16345
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #25, !dbg !16347
  br i1 %14, label %16, label %15, !dbg !16348

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 225) #25, !dbg !16349
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.292, i32 0, i32 0), %struct.k_spinlock* noundef %0) #25, !dbg !16349
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 225) #25, !dbg !16349
  unreachable, !dbg !16349

16:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 undef, metadata !15810, metadata !DIExpression()) #23, !dbg !16350
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15815, metadata !DIExpression()) #23, !dbg !16350
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15819, metadata !DIExpression()) #23, !dbg !16352
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16354
  br i1 %17, label %19, label %18, !dbg !16355

18:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 225) #25, !dbg !16356
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.292, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16356
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 225) #25, !dbg !16356
  unreachable, !dbg !16356

19:                                               ; preds = %16
  %20 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %20, metadata !15810, metadata !DIExpression()) #23, !dbg !16350
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %20) #25, !dbg !16357
  ret i32 %21, !dbg !16358
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !16359 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16363, metadata !DIExpression()), !dbg !16368
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16364, metadata !DIExpression()), !dbg !16368
  call void @llvm.dbg.value(metadata i32 0, metadata !16365, metadata !DIExpression()), !dbg !16369
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15132, metadata !DIExpression()) #23, !dbg !16370
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16372, !srcloc !15147
  call void @llvm.dbg.value(metadata i32 undef, metadata !15144, metadata !DIExpression()) #23, !dbg !16374
  call void @llvm.dbg.value(metadata i32 undef, metadata !15145, metadata !DIExpression()) #23, !dbg !16374
  call void @llvm.dbg.value(metadata i32 undef, metadata !15138, metadata !DIExpression()) #23, !dbg !16370
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16375
  br i1 %3, label %5, label %4, !dbg !16376

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !16377
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16377
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !16377
  unreachable, !dbg !16377

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15144, metadata !DIExpression()) #23, !dbg !16374
  call void @llvm.dbg.value(metadata i32 undef, metadata !15138, metadata !DIExpression()) #23, !dbg !16370
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16378
  call void @llvm.dbg.value(metadata i32 undef, metadata !16367, metadata !DIExpression()), !dbg !16369
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16364, metadata !DIExpression()), !dbg !16368
  call void @llvm.dbg.value(metadata i32 undef, metadata !16365, metadata !DIExpression()), !dbg !16369
  %6 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #24, !dbg !16379
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !16364, metadata !DIExpression()), !dbg !16368
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !16382
  br i1 %8, label %10, label %9, !dbg !16384

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !16385
  br label %10, !dbg !16387

10:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !15166, metadata !DIExpression()) #23, !dbg !16388
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15171, metadata !DIExpression()) #23, !dbg !16388
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16390
  br i1 %11, label %13, label %12, !dbg !16391

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !16392
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.292, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16392
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !16392
  unreachable, !dbg !16392

13:                                               ; preds = %10
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !16372
  call void @llvm.dbg.value(metadata i32 %14, metadata !15144, metadata !DIExpression()) #23, !dbg !16374
  call void @llvm.dbg.value(metadata i32 %14, metadata !15138, metadata !DIExpression()) #23, !dbg !16370
  call void @llvm.dbg.value(metadata i32 %14, metadata !16367, metadata !DIExpression()), !dbg !16369
  call void @llvm.dbg.value(metadata i32 undef, metadata !15166, metadata !DIExpression()) #23, !dbg !16388
  call void @llvm.dbg.value(metadata i32 undef, metadata !15180, metadata !DIExpression()) #23, !dbg !16393
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !16395, !srcloc !15186
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !16364, metadata !DIExpression()), !dbg !16368
  call void @llvm.dbg.value(metadata i32 undef, metadata !16365, metadata !DIExpression()), !dbg !16369
  ret %struct.k_thread* %7, !dbg !16396
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !16397 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16399, metadata !DIExpression()), !dbg !16404
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16400, metadata !DIExpression()), !dbg !16404
  call void @llvm.dbg.value(metadata i32 0, metadata !16401, metadata !DIExpression()), !dbg !16405
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15132, metadata !DIExpression()) #23, !dbg !16406
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16408, !srcloc !15147
  call void @llvm.dbg.value(metadata i32 undef, metadata !15144, metadata !DIExpression()) #23, !dbg !16410
  call void @llvm.dbg.value(metadata i32 undef, metadata !15145, metadata !DIExpression()) #23, !dbg !16410
  call void @llvm.dbg.value(metadata i32 undef, metadata !15138, metadata !DIExpression()) #23, !dbg !16406
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16411
  br i1 %3, label %5, label %4, !dbg !16412

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !16413
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16413
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !16413
  unreachable, !dbg !16413

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15144, metadata !DIExpression()) #23, !dbg !16410
  call void @llvm.dbg.value(metadata i32 undef, metadata !15138, metadata !DIExpression()) #23, !dbg !16406
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16414
  call void @llvm.dbg.value(metadata i32 undef, metadata !16403, metadata !DIExpression()), !dbg !16405
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16400, metadata !DIExpression()), !dbg !16404
  call void @llvm.dbg.value(metadata i32 undef, metadata !16401, metadata !DIExpression()), !dbg !16405
  %6 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #24, !dbg !16415
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !16400, metadata !DIExpression()), !dbg !16404
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !16418
  br i1 %8, label %11, label %9, !dbg !16420

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !16421
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !16423
  br label %11, !dbg !16424

11:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !15166, metadata !DIExpression()) #23, !dbg !16425
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15171, metadata !DIExpression()) #23, !dbg !16425
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16427
  br i1 %12, label %14, label %13, !dbg !16428

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !16429
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.292, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16429
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !16429
  unreachable, !dbg !16429

14:                                               ; preds = %11
  %15 = extractvalue { i32, i32 } %2, 0, !dbg !16408
  call void @llvm.dbg.value(metadata i32 %15, metadata !15144, metadata !DIExpression()) #23, !dbg !16410
  call void @llvm.dbg.value(metadata i32 %15, metadata !15138, metadata !DIExpression()) #23, !dbg !16406
  call void @llvm.dbg.value(metadata i32 %15, metadata !16403, metadata !DIExpression()), !dbg !16405
  call void @llvm.dbg.value(metadata i32 undef, metadata !15166, metadata !DIExpression()) #23, !dbg !16425
  call void @llvm.dbg.value(metadata i32 undef, metadata !15180, metadata !DIExpression()) #23, !dbg !16430
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !16432, !srcloc !15186
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !16400, metadata !DIExpression()), !dbg !16404
  call void @llvm.dbg.value(metadata i32 undef, metadata !16401, metadata !DIExpression()), !dbg !16405
  ret %struct.k_thread* %7, !dbg !16433
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16434 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16436, metadata !DIExpression()), !dbg !16437
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16244, metadata !DIExpression()) #23, !dbg !16438
  call void @llvm.dbg.value(metadata i32 0, metadata !16245, metadata !DIExpression()) #23, !dbg !16440
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15132, metadata !DIExpression()) #23, !dbg !16441
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16443, !srcloc !15147
  call void @llvm.dbg.value(metadata i32 undef, metadata !15144, metadata !DIExpression()) #23, !dbg !16445
  call void @llvm.dbg.value(metadata i32 undef, metadata !15145, metadata !DIExpression()) #23, !dbg !16445
  call void @llvm.dbg.value(metadata i32 undef, metadata !15138, metadata !DIExpression()) #23, !dbg !16441
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16446
  br i1 %3, label %5, label %4, !dbg !16447

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !16448
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16448
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !16448
  unreachable, !dbg !16448

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15144, metadata !DIExpression()) #23, !dbg !16445
  call void @llvm.dbg.value(metadata i32 undef, metadata !15138, metadata !DIExpression()) #23, !dbg !16441
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16449
  call void @llvm.dbg.value(metadata i32 undef, metadata !16247, metadata !DIExpression()) #23, !dbg !16440
  call void @llvm.dbg.value(metadata i32 undef, metadata !16245, metadata !DIExpression()) #23, !dbg !16440
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !16450
  call void @llvm.dbg.value(metadata i32 undef, metadata !15166, metadata !DIExpression()) #23, !dbg !16451
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15171, metadata !DIExpression()) #23, !dbg !16451
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16453
  br i1 %6, label %8, label %7, !dbg !16454

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !16455
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.292, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16455
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !16455
  unreachable, !dbg !16455

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !16443
  call void @llvm.dbg.value(metadata i32 %9, metadata !15144, metadata !DIExpression()) #23, !dbg !16445
  call void @llvm.dbg.value(metadata i32 %9, metadata !15138, metadata !DIExpression()) #23, !dbg !16441
  call void @llvm.dbg.value(metadata i32 %9, metadata !16247, metadata !DIExpression()) #23, !dbg !16440
  call void @llvm.dbg.value(metadata i32 undef, metadata !15166, metadata !DIExpression()) #23, !dbg !16451
  call void @llvm.dbg.value(metadata i32 undef, metadata !15180, metadata !DIExpression()) #23, !dbg !16456
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !16458, !srcloc !15186
  call void @llvm.dbg.value(metadata i32 1, metadata !16245, metadata !DIExpression()) #23, !dbg !16440
  call void @llvm.dbg.value(metadata i32 undef, metadata !16245, metadata !DIExpression()) #23, !dbg !16440
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !16459
  ret void, !dbg !16460
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16461 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16463, metadata !DIExpression()), !dbg !16469
  call void @llvm.dbg.value(metadata i32 %1, metadata !16464, metadata !DIExpression()), !dbg !16469
  call void @llvm.dbg.value(metadata i8 0, metadata !16465, metadata !DIExpression()), !dbg !16469
  call void @llvm.dbg.value(metadata i32 0, metadata !16466, metadata !DIExpression()), !dbg !16470
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15132, metadata !DIExpression()) #23, !dbg !16471
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16473, !srcloc !15147
  call void @llvm.dbg.value(metadata i32 undef, metadata !15144, metadata !DIExpression()) #23, !dbg !16475
  call void @llvm.dbg.value(metadata i32 undef, metadata !15145, metadata !DIExpression()) #23, !dbg !16475
  call void @llvm.dbg.value(metadata i32 undef, metadata !15138, metadata !DIExpression()) #23, !dbg !16471
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16476
  br i1 %4, label %6, label %5, !dbg !16477

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !16478
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16478
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !16478
  unreachable, !dbg !16478

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !15144, metadata !DIExpression()) #23, !dbg !16475
  call void @llvm.dbg.value(metadata i32 undef, metadata !15138, metadata !DIExpression()) #23, !dbg !16471
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16479
  call void @llvm.dbg.value(metadata i32 undef, metadata !16468, metadata !DIExpression()), !dbg !16470
  call void @llvm.dbg.value(metadata i8 poison, metadata !16465, metadata !DIExpression()), !dbg !16469
  call void @llvm.dbg.value(metadata i32 undef, metadata !16466, metadata !DIExpression()), !dbg !16470
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %9 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !16480
  call void @llvm.dbg.value(metadata i1 %9, metadata !16465, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16469
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %11 = bitcast %union.anon.2* %10 to i8*
  %12 = trunc i32 %1 to i8
  br i1 %9, label %13, label %34, !dbg !16483

13:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15324, metadata !DIExpression()) #23, !dbg !16484
  %14 = load i8, i8* %7, align 1, !dbg !16490
  %15 = and i8 %14, 127, !dbg !16490
  store i8 %15, i8* %7, align 1, !dbg !16490
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15332, metadata !DIExpression()) #23, !dbg !16491
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !16493
  store i8 %12, i8* %11, align 2, !dbg !16494
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15341, metadata !DIExpression()) #23, !dbg !16495
  %16 = load i8, i8* %7, align 1, !dbg !16497
  %17 = or i8 %16, -128, !dbg !16497
  store i8 %17, i8* %7, align 1, !dbg !16497
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15348, metadata !DIExpression()) #23, !dbg !16498
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15355, metadata !DIExpression()) #23, !dbg !16500
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15361, metadata !DIExpression()) #23, !dbg !16500
  %18 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !16502
  br i1 %18, label %19, label %20, !dbg !16503

19:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.293, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 186) #25, !dbg !16504
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 186) #25, !dbg !16504
  unreachable, !dbg !16504

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !16505
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !15362, metadata !DIExpression()) #23, !dbg !16500
  %22 = icmp eq %struct._dnode* %21, null, !dbg !16506
  br i1 %22, label %32, label %23, !dbg !16505

23:                                               ; preds = %20, %29
  %24 = phi %struct._dnode* [ %30, %29 ], [ %21, %20 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !15362, metadata !DIExpression()) #23, !dbg !16500
  %25 = bitcast %struct._dnode* %24 to %struct.k_thread*, !dbg !16507
  call void @llvm.dbg.value(metadata %struct.k_thread* %25, metadata !15362, metadata !DIExpression()) #23, !dbg !16500
  %26 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %25) #25, !dbg !16508
  %27 = icmp sgt i32 %26, 0, !dbg !16509
  br i1 %27, label %28, label %29, !dbg !16510

28:                                               ; preds = %23
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %24, %struct._dnode* noundef %8) #25, !dbg !16511
  br label %33, !dbg !16512

29:                                               ; preds = %23
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %24) #25, !dbg !16506
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !15362, metadata !DIExpression()) #23, !dbg !16500
  %31 = icmp eq %struct._dnode* %30, null, !dbg !16506
  br i1 %31, label %32, label %23, !dbg !16505, !llvm.loop !16513

32:                                               ; preds = %29, %20
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %8) #25, !dbg !16515
  br label %33, !dbg !16516

33:                                               ; preds = %28, %32
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !16517
  br label %35, !dbg !16518

34:                                               ; preds = %6
  store i8 %12, i8* %11, align 2, !dbg !16519
  br label %35

35:                                               ; preds = %33, %34
  call void @llvm.dbg.value(metadata i32 undef, metadata !15166, metadata !DIExpression()) #23, !dbg !16521
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15171, metadata !DIExpression()) #23, !dbg !16521
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16523
  br i1 %36, label %38, label %37, !dbg !16524

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !16525
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.292, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16525
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !16525
  unreachable, !dbg !16525

38:                                               ; preds = %35
  %39 = extractvalue { i32, i32 } %3, 0, !dbg !16473
  call void @llvm.dbg.value(metadata i32 %39, metadata !15144, metadata !DIExpression()) #23, !dbg !16475
  call void @llvm.dbg.value(metadata i32 %39, metadata !15138, metadata !DIExpression()) #23, !dbg !16471
  call void @llvm.dbg.value(metadata i32 %39, metadata !16468, metadata !DIExpression()), !dbg !16470
  call void @llvm.dbg.value(metadata i32 undef, metadata !15166, metadata !DIExpression()) #23, !dbg !16521
  call void @llvm.dbg.value(metadata i32 undef, metadata !15180, metadata !DIExpression()) #23, !dbg !16526
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %39) #23, !dbg !16528, !srcloc !15186
  call void @llvm.dbg.value(metadata i8 poison, metadata !16465, metadata !DIExpression()), !dbg !16469
  call void @llvm.dbg.value(metadata i32 undef, metadata !16466, metadata !DIExpression()), !dbg !16470
  ret i1 %9, !dbg !16529
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16530 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16534, metadata !DIExpression()), !dbg !16537
  call void @llvm.dbg.value(metadata i32 %1, metadata !16535, metadata !DIExpression()), !dbg !16537
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !16538
  call void @llvm.dbg.value(metadata i1 %3, metadata !16536, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16537
  br i1 %3, label %4, label %12, !dbg !16539

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16541
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !16542
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !16542
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !16542
  %9 = load i8, i8* %8, align 1, !dbg !16542
  %10 = icmp eq i8 %9, 0, !dbg !16543
  br i1 %10, label %11, label %12, !dbg !16544

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !16545
  br label %12, !dbg !16547

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !16548
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !16549 {
  call void @llvm.dbg.value(metadata i32 0, metadata !16551, metadata !DIExpression()), !dbg !16554
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15132, metadata !DIExpression()) #23, !dbg !16555
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16557, !srcloc !15147
  call void @llvm.dbg.value(metadata i32 undef, metadata !15144, metadata !DIExpression()) #23, !dbg !16559
  call void @llvm.dbg.value(metadata i32 undef, metadata !15145, metadata !DIExpression()) #23, !dbg !16559
  call void @llvm.dbg.value(metadata i32 undef, metadata !15138, metadata !DIExpression()) #23, !dbg !16555
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16560
  br i1 %2, label %4, label %3, !dbg !16561

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !16562
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16562
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !16562
  unreachable, !dbg !16562

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !15144, metadata !DIExpression()) #23, !dbg !16559
  call void @llvm.dbg.value(metadata i32 undef, metadata !15138, metadata !DIExpression()) #23, !dbg !16555
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16563
  call void @llvm.dbg.value(metadata i32 undef, metadata !16553, metadata !DIExpression()), !dbg !16554
  call void @llvm.dbg.value(metadata i32 undef, metadata !16551, metadata !DIExpression()), !dbg !16554
  tail call fastcc void @z_sched_lock() #24, !dbg !16564
  call void @llvm.dbg.value(metadata i32 undef, metadata !15166, metadata !DIExpression()) #23, !dbg !16567
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15171, metadata !DIExpression()) #23, !dbg !16567
  %5 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16569
  br i1 %5, label %7, label %6, !dbg !16570

6:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !16571
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.292, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16571
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !16571
  unreachable, !dbg !16571

7:                                                ; preds = %4
  %8 = extractvalue { i32, i32 } %1, 0, !dbg !16557
  call void @llvm.dbg.value(metadata i32 %8, metadata !15144, metadata !DIExpression()) #23, !dbg !16559
  call void @llvm.dbg.value(metadata i32 %8, metadata !15138, metadata !DIExpression()) #23, !dbg !16555
  call void @llvm.dbg.value(metadata i32 %8, metadata !16553, metadata !DIExpression()), !dbg !16554
  call void @llvm.dbg.value(metadata i32 undef, metadata !15166, metadata !DIExpression()) #23, !dbg !16567
  call void @llvm.dbg.value(metadata i32 undef, metadata !15180, metadata !DIExpression()) #23, !dbg !16572
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !16574, !srcloc !15186
  call void @llvm.dbg.value(metadata i32 1, metadata !16551, metadata !DIExpression()), !dbg !16554
  call void @llvm.dbg.value(metadata i32 undef, metadata !16551, metadata !DIExpression()), !dbg !16554
  ret void, !dbg !16575
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !16576 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16577, !srcloc !15866
  call void @llvm.dbg.value(metadata i32 %1, metadata !15862, metadata !DIExpression()) #23, !dbg !16582
  %2 = icmp eq i32 %1, 0, !dbg !16583
  br i1 %2, label %4, label %3, !dbg !16584

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.311, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.312, i32 0, i32 0), i32 noundef 253) #25, !dbg !16585
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.296, i32 0, i32 0)) #25, !dbg !16585
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.312, i32 0, i32 0), i32 noundef 253) #25, !dbg !16585
  unreachable, !dbg !16585

4:                                                ; preds = %0
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16587
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !16587
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !16587
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !16587
  %9 = load i8, i8* %8, align 1, !dbg !16587
  %10 = icmp eq i8 %9, 1, !dbg !16587
  br i1 %10, label %11, label %12, !dbg !16590

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.22.313, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.312, i32 0, i32 0), i32 noundef 254) #25, !dbg !16591
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.296, i32 0, i32 0)) #25, !dbg !16591
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.312, i32 0, i32 0), i32 noundef 254) #25, !dbg !16591
  unreachable, !dbg !16591

12:                                               ; preds = %4
  %13 = add i8 %9, -1, !dbg !16593
  store i8 %13, i8* %8, align 1, !dbg !16593
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16594, !srcloc !16596
  ret void, !dbg !16597
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !16598 {
  call void @llvm.dbg.value(metadata i32 0, metadata !16600, metadata !DIExpression()), !dbg !16603
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15132, metadata !DIExpression()) #23, !dbg !16604
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16606, !srcloc !15147
  call void @llvm.dbg.value(metadata i32 undef, metadata !15144, metadata !DIExpression()) #23, !dbg !16608
  call void @llvm.dbg.value(metadata i32 undef, metadata !15145, metadata !DIExpression()) #23, !dbg !16608
  call void @llvm.dbg.value(metadata i32 undef, metadata !15138, metadata !DIExpression()) #23, !dbg !16604
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16609
  br i1 %2, label %4, label %3, !dbg !16610

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !16611
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16611
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !16611
  unreachable, !dbg !16611

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !15144, metadata !DIExpression()) #23, !dbg !16608
  call void @llvm.dbg.value(metadata i32 undef, metadata !15138, metadata !DIExpression()) #23, !dbg !16604
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16612
  call void @llvm.dbg.value(metadata i32 undef, metadata !16602, metadata !DIExpression()), !dbg !16603
  call void @llvm.dbg.value(metadata i32 undef, metadata !16600, metadata !DIExpression()), !dbg !16603
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16613
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !16613
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !16613
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !16613
  %9 = load i8, i8* %8, align 1, !dbg !16613
  %10 = icmp eq i8 %9, 0, !dbg !16613
  br i1 %10, label %11, label %12, !dbg !16618

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4.316, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 999) #25, !dbg !16619
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.296, i32 0, i32 0)) #25, !dbg !16619
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 999) #25, !dbg !16619
  unreachable, !dbg !16619

12:                                               ; preds = %4
  %13 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16621, !srcloc !15866
  call void @llvm.dbg.value(metadata i32 %13, metadata !15862, metadata !DIExpression()) #23, !dbg !16626
  %14 = icmp eq i32 %13, 0, !dbg !16627
  br i1 %14, label %16, label %15, !dbg !16628

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.311, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 1000) #25, !dbg !16629
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.296, i32 0, i32 0)) #25, !dbg !16629
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 1000) #25, !dbg !16629
  unreachable, !dbg !16629

16:                                               ; preds = %12
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16631
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %17, i32 0, i32 0, i32 4, !dbg !16632
  %19 = bitcast %union.anon.2* %18 to %struct.device_state*, !dbg !16632
  %20 = getelementptr inbounds %struct.device_state, %struct.device_state* %19, i32 0, i32 1, !dbg !16632
  %21 = load i8, i8* %20, align 1, !dbg !16633
  %22 = add i8 %21, 1, !dbg !16633
  store i8 %22, i8* %20, align 1, !dbg !16633
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !16634
  call void @llvm.dbg.value(metadata i32 undef, metadata !15166, metadata !DIExpression()) #23, !dbg !16635
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15171, metadata !DIExpression()) #23, !dbg !16635
  %23 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16637
  br i1 %23, label %25, label %24, !dbg !16638

24:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !16639
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.292, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16639
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !16639
  unreachable, !dbg !16639

25:                                               ; preds = %16
  %26 = extractvalue { i32, i32 } %1, 0, !dbg !16606
  call void @llvm.dbg.value(metadata i32 %26, metadata !15144, metadata !DIExpression()) #23, !dbg !16608
  call void @llvm.dbg.value(metadata i32 %26, metadata !15138, metadata !DIExpression()) #23, !dbg !16604
  call void @llvm.dbg.value(metadata i32 %26, metadata !16602, metadata !DIExpression()), !dbg !16603
  call void @llvm.dbg.value(metadata i32 undef, metadata !15166, metadata !DIExpression()) #23, !dbg !16635
  call void @llvm.dbg.value(metadata i32 undef, metadata !15180, metadata !DIExpression()) #23, !dbg !16640
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %26) #23, !dbg !16642, !srcloc !15186
  call void @llvm.dbg.value(metadata i32 1, metadata !16600, metadata !DIExpression()), !dbg !16603
  call void @llvm.dbg.value(metadata i32 undef, metadata !16600, metadata !DIExpression()), !dbg !16603
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !16643
  ret void, !dbg !16644
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #8 !dbg !16645 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !16646
  ret %struct.k_thread* %1, !dbg !16647
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !16648 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !16652, metadata !DIExpression()), !dbg !16657
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !16653, metadata !DIExpression()), !dbg !16657
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !16658
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16654, metadata !DIExpression()), !dbg !16657
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !16659
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16655, metadata !DIExpression()), !dbg !16657
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #24, !dbg !16660
  call void @llvm.dbg.value(metadata i32 %5, metadata !16656, metadata !DIExpression()), !dbg !16657
  %6 = icmp sgt i32 %5, 0, !dbg !16661
  br i1 %6, label %17, label %7, !dbg !16663

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !16664
  br i1 %8, label %17, label %9, !dbg !16666

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !16667
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !16667
  %12 = load i32, i32* %11, align 8, !dbg !16667
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !16669
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !16669
  %15 = load i32, i32* %14, align 8, !dbg !16669
  %16 = icmp ult i32 %12, %15, !dbg !16670
  br label %17, !dbg !16671

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !16672
  ret i1 %18, !dbg !16673
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16674 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16691, metadata !DIExpression()), !dbg !16706
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16692, metadata !DIExpression()), !dbg !16706
  %4 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !16707
  br i1 %4, label %5, label %6, !dbg !16710

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.293, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 1179) #25, !dbg !16711
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 1179) #25, !dbg !16711
  unreachable, !dbg !16711

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16713
  %8 = load i32, i32* %7, align 4, !dbg !16714
  %9 = add nsw i32 %8, 1, !dbg !16714
  store i32 %9, i32* %7, align 4, !dbg !16714
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !16715
  store i32 %8, i32* %10, align 8, !dbg !16716
  %11 = load i32, i32* %7, align 4, !dbg !16717
  %12 = icmp eq i32 %11, 0, !dbg !16718
  br i1 %12, label %13, label %35, !dbg !16719

13:                                               ; preds = %6
  %14 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !16720
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %14) #23, !dbg !16720
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !16694, metadata !DIExpression()), !dbg !16720
  %15 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16720
  %16 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !16720
  %17 = load i32, i32* %16, align 4, !dbg !16720
  %18 = shl i32 %17, 2, !dbg !16720
  %19 = alloca i8, i32 %18, align 8, !dbg !16720
  %20 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !16720
  store i8* %19, i8** %20, align 4, !dbg !16720
  %21 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !16720
  %22 = alloca i8, i32 %17, align 8, !dbg !16720
  store i8* %22, i8** %21, align 4, !dbg !16720
  %23 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !16720
  store i32 -1, i32* %23, align 4, !dbg !16720
  %24 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !16721
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !16703, metadata !DIExpression()), !dbg !16722
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !16693, metadata !DIExpression()), !dbg !16706
  %25 = icmp eq %struct.rbnode* %24, null, !dbg !16723
  br i1 %25, label %26, label %27, !dbg !16720

26:                                               ; preds = %27, %13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %14) #23, !dbg !16723
  br label %35, !dbg !16724

27:                                               ; preds = %13, %27
  %28 = phi %struct.rbnode* [ %33, %27 ], [ %24, %13 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %28, metadata !16693, metadata !DIExpression()), !dbg !16706
  %29 = load i32, i32* %7, align 4, !dbg !16725
  %30 = add nsw i32 %29, 1, !dbg !16725
  store i32 %30, i32* %7, align 4, !dbg !16725
  %31 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %28, i32 2, !dbg !16727
  %32 = bitcast %struct.rbnode* %31 to i32*, !dbg !16727
  store i32 %29, i32* %32, align 8, !dbg !16728
  %33 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !16721
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !16703, metadata !DIExpression()), !dbg !16722
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !16693, metadata !DIExpression()), !dbg !16706
  %34 = icmp eq %struct.rbnode* %33, null, !dbg !16723
  br i1 %34, label %26, label %27, !dbg !16720, !llvm.loop !16729

35:                                               ; preds = %26, %6
  %36 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16731
  %37 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16732
  call void @rb_insert(%struct.rbtree* noundef %36, %struct.rbnode* noundef %37) #25, !dbg !16733
  ret void, !dbg !16734
}

; Function Attrs: optsize
declare !dbg !16735 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !16740 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16743 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16745, metadata !DIExpression()), !dbg !16747
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16746, metadata !DIExpression()), !dbg !16747
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !16748
  br i1 %3, label %4, label %5, !dbg !16751

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.293, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 1200) #25, !dbg !16752
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 1200) #25, !dbg !16752
  unreachable, !dbg !16752

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16754
  %7 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16755
  tail call void @rb_remove(%struct.rbtree* noundef %6, %struct.rbnode* noundef %7) #25, !dbg !16756
  %8 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !16757
  %9 = load %struct.rbnode*, %struct.rbnode** %8, align 4, !dbg !16757
  %10 = icmp eq %struct.rbnode* %9, null, !dbg !16759
  br i1 %10, label %11, label %13, !dbg !16760

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16761
  store i32 0, i32* %12, align 4, !dbg !16763
  br label %13, !dbg !16764

13:                                               ; preds = %11, %5
  ret void, !dbg !16765
}

; Function Attrs: optsize
declare !dbg !16766 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !16767 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16771, metadata !DIExpression()), !dbg !16774
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16772, metadata !DIExpression()), !dbg !16774
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16775
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #24, !dbg !16776
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !16773, metadata !DIExpression()), !dbg !16774
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16772, metadata !DIExpression()), !dbg !16774
  ret %struct.k_thread* %4, !dbg !16777
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !16778 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !16782, metadata !DIExpression()), !dbg !16783
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #25, !dbg !16784
  ret %struct.rbnode* %2, !dbg !16785
}

; Function Attrs: optsize
declare !dbg !16786 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #16 !dbg !16789 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !16799, metadata !DIExpression()), !dbg !16803
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !16804
  %3 = load i32, i32* %2, align 4, !dbg !16804
  %4 = icmp eq i32 %3, 0, !dbg !16806
  br i1 %4, label %10, label %5, !dbg !16807

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16800, metadata !DIExpression()), !dbg !16803
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !16808, !range !7515
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !16809
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !16801, metadata !DIExpression()), !dbg !16803
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #24, !dbg !16810
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !16802, metadata !DIExpression()), !dbg !16803
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16800, metadata !DIExpression()), !dbg !16803
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !16803
  ret %struct.k_thread* %11, !dbg !16811
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !16812 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16816, metadata !DIExpression()), !dbg !16819
  call void @llvm.dbg.value(metadata i32 0, metadata !16817, metadata !DIExpression()), !dbg !16819
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !16820
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16818, metadata !DIExpression()), !dbg !16819
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16821
  br i1 %3, label %8, label %4, !dbg !16822

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !16823
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !16825
  call void @llvm.dbg.value(metadata i32 1, metadata !16817, metadata !DIExpression()), !dbg !16819
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !16820
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16818, metadata !DIExpression()), !dbg !16819
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !16821
  br i1 %7, label %8, label %4, !dbg !16822, !llvm.loop !16826

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !16819
  ret i32 %9, !dbg !16828
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #8 !dbg !16829 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16831, metadata !DIExpression()), !dbg !16832
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !16833
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #24, !dbg !16834
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !16835
  ret %struct.k_thread* %4, !dbg !16836
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #7 !dbg !16837 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !16846, metadata !DIExpression()), !dbg !16847
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !16848
  tail call fastcc void @sys_dlist_init.317(%struct._dnode* noundef nonnull %2) #24, !dbg !16849
  ret void, !dbg !16850
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.317(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !16851 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16855, metadata !DIExpression()), !dbg !16856
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16857
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !16858
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16859
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !16860
  ret void, !dbg !16861
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !16862 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #24, !dbg !16863
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #24, !dbg !16864
  ret void, !dbg !16865
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !16866 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16871, metadata !DIExpression()), !dbg !16872
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !16873
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !16873
  %4 = load i8, i8* %3, align 2, !dbg !16873
  %5 = sext i8 %4 to i32, !dbg !16874
  ret i32 %5, !dbg !16875
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16876 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16880, metadata !DIExpression()), !dbg !16883
  call void @llvm.dbg.value(metadata i32 %1, metadata !16881, metadata !DIExpression()), !dbg !16883
  %3 = add i32 %1, 16, !dbg !16884
  %4 = icmp ult i32 %3, 31, !dbg !16884
  br i1 %4, label %6, label %5, !dbg !16884

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([134 x i8], [134 x i8]* @.str.8.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 1331) #25, !dbg !16888
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9.321, i32 0, i32 0), i32 noundef %1, i32 noundef 14, i32 noundef -16) #25, !dbg !16888
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 1331) #25, !dbg !16888
  unreachable, !dbg !16888

6:                                                ; preds = %2
  %7 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16890, !srcloc !15866
  call void @llvm.dbg.value(metadata i32 %7, metadata !15862, metadata !DIExpression()) #23, !dbg !16895
  %8 = icmp eq i32 %7, 0, !dbg !16896
  br i1 %8, label %10, label %9, !dbg !16897

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.311, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 1332) #25, !dbg !16898
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.296, i32 0, i32 0)) #25, !dbg !16898
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 1332) #25, !dbg !16898
  unreachable, !dbg !16898

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16882, metadata !DIExpression()), !dbg !16883
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !16900
  ret void, !dbg !16901
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !16902 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #24, !dbg !16903
  br i1 %1, label %8, label %2, !dbg !16904

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #25, !dbg !16905
  br i1 %3, label %8, label %4, !dbg !16906

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16907
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #24, !dbg !16908
  %7 = xor i1 %6, true, !dbg !16906
  br label %8, !dbg !16906

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !16909
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #8 !dbg !16910 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !16911, !range !6678
  %2 = icmp eq i8 %1, 0, !dbg !16911
  ret i1 %2, !dbg !16912
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !16913 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16916, !srcloc !15866
  call void @llvm.dbg.value(metadata i32 %1, metadata !15862, metadata !DIExpression()) #23, !dbg !16921
  %2 = icmp eq i32 %1, 0, !dbg !16922
  br i1 %2, label %4, label %3, !dbg !16923

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.311, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 1392) #25, !dbg !16924
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.296, i32 0, i32 0)) #25, !dbg !16924
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 1392) #25, !dbg !16924
  unreachable, !dbg !16924

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15132, metadata !DIExpression()) #23, !dbg !16926
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16928, !srcloc !15147
  call void @llvm.dbg.value(metadata i32 undef, metadata !15144, metadata !DIExpression()) #23, !dbg !16930
  call void @llvm.dbg.value(metadata i32 undef, metadata !15145, metadata !DIExpression()) #23, !dbg !16930
  call void @llvm.dbg.value(metadata i32 undef, metadata !15138, metadata !DIExpression()) #23, !dbg !16926
  %6 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16931
  br i1 %6, label %8, label %7, !dbg !16932

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !16933
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16933
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !16933
  unreachable, !dbg !16933

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !15144, metadata !DIExpression()) #23, !dbg !16930
  call void @llvm.dbg.value(metadata i32 undef, metadata !15138, metadata !DIExpression()) #23, !dbg !16926
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16934
  call void @llvm.dbg.value(metadata i32 undef, metadata !16915, metadata !DIExpression()), !dbg !16935
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16936
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !15324, metadata !DIExpression()) #23, !dbg !16939
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 3, !dbg !16941
  %11 = load i8, i8* %10, align 1, !dbg !16942
  %12 = and i8 %11, 127, !dbg !16942
  store i8 %12, i8* %10, align 1, !dbg !16942
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !15332, metadata !DIExpression()) #23, !dbg !16943
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %9) #25, !dbg !16945
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16946
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !15341, metadata !DIExpression()) #23, !dbg !16947
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 3, !dbg !16949
  %15 = load i8, i8* %14, align 1, !dbg !16950
  %16 = or i8 %15, -128, !dbg !16950
  store i8 %16, i8* %14, align 1, !dbg !16950
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !15348, metadata !DIExpression()) #23, !dbg !16951
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15355, metadata !DIExpression()) #23, !dbg !16953
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !15361, metadata !DIExpression()) #23, !dbg !16953
  %17 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %13) #25, !dbg !16955
  br i1 %17, label %18, label %19, !dbg !16956

18:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.293, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 186) #25, !dbg !16957
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 186) #25, !dbg !16957
  unreachable, !dbg !16957

19:                                               ; preds = %8
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !16958
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !15362, metadata !DIExpression()) #23, !dbg !16953
  %21 = icmp eq %struct._dnode* %20, null, !dbg !16959
  br i1 %21, label %32, label %22, !dbg !16958

22:                                               ; preds = %19, %29
  %23 = phi %struct._dnode* [ %30, %29 ], [ %20, %19 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %23, metadata !15362, metadata !DIExpression()) #23, !dbg !16953
  %24 = bitcast %struct._dnode* %23 to %struct.k_thread*, !dbg !16960
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !15362, metadata !DIExpression()) #23, !dbg !16953
  %25 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %13, %struct.k_thread* noundef nonnull %24) #25, !dbg !16961
  %26 = icmp sgt i32 %25, 0, !dbg !16962
  br i1 %26, label %27, label %29, !dbg !16963

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !16964
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %23, %struct._dnode* noundef %28) #25, !dbg !16965
  br label %34, !dbg !16966

29:                                               ; preds = %22
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %23) #25, !dbg !16959
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !15362, metadata !DIExpression()) #23, !dbg !16953
  %31 = icmp eq %struct._dnode* %30, null, !dbg !16959
  br i1 %31, label %32, label %22, !dbg !16958, !llvm.loop !16967

32:                                               ; preds = %29, %19
  %33 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !16969
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %33) #25, !dbg !16970
  br label %34, !dbg !16971

34:                                               ; preds = %27, %32
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !16972
  call void @llvm.dbg.value(metadata i32 undef, metadata !15810, metadata !DIExpression()) #23, !dbg !16973
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15815, metadata !DIExpression()) #23, !dbg !16973
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15819, metadata !DIExpression()) #23, !dbg !16975
  %35 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16977
  br i1 %35, label %37, label %36, !dbg !16978

36:                                               ; preds = %34
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 225) #25, !dbg !16979
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.292, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16979
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 225) #25, !dbg !16979
  unreachable, !dbg !16979

37:                                               ; preds = %34
  %38 = extractvalue { i32, i32 } %5, 0, !dbg !16928
  call void @llvm.dbg.value(metadata i32 %38, metadata !15144, metadata !DIExpression()) #23, !dbg !16930
  call void @llvm.dbg.value(metadata i32 %38, metadata !15138, metadata !DIExpression()) #23, !dbg !16926
  call void @llvm.dbg.value(metadata i32 %38, metadata !16915, metadata !DIExpression()), !dbg !16935
  call void @llvm.dbg.value(metadata i32 undef, metadata !15810, metadata !DIExpression()) #23, !dbg !16973
  %39 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %38) #25, !dbg !16980
  ret void, !dbg !16981
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !16982 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !16986, metadata !DIExpression()), !dbg !16989
  %3 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16990, !srcloc !15866
  call void @llvm.dbg.value(metadata i32 %3, metadata !15862, metadata !DIExpression()) #23, !dbg !16995
  %4 = icmp eq i32 %3, 0, !dbg !16996
  br i1 %4, label %6, label %5, !dbg !16997

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.311, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 1463) #25, !dbg !16998
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.296, i32 0, i32 0)) #25, !dbg !16998
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 1463) #25, !dbg !16998
  unreachable, !dbg !16998

6:                                                ; preds = %1
  %7 = icmp eq i64 %2, -1, !dbg !17000
  br i1 %7, label %8, label %10, !dbg !17002

8:                                                ; preds = %6
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17003
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %9) #24, !dbg !17005
  br label %15, !dbg !17006

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i64 %2, metadata !16987, metadata !DIExpression()), !dbg !16989
  %11 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #24, !dbg !17007
  %12 = sext i32 %11 to i64, !dbg !17007
  call void @llvm.dbg.value(metadata i64 %12, metadata !16987, metadata !DIExpression()), !dbg !16989
  %13 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %12) #24, !dbg !17008
  %14 = trunc i64 %13 to i32, !dbg !17008
  call void @llvm.dbg.value(metadata i32 %14, metadata !16988, metadata !DIExpression()), !dbg !16989
  br label %15

15:                                               ; preds = %10, %8
  %16 = phi i32 [ -1, %8 ], [ %14, %10 ], !dbg !16989
  ret i32 %16, !dbg !17009
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !17010 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17014, metadata !DIExpression()), !dbg !17015
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !17016, !srcloc !17018
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #24, !dbg !17019
  ret void, !dbg !17020
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !17021 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17025, metadata !DIExpression()), !dbg !17029
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !17030, !srcloc !15866
  call void @llvm.dbg.value(metadata i32 %2, metadata !15862, metadata !DIExpression()) #23, !dbg !17035
  %3 = icmp eq i32 %2, 0, !dbg !17036
  br i1 %3, label %5, label %4, !dbg !17037

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.311, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 1420) #25, !dbg !17038
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.296, i32 0, i32 0)) #25, !dbg !17038
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 1420) #25, !dbg !17038
  unreachable, !dbg !17038

5:                                                ; preds = %1
  %6 = icmp eq i64 %0, 0, !dbg !17040
  br i1 %6, label %7, label %8, !dbg !17042

7:                                                ; preds = %5
  tail call fastcc void @k_yield() #24, !dbg !17043
  br label %43, !dbg !17045

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i64 %0, metadata !17027, metadata !DIExpression()), !dbg !17029
  %9 = icmp sgt i64 %0, -3, !dbg !17046
  br i1 %9, label %10, label %14, !dbg !17048

10:                                               ; preds = %8
  %11 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !17049
  %12 = trunc i64 %0 to i32, !dbg !17051
  %13 = add i32 %11, %12, !dbg !17051
  call void @llvm.dbg.value(metadata i32 %13, metadata !17026, metadata !DIExpression()), !dbg !17029
  br label %17, !dbg !17052

14:                                               ; preds = %8
  %15 = trunc i64 %0 to i32, !dbg !17053
  %16 = sub i32 -2, %15, !dbg !17053
  call void @llvm.dbg.value(metadata i32 %16, metadata !17026, metadata !DIExpression()), !dbg !17029
  br label %17

17:                                               ; preds = %14, %10
  %18 = phi i32 [ %13, %10 ], [ %16, %14 ], !dbg !17055
  call void @llvm.dbg.value(metadata i32 %18, metadata !17026, metadata !DIExpression()), !dbg !17029
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15132, metadata !DIExpression()) #23, !dbg !17056
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17058, !srcloc !15147
  call void @llvm.dbg.value(metadata i32 undef, metadata !15144, metadata !DIExpression()) #23, !dbg !17060
  call void @llvm.dbg.value(metadata i32 undef, metadata !15145, metadata !DIExpression()) #23, !dbg !17060
  call void @llvm.dbg.value(metadata i32 undef, metadata !15138, metadata !DIExpression()) #23, !dbg !17056
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !17061
  br i1 %20, label %22, label %21, !dbg !17062

21:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !17063
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !17063
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !17063
  unreachable, !dbg !17063

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 undef, metadata !15144, metadata !DIExpression()) #23, !dbg !17060
  call void @llvm.dbg.value(metadata i32 undef, metadata !15138, metadata !DIExpression()) #23, !dbg !17056
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !17064
  call void @llvm.dbg.value(metadata i32 undef, metadata !17028, metadata !DIExpression()), !dbg !17029
  %23 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17065
  store %struct.k_thread* %23, %struct.k_thread** @pending_current, align 4, !dbg !17066
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %23) #24, !dbg !17067
  %24 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17068
  %25 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !17069
  tail call fastcc void @z_add_thread_timeout.304(%struct.k_thread* noundef %24, [1 x i64] %25) #24, !dbg !17069
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17070
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %26) #24, !dbg !17071
  call void @llvm.dbg.value(metadata i32 undef, metadata !15810, metadata !DIExpression()) #23, !dbg !17072
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15815, metadata !DIExpression()) #23, !dbg !17072
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15819, metadata !DIExpression()) #23, !dbg !17074
  %27 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !17076
  br i1 %27, label %29, label %28, !dbg !17077

28:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 225) #25, !dbg !17078
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.292, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !17078
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 225) #25, !dbg !17078
  unreachable, !dbg !17078

29:                                               ; preds = %22
  %30 = extractvalue { i32, i32 } %19, 0, !dbg !17058
  call void @llvm.dbg.value(metadata i32 %30, metadata !15144, metadata !DIExpression()) #23, !dbg !17060
  call void @llvm.dbg.value(metadata i32 %30, metadata !15138, metadata !DIExpression()) #23, !dbg !17056
  call void @llvm.dbg.value(metadata i32 %30, metadata !17028, metadata !DIExpression()), !dbg !17029
  call void @llvm.dbg.value(metadata i32 undef, metadata !15810, metadata !DIExpression()) #23, !dbg !17072
  %31 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %30) #25, !dbg !17079
  %32 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17080
  %33 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %32, i32 noundef 16) #24, !dbg !17080
  br i1 %33, label %34, label %35, !dbg !17083

34:                                               ; preds = %29
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.23.322, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 1448) #25, !dbg !17084
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.296, i32 0, i32 0)) #25, !dbg !17084
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 1448) #25, !dbg !17084
  unreachable, !dbg !17084

35:                                               ; preds = %29
  %36 = zext i32 %18 to i64, !dbg !17086
  %37 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !17087
  %38 = zext i32 %37 to i64, !dbg !17087
  %39 = sub nsw i64 %36, %38, !dbg !17088
  call void @llvm.dbg.value(metadata i64 %39, metadata !17025, metadata !DIExpression()), !dbg !17029
  %40 = icmp sgt i64 %39, 0, !dbg !17089
  %41 = select i1 %40, i64 %39, i64 0, !dbg !17089
  %42 = trunc i64 %41 to i32, !dbg !17089
  br label %43

43:                                               ; preds = %35, %7
  %44 = phi i32 [ 0, %7 ], [ %42, %35 ], !dbg !17029
  ret i32 %44, !dbg !17090
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #2 !dbg !17091 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17093, metadata !DIExpression()), !dbg !17094
  call void @llvm.dbg.value(metadata i64 %0, metadata !15192, metadata !DIExpression()), !dbg !17095
  call void @llvm.dbg.value(metadata i32 10000, metadata !15195, metadata !DIExpression()), !dbg !17095
  call void @llvm.dbg.value(metadata i32 1000, metadata !15196, metadata !DIExpression()), !dbg !17095
  call void @llvm.dbg.value(metadata i8 1, metadata !15197, metadata !DIExpression()), !dbg !17095
  call void @llvm.dbg.value(metadata i1 false, metadata !15198, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17095
  call void @llvm.dbg.value(metadata i1 false, metadata !15199, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17095
  call void @llvm.dbg.value(metadata i8 0, metadata !15200, metadata !DIExpression()), !dbg !17095
  call void @llvm.dbg.value(metadata i1 false, metadata !15201, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17095
  call void @llvm.dbg.value(metadata i1 true, metadata !15202, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17095
  call void @llvm.dbg.value(metadata i64 0, metadata !15203, metadata !DIExpression()), !dbg !17095
  call void @llvm.dbg.value(metadata i64 0, metadata !15203, metadata !DIExpression()), !dbg !17095
  call void @llvm.dbg.value(metadata i64 %0, metadata !15192, metadata !DIExpression()), !dbg !17095
  %2 = udiv i64 %0, 10, !dbg !17097
  ret i64 %2, !dbg !17101
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !17102 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !17103, !srcloc !17105
  tail call void @z_impl_k_yield() #24, !dbg !17106
  ret void, !dbg !17107
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !17108 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17112, metadata !DIExpression()), !dbg !17114
  %2 = sext i32 %0 to i64, !dbg !17115
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #24, !dbg !17116
  call void @llvm.dbg.value(metadata i64 %3, metadata !17113, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17114
  %4 = shl i64 %3, 32, !dbg !17117
  %5 = ashr exact i64 %4, 32, !dbg !17117
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #24, !dbg !17118
  call void @llvm.dbg.value(metadata i32 %6, metadata !17113, metadata !DIExpression()), !dbg !17114
  %7 = sext i32 %6 to i64, !dbg !17119
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #24, !dbg !17120
  %9 = trunc i64 %8 to i32, !dbg !17120
  ret i32 %9, !dbg !17121
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #2 !dbg !17122 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17124, metadata !DIExpression()), !dbg !17125
  call void @llvm.dbg.value(metadata i64 %0, metadata !15192, metadata !DIExpression()), !dbg !17126
  call void @llvm.dbg.value(metadata i32 1000000, metadata !15195, metadata !DIExpression()), !dbg !17126
  call void @llvm.dbg.value(metadata i32 10000, metadata !15196, metadata !DIExpression()), !dbg !17126
  call void @llvm.dbg.value(metadata i8 1, metadata !15197, metadata !DIExpression()), !dbg !17126
  call void @llvm.dbg.value(metadata i1 false, metadata !15198, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17126
  call void @llvm.dbg.value(metadata i1 true, metadata !15199, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17126
  call void @llvm.dbg.value(metadata i8 0, metadata !15200, metadata !DIExpression()), !dbg !17126
  call void @llvm.dbg.value(metadata i1 false, metadata !15201, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17126
  call void @llvm.dbg.value(metadata i1 true, metadata !15202, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17126
  call void @llvm.dbg.value(metadata i64 0, metadata !15203, metadata !DIExpression()), !dbg !17126
  call void @llvm.dbg.value(metadata i64 0, metadata !15203, metadata !DIExpression()), !dbg !17126
  %2 = add i64 %0, 99, !dbg !17128
  call void @llvm.dbg.value(metadata i64 %2, metadata !15192, metadata !DIExpression()), !dbg !17126
  %3 = udiv i64 %2, 100, !dbg !17129
  ret i64 %3, !dbg !17130
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #2 !dbg !17131 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17133, metadata !DIExpression()), !dbg !17134
  call void @llvm.dbg.value(metadata i64 %0, metadata !15192, metadata !DIExpression()), !dbg !17135
  call void @llvm.dbg.value(metadata i32 10000, metadata !15195, metadata !DIExpression()), !dbg !17135
  call void @llvm.dbg.value(metadata i32 1000000, metadata !15196, metadata !DIExpression()), !dbg !17135
  call void @llvm.dbg.value(metadata i8 1, metadata !15197, metadata !DIExpression()), !dbg !17135
  call void @llvm.dbg.value(metadata i1 false, metadata !15198, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17135
  call void @llvm.dbg.value(metadata i1 false, metadata !15199, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17135
  call void @llvm.dbg.value(metadata i8 0, metadata !15200, metadata !DIExpression()), !dbg !17135
  call void @llvm.dbg.value(metadata i1 true, metadata !15201, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17135
  call void @llvm.dbg.value(metadata i1 false, metadata !15202, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17135
  call void @llvm.dbg.value(metadata i64 0, metadata !15203, metadata !DIExpression()), !dbg !17135
  call void @llvm.dbg.value(metadata i64 0, metadata !15203, metadata !DIExpression()), !dbg !17135
  %2 = mul i64 %0, 100, !dbg !17137
  ret i64 %2, !dbg !17139
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17140 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17142, metadata !DIExpression()), !dbg !17143
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #24, !dbg !17144
  br i1 %2, label %14, label %3, !dbg !17146

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !17147
  %5 = icmp slt i32 %4, 0, !dbg !17149
  br i1 %5, label %6, label %10, !dbg !17150

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17151
  %8 = load i8, i8* %7, align 1, !dbg !17151
  %9 = icmp eq i8 %8, 16, !dbg !17154
  br i1 %9, label %10, label %14, !dbg !17155

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !17156
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #24, !dbg !17157
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !17158, !srcloc !15866
  call void @llvm.dbg.value(metadata i32 %11, metadata !15862, metadata !DIExpression()) #23, !dbg !17162
  %12 = icmp eq i32 %11, 0, !dbg !17163
  br i1 %12, label %13, label %14, !dbg !17164

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !17165
  br label %14, !dbg !17167

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !17168
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !17169 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17171, metadata !DIExpression()), !dbg !17172
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17173
  %3 = load i8, i8* %2, align 1, !dbg !17173
  %4 = and i8 %3, 2, !dbg !17174
  %5 = icmp ne i8 %4, 0, !dbg !17175
  ret i1 %5, !dbg !17176
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #8 !dbg !17177 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17182
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !17181, metadata !DIExpression()), !dbg !17183
  ret %struct.k_thread* %1, !dbg !17184
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !17185 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !17186, !srcloc !15866
  call void @llvm.dbg.value(metadata i32 %1, metadata !15862, metadata !DIExpression()) #23, !dbg !17189
  %2 = icmp eq i32 %1, 0, !dbg !17190
  br i1 %2, label %3, label %8, !dbg !17191

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17192
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #24, !dbg !17193
  %6 = icmp ne i32 %5, 0, !dbg !17191
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !17194
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17195 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17197, metadata !DIExpression()), !dbg !17199
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15132, metadata !DIExpression()) #23, !dbg !17200
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17202, !srcloc !15147
  call void @llvm.dbg.value(metadata i32 undef, metadata !15144, metadata !DIExpression()) #23, !dbg !17204
  call void @llvm.dbg.value(metadata i32 undef, metadata !15145, metadata !DIExpression()) #23, !dbg !17204
  call void @llvm.dbg.value(metadata i32 undef, metadata !15138, metadata !DIExpression()) #23, !dbg !17200
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !17205
  br i1 %3, label %5, label %4, !dbg !17206

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !17207
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !17207
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !17207
  unreachable, !dbg !17207

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !17202
  call void @llvm.dbg.value(metadata i32 %6, metadata !15144, metadata !DIExpression()) #23, !dbg !17204
  call void @llvm.dbg.value(metadata i32 %6, metadata !15138, metadata !DIExpression()) #23, !dbg !17200
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !17208
  call void @llvm.dbg.value(metadata i32 %6, metadata !17198, metadata !DIExpression()), !dbg !17199
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !17209
  %8 = load i8, i8* %7, align 4, !dbg !17209
  %9 = and i8 %8, 1, !dbg !17211
  %10 = icmp eq i8 %9, 0, !dbg !17212
  br i1 %10, label %15, label %11, !dbg !17213

11:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !15166, metadata !DIExpression()) #23, !dbg !17214
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15171, metadata !DIExpression()) #23, !dbg !17214
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !17217
  br i1 %12, label %14, label %13, !dbg !17218

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !17219
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.292, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !17219
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !17219
  unreachable, !dbg !17219

14:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %6, metadata !15166, metadata !DIExpression()) #23, !dbg !17214
  call void @llvm.dbg.value(metadata i32 %6, metadata !15180, metadata !DIExpression()) #23, !dbg !17220
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !17222, !srcloc !15186
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.327, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 1731) #25, !dbg !17223
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.11.328, i32 0, i32 0), %struct.k_thread* noundef nonnull %0) #25, !dbg !17223
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 1731) #25, !dbg !17223
  unreachable, !dbg !17223

15:                                               ; preds = %5
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17227
  %17 = load i8, i8* %16, align 1, !dbg !17227
  %18 = and i8 %17, 8, !dbg !17229
  %19 = icmp eq i8 %18, 0, !dbg !17230
  br i1 %19, label %24, label %20, !dbg !17231

20:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 undef, metadata !15166, metadata !DIExpression()) #23, !dbg !17232
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15171, metadata !DIExpression()) #23, !dbg !17232
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !17235
  br i1 %21, label %23, label %22, !dbg !17236

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !17237
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.292, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !17237
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !17237
  unreachable, !dbg !17237

23:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i32 %6, metadata !15166, metadata !DIExpression()) #23, !dbg !17232
  call void @llvm.dbg.value(metadata i32 %6, metadata !15180, metadata !DIExpression()) #23, !dbg !17238
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !17240, !srcloc !15186
  br label %39, !dbg !17241

24:                                               ; preds = %15
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #24, !dbg !17242
  %25 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17243
  %26 = icmp eq %struct.k_thread* %25, %0, !dbg !17245
  br i1 %26, label %27, label %35, !dbg !17246

27:                                               ; preds = %24
  %28 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !17247, !srcloc !15866
  call void @llvm.dbg.value(metadata i32 %28, metadata !15862, metadata !DIExpression()) #23, !dbg !17250
  %29 = icmp eq i32 %28, 0, !dbg !17251
  br i1 %29, label %30, label %35, !dbg !17252

30:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 undef, metadata !15810, metadata !DIExpression()) #23, !dbg !17253
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15815, metadata !DIExpression()) #23, !dbg !17253
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15819, metadata !DIExpression()) #23, !dbg !17256
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !17258
  br i1 %31, label %33, label %32, !dbg !17259

32:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 225) #25, !dbg !17260
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.292, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !17260
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 225) #25, !dbg !17260
  unreachable, !dbg !17260

33:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %6, metadata !15810, metadata !DIExpression()) #23, !dbg !17253
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %6) #25, !dbg !17261
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.327, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 1778) #25, !dbg !17262
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12.329, i32 0, i32 0)) #25, !dbg !17262
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 1778) #25, !dbg !17262
  unreachable, !dbg !17262

35:                                               ; preds = %27, %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !15166, metadata !DIExpression()) #23, !dbg !17266
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15171, metadata !DIExpression()) #23, !dbg !17266
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !17268
  br i1 %36, label %38, label %37, !dbg !17269

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !17270
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.292, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !17270
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !17270
  unreachable, !dbg !17270

38:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %6, metadata !15166, metadata !DIExpression()) #23, !dbg !17266
  call void @llvm.dbg.value(metadata i32 %6, metadata !15180, metadata !DIExpression()) #23, !dbg !17271
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !17273, !srcloc !15186
  br label %39, !dbg !17274

39:                                               ; preds = %38, %23
  ret void, !dbg !17274
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !17275 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17277, metadata !DIExpression()), !dbg !17278
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17279
  %3 = load i8, i8* %2, align 1, !dbg !17279
  %4 = and i8 %3, 8, !dbg !17281
  %5 = icmp eq i8 %4, 0, !dbg !17282
  br i1 %5, label %6, label %20, !dbg !17283

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !17284
  %8 = or i8 %7, 8, !dbg !17284
  store i8 %8, i8* %2, align 1, !dbg !17284
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #24, !dbg !17286
  br i1 %9, label %10, label %12, !dbg !17288

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15324, metadata !DIExpression()) #23, !dbg !17289
  %11 = and i8 %8, 95, !dbg !17292
  store i8 %11, i8* %2, align 1, !dbg !17292
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15332, metadata !DIExpression()) #23, !dbg !17293
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #25, !dbg !17295
  br label %12, !dbg !17296

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !17297
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !17297
  %15 = icmp eq %union.anon* %14, null, !dbg !17299
  br i1 %15, label %17, label %16, !dbg !17300

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !17301
  br label %17, !dbg !17303

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !17304
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !17305
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #24, !dbg !17306
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !17307
  br label %20, !dbg !17308

20:                                               ; preds = %17, %1
  ret void, !dbg !17309
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !17310 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !17314, metadata !DIExpression()), !dbg !17316
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !17317
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !17315, metadata !DIExpression()), !dbg !17316
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !17318
  br i1 %3, label %10, label %4, !dbg !17319

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !17320
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !17322
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !17323, metadata !DIExpression()), !dbg !17329
  call void @llvm.dbg.value(metadata i32 0, metadata !17328, metadata !DIExpression()), !dbg !17329
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 8, i32 1, !dbg !17331
  store i32 0, i32* %7, align 4, !dbg !17332
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !17333
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !17317
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !17315, metadata !DIExpression()), !dbg !17316
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !17318
  br i1 %9, label %10, label %4, !dbg !17319, !llvm.loop !17334

10:                                               ; preds = %4, %1
  ret void, !dbg !17336
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !17337 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !17342, metadata !DIExpression()), !dbg !17345
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17341, metadata !DIExpression()), !dbg !17345
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15132, metadata !DIExpression()) #23, !dbg !17346
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17348, !srcloc !15147
  call void @llvm.dbg.value(metadata i32 undef, metadata !15144, metadata !DIExpression()) #23, !dbg !17350
  call void @llvm.dbg.value(metadata i32 undef, metadata !15145, metadata !DIExpression()) #23, !dbg !17350
  call void @llvm.dbg.value(metadata i32 undef, metadata !15138, metadata !DIExpression()) #23, !dbg !17346
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !17351
  br i1 %4, label %6, label %5, !dbg !17352

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !17353
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !17353
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !17353
  unreachable, !dbg !17353

6:                                                ; preds = %2
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !17348
  call void @llvm.dbg.value(metadata i32 %7, metadata !15144, metadata !DIExpression()) #23, !dbg !17350
  call void @llvm.dbg.value(metadata i32 %7, metadata !15138, metadata !DIExpression()) #23, !dbg !17346
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !17354
  call void @llvm.dbg.value(metadata i32 %7, metadata !17343, metadata !DIExpression()), !dbg !17345
  call void @llvm.dbg.value(metadata i32 0, metadata !17344, metadata !DIExpression()), !dbg !17345
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17355
  %9 = load i8, i8* %8, align 1, !dbg !17355
  %10 = and i8 %9, 8, !dbg !17357
  %11 = icmp eq i8 %10, 0, !dbg !17358
  br i1 %11, label %12, label %35, !dbg !17359

12:                                               ; preds = %6
  %13 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %13, metadata !17342, metadata !DIExpression()), !dbg !17345
  %14 = icmp eq i64 %13, 0, !dbg !17360
  br i1 %14, label %35, label %15, !dbg !17362

15:                                               ; preds = %12
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17363
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !17365
  br i1 %17, label %35, label %18, !dbg !17366

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !17367
  %20 = load %union.anon*, %union.anon** %19, align 8, !dbg !17367
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %16, i32 0, i32 3, !dbg !17368
  %22 = icmp eq %union.anon* %20, %21, !dbg !17369
  br i1 %22, label %35, label %23, !dbg !17370

23:                                               ; preds = %18
  %24 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !17371, !srcloc !15866
  call void @llvm.dbg.value(metadata i32 %24, metadata !15862, metadata !DIExpression()) #23, !dbg !17377
  %25 = icmp eq i32 %24, 0, !dbg !17378
  br i1 %25, label %27, label %26, !dbg !17379

26:                                               ; preds = %23
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.311, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 1809) #25, !dbg !17380
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13.332, i32 0, i32 0)) #25, !dbg !17380
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 1809) #25, !dbg !17380
  unreachable, !dbg !17380

27:                                               ; preds = %23
  %28 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17382
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !17383
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %28, %union.anon* noundef nonnull %29) #24, !dbg !17384
  %30 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17385
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %30, [1 x i64] %1) #24, !dbg !17386
  call void @llvm.dbg.value(metadata i32 undef, metadata !15810, metadata !DIExpression()) #23, !dbg !17387
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15815, metadata !DIExpression()) #23, !dbg !17387
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15819, metadata !DIExpression()) #23, !dbg !17389
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !17391
  br i1 %31, label %33, label %32, !dbg !17392

32:                                               ; preds = %27
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 225) #25, !dbg !17393
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.292, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !17393
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 225) #25, !dbg !17393
  unreachable, !dbg !17393

33:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %7, metadata !15810, metadata !DIExpression()) #23, !dbg !17387
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %7) #25, !dbg !17394
  call void @llvm.dbg.value(metadata i32 %34, metadata !17344, metadata !DIExpression()), !dbg !17345
  br label %40, !dbg !17395

35:                                               ; preds = %15, %18, %12, %6
  %36 = phi i32 [ 0, %6 ], [ -16, %12 ], [ -45, %18 ], [ -45, %15 ], !dbg !17396
  call void @llvm.dbg.value(metadata i32 %36, metadata !17344, metadata !DIExpression()), !dbg !17345
  call void @llvm.dbg.value(metadata i32 undef, metadata !15166, metadata !DIExpression()) #23, !dbg !17397
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15171, metadata !DIExpression()) #23, !dbg !17397
  %37 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !17399
  br i1 %37, label %39, label %38, !dbg !17400

38:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !17401
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.292, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !17401
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !17401
  unreachable, !dbg !17401

39:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %7, metadata !15166, metadata !DIExpression()) #23, !dbg !17397
  call void @llvm.dbg.value(metadata i32 %7, metadata !15180, metadata !DIExpression()) #23, !dbg !17402
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !17404, !srcloc !15186
  br label %40, !dbg !17405

40:                                               ; preds = %39, %33
  %41 = phi i32 [ %36, %39 ], [ %34, %33 ], !dbg !17345
  ret i32 %41, !dbg !17406
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !17407 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !17411, metadata !DIExpression()), !dbg !17419
  call void @llvm.dbg.value(metadata i32 %1, metadata !17412, metadata !DIExpression()), !dbg !17419
  call void @llvm.dbg.value(metadata i8* %2, metadata !17413, metadata !DIExpression()), !dbg !17419
  call void @llvm.dbg.value(metadata i8 0, metadata !17415, metadata !DIExpression()), !dbg !17419
  call void @llvm.dbg.value(metadata i32 0, metadata !17416, metadata !DIExpression()), !dbg !17420
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15132, metadata !DIExpression()) #23, !dbg !17421
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17423, !srcloc !15147
  call void @llvm.dbg.value(metadata i32 undef, metadata !15144, metadata !DIExpression()) #23, !dbg !17425
  call void @llvm.dbg.value(metadata i32 undef, metadata !15145, metadata !DIExpression()) #23, !dbg !17425
  call void @llvm.dbg.value(metadata i32 undef, metadata !15138, metadata !DIExpression()) #23, !dbg !17421
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !17426
  br i1 %5, label %7, label %6, !dbg !17427

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !17428
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !17428
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !17428
  unreachable, !dbg !17428

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !15144, metadata !DIExpression()) #23, !dbg !17425
  call void @llvm.dbg.value(metadata i32 undef, metadata !15138, metadata !DIExpression()) #23, !dbg !17421
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !17429
  call void @llvm.dbg.value(metadata i32 undef, metadata !17418, metadata !DIExpression()), !dbg !17420
  call void @llvm.dbg.value(metadata i8 poison, metadata !17415, metadata !DIExpression()), !dbg !17419
  call void @llvm.dbg.value(metadata i32 undef, metadata !17416, metadata !DIExpression()), !dbg !17420
  %8 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %9 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %8) #24, !dbg !17430
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !17414, metadata !DIExpression()), !dbg !17419
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !17433
  br i1 %10, label %15, label %11, !dbg !17435

11:                                               ; preds = %7
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !17436, metadata !DIExpression()), !dbg !17444
  call void @llvm.dbg.value(metadata i32 %1, metadata !17442, metadata !DIExpression()), !dbg !17444
  call void @llvm.dbg.value(metadata i8* %2, metadata !17443, metadata !DIExpression()), !dbg !17444
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !17323, metadata !DIExpression()), !dbg !17447
  call void @llvm.dbg.value(metadata i32 %1, metadata !17328, metadata !DIExpression()), !dbg !17447
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 8, i32 1, !dbg !17449
  store i32 %1, i32* %12, align 4, !dbg !17450
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !17451
  store i8* %2, i8** %13, align 4, !dbg !17452
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %9) #24, !dbg !17453
  %14 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %9) #24, !dbg !17454
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %9) #24, !dbg !17455
  call void @llvm.dbg.value(metadata i8 1, metadata !17415, metadata !DIExpression()), !dbg !17419
  br label %15, !dbg !17456

15:                                               ; preds = %7, %11
  call void @llvm.dbg.value(metadata i8 poison, metadata !17415, metadata !DIExpression()), !dbg !17419
  call void @llvm.dbg.value(metadata i32 undef, metadata !15166, metadata !DIExpression()) #23, !dbg !17457
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15171, metadata !DIExpression()) #23, !dbg !17457
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !17459
  br i1 %16, label %18, label %17, !dbg !17460

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !17461
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.292, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !17461
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !17461
  unreachable, !dbg !17461

18:                                               ; preds = %15
  %19 = xor i1 %10, true, !dbg !17419
  %20 = extractvalue { i32, i32 } %4, 0, !dbg !17423
  call void @llvm.dbg.value(metadata i32 %20, metadata !15144, metadata !DIExpression()) #23, !dbg !17425
  call void @llvm.dbg.value(metadata i32 %20, metadata !15138, metadata !DIExpression()) #23, !dbg !17421
  call void @llvm.dbg.value(metadata i32 %20, metadata !17418, metadata !DIExpression()), !dbg !17420
  call void @llvm.dbg.value(metadata i32 undef, metadata !15166, metadata !DIExpression()) #23, !dbg !17457
  call void @llvm.dbg.value(metadata i32 undef, metadata !15180, metadata !DIExpression()) #23, !dbg !17462
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !17464, !srcloc !15186
  call void @llvm.dbg.value(metadata i8 poison, metadata !17415, metadata !DIExpression()), !dbg !17419
  call void @llvm.dbg.value(metadata i32 undef, metadata !17416, metadata !DIExpression()), !dbg !17420
  ret i1 %19, !dbg !17465
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !17466 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !17472, metadata !DIExpression()), !dbg !17477
  call void @llvm.dbg.value(metadata i64 undef, metadata !17474, metadata !DIExpression()), !dbg !17477
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !17471, metadata !DIExpression()), !dbg !17477
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !17473, metadata !DIExpression()), !dbg !17477
  call void @llvm.dbg.value(metadata i8** %4, metadata !17475, metadata !DIExpression()), !dbg !17477
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #24, !dbg !17478
  call void @llvm.dbg.value(metadata i32 %6, metadata !17476, metadata !DIExpression()), !dbg !17477
  %7 = icmp eq i8** %4, null, !dbg !17479
  br i1 %7, label %12, label %8, !dbg !17481

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17482
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !17484
  %11 = load i8*, i8** %10, align 4, !dbg !17484
  store i8* %11, i8** %4, align 4, !dbg !17485
  br label %12, !dbg !17486

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !17487
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !17488 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #25, !dbg !17490
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #25, !dbg !17491
  ret void, !dbg !17492
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !17493 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !17503, metadata !DIExpression()), !dbg !17520
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17501, metadata !DIExpression()), !dbg !17520
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !17502, metadata !DIExpression()), !dbg !17520
  %5 = icmp eq i64 %4, -1, !dbg !17521
  br i1 %5, label %63, label %6, !dbg !17523

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17524
  %8 = tail call fastcc zeroext i1 @sys_dnode_is_linked.337(%struct._dnode* noundef %7) #24, !dbg !17524
  br i1 %8, label %9, label %10, !dbg !17527

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1.339, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.340, i32 0, i32 0), i32 noundef 99) #25, !dbg !17528
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.341, i32 0, i32 0)) #25, !dbg !17528
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.340, i32 0, i32 0), i32 noundef 99) #25, !dbg !17528
  unreachable, !dbg !17528

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !17530
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %11, align 8, !dbg !17531
  call void @llvm.dbg.value(metadata i32 0, metadata !17504, metadata !DIExpression()), !dbg !17532
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17533, metadata !DIExpression()) #23, !dbg !17540
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17542, !srcloc !17548
  call void @llvm.dbg.value(metadata i32 undef, metadata !17545, metadata !DIExpression()) #23, !dbg !17549
  call void @llvm.dbg.value(metadata i32 undef, metadata !17546, metadata !DIExpression()) #23, !dbg !17549
  call void @llvm.dbg.value(metadata i32 undef, metadata !17539, metadata !DIExpression()) #23, !dbg !17540
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17550
  br i1 %13, label %15, label %14, !dbg !17553

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 148) #25, !dbg !17554
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.344, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17554
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 148) #25, !dbg !17554
  unreachable, !dbg !17554

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !17542
  call void @llvm.dbg.value(metadata i32 %16, metadata !17545, metadata !DIExpression()) #23, !dbg !17549
  call void @llvm.dbg.value(metadata i32 %16, metadata !17539, metadata !DIExpression()) #23, !dbg !17540
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17556
  call void @llvm.dbg.value(metadata i32 %16, metadata !17510, metadata !DIExpression()), !dbg !17532
  call void @llvm.dbg.value(metadata i32 undef, metadata !17504, metadata !DIExpression()), !dbg !17532
  %17 = icmp slt i64 %4, -1, !dbg !17557
  br i1 %17, label %18, label %24, !dbg !17558

18:                                               ; preds = %15
  %19 = load i64, i64* @curr_tick, align 8, !dbg !17559
  %20 = add i64 %4, %19, !dbg !17560
  %21 = sub i64 -2, %20, !dbg !17560
  call void @llvm.dbg.value(metadata i64 %21, metadata !17514, metadata !DIExpression()), !dbg !17561
  %22 = icmp sgt i64 %21, 1, !dbg !17562
  %23 = select i1 %22, i64 %21, i64 1, !dbg !17562
  br label %29, !dbg !17563

24:                                               ; preds = %15
  %25 = add nuw nsw i64 %4, 1, !dbg !17564
  %26 = tail call fastcc i32 @elapsed.345() #24, !dbg !17566
  %27 = sext i32 %26 to i64, !dbg !17566
  %28 = add nsw i64 %25, %27, !dbg !17567
  br label %29

29:                                               ; preds = %24, %18
  %30 = phi i64 [ %23, %18 ], [ %28, %24 ], !dbg !17568
  %31 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !17569
  store i64 %30, i64* %31, align 8, !dbg !17570
  %32 = tail call fastcc %struct._timeout* @first() #24, !dbg !17571
  call void @llvm.dbg.value(metadata %struct._timeout* %32, metadata !17511, metadata !DIExpression()), !dbg !17573
  %33 = icmp eq %struct._timeout* %32, null, !dbg !17574
  br i1 %33, label %48, label %34, !dbg !17574

34:                                               ; preds = %29, %44
  %35 = phi i64 [ %45, %44 ], [ %30, %29 ], !dbg !17575
  %36 = phi %struct._timeout* [ %46, %44 ], [ %32, %29 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %36, metadata !17511, metadata !DIExpression()), !dbg !17573
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !17579
  %38 = load i64, i64* %37, align 8, !dbg !17579
  %39 = icmp slt i64 %35, %38, !dbg !17580
  br i1 %39, label %40, label %44, !dbg !17581

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !17579
  %42 = sub nsw i64 %38, %35, !dbg !17582
  store i64 %42, i64* %41, align 8, !dbg !17582
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 0, !dbg !17584
  tail call fastcc void @sys_dlist_insert.346(%struct._dnode* noundef nonnull %43, %struct._dnode* noundef nonnull %7) #24, !dbg !17585
  br label %49, !dbg !17586

44:                                               ; preds = %34
  %45 = sub nsw i64 %35, %38, !dbg !17587
  store i64 %45, i64* %31, align 8, !dbg !17587
  %46 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %36) #24, !dbg !17588
  call void @llvm.dbg.value(metadata %struct._timeout* %46, metadata !17511, metadata !DIExpression()), !dbg !17573
  %47 = icmp eq %struct._timeout* %46, null, !dbg !17574
  br i1 %47, label %48, label %34, !dbg !17574, !llvm.loop !17589

48:                                               ; preds = %44, %29
  tail call fastcc void @sys_dlist_append.347(%struct._dnode* noundef nonnull %7) #24, !dbg !17591
  br label %49, !dbg !17594

49:                                               ; preds = %40, %48
  %50 = tail call fastcc %struct._timeout* @first() #24, !dbg !17595
  %51 = icmp eq %struct._timeout* %50, %0, !dbg !17596
  br i1 %51, label %52, label %59, !dbg !17597

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @next_timeout() #24, !dbg !17598
  call void @llvm.dbg.value(metadata i32 %53, metadata !17517, metadata !DIExpression()), !dbg !17599
  %54 = icmp ne i32 %53, 0, !dbg !17600
  %55 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %56 = icmp eq i32 %55, %53
  %57 = select i1 %54, i1 %56, i1 false, !dbg !17602
  br i1 %57, label %59, label %58, !dbg !17602

58:                                               ; preds = %52
  tail call void @sys_clock_set_timeout(i32 noundef %53, i1 noundef zeroext false) #25, !dbg !17603
  br label %59, !dbg !17605

59:                                               ; preds = %58, %52, %49
  call void @llvm.dbg.value(metadata i32 undef, metadata !17606, metadata !DIExpression()) #23, !dbg !17612
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17611, metadata !DIExpression()) #23, !dbg !17612
  %60 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17614
  br i1 %60, label %62, label %61, !dbg !17617

61:                                               ; preds = %59
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 194) #25, !dbg !17618
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.349, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17618
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 194) #25, !dbg !17618
  unreachable, !dbg !17618

62:                                               ; preds = %59
  call void @llvm.dbg.value(metadata i32 %16, metadata !17606, metadata !DIExpression()) #23, !dbg !17612
  call void @llvm.dbg.value(metadata i32 %16, metadata !17620, metadata !DIExpression()) #23, !dbg !17623
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !17625, !srcloc !17626
  call void @llvm.dbg.value(metadata i32 undef, metadata !17504, metadata !DIExpression()), !dbg !17532
  br label %63

63:                                               ; preds = %3, %62
  ret void, !dbg !17627
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.337(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !17628 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17634, metadata !DIExpression()), !dbg !17635
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17636
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17636
  %4 = icmp ne %struct._dnode* %3, null, !dbg !17637
  ret i1 %4, !dbg !17638
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.345() unnamed_addr #1 !dbg !17639 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !17642
  %2 = icmp eq i32 %1, 0, !dbg !17643
  br i1 %2, label %3, label %5, !dbg !17642

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #25, !dbg !17644
  br label %5, !dbg !17642

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !17642
  ret i32 %6, !dbg !17645
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #8 !dbg !17646 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.352() #24, !dbg !17652
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !17650, metadata !DIExpression()), !dbg !17653
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !17654
  ret %struct._timeout* %2, !dbg !17655
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.346(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !17656 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17660, metadata !DIExpression()), !dbg !17664
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !17661, metadata !DIExpression()), !dbg !17664
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17665
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !17665
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !17662, metadata !DIExpression()), !dbg !17664
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !17666
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !17667
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !17668
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !17669
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !17670
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !17671
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !17672
  ret void, !dbg !17673
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #8 !dbg !17674 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17678, metadata !DIExpression()), !dbg !17680
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17681
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.350(%struct._dnode* noundef %2) #24, !dbg !17682
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17679, metadata !DIExpression()), !dbg !17680
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !17683
  ret %struct._timeout* %4, !dbg !17684
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.347(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !17685 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17690, metadata !DIExpression()), !dbg !17693
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17691, metadata !DIExpression()), !dbg !17693
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17694
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !17692, metadata !DIExpression()), !dbg !17693
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17695
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !17696
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17697
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !17698
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !17699
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !17700
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17701
  ret void, !dbg !17702
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !17703 {
  %1 = tail call fastcc %struct._timeout* @first() #24, !dbg !17708
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !17705, metadata !DIExpression()), !dbg !17709
  %2 = tail call fastcc i32 @elapsed.345() #24, !dbg !17710
  call void @llvm.dbg.value(metadata i32 %2, metadata !17706, metadata !DIExpression()), !dbg !17709
  %3 = icmp eq %struct._timeout* %1, null, !dbg !17711
  br i1 %3, label %14, label %4, !dbg !17713

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !17714
  %6 = load i64, i64* %5, align 8, !dbg !17714
  %7 = sext i32 %2 to i64, !dbg !17715
  %8 = sub nsw i64 %6, %7, !dbg !17716
  %9 = icmp sgt i64 %8, 2147483647, !dbg !17717
  br i1 %9, label %14, label %10, !dbg !17718

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !17719
  %12 = select i1 %11, i64 %8, i64 0, !dbg !17719
  %13 = trunc i64 %12 to i32, !dbg !17719
  call void @llvm.dbg.value(metadata i32 %13, metadata !17707, metadata !DIExpression()), !dbg !17709
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !17721
  call void @llvm.dbg.value(metadata i32 %15, metadata !17707, metadata !DIExpression()), !dbg !17709
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !17722
  %17 = icmp ne i32 %16, 0, !dbg !17724
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !17725
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !17725
  call void @llvm.dbg.value(metadata i32 %20, metadata !17707, metadata !DIExpression()), !dbg !17709
  ret i32 %20, !dbg !17726
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.350(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !17727 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17731, metadata !DIExpression()), !dbg !17733
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17732, metadata !DIExpression()), !dbg !17733
  %2 = icmp eq %struct._dnode* %0, null, !dbg !17734
  br i1 %2, label %5, label %3, !dbg !17735

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.351(%struct._dnode* noundef nonnull %0) #24, !dbg !17736
  br label %5, !dbg !17735

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !17735
  ret %struct._dnode* %6, !dbg !17737
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.351(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !17738 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17740, metadata !DIExpression()), !dbg !17742
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17741, metadata !DIExpression()), !dbg !17742
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17743
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !17744
  br i1 %3, label %7, label %4, !dbg !17745

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17746
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !17746
  br label %7, !dbg !17745

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !17745
  ret %struct._dnode* %8, !dbg !17747
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.352() unnamed_addr #8 !dbg !17748 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17752, metadata !DIExpression()), !dbg !17753
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.353() #24, !dbg !17754
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !17754
  ret %struct._dnode* %3, !dbg !17755
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.353() unnamed_addr #8 !dbg !17756 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17760, metadata !DIExpression()), !dbg !17761
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !17762
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !17763
  ret i1 %2, !dbg !17764
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17765 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17769, metadata !DIExpression()), !dbg !17774
  call void @llvm.dbg.value(metadata i32 -22, metadata !17770, metadata !DIExpression()), !dbg !17774
  call void @llvm.dbg.value(metadata i32 0, metadata !17771, metadata !DIExpression()), !dbg !17775
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17533, metadata !DIExpression()) #23, !dbg !17776
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17778, !srcloc !17548
  call void @llvm.dbg.value(metadata i32 undef, metadata !17545, metadata !DIExpression()) #23, !dbg !17780
  call void @llvm.dbg.value(metadata i32 undef, metadata !17546, metadata !DIExpression()) #23, !dbg !17780
  call void @llvm.dbg.value(metadata i32 undef, metadata !17539, metadata !DIExpression()) #23, !dbg !17776
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17781
  br i1 %3, label %5, label %4, !dbg !17782

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 148) #25, !dbg !17783
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.344, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17783
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 148) #25, !dbg !17783
  unreachable, !dbg !17783

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !17545, metadata !DIExpression()) #23, !dbg !17780
  call void @llvm.dbg.value(metadata i32 undef, metadata !17539, metadata !DIExpression()) #23, !dbg !17776
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17784
  call void @llvm.dbg.value(metadata i32 undef, metadata !17773, metadata !DIExpression()), !dbg !17775
  call void @llvm.dbg.value(metadata i32 -22, metadata !17770, metadata !DIExpression()), !dbg !17774
  call void @llvm.dbg.value(metadata i32 undef, metadata !17771, metadata !DIExpression()), !dbg !17775
  %6 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !17770, metadata !DIExpression()), !dbg !17774
  %7 = tail call fastcc zeroext i1 @sys_dnode_is_linked.337(%struct._dnode* noundef %6) #24, !dbg !17785
  br i1 %7, label %8, label %9, !dbg !17789

8:                                                ; preds = %5
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #24, !dbg !17790
  call void @llvm.dbg.value(metadata i32 0, metadata !17770, metadata !DIExpression()), !dbg !17774
  br label %9, !dbg !17792

9:                                                ; preds = %5, %8
  %10 = phi i32 [ 0, %8 ], [ -22, %5 ], !dbg !17774
  call void @llvm.dbg.value(metadata i32 %10, metadata !17770, metadata !DIExpression()), !dbg !17774
  call void @llvm.dbg.value(metadata i32 undef, metadata !17606, metadata !DIExpression()) #23, !dbg !17793
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17611, metadata !DIExpression()) #23, !dbg !17793
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17795
  br i1 %11, label %13, label %12, !dbg !17796

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 194) #25, !dbg !17797
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.349, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17797
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 194) #25, !dbg !17797
  unreachable, !dbg !17797

13:                                               ; preds = %9
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !17778
  call void @llvm.dbg.value(metadata i32 %14, metadata !17545, metadata !DIExpression()) #23, !dbg !17780
  call void @llvm.dbg.value(metadata i32 %14, metadata !17539, metadata !DIExpression()) #23, !dbg !17776
  call void @llvm.dbg.value(metadata i32 %14, metadata !17773, metadata !DIExpression()), !dbg !17775
  call void @llvm.dbg.value(metadata i32 undef, metadata !17606, metadata !DIExpression()) #23, !dbg !17793
  call void @llvm.dbg.value(metadata i32 undef, metadata !17620, metadata !DIExpression()) #23, !dbg !17798
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !17800, !srcloc !17626
  call void @llvm.dbg.value(metadata i32 %10, metadata !17770, metadata !DIExpression()), !dbg !17774
  call void @llvm.dbg.value(metadata i32 undef, metadata !17771, metadata !DIExpression()), !dbg !17775
  ret i32 %10, !dbg !17801
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #9 !dbg !17802 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17804, metadata !DIExpression()), !dbg !17805
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #24, !dbg !17806
  %3 = icmp eq %struct._timeout* %2, null, !dbg !17808
  br i1 %3, label %10, label %4, !dbg !17809

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !17810
  %6 = load i64, i64* %5, align 8, !dbg !17810
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !17812
  %8 = load i64, i64* %7, align 8, !dbg !17813
  %9 = add nsw i64 %8, %6, !dbg !17813
  store i64 %9, i64* %7, align 8, !dbg !17813
  br label %10, !dbg !17814

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17815
  tail call fastcc void @sys_dlist_remove.356(%struct._dnode* noundef %11) #24, !dbg !17816
  ret void, !dbg !17817
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.356(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !17818 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17822, metadata !DIExpression()), !dbg !17825
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17826
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17826
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17823, metadata !DIExpression()), !dbg !17825
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17827
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !17827
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !17824, metadata !DIExpression()), !dbg !17825
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !17828
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !17829
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !17830
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !17831
  tail call fastcc void @sys_dnode_init.357(%struct._dnode* noundef %0) #24, !dbg !17832
  ret void, !dbg !17833
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.357(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !17834 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17836, metadata !DIExpression()), !dbg !17837
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17838
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !17839
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17840
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !17841
  ret void, !dbg !17842
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17843 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17849, metadata !DIExpression()), !dbg !17854
  call void @llvm.dbg.value(metadata i64 0, metadata !17850, metadata !DIExpression()), !dbg !17854
  call void @llvm.dbg.value(metadata i32 0, metadata !17851, metadata !DIExpression()), !dbg !17855
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17533, metadata !DIExpression()) #23, !dbg !17856
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17858, !srcloc !17548
  call void @llvm.dbg.value(metadata i32 undef, metadata !17545, metadata !DIExpression()) #23, !dbg !17860
  call void @llvm.dbg.value(metadata i32 undef, metadata !17546, metadata !DIExpression()) #23, !dbg !17860
  call void @llvm.dbg.value(metadata i32 undef, metadata !17539, metadata !DIExpression()) #23, !dbg !17856
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17861
  br i1 %3, label %5, label %4, !dbg !17862

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 148) #25, !dbg !17863
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.344, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17863
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 148) #25, !dbg !17863
  unreachable, !dbg !17863

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !17545, metadata !DIExpression()) #23, !dbg !17860
  call void @llvm.dbg.value(metadata i32 undef, metadata !17539, metadata !DIExpression()) #23, !dbg !17856
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17864
  call void @llvm.dbg.value(metadata i32 undef, metadata !17853, metadata !DIExpression()), !dbg !17855
  call void @llvm.dbg.value(metadata i64 0, metadata !17850, metadata !DIExpression()), !dbg !17854
  call void @llvm.dbg.value(metadata i32 undef, metadata !17851, metadata !DIExpression()), !dbg !17855
  %6 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !17865
  call void @llvm.dbg.value(metadata i64 %6, metadata !17850, metadata !DIExpression()), !dbg !17854
  call void @llvm.dbg.value(metadata i32 undef, metadata !17606, metadata !DIExpression()) #23, !dbg !17868
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17611, metadata !DIExpression()) #23, !dbg !17868
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17870
  br i1 %7, label %9, label %8, !dbg !17871

8:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 194) #25, !dbg !17872
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.349, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17872
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 194) #25, !dbg !17872
  unreachable, !dbg !17872

9:                                                ; preds = %5
  %10 = extractvalue { i32, i32 } %2, 0, !dbg !17858
  call void @llvm.dbg.value(metadata i32 %10, metadata !17545, metadata !DIExpression()) #23, !dbg !17860
  call void @llvm.dbg.value(metadata i32 %10, metadata !17539, metadata !DIExpression()) #23, !dbg !17856
  call void @llvm.dbg.value(metadata i32 %10, metadata !17853, metadata !DIExpression()), !dbg !17855
  call void @llvm.dbg.value(metadata i32 undef, metadata !17606, metadata !DIExpression()) #23, !dbg !17868
  call void @llvm.dbg.value(metadata i32 undef, metadata !17620, metadata !DIExpression()) #23, !dbg !17873
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #23, !dbg !17875, !srcloc !17626
  call void @llvm.dbg.value(metadata i64 %6, metadata !17850, metadata !DIExpression()), !dbg !17854
  call void @llvm.dbg.value(metadata i32 undef, metadata !17851, metadata !DIExpression()), !dbg !17855
  ret i64 %6, !dbg !17876
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !17877 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17879, metadata !DIExpression()), !dbg !17883
  call void @llvm.dbg.value(metadata i64 0, metadata !17880, metadata !DIExpression()), !dbg !17883
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.358(%struct._timeout* noundef %0) #24, !dbg !17884
  br i1 %2, label %21, label %3, !dbg !17886

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #24, !dbg !17887
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !17881, metadata !DIExpression()), !dbg !17888
  call void @llvm.dbg.value(metadata i64 0, metadata !17880, metadata !DIExpression()), !dbg !17883
  %5 = icmp eq %struct._timeout* %4, null, !dbg !17889
  br i1 %5, label %16, label %6, !dbg !17891

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !17881, metadata !DIExpression()), !dbg !17888
  call void @llvm.dbg.value(metadata i64 %8, metadata !17880, metadata !DIExpression()), !dbg !17883
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !17892
  %10 = load i64, i64* %9, align 8, !dbg !17892
  %11 = add nsw i64 %10, %8, !dbg !17894
  call void @llvm.dbg.value(metadata i64 %11, metadata !17880, metadata !DIExpression()), !dbg !17883
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !17895
  br i1 %12, label %16, label %13, !dbg !17897

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #24, !dbg !17898
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !17881, metadata !DIExpression()), !dbg !17888
  call void @llvm.dbg.value(metadata i64 %11, metadata !17880, metadata !DIExpression()), !dbg !17883
  %15 = icmp eq %struct._timeout* %14, null, !dbg !17889
  br i1 %15, label %16, label %6, !dbg !17891, !llvm.loop !17899

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !17883
  call void @llvm.dbg.value(metadata i64 %17, metadata !17880, metadata !DIExpression()), !dbg !17883
  %18 = tail call fastcc i32 @elapsed.345() #24, !dbg !17901
  %19 = sext i32 %18 to i64, !dbg !17901
  %20 = sub nsw i64 %17, %19, !dbg !17902
  br label %21, !dbg !17903

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !17883
  ret i64 %22, !dbg !17904
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.358(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #8 !dbg !17905 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17909, metadata !DIExpression()), !dbg !17910
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17911
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.337(%struct._dnode* noundef %2) #24, !dbg !17912
  %4 = xor i1 %3, true, !dbg !17913
  ret i1 %4, !dbg !17914
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17915 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17917, metadata !DIExpression()), !dbg !17922
  call void @llvm.dbg.value(metadata i64 0, metadata !17918, metadata !DIExpression()), !dbg !17922
  call void @llvm.dbg.value(metadata i32 0, metadata !17919, metadata !DIExpression()), !dbg !17923
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17533, metadata !DIExpression()) #23, !dbg !17924
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17926, !srcloc !17548
  call void @llvm.dbg.value(metadata i32 undef, metadata !17545, metadata !DIExpression()) #23, !dbg !17928
  call void @llvm.dbg.value(metadata i32 undef, metadata !17546, metadata !DIExpression()) #23, !dbg !17928
  call void @llvm.dbg.value(metadata i32 undef, metadata !17539, metadata !DIExpression()) #23, !dbg !17924
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17929
  br i1 %3, label %5, label %4, !dbg !17930

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 148) #25, !dbg !17931
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.344, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17931
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 148) #25, !dbg !17931
  unreachable, !dbg !17931

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !17545, metadata !DIExpression()) #23, !dbg !17928
  call void @llvm.dbg.value(metadata i32 undef, metadata !17539, metadata !DIExpression()) #23, !dbg !17924
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17932
  call void @llvm.dbg.value(metadata i32 undef, metadata !17921, metadata !DIExpression()), !dbg !17923
  call void @llvm.dbg.value(metadata i64 0, metadata !17918, metadata !DIExpression()), !dbg !17922
  call void @llvm.dbg.value(metadata i32 undef, metadata !17919, metadata !DIExpression()), !dbg !17923
  %6 = load i64, i64* @curr_tick, align 8, !dbg !17933
  %7 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !17936
  call void @llvm.dbg.value(metadata !DIArgList(i64 %6, i64 %7), metadata !17918, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17922
  call void @llvm.dbg.value(metadata i32 undef, metadata !17606, metadata !DIExpression()) #23, !dbg !17937
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17611, metadata !DIExpression()) #23, !dbg !17937
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17939
  br i1 %8, label %10, label %9, !dbg !17940

9:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 194) #25, !dbg !17941
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.349, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17941
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 194) #25, !dbg !17941
  unreachable, !dbg !17941

10:                                               ; preds = %5
  %11 = extractvalue { i32, i32 } %2, 0, !dbg !17926
  call void @llvm.dbg.value(metadata i32 %11, metadata !17545, metadata !DIExpression()) #23, !dbg !17928
  call void @llvm.dbg.value(metadata i32 %11, metadata !17539, metadata !DIExpression()) #23, !dbg !17924
  call void @llvm.dbg.value(metadata i32 %11, metadata !17921, metadata !DIExpression()), !dbg !17923
  call void @llvm.dbg.value(metadata !DIArgList(i64 %7, i64 %6), metadata !17918, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17922
  call void @llvm.dbg.value(metadata i32 undef, metadata !17606, metadata !DIExpression()) #23, !dbg !17937
  call void @llvm.dbg.value(metadata i32 undef, metadata !17620, metadata !DIExpression()) #23, !dbg !17942
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #23, !dbg !17944, !srcloc !17626
  call void @llvm.dbg.value(metadata i32 undef, metadata !17919, metadata !DIExpression()), !dbg !17923
  %12 = add i64 %7, %6, !dbg !17945
  ret i64 %12, !dbg !17946
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !17947 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !17949, metadata !DIExpression()), !dbg !17953
  call void @llvm.dbg.value(metadata i32 0, metadata !17950, metadata !DIExpression()), !dbg !17954
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17533, metadata !DIExpression()) #23, !dbg !17955
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17957, !srcloc !17548
  call void @llvm.dbg.value(metadata i32 undef, metadata !17545, metadata !DIExpression()) #23, !dbg !17959
  call void @llvm.dbg.value(metadata i32 undef, metadata !17546, metadata !DIExpression()) #23, !dbg !17959
  call void @llvm.dbg.value(metadata i32 undef, metadata !17539, metadata !DIExpression()) #23, !dbg !17955
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17960
  br i1 %2, label %4, label %3, !dbg !17961

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 148) #25, !dbg !17962
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.344, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17962
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 148) #25, !dbg !17962
  unreachable, !dbg !17962

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !17545, metadata !DIExpression()) #23, !dbg !17959
  call void @llvm.dbg.value(metadata i32 undef, metadata !17539, metadata !DIExpression()) #23, !dbg !17955
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17963
  call void @llvm.dbg.value(metadata i32 undef, metadata !17952, metadata !DIExpression()), !dbg !17954
  call void @llvm.dbg.value(metadata i32 -1, metadata !17949, metadata !DIExpression()), !dbg !17953
  call void @llvm.dbg.value(metadata i32 undef, metadata !17950, metadata !DIExpression()), !dbg !17954
  %5 = tail call fastcc i32 @next_timeout() #24, !dbg !17964
  call void @llvm.dbg.value(metadata i32 %5, metadata !17949, metadata !DIExpression()), !dbg !17953
  call void @llvm.dbg.value(metadata i32 undef, metadata !17606, metadata !DIExpression()) #23, !dbg !17967
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17611, metadata !DIExpression()) #23, !dbg !17967
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17969
  br i1 %6, label %8, label %7, !dbg !17970

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 194) #25, !dbg !17971
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.349, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17971
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 194) #25, !dbg !17971
  unreachable, !dbg !17971

8:                                                ; preds = %4
  %9 = extractvalue { i32, i32 } %1, 0, !dbg !17957
  call void @llvm.dbg.value(metadata i32 %9, metadata !17545, metadata !DIExpression()) #23, !dbg !17959
  call void @llvm.dbg.value(metadata i32 %9, metadata !17539, metadata !DIExpression()) #23, !dbg !17955
  call void @llvm.dbg.value(metadata i32 %9, metadata !17952, metadata !DIExpression()), !dbg !17954
  call void @llvm.dbg.value(metadata i32 undef, metadata !17606, metadata !DIExpression()) #23, !dbg !17967
  call void @llvm.dbg.value(metadata i32 undef, metadata !17620, metadata !DIExpression()) #23, !dbg !17972
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !17974, !srcloc !17626
  call void @llvm.dbg.value(metadata i32 %5, metadata !17949, metadata !DIExpression()), !dbg !17953
  call void @llvm.dbg.value(metadata i32 undef, metadata !17950, metadata !DIExpression()), !dbg !17954
  ret i32 %5, !dbg !17975
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !17976 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17978, metadata !DIExpression()), !dbg !17988
  call void @llvm.dbg.value(metadata i1 %1, metadata !17979, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17988
  call void @llvm.dbg.value(metadata i32 0, metadata !17980, metadata !DIExpression()), !dbg !17989
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17533, metadata !DIExpression()) #23, !dbg !17990
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17992, !srcloc !17548
  call void @llvm.dbg.value(metadata i32 undef, metadata !17545, metadata !DIExpression()) #23, !dbg !17994
  call void @llvm.dbg.value(metadata i32 undef, metadata !17546, metadata !DIExpression()) #23, !dbg !17994
  call void @llvm.dbg.value(metadata i32 undef, metadata !17539, metadata !DIExpression()) #23, !dbg !17990
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17995
  br i1 %4, label %6, label %5, !dbg !17996

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 148) #25, !dbg !17997
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.344, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17997
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 148) #25, !dbg !17997
  unreachable, !dbg !17997

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !17545, metadata !DIExpression()) #23, !dbg !17994
  call void @llvm.dbg.value(metadata i32 undef, metadata !17539, metadata !DIExpression()) #23, !dbg !17990
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17998
  call void @llvm.dbg.value(metadata i32 undef, metadata !17982, metadata !DIExpression()), !dbg !17989
  call void @llvm.dbg.value(metadata i32 undef, metadata !17980, metadata !DIExpression()), !dbg !17989
  %7 = tail call fastcc i32 @next_timeout() #24, !dbg !17999
  call void @llvm.dbg.value(metadata i32 %7, metadata !17983, metadata !DIExpression()), !dbg !18000
  call void @llvm.dbg.value(metadata i1 undef, metadata !17986, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18000
  %8 = icmp slt i32 %7, 2, !dbg !18001
  call void @llvm.dbg.value(metadata i1 %8, metadata !17987, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18000
  %9 = icmp slt i32 %7, %0
  %10 = or i1 %8, %9, !dbg !18002
  call void @llvm.dbg.value(metadata i1 %9, metadata !17986, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18000
  br i1 %10, label %14, label %11, !dbg !18002

11:                                               ; preds = %6
  %12 = icmp sgt i32 %7, %0, !dbg !18004
  %13 = select i1 %12, i32 %0, i32 %7, !dbg !18004
  tail call void @sys_clock_set_timeout(i32 noundef %13, i1 noundef zeroext %1) #25, !dbg !18006
  br label %14, !dbg !18007

14:                                               ; preds = %11, %6
  call void @llvm.dbg.value(metadata i32 undef, metadata !17606, metadata !DIExpression()) #23, !dbg !18008
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17611, metadata !DIExpression()) #23, !dbg !18008
  %15 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !18010
  br i1 %15, label %17, label %16, !dbg !18011

16:                                               ; preds = %14
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 194) #25, !dbg !18012
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.349, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !18012
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 194) #25, !dbg !18012
  unreachable, !dbg !18012

17:                                               ; preds = %14
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !17992
  call void @llvm.dbg.value(metadata i32 %18, metadata !17545, metadata !DIExpression()) #23, !dbg !17994
  call void @llvm.dbg.value(metadata i32 %18, metadata !17539, metadata !DIExpression()) #23, !dbg !17990
  call void @llvm.dbg.value(metadata i32 %18, metadata !17982, metadata !DIExpression()), !dbg !17989
  call void @llvm.dbg.value(metadata i32 undef, metadata !17606, metadata !DIExpression()) #23, !dbg !18008
  call void @llvm.dbg.value(metadata i32 undef, metadata !17620, metadata !DIExpression()) #23, !dbg !18013
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !18015, !srcloc !17626
  call void @llvm.dbg.value(metadata i32 1, metadata !17980, metadata !DIExpression()), !dbg !17989
  call void @llvm.dbg.value(metadata i32 undef, metadata !17980, metadata !DIExpression()), !dbg !17989
  ret void, !dbg !18016
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !18017 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18021, metadata !DIExpression()), !dbg !18026
  tail call void @z_time_slice(i32 noundef %0) #25, !dbg !18027
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17533, metadata !DIExpression()) #23, !dbg !18028
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !18030, !srcloc !17548
  call void @llvm.dbg.value(metadata i32 undef, metadata !17545, metadata !DIExpression()) #23, !dbg !18032
  call void @llvm.dbg.value(metadata i32 undef, metadata !17546, metadata !DIExpression()) #23, !dbg !18032
  call void @llvm.dbg.value(metadata i32 undef, metadata !17539, metadata !DIExpression()) #23, !dbg !18028
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !18033
  br i1 %3, label %5, label %4, !dbg !18034

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 148) #25, !dbg !18035
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.344, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !18035
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 148) #25, !dbg !18035
  unreachable, !dbg !18035

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !17545, metadata !DIExpression()) #23, !dbg !18032
  call void @llvm.dbg.value(metadata i32 undef, metadata !17539, metadata !DIExpression()) #23, !dbg !18028
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !18036
  call void @llvm.dbg.value(metadata i32 undef, metadata !18022, metadata !DIExpression()), !dbg !18026
  store i32 %0, i32* @announce_remaining, align 4, !dbg !18026
  call void @llvm.dbg.value(metadata i32 undef, metadata !18022, metadata !DIExpression()), !dbg !18026
  %6 = tail call fastcc %struct._timeout* @first() #24, !dbg !18037
  %7 = icmp eq %struct._timeout* %6, null, !dbg !18038
  br i1 %7, label %37, label %8, !dbg !18039

8:                                                ; preds = %5, %30
  %9 = phi %struct._timeout* [ %33, %30 ], [ %6, %5 ]
  %10 = phi { i32, i32 } [ %27, %30 ], [ %2, %5 ]
  %11 = phi i32 [ %32, %30 ], [ %0, %5 ]
  %12 = extractvalue { i32, i32 } %10, 0, !dbg !18026
  %13 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 2, !dbg !18040
  %14 = load i64, i64* %13, align 8, !dbg !18040
  %15 = sext i32 %11 to i64, !dbg !18041
  %16 = icmp sgt i64 %14, %15, !dbg !18042
  br i1 %16, label %35, label %17, !dbg !18043

17:                                               ; preds = %8
  call void @llvm.dbg.value(metadata %struct._timeout* %9, metadata !18023, metadata !DIExpression()), !dbg !18044
  %18 = trunc i64 %14 to i32, !dbg !18045
  call void @llvm.dbg.value(metadata i32 %18, metadata !18025, metadata !DIExpression()), !dbg !18044
  %19 = sext i32 %18 to i64, !dbg !18046
  %20 = load i64, i64* @curr_tick, align 8, !dbg !18047
  %21 = add i64 %20, %19, !dbg !18047
  store i64 %21, i64* @curr_tick, align 8, !dbg !18047
  store i64 0, i64* %13, align 8, !dbg !18048
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %9) #24, !dbg !18049
  call void @llvm.dbg.value(metadata i32 undef, metadata !17606, metadata !DIExpression()) #23, !dbg !18050
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17611, metadata !DIExpression()) #23, !dbg !18050
  %22 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !18052
  br i1 %22, label %24, label %23, !dbg !18053

23:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 194) #25, !dbg !18054
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.349, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !18054
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 194) #25, !dbg !18054
  unreachable, !dbg !18054

24:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %12, metadata !17606, metadata !DIExpression()) #23, !dbg !18050
  call void @llvm.dbg.value(metadata i32 %12, metadata !17620, metadata !DIExpression()) #23, !dbg !18055
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !18057, !srcloc !17626
  %25 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 1, !dbg !18058
  %26 = load void (%struct._timeout*)*, void (%struct._timeout*)** %25, align 8, !dbg !18058
  tail call void %26(%struct._timeout* noundef nonnull %9) #25, !dbg !18059
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17533, metadata !DIExpression()) #23, !dbg !18060
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !18062, !srcloc !17548
  call void @llvm.dbg.value(metadata i32 undef, metadata !17545, metadata !DIExpression()) #23, !dbg !18064
  call void @llvm.dbg.value(metadata i32 undef, metadata !17546, metadata !DIExpression()) #23, !dbg !18064
  call void @llvm.dbg.value(metadata i32 undef, metadata !17539, metadata !DIExpression()) #23, !dbg !18060
  %28 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !18065
  br i1 %28, label %30, label %29, !dbg !18066

29:                                               ; preds = %24
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 148) #25, !dbg !18067
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.344, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !18067
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 148) #25, !dbg !18067
  unreachable, !dbg !18067

30:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !17545, metadata !DIExpression()) #23, !dbg !18064
  call void @llvm.dbg.value(metadata i32 undef, metadata !17539, metadata !DIExpression()) #23, !dbg !18060
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !18068
  call void @llvm.dbg.value(metadata i32 undef, metadata !18022, metadata !DIExpression()), !dbg !18026
  %31 = load i32, i32* @announce_remaining, align 4, !dbg !18069
  %32 = sub nsw i32 %31, %18, !dbg !18069
  store i32 %32, i32* @announce_remaining, align 4, !dbg !18026
  call void @llvm.dbg.value(metadata i32 undef, metadata !18022, metadata !DIExpression()), !dbg !18026
  %33 = tail call fastcc %struct._timeout* @first() #24, !dbg !18037
  %34 = icmp eq %struct._timeout* %33, null, !dbg !18038
  br i1 %34, label %37, label %8, !dbg !18039, !llvm.loop !18070

35:                                               ; preds = %8
  %36 = sub nsw i64 %14, %15, !dbg !18072
  store i64 %36, i64* %13, align 8, !dbg !18072
  br label %41, !dbg !18075

37:                                               ; preds = %30, %5
  %38 = phi { i32, i32 } [ %2, %5 ], [ %27, %30 ]
  %39 = phi i32 [ %0, %5 ], [ %32, %30 ], !dbg !18026
  %40 = sext i32 %39 to i64, !dbg !18076
  br label %41, !dbg !18076

41:                                               ; preds = %37, %35
  %42 = phi i64 [ %40, %37 ], [ %15, %35 ], !dbg !18076
  %43 = phi { i32, i32 } [ %38, %37 ], [ %10, %35 ]
  %44 = load i64, i64* @curr_tick, align 8, !dbg !18077
  %45 = add i64 %44, %42, !dbg !18077
  store i64 %45, i64* @curr_tick, align 8, !dbg !18077
  store i32 0, i32* @announce_remaining, align 4, !dbg !18078
  %46 = tail call fastcc i32 @next_timeout() #24, !dbg !18079
  tail call void @sys_clock_set_timeout(i32 noundef %46, i1 noundef zeroext false) #25, !dbg !18080
  call void @llvm.dbg.value(metadata i32 undef, metadata !17606, metadata !DIExpression()) #23, !dbg !18081
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17611, metadata !DIExpression()) #23, !dbg !18081
  %47 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !18083
  br i1 %47, label %49, label %48, !dbg !18084

48:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 194) #25, !dbg !18085
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.349, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !18085
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 194) #25, !dbg !18085
  unreachable, !dbg !18085

49:                                               ; preds = %41
  %50 = extractvalue { i32, i32 } %43, 0, !dbg !18026
  call void @llvm.dbg.value(metadata i32 %50, metadata !17606, metadata !DIExpression()) #23, !dbg !18081
  call void @llvm.dbg.value(metadata i32 %50, metadata !17620, metadata !DIExpression()) #23, !dbg !18086
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %50) #23, !dbg !18088, !srcloc !17626
  ret void, !dbg !18089
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !18090 {
  call void @llvm.dbg.value(metadata i64 0, metadata !18094, metadata !DIExpression()), !dbg !18098
  call void @llvm.dbg.value(metadata i32 0, metadata !18095, metadata !DIExpression()), !dbg !18099
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17533, metadata !DIExpression()) #23, !dbg !18100
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !18102, !srcloc !17548
  call void @llvm.dbg.value(metadata i32 undef, metadata !17545, metadata !DIExpression()) #23, !dbg !18104
  call void @llvm.dbg.value(metadata i32 undef, metadata !17546, metadata !DIExpression()) #23, !dbg !18104
  call void @llvm.dbg.value(metadata i32 undef, metadata !17539, metadata !DIExpression()) #23, !dbg !18100
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !18105
  br i1 %2, label %4, label %3, !dbg !18106

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 148) #25, !dbg !18107
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.344, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !18107
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 148) #25, !dbg !18107
  unreachable, !dbg !18107

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !17545, metadata !DIExpression()) #23, !dbg !18104
  call void @llvm.dbg.value(metadata i32 undef, metadata !17539, metadata !DIExpression()) #23, !dbg !18100
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !18108
  call void @llvm.dbg.value(metadata i32 undef, metadata !18097, metadata !DIExpression()), !dbg !18099
  call void @llvm.dbg.value(metadata i64 0, metadata !18094, metadata !DIExpression()), !dbg !18098
  call void @llvm.dbg.value(metadata i32 undef, metadata !18095, metadata !DIExpression()), !dbg !18099
  %5 = load i64, i64* @curr_tick, align 8, !dbg !18109
  %6 = tail call fastcc i32 @elapsed.345() #24, !dbg !18112
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !18094, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !18098
  call void @llvm.dbg.value(metadata i32 undef, metadata !17606, metadata !DIExpression()) #23, !dbg !18113
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17611, metadata !DIExpression()) #23, !dbg !18113
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !18115
  br i1 %7, label %9, label %8, !dbg !18116

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 194) #25, !dbg !18117
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.349, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !18117
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 194) #25, !dbg !18117
  unreachable, !dbg !18117

9:                                                ; preds = %4
  %10 = extractvalue { i32, i32 } %1, 0, !dbg !18102
  call void @llvm.dbg.value(metadata i32 %10, metadata !17545, metadata !DIExpression()) #23, !dbg !18104
  call void @llvm.dbg.value(metadata i32 %10, metadata !17539, metadata !DIExpression()) #23, !dbg !18100
  call void @llvm.dbg.value(metadata i32 %10, metadata !18097, metadata !DIExpression()), !dbg !18099
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !18094, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !18098
  call void @llvm.dbg.value(metadata !DIArgList(i32 %6, i64 %5), metadata !18094, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !18098
  call void @llvm.dbg.value(metadata i32 undef, metadata !17606, metadata !DIExpression()) #23, !dbg !18113
  call void @llvm.dbg.value(metadata i32 undef, metadata !17620, metadata !DIExpression()) #23, !dbg !18118
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #23, !dbg !18120, !srcloc !17626
  call void @llvm.dbg.value(metadata i32 undef, metadata !18095, metadata !DIExpression()), !dbg !18099
  %11 = sext i32 %6 to i64, !dbg !18112
  %12 = add i64 %5, %11, !dbg !18121
  ret i64 %12, !dbg !18122
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !18123 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !18124
  %2 = trunc i64 %1 to i32, !dbg !18125
  ret i32 %2, !dbg !18126
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !18127 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !18128
  ret i64 %1, !dbg !18129
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !18130 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18132, metadata !DIExpression()), !dbg !18139
  %2 = icmp eq i32 %0, 0, !dbg !18140
  br i1 %2, label %10, label %3, !dbg !18142

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32.365() #24, !dbg !18143
  call void @llvm.dbg.value(metadata i32 %4, metadata !18133, metadata !DIExpression()), !dbg !18139
  %5 = mul i32 %0, 84, !dbg !18144
  call void @llvm.dbg.value(metadata i32 %5, metadata !18134, metadata !DIExpression()), !dbg !18139
  br label %6, !dbg !18145

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32.365() #24, !dbg !18146
  call void @llvm.dbg.value(metadata i32 %7, metadata !18135, metadata !DIExpression()), !dbg !18147
  %8 = sub i32 %7, %4, !dbg !18148
  %9 = icmp ult i32 %8, %5, !dbg !18150
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !18151
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32.365() unnamed_addr #1 !dbg !18152 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32.366() #24, !dbg !18153
  ret i32 %1, !dbg !18154
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32.366() unnamed_addr #1 !dbg !18155 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #25, !dbg !18156
  ret i32 %1, !dbg !18157
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !18158 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !18162, metadata !DIExpression()), !dbg !18164
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !18165

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #24, !dbg !18166
  br label %14, !dbg !18170

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !18163, metadata !DIExpression()), !dbg !18164
  %6 = icmp slt i64 %2, -1, !dbg !18171
  br i1 %6, label %7, label %9, !dbg !18174

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !18175
  br label %14, !dbg !18176

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #24, !dbg !18178
  %11 = icmp ugt i64 %2, 1, !dbg !18179
  %12 = select i1 %11, i64 %2, i64 1, !dbg !18179
  %13 = add nsw i64 %10, %12, !dbg !18180
  br label %14, !dbg !18181

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !18182
  ret i64 %15, !dbg !18183
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !18184 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.369, i32 0, i32 0)) #25, !dbg !18186
  ret void, !dbg !18187
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #4 = { argmemonly nofree nosync nounwind willreturn }
attributes #5 = { nofree nosync nounwind willreturn }
attributes #6 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { argmemonly nofree nounwind willreturn writeonly }
attributes #13 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nounwind }
attributes #24 = { nobuiltin optsize "no-builtins" }
attributes #25 = { nobuiltin nounwind optsize "no-builtins" }
attributes #26 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #27 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #28 = { nounwind readnone }
attributes #29 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!933, !2, !2582, !27, !177, !209, !2584, !2586, !2620, !2622, !218, !268, !2624, !2627, !2638, !2684, !2686, !2714, !2742, !2785, !2857, !2902, !297, !458, !2930, !494, !504, !529, !696, !731, !971, !2935, !1110, !1176, !1481, !1765, !2976, !1880, !1970, !2978, !3041, !3108, !2024, !3111, !2031, !2405, !3129, !2425, !3131, !2543, !3134}
!llvm.ident = !{!3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136}
!llvm.module.flags = !{!3137, !3138, !3139, !3140, !3141, !3142, !3143, !3144, !3145}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/integration/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/integration")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 109, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/integration")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 6208, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 97)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 3104, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "z_ztest_suite_node_stats_framework_tests", scope: !27, file: !111, line: 10, type: !149, isLocal: false, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, globals: !108, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/testsuite/integration/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/integration")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_ZTEST_SUITE_NODE", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_ZTEST_SUITE_STATS", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_ZTEST_UNIT_TEST", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_ZTEST_TEST_RULE", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 66)
!101 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 67)
!102 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 68)
!103 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 69)
!104 = !DIEnumerator(name: "K_OBJ_LAST", value: 70)
!105 = !{!106, !107}
!106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!107 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!108 = !{!109, !155, !25, !173}
!109 = !DIGlobalVariableExpression(var: !110, expr: !DIExpression())
!110 = distinct !DIGlobalVariable(name: "z_ztest_test_node_framework_tests", scope: !27, file: !111, line: 10, type: !112, isLocal: true, isDefinition: true, align: 32)
!111 = !DIFile(filename: "zephyr/samples/subsys/testsuite/integration/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!112 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !113)
!113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_node", file: !114, line: 177, size: 224, elements: !115)
!114 = !DIFile(filename: "zephyr/subsys/testsuite/ztest/include/zephyr/ztest_test_new.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!115 = !{!116, !121, !127, !133, !136, !139, !146}
!116 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !113, file: !114, line: 179, baseType: !117, size: 32)
!117 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !118)
!118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !119, size: 32)
!119 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !120)
!120 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!121 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !113, file: !114, line: 182, baseType: !122, size: 32, offset: 32)
!122 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !123)
!123 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_suite_setup_t", file: !114, line: 141, baseType: !124)
!124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !125, size: 32)
!125 = !DISubroutineType(types: !126)
!126 = !{!106}
!127 = !DIDerivedType(tag: DW_TAG_member, name: "before", scope: !113, file: !114, line: 185, baseType: !128, size: 32, offset: 64)
!128 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !129)
!129 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_suite_before_t", file: !114, line: 148, baseType: !130)
!130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !131, size: 32)
!131 = !DISubroutineType(types: !132)
!132 = !{null, !106}
!133 = !DIDerivedType(tag: DW_TAG_member, name: "after", scope: !113, file: !114, line: 188, baseType: !134, size: 32, offset: 96)
!134 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !135)
!135 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_suite_after_t", file: !114, line: 155, baseType: !130)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "teardown", scope: !113, file: !114, line: 191, baseType: !137, size: 32, offset: 128)
!137 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !138)
!138 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_suite_teardown_t", file: !114, line: 162, baseType: !130)
!139 = !DIDerivedType(tag: DW_TAG_member, name: "predicate", scope: !113, file: !114, line: 194, baseType: !140, size: 32, offset: 160)
!140 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !141)
!141 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_suite_predicate_t", file: !114, line: 171, baseType: !142)
!142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !143, size: 32)
!143 = !DISubroutineType(types: !144)
!144 = !{!145, !13}
!145 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !113, file: !114, line: 197, baseType: !147, size: 32, offset: 192)
!147 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !148)
!148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !149, size: 32)
!149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_stats", file: !114, line: 114, size: 96, elements: !150)
!150 = !{!151, !153, !154}
!151 = !DIDerivedType(tag: DW_TAG_member, name: "run_count", scope: !149, file: !114, line: 116, baseType: !152, size: 32)
!152 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !149, file: !114, line: 118, baseType: !152, size: 32, offset: 32)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "fail_count", scope: !149, file: !114, line: 120, baseType: !152, size: 32, offset: 64)
!155 = !DIGlobalVariableExpression(var: !156, expr: !DIExpression())
!156 = distinct !DIGlobalVariable(name: "z_ztest_unit_test__framework_tests__test_assert", scope: !27, file: !111, line: 18, type: !157, isLocal: true, isDefinition: true, align: 32)
!157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_unit_test", file: !114, line: 97, size: 160, elements: !158)
!158 = !{!159, !160, !161, !162, !163}
!159 = !DIDerivedType(tag: DW_TAG_member, name: "test_suite_name", scope: !157, file: !114, line: 98, baseType: !118, size: 32)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !157, file: !114, line: 99, baseType: !118, size: 32, offset: 32)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "test", scope: !157, file: !114, line: 100, baseType: !130, size: 32, offset: 64)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "thread_options", scope: !157, file: !114, line: 101, baseType: !152, size: 32, offset: 96)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !157, file: !114, line: 104, baseType: !164, size: 32, offset: 128)
!164 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !165)
!165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !166, size: 32)
!166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_unit_test_stats", file: !114, line: 123, size: 160, elements: !167)
!167 = !{!168, !169, !170, !171, !172}
!168 = !DIDerivedType(tag: DW_TAG_member, name: "run_count", scope: !166, file: !114, line: 125, baseType: !152, size: 32)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !166, file: !114, line: 127, baseType: !152, size: 32, offset: 32)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "fail_count", scope: !166, file: !114, line: 129, baseType: !152, size: 32, offset: 64)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "pass_count", scope: !166, file: !114, line: 131, baseType: !152, size: 32, offset: 96)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "duration_worst_ms", scope: !166, file: !114, line: 133, baseType: !152, size: 32, offset: 128)
!173 = !DIGlobalVariableExpression(var: !174, expr: !DIExpression())
!174 = distinct !DIGlobalVariable(name: "z_ztest_unit_test_stats_framework_tests_test_assert", scope: !27, file: !111, line: 18, type: !166, isLocal: false, isDefinition: true)
!175 = !DIGlobalVariableExpression(var: !176, expr: !DIExpression())
!176 = distinct !DIGlobalVariable(name: "log_const_cbprintf_package", scope: !177, file: !200, line: 18, type: !201, isLocal: false, isDefinition: true)
!177 = distinct !DICompileUnit(language: DW_LANG_C99, file: !178, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !179, globals: !199, splitDebugInlining: false, nameTableKind: None)
!178 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/integration")
!179 = !{!22, !106, !24, !180, !182, !184, !185, !107, !187, !188, !190, !192, !193, !194, !197, !118}
!180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !181, size: 32)
!181 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !183, size: 32)
!183 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !118, size: 32)
!185 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !186, line: 214, baseType: !32)
!186 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !189, size: 32)
!189 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !191, size: 32)
!191 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !193, size: 32)
!193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 32)
!194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !195, size: 32)
!195 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !196)
!196 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!197 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !198)
!198 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!199 = !{!175}
!200 = !DIFile(filename: "zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!201 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !202)
!202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !203, line: 16, size: 64, elements: !204)
!203 = !DIFile(filename: "zephyr/include/zephyr/logging/log_instance.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!204 = !{!205, !206}
!205 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !202, file: !203, line: 17, baseType: !118, size: 32)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !202, file: !203, line: 18, baseType: !195, size: 8, offset: 32)
!207 = !DIGlobalVariableExpression(var: !208, expr: !DIExpression())
!208 = distinct !DIGlobalVariable(name: "_char_out", scope: !209, file: !212, line: 54, type: !213, isLocal: false, isDefinition: true)
!209 = distinct !DICompileUnit(language: DW_LANG_C99, file: !210, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, globals: !211, splitDebugInlining: false, nameTableKind: None)
!210 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/integration")
!211 = !{!207}
!212 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !214, size: 32)
!214 = !DISubroutineType(types: !215)
!215 = !{!107, !107}
!216 = !DIGlobalVariableExpression(var: !217, expr: !DIExpression())
!217 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !218, file: !235, line: 56, type: !236, isLocal: true, isDefinition: true, align: 32)
!218 = distinct !DICompileUnit(language: DW_LANG_C99, file: !219, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !220, globals: !234, splitDebugInlining: false, nameTableKind: None)
!219 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/integration")
!220 = !{!221}
!221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !222, size: 32)
!222 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !223, line: 407, baseType: !224)
!223 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f446xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!224 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 398, size: 224, elements: !225)
!225 = !{!226, !228, !229, !230, !231, !232, !233}
!226 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !224, file: !223, line: 400, baseType: !227, size: 32)
!227 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !152)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !224, file: !223, line: 401, baseType: !227, size: 32, offset: 32)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !224, file: !223, line: 402, baseType: !227, size: 32, offset: 64)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !224, file: !223, line: 403, baseType: !227, size: 32, offset: 96)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !224, file: !223, line: 404, baseType: !227, size: 32, offset: 128)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !224, file: !223, line: 405, baseType: !227, size: 32, offset: 160)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !224, file: !223, line: 406, baseType: !227, size: 32, offset: 192)
!234 = !{!216}
!235 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!236 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !237)
!237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !239)
!238 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!239 = !{!240, !265}
!240 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !237, file: !238, line: 60, baseType: !241, size: 32)
!241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !242, size: 32)
!242 = !DISubroutineType(types: !243)
!243 = !{!107, !244}
!244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !245, size: 32)
!245 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !246)
!246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !248)
!247 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!248 = !{!249, !250, !251, !252, !258, !259}
!249 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !246, file: !247, line: 380, baseType: !118, size: 32)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !246, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !246, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !246, file: !247, line: 386, baseType: !253, size: 32, offset: 96)
!253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !254, size: 32)
!254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !255)
!255 = !{!256, !257}
!256 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !254, file: !247, line: 359, baseType: !195, size: 8)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !254, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !246, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !246, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !261, size: 32)
!261 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !262)
!262 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !247, line: 43, baseType: !263)
!263 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !264)
!264 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !237, file: !238, line: 65, baseType: !244, size: 32, offset: 32)
!266 = !DIGlobalVariableExpression(var: !267, expr: !DIExpression())
!267 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !268, file: !271, line: 71, type: !272, isLocal: true, isDefinition: true, align: 32)
!268 = distinct !DICompileUnit(language: DW_LANG_C99, file: !269, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !270, splitDebugInlining: false, nameTableKind: None)
!269 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/integration")
!270 = !{!266}
!271 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!272 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !273)
!273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !274)
!274 = !{!275, !294}
!275 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !273, file: !238, line: 60, baseType: !276, size: 32)
!276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !277, size: 32)
!277 = !DISubroutineType(types: !278)
!278 = !{!107, !279}
!279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !280, size: 32)
!280 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !281)
!281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !282)
!282 = !{!283, !284, !285, !286, !292, !293}
!283 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !281, file: !247, line: 380, baseType: !118, size: 32)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !281, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !281, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !281, file: !247, line: 386, baseType: !287, size: 32, offset: 96)
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 32)
!288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !289)
!289 = !{!290, !291}
!290 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !288, file: !247, line: 359, baseType: !195, size: 8)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !288, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !281, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !281, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !273, file: !238, line: 65, baseType: !279, size: 32, offset: 32)
!295 = !DIGlobalVariableExpression(var: !296, expr: !DIExpression())
!296 = distinct !DIGlobalVariable(name: "log_const_mpu", scope: !297, file: !304, line: 17, type: !451, isLocal: false, isDefinition: true)
!297 = distinct !DICompileUnit(language: DW_LANG_C99, file: !298, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, globals: !300, splitDebugInlining: false, nameTableKind: None)
!298 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/integration")
!299 = !{!185, !107, !152, !106}
!300 = !{!295, !301, !447}
!301 = !DIGlobalVariableExpression(var: !302, expr: !DIExpression())
!302 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !303, file: !304, line: 198, type: !433, isLocal: true, isDefinition: true)
!303 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !304, file: !304, line: 175, type: !305, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !428)
!304 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!305 = !DISubroutineType(types: !306)
!306 = !{null, !307}
!307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !308, size: 32)
!308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !310)
!309 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!310 = !{!311, !377, !390, !391, !392, !396, !397, !403, !423}
!311 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !308, file: !309, line: 247, baseType: !312, size: 384)
!312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !313)
!313 = !{!314, !342, !350, !351, !352, !363, !364, !365}
!314 = !DIDerivedType(tag: DW_TAG_member, scope: !312, file: !309, line: 60, baseType: !315, size: 64)
!315 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !312, file: !309, line: 60, size: 64, elements: !316)
!316 = !{!317, !333}
!317 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !315, file: !309, line: 61, baseType: !318, size: 64)
!318 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !320)
!319 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !321)
!321 = !{!322, !328}
!322 = !DIDerivedType(tag: DW_TAG_member, scope: !320, file: !319, line: 38, baseType: !323, size: 32)
!323 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !320, file: !319, line: 38, size: 32, elements: !324)
!324 = !{!325, !327}
!325 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !323, file: !319, line: 39, baseType: !326, size: 32)
!326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !320, size: 32)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !323, file: !319, line: 40, baseType: !326, size: 32)
!328 = !DIDerivedType(tag: DW_TAG_member, scope: !320, file: !319, line: 42, baseType: !329, size: 32, offset: 32)
!329 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !320, file: !319, line: 42, size: 32, elements: !330)
!330 = !{!331, !332}
!331 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !329, file: !319, line: 43, baseType: !326, size: 32)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !329, file: !319, line: 44, baseType: !326, size: 32)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !315, file: !309, line: 62, baseType: !334, size: 64)
!334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !336)
!335 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!336 = !{!337}
!337 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !334, file: !335, line: 50, baseType: !338, size: 64)
!338 = !DICompositeType(tag: DW_TAG_array_type, baseType: !339, size: 64, elements: !340)
!339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !334, size: 32)
!340 = !{!341}
!341 = !DISubrange(count: 2)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !312, file: !309, line: 68, baseType: !343, size: 32, offset: 64)
!343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !344, size: 32)
!344 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !346)
!345 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!346 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !347)
!347 = !{!348}
!348 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !346, file: !345, line: 232, baseType: !349, size: 64)
!349 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !320)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !312, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !312, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!352 = !DIDerivedType(tag: DW_TAG_member, scope: !312, file: !309, line: 90, baseType: !353, size: 16, offset: 112)
!353 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !312, file: !309, line: 90, size: 16, elements: !354)
!354 = !{!355, !362}
!355 = !DIDerivedType(tag: DW_TAG_member, scope: !353, file: !309, line: 91, baseType: !356, size: 16)
!356 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !353, file: !309, line: 91, size: 16, elements: !357)
!357 = !{!358, !361}
!358 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !356, file: !309, line: 96, baseType: !359, size: 8)
!359 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !360)
!360 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !356, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !353, file: !309, line: 100, baseType: !197, size: 16)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !312, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !312, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !312, file: !309, line: 131, baseType: !366, size: 192, offset: 192)
!366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !367)
!367 = !{!368, !369, !375}
!368 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !366, file: !345, line: 245, baseType: !318, size: 64)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !366, file: !345, line: 246, baseType: !370, size: 32, offset: 64)
!370 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !371)
!371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !372, size: 32)
!372 = !DISubroutineType(types: !373)
!373 = !{null, !374}
!374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !366, size: 32)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !366, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!376 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !191)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !308, file: !309, line: 250, baseType: !378, size: 288, offset: 384)
!378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !380)
!379 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!380 = !{!381, !382, !383, !384, !385, !386, !387, !388, !389}
!381 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !378, file: !379, line: 26, baseType: !152, size: 32)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !378, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !378, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !378, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !378, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !378, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !378, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !378, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !378, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !308, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !308, file: !309, line: 256, baseType: !344, size: 64, offset: 704)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !308, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!393 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 256, elements: !394)
!394 = !{!395}
!395 = !DISubrange(count: 32)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !308, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !308, file: !309, line: 300, baseType: !398, size: 96, offset: 1056)
!398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !399)
!399 = !{!400, !401, !402}
!400 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !398, file: !309, line: 153, baseType: !22, size: 32)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !398, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !398, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !308, file: !309, line: 325, baseType: !404, size: 32, offset: 1152)
!404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !405, size: 32)
!405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !407)
!406 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!407 = !{!408, !417, !418}
!408 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !405, file: !406, line: 5074, baseType: !409, size: 96)
!409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !411)
!410 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!411 = !{!412, !415, !416}
!412 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !409, file: !410, line: 57, baseType: !413, size: 32)
!413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !414, size: 32)
!414 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !410, line: 57, flags: DIFlagFwdDecl)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !409, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !409, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !405, file: !406, line: 5075, baseType: !344, size: 64, offset: 96)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !405, file: !406, line: 5076, baseType: !419, size: 32, offset: 160)
!419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !421)
!420 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!421 = !{!422}
!422 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !419, file: !420, line: 52, baseType: !22, size: 32)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !308, file: !309, line: 343, baseType: !424, size: 64, offset: 1184)
!424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !425)
!425 = !{!426, !427}
!426 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !424, file: !379, line: 63, baseType: !152, size: 32)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !424, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!428 = !{!429, !430, !431, !432}
!429 = !DILocalVariable(name: "thread", arg: 1, scope: !303, file: !304, line: 175, type: !307)
!430 = !DILocalVariable(name: "region_num", scope: !303, file: !304, line: 200, type: !195)
!431 = !DILocalVariable(name: "guard_start", scope: !303, file: !304, line: 265, type: !22)
!432 = !DILocalVariable(name: "guard_size", scope: !303, file: !304, line: 266, type: !185)
!433 = !DICompositeType(tag: DW_TAG_array_type, baseType: !434, size: 96, elements: !445)
!434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !435, line: 52, size: 96, elements: !436)
!435 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!436 = !{!437, !438, !439}
!437 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !434, file: !435, line: 53, baseType: !22, size: 32)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !434, file: !435, line: 54, baseType: !185, size: 32, offset: 32)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !434, file: !435, line: 55, baseType: !440, size: 32, offset: 64)
!440 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !441, line: 151, baseType: !442)
!441 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!442 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !441, line: 149, size: 32, elements: !443)
!443 = !{!444}
!444 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !442, file: !441, line: 150, baseType: !152, size: 32)
!445 = !{!446}
!446 = !DISubrange(count: 1)
!447 = !DIGlobalVariableExpression(var: !448, expr: !DIExpression())
!448 = distinct !DIGlobalVariable(name: "static_regions", scope: !297, file: !304, line: 62, type: !449, isLocal: true, isDefinition: true)
!449 = !DICompositeType(tag: DW_TAG_array_type, baseType: !450, size: 96, elements: !445)
!450 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !434)
!451 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !452)
!452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !203, line: 16, size: 64, elements: !453)
!453 = !{!454, !455}
!454 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !452, file: !203, line: 17, baseType: !118, size: 32)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !452, file: !203, line: 18, baseType: !195, size: 8, offset: 32)
!456 = !DIGlobalVariableExpression(var: !457, expr: !DIExpression())
!457 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !458, file: !491, line: 39, type: !195, isLocal: true, isDefinition: true)
!458 = distinct !DICompileUnit(language: DW_LANG_C99, file: !459, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !460, globals: !490, splitDebugInlining: false, nameTableKind: None)
!459 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/integration")
!460 = !{!461, !106, !107, !478, !195}
!461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !462, size: 32)
!462 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !463, line: 1226, baseType: !464)
!463 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!464 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 1213, size: 352, elements: !465)
!465 = !{!466, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477}
!466 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !464, file: !463, line: 1215, baseType: !467, size: 32)
!467 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !227)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !464, file: !463, line: 1216, baseType: !227, size: 32, offset: 32)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !464, file: !463, line: 1217, baseType: !227, size: 32, offset: 64)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !464, file: !463, line: 1218, baseType: !227, size: 32, offset: 96)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !464, file: !463, line: 1219, baseType: !227, size: 32, offset: 128)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !464, file: !463, line: 1220, baseType: !227, size: 32, offset: 160)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !464, file: !463, line: 1221, baseType: !227, size: 32, offset: 192)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !464, file: !463, line: 1222, baseType: !227, size: 32, offset: 224)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !464, file: !463, line: 1223, baseType: !227, size: 32, offset: 256)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !464, file: !463, line: 1224, baseType: !227, size: 32, offset: 288)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !464, file: !463, line: 1225, baseType: !227, size: 32, offset: 320)
!478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !479, size: 32)
!479 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !480)
!480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !481, line: 27, size: 96, elements: !482)
!481 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!482 = !{!483, !484, !485}
!483 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !480, file: !481, line: 29, baseType: !152, size: 32)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !480, file: !481, line: 31, baseType: !118, size: 32, offset: 32)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !480, file: !481, line: 37, baseType: !486, size: 32, offset: 64)
!486 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !441, line: 146, baseType: !487)
!487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !441, line: 141, size: 32, elements: !488)
!488 = !{!489}
!489 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !487, file: !441, line: 143, baseType: !152, size: 32)
!490 = !{!456}
!491 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!492 = !DIGlobalVariableExpression(var: !493, expr: !DIExpression())
!493 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !494, file: !501, line: 21, type: !213, isLocal: true, isDefinition: true)
!494 = distinct !DICompileUnit(language: DW_LANG_C99, file: !495, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !496, globals: !500, splitDebugInlining: false, nameTableKind: None)
!495 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/integration")
!496 = !{!497, !107, !106}
!497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !498, size: 32)
!498 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !499, line: 22, baseType: !107)
!499 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!500 = !{!492}
!501 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!502 = !DIGlobalVariableExpression(var: !503, expr: !DIExpression())
!503 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !504, file: !509, line: 13, type: !526, isLocal: true, isDefinition: true)
!504 = distinct !DICompileUnit(language: DW_LANG_C99, file: !505, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !506, splitDebugInlining: false, nameTableKind: None)
!505 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/integration")
!506 = !{!507, !502}
!507 = !DIGlobalVariableExpression(var: !508, expr: !DIExpression())
!508 = distinct !DIGlobalVariable(name: "mpu_config", scope: !504, file: !509, line: 37, type: !510, isLocal: false, isDefinition: true)
!509 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!510 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !511)
!511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !481, line: 41, size: 64, elements: !512)
!512 = !{!513, !514}
!513 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !511, file: !481, line: 43, baseType: !152, size: 32)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !511, file: !481, line: 45, baseType: !515, size: 32, offset: 32)
!515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !516, size: 32)
!516 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !517)
!517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !481, line: 27, size: 96, elements: !518)
!518 = !{!519, !520, !521}
!519 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !517, file: !481, line: 29, baseType: !152, size: 32)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !517, file: !481, line: 31, baseType: !118, size: 32, offset: 32)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !517, file: !481, line: 37, baseType: !522, size: 32, offset: 64)
!522 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !441, line: 146, baseType: !523)
!523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !441, line: 141, size: 32, elements: !524)
!524 = !{!525}
!525 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !523, file: !441, line: 143, baseType: !152, size: 32)
!526 = !DICompositeType(tag: DW_TAG_array_type, baseType: !516, size: 192, elements: !340)
!527 = !DIGlobalVariableExpression(var: !528, expr: !DIExpression())
!528 = distinct !DIGlobalVariable(name: "phase", scope: !529, file: !533, line: 61, type: !532, isLocal: false, isDefinition: true)
!529 = distinct !DICompileUnit(language: DW_LANG_C99, file: !530, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !531, retainedTypes: !558, globals: !568, splitDebugInlining: false, nameTableKind: None)
!530 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/testsuite/ztest/src/ztest_new.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/integration")
!531 = !{!532, !541, !549, !30, !554}
!532 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ztest_phase", file: !533, line: 40, baseType: !32, size: 32, elements: !534)
!533 = !DIFile(filename: "zephyr/subsys/testsuite/ztest/src/ztest_new.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!534 = !{!535, !536, !537, !538, !539, !540}
!535 = !DIEnumerator(name: "TEST_PHASE_SETUP", value: 0)
!536 = !DIEnumerator(name: "TEST_PHASE_BEFORE", value: 1)
!537 = !DIEnumerator(name: "TEST_PHASE_TEST", value: 2)
!538 = !DIEnumerator(name: "TEST_PHASE_AFTER", value: 3)
!539 = !DIEnumerator(name: "TEST_PHASE_TEARDOWN", value: 4)
!540 = !DIEnumerator(name: "TEST_PHASE_FRAMEWORK", value: 5)
!541 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ztest_result", file: !533, line: 226, baseType: !32, size: 32, elements: !542)
!542 = !{!543, !544, !545, !546, !547, !548}
!543 = !DIEnumerator(name: "ZTEST_RESULT_PENDING", value: 0)
!544 = !DIEnumerator(name: "ZTEST_RESULT_PASS", value: 1)
!545 = !DIEnumerator(name: "ZTEST_RESULT_FAIL", value: 2)
!546 = !DIEnumerator(name: "ZTEST_RESULT_SKIP", value: 3)
!547 = !DIEnumerator(name: "ZTEST_RESULT_SUITE_SKIP", value: 4)
!548 = !DIEnumerator(name: "ZTEST_RESULT_SUITE_FAIL", value: 5)
!549 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ztest_status", file: !533, line: 52, baseType: !32, size: 32, elements: !550)
!550 = !{!551, !552, !553}
!551 = !DIEnumerator(name: "ZTEST_STATUS_OK", value: 0)
!552 = !DIEnumerator(name: "ZTEST_STATUS_HAS_FAILURE", value: 1)
!553 = !DIEnumerator(name: "ZTEST_STATUS_CRITICAL_ERROR", value: 2)
!554 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ztest_expected_result", file: !114, line: 36, baseType: !32, size: 32, elements: !555)
!555 = !{!556, !557}
!556 = !DIEnumerator(name: "ZTEST_EXPECTED_RESULT_FAIL", value: 0)
!557 = !DIEnumerator(name: "ZTEST_EXPECTED_RESULT_SKIP", value: 1)
!558 = !{!106, !107, !185, !559, !564, !152, !566}
!559 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !560, line: 46, baseType: !561)
!560 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !562, size: 32)
!562 = !DISubroutineType(types: !563)
!563 = !{null, !106, !106, !106}
!564 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !565, line: 46, baseType: !376)
!565 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!566 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !567)
!567 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!568 = !{!527, !569, !571, !573, !582, !584, !688, !691}
!569 = !DIGlobalVariableExpression(var: !570, expr: !DIExpression())
!570 = distinct !DIGlobalVariable(name: "test_result", scope: !529, file: !533, line: 234, type: !541, isLocal: true, isDefinition: true)
!571 = !DIGlobalVariableExpression(var: !572, expr: !DIExpression())
!572 = distinct !DIGlobalVariable(name: "current_test_failed_assumption", scope: !529, file: !533, line: 294, type: !145, isLocal: true, isDefinition: true)
!573 = !DIGlobalVariableExpression(var: !574, expr: !DIExpression())
!574 = distinct !DIGlobalVariable(name: "ztest_thread_stack", scope: !529, file: !533, line: 430, type: !575, isLocal: false, isDefinition: true, align: 512)
!575 = !DICompositeType(tag: DW_TAG_array_type, baseType: !576, size: 8704, elements: !580)
!576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !577, line: 47, size: 8, elements: !578)
!577 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!578 = !{!579}
!579 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !576, file: !577, line: 48, baseType: !120, size: 8)
!580 = !{!581}
!581 = !DISubrange(count: 1088)
!582 = !DIGlobalVariableExpression(var: !583, expr: !DIExpression())
!583 = distinct !DIGlobalVariable(name: "test_status", scope: !529, file: !533, line: 63, type: !549, isLocal: true, isDefinition: true)
!584 = !DIGlobalVariableExpression(var: !585, expr: !DIExpression())
!585 = distinct !DIGlobalVariable(name: "ztest_thread", scope: !529, file: !533, line: 17, type: !586, isLocal: true, isDefinition: true)
!586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !587)
!587 = !{!588, !646, !658, !659, !660, !661, !662, !668, !683}
!588 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !586, file: !309, line: 247, baseType: !589, size: 384)
!589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !590)
!590 = !{!591, !615, !622, !623, !624, !633, !634, !635}
!591 = !DIDerivedType(tag: DW_TAG_member, scope: !589, file: !309, line: 60, baseType: !592, size: 64)
!592 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !589, file: !309, line: 60, size: 64, elements: !593)
!593 = !{!594, !609}
!594 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !592, file: !309, line: 61, baseType: !595, size: 64)
!595 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !596)
!596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !597)
!597 = !{!598, !604}
!598 = !DIDerivedType(tag: DW_TAG_member, scope: !596, file: !319, line: 38, baseType: !599, size: 32)
!599 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !596, file: !319, line: 38, size: 32, elements: !600)
!600 = !{!601, !603}
!601 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !599, file: !319, line: 39, baseType: !602, size: 32)
!602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !596, size: 32)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !599, file: !319, line: 40, baseType: !602, size: 32)
!604 = !DIDerivedType(tag: DW_TAG_member, scope: !596, file: !319, line: 42, baseType: !605, size: 32, offset: 32)
!605 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !596, file: !319, line: 42, size: 32, elements: !606)
!606 = !{!607, !608}
!607 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !605, file: !319, line: 43, baseType: !602, size: 32)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !605, file: !319, line: 44, baseType: !602, size: 32)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !592, file: !309, line: 62, baseType: !610, size: 64)
!610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !611)
!611 = !{!612}
!612 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !610, file: !335, line: 50, baseType: !613, size: 64)
!613 = !DICompositeType(tag: DW_TAG_array_type, baseType: !614, size: 64, elements: !340)
!614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !610, size: 32)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !589, file: !309, line: 68, baseType: !616, size: 32, offset: 64)
!616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !617, size: 32)
!617 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !618)
!618 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !619)
!619 = !{!620}
!620 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !618, file: !345, line: 232, baseType: !621, size: 64)
!621 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !596)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !589, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !589, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!624 = !DIDerivedType(tag: DW_TAG_member, scope: !589, file: !309, line: 90, baseType: !625, size: 16, offset: 112)
!625 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !589, file: !309, line: 90, size: 16, elements: !626)
!626 = !{!627, !632}
!627 = !DIDerivedType(tag: DW_TAG_member, scope: !625, file: !309, line: 91, baseType: !628, size: 16)
!628 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !625, file: !309, line: 91, size: 16, elements: !629)
!629 = !{!630, !631}
!630 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !628, file: !309, line: 96, baseType: !359, size: 8)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !628, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !625, file: !309, line: 100, baseType: !197, size: 16)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !589, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !589, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !589, file: !309, line: 131, baseType: !636, size: 192, offset: 192)
!636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !637)
!637 = !{!638, !639, !645}
!638 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !636, file: !345, line: 245, baseType: !595, size: 64)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !636, file: !345, line: 246, baseType: !640, size: 32, offset: 64)
!640 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !641)
!641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !642, size: 32)
!642 = !DISubroutineType(types: !643)
!643 = !{null, !644}
!644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !636, size: 32)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !636, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !586, file: !309, line: 250, baseType: !647, size: 288, offset: 384)
!647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !648)
!648 = !{!649, !650, !651, !652, !653, !654, !655, !656, !657}
!649 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !647, file: !379, line: 26, baseType: !152, size: 32)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !647, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !647, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !647, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !647, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !647, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !647, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !647, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !647, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !586, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !586, file: !309, line: 256, baseType: !617, size: 64, offset: 704)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !586, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !586, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !586, file: !309, line: 300, baseType: !663, size: 96, offset: 1056)
!663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !664)
!664 = !{!665, !666, !667}
!665 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !663, file: !309, line: 153, baseType: !22, size: 32)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !663, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !663, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !586, file: !309, line: 325, baseType: !669, size: 32, offset: 1152)
!669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !670, size: 32)
!670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !671)
!671 = !{!672, !678, !679}
!672 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !670, file: !406, line: 5074, baseType: !673, size: 96)
!673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !674)
!674 = !{!675, !676, !677}
!675 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !673, file: !410, line: 57, baseType: !413, size: 32)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !673, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !673, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !670, file: !406, line: 5075, baseType: !617, size: 64, offset: 96)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !670, file: !406, line: 5076, baseType: !680, size: 32, offset: 160)
!680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !681)
!681 = !{!682}
!682 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !680, file: !420, line: 52, baseType: !22, size: 32)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !586, file: !309, line: 343, baseType: !684, size: 64, offset: 1184)
!684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !685)
!685 = !{!686, !687}
!686 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !684, file: !379, line: 63, baseType: !152, size: 32)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !684, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!688 = !DIGlobalVariableExpression(var: !689, expr: !DIExpression())
!689 = distinct !DIGlobalVariable(name: "tc_start_time", scope: !529, file: !690, line: 95, type: !152, isLocal: true, isDefinition: true)
!690 = !DIFile(filename: "zephyr/subsys/testsuite/include/zephyr/tc_util.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!691 = !DIGlobalVariableExpression(var: !692, expr: !DIExpression())
!692 = distinct !DIGlobalVariable(name: "tc_spend_time", scope: !529, file: !690, line: 96, type: !152, isLocal: true, isDefinition: true)
!693 = !DIGlobalVariableExpression(var: !572, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!694 = !DIGlobalVariableExpression(var: !695, expr: !DIExpression())
!695 = distinct !DIGlobalVariable(name: "ztest_api", scope: !696, file: !699, line: 70, type: !700, isLocal: false, isDefinition: true)
!696 = distinct !DICompileUnit(language: DW_LANG_C99, file: !697, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, globals: !698, splitDebugInlining: false, nameTableKind: None)
!697 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/testsuite/ztest/src/ztest_defaults.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/integration")
!698 = !{!694}
!699 = !DIFile(filename: "zephyr/subsys/testsuite/ztest/src/ztest_defaults.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!700 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !701)
!701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_arch_api", file: !114, line: 499, size: 96, elements: !702)
!702 = !{!703, !704, !725}
!703 = !DIDerivedType(tag: DW_TAG_member, name: "run_all", scope: !701, file: !114, line: 500, baseType: !16, size: 32)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "should_suite_run", scope: !701, file: !114, line: 501, baseType: !705, size: 32, offset: 32)
!705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !706, size: 32)
!706 = !DISubroutineType(types: !707)
!707 = !{!145, !13, !708}
!708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !709, size: 32)
!709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_node", file: !114, line: 177, size: 224, elements: !710)
!710 = !{!711, !712, !713, !714, !715, !716, !717}
!711 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !709, file: !114, line: 179, baseType: !117, size: 32)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !709, file: !114, line: 182, baseType: !122, size: 32, offset: 32)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "before", scope: !709, file: !114, line: 185, baseType: !128, size: 32, offset: 64)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "after", scope: !709, file: !114, line: 188, baseType: !134, size: 32, offset: 96)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "teardown", scope: !709, file: !114, line: 191, baseType: !137, size: 32, offset: 128)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "predicate", scope: !709, file: !114, line: 194, baseType: !140, size: 32, offset: 160)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !709, file: !114, line: 197, baseType: !718, size: 32, offset: 192)
!718 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !719)
!719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !720, size: 32)
!720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_stats", file: !114, line: 114, size: 96, elements: !721)
!721 = !{!722, !723, !724}
!722 = !DIDerivedType(tag: DW_TAG_member, name: "run_count", scope: !720, file: !114, line: 116, baseType: !152, size: 32)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !720, file: !114, line: 118, baseType: !152, size: 32, offset: 32)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "fail_count", scope: !720, file: !114, line: 120, baseType: !152, size: 32, offset: 64)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "should_test_run", scope: !701, file: !114, line: 502, baseType: !726, size: 32, offset: 64)
!726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !727, size: 32)
!727 = !DISubroutineType(types: !728)
!728 = !{!145, !118, !118}
!729 = !DIGlobalVariableExpression(var: !730, expr: !DIExpression())
!730 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !731, file: !844, line: 72, type: !928, isLocal: true, isDefinition: true)
!731 = distinct !DICompileUnit(language: DW_LANG_C99, file: !732, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !733, retainedTypes: !830, globals: !841, splitDebugInlining: false, nameTableKind: None)
!732 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/integration")
!733 = !{!30, !734}
!734 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !223, line: 65, baseType: !107, size: 32, elements: !735)
!735 = !{!736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829}
!736 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!737 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!738 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!739 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!740 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!741 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!742 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!743 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!744 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!745 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!746 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!747 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!748 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!749 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!750 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!751 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!752 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!753 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!754 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!755 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!756 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!757 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!758 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!759 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!760 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!761 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!762 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!763 = !DIEnumerator(name: "CAN1_TX_IRQn", value: 19)
!764 = !DIEnumerator(name: "CAN1_RX0_IRQn", value: 20)
!765 = !DIEnumerator(name: "CAN1_RX1_IRQn", value: 21)
!766 = !DIEnumerator(name: "CAN1_SCE_IRQn", value: 22)
!767 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!768 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!769 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!770 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!771 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!772 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!773 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!774 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!775 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!776 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!777 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!778 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!779 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!780 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!781 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!782 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!783 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!784 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!785 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!786 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!787 = !DIEnumerator(name: "TIM8_BRK_TIM12_IRQn", value: 43)
!788 = !DIEnumerator(name: "TIM8_UP_TIM13_IRQn", value: 44)
!789 = !DIEnumerator(name: "TIM8_TRG_COM_TIM14_IRQn", value: 45)
!790 = !DIEnumerator(name: "TIM8_CC_IRQn", value: 46)
!791 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!792 = !DIEnumerator(name: "FMC_IRQn", value: 48)
!793 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!794 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!795 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!796 = !DIEnumerator(name: "UART4_IRQn", value: 52)
!797 = !DIEnumerator(name: "UART5_IRQn", value: 53)
!798 = !DIEnumerator(name: "TIM6_DAC_IRQn", value: 54)
!799 = !DIEnumerator(name: "TIM7_IRQn", value: 55)
!800 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!801 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!802 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!803 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!804 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!805 = !DIEnumerator(name: "CAN2_TX_IRQn", value: 63)
!806 = !DIEnumerator(name: "CAN2_RX0_IRQn", value: 64)
!807 = !DIEnumerator(name: "CAN2_RX1_IRQn", value: 65)
!808 = !DIEnumerator(name: "CAN2_SCE_IRQn", value: 66)
!809 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!810 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!811 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!812 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!813 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!814 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!815 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!816 = !DIEnumerator(name: "OTG_HS_EP1_OUT_IRQn", value: 74)
!817 = !DIEnumerator(name: "OTG_HS_EP1_IN_IRQn", value: 75)
!818 = !DIEnumerator(name: "OTG_HS_WKUP_IRQn", value: 76)
!819 = !DIEnumerator(name: "OTG_HS_IRQn", value: 77)
!820 = !DIEnumerator(name: "DCMI_IRQn", value: 78)
!821 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!822 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!823 = !DIEnumerator(name: "SAI1_IRQn", value: 87)
!824 = !DIEnumerator(name: "SAI2_IRQn", value: 91)
!825 = !DIEnumerator(name: "QUADSPI_IRQn", value: 92)
!826 = !DIEnumerator(name: "CEC_IRQn", value: 93)
!827 = !DIEnumerator(name: "SPDIF_RX_IRQn", value: 94)
!828 = !DIEnumerator(name: "FMPI2C1_EV_IRQn", value: 95)
!829 = !DIEnumerator(name: "FMPI2C1_ER_IRQn", value: 96)
!830 = !{!185, !107, !106, !831}
!831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !832, size: 32)
!832 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !223, line: 392, baseType: !833)
!833 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 384, size: 192, elements: !834)
!834 = !{!835, !836, !837, !838, !839, !840}
!835 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !833, file: !223, line: 386, baseType: !227, size: 32)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !833, file: !223, line: 387, baseType: !227, size: 32, offset: 32)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !833, file: !223, line: 388, baseType: !227, size: 32, offset: 64)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !833, file: !223, line: 389, baseType: !227, size: 32, offset: 96)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !833, file: !223, line: 390, baseType: !227, size: 32, offset: 128)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !833, file: !223, line: 391, baseType: !227, size: 32, offset: 160)
!841 = !{!842, !848, !864, !875, !892, !729, !894, !908, !910, !912, !914, !916, !918, !920, !922, !924, !926}
!842 = !DIGlobalVariableExpression(var: !843, expr: !DIExpression())
!843 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !731, file: !844, line: 424, type: !845, isLocal: false, isDefinition: true, align: 16)
!844 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!845 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 64, elements: !846)
!846 = !{!847}
!847 = !DISubrange(count: 4)
!848 = !DIGlobalVariableExpression(var: !849, expr: !DIExpression())
!849 = distinct !DIGlobalVariable(name: "__device_dts_ord_36", scope: !731, file: !844, line: 424, type: !850, isLocal: false, isDefinition: true, align: 32)
!850 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !851)
!851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !852)
!852 = !{!853, !854, !855, !856, !862, !863}
!853 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !851, file: !247, line: 380, baseType: !118, size: 32)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !851, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !851, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !851, file: !247, line: 386, baseType: !857, size: 32, offset: 96)
!857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !858, size: 32)
!858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !859)
!859 = !{!860, !861}
!860 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !858, file: !247, line: 359, baseType: !195, size: 8)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !858, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !851, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !851, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!864 = !DIGlobalVariableExpression(var: !865, expr: !DIExpression())
!865 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_36", scope: !731, file: !844, line: 424, type: !866, isLocal: true, isDefinition: true, align: 32)
!866 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !867)
!867 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !868)
!868 = !{!869, !874}
!869 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !867, file: !238, line: 60, baseType: !870, size: 32)
!870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !871, size: 32)
!871 = !DISubroutineType(types: !872)
!872 = !{!107, !873}
!873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !850, size: 32)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !867, file: !238, line: 65, baseType: !873, size: 32, offset: 32)
!875 = !DIGlobalVariableExpression(var: !876, expr: !DIExpression())
!876 = distinct !DIGlobalVariable(name: "exti_data", scope: !731, file: !844, line: 423, type: !877, isLocal: true, isDefinition: true)
!877 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !844, line: 107, size: 1472, elements: !878)
!878 = !{!879}
!879 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !877, file: !844, line: 109, baseType: !880, size: 1472)
!880 = !DICompositeType(tag: DW_TAG_array_type, baseType: !881, size: 1472, elements: !890)
!881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !844, line: 101, size: 64, elements: !882)
!882 = !{!883, !889}
!883 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !881, file: !844, line: 102, baseType: !884, size: 32)
!884 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !885, line: 63, baseType: !886)
!885 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !887, size: 32)
!887 = !DISubroutineType(types: !888)
!888 = !{null, !107, !106}
!889 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !881, file: !844, line: 103, baseType: !106, size: 32, offset: 32)
!890 = !{!891}
!891 = !DISubrange(count: 23)
!892 = !DIGlobalVariableExpression(var: !893, expr: !DIExpression())
!893 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_36", scope: !731, file: !844, line: 424, type: !858, isLocal: true, isDefinition: true, align: 8)
!894 = !DIGlobalVariableExpression(var: !895, expr: !DIExpression())
!895 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !896, file: !844, line: 493, type: !901, isLocal: true, isDefinition: true, align: 32)
!896 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !844, file: !844, line: 460, type: !897, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !899)
!897 = !DISubroutineType(types: !898)
!898 = !{null, !873}
!899 = !{!900}
!900 = !DILocalVariable(name: "dev", arg: 1, scope: !896, file: !844, line: 460, type: !873)
!901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !902)
!902 = !{!903, !905, !906, !907}
!903 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !901, file: !10, line: 55, baseType: !904, size: 32)
!904 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !107)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !901, file: !10, line: 57, baseType: !904, size: 32, offset: 32)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !901, file: !10, line: 59, baseType: !106, size: 32, offset: 64)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !901, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!908 = !DIGlobalVariableExpression(var: !909, expr: !DIExpression())
!909 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !896, file: !844, line: 497, type: !901, isLocal: true, isDefinition: true, align: 32)
!910 = !DIGlobalVariableExpression(var: !911, expr: !DIExpression())
!911 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !896, file: !844, line: 507, type: !901, isLocal: true, isDefinition: true, align: 32)
!912 = !DIGlobalVariableExpression(var: !913, expr: !DIExpression())
!913 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !896, file: !844, line: 512, type: !901, isLocal: true, isDefinition: true, align: 32)
!914 = !DIGlobalVariableExpression(var: !915, expr: !DIExpression())
!915 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !896, file: !844, line: 516, type: !901, isLocal: true, isDefinition: true, align: 32)
!916 = !DIGlobalVariableExpression(var: !917, expr: !DIExpression())
!917 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !896, file: !844, line: 523, type: !901, isLocal: true, isDefinition: true, align: 32)
!918 = !DIGlobalVariableExpression(var: !919, expr: !DIExpression())
!919 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !896, file: !844, line: 527, type: !901, isLocal: true, isDefinition: true, align: 32)
!920 = !DIGlobalVariableExpression(var: !921, expr: !DIExpression())
!921 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !896, file: !844, line: 581, type: !901, isLocal: true, isDefinition: true, align: 32)
!922 = !DIGlobalVariableExpression(var: !923, expr: !DIExpression())
!923 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !896, file: !844, line: 586, type: !901, isLocal: true, isDefinition: true, align: 32)
!924 = !DIGlobalVariableExpression(var: !925, expr: !DIExpression())
!925 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !896, file: !844, line: 591, type: !901, isLocal: true, isDefinition: true, align: 32)
!926 = !DIGlobalVariableExpression(var: !927, expr: !DIExpression())
!927 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !896, file: !844, line: 595, type: !901, isLocal: true, isDefinition: true, align: 32)
!928 = !DICompositeType(tag: DW_TAG_array_type, baseType: !929, size: 736, elements: !890)
!929 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !930)
!930 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !223, line: 163, baseType: !734)
!931 = !DIGlobalVariableExpression(var: !932, expr: !DIExpression())
!932 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !933, file: !938, line: 25, type: !966, isLocal: false, isDefinition: true, align: 16)
!933 = distinct !DICompileUnit(language: DW_LANG_C99, file: !934, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !935, splitDebugInlining: false, nameTableKind: None)
!934 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/integration/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/integration")
!935 = !{!936, !931, !942, !944, !946, !948, !950, !952, !954, !956, !958, !960, !962, !964}
!936 = !DIGlobalVariableExpression(var: !937, expr: !DIExpression())
!937 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !933, file: !938, line: 20, type: !939, isLocal: false, isDefinition: true, align: 16)
!938 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/integration")
!939 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 240, elements: !940)
!940 = !{!941}
!941 = !DISubrange(count: 15)
!942 = !DIGlobalVariableExpression(var: !943, expr: !DIExpression())
!943 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_96", scope: !933, file: !938, line: 32, type: !845, isLocal: false, isDefinition: true, align: 16)
!944 = !DIGlobalVariableExpression(var: !945, expr: !DIExpression())
!945 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_95", scope: !933, file: !938, line: 39, type: !845, isLocal: false, isDefinition: true, align: 16)
!946 = !DIGlobalVariableExpression(var: !947, expr: !DIExpression())
!947 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_94", scope: !933, file: !938, line: 46, type: !845, isLocal: false, isDefinition: true, align: 16)
!948 = !DIGlobalVariableExpression(var: !949, expr: !DIExpression())
!949 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_93", scope: !933, file: !938, line: 53, type: !845, isLocal: false, isDefinition: true, align: 16)
!950 = !DIGlobalVariableExpression(var: !951, expr: !DIExpression())
!951 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !933, file: !938, line: 60, type: !845, isLocal: false, isDefinition: true, align: 16)
!952 = !DIGlobalVariableExpression(var: !953, expr: !DIExpression())
!953 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_92", scope: !933, file: !938, line: 67, type: !845, isLocal: false, isDefinition: true, align: 16)
!954 = !DIGlobalVariableExpression(var: !955, expr: !DIExpression())
!955 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_91", scope: !933, file: !938, line: 74, type: !845, isLocal: false, isDefinition: true, align: 16)
!956 = !DIGlobalVariableExpression(var: !957, expr: !DIExpression())
!957 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_90", scope: !933, file: !938, line: 81, type: !845, isLocal: false, isDefinition: true, align: 16)
!958 = !DIGlobalVariableExpression(var: !959, expr: !DIExpression())
!959 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_48", scope: !933, file: !938, line: 88, type: !845, isLocal: false, isDefinition: true, align: 16)
!960 = !DIGlobalVariableExpression(var: !961, expr: !DIExpression())
!961 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !933, file: !938, line: 95, type: !845, isLocal: false, isDefinition: true, align: 16)
!962 = !DIGlobalVariableExpression(var: !963, expr: !DIExpression())
!963 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !933, file: !938, line: 102, type: !845, isLocal: false, isDefinition: true, align: 16)
!964 = !DIGlobalVariableExpression(var: !965, expr: !DIExpression())
!965 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_52", scope: !933, file: !938, line: 109, type: !845, isLocal: false, isDefinition: true, align: 16)
!966 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 48, elements: !967)
!967 = !{!968}
!968 = !DISubrange(count: 3)
!969 = !DIGlobalVariableExpression(var: !970, expr: !DIExpression())
!970 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !971, file: !1036, line: 398, type: !1069, isLocal: true, isDefinition: true)
!971 = distinct !DICompileUnit(language: DW_LANG_C99, file: !972, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !973, retainedTypes: !986, globals: !1033, splitDebugInlining: false, nameTableKind: None)
!972 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/integration")
!973 = !{!974, !30, !979}
!974 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !975, line: 197, baseType: !32, size: 32, elements: !976)
!975 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!976 = !{!977, !978}
!977 = !DIEnumerator(name: "SUCCESS", value: 0)
!978 = !DIEnumerator(name: "ERROR", value: 1)
!979 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !980, line: 44, baseType: !32, size: 32, elements: !981)
!980 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!981 = !{!982, !983, !984, !985}
!982 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!983 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!984 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!985 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!986 = !{!106, !107, !152, !987, !1026, !1032}
!987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !988, size: 32)
!988 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !223, line: 586, baseType: !989)
!989 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 550, size: 1216, elements: !990)
!990 = !{!991, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025}
!991 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !989, file: !223, line: 552, baseType: !227, size: 32)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !989, file: !223, line: 553, baseType: !227, size: 32, offset: 32)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !989, file: !223, line: 554, baseType: !227, size: 32, offset: 64)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !989, file: !223, line: 555, baseType: !227, size: 32, offset: 96)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !989, file: !223, line: 556, baseType: !227, size: 32, offset: 128)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !989, file: !223, line: 557, baseType: !227, size: 32, offset: 160)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !989, file: !223, line: 558, baseType: !227, size: 32, offset: 192)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !989, file: !223, line: 559, baseType: !152, size: 32, offset: 224)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !989, file: !223, line: 560, baseType: !227, size: 32, offset: 256)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !989, file: !223, line: 561, baseType: !227, size: 32, offset: 288)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !989, file: !223, line: 562, baseType: !1002, size: 64, offset: 320)
!1002 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 64, elements: !340)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !989, file: !223, line: 563, baseType: !227, size: 32, offset: 384)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !989, file: !223, line: 564, baseType: !227, size: 32, offset: 416)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !989, file: !223, line: 565, baseType: !227, size: 32, offset: 448)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !989, file: !223, line: 566, baseType: !152, size: 32, offset: 480)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !989, file: !223, line: 567, baseType: !227, size: 32, offset: 512)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !989, file: !223, line: 568, baseType: !227, size: 32, offset: 544)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !989, file: !223, line: 569, baseType: !1002, size: 64, offset: 576)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !989, file: !223, line: 570, baseType: !227, size: 32, offset: 640)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !989, file: !223, line: 571, baseType: !227, size: 32, offset: 672)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !989, file: !223, line: 572, baseType: !227, size: 32, offset: 704)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !989, file: !223, line: 573, baseType: !152, size: 32, offset: 736)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !989, file: !223, line: 574, baseType: !227, size: 32, offset: 768)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !989, file: !223, line: 575, baseType: !227, size: 32, offset: 800)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !989, file: !223, line: 576, baseType: !1002, size: 64, offset: 832)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !989, file: !223, line: 577, baseType: !227, size: 32, offset: 896)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !989, file: !223, line: 578, baseType: !227, size: 32, offset: 928)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !989, file: !223, line: 579, baseType: !1002, size: 64, offset: 960)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !989, file: !223, line: 580, baseType: !227, size: 32, offset: 1024)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !989, file: !223, line: 581, baseType: !227, size: 32, offset: 1056)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !989, file: !223, line: 582, baseType: !227, size: 32, offset: 1088)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !989, file: !223, line: 583, baseType: !227, size: 32, offset: 1120)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !989, file: !223, line: 584, baseType: !227, size: 32, offset: 1152)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !989, file: !223, line: 585, baseType: !227, size: 32, offset: 1184)
!1026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1027, size: 32)
!1027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1028, line: 343, size: 64, elements: !1029)
!1028 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1029 = !{!1030, !1031}
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1027, file: !1028, line: 344, baseType: !152, size: 32)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1027, file: !1028, line: 345, baseType: !152, size: 32, offset: 32)
!1032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !152, size: 32)
!1033 = !{!1034, !1040, !1056, !1067, !969}
!1034 = !DIGlobalVariableExpression(var: !1035, expr: !DIExpression())
!1035 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !971, file: !1036, line: 752, type: !1037, isLocal: false, isDefinition: true, align: 16)
!1036 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1037 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 800, elements: !1038)
!1038 = !{!1039}
!1039 = !DISubrange(count: 50)
!1040 = !DIGlobalVariableExpression(var: !1041, expr: !DIExpression())
!1041 = distinct !DIGlobalVariable(name: "__device_dts_ord_8", scope: !971, file: !1036, line: 752, type: !1042, isLocal: false, isDefinition: true, align: 32)
!1042 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1043)
!1043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !1044)
!1044 = !{!1045, !1046, !1047, !1048, !1054, !1055}
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1043, file: !247, line: 380, baseType: !118, size: 32)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1043, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1043, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1043, file: !247, line: 386, baseType: !1049, size: 32, offset: 96)
!1049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1050, size: 32)
!1050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !1051)
!1051 = !{!1052, !1053}
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1050, file: !247, line: 359, baseType: !195, size: 8)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1050, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1043, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1043, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!1056 = !DIGlobalVariableExpression(var: !1057, expr: !DIExpression())
!1057 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_8", scope: !971, file: !1036, line: 752, type: !1058, isLocal: true, isDefinition: true, align: 32)
!1058 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1059)
!1059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !1060)
!1060 = !{!1061, !1066}
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1059, file: !238, line: 60, baseType: !1062, size: 32)
!1062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1063, size: 32)
!1063 = !DISubroutineType(types: !1064)
!1064 = !{!107, !1065}
!1065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1042, size: 32)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1059, file: !238, line: 65, baseType: !1065, size: 32, offset: 32)
!1067 = !DIGlobalVariableExpression(var: !1068, expr: !DIExpression())
!1068 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_8", scope: !971, file: !1036, line: 752, type: !1050, isLocal: true, isDefinition: true, align: 8)
!1069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !980, line: 100, size: 224, elements: !1070)
!1070 = !{!1071, !1077, !1078, !1087, !1092, !1097, !1103}
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1069, file: !980, line: 101, baseType: !1072, size: 32)
!1072 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !980, line: 76, baseType: !1073)
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1074, size: 32)
!1074 = !DISubroutineType(types: !1075)
!1075 = !{!107, !1065, !1076}
!1076 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !980, line: 56, baseType: !106)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1069, file: !980, line: 102, baseType: !1072, size: 32, offset: 32)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1069, file: !980, line: 103, baseType: !1079, size: 32, offset: 64)
!1079 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !980, line: 83, baseType: !1080)
!1080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1081, size: 32)
!1081 = !DISubroutineType(types: !1082)
!1082 = !{!107, !1065, !1076, !1083, !106}
!1083 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !980, line: 72, baseType: !1084)
!1084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1085, size: 32)
!1085 = !DISubroutineType(types: !1086)
!1086 = !{null, !1065, !1076, !106}
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1069, file: !980, line: 104, baseType: !1088, size: 32, offset: 96)
!1088 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !980, line: 79, baseType: !1089)
!1089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1090, size: 32)
!1090 = !DISubroutineType(types: !1091)
!1091 = !{!107, !1065, !1076, !1032}
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1069, file: !980, line: 105, baseType: !1093, size: 32, offset: 128)
!1093 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !980, line: 88, baseType: !1094)
!1094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1095, size: 32)
!1095 = !DISubroutineType(types: !1096)
!1096 = !{!979, !1065, !1076}
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1069, file: !980, line: 106, baseType: !1098, size: 32, offset: 160)
!1098 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !980, line: 92, baseType: !1099)
!1099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1100, size: 32)
!1100 = !DISubroutineType(types: !1101)
!1101 = !{!107, !1065, !1076, !1102}
!1102 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !980, line: 64, baseType: !106)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1069, file: !980, line: 107, baseType: !1104, size: 32, offset: 192)
!1104 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !980, line: 96, baseType: !1105)
!1105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1106, size: 32)
!1106 = !DISubroutineType(types: !1107)
!1107 = !{!107, !1065, !1076, !106}
!1108 = !DIGlobalVariableExpression(var: !1109, expr: !DIExpression())
!1109 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !1110, file: !1167, line: 603, type: !1169, isLocal: true, isDefinition: true, align: 32)
!1110 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1111, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1112, globals: !1164, splitDebugInlining: false, nameTableKind: None)
!1111 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/integration")
!1112 = !{!106, !107, !1113}
!1113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1114, size: 32)
!1114 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1115)
!1115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1116, line: 336, size: 160, elements: !1117)
!1116 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1117 = !{!1118, !1138, !1142, !1146, !1159}
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1115, file: !1116, line: 365, baseType: !1119, size: 32)
!1119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1120, size: 32)
!1120 = !DISubroutineType(types: !1121)
!1121 = !{!107, !1122, !1137}
!1122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1123, size: 32)
!1123 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1124)
!1124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !1125)
!1125 = !{!1126, !1127, !1128, !1129, !1135, !1136}
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1124, file: !247, line: 380, baseType: !118, size: 32)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1124, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1124, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1124, file: !247, line: 386, baseType: !1130, size: 32, offset: 96)
!1130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1131, size: 32)
!1131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !1132)
!1132 = !{!1133, !1134}
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1131, file: !247, line: 359, baseType: !195, size: 8)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1131, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1124, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1124, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!1137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !196, size: 32)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1115, file: !1116, line: 366, baseType: !1139, size: 32, offset: 32)
!1139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1140, size: 32)
!1140 = !DISubroutineType(types: !1141)
!1141 = !{null, !1122, !196}
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1115, file: !1116, line: 374, baseType: !1143, size: 32, offset: 64)
!1143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1144, size: 32)
!1144 = !DISubroutineType(types: !1145)
!1145 = !{!107, !1122}
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1115, file: !1116, line: 377, baseType: !1147, size: 32, offset: 96)
!1147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1148, size: 32)
!1148 = !DISubroutineType(types: !1149)
!1149 = !{!107, !1122, !1150}
!1150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1151, size: 32)
!1151 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1152)
!1152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1116, line: 122, size: 64, elements: !1153)
!1153 = !{!1154, !1155, !1156, !1157, !1158}
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1152, file: !1116, line: 123, baseType: !152, size: 32)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1152, file: !1116, line: 124, baseType: !195, size: 8, offset: 32)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1152, file: !1116, line: 125, baseType: !195, size: 8, offset: 40)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1152, file: !1116, line: 126, baseType: !195, size: 8, offset: 48)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1152, file: !1116, line: 127, baseType: !195, size: 8, offset: 56)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1115, file: !1116, line: 379, baseType: !1160, size: 32, offset: 128)
!1160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1161, size: 32)
!1161 = !DISubroutineType(types: !1162)
!1162 = !{!107, !1122, !1163}
!1163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1152, size: 32)
!1164 = !{!1108, !1165}
!1165 = !DIGlobalVariableExpression(var: !1166, expr: !DIExpression())
!1166 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !1110, file: !1167, line: 38, type: !1168, isLocal: true, isDefinition: true)
!1167 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1168 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1122)
!1169 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1170)
!1170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !1171)
!1171 = !{!1172, !1173}
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1170, file: !238, line: 60, baseType: !1143, size: 32)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1170, file: !238, line: 65, baseType: !1122, size: 32, offset: 32)
!1174 = !DIGlobalVariableExpression(var: !1175, expr: !DIExpression())
!1175 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1176, file: !1347, line: 762, type: !1456, isLocal: true, isDefinition: true)
!1176 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1177, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1178, retainedTypes: !1196, globals: !1344, splitDebugInlining: false, nameTableKind: None)
!1177 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/integration")
!1178 = !{!30, !1179, !1185, !1190, !979}
!1179 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1180, line: 506, baseType: !32, size: 32, elements: !1181)
!1180 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1181 = !{!1182, !1183, !1184}
!1182 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1183 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1184 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1185 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1180, line: 512, baseType: !32, size: 32, elements: !1186)
!1186 = !{!1187, !1188, !1189}
!1187 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1188 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1189 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1190 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !885, line: 43, baseType: !32, size: 32, elements: !1191)
!1191 = !{!1192, !1193, !1194, !1195}
!1192 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1193 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1194 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1195 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1196 = !{!106, !107, !1197, !1267, !1272, !1232, !1185, !1179, !1277, !1278, !152, !1292, !1247, !193, !1304, !1305}
!1197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1198, size: 32)
!1198 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1199)
!1199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1180, line: 523, size: 288, elements: !1200)
!1200 = !{!1201, !1222, !1228, !1233, !1237, !1238, !1239, !1243, !1263}
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1199, file: !1180, line: 524, baseType: !1202, size: 32)
!1202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1203, size: 32)
!1203 = !DISubroutineType(types: !1204)
!1204 = !{!107, !1205, !1220, !1221}
!1205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1206, size: 32)
!1206 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1207)
!1207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !1208)
!1208 = !{!1209, !1210, !1211, !1212, !1218, !1219}
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1207, file: !247, line: 380, baseType: !118, size: 32)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1207, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1207, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1207, file: !247, line: 386, baseType: !1213, size: 32, offset: 96)
!1213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1214, size: 32)
!1214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !1215)
!1215 = !{!1216, !1217}
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1214, file: !247, line: 359, baseType: !195, size: 8)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1214, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1207, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1207, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!1220 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1180, line: 237, baseType: !195)
!1221 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1180, line: 257, baseType: !152)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1199, file: !1180, line: 530, baseType: !1223, size: 32, offset: 32)
!1223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1224, size: 32)
!1224 = !DISubroutineType(types: !1225)
!1225 = !{!107, !1205, !1226}
!1226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1227, size: 32)
!1227 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1180, line: 229, baseType: !152)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1199, file: !1180, line: 532, baseType: !1229, size: 32, offset: 64)
!1229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1230, size: 32)
!1230 = !DISubroutineType(types: !1231)
!1231 = !{!107, !1205, !1232, !1227}
!1232 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1180, line: 216, baseType: !152)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1199, file: !1180, line: 535, baseType: !1234, size: 32, offset: 96)
!1234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1235, size: 32)
!1235 = !DISubroutineType(types: !1236)
!1236 = !{!107, !1205, !1232}
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1199, file: !1180, line: 537, baseType: !1234, size: 32, offset: 128)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1199, file: !1180, line: 539, baseType: !1234, size: 32, offset: 160)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1199, file: !1180, line: 541, baseType: !1240, size: 32, offset: 192)
!1240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1241, size: 32)
!1241 = !DISubroutineType(types: !1242)
!1242 = !{!107, !1205, !1220, !1179, !1185}
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1199, file: !1180, line: 544, baseType: !1244, size: 32, offset: 224)
!1244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1245, size: 32)
!1245 = !DISubroutineType(types: !1246)
!1246 = !{!107, !1205, !1247, !145}
!1247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1248, size: 32)
!1248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1180, line: 478, size: 96, elements: !1249)
!1249 = !{!1250, !1257, !1262}
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1248, file: !1180, line: 482, baseType: !1251, size: 32)
!1251 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1252, line: 33, baseType: !1253)
!1252 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1252, line: 29, size: 32, elements: !1254)
!1254 = !{!1255}
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1253, file: !1252, line: 30, baseType: !1256, size: 32)
!1256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1253, size: 32)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1248, file: !1180, line: 485, baseType: !1258, size: 32, offset: 32)
!1258 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1180, line: 464, baseType: !1259)
!1259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1260, size: 32)
!1260 = !DISubroutineType(types: !1261)
!1261 = !{null, !1205, !1247, !1232}
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1248, file: !1180, line: 493, baseType: !1232, size: 32, offset: 64)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1199, file: !1180, line: 547, baseType: !1264, size: 32, offset: 256)
!1264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1265, size: 32)
!1265 = !DISubroutineType(types: !1266)
!1266 = !{!152, !1205}
!1267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1268, size: 32)
!1268 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1269)
!1269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1180, line: 428, size: 32, elements: !1270)
!1270 = !{!1271}
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1269, file: !1180, line: 434, baseType: !1232, size: 32)
!1272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1273, size: 32)
!1273 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1274)
!1274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1180, line: 441, size: 32, elements: !1275)
!1275 = !{!1276}
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1274, file: !1180, line: 447, baseType: !1232, size: 32)
!1277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1274, size: 32)
!1278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1279, size: 32)
!1279 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !223, line: 469, baseType: !1280)
!1280 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 458, size: 320, elements: !1281)
!1281 = !{!1282, !1283, !1284, !1285, !1286, !1287, !1288, !1289, !1290}
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1280, file: !223, line: 460, baseType: !227, size: 32)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1280, file: !223, line: 461, baseType: !227, size: 32, offset: 32)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1280, file: !223, line: 462, baseType: !227, size: 32, offset: 64)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1280, file: !223, line: 463, baseType: !227, size: 32, offset: 96)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1280, file: !223, line: 464, baseType: !227, size: 32, offset: 128)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1280, file: !223, line: 465, baseType: !227, size: 32, offset: 160)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1280, file: !223, line: 466, baseType: !227, size: 32, offset: 192)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1280, file: !223, line: 467, baseType: !227, size: 32, offset: 224)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1280, file: !223, line: 468, baseType: !1291, size: 64, offset: 256)
!1291 = !DICompositeType(tag: DW_TAG_array_type, baseType: !227, size: 64, elements: !340)
!1292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1293, size: 32)
!1293 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !223, line: 484, baseType: !1294)
!1294 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 475, size: 384, elements: !1295)
!1295 = !{!1296, !1297, !1298, !1300, !1301, !1302, !1303}
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1294, file: !223, line: 477, baseType: !227, size: 32)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1294, file: !223, line: 478, baseType: !227, size: 32, offset: 32)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1294, file: !223, line: 479, baseType: !1299, size: 128, offset: 64)
!1299 = !DICompositeType(tag: DW_TAG_array_type, baseType: !227, size: 128, elements: !846)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1294, file: !223, line: 480, baseType: !1002, size: 64, offset: 192)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1294, file: !223, line: 481, baseType: !227, size: 32, offset: 256)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1294, file: !223, line: 482, baseType: !1002, size: 64, offset: 288)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1294, file: !223, line: 483, baseType: !227, size: 32, offset: 352)
!1304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1076, size: 32)
!1305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1306, size: 32)
!1306 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1307)
!1307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !980, line: 100, size: 224, elements: !1308)
!1308 = !{!1309, !1314, !1315, !1324, !1329, !1334, !1339}
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1307, file: !980, line: 101, baseType: !1310, size: 32)
!1310 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !980, line: 76, baseType: !1311)
!1311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1312, size: 32)
!1312 = !DISubroutineType(types: !1313)
!1313 = !{!107, !1205, !1076}
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1307, file: !980, line: 102, baseType: !1310, size: 32, offset: 32)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1307, file: !980, line: 103, baseType: !1316, size: 32, offset: 64)
!1316 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !980, line: 83, baseType: !1317)
!1317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1318, size: 32)
!1318 = !DISubroutineType(types: !1319)
!1319 = !{!107, !1205, !1076, !1320, !106}
!1320 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !980, line: 72, baseType: !1321)
!1321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1322, size: 32)
!1322 = !DISubroutineType(types: !1323)
!1323 = !{null, !1205, !1076, !106}
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1307, file: !980, line: 104, baseType: !1325, size: 32, offset: 96)
!1325 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !980, line: 79, baseType: !1326)
!1326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1327, size: 32)
!1327 = !DISubroutineType(types: !1328)
!1328 = !{!107, !1205, !1076, !1032}
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1307, file: !980, line: 105, baseType: !1330, size: 32, offset: 128)
!1330 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !980, line: 88, baseType: !1331)
!1331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1332, size: 32)
!1332 = !DISubroutineType(types: !1333)
!1333 = !{!979, !1205, !1076}
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1307, file: !980, line: 106, baseType: !1335, size: 32, offset: 160)
!1335 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !980, line: 92, baseType: !1336)
!1336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1337, size: 32)
!1337 = !DISubroutineType(types: !1338)
!1338 = !{!107, !1205, !1076, !1102}
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1307, file: !980, line: 107, baseType: !1340, size: 32, offset: 192)
!1340 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !980, line: 96, baseType: !1341)
!1341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1342, size: 32)
!1342 = !DISubroutineType(types: !1343)
!1343 = !{!107, !1205, !1076, !106}
!1344 = !{!1345, !1351, !1353, !1363, !1365, !1367, !1369, !1371, !1373, !1375, !1380, !1382, !1384, !1386, !1388, !1390, !1392, !1394, !1396, !1398, !1400, !1402, !1404, !1406, !1408, !1422, !1424, !1426, !1428, !1430, !1432, !1434, !1436, !1438, !1440, !1442, !1444, !1446, !1448, !1450, !1174, !1452, !1454, !1467, !1469, !1471, !1473, !1475, !1477}
!1345 = !DIGlobalVariableExpression(var: !1346, expr: !DIExpression())
!1346 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_90", scope: !1176, file: !1347, line: 762, type: !1348, isLocal: false, isDefinition: true, align: 16)
!1347 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1348 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 80, elements: !1349)
!1349 = !{!1350}
!1350 = !DISubrange(count: 5)
!1351 = !DIGlobalVariableExpression(var: !1352, expr: !DIExpression())
!1352 = distinct !DIGlobalVariable(name: "__device_dts_ord_90", scope: !1176, file: !1347, line: 762, type: !1206, isLocal: false, isDefinition: true, align: 32)
!1353 = !DIGlobalVariableExpression(var: !1354, expr: !DIExpression())
!1354 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_90", scope: !1176, file: !1347, line: 762, type: !1355, isLocal: true, isDefinition: true, align: 32)
!1355 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1356)
!1356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !1357)
!1357 = !{!1358, !1362}
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1356, file: !238, line: 60, baseType: !1359, size: 32)
!1359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1360, size: 32)
!1360 = !DISubroutineType(types: !1361)
!1361 = !{!107, !1205}
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1356, file: !238, line: 65, baseType: !1205, size: 32, offset: 32)
!1363 = !DIGlobalVariableExpression(var: !1364, expr: !DIExpression())
!1364 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_91", scope: !1176, file: !1347, line: 766, type: !1348, isLocal: false, isDefinition: true, align: 16)
!1365 = !DIGlobalVariableExpression(var: !1366, expr: !DIExpression())
!1366 = distinct !DIGlobalVariable(name: "__device_dts_ord_91", scope: !1176, file: !1347, line: 766, type: !1206, isLocal: false, isDefinition: true, align: 32)
!1367 = !DIGlobalVariableExpression(var: !1368, expr: !DIExpression())
!1368 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_91", scope: !1176, file: !1347, line: 766, type: !1355, isLocal: true, isDefinition: true, align: 32)
!1369 = !DIGlobalVariableExpression(var: !1370, expr: !DIExpression())
!1370 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_92", scope: !1176, file: !1347, line: 770, type: !1348, isLocal: false, isDefinition: true, align: 16)
!1371 = !DIGlobalVariableExpression(var: !1372, expr: !DIExpression())
!1372 = distinct !DIGlobalVariable(name: "__device_dts_ord_92", scope: !1176, file: !1347, line: 770, type: !1206, isLocal: false, isDefinition: true, align: 32)
!1373 = !DIGlobalVariableExpression(var: !1374, expr: !DIExpression())
!1374 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_92", scope: !1176, file: !1347, line: 770, type: !1355, isLocal: true, isDefinition: true, align: 32)
!1375 = !DIGlobalVariableExpression(var: !1376, expr: !DIExpression())
!1376 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !1176, file: !1347, line: 774, type: !1377, isLocal: false, isDefinition: true, align: 16)
!1377 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 144, elements: !1378)
!1378 = !{!1379}
!1379 = !DISubrange(count: 9)
!1380 = !DIGlobalVariableExpression(var: !1381, expr: !DIExpression())
!1381 = distinct !DIGlobalVariable(name: "__device_dts_ord_19", scope: !1176, file: !1347, line: 774, type: !1206, isLocal: false, isDefinition: true, align: 32)
!1382 = !DIGlobalVariableExpression(var: !1383, expr: !DIExpression())
!1383 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_19", scope: !1176, file: !1347, line: 774, type: !1355, isLocal: true, isDefinition: true, align: 32)
!1384 = !DIGlobalVariableExpression(var: !1385, expr: !DIExpression())
!1385 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_93", scope: !1176, file: !1347, line: 778, type: !1348, isLocal: false, isDefinition: true, align: 16)
!1386 = !DIGlobalVariableExpression(var: !1387, expr: !DIExpression())
!1387 = distinct !DIGlobalVariable(name: "__device_dts_ord_93", scope: !1176, file: !1347, line: 778, type: !1206, isLocal: false, isDefinition: true, align: 32)
!1388 = !DIGlobalVariableExpression(var: !1389, expr: !DIExpression())
!1389 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_93", scope: !1176, file: !1347, line: 778, type: !1355, isLocal: true, isDefinition: true, align: 32)
!1390 = !DIGlobalVariableExpression(var: !1391, expr: !DIExpression())
!1391 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_94", scope: !1176, file: !1347, line: 782, type: !1348, isLocal: false, isDefinition: true, align: 16)
!1392 = !DIGlobalVariableExpression(var: !1393, expr: !DIExpression())
!1393 = distinct !DIGlobalVariable(name: "__device_dts_ord_94", scope: !1176, file: !1347, line: 782, type: !1206, isLocal: false, isDefinition: true, align: 32)
!1394 = !DIGlobalVariableExpression(var: !1395, expr: !DIExpression())
!1395 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_94", scope: !1176, file: !1347, line: 782, type: !1355, isLocal: true, isDefinition: true, align: 32)
!1396 = !DIGlobalVariableExpression(var: !1397, expr: !DIExpression())
!1397 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_95", scope: !1176, file: !1347, line: 786, type: !1348, isLocal: false, isDefinition: true, align: 16)
!1398 = !DIGlobalVariableExpression(var: !1399, expr: !DIExpression())
!1399 = distinct !DIGlobalVariable(name: "__device_dts_ord_95", scope: !1176, file: !1347, line: 786, type: !1206, isLocal: false, isDefinition: true, align: 32)
!1400 = !DIGlobalVariableExpression(var: !1401, expr: !DIExpression())
!1401 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_95", scope: !1176, file: !1347, line: 786, type: !1355, isLocal: true, isDefinition: true, align: 32)
!1402 = !DIGlobalVariableExpression(var: !1403, expr: !DIExpression())
!1403 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_96", scope: !1176, file: !1347, line: 790, type: !1348, isLocal: false, isDefinition: true, align: 16)
!1404 = !DIGlobalVariableExpression(var: !1405, expr: !DIExpression())
!1405 = distinct !DIGlobalVariable(name: "__device_dts_ord_96", scope: !1176, file: !1347, line: 790, type: !1206, isLocal: false, isDefinition: true, align: 32)
!1406 = !DIGlobalVariableExpression(var: !1407, expr: !DIExpression())
!1407 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_96", scope: !1176, file: !1347, line: 790, type: !1355, isLocal: true, isDefinition: true, align: 32)
!1408 = !DIGlobalVariableExpression(var: !1409, expr: !DIExpression())
!1409 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1176, file: !1347, line: 762, type: !1410, isLocal: true, isDefinition: true)
!1410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1411, line: 237, size: 128, elements: !1412)
!1411 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1412 = !{!1413, !1414, !1415}
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1410, file: !1411, line: 239, baseType: !1274, size: 32)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1410, file: !1411, line: 241, baseType: !1205, size: 32, offset: 32)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1410, file: !1411, line: 243, baseType: !1416, size: 64, offset: 64)
!1416 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1252, line: 40, baseType: !1417)
!1417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1252, line: 35, size: 64, elements: !1418)
!1418 = !{!1419, !1421}
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1417, file: !1252, line: 36, baseType: !1420, size: 32)
!1420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1251, size: 32)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1417, file: !1252, line: 37, baseType: !1420, size: 32, offset: 32)
!1422 = !DIGlobalVariableExpression(var: !1423, expr: !DIExpression())
!1423 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_90", scope: !1176, file: !1347, line: 762, type: !1214, isLocal: true, isDefinition: true, align: 8)
!1424 = !DIGlobalVariableExpression(var: !1425, expr: !DIExpression())
!1425 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1176, file: !1347, line: 766, type: !1410, isLocal: true, isDefinition: true)
!1426 = !DIGlobalVariableExpression(var: !1427, expr: !DIExpression())
!1427 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_91", scope: !1176, file: !1347, line: 766, type: !1214, isLocal: true, isDefinition: true, align: 8)
!1428 = !DIGlobalVariableExpression(var: !1429, expr: !DIExpression())
!1429 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1176, file: !1347, line: 770, type: !1410, isLocal: true, isDefinition: true)
!1430 = !DIGlobalVariableExpression(var: !1431, expr: !DIExpression())
!1431 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_92", scope: !1176, file: !1347, line: 770, type: !1214, isLocal: true, isDefinition: true, align: 8)
!1432 = !DIGlobalVariableExpression(var: !1433, expr: !DIExpression())
!1433 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1176, file: !1347, line: 774, type: !1410, isLocal: true, isDefinition: true)
!1434 = !DIGlobalVariableExpression(var: !1435, expr: !DIExpression())
!1435 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_19", scope: !1176, file: !1347, line: 774, type: !1214, isLocal: true, isDefinition: true, align: 8)
!1436 = !DIGlobalVariableExpression(var: !1437, expr: !DIExpression())
!1437 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1176, file: !1347, line: 778, type: !1410, isLocal: true, isDefinition: true)
!1438 = !DIGlobalVariableExpression(var: !1439, expr: !DIExpression())
!1439 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_93", scope: !1176, file: !1347, line: 778, type: !1214, isLocal: true, isDefinition: true, align: 8)
!1440 = !DIGlobalVariableExpression(var: !1441, expr: !DIExpression())
!1441 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1176, file: !1347, line: 782, type: !1410, isLocal: true, isDefinition: true)
!1442 = !DIGlobalVariableExpression(var: !1443, expr: !DIExpression())
!1443 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_94", scope: !1176, file: !1347, line: 782, type: !1214, isLocal: true, isDefinition: true, align: 8)
!1444 = !DIGlobalVariableExpression(var: !1445, expr: !DIExpression())
!1445 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1176, file: !1347, line: 786, type: !1410, isLocal: true, isDefinition: true)
!1446 = !DIGlobalVariableExpression(var: !1447, expr: !DIExpression())
!1447 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_95", scope: !1176, file: !1347, line: 786, type: !1214, isLocal: true, isDefinition: true, align: 8)
!1448 = !DIGlobalVariableExpression(var: !1449, expr: !DIExpression())
!1449 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1176, file: !1347, line: 790, type: !1410, isLocal: true, isDefinition: true)
!1450 = !DIGlobalVariableExpression(var: !1451, expr: !DIExpression())
!1451 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_96", scope: !1176, file: !1347, line: 790, type: !1214, isLocal: true, isDefinition: true, align: 8)
!1452 = !DIGlobalVariableExpression(var: !1453, expr: !DIExpression())
!1453 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1176, file: !1347, line: 656, type: !1198, isLocal: true, isDefinition: true)
!1454 = !DIGlobalVariableExpression(var: !1455, expr: !DIExpression())
!1455 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1176, file: !1347, line: 766, type: !1456, isLocal: true, isDefinition: true)
!1456 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1457)
!1457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1411, line: 224, size: 160, elements: !1458)
!1458 = !{!1459, !1460, !1461, !1462}
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1457, file: !1411, line: 226, baseType: !1269, size: 32)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1457, file: !1411, line: 228, baseType: !1032, size: 32, offset: 32)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1457, file: !1411, line: 230, baseType: !107, size: 32, offset: 64)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1457, file: !1411, line: 231, baseType: !1463, size: 64, offset: 96)
!1463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1028, line: 343, size: 64, elements: !1464)
!1464 = !{!1465, !1466}
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1463, file: !1028, line: 344, baseType: !152, size: 32)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1463, file: !1028, line: 345, baseType: !152, size: 32, offset: 32)
!1467 = !DIGlobalVariableExpression(var: !1468, expr: !DIExpression())
!1468 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1176, file: !1347, line: 770, type: !1456, isLocal: true, isDefinition: true)
!1469 = !DIGlobalVariableExpression(var: !1470, expr: !DIExpression())
!1470 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1176, file: !1347, line: 774, type: !1456, isLocal: true, isDefinition: true)
!1471 = !DIGlobalVariableExpression(var: !1472, expr: !DIExpression())
!1472 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1176, file: !1347, line: 778, type: !1456, isLocal: true, isDefinition: true)
!1473 = !DIGlobalVariableExpression(var: !1474, expr: !DIExpression())
!1474 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1176, file: !1347, line: 782, type: !1456, isLocal: true, isDefinition: true)
!1475 = !DIGlobalVariableExpression(var: !1476, expr: !DIExpression())
!1476 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1176, file: !1347, line: 786, type: !1456, isLocal: true, isDefinition: true)
!1477 = !DIGlobalVariableExpression(var: !1478, expr: !DIExpression())
!1478 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1176, file: !1347, line: 790, type: !1456, isLocal: true, isDefinition: true)
!1479 = !DIGlobalVariableExpression(var: !1480, expr: !DIExpression())
!1480 = distinct !DIGlobalVariable(name: "log_const_uart_stm32", scope: !1481, file: !1620, line: 44, type: !1758, isLocal: false, isDefinition: true)
!1481 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1482, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1483, retainedTypes: !1516, globals: !1617, splitDebugInlining: false, nameTableKind: None)
!1482 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/integration")
!1483 = !{!30, !1484, !1491, !1498, !1505, !1511, !979}
!1484 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !1116, line: 47, baseType: !32, size: 32, elements: !1485)
!1485 = !{!1486, !1487, !1488, !1489, !1490}
!1486 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1487 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1488 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1489 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1490 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1491 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !1116, line: 75, baseType: !32, size: 32, elements: !1492)
!1492 = !{!1493, !1494, !1495, !1496, !1497}
!1493 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1494 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1495 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1496 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1497 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1498 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !1116, line: 92, baseType: !32, size: 32, elements: !1499)
!1499 = !{!1500, !1501, !1502, !1503, !1504}
!1500 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1501 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1502 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1503 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1504 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1505 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !1116, line: 84, baseType: !32, size: 32, elements: !1506)
!1506 = !{!1507, !1508, !1509, !1510}
!1507 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1508 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1509 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1510 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1511 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !1116, line: 107, baseType: !32, size: 32, elements: !1512)
!1512 = !{!1513, !1514, !1515}
!1513 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1514 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1515 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1516 = !{!106, !107, !1517, !196, !195, !1566, !152, !1076, !1577, !197, !566, !1616}
!1517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1518, size: 32)
!1518 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1519)
!1519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1116, line: 336, size: 160, elements: !1520)
!1520 = !{!1521, !1540, !1544, !1548, !1561}
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1519, file: !1116, line: 365, baseType: !1522, size: 32)
!1522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1523, size: 32)
!1523 = !DISubroutineType(types: !1524)
!1524 = !{!107, !1525, !1137}
!1525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1526, size: 32)
!1526 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1527)
!1527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !1528)
!1528 = !{!1529, !1530, !1531, !1532, !1538, !1539}
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1527, file: !247, line: 380, baseType: !118, size: 32)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1527, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1527, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1527, file: !247, line: 386, baseType: !1533, size: 32, offset: 96)
!1533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1534, size: 32)
!1534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !1535)
!1535 = !{!1536, !1537}
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1534, file: !247, line: 359, baseType: !195, size: 8)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1534, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1527, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1527, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1519, file: !1116, line: 366, baseType: !1541, size: 32, offset: 32)
!1541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1542, size: 32)
!1542 = !DISubroutineType(types: !1543)
!1543 = !{null, !1525, !196}
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1519, file: !1116, line: 374, baseType: !1545, size: 32, offset: 64)
!1545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1546, size: 32)
!1546 = !DISubroutineType(types: !1547)
!1547 = !{!107, !1525}
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1519, file: !1116, line: 377, baseType: !1549, size: 32, offset: 96)
!1549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1550, size: 32)
!1550 = !DISubroutineType(types: !1551)
!1551 = !{!107, !1525, !1552}
!1552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1553, size: 32)
!1553 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1554)
!1554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1116, line: 122, size: 64, elements: !1555)
!1555 = !{!1556, !1557, !1558, !1559, !1560}
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1554, file: !1116, line: 123, baseType: !152, size: 32)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1554, file: !1116, line: 124, baseType: !195, size: 8, offset: 32)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1554, file: !1116, line: 125, baseType: !195, size: 8, offset: 40)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1554, file: !1116, line: 126, baseType: !195, size: 8, offset: 48)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1554, file: !1116, line: 127, baseType: !195, size: 8, offset: 56)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1519, file: !1116, line: 379, baseType: !1562, size: 32, offset: 128)
!1562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1563, size: 32)
!1563 = !DISubroutineType(types: !1564)
!1564 = !{!107, !1525, !1565}
!1565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1554, size: 32)
!1566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1567, size: 32)
!1567 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !223, line: 783, baseType: !1568)
!1568 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 774, size: 224, elements: !1569)
!1569 = !{!1570, !1571, !1572, !1573, !1574, !1575, !1576}
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1568, file: !223, line: 776, baseType: !227, size: 32)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1568, file: !223, line: 777, baseType: !227, size: 32, offset: 32)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1568, file: !223, line: 778, baseType: !227, size: 32, offset: 64)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1568, file: !223, line: 779, baseType: !227, size: 32, offset: 96)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1568, file: !223, line: 780, baseType: !227, size: 32, offset: 128)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1568, file: !223, line: 781, baseType: !227, size: 32, offset: 160)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1568, file: !223, line: 782, baseType: !227, size: 32, offset: 192)
!1577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1578, size: 32)
!1578 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1579)
!1579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !980, line: 100, size: 224, elements: !1580)
!1580 = !{!1581, !1586, !1587, !1596, !1601, !1606, !1611}
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1579, file: !980, line: 101, baseType: !1582, size: 32)
!1582 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !980, line: 76, baseType: !1583)
!1583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1584, size: 32)
!1584 = !DISubroutineType(types: !1585)
!1585 = !{!107, !1525, !1076}
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1579, file: !980, line: 102, baseType: !1582, size: 32, offset: 32)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1579, file: !980, line: 103, baseType: !1588, size: 32, offset: 64)
!1588 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !980, line: 83, baseType: !1589)
!1589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1590, size: 32)
!1590 = !DISubroutineType(types: !1591)
!1591 = !{!107, !1525, !1076, !1592, !106}
!1592 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !980, line: 72, baseType: !1593)
!1593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1594, size: 32)
!1594 = !DISubroutineType(types: !1595)
!1595 = !{null, !1525, !1076, !106}
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1579, file: !980, line: 104, baseType: !1597, size: 32, offset: 96)
!1597 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !980, line: 79, baseType: !1598)
!1598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1599, size: 32)
!1599 = !DISubroutineType(types: !1600)
!1600 = !{!107, !1525, !1076, !1032}
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1579, file: !980, line: 105, baseType: !1602, size: 32, offset: 128)
!1602 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !980, line: 88, baseType: !1603)
!1603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1604, size: 32)
!1604 = !DISubroutineType(types: !1605)
!1605 = !{!979, !1525, !1076}
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1579, file: !980, line: 106, baseType: !1607, size: 32, offset: 160)
!1607 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !980, line: 92, baseType: !1608)
!1608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1609, size: 32)
!1609 = !DISubroutineType(types: !1610)
!1610 = !{!107, !1525, !1076, !1102}
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1579, file: !980, line: 107, baseType: !1612, size: 32, offset: 192)
!1612 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !980, line: 96, baseType: !1613)
!1613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1614, size: 32)
!1614 = !DISubroutineType(types: !1615)
!1615 = !{!107, !1525, !1076, !106}
!1616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !227, size: 32)
!1617 = !{!1479, !1618, !1624, !1626, !1633, !1635, !1637, !1639, !1641, !1643, !1645, !1647, !1649, !1651, !1653, !1655, !1657, !1659, !1703, !1706, !1708, !1711, !1714, !1716, !1722, !1724, !1726, !1728, !1730, !1732, !1734, !1736, !1738, !1740, !1742, !1744, !1746, !1748, !1750, !1752, !1754, !1756}
!1618 = !DIGlobalVariableExpression(var: !1619, expr: !DIExpression())
!1619 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_52", scope: !1481, file: !1620, line: 1914, type: !1621, isLocal: false, isDefinition: true, align: 16)
!1620 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1621 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 128, elements: !1622)
!1622 = !{!1623}
!1623 = !DISubrange(count: 8)
!1624 = !DIGlobalVariableExpression(var: !1625, expr: !DIExpression())
!1625 = distinct !DIGlobalVariable(name: "__device_dts_ord_52", scope: !1481, file: !1620, line: 1914, type: !1526, isLocal: false, isDefinition: true, align: 32)
!1626 = !DIGlobalVariableExpression(var: !1627, expr: !DIExpression())
!1627 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_52", scope: !1481, file: !1620, line: 1914, type: !1628, isLocal: true, isDefinition: true, align: 32)
!1628 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1629)
!1629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !1630)
!1630 = !{!1631, !1632}
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1629, file: !238, line: 60, baseType: !1545, size: 32)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1629, file: !238, line: 65, baseType: !1525, size: 32, offset: 32)
!1633 = !DIGlobalVariableExpression(var: !1634, expr: !DIExpression())
!1634 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !1481, file: !1620, line: 1914, type: !1621, isLocal: false, isDefinition: true, align: 16)
!1635 = !DIGlobalVariableExpression(var: !1636, expr: !DIExpression())
!1636 = distinct !DIGlobalVariable(name: "__device_dts_ord_42", scope: !1481, file: !1620, line: 1914, type: !1526, isLocal: false, isDefinition: true, align: 32)
!1637 = !DIGlobalVariableExpression(var: !1638, expr: !DIExpression())
!1638 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_42", scope: !1481, file: !1620, line: 1914, type: !1628, isLocal: true, isDefinition: true, align: 32)
!1639 = !DIGlobalVariableExpression(var: !1640, expr: !DIExpression())
!1640 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !1481, file: !1620, line: 1914, type: !1621, isLocal: false, isDefinition: true, align: 16)
!1641 = !DIGlobalVariableExpression(var: !1642, expr: !DIExpression())
!1642 = distinct !DIGlobalVariable(name: "__device_dts_ord_45", scope: !1481, file: !1620, line: 1914, type: !1526, isLocal: false, isDefinition: true, align: 32)
!1643 = !DIGlobalVariableExpression(var: !1644, expr: !DIExpression())
!1644 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_45", scope: !1481, file: !1620, line: 1914, type: !1628, isLocal: true, isDefinition: true, align: 32)
!1645 = !DIGlobalVariableExpression(var: !1646, expr: !DIExpression())
!1646 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_48", scope: !1481, file: !1620, line: 1914, type: !1621, isLocal: false, isDefinition: true, align: 16)
!1647 = !DIGlobalVariableExpression(var: !1648, expr: !DIExpression())
!1648 = distinct !DIGlobalVariable(name: "__device_dts_ord_48", scope: !1481, file: !1620, line: 1914, type: !1526, isLocal: false, isDefinition: true, align: 32)
!1649 = !DIGlobalVariableExpression(var: !1650, expr: !DIExpression())
!1650 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_48", scope: !1481, file: !1620, line: 1914, type: !1628, isLocal: true, isDefinition: true, align: 32)
!1651 = !DIGlobalVariableExpression(var: !1652, expr: !DIExpression())
!1652 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_52", scope: !1481, file: !1620, line: 1914, type: !1534, isLocal: true, isDefinition: true, align: 8)
!1653 = !DIGlobalVariableExpression(var: !1654, expr: !DIExpression())
!1654 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_42", scope: !1481, file: !1620, line: 1914, type: !1534, isLocal: true, isDefinition: true, align: 8)
!1655 = !DIGlobalVariableExpression(var: !1656, expr: !DIExpression())
!1656 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_45", scope: !1481, file: !1620, line: 1914, type: !1534, isLocal: true, isDefinition: true, align: 8)
!1657 = !DIGlobalVariableExpression(var: !1658, expr: !DIExpression())
!1658 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_48", scope: !1481, file: !1620, line: 1914, type: !1534, isLocal: true, isDefinition: true, align: 8)
!1659 = !DIGlobalVariableExpression(var: !1660, expr: !DIExpression())
!1660 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1481, file: !1620, line: 1914, type: !1661, isLocal: true, isDefinition: true)
!1661 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1662)
!1662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1663, line: 22, size: 224, elements: !1664)
!1663 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1664 = !{!1665, !1666, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680}
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1662, file: !1663, line: 24, baseType: !1566, size: 32)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1662, file: !1663, line: 26, baseType: !1667, size: 32, offset: 32)
!1667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1668, size: 32)
!1668 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1669)
!1669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1028, line: 343, size: 64, elements: !1670)
!1670 = !{!1671, !1672}
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1669, file: !1028, line: 344, baseType: !152, size: 32)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1669, file: !1028, line: 345, baseType: !152, size: 32, offset: 32)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1662, file: !1663, line: 28, baseType: !185, size: 32, offset: 64)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1662, file: !1663, line: 30, baseType: !145, size: 8, offset: 96)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1662, file: !1663, line: 32, baseType: !107, size: 32, offset: 128)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1662, file: !1663, line: 34, baseType: !145, size: 8, offset: 160)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1662, file: !1663, line: 36, baseType: !145, size: 8, offset: 168)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1662, file: !1663, line: 38, baseType: !145, size: 8, offset: 176)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1662, file: !1663, line: 40, baseType: !145, size: 8, offset: 184)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1662, file: !1663, line: 41, baseType: !1681, size: 32, offset: 192)
!1681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1682, size: 32)
!1682 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1683)
!1683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1684, line: 60, size: 64, elements: !1685)
!1684 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1685 = !{!1686, !1702}
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1683, file: !1684, line: 69, baseType: !1687, size: 32)
!1687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1688, size: 32)
!1688 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1689)
!1689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1684, line: 50, size: 64, elements: !1690)
!1690 = !{!1691, !1700, !1701}
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1689, file: !1684, line: 52, baseType: !1692, size: 32)
!1692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1693, size: 32)
!1693 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1694)
!1694 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1695, line: 37, baseType: !1696)
!1695 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1695, line: 32, size: 64, elements: !1697)
!1697 = !{!1698, !1699}
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1696, file: !1695, line: 34, baseType: !152, size: 32)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1696, file: !1695, line: 36, baseType: !152, size: 32, offset: 32)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1689, file: !1684, line: 54, baseType: !195, size: 8, offset: 32)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1689, file: !1684, line: 56, baseType: !195, size: 8, offset: 40)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1683, file: !1684, line: 71, baseType: !195, size: 8, offset: 32)
!1703 = !DIGlobalVariableExpression(var: !1704, expr: !DIExpression())
!1704 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1481, file: !1620, line: 1914, type: !1705, isLocal: true, isDefinition: true)
!1705 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1668, size: 64, elements: !445)
!1706 = !DIGlobalVariableExpression(var: !1707, expr: !DIExpression())
!1707 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_52", scope: !1481, file: !1620, line: 1914, type: !1682, isLocal: true, isDefinition: true)
!1708 = !DIGlobalVariableExpression(var: !1709, expr: !DIExpression())
!1709 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_52", scope: !1481, file: !1620, line: 1914, type: !1710, isLocal: true, isDefinition: true)
!1710 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1688, size: 64, elements: !445)
!1711 = !DIGlobalVariableExpression(var: !1712, expr: !DIExpression())
!1712 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_52", scope: !1481, file: !1620, line: 1914, type: !1713, isLocal: true, isDefinition: true)
!1713 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1693, size: 128, elements: !340)
!1714 = !DIGlobalVariableExpression(var: !1715, expr: !DIExpression())
!1715 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1481, file: !1620, line: 1539, type: !1518, isLocal: true, isDefinition: true)
!1716 = !DIGlobalVariableExpression(var: !1717, expr: !DIExpression())
!1717 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1481, file: !1620, line: 1914, type: !1718, isLocal: true, isDefinition: true)
!1718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1663, line: 74, size: 64, elements: !1719)
!1719 = !{!1720, !1721}
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1718, file: !1663, line: 76, baseType: !152, size: 32)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1718, file: !1663, line: 78, baseType: !1525, size: 32, offset: 32)
!1722 = !DIGlobalVariableExpression(var: !1723, expr: !DIExpression())
!1723 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_1", scope: !1481, file: !1620, line: 1914, type: !1661, isLocal: true, isDefinition: true)
!1724 = !DIGlobalVariableExpression(var: !1725, expr: !DIExpression())
!1725 = distinct !DIGlobalVariable(name: "pclken_1", scope: !1481, file: !1620, line: 1914, type: !1705, isLocal: true, isDefinition: true)
!1726 = !DIGlobalVariableExpression(var: !1727, expr: !DIExpression())
!1727 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_42", scope: !1481, file: !1620, line: 1914, type: !1682, isLocal: true, isDefinition: true)
!1728 = !DIGlobalVariableExpression(var: !1729, expr: !DIExpression())
!1729 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_42", scope: !1481, file: !1620, line: 1914, type: !1710, isLocal: true, isDefinition: true)
!1730 = !DIGlobalVariableExpression(var: !1731, expr: !DIExpression())
!1731 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_42", scope: !1481, file: !1620, line: 1914, type: !1713, isLocal: true, isDefinition: true)
!1732 = !DIGlobalVariableExpression(var: !1733, expr: !DIExpression())
!1733 = distinct !DIGlobalVariable(name: "uart_stm32_data_1", scope: !1481, file: !1620, line: 1914, type: !1718, isLocal: true, isDefinition: true)
!1734 = !DIGlobalVariableExpression(var: !1735, expr: !DIExpression())
!1735 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_2", scope: !1481, file: !1620, line: 1914, type: !1661, isLocal: true, isDefinition: true)
!1736 = !DIGlobalVariableExpression(var: !1737, expr: !DIExpression())
!1737 = distinct !DIGlobalVariable(name: "pclken_2", scope: !1481, file: !1620, line: 1914, type: !1705, isLocal: true, isDefinition: true)
!1738 = !DIGlobalVariableExpression(var: !1739, expr: !DIExpression())
!1739 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_45", scope: !1481, file: !1620, line: 1914, type: !1682, isLocal: true, isDefinition: true)
!1740 = !DIGlobalVariableExpression(var: !1741, expr: !DIExpression())
!1741 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_45", scope: !1481, file: !1620, line: 1914, type: !1710, isLocal: true, isDefinition: true)
!1742 = !DIGlobalVariableExpression(var: !1743, expr: !DIExpression())
!1743 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_45", scope: !1481, file: !1620, line: 1914, type: !1713, isLocal: true, isDefinition: true)
!1744 = !DIGlobalVariableExpression(var: !1745, expr: !DIExpression())
!1745 = distinct !DIGlobalVariable(name: "uart_stm32_data_2", scope: !1481, file: !1620, line: 1914, type: !1718, isLocal: true, isDefinition: true)
!1746 = !DIGlobalVariableExpression(var: !1747, expr: !DIExpression())
!1747 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_3", scope: !1481, file: !1620, line: 1914, type: !1661, isLocal: true, isDefinition: true)
!1748 = !DIGlobalVariableExpression(var: !1749, expr: !DIExpression())
!1749 = distinct !DIGlobalVariable(name: "pclken_3", scope: !1481, file: !1620, line: 1914, type: !1705, isLocal: true, isDefinition: true)
!1750 = !DIGlobalVariableExpression(var: !1751, expr: !DIExpression())
!1751 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_48", scope: !1481, file: !1620, line: 1914, type: !1682, isLocal: true, isDefinition: true)
!1752 = !DIGlobalVariableExpression(var: !1753, expr: !DIExpression())
!1753 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_48", scope: !1481, file: !1620, line: 1914, type: !1710, isLocal: true, isDefinition: true)
!1754 = !DIGlobalVariableExpression(var: !1755, expr: !DIExpression())
!1755 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_48", scope: !1481, file: !1620, line: 1914, type: !1713, isLocal: true, isDefinition: true)
!1756 = !DIGlobalVariableExpression(var: !1757, expr: !DIExpression())
!1757 = distinct !DIGlobalVariable(name: "uart_stm32_data_3", scope: !1481, file: !1620, line: 1914, type: !1718, isLocal: true, isDefinition: true)
!1758 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1759)
!1759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !203, line: 16, size: 64, elements: !1760)
!1760 = !{!1761, !1762}
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1759, file: !203, line: 17, baseType: !118, size: 32)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1759, file: !203, line: 18, baseType: !195, size: 8, offset: 32)
!1763 = !DIGlobalVariableExpression(var: !1764, expr: !DIExpression())
!1764 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1765, file: !1843, line: 65, type: !227, isLocal: true, isDefinition: true)
!1765 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1766, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1767, retainedTypes: !1768, globals: !1840, splitDebugInlining: false, nameTableKind: None)
!1766 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/integration")
!1767 = !{!734}
!1768 = !{!564, !1769, !904, !195, !152, !1777, !1808}
!1769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1770, size: 32)
!1770 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !463, line: 770, baseType: !1771)
!1771 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 764, size: 128, elements: !1772)
!1772 = !{!1773, !1774, !1775, !1776}
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1771, file: !463, line: 766, baseType: !227, size: 32)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1771, file: !463, line: 767, baseType: !227, size: 32, offset: 32)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1771, file: !463, line: 768, baseType: !227, size: 32, offset: 64)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1771, file: !463, line: 769, baseType: !467, size: 32, offset: 96)
!1777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1778, size: 32)
!1778 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !463, line: 426, baseType: !1779)
!1779 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 411, size: 28704, elements: !1780)
!1780 = !{!1781, !1783, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1798, !1803, !1807}
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1779, file: !463, line: 413, baseType: !1782, size: 256)
!1782 = !DICompositeType(tag: DW_TAG_array_type, baseType: !227, size: 256, elements: !1622)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1779, file: !463, line: 414, baseType: !1784, size: 768, offset: 256)
!1784 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 768, elements: !1785)
!1785 = !{!1786}
!1786 = !DISubrange(count: 24)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1779, file: !463, line: 415, baseType: !1782, size: 256, offset: 1024)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1779, file: !463, line: 416, baseType: !1784, size: 768, offset: 1280)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1779, file: !463, line: 417, baseType: !1782, size: 256, offset: 2048)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1779, file: !463, line: 418, baseType: !1784, size: 768, offset: 2304)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1779, file: !463, line: 419, baseType: !1782, size: 256, offset: 3072)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1779, file: !463, line: 420, baseType: !1784, size: 768, offset: 3328)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1779, file: !463, line: 421, baseType: !1782, size: 256, offset: 4096)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1779, file: !463, line: 422, baseType: !1795, size: 1792, offset: 4352)
!1795 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 1792, elements: !1796)
!1796 = !{!1797}
!1797 = !DISubrange(count: 56)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1779, file: !463, line: 423, baseType: !1799, size: 1920, offset: 6144)
!1799 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1800, size: 1920, elements: !1801)
!1800 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !195)
!1801 = !{!1802}
!1802 = !DISubrange(count: 240)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1779, file: !463, line: 424, baseType: !1804, size: 20608, offset: 8064)
!1804 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 20608, elements: !1805)
!1805 = !{!1806}
!1806 = !DISubrange(count: 644)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1779, file: !463, line: 425, baseType: !227, size: 32, offset: 28672)
!1808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1809, size: 32)
!1809 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !1810)
!1810 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !1811)
!1811 = !{!1812, !1813, !1814, !1815, !1816, !1817, !1818, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1831, !1832, !1833, !1835, !1837, !1839}
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1810, file: !463, line: 447, baseType: !467, size: 32)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1810, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1810, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1810, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1810, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1810, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1810, file: !463, line: 453, baseType: !1819, size: 96, offset: 192)
!1819 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1800, size: 96, elements: !1820)
!1820 = !{!1821}
!1821 = !DISubrange(count: 12)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1810, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1810, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1810, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1810, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1810, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1810, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1810, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1810, file: !463, line: 461, baseType: !1830, size: 64, offset: 512)
!1830 = !DICompositeType(tag: DW_TAG_array_type, baseType: !467, size: 64, elements: !340)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1810, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1810, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1810, file: !463, line: 464, baseType: !1834, size: 128, offset: 640)
!1834 = !DICompositeType(tag: DW_TAG_array_type, baseType: !467, size: 128, elements: !846)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1810, file: !463, line: 465, baseType: !1836, size: 160, offset: 768)
!1836 = !DICompositeType(tag: DW_TAG_array_type, baseType: !467, size: 160, elements: !1349)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1810, file: !463, line: 466, baseType: !1838, size: 160, offset: 928)
!1838 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 160, elements: !1349)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1810, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!1840 = !{!1841, !1867, !1872, !1874, !1876, !1763}
!1841 = !DIGlobalVariableExpression(var: !1842, expr: !DIExpression())
!1842 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1765, file: !1843, line: 285, type: !1844, isLocal: true, isDefinition: true, align: 32)
!1843 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1844 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1845)
!1845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !1846)
!1846 = !{!1847, !1866}
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1845, file: !238, line: 60, baseType: !1848, size: 32)
!1848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1849, size: 32)
!1849 = !DISubroutineType(types: !1850)
!1850 = !{!107, !1851}
!1851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1852, size: 32)
!1852 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1853)
!1853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !1854)
!1854 = !{!1855, !1856, !1857, !1858, !1864, !1865}
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1853, file: !247, line: 380, baseType: !118, size: 32)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1853, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1853, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1853, file: !247, line: 386, baseType: !1859, size: 32, offset: 96)
!1859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1860, size: 32)
!1860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !1861)
!1861 = !{!1862, !1863}
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1860, file: !247, line: 359, baseType: !195, size: 8)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1860, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1853, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1853, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1845, file: !238, line: 65, baseType: !1851, size: 32, offset: 32)
!1867 = !DIGlobalVariableExpression(var: !1868, expr: !DIExpression())
!1868 = distinct !DIGlobalVariable(name: "lock", scope: !1765, file: !1843, line: 34, type: !1869, isLocal: true, isDefinition: true)
!1869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !1870)
!1870 = !{!1871}
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !1869, file: !420, line: 52, baseType: !22, size: 32)
!1872 = !DIGlobalVariableExpression(var: !1873, expr: !DIExpression())
!1873 = distinct !DIGlobalVariable(name: "last_load", scope: !1765, file: !1843, line: 36, type: !152, isLocal: true, isDefinition: true)
!1874 = !DIGlobalVariableExpression(var: !1875, expr: !DIExpression())
!1875 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1765, file: !1843, line: 48, type: !152, isLocal: true, isDefinition: true)
!1876 = !DIGlobalVariableExpression(var: !1877, expr: !DIExpression())
!1877 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1765, file: !1843, line: 54, type: !152, isLocal: true, isDefinition: true)
!1878 = !DIGlobalVariableExpression(var: !1879, expr: !DIExpression())
!1879 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1880, file: !1962, line: 22, type: !1964, isLocal: true, isDefinition: true)
!1880 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1881, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1882, retainedTypes: !1883, globals: !1959, splitDebugInlining: false, nameTableKind: None)
!1881 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/integration")
!1882 = !{!1179, !1185}
!1883 = !{!1884, !1948, !1953, !1232, !1185, !1179, !1958, !106}
!1884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1885, size: 32)
!1885 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1886)
!1886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1180, line: 523, size: 288, elements: !1887)
!1887 = !{!1888, !1907, !1911, !1915, !1919, !1920, !1921, !1925, !1944}
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1886, file: !1180, line: 524, baseType: !1889, size: 32)
!1889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1890, size: 32)
!1890 = !DISubroutineType(types: !1891)
!1891 = !{!107, !1892, !1220, !1221}
!1892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1893, size: 32)
!1893 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1894)
!1894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !1895)
!1895 = !{!1896, !1897, !1898, !1899, !1905, !1906}
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1894, file: !247, line: 380, baseType: !118, size: 32)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1894, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1894, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1894, file: !247, line: 386, baseType: !1900, size: 32, offset: 96)
!1900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1901, size: 32)
!1901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !1902)
!1902 = !{!1903, !1904}
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1901, file: !247, line: 359, baseType: !195, size: 8)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1901, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1894, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1894, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1886, file: !1180, line: 530, baseType: !1908, size: 32, offset: 32)
!1908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1909, size: 32)
!1909 = !DISubroutineType(types: !1910)
!1910 = !{!107, !1892, !1226}
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1886, file: !1180, line: 532, baseType: !1912, size: 32, offset: 64)
!1912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1913, size: 32)
!1913 = !DISubroutineType(types: !1914)
!1914 = !{!107, !1892, !1232, !1227}
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1886, file: !1180, line: 535, baseType: !1916, size: 32, offset: 96)
!1916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1917, size: 32)
!1917 = !DISubroutineType(types: !1918)
!1918 = !{!107, !1892, !1232}
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1886, file: !1180, line: 537, baseType: !1916, size: 32, offset: 128)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1886, file: !1180, line: 539, baseType: !1916, size: 32, offset: 160)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1886, file: !1180, line: 541, baseType: !1922, size: 32, offset: 192)
!1922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1923, size: 32)
!1923 = !DISubroutineType(types: !1924)
!1924 = !{!107, !1892, !1220, !1179, !1185}
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1886, file: !1180, line: 544, baseType: !1926, size: 32, offset: 224)
!1926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1927, size: 32)
!1927 = !DISubroutineType(types: !1928)
!1928 = !{!107, !1892, !1929, !145}
!1929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1930, size: 32)
!1930 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1180, line: 478, size: 96, elements: !1931)
!1931 = !{!1932, !1938, !1943}
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1930, file: !1180, line: 482, baseType: !1933, size: 32)
!1933 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1252, line: 33, baseType: !1934)
!1934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1252, line: 29, size: 32, elements: !1935)
!1935 = !{!1936}
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1934, file: !1252, line: 30, baseType: !1937, size: 32)
!1937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1934, size: 32)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1930, file: !1180, line: 485, baseType: !1939, size: 32, offset: 32)
!1939 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1180, line: 464, baseType: !1940)
!1940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1941, size: 32)
!1941 = !DISubroutineType(types: !1942)
!1942 = !{null, !1892, !1929, !1232}
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1930, file: !1180, line: 493, baseType: !1232, size: 32, offset: 64)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1886, file: !1180, line: 547, baseType: !1945, size: 32, offset: 256)
!1945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1946, size: 32)
!1946 = !DISubroutineType(types: !1947)
!1947 = !{!152, !1892}
!1948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1949, size: 32)
!1949 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1950)
!1950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1180, line: 428, size: 32, elements: !1951)
!1951 = !{!1952}
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1950, file: !1180, line: 434, baseType: !1232, size: 32)
!1953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1954, size: 32)
!1954 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1955)
!1955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1180, line: 441, size: 32, elements: !1956)
!1956 = !{!1957}
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1955, file: !1180, line: 447, baseType: !1232, size: 32)
!1958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1955, size: 32)
!1959 = !{!1960, !1878}
!1960 = !DIGlobalVariableExpression(var: !1961, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1961 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1880, file: !1962, line: 37, type: !1963, isLocal: true, isDefinition: true)
!1962 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1963 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !185)
!1964 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1965, size: 352, elements: !1966)
!1965 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1892)
!1966 = !{!1967}
!1967 = !DISubrange(count: 11)
!1968 = !DIGlobalVariableExpression(var: !1969, expr: !DIExpression())
!1969 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1970, file: !2014, line: 139, type: !2021, isLocal: false, isDefinition: true)
!1970 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1971, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1972, globals: !2011, splitDebugInlining: false, nameTableKind: None)
!1971 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/integration")
!1972 = !{!1973}
!1973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1974, size: 32)
!1974 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !223, line: 586, baseType: !1975)
!1975 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 550, size: 1216, elements: !1976)
!1976 = !{!1977, !1978, !1979, !1980, !1981, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1990, !1991, !1992, !1993, !1994, !1995, !1996, !1997, !1998, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010}
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1975, file: !223, line: 552, baseType: !227, size: 32)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1975, file: !223, line: 553, baseType: !227, size: 32, offset: 32)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1975, file: !223, line: 554, baseType: !227, size: 32, offset: 64)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1975, file: !223, line: 555, baseType: !227, size: 32, offset: 96)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1975, file: !223, line: 556, baseType: !227, size: 32, offset: 128)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1975, file: !223, line: 557, baseType: !227, size: 32, offset: 160)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !1975, file: !223, line: 558, baseType: !227, size: 32, offset: 192)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1975, file: !223, line: 559, baseType: !152, size: 32, offset: 224)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1975, file: !223, line: 560, baseType: !227, size: 32, offset: 256)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1975, file: !223, line: 561, baseType: !227, size: 32, offset: 288)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1975, file: !223, line: 562, baseType: !1002, size: 64, offset: 320)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1975, file: !223, line: 563, baseType: !227, size: 32, offset: 384)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1975, file: !223, line: 564, baseType: !227, size: 32, offset: 416)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !1975, file: !223, line: 565, baseType: !227, size: 32, offset: 448)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1975, file: !223, line: 566, baseType: !152, size: 32, offset: 480)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1975, file: !223, line: 567, baseType: !227, size: 32, offset: 512)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1975, file: !223, line: 568, baseType: !227, size: 32, offset: 544)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1975, file: !223, line: 569, baseType: !1002, size: 64, offset: 576)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1975, file: !223, line: 570, baseType: !227, size: 32, offset: 640)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1975, file: !223, line: 571, baseType: !227, size: 32, offset: 672)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !1975, file: !223, line: 572, baseType: !227, size: 32, offset: 704)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1975, file: !223, line: 573, baseType: !152, size: 32, offset: 736)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1975, file: !223, line: 574, baseType: !227, size: 32, offset: 768)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1975, file: !223, line: 575, baseType: !227, size: 32, offset: 800)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1975, file: !223, line: 576, baseType: !1002, size: 64, offset: 832)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1975, file: !223, line: 577, baseType: !227, size: 32, offset: 896)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1975, file: !223, line: 578, baseType: !227, size: 32, offset: 928)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1975, file: !223, line: 579, baseType: !1002, size: 64, offset: 960)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1975, file: !223, line: 580, baseType: !227, size: 32, offset: 1024)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1975, file: !223, line: 581, baseType: !227, size: 32, offset: 1056)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !1975, file: !223, line: 582, baseType: !227, size: 32, offset: 1088)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !1975, file: !223, line: 583, baseType: !227, size: 32, offset: 1120)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !1975, file: !223, line: 584, baseType: !227, size: 32, offset: 1152)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !1975, file: !223, line: 585, baseType: !227, size: 32, offset: 1184)
!2011 = !{!2012, !2015, !1968}
!2012 = !DIGlobalVariableExpression(var: !2013, expr: !DIExpression())
!2013 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1970, file: !2014, line: 137, type: !152, isLocal: false, isDefinition: true)
!2014 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2015 = !DIGlobalVariableExpression(var: !2016, expr: !DIExpression())
!2016 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1970, file: !2014, line: 138, type: !2017, isLocal: false, isDefinition: true)
!2017 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2018, size: 128, elements: !2019)
!2018 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !195)
!2019 = !{!2020}
!2020 = !DISubrange(count: 16)
!2021 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2018, size: 64, elements: !1622)
!2022 = !DIGlobalVariableExpression(var: !2023, expr: !DIExpression())
!2023 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !2024, file: !2027, line: 23, type: !2028, isLocal: false, isDefinition: true)
!2024 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2025, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, globals: !2026, splitDebugInlining: false, nameTableKind: None)
!2025 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/integration")
!2026 = !{!2022}
!2027 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2028 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !107)
!2029 = !DIGlobalVariableExpression(var: !2030, expr: !DIExpression())
!2030 = distinct !DIGlobalVariable(name: "log_const_os", scope: !2031, file: !2035, line: 37, type: !2290, isLocal: false, isDefinition: true)
!2031 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2032, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2033, retainedTypes: !2042, globals: !2115, splitDebugInlining: false, nameTableKind: None)
!2032 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/integration")
!2033 = !{!2034, !30, !734}
!2034 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !2035, line: 63, baseType: !32, size: 32, elements: !2036)
!2035 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2036 = !{!2037, !2038, !2039, !2040, !2041}
!2037 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!2038 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!2039 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!2040 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!2041 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!2042 = !{!185, !106, !107, !2043, !193, !152, !2073, !904, !195, !2098}
!2043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2044, size: 32)
!2044 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2045)
!2045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !2046, line: 51, size: 64, elements: !2047)
!2046 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2047 = !{!2048, !2068}
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !2045, file: !2046, line: 52, baseType: !2049, size: 32)
!2049 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !2046, line: 38, baseType: !2050)
!2050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2051, size: 32)
!2051 = !DISubroutineType(types: !2052)
!2052 = !{!107, !2053, !194, !197}
!2053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2054, size: 32)
!2054 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2055)
!2055 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !2056)
!2056 = !{!2057, !2058, !2059, !2060, !2066, !2067}
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2055, file: !247, line: 380, baseType: !118, size: 32)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2055, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2055, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2055, file: !247, line: 386, baseType: !2061, size: 32, offset: 96)
!2061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2062, size: 32)
!2062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !2063)
!2063 = !{!2064, !2065}
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2062, file: !247, line: 359, baseType: !195, size: 8)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2062, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2055, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2055, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !2045, file: !2046, line: 53, baseType: !2069, size: 32, offset: 32)
!2069 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !2046, line: 47, baseType: !2070)
!2070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2071, size: 32)
!2071 = !DISubroutineType(types: !2072)
!2072 = !{!107, !2053, !194, !197, !152}
!2073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2074, size: 32)
!2074 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !2075)
!2075 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !2076)
!2076 = !{!2077, !2078, !2079, !2080, !2081, !2082, !2083, !2084, !2085, !2086, !2087, !2088, !2089, !2090, !2091, !2092, !2093, !2094, !2095, !2096, !2097}
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2075, file: !463, line: 447, baseType: !467, size: 32)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2075, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2075, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2075, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2075, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2075, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2075, file: !463, line: 453, baseType: !1819, size: 96, offset: 192)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2075, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2075, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2075, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2075, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2075, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2075, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2075, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2075, file: !463, line: 461, baseType: !1830, size: 64, offset: 512)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2075, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2075, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2075, file: !463, line: 464, baseType: !1834, size: 128, offset: 640)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2075, file: !463, line: 465, baseType: !1836, size: 160, offset: 768)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2075, file: !463, line: 466, baseType: !1838, size: 160, offset: 928)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2075, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!2098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2099, size: 32)
!2099 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !463, line: 426, baseType: !2100)
!2100 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 411, size: 28704, elements: !2101)
!2101 = !{!2102, !2103, !2104, !2105, !2106, !2107, !2108, !2109, !2110, !2111, !2112, !2113, !2114}
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2100, file: !463, line: 413, baseType: !1782, size: 256)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2100, file: !463, line: 414, baseType: !1784, size: 768, offset: 256)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2100, file: !463, line: 415, baseType: !1782, size: 256, offset: 1024)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2100, file: !463, line: 416, baseType: !1784, size: 768, offset: 1280)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2100, file: !463, line: 417, baseType: !1782, size: 256, offset: 2048)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2100, file: !463, line: 418, baseType: !1784, size: 768, offset: 2304)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2100, file: !463, line: 419, baseType: !1782, size: 256, offset: 3072)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2100, file: !463, line: 420, baseType: !1784, size: 768, offset: 3328)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2100, file: !463, line: 421, baseType: !1782, size: 256, offset: 4096)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2100, file: !463, line: 422, baseType: !1795, size: 1792, offset: 4352)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2100, file: !463, line: 423, baseType: !1799, size: 1920, offset: 6144)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2100, file: !463, line: 424, baseType: !1804, size: 20608, offset: 8064)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2100, file: !463, line: 425, baseType: !227, size: 32, offset: 28672)
!2115 = !{!2029, !2116, !2242, !2248, !2250, !2253, !2258, !2260, !2265}
!2116 = !DIGlobalVariableExpression(var: !2117, expr: !DIExpression())
!2117 = distinct !DIGlobalVariable(name: "_kernel", scope: !2031, file: !2035, line: 40, type: !2118, isLocal: false, isDefinition: true)
!2118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !345, line: 158, size: 288, elements: !2119)
!2119 = !{!2120, !2237}
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !2118, file: !345, line: 159, baseType: !2121, size: 192)
!2121 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2122, size: 192, elements: !445)
!2122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !345, line: 100, size: 192, elements: !2123)
!2123 = !{!2124, !2125, !2126, !2230, !2231, !2232, !2233}
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2122, file: !345, line: 102, baseType: !152, size: 32)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !2122, file: !345, line: 105, baseType: !193, size: 32, offset: 32)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2122, file: !345, line: 108, baseType: !2127, size: 32, offset: 64)
!2127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2128, size: 32)
!2128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !2129)
!2129 = !{!2130, !2188, !2200, !2201, !2202, !2203, !2204, !2210, !2225}
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2128, file: !309, line: 247, baseType: !2131, size: 384)
!2131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !2132)
!2132 = !{!2133, !2157, !2164, !2165, !2166, !2175, !2176, !2177}
!2133 = !DIDerivedType(tag: DW_TAG_member, scope: !2131, file: !309, line: 60, baseType: !2134, size: 64)
!2134 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2131, file: !309, line: 60, size: 64, elements: !2135)
!2135 = !{!2136, !2151}
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2134, file: !309, line: 61, baseType: !2137, size: 64)
!2137 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !2138)
!2138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !2139)
!2139 = !{!2140, !2146}
!2140 = !DIDerivedType(tag: DW_TAG_member, scope: !2138, file: !319, line: 38, baseType: !2141, size: 32)
!2141 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2138, file: !319, line: 38, size: 32, elements: !2142)
!2142 = !{!2143, !2145}
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2141, file: !319, line: 39, baseType: !2144, size: 32)
!2144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2138, size: 32)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2141, file: !319, line: 40, baseType: !2144, size: 32)
!2146 = !DIDerivedType(tag: DW_TAG_member, scope: !2138, file: !319, line: 42, baseType: !2147, size: 32, offset: 32)
!2147 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2138, file: !319, line: 42, size: 32, elements: !2148)
!2148 = !{!2149, !2150}
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2147, file: !319, line: 43, baseType: !2144, size: 32)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2147, file: !319, line: 44, baseType: !2144, size: 32)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2134, file: !309, line: 62, baseType: !2152, size: 64)
!2152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !2153)
!2153 = !{!2154}
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2152, file: !335, line: 50, baseType: !2155, size: 64)
!2155 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2156, size: 64, elements: !340)
!2156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2152, size: 32)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2131, file: !309, line: 68, baseType: !2158, size: 32, offset: 64)
!2158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2159, size: 32)
!2159 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !2160)
!2160 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !2161)
!2161 = !{!2162}
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2160, file: !345, line: 232, baseType: !2163, size: 64)
!2163 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !2138)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2131, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2131, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!2166 = !DIDerivedType(tag: DW_TAG_member, scope: !2131, file: !309, line: 90, baseType: !2167, size: 16, offset: 112)
!2167 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2131, file: !309, line: 90, size: 16, elements: !2168)
!2168 = !{!2169, !2174}
!2169 = !DIDerivedType(tag: DW_TAG_member, scope: !2167, file: !309, line: 91, baseType: !2170, size: 16)
!2170 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2167, file: !309, line: 91, size: 16, elements: !2171)
!2171 = !{!2172, !2173}
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2170, file: !309, line: 96, baseType: !359, size: 8)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2170, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2167, file: !309, line: 100, baseType: !197, size: 16)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2131, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2131, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2131, file: !309, line: 131, baseType: !2178, size: 192, offset: 192)
!2178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !2179)
!2179 = !{!2180, !2181, !2187}
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2178, file: !345, line: 245, baseType: !2137, size: 64)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2178, file: !345, line: 246, baseType: !2182, size: 32, offset: 64)
!2182 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !2183)
!2183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2184, size: 32)
!2184 = !DISubroutineType(types: !2185)
!2185 = !{null, !2186}
!2186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2178, size: 32)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2178, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2128, file: !309, line: 250, baseType: !2189, size: 288, offset: 384)
!2189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !2190)
!2190 = !{!2191, !2192, !2193, !2194, !2195, !2196, !2197, !2198, !2199}
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2189, file: !379, line: 26, baseType: !152, size: 32)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2189, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2189, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2189, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2189, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2189, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2189, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2189, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2189, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2128, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2128, file: !309, line: 256, baseType: !2159, size: 64, offset: 704)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2128, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2128, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2128, file: !309, line: 300, baseType: !2205, size: 96, offset: 1056)
!2205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !2206)
!2206 = !{!2207, !2208, !2209}
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2205, file: !309, line: 153, baseType: !22, size: 32)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2205, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2205, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2128, file: !309, line: 325, baseType: !2211, size: 32, offset: 1152)
!2211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2212, size: 32)
!2212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !2213)
!2213 = !{!2214, !2220, !2221}
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2212, file: !406, line: 5074, baseType: !2215, size: 96)
!2215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !2216)
!2216 = !{!2217, !2218, !2219}
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2215, file: !410, line: 57, baseType: !413, size: 32)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2215, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2215, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2212, file: !406, line: 5075, baseType: !2159, size: 64, offset: 96)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2212, file: !406, line: 5076, baseType: !2222, size: 32, offset: 160)
!2222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !2223)
!2223 = !{!2224}
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2222, file: !420, line: 52, baseType: !22, size: 32)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2128, file: !309, line: 343, baseType: !2226, size: 64, offset: 1184)
!2226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !2227)
!2227 = !{!2228, !2229}
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2226, file: !379, line: 63, baseType: !152, size: 32)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2226, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !2122, file: !345, line: 111, baseType: !2127, size: 32, offset: 96)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !2122, file: !345, line: 124, baseType: !107, size: 32, offset: 128)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2122, file: !345, line: 127, baseType: !195, size: 8, offset: 160)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2122, file: !345, line: 153, baseType: !2234, offset: 168)
!2234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2235, line: 33, elements: !2236)
!2235 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2236 = !{}
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !2118, file: !345, line: 170, baseType: !2238, size: 96, offset: 192)
!2238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !345, line: 83, size: 96, elements: !2239)
!2239 = !{!2240, !2241}
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2238, file: !345, line: 86, baseType: !2127, size: 32)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2238, file: !345, line: 90, baseType: !2163, size: 64, offset: 32)
!2242 = !DIGlobalVariableExpression(var: !2243, expr: !DIExpression())
!2243 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !2031, file: !2035, line: 43, type: !2244, isLocal: false, isDefinition: true, align: 512)
!2244 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2245, size: 8704, elements: !580)
!2245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !577, line: 47, size: 8, elements: !2246)
!2246 = !{!2247}
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2245, file: !577, line: 48, baseType: !120, size: 8)
!2248 = !DIGlobalVariableExpression(var: !2249, expr: !DIExpression())
!2249 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !2031, file: !2035, line: 44, type: !2128, isLocal: false, isDefinition: true)
!2250 = !DIGlobalVariableExpression(var: !2251, expr: !DIExpression())
!2251 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !2031, file: !2035, line: 48, type: !2252, isLocal: false, isDefinition: true)
!2252 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2128, size: 1280, elements: !445)
!2253 = !DIGlobalVariableExpression(var: !2254, expr: !DIExpression())
!2254 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !2031, file: !2035, line: 86, type: !2255, isLocal: false, isDefinition: true, align: 512)
!2255 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2245, size: 16896, elements: !2256)
!2256 = !{!446, !2257}
!2257 = !DISubrange(count: 2112)
!2258 = !DIGlobalVariableExpression(var: !2259, expr: !DIExpression())
!2259 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !2031, file: !2035, line: 217, type: !145, isLocal: false, isDefinition: true)
!2260 = !DIGlobalVariableExpression(var: !2261, expr: !DIExpression())
!2261 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !2031, file: !2035, line: 50, type: !2262, isLocal: true, isDefinition: true, align: 512)
!2262 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2245, size: 3072, elements: !2263)
!2263 = !{!446, !2264}
!2264 = !DISubrange(count: 384)
!2265 = !DIGlobalVariableExpression(var: !2266, expr: !DIExpression())
!2266 = distinct !DIGlobalVariable(name: "levels", scope: !2267, file: !2035, line: 232, type: !2287, isLocal: true, isDefinition: true)
!2267 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !2035, file: !2035, line: 230, type: !2268, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2031, retainedNodes: !2270)
!2268 = !DISubroutineType(types: !2269)
!2269 = !{null, !2034}
!2270 = !{!2271, !2272, !2282, !2286}
!2271 = !DILocalVariable(name: "level", arg: 1, scope: !2267, file: !2035, line: 230, type: !2034)
!2272 = !DILocalVariable(name: "entry", scope: !2267, file: !2035, line: 244, type: !2273)
!2273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2274, size: 32)
!2274 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2275)
!2275 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !2276)
!2276 = !{!2277, !2281}
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2275, file: !238, line: 60, baseType: !2278, size: 32)
!2278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2279, size: 32)
!2279 = !DISubroutineType(types: !2280)
!2280 = !{!107, !2053}
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2275, file: !238, line: 65, baseType: !2053, size: 32, offset: 32)
!2282 = !DILocalVariable(name: "dev", scope: !2283, file: !2035, line: 247, type: !2053)
!2283 = distinct !DILexicalBlock(scope: !2284, file: !2035, line: 246, column: 64)
!2284 = distinct !DILexicalBlock(scope: !2285, file: !2035, line: 246, column: 2)
!2285 = distinct !DILexicalBlock(scope: !2267, file: !2035, line: 246, column: 2)
!2286 = !DILocalVariable(name: "rc", scope: !2283, file: !2035, line: 248, type: !107)
!2287 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2273, size: 192, elements: !2288)
!2288 = !{!2289}
!2289 = !DISubrange(count: 6)
!2290 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2291)
!2291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !203, line: 16, size: 64, elements: !2292)
!2292 = !{!2293, !2294}
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2291, file: !203, line: 17, baseType: !118, size: 32)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2291, file: !203, line: 18, baseType: !195, size: 8, offset: 32)
!2295 = !DIGlobalVariableExpression(var: !2296, expr: !DIExpression())
!2296 = distinct !DIGlobalVariable(name: "states_str", scope: !2297, file: !2298, line: 276, type: !2422, isLocal: true, isDefinition: true)
!2297 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2298, file: !2298, line: 271, type: !2299, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !2413)
!2298 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2299 = !DISubroutineType(types: !2300)
!2300 = !{!118, !2301, !193, !185}
!2301 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !309, line: 347, baseType: !2302)
!2302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2303, size: 32)
!2303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !2304)
!2304 = !{!2305, !2363, !2375, !2376, !2377, !2378, !2379, !2385, !2400}
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2303, file: !309, line: 247, baseType: !2306, size: 384)
!2306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !2307)
!2307 = !{!2308, !2332, !2339, !2340, !2341, !2350, !2351, !2352}
!2308 = !DIDerivedType(tag: DW_TAG_member, scope: !2306, file: !309, line: 60, baseType: !2309, size: 64)
!2309 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2306, file: !309, line: 60, size: 64, elements: !2310)
!2310 = !{!2311, !2326}
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2309, file: !309, line: 61, baseType: !2312, size: 64)
!2312 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !2313)
!2313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !2314)
!2314 = !{!2315, !2321}
!2315 = !DIDerivedType(tag: DW_TAG_member, scope: !2313, file: !319, line: 38, baseType: !2316, size: 32)
!2316 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2313, file: !319, line: 38, size: 32, elements: !2317)
!2317 = !{!2318, !2320}
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2316, file: !319, line: 39, baseType: !2319, size: 32)
!2319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2313, size: 32)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2316, file: !319, line: 40, baseType: !2319, size: 32)
!2321 = !DIDerivedType(tag: DW_TAG_member, scope: !2313, file: !319, line: 42, baseType: !2322, size: 32, offset: 32)
!2322 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2313, file: !319, line: 42, size: 32, elements: !2323)
!2323 = !{!2324, !2325}
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2322, file: !319, line: 43, baseType: !2319, size: 32)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2322, file: !319, line: 44, baseType: !2319, size: 32)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2309, file: !309, line: 62, baseType: !2327, size: 64)
!2327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !2328)
!2328 = !{!2329}
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2327, file: !335, line: 50, baseType: !2330, size: 64)
!2330 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2331, size: 64, elements: !340)
!2331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2327, size: 32)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2306, file: !309, line: 68, baseType: !2333, size: 32, offset: 64)
!2333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2334, size: 32)
!2334 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !2335)
!2335 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !2336)
!2336 = !{!2337}
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2335, file: !345, line: 232, baseType: !2338, size: 64)
!2338 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !2313)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2306, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2306, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!2341 = !DIDerivedType(tag: DW_TAG_member, scope: !2306, file: !309, line: 90, baseType: !2342, size: 16, offset: 112)
!2342 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2306, file: !309, line: 90, size: 16, elements: !2343)
!2343 = !{!2344, !2349}
!2344 = !DIDerivedType(tag: DW_TAG_member, scope: !2342, file: !309, line: 91, baseType: !2345, size: 16)
!2345 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2342, file: !309, line: 91, size: 16, elements: !2346)
!2346 = !{!2347, !2348}
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2345, file: !309, line: 96, baseType: !359, size: 8)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2345, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2342, file: !309, line: 100, baseType: !197, size: 16)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2306, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2306, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2306, file: !309, line: 131, baseType: !2353, size: 192, offset: 192)
!2353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !2354)
!2354 = !{!2355, !2356, !2362}
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2353, file: !345, line: 245, baseType: !2312, size: 64)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2353, file: !345, line: 246, baseType: !2357, size: 32, offset: 64)
!2357 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !2358)
!2358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2359, size: 32)
!2359 = !DISubroutineType(types: !2360)
!2360 = !{null, !2361}
!2361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2353, size: 32)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2353, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2303, file: !309, line: 250, baseType: !2364, size: 288, offset: 384)
!2364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !2365)
!2365 = !{!2366, !2367, !2368, !2369, !2370, !2371, !2372, !2373, !2374}
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2364, file: !379, line: 26, baseType: !152, size: 32)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2364, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2364, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2364, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2364, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2364, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2364, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2364, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2364, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2303, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2303, file: !309, line: 256, baseType: !2334, size: 64, offset: 704)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2303, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2303, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2303, file: !309, line: 300, baseType: !2380, size: 96, offset: 1056)
!2380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !2381)
!2381 = !{!2382, !2383, !2384}
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2380, file: !309, line: 153, baseType: !22, size: 32)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2380, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2380, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2303, file: !309, line: 325, baseType: !2386, size: 32, offset: 1152)
!2386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2387, size: 32)
!2387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !2388)
!2388 = !{!2389, !2395, !2396}
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2387, file: !406, line: 5074, baseType: !2390, size: 96)
!2390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !2391)
!2391 = !{!2392, !2393, !2394}
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2390, file: !410, line: 57, baseType: !413, size: 32)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2390, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2390, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2387, file: !406, line: 5075, baseType: !2334, size: 64, offset: 96)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2387, file: !406, line: 5076, baseType: !2397, size: 32, offset: 160)
!2397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !2398)
!2398 = !{!2399}
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2397, file: !420, line: 52, baseType: !22, size: 32)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2303, file: !309, line: 343, baseType: !2401, size: 64, offset: 1184)
!2401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !2402)
!2402 = !{!2403, !2404}
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2401, file: !379, line: 63, baseType: !152, size: 32)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2401, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!2405 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2406, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2407, globals: !2409, splitDebugInlining: false, nameTableKind: None)
!2406 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/integration")
!2407 = !{!106, !118, !564, !195, !22, !107, !2408, !24, !185, !193, !152, !566}
!2408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2312, size: 32)
!2409 = !{!2295, !2410}
!2410 = !DIGlobalVariableExpression(var: !2411, expr: !DIExpression())
!2411 = distinct !DIGlobalVariable(name: "states_sz", scope: !2297, file: !2298, line: 279, type: !2412, isLocal: true, isDefinition: true)
!2412 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1963, size: 256, elements: !1622)
!2413 = !{!2414, !2415, !2416, !2417, !2418, !2419, !2420}
!2414 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2297, file: !2298, line: 271, type: !2301)
!2415 = !DILocalVariable(name: "buf", arg: 2, scope: !2297, file: !2298, line: 271, type: !193)
!2416 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2297, file: !2298, line: 271, type: !185)
!2417 = !DILocalVariable(name: "off", scope: !2297, file: !2298, line: 273, type: !185)
!2418 = !DILocalVariable(name: "bit", scope: !2297, file: !2298, line: 274, type: !195)
!2419 = !DILocalVariable(name: "thread_state", scope: !2297, file: !2298, line: 275, type: !195)
!2420 = !DILocalVariable(name: "index", scope: !2421, file: !2298, line: 293, type: !195)
!2421 = distinct !DILexicalBlock(scope: !2297, file: !2298, line: 293, column: 2)
!2422 = !DICompositeType(tag: DW_TAG_array_type, baseType: !118, size: 256, elements: !1622)
!2423 = !DIGlobalVariableExpression(var: !2424, expr: !DIExpression())
!2424 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2425, file: !2536, line: 56, type: !2523, isLocal: false, isDefinition: true)
!2425 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2426, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2427, globals: !2533, splitDebugInlining: false, nameTableKind: None)
!2426 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/integration")
!2427 = !{!2428, !193, !106, !2531, !194, !564, !904, !107, !152, !566, !2532}
!2428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2429, size: 32)
!2429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !2430)
!2430 = !{!2431, !2489, !2501, !2502, !2503, !2504, !2505, !2511, !2526}
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2429, file: !309, line: 247, baseType: !2432, size: 384)
!2432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !2433)
!2433 = !{!2434, !2458, !2465, !2466, !2467, !2476, !2477, !2478}
!2434 = !DIDerivedType(tag: DW_TAG_member, scope: !2432, file: !309, line: 60, baseType: !2435, size: 64)
!2435 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2432, file: !309, line: 60, size: 64, elements: !2436)
!2436 = !{!2437, !2452}
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2435, file: !309, line: 61, baseType: !2438, size: 64)
!2438 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !2439)
!2439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !2440)
!2440 = !{!2441, !2447}
!2441 = !DIDerivedType(tag: DW_TAG_member, scope: !2439, file: !319, line: 38, baseType: !2442, size: 32)
!2442 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2439, file: !319, line: 38, size: 32, elements: !2443)
!2443 = !{!2444, !2446}
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2442, file: !319, line: 39, baseType: !2445, size: 32)
!2445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2439, size: 32)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2442, file: !319, line: 40, baseType: !2445, size: 32)
!2447 = !DIDerivedType(tag: DW_TAG_member, scope: !2439, file: !319, line: 42, baseType: !2448, size: 32, offset: 32)
!2448 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2439, file: !319, line: 42, size: 32, elements: !2449)
!2449 = !{!2450, !2451}
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2448, file: !319, line: 43, baseType: !2445, size: 32)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2448, file: !319, line: 44, baseType: !2445, size: 32)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2435, file: !309, line: 62, baseType: !2453, size: 64)
!2453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !2454)
!2454 = !{!2455}
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2453, file: !335, line: 50, baseType: !2456, size: 64)
!2456 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2457, size: 64, elements: !340)
!2457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2453, size: 32)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2432, file: !309, line: 68, baseType: !2459, size: 32, offset: 64)
!2459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2460, size: 32)
!2460 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !2461)
!2461 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !2462)
!2462 = !{!2463}
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2461, file: !345, line: 232, baseType: !2464, size: 64)
!2464 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !2439)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2432, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2432, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!2467 = !DIDerivedType(tag: DW_TAG_member, scope: !2432, file: !309, line: 90, baseType: !2468, size: 16, offset: 112)
!2468 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2432, file: !309, line: 90, size: 16, elements: !2469)
!2469 = !{!2470, !2475}
!2470 = !DIDerivedType(tag: DW_TAG_member, scope: !2468, file: !309, line: 91, baseType: !2471, size: 16)
!2471 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2468, file: !309, line: 91, size: 16, elements: !2472)
!2472 = !{!2473, !2474}
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2471, file: !309, line: 96, baseType: !359, size: 8)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2471, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2468, file: !309, line: 100, baseType: !197, size: 16)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2432, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2432, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2432, file: !309, line: 131, baseType: !2479, size: 192, offset: 192)
!2479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !2480)
!2480 = !{!2481, !2482, !2488}
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2479, file: !345, line: 245, baseType: !2438, size: 64)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2479, file: !345, line: 246, baseType: !2483, size: 32, offset: 64)
!2483 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !2484)
!2484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2485, size: 32)
!2485 = !DISubroutineType(types: !2486)
!2486 = !{null, !2487}
!2487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2479, size: 32)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2479, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2429, file: !309, line: 250, baseType: !2490, size: 288, offset: 384)
!2490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !2491)
!2491 = !{!2492, !2493, !2494, !2495, !2496, !2497, !2498, !2499, !2500}
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2490, file: !379, line: 26, baseType: !152, size: 32)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2490, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2490, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2490, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2490, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2490, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2490, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2490, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2490, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2429, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2429, file: !309, line: 256, baseType: !2460, size: 64, offset: 704)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2429, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2429, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2429, file: !309, line: 300, baseType: !2506, size: 96, offset: 1056)
!2506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !2507)
!2507 = !{!2508, !2509, !2510}
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2506, file: !309, line: 153, baseType: !22, size: 32)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2506, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2506, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2429, file: !309, line: 325, baseType: !2512, size: 32, offset: 1152)
!2512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2513, size: 32)
!2513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !2514)
!2514 = !{!2515, !2521, !2522}
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2513, file: !406, line: 5074, baseType: !2516, size: 96)
!2516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !2517)
!2517 = !{!2518, !2519, !2520}
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2516, file: !410, line: 57, baseType: !413, size: 32)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2516, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2516, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2513, file: !406, line: 5075, baseType: !2460, size: 64, offset: 96)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2513, file: !406, line: 5076, baseType: !2523, size: 32, offset: 160)
!2523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !2524)
!2524 = !{!2525}
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2523, file: !420, line: 52, baseType: !22, size: 32)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2429, file: !309, line: 343, baseType: !2527, size: 64, offset: 1184)
!2527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !2528)
!2528 = !{!2529, !2530}
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2527, file: !379, line: 63, baseType: !152, size: 32)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2527, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!2531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2457, size: 32)
!2532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2438, size: 32)
!2533 = !{!2423, !2534, !2537, !2539}
!2534 = !DIGlobalVariableExpression(var: !2535, expr: !DIExpression())
!2535 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2425, file: !2536, line: 404, type: !107, isLocal: true, isDefinition: true)
!2536 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2537 = !DIGlobalVariableExpression(var: !2538, expr: !DIExpression())
!2538 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2425, file: !2536, line: 405, type: !107, isLocal: true, isDefinition: true)
!2539 = !DIGlobalVariableExpression(var: !2540, expr: !DIExpression())
!2540 = distinct !DIGlobalVariable(name: "pending_current", scope: !2425, file: !2536, line: 425, type: !2428, isLocal: true, isDefinition: true)
!2541 = !DIGlobalVariableExpression(var: !2542, expr: !DIExpression())
!2542 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2543, file: !2573, line: 19, type: !2579, isLocal: true, isDefinition: true)
!2543 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2544, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2545, globals: !2570, splitDebugInlining: false, nameTableKind: None)
!2544 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/integration")
!2545 = !{!564, !106, !904, !152, !566, !107, !2546, !193, !376}
!2546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2547, size: 32)
!2547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !2548)
!2548 = !{!2549, !2564, !2569}
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2547, file: !345, line: 245, baseType: !2550, size: 64)
!2550 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !2551)
!2551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !2552)
!2552 = !{!2553, !2559}
!2553 = !DIDerivedType(tag: DW_TAG_member, scope: !2551, file: !319, line: 38, baseType: !2554, size: 32)
!2554 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2551, file: !319, line: 38, size: 32, elements: !2555)
!2555 = !{!2556, !2558}
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2554, file: !319, line: 39, baseType: !2557, size: 32)
!2557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2551, size: 32)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2554, file: !319, line: 40, baseType: !2557, size: 32)
!2559 = !DIDerivedType(tag: DW_TAG_member, scope: !2551, file: !319, line: 42, baseType: !2560, size: 32, offset: 32)
!2560 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2551, file: !319, line: 42, size: 32, elements: !2561)
!2561 = !{!2562, !2563}
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2560, file: !319, line: 43, baseType: !2557, size: 32)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2560, file: !319, line: 44, baseType: !2557, size: 32)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2547, file: !345, line: 246, baseType: !2565, size: 32, offset: 64)
!2565 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !2566)
!2566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2567, size: 32)
!2567 = !DISubroutineType(types: !2568)
!2568 = !{null, !2546}
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2547, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!2570 = !{!2571, !2541, !2574, !2576}
!2571 = !DIGlobalVariableExpression(var: !2572, expr: !DIExpression())
!2572 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2543, file: !2573, line: 15, type: !566, isLocal: true, isDefinition: true)
!2573 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2574 = !DIGlobalVariableExpression(var: !2575, expr: !DIExpression())
!2575 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2543, file: !2573, line: 25, type: !107, isLocal: true, isDefinition: true)
!2576 = !DIGlobalVariableExpression(var: !2577, expr: !DIExpression())
!2577 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2543, file: !2573, line: 17, type: !2578, isLocal: true, isDefinition: true)
!2578 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !2551)
!2579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !2580)
!2580 = !{!2581}
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2579, file: !420, line: 52, baseType: !22, size: 32)
!2582 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2583, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2583 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/integration")
!2584 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2585, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2585 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/integration")
!2586 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2587, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2588, retainedTypes: !2608, splitDebugInlining: false, nameTableKind: None)
!2587 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/integration")
!2588 = !{!2589, !2597}
!2589 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2590, line: 69, baseType: !32, size: 32, elements: !2591)
!2590 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2591 = !{!2592, !2593, !2594, !2595, !2596}
!2592 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2593 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2594 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2595 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2596 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2597 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2590, line: 56, baseType: !32, size: 32, elements: !2598)
!2598 = !{!2599, !2600, !2601, !2602, !2603, !2604, !2605, !2606, !2607}
!2599 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2600 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2601 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2602 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2603 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2604 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2605 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2606 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2607 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2608 = !{!107, !2589, !2597, !2609, !360, !264, !2611, !2612, !196, !198, !118, !185, !106, !22, !32, !187, !2614, !2615, !189, !188, !191, !190, !2610, !2616, !2617, !2618, !2619}
!2609 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2590, line: 31, baseType: !2610)
!2610 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !191)
!2611 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !186, line: 329, baseType: !32)
!2612 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2590, line: 32, baseType: !2613)
!2613 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !567)
!2614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !360, size: 32)
!2615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !264, size: 32)
!2616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2610, size: 32)
!2617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !185, size: 32)
!2618 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !186, line: 145, baseType: !107)
!2619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2618, size: 32)
!2620 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2621, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2621 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/integration")
!2622 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2623, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2623 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/integration/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/integration")
!2624 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2625, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2626, splitDebugInlining: false, nameTableKind: None)
!2625 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/integration")
!2626 = !{!118, !196, !107, !32}
!2627 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2628, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2629, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2628 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/integration")
!2629 = !{!2630, !30}
!2630 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2631, line: 27, baseType: !32, size: 32, elements: !2632)
!2631 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2632 = !{!2633, !2634, !2635, !2636, !2637}
!2633 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2634 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2635 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2636 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2637 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2638 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2639, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2640, retainedTypes: !2641, splitDebugInlining: false, nameTableKind: None)
!2639 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/integration")
!2640 = !{!734, !2630, !30}
!2641 = !{!930, !2642, !106, !107, !904, !152, !195, !2659}
!2642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2643, size: 32)
!2643 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !463, line: 426, baseType: !2644)
!2644 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 411, size: 28704, elements: !2645)
!2645 = !{!2646, !2647, !2648, !2649, !2650, !2651, !2652, !2653, !2654, !2655, !2656, !2657, !2658}
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2644, file: !463, line: 413, baseType: !1782, size: 256)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2644, file: !463, line: 414, baseType: !1784, size: 768, offset: 256)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2644, file: !463, line: 415, baseType: !1782, size: 256, offset: 1024)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2644, file: !463, line: 416, baseType: !1784, size: 768, offset: 1280)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2644, file: !463, line: 417, baseType: !1782, size: 256, offset: 2048)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2644, file: !463, line: 418, baseType: !1784, size: 768, offset: 2304)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2644, file: !463, line: 419, baseType: !1782, size: 256, offset: 3072)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2644, file: !463, line: 420, baseType: !1784, size: 768, offset: 3328)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2644, file: !463, line: 421, baseType: !1782, size: 256, offset: 4096)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2644, file: !463, line: 422, baseType: !1795, size: 1792, offset: 4352)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2644, file: !463, line: 423, baseType: !1799, size: 1920, offset: 6144)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2644, file: !463, line: 424, baseType: !1804, size: 20608, offset: 8064)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2644, file: !463, line: 425, baseType: !227, size: 32, offset: 28672)
!2659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2660, size: 32)
!2660 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !2661)
!2661 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !2662)
!2662 = !{!2663, !2664, !2665, !2666, !2667, !2668, !2669, !2670, !2671, !2672, !2673, !2674, !2675, !2676, !2677, !2678, !2679, !2680, !2681, !2682, !2683}
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2661, file: !463, line: 447, baseType: !467, size: 32)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2661, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2661, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2661, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2661, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2661, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2661, file: !463, line: 453, baseType: !1819, size: 96, offset: 192)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2661, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2661, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2661, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2661, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2661, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2661, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2661, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2661, file: !463, line: 461, baseType: !1830, size: 64, offset: 512)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2661, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2661, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2661, file: !463, line: 464, baseType: !1834, size: 128, offset: 640)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2661, file: !463, line: 465, baseType: !1836, size: 160, offset: 768)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2661, file: !463, line: 466, baseType: !1838, size: 160, offset: 928)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2661, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!2684 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2685, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2685 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/integration")
!2686 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2687, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2688, splitDebugInlining: false, nameTableKind: None)
!2687 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/integration")
!2688 = !{!106, !107, !22, !2689}
!2689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2690, size: 32)
!2690 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !2691)
!2691 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !2692)
!2692 = !{!2693, !2694, !2695, !2696, !2697, !2698, !2699, !2700, !2701, !2702, !2703, !2704, !2705, !2706, !2707, !2708, !2709, !2710, !2711, !2712, !2713}
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2691, file: !463, line: 447, baseType: !467, size: 32)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2691, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2691, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2691, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2691, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2691, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2691, file: !463, line: 453, baseType: !1819, size: 96, offset: 192)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2691, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2691, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2691, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2691, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2691, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2691, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2691, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2691, file: !463, line: 461, baseType: !1830, size: 64, offset: 512)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2691, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2691, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2691, file: !463, line: 464, baseType: !1834, size: 128, offset: 640)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2691, file: !463, line: 465, baseType: !1836, size: 160, offset: 768)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2691, file: !463, line: 466, baseType: !1838, size: 160, offset: 928)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2691, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!2714 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2715, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2716, splitDebugInlining: false, nameTableKind: None)
!2715 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/integration")
!2716 = !{!2717, !106, !107}
!2717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2718, size: 32)
!2718 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !2719)
!2719 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !2720)
!2720 = !{!2721, !2722, !2723, !2724, !2725, !2726, !2727, !2728, !2729, !2730, !2731, !2732, !2733, !2734, !2735, !2736, !2737, !2738, !2739, !2740, !2741}
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2719, file: !463, line: 447, baseType: !467, size: 32)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2719, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2719, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2719, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2719, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2719, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2719, file: !463, line: 453, baseType: !1819, size: 96, offset: 192)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2719, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2719, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2719, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2719, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2719, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2719, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2719, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2719, file: !463, line: 461, baseType: !1830, size: 64, offset: 512)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2719, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2719, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2719, file: !463, line: 464, baseType: !1834, size: 128, offset: 640)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2719, file: !463, line: 465, baseType: !1836, size: 160, offset: 768)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2719, file: !463, line: 466, baseType: !1838, size: 160, offset: 928)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2719, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!2742 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2743, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2744, splitDebugInlining: false, nameTableKind: None)
!2743 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/integration")
!2744 = !{!2745, !152, !106, !107}
!2745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2746, size: 32)
!2746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2747, line: 98, size: 256, elements: !2748)
!2747 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2748 = !{!2749, !2754, !2759, !2764, !2769, !2774, !2779, !2784}
!2749 = !DIDerivedType(tag: DW_TAG_member, scope: !2746, file: !2747, line: 99, baseType: !2750, size: 32)
!2750 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2746, file: !2747, line: 99, size: 32, elements: !2751)
!2751 = !{!2752, !2753}
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2750, file: !2747, line: 99, baseType: !152, size: 32)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2750, file: !2747, line: 99, baseType: !152, size: 32)
!2754 = !DIDerivedType(tag: DW_TAG_member, scope: !2746, file: !2747, line: 100, baseType: !2755, size: 32, offset: 32)
!2755 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2746, file: !2747, line: 100, size: 32, elements: !2756)
!2756 = !{!2757, !2758}
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2755, file: !2747, line: 100, baseType: !152, size: 32)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2755, file: !2747, line: 100, baseType: !152, size: 32)
!2759 = !DIDerivedType(tag: DW_TAG_member, scope: !2746, file: !2747, line: 101, baseType: !2760, size: 32, offset: 64)
!2760 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2746, file: !2747, line: 101, size: 32, elements: !2761)
!2761 = !{!2762, !2763}
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2760, file: !2747, line: 101, baseType: !152, size: 32)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2760, file: !2747, line: 101, baseType: !152, size: 32)
!2764 = !DIDerivedType(tag: DW_TAG_member, scope: !2746, file: !2747, line: 102, baseType: !2765, size: 32, offset: 96)
!2765 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2746, file: !2747, line: 102, size: 32, elements: !2766)
!2766 = !{!2767, !2768}
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2765, file: !2747, line: 102, baseType: !152, size: 32)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2765, file: !2747, line: 102, baseType: !152, size: 32)
!2769 = !DIDerivedType(tag: DW_TAG_member, scope: !2746, file: !2747, line: 103, baseType: !2770, size: 32, offset: 128)
!2770 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2746, file: !2747, line: 103, size: 32, elements: !2771)
!2771 = !{!2772, !2773}
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2770, file: !2747, line: 103, baseType: !152, size: 32)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2770, file: !2747, line: 103, baseType: !152, size: 32)
!2774 = !DIDerivedType(tag: DW_TAG_member, scope: !2746, file: !2747, line: 104, baseType: !2775, size: 32, offset: 160)
!2775 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2746, file: !2747, line: 104, size: 32, elements: !2776)
!2776 = !{!2777, !2778}
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2775, file: !2747, line: 104, baseType: !152, size: 32)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2775, file: !2747, line: 104, baseType: !152, size: 32)
!2779 = !DIDerivedType(tag: DW_TAG_member, scope: !2746, file: !2747, line: 105, baseType: !2780, size: 32, offset: 192)
!2780 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2746, file: !2747, line: 105, size: 32, elements: !2781)
!2781 = !{!2782, !2783}
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2780, file: !2747, line: 105, baseType: !152, size: 32)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2780, file: !2747, line: 105, baseType: !152, size: 32)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2746, file: !2747, line: 106, baseType: !152, size: 32, offset: 224)
!2785 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2786, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2629, retainedTypes: !2787, splitDebugInlining: false, nameTableKind: None)
!2786 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/integration")
!2787 = !{!2788, !106, !107, !2813, !2856, !152}
!2788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2789, size: 32)
!2789 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !2790)
!2790 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !2791)
!2791 = !{!2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799, !2800, !2801, !2802, !2803, !2804, !2805, !2806, !2807, !2808, !2809, !2810, !2811, !2812}
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2790, file: !463, line: 447, baseType: !467, size: 32)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2790, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2790, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2790, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2790, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2790, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2790, file: !463, line: 453, baseType: !1819, size: 96, offset: 192)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2790, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2790, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2790, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2790, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2790, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2790, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2790, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2790, file: !463, line: 461, baseType: !1830, size: 64, offset: 512)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2790, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2790, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2790, file: !463, line: 464, baseType: !1834, size: 128, offset: 640)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2790, file: !463, line: 465, baseType: !1836, size: 160, offset: 768)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2790, file: !463, line: 466, baseType: !1838, size: 160, offset: 928)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2790, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!2813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2814, size: 32)
!2814 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2747, line: 141, baseType: !2815)
!2815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2747, line: 97, size: 256, elements: !2816)
!2816 = !{!2817}
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2815, file: !2747, line: 107, baseType: !2818, size: 256)
!2818 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2747, line: 98, size: 256, elements: !2819)
!2819 = !{!2820, !2825, !2830, !2835, !2840, !2845, !2850, !2855}
!2820 = !DIDerivedType(tag: DW_TAG_member, scope: !2818, file: !2747, line: 99, baseType: !2821, size: 32)
!2821 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2818, file: !2747, line: 99, size: 32, elements: !2822)
!2822 = !{!2823, !2824}
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2821, file: !2747, line: 99, baseType: !152, size: 32)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2821, file: !2747, line: 99, baseType: !152, size: 32)
!2825 = !DIDerivedType(tag: DW_TAG_member, scope: !2818, file: !2747, line: 100, baseType: !2826, size: 32, offset: 32)
!2826 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2818, file: !2747, line: 100, size: 32, elements: !2827)
!2827 = !{!2828, !2829}
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2826, file: !2747, line: 100, baseType: !152, size: 32)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2826, file: !2747, line: 100, baseType: !152, size: 32)
!2830 = !DIDerivedType(tag: DW_TAG_member, scope: !2818, file: !2747, line: 101, baseType: !2831, size: 32, offset: 64)
!2831 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2818, file: !2747, line: 101, size: 32, elements: !2832)
!2832 = !{!2833, !2834}
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2831, file: !2747, line: 101, baseType: !152, size: 32)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2831, file: !2747, line: 101, baseType: !152, size: 32)
!2835 = !DIDerivedType(tag: DW_TAG_member, scope: !2818, file: !2747, line: 102, baseType: !2836, size: 32, offset: 96)
!2836 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2818, file: !2747, line: 102, size: 32, elements: !2837)
!2837 = !{!2838, !2839}
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2836, file: !2747, line: 102, baseType: !152, size: 32)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2836, file: !2747, line: 102, baseType: !152, size: 32)
!2840 = !DIDerivedType(tag: DW_TAG_member, scope: !2818, file: !2747, line: 103, baseType: !2841, size: 32, offset: 128)
!2841 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2818, file: !2747, line: 103, size: 32, elements: !2842)
!2842 = !{!2843, !2844}
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2841, file: !2747, line: 103, baseType: !152, size: 32)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2841, file: !2747, line: 103, baseType: !152, size: 32)
!2845 = !DIDerivedType(tag: DW_TAG_member, scope: !2818, file: !2747, line: 104, baseType: !2846, size: 32, offset: 160)
!2846 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2818, file: !2747, line: 104, size: 32, elements: !2847)
!2847 = !{!2848, !2849}
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2846, file: !2747, line: 104, baseType: !152, size: 32)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2846, file: !2747, line: 104, baseType: !152, size: 32)
!2850 = !DIDerivedType(tag: DW_TAG_member, scope: !2818, file: !2747, line: 105, baseType: !2851, size: 32, offset: 192)
!2851 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2818, file: !2747, line: 105, size: 32, elements: !2852)
!2852 = !{!2853, !2854}
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2851, file: !2747, line: 105, baseType: !152, size: 32)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2851, file: !2747, line: 105, baseType: !152, size: 32)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2818, file: !2747, line: 106, baseType: !152, size: 32, offset: 224)
!2856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !197, size: 32)
!2857 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2858, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1767, retainedTypes: !2859, splitDebugInlining: false, nameTableKind: None)
!2858 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/integration")
!2859 = !{!930, !904, !195, !152, !2860, !2877}
!2860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2861, size: 32)
!2861 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !463, line: 426, baseType: !2862)
!2862 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 411, size: 28704, elements: !2863)
!2863 = !{!2864, !2865, !2866, !2867, !2868, !2869, !2870, !2871, !2872, !2873, !2874, !2875, !2876}
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2862, file: !463, line: 413, baseType: !1782, size: 256)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2862, file: !463, line: 414, baseType: !1784, size: 768, offset: 256)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2862, file: !463, line: 415, baseType: !1782, size: 256, offset: 1024)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2862, file: !463, line: 416, baseType: !1784, size: 768, offset: 1280)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2862, file: !463, line: 417, baseType: !1782, size: 256, offset: 2048)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2862, file: !463, line: 418, baseType: !1784, size: 768, offset: 2304)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2862, file: !463, line: 419, baseType: !1782, size: 256, offset: 3072)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2862, file: !463, line: 420, baseType: !1784, size: 768, offset: 3328)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2862, file: !463, line: 421, baseType: !1782, size: 256, offset: 4096)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2862, file: !463, line: 422, baseType: !1795, size: 1792, offset: 4352)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2862, file: !463, line: 423, baseType: !1799, size: 1920, offset: 6144)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2862, file: !463, line: 424, baseType: !1804, size: 20608, offset: 8064)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2862, file: !463, line: 425, baseType: !227, size: 32, offset: 28672)
!2877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2878, size: 32)
!2878 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !2879)
!2879 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !2880)
!2880 = !{!2881, !2882, !2883, !2884, !2885, !2886, !2887, !2888, !2889, !2890, !2891, !2892, !2893, !2894, !2895, !2896, !2897, !2898, !2899, !2900, !2901}
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2879, file: !463, line: 447, baseType: !467, size: 32)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2879, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2879, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2879, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2879, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2879, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2879, file: !463, line: 453, baseType: !1819, size: 96, offset: 192)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2879, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2879, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2879, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2879, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2879, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2879, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2879, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2879, file: !463, line: 461, baseType: !1830, size: 64, offset: 512)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2879, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2879, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2879, file: !463, line: 464, baseType: !1834, size: 128, offset: 640)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2879, file: !463, line: 465, baseType: !1836, size: 160, offset: 768)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2879, file: !463, line: 466, baseType: !1838, size: 160, offset: 928)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2879, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!2902 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2903, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2904, splitDebugInlining: false, nameTableKind: None)
!2903 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/integration")
!2904 = !{!2905, !106, !107}
!2905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2906, size: 32)
!2906 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !2907)
!2907 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !2908)
!2908 = !{!2909, !2910, !2911, !2912, !2913, !2914, !2915, !2916, !2917, !2918, !2919, !2920, !2921, !2922, !2923, !2924, !2925, !2926, !2927, !2928, !2929}
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2907, file: !463, line: 447, baseType: !467, size: 32)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2907, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2907, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2907, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2907, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2907, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2907, file: !463, line: 453, baseType: !1819, size: 96, offset: 192)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2907, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2907, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2907, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2907, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2907, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2907, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2907, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2907, file: !463, line: 461, baseType: !1830, size: 64, offset: 512)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2907, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2907, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2907, file: !463, line: 464, baseType: !1834, size: 128, offset: 640)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2907, file: !463, line: 465, baseType: !1836, size: 160, offset: 768)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2907, file: !463, line: 466, baseType: !1838, size: 160, offset: 928)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2907, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!2930 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2931, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2932, splitDebugInlining: false, nameTableKind: None)
!2931 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/integration")
!2932 = !{!120, !193, !185, !1137, !2933, !196, !106}
!2933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2934, size: 32)
!2934 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !196)
!2935 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2936, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2937, splitDebugInlining: false, nameTableKind: None)
!2936 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/integration")
!2937 = !{!2938}
!2938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2939, size: 32)
!2939 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !223, line: 586, baseType: !2940)
!2940 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 550, size: 1216, elements: !2941)
!2941 = !{!2942, !2943, !2944, !2945, !2946, !2947, !2948, !2949, !2950, !2951, !2952, !2953, !2954, !2955, !2956, !2957, !2958, !2959, !2960, !2961, !2962, !2963, !2964, !2965, !2966, !2967, !2968, !2969, !2970, !2971, !2972, !2973, !2974, !2975}
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2940, file: !223, line: 552, baseType: !227, size: 32)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2940, file: !223, line: 553, baseType: !227, size: 32, offset: 32)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2940, file: !223, line: 554, baseType: !227, size: 32, offset: 64)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2940, file: !223, line: 555, baseType: !227, size: 32, offset: 96)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2940, file: !223, line: 556, baseType: !227, size: 32, offset: 128)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2940, file: !223, line: 557, baseType: !227, size: 32, offset: 160)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2940, file: !223, line: 558, baseType: !227, size: 32, offset: 192)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2940, file: !223, line: 559, baseType: !152, size: 32, offset: 224)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2940, file: !223, line: 560, baseType: !227, size: 32, offset: 256)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2940, file: !223, line: 561, baseType: !227, size: 32, offset: 288)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2940, file: !223, line: 562, baseType: !1002, size: 64, offset: 320)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2940, file: !223, line: 563, baseType: !227, size: 32, offset: 384)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2940, file: !223, line: 564, baseType: !227, size: 32, offset: 416)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2940, file: !223, line: 565, baseType: !227, size: 32, offset: 448)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2940, file: !223, line: 566, baseType: !152, size: 32, offset: 480)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2940, file: !223, line: 567, baseType: !227, size: 32, offset: 512)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2940, file: !223, line: 568, baseType: !227, size: 32, offset: 544)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2940, file: !223, line: 569, baseType: !1002, size: 64, offset: 576)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2940, file: !223, line: 570, baseType: !227, size: 32, offset: 640)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2940, file: !223, line: 571, baseType: !227, size: 32, offset: 672)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2940, file: !223, line: 572, baseType: !227, size: 32, offset: 704)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2940, file: !223, line: 573, baseType: !152, size: 32, offset: 736)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2940, file: !223, line: 574, baseType: !227, size: 32, offset: 768)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2940, file: !223, line: 575, baseType: !227, size: 32, offset: 800)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2940, file: !223, line: 576, baseType: !1002, size: 64, offset: 832)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2940, file: !223, line: 577, baseType: !227, size: 32, offset: 896)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2940, file: !223, line: 578, baseType: !227, size: 32, offset: 928)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2940, file: !223, line: 579, baseType: !1002, size: 64, offset: 960)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2940, file: !223, line: 580, baseType: !227, size: 32, offset: 1024)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2940, file: !223, line: 581, baseType: !227, size: 32, offset: 1056)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !2940, file: !223, line: 582, baseType: !227, size: 32, offset: 1088)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2940, file: !223, line: 583, baseType: !227, size: 32, offset: 1120)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !2940, file: !223, line: 584, baseType: !227, size: 32, offset: 1152)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !2940, file: !223, line: 585, baseType: !227, size: 32, offset: 1184)
!2976 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2977, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2977 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/integration")
!2978 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2979, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2980, retainedTypes: !2996, splitDebugInlining: false, nameTableKind: None)
!2979 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc_ex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/integration")
!2980 = !{!2981, !2988, !2992}
!2981 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2982, line: 38, baseType: !32, size: 32, elements: !2983)
!2982 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2983 = !{!2984, !2985, !2986, !2987}
!2984 = !DIEnumerator(name: "HAL_OK", value: 0)
!2985 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!2986 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!2987 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!2988 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !975, line: 184, baseType: !32, size: 32, elements: !2989)
!2989 = !{!2990, !2991}
!2990 = !DIEnumerator(name: "RESET", value: 0)
!2991 = !DIEnumerator(name: "SET", value: 1)
!2992 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !975, line: 190, baseType: !32, size: 32, elements: !2993)
!2993 = !{!2994, !2995}
!2994 = !DIEnumerator(name: "DISABLE", value: 0)
!2995 = !DIEnumerator(name: "ENABLE", value: 1)
!2996 = !{!2997, !152, !3035, !1616, !195, !566, !106}
!2997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2998, size: 32)
!2998 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !223, line: 586, baseType: !2999)
!2999 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 550, size: 1216, elements: !3000)
!3000 = !{!3001, !3002, !3003, !3004, !3005, !3006, !3007, !3008, !3009, !3010, !3011, !3012, !3013, !3014, !3015, !3016, !3017, !3018, !3019, !3020, !3021, !3022, !3023, !3024, !3025, !3026, !3027, !3028, !3029, !3030, !3031, !3032, !3033, !3034}
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2999, file: !223, line: 552, baseType: !227, size: 32)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2999, file: !223, line: 553, baseType: !227, size: 32, offset: 32)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2999, file: !223, line: 554, baseType: !227, size: 32, offset: 64)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2999, file: !223, line: 555, baseType: !227, size: 32, offset: 96)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2999, file: !223, line: 556, baseType: !227, size: 32, offset: 128)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2999, file: !223, line: 557, baseType: !227, size: 32, offset: 160)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2999, file: !223, line: 558, baseType: !227, size: 32, offset: 192)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2999, file: !223, line: 559, baseType: !152, size: 32, offset: 224)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2999, file: !223, line: 560, baseType: !227, size: 32, offset: 256)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2999, file: !223, line: 561, baseType: !227, size: 32, offset: 288)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2999, file: !223, line: 562, baseType: !1002, size: 64, offset: 320)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2999, file: !223, line: 563, baseType: !227, size: 32, offset: 384)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2999, file: !223, line: 564, baseType: !227, size: 32, offset: 416)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2999, file: !223, line: 565, baseType: !227, size: 32, offset: 448)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2999, file: !223, line: 566, baseType: !152, size: 32, offset: 480)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2999, file: !223, line: 567, baseType: !227, size: 32, offset: 512)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2999, file: !223, line: 568, baseType: !227, size: 32, offset: 544)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2999, file: !223, line: 569, baseType: !1002, size: 64, offset: 576)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2999, file: !223, line: 570, baseType: !227, size: 32, offset: 640)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2999, file: !223, line: 571, baseType: !227, size: 32, offset: 672)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2999, file: !223, line: 572, baseType: !227, size: 32, offset: 704)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2999, file: !223, line: 573, baseType: !152, size: 32, offset: 736)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2999, file: !223, line: 574, baseType: !227, size: 32, offset: 768)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2999, file: !223, line: 575, baseType: !227, size: 32, offset: 800)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2999, file: !223, line: 576, baseType: !1002, size: 64, offset: 832)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2999, file: !223, line: 577, baseType: !227, size: 32, offset: 896)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2999, file: !223, line: 578, baseType: !227, size: 32, offset: 928)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2999, file: !223, line: 579, baseType: !1002, size: 64, offset: 960)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2999, file: !223, line: 580, baseType: !227, size: 32, offset: 1024)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2999, file: !223, line: 581, baseType: !227, size: 32, offset: 1056)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !2999, file: !223, line: 582, baseType: !227, size: 32, offset: 1088)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2999, file: !223, line: 583, baseType: !227, size: 32, offset: 1120)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !2999, file: !223, line: 584, baseType: !227, size: 32, offset: 1152)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !2999, file: !223, line: 585, baseType: !227, size: 32, offset: 1184)
!3035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3036, size: 32)
!3036 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !223, line: 544, baseType: !3037)
!3037 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 540, size: 64, elements: !3038)
!3038 = !{!3039, !3040}
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3037, file: !223, line: 542, baseType: !227, size: 32)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3037, file: !223, line: 543, baseType: !227, size: 32, offset: 32)
!3041 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3042, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3043, retainedTypes: !3044, splitDebugInlining: false, nameTableKind: None)
!3042 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/integration")
!3043 = !{!974}
!3044 = !{!3045, !152, !3053, !3059, !3070}
!3045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3046, size: 32)
!3046 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !463, line: 770, baseType: !3047)
!3047 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 764, size: 128, elements: !3048)
!3048 = !{!3049, !3050, !3051, !3052}
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !3047, file: !463, line: 766, baseType: !227, size: 32)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !3047, file: !463, line: 767, baseType: !227, size: 32, offset: 32)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !3047, file: !463, line: 768, baseType: !227, size: 32, offset: 64)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !3047, file: !463, line: 769, baseType: !467, size: 32, offset: 96)
!3053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3054, size: 32)
!3054 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !223, line: 544, baseType: !3055)
!3055 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 540, size: 64, elements: !3056)
!3056 = !{!3057, !3058}
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3055, file: !223, line: 542, baseType: !227, size: 32)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3055, file: !223, line: 543, baseType: !227, size: 32, offset: 32)
!3059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3060, size: 32)
!3060 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !223, line: 407, baseType: !3061)
!3061 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 398, size: 224, elements: !3062)
!3062 = !{!3063, !3064, !3065, !3066, !3067, !3068, !3069}
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3061, file: !223, line: 400, baseType: !227, size: 32)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3061, file: !223, line: 401, baseType: !227, size: 32, offset: 32)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3061, file: !223, line: 402, baseType: !227, size: 32, offset: 64)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3061, file: !223, line: 403, baseType: !227, size: 32, offset: 96)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3061, file: !223, line: 404, baseType: !227, size: 32, offset: 128)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3061, file: !223, line: 405, baseType: !227, size: 32, offset: 160)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3061, file: !223, line: 406, baseType: !227, size: 32, offset: 192)
!3070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3071, size: 32)
!3071 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !223, line: 586, baseType: !3072)
!3072 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 550, size: 1216, elements: !3073)
!3073 = !{!3074, !3075, !3076, !3077, !3078, !3079, !3080, !3081, !3082, !3083, !3084, !3085, !3086, !3087, !3088, !3089, !3090, !3091, !3092, !3093, !3094, !3095, !3096, !3097, !3098, !3099, !3100, !3101, !3102, !3103, !3104, !3105, !3106, !3107}
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3072, file: !223, line: 552, baseType: !227, size: 32)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3072, file: !223, line: 553, baseType: !227, size: 32, offset: 32)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3072, file: !223, line: 554, baseType: !227, size: 32, offset: 64)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3072, file: !223, line: 555, baseType: !227, size: 32, offset: 96)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3072, file: !223, line: 556, baseType: !227, size: 32, offset: 128)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3072, file: !223, line: 557, baseType: !227, size: 32, offset: 160)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3072, file: !223, line: 558, baseType: !227, size: 32, offset: 192)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3072, file: !223, line: 559, baseType: !152, size: 32, offset: 224)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3072, file: !223, line: 560, baseType: !227, size: 32, offset: 256)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3072, file: !223, line: 561, baseType: !227, size: 32, offset: 288)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3072, file: !223, line: 562, baseType: !1002, size: 64, offset: 320)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3072, file: !223, line: 563, baseType: !227, size: 32, offset: 384)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3072, file: !223, line: 564, baseType: !227, size: 32, offset: 416)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3072, file: !223, line: 565, baseType: !227, size: 32, offset: 448)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3072, file: !223, line: 566, baseType: !152, size: 32, offset: 480)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3072, file: !223, line: 567, baseType: !227, size: 32, offset: 512)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3072, file: !223, line: 568, baseType: !227, size: 32, offset: 544)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3072, file: !223, line: 569, baseType: !1002, size: 64, offset: 576)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3072, file: !223, line: 570, baseType: !227, size: 32, offset: 640)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3072, file: !223, line: 571, baseType: !227, size: 32, offset: 672)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3072, file: !223, line: 572, baseType: !227, size: 32, offset: 704)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3072, file: !223, line: 573, baseType: !152, size: 32, offset: 736)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3072, file: !223, line: 574, baseType: !227, size: 32, offset: 768)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3072, file: !223, line: 575, baseType: !227, size: 32, offset: 800)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3072, file: !223, line: 576, baseType: !1002, size: 64, offset: 832)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3072, file: !223, line: 577, baseType: !227, size: 32, offset: 896)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3072, file: !223, line: 578, baseType: !227, size: 32, offset: 928)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3072, file: !223, line: 579, baseType: !1002, size: 64, offset: 960)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3072, file: !223, line: 580, baseType: !227, size: 32, offset: 1024)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3072, file: !223, line: 581, baseType: !227, size: 32, offset: 1056)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !3072, file: !223, line: 582, baseType: !227, size: 32, offset: 1088)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3072, file: !223, line: 583, baseType: !227, size: 32, offset: 1120)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !3072, file: !223, line: 584, baseType: !227, size: 32, offset: 1152)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !3072, file: !223, line: 585, baseType: !227, size: 32, offset: 1184)
!3108 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3109, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3110, splitDebugInlining: false, nameTableKind: None)
!3109 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/integration")
!3110 = !{!106, !185}
!3111 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3112, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3113, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!3112 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/integration")
!3113 = !{!3114, !3121, !2630, !30}
!3114 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3115, line: 14, baseType: !32, size: 32, elements: !3116)
!3115 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3116 = !{!3117, !3118, !3119, !3120}
!3117 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3118 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3119 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3120 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3121 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3115, line: 42, baseType: !32, size: 32, elements: !3122)
!3122 = !{!3123, !3124, !3125, !3126, !3127, !3128}
!3123 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3124 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3125 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3126 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3127 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3128 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3129 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3130, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!3130 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/integration")
!3131 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3132, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3133, splitDebugInlining: false, nameTableKind: None)
!3132 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/integration")
!3133 = !{!22, !106, !107}
!3134 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3135, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!3135 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/integration")
!3136 = !{!"Ubuntu clang version 14.0.6"}
!3137 = !{i32 7, !"Dwarf Version", i32 4}
!3138 = !{i32 2, !"Debug Info Version", i32 3}
!3139 = !{i32 1, !"wchar_size", i32 4}
!3140 = !{i32 1, !"min_enum_size", i32 4}
!3141 = !{i32 1, !"branch-target-enforcement", i32 0}
!3142 = !{i32 1, !"sign-return-address", i32 0}
!3143 = !{i32 1, !"sign-return-address-all", i32 0}
!3144 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3145 = !{i32 7, !"frame-pointer", i32 2}
!3146 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3147, file: !3147, line: 26, type: !3148, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2582, retainedNodes: !2236)
!3147 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3148 = !DISubroutineType(types: !3149)
!3149 = !{null}
!3150 = !DILocation(line: 28, column: 1, scope: !3146)
!3151 = !{i64 2155376770, i64 2155376790, i64 2155376853}
!3152 = !DILocation(line: 29, column: 1, scope: !3146)
!3153 = !{i64 2155377185, i64 2155377205, i64 2155377268}
!3154 = !DILocation(line: 30, column: 1, scope: !3146)
!3155 = !{i64 2155377604, i64 2155377624, i64 2155377687}
!3156 = !DILocation(line: 31, column: 1, scope: !3146)
!3157 = !{i64 2155378023, i64 2155378043, i64 2155378106}
!3158 = !DILocation(line: 33, column: 1, scope: !3146)
!3159 = !{i64 2155378315, i64 2155378335, i64 2155378398}
!3160 = !DILocation(line: 35, column: 1, scope: !3146)
!3161 = !{i64 2155378640, i64 2155378660, i64 2155378723}
!3162 = !DILocation(line: 50, column: 1, scope: !3146)
!3163 = !{i64 2155379067, i64 2155379087, i64 2155379150}
!3164 = !DILocation(line: 54, column: 1, scope: !3146)
!3165 = !{i64 2155379506, i64 2155379526, i64 2155379589}
!3166 = !DILocation(line: 61, column: 1, scope: !3146)
!3167 = !{i64 2155379823, i64 2155379843, i64 2155379906}
!3168 = !DILocation(line: 63, column: 1, scope: !3146)
!3169 = !{i64 2155380203, i64 2155380223, i64 2155380286}
!3170 = !DILocation(line: 64, column: 1, scope: !3146)
!3171 = !{i64 2155380725, i64 2155380745, i64 2155380808}
!3172 = !DILocation(line: 65, column: 1, scope: !3146)
!3173 = !{i64 2155381223, i64 2155381243, i64 2155381306}
!3174 = !DILocation(line: 66, column: 1, scope: !3146)
!3175 = !{i64 2155381705, i64 2155381725, i64 2155381788}
!3176 = !DILocation(line: 67, column: 1, scope: !3146)
!3177 = !{i64 2155382212, i64 2155382232, i64 2155382295}
!3178 = !DILocation(line: 68, column: 1, scope: !3146)
!3179 = !{i64 2155382700, i64 2155382720, i64 2155382783}
!3180 = !DILocation(line: 70, column: 1, scope: !3146)
!3181 = !{i64 2155383168, i64 2155383188, i64 2155383251}
!3182 = !DILocation(line: 71, column: 1, scope: !3146)
!3183 = !{i64 2155383610, i64 2155383630, i64 2155383693}
!3184 = !DILocation(line: 72, column: 1, scope: !3146)
!3185 = !{i64 2155384068, i64 2155384088, i64 2155384151}
!3186 = !DILocation(line: 79, column: 1, scope: !3146)
!3187 = !{i64 2155384522, i64 2155384542, i64 2155384605}
!3188 = !DILocation(line: 80, column: 1, scope: !3146)
!3189 = !{i64 2155385033, i64 2155385053, i64 2155385116}
!3190 = !DILocation(line: 82, column: 1, scope: !3146)
!3191 = !{i64 2155385524, i64 2155385544, i64 2155385607}
!3192 = !DILocation(line: 97, column: 1, scope: !3146)
!3193 = !{i64 2155385861, i64 2155385881, i64 2155385944}
!3194 = !DILocation(line: 99, column: 1, scope: !3146)
!3195 = !{i64 2155386079, i64 2155386099, i64 2155386162}
!3196 = !DILocation(line: 102, column: 1, scope: !3146)
!3197 = !{i64 2155390397, i64 2155390417, i64 2155390480}
!3198 = !DILocation(line: 105, column: 1, scope: !3146)
!3199 = !{i64 2155390637, i64 2155390657, i64 2155390720}
!3200 = !DILocation(line: 115, column: 1, scope: !3146)
!3201 = !{i64 2155390976, i64 2155390996, i64 2155391059}
!3202 = !DILocation(line: 118, column: 1, scope: !3146)
!3203 = !{i64 2155391320, i64 2155391340, i64 2155391403}
!3204 = !DILocation(line: 32, column: 1, scope: !3205)
!3205 = !DILexicalBlockFile(scope: !3146, file: !3206, discriminator: 0)
!3206 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3207 = !{i64 2155391676, i64 2155391696, i64 2155391759}
!3208 = !DILocation(line: 33, column: 1, scope: !3205)
!3209 = !{i64 2155392188, i64 2155392208, i64 2155392271}
!3210 = !DILocation(line: 53, column: 1, scope: !3205)
!3211 = !{i64 2155392696, i64 2155392716, i64 2155392779}
!3212 = !DILocation(line: 54, column: 1, scope: !3205)
!3213 = !{i64 2155393114, i64 2155393134, i64 2155393197}
!3214 = !DILocation(line: 55, column: 1, scope: !3205)
!3215 = !{i64 2155393532, i64 2155393552, i64 2155393615}
!3216 = !DILocation(line: 56, column: 1, scope: !3205)
!3217 = !{i64 2155393950, i64 2155393970, i64 2155394033}
!3218 = !DILocation(line: 57, column: 1, scope: !3205)
!3219 = !{i64 2155394368, i64 2155394388, i64 2155394451}
!3220 = !DILocation(line: 58, column: 1, scope: !3205)
!3221 = !{i64 2155394786, i64 2155394806, i64 2155394869}
!3222 = !DILocation(line: 59, column: 1, scope: !3205)
!3223 = !{i64 2155395204, i64 2155395224, i64 2155395287}
!3224 = !DILocation(line: 60, column: 1, scope: !3205)
!3225 = !{i64 2155395628, i64 2155395648, i64 2155395711}
!3226 = !DILocation(line: 61, column: 1, scope: !3205)
!3227 = !{i64 2155395945, i64 2155395965, i64 2155396028}
!3228 = !DILocation(line: 70, column: 1, scope: !3205)
!3229 = !{i64 2155396174, i64 2155396194, i64 2155396257}
!3230 = !DILocation(line: 72, column: 1, scope: !3205)
!3231 = !{i64 2155396506, i64 2155396526, i64 2155396589}
!3232 = !DILocation(line: 73, column: 1, scope: !3205)
!3233 = !{i64 2155396956, i64 2155396976, i64 2155397039}
!3234 = !DILocation(line: 74, column: 1, scope: !3205)
!3235 = !{i64 2155397406, i64 2155397426, i64 2155397489}
!3236 = !DILocation(line: 75, column: 1, scope: !3205)
!3237 = !{i64 2155397856, i64 2155397876, i64 2155397939}
!3238 = !DILocation(line: 76, column: 1, scope: !3205)
!3239 = !{i64 2155398306, i64 2155398326, i64 2155398389}
!3240 = !DILocation(line: 77, column: 1, scope: !3205)
!3241 = !{i64 2155398756, i64 2155398776, i64 2155398839}
!3242 = !DILocation(line: 78, column: 1, scope: !3205)
!3243 = !{i64 2155399206, i64 2155399226, i64 2155399289}
!3244 = !DILocation(line: 79, column: 1, scope: !3205)
!3245 = !{i64 2155399656, i64 2155399676, i64 2155399739}
!3246 = !DILocation(line: 80, column: 1, scope: !3205)
!3247 = !{i64 2155404170, i64 2155404190, i64 2155404253}
!3248 = !DILocation(line: 84, column: 1, scope: !3205)
!3249 = !{i64 2155404502, i64 2155404522, i64 2155404585}
!3250 = !DILocation(line: 91, column: 1, scope: !3205)
!3251 = !{i64 2155404899, i64 2155404919, i64 2155404982}
!3252 = !DILocation(line: 93, column: 1, scope: !3205)
!3253 = !{i64 2155405266, i64 2155405286, i64 2155405349}
!3254 = !DILocation(line: 106, column: 1, scope: !3205)
!3255 = !{i64 2155405536, i64 2155405556, i64 2155405619}
!3256 = !DILocation(line: 11, column: 1, scope: !3257)
!3257 = !DILexicalBlockFile(scope: !3146, file: !3258, discriminator: 0)
!3258 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3259 = distinct !DISubprogram(name: "_framework_tests_test_assert_wrapper", scope: !111, file: !111, line: 18, type: !131, scopeLine: 18, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3260)
!3260 = !{!3261}
!3261 = !DILocalVariable(name: "data", arg: 1, scope: !3259, file: !111, line: 18, type: !106)
!3262 = !DILocation(line: 0, scope: !3259)
!3263 = !DILocation(line: 18, column: 1, scope: !3259)
!3264 = distinct !DISubprogram(name: "cbvprintf_package", scope: !200, file: !200, line: 233, type: !3265, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3274)
!3265 = !DISubroutineType(types: !3266)
!3266 = !{!107, !106, !185, !152, !118, !3267}
!3267 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3268, line: 99, baseType: !3269)
!3268 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3269 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3268, line: 40, baseType: !3270)
!3270 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !200, baseType: !3271)
!3271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3272)
!3272 = !{!3273}
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3271, file: !200, line: 18, baseType: !106, size: 32)
!3274 = !{!3275, !3276, !3277, !3278, !3279, !3280, !3281, !3282, !3283, !3284, !3286, !3287, !3288, !3289, !3290, !3291, !3292, !3293, !3294, !3295, !3296, !3297, !3310, !3319, !3322, !3323, !3326, !3329, !3332, !3335, !3341}
!3275 = !DILocalVariable(name: "packaged", arg: 1, scope: !3264, file: !200, line: 233, type: !106)
!3276 = !DILocalVariable(name: "len", arg: 2, scope: !3264, file: !200, line: 233, type: !185)
!3277 = !DILocalVariable(name: "flags", arg: 3, scope: !3264, file: !200, line: 233, type: !152)
!3278 = !DILocalVariable(name: "fmt", arg: 4, scope: !3264, file: !200, line: 234, type: !118)
!3279 = !DILocalVariable(name: "ap", arg: 5, scope: !3264, file: !200, line: 234, type: !3267)
!3280 = !DILocalVariable(name: "buf0", scope: !3264, file: !200, line: 247, type: !194)
!3281 = !DILocalVariable(name: "buf", scope: !3264, file: !200, line: 248, type: !194)
!3282 = !DILocalVariable(name: "size", scope: !3264, file: !200, line: 249, type: !32)
!3283 = !DILocalVariable(name: "align", scope: !3264, file: !200, line: 250, type: !32)
!3284 = !DILocalVariable(name: "str_ptr_pos", scope: !3264, file: !200, line: 251, type: !3285)
!3285 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 128, elements: !2019)
!3286 = !DILocalVariable(name: "str_ptr_arg", scope: !3264, file: !200, line: 252, type: !3285)
!3287 = !DILocalVariable(name: "s_idx", scope: !3264, file: !200, line: 253, type: !32)
!3288 = !DILocalVariable(name: "s_rw_cnt", scope: !3264, file: !200, line: 254, type: !32)
!3289 = !DILocalVariable(name: "s_ro_cnt", scope: !3264, file: !200, line: 255, type: !32)
!3290 = !DILocalVariable(name: "arg_idx", scope: !3264, file: !200, line: 256, type: !107)
!3291 = !DILocalVariable(name: "i", scope: !3264, file: !200, line: 257, type: !32)
!3292 = !DILocalVariable(name: "s", scope: !3264, file: !200, line: 258, type: !118)
!3293 = !DILocalVariable(name: "parsing", scope: !3264, file: !200, line: 259, type: !145)
!3294 = !DILocalVariable(name: "rws_pos_en", scope: !3264, file: !200, line: 263, type: !145)
!3295 = !DILocalVariable(name: "fros_cnt", scope: !3264, file: !200, line: 268, type: !107)
!3296 = !DILocalVariable(name: "is_str_arg", scope: !3264, file: !200, line: 269, type: !145)
!3297 = !DILocalVariable(name: "pkg_hdr", scope: !3264, file: !200, line: 270, type: !3298)
!3298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3299, size: 32)
!3299 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "cbprintf_package_hdr", file: !3300, line: 78, size: 32, elements: !3301)
!3300 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3301 = !{!3302, !3309}
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !3299, file: !3300, line: 80, baseType: !3303, size: 32)
!3303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_desc", file: !3300, line: 45, size: 32, elements: !3304)
!3304 = !{!3305, !3306, !3307, !3308}
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3303, file: !3300, line: 47, baseType: !195, size: 8)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "str_cnt", scope: !3303, file: !3300, line: 50, baseType: !195, size: 8, offset: 8)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "ro_str_cnt", scope: !3303, file: !3300, line: 53, baseType: !195, size: 8, offset: 16)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "rw_str_cnt", scope: !3303, file: !3300, line: 56, baseType: !195, size: 8, offset: 24)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !3299, file: !3300, line: 82, baseType: !106, size: 32)
!3310 = !DILocalVariable(name: "v", scope: !3311, file: !200, line: 567, type: !3315)
!3311 = distinct !DILexicalBlock(scope: !3312, file: !200, line: 562, column: 14)
!3312 = distinct !DILexicalBlock(scope: !3313, file: !200, line: 481, column: 18)
!3313 = distinct !DILexicalBlock(scope: !3314, file: !200, line: 466, column: 3)
!3314 = distinct !DILexicalBlock(scope: !3264, file: !200, line: 343, column: 15)
!3315 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3264, file: !200, line: 567, size: 64, elements: !3316)
!3316 = !{!3317, !3318}
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !3315, file: !200, line: 567, baseType: !183, size: 64)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "ld", scope: !3315, file: !200, line: 567, baseType: !181, size: 64)
!3319 = !DILocalVariable(name: "is_ro", scope: !3320, file: !200, line: 620, type: !145)
!3320 = distinct !DILexicalBlock(scope: !3321, file: !200, line: 613, column: 19)
!3321 = distinct !DILexicalBlock(scope: !3314, file: !200, line: 613, column: 7)
!3322 = !DILocalVariable(name: "do_ro", scope: !3320, file: !200, line: 621, type: !145)
!3323 = !DILocalVariable(name: "s_ptr_idx", scope: !3324, file: !200, line: 626, type: !152)
!3324 = distinct !DILexicalBlock(scope: !3325, file: !200, line: 625, column: 11)
!3325 = distinct !DILexicalBlock(scope: !3320, file: !200, line: 623, column: 8)
!3326 = !DILocalVariable(name: "v", scope: !3327, file: !200, line: 684, type: !107)
!3327 = distinct !DILexicalBlock(scope: !3328, file: !200, line: 683, column: 35)
!3328 = distinct !DILexicalBlock(scope: !3321, file: !200, line: 683, column: 14)
!3329 = !DILocalVariable(name: "v", scope: !3330, file: !200, line: 691, type: !189)
!3330 = distinct !DILexicalBlock(scope: !3331, file: !200, line: 690, column: 36)
!3331 = distinct !DILexicalBlock(scope: !3328, file: !200, line: 690, column: 14)
!3332 = !DILocalVariable(name: "v", scope: !3333, file: !200, line: 698, type: !191)
!3333 = distinct !DILexicalBlock(scope: !3334, file: !200, line: 697, column: 41)
!3334 = distinct !DILexicalBlock(scope: !3331, file: !200, line: 697, column: 14)
!3335 = !DILocalVariable(name: "pos", scope: !3336, file: !200, line: 762, type: !195)
!3336 = distinct !DILexicalBlock(scope: !3337, file: !200, line: 757, column: 31)
!3337 = distinct !DILexicalBlock(scope: !3338, file: !200, line: 757, column: 3)
!3338 = distinct !DILexicalBlock(scope: !3339, file: !200, line: 757, column: 3)
!3339 = distinct !DILexicalBlock(scope: !3340, file: !200, line: 756, column: 16)
!3340 = distinct !DILexicalBlock(scope: !3264, file: !200, line: 756, column: 6)
!3341 = !DILabel(scope: !3320, name: "process_string", file: !200, line: 615)
!3342 = !DILocation(line: 0, scope: !3264)
!3343 = !DILocation(line: 251, column: 2, scope: !3264)
!3344 = !DILocation(line: 251, column: 10, scope: !3264)
!3345 = !DILocation(line: 252, column: 2, scope: !3264)
!3346 = !DILocation(line: 252, column: 10, scope: !3264)
!3347 = !DILocation(line: 263, column: 29, scope: !3264)
!3348 = !DILocation(line: 263, column: 21, scope: !3264)
!3349 = !DILocation(line: 268, column: 21, scope: !3264)
!3350 = !DILocation(line: 268, column: 19, scope: !3264)
!3351 = !DILocation(line: 273, column: 6, scope: !3352)
!3352 = distinct !DILexicalBlock(scope: !3264, file: !200, line: 273, column: 6)
!3353 = !DILocation(line: 273, column: 26, scope: !3352)
!3354 = !DILocation(line: 273, column: 6, scope: !3264)
!3355 = !DILocation(line: 297, column: 6, scope: !3264)
!3356 = !DILocation(line: 305, column: 11, scope: !3357)
!3357 = distinct !DILexicalBlock(scope: !3264, file: !200, line: 305, column: 6)
!3358 = !DILocation(line: 305, column: 6, scope: !3264)
!3359 = !DILocation(line: 327, column: 19, scope: !3360)
!3360 = distinct !DILexicalBlock(scope: !3264, file: !200, line: 327, column: 6)
!3361 = !DILocation(line: 327, column: 22, scope: !3360)
!3362 = !DILocation(line: 327, column: 33, scope: !3360)
!3363 = !DILocation(line: 327, column: 50, scope: !3360)
!3364 = !DILocation(line: 327, column: 6, scope: !3264)
!3365 = !DILocation(line: 338, column: 9, scope: !3264)
!3366 = !DILocation(line: 341, column: 2, scope: !3264)
!3367 = !DILocation(line: 472, column: 8, scope: !3313)
!3368 = !DILocation(line: 473, column: 14, scope: !3369)
!3369 = distinct !DILexicalBlock(scope: !3370, file: !200, line: 473, column: 9)
!3370 = distinct !DILexicalBlock(scope: !3371, file: !200, line: 472, column: 18)
!3371 = distinct !DILexicalBlock(scope: !3313, file: !200, line: 472, column: 8)
!3372 = !DILocation(line: 473, column: 9, scope: !3370)
!3373 = !DILocation(line: 479, column: 5, scope: !3370)
!3374 = !DILocation(line: 468, column: 9, scope: !3375)
!3375 = distinct !DILexicalBlock(scope: !3313, file: !200, line: 468, column: 8)
!3376 = !DILocation(line: 468, column: 8, scope: !3375)
!3377 = !DILocation(line: 468, column: 15, scope: !3375)
!3378 = !DILocation(line: 468, column: 8, scope: !3313)
!3379 = distinct !{!3379, !3380, !3381}
!3380 = !DILocation(line: 343, column: 2, scope: !3264)
!3381 = !DILocation(line: 712, column: 2, scope: !3264)
!3382 = !DILocation(line: 481, column: 4, scope: !3313)
!3383 = !DILocation(line: 484, column: 12, scope: !3312)
!3384 = !DILocation(line: 485, column: 5, scope: !3312)
!3385 = !DILocation(line: 505, column: 5, scope: !3312)
!3386 = !DILocation(line: 518, column: 5, scope: !3312)
!3387 = !DILocation(line: 523, column: 5, scope: !3312)
!3388 = !DILocation(line: 532, column: 9, scope: !3389)
!3389 = distinct !DILexicalBlock(scope: !3312, file: !200, line: 532, column: 9)
!3390 = !DILocation(line: 532, column: 17, scope: !3389)
!3391 = !DILocation(line: 532, column: 9, scope: !3312)
!3392 = !DILocation(line: 533, column: 10, scope: !3393)
!3393 = distinct !DILexicalBlock(scope: !3394, file: !200, line: 533, column: 10)
!3394 = distinct !DILexicalBlock(scope: !3389, file: !200, line: 532, column: 25)
!3395 = !DILocation(line: 533, column: 18, scope: !3393)
!3396 = !DILocation(line: 0, scope: !3397)
!3397 = distinct !DILexicalBlock(scope: !3311, file: !200, line: 569, column: 9)
!3398 = !DILocation(line: 0, scope: !3311)
!3399 = !DILocation(line: 579, column: 20, scope: !3311)
!3400 = !DILocation(line: 579, column: 11, scope: !3311)
!3401 = !DILocation(line: 580, column: 9, scope: !3311)
!3402 = !DILocation(line: 582, column: 21, scope: !3403)
!3403 = distinct !DILexicalBlock(scope: !3404, file: !200, line: 582, column: 10)
!3404 = distinct !DILexicalBlock(scope: !3405, file: !200, line: 580, column: 23)
!3405 = distinct !DILexicalBlock(scope: !3311, file: !200, line: 580, column: 9)
!3406 = !DILocation(line: 582, column: 28, scope: !3403)
!3407 = !DILocation(line: 582, column: 10, scope: !3404)
!3408 = !DILocation(line: 0, scope: !3409)
!3409 = distinct !DILexicalBlock(scope: !3410, file: !200, line: 587, column: 17)
!3410 = distinct !DILexicalBlock(scope: !3404, file: !200, line: 585, column: 10)
!3411 = !DILocation(line: 593, column: 9, scope: !3311)
!3412 = !DILocation(line: 600, column: 5, scope: !3312)
!3413 = !DILocation(line: 605, column: 18, scope: !3314)
!3414 = !DILocation(line: 605, column: 9, scope: !3314)
!3415 = !DILocation(line: 608, column: 20, scope: !3416)
!3416 = distinct !DILexicalBlock(scope: !3314, file: !200, line: 608, column: 7)
!3417 = !DILocation(line: 608, column: 23, scope: !3416)
!3418 = !DILocation(line: 608, column: 34, scope: !3416)
!3419 = !DILocation(line: 608, column: 41, scope: !3416)
!3420 = !DILocation(line: 608, column: 7, scope: !3314)
!3421 = !DILocation(line: 613, column: 7, scope: !3314)
!3422 = !DILocation(line: 614, column: 8, scope: !3320)
!3423 = !DILocation(line: 614, column: 4, scope: !3320)
!3424 = !DILocation(line: 256, column: 6, scope: !3264)
!3425 = !DILocation(line: 254, column: 15, scope: !3264)
!3426 = !DILocation(line: 320, column: 7, scope: !3427)
!3427 = distinct !DILexicalBlock(scope: !3357, file: !200, line: 305, column: 20)
!3428 = !DILocation(line: 615, column: 1, scope: !3320)
!3429 = !DILocation(line: 616, column: 8, scope: !3320)
!3430 = !DILocation(line: 617, column: 5, scope: !3431)
!3431 = distinct !DILexicalBlock(scope: !3432, file: !200, line: 616, column: 22)
!3432 = distinct !DILexicalBlock(scope: !3320, file: !200, line: 616, column: 8)
!3433 = !DILocation(line: 617, column: 25, scope: !3431)
!3434 = !DILocation(line: 618, column: 4, scope: !3431)
!3435 = !DILocation(line: 620, column: 26, scope: !3320)
!3436 = !DILocation(line: 620, column: 29, scope: !3320)
!3437 = !DILocation(line: 620, column: 17, scope: !3320)
!3438 = !DILocation(line: 620, column: 43, scope: !3320)
!3439 = !DILocation(line: 0, scope: !3320)
!3440 = !DILocation(line: 623, column: 14, scope: !3325)
!3441 = !DILocation(line: 626, column: 26, scope: !3324)
!3442 = !DILocation(line: 626, column: 37, scope: !3324)
!3443 = !DILocation(line: 0, scope: !3324)
!3444 = !DILocation(line: 634, column: 15, scope: !3445)
!3445 = distinct !DILexicalBlock(scope: !3324, file: !200, line: 634, column: 9)
!3446 = !DILocation(line: 635, column: 6, scope: !3447)
!3447 = distinct !DILexicalBlock(scope: !3448, file: !200, line: 635, column: 6)
!3448 = distinct !DILexicalBlock(scope: !3449, file: !200, line: 635, column: 6)
!3449 = distinct !DILexicalBlock(scope: !3450, file: !200, line: 635, column: 6)
!3450 = distinct !DILexicalBlock(scope: !3445, file: !200, line: 634, column: 44)
!3451 = !DILocation(line: 639, column: 15, scope: !3452)
!3452 = distinct !DILexicalBlock(scope: !3324, file: !200, line: 639, column: 9)
!3453 = !DILocation(line: 639, column: 9, scope: !3324)
!3454 = !DILocation(line: 640, column: 6, scope: !3455)
!3455 = distinct !DILexicalBlock(scope: !3456, file: !200, line: 640, column: 6)
!3456 = distinct !DILexicalBlock(scope: !3457, file: !200, line: 640, column: 6)
!3457 = distinct !DILexicalBlock(scope: !3458, file: !200, line: 640, column: 6)
!3458 = distinct !DILexicalBlock(scope: !3452, file: !200, line: 639, column: 43)
!3459 = !DILocation(line: 644, column: 9, scope: !3324)
!3460 = !DILocation(line: 649, column: 27, scope: !3461)
!3461 = distinct !DILexicalBlock(scope: !3462, file: !200, line: 644, column: 23)
!3462 = distinct !DILexicalBlock(scope: !3324, file: !200, line: 644, column: 9)
!3463 = !DILocation(line: 649, column: 6, scope: !3461)
!3464 = !DILocation(line: 649, column: 25, scope: !3461)
!3465 = !DILocation(line: 650, column: 27, scope: !3461)
!3466 = !DILocation(line: 650, column: 6, scope: !3461)
!3467 = !DILocation(line: 650, column: 25, scope: !3461)
!3468 = !DILocation(line: 651, column: 10, scope: !3461)
!3469 = !DILocation(line: 653, column: 26, scope: !3470)
!3470 = distinct !DILexicalBlock(scope: !3471, file: !200, line: 651, column: 17)
!3471 = distinct !DILexicalBlock(scope: !3461, file: !200, line: 651, column: 10)
!3472 = !DILocation(line: 654, column: 15, scope: !3470)
!3473 = !DILocation(line: 655, column: 6, scope: !3470)
!3474 = !DILocation(line: 656, column: 15, scope: !3475)
!3475 = distinct !DILexicalBlock(scope: !3471, file: !200, line: 655, column: 13)
!3476 = !DILocation(line: 658, column: 16, scope: !3462)
!3477 = !DILocation(line: 663, column: 10, scope: !3478)
!3478 = distinct !DILexicalBlock(scope: !3479, file: !200, line: 658, column: 23)
!3479 = distinct !DILexicalBlock(scope: !3462, file: !200, line: 658, column: 16)
!3480 = !DILocation(line: 664, column: 5, scope: !3478)
!3481 = !DILocation(line: 664, column: 16, scope: !3479)
!3482 = !DILocation(line: 669, column: 10, scope: !3483)
!3483 = distinct !DILexicalBlock(scope: !3484, file: !200, line: 664, column: 28)
!3484 = distinct !DILexicalBlock(scope: !3479, file: !200, line: 664, column: 16)
!3485 = !DILocation(line: 670, column: 5, scope: !3483)
!3486 = !DILocation(line: 675, column: 13, scope: !3487)
!3487 = distinct !DILexicalBlock(scope: !3484, file: !200, line: 670, column: 12)
!3488 = !DILocation(line: 675, column: 27, scope: !3487)
!3489 = !DILocation(line: 675, column: 10, scope: !3487)
!3490 = !DILocation(line: 678, column: 10, scope: !3324)
!3491 = !DILocation(line: 680, column: 8, scope: !3320)
!3492 = !DILocation(line: 683, column: 14, scope: !3321)
!3493 = !DILocation(line: 684, column: 12, scope: !3327)
!3494 = !DILocation(line: 0, scope: !3327)
!3495 = !DILocation(line: 686, column: 8, scope: !3327)
!3496 = !DILocation(line: 687, column: 5, scope: !3497)
!3497 = distinct !DILexicalBlock(scope: !3498, file: !200, line: 686, column: 22)
!3498 = distinct !DILexicalBlock(scope: !3327, file: !200, line: 686, column: 8)
!3499 = !DILocation(line: 687, column: 17, scope: !3497)
!3500 = !DILocation(line: 688, column: 4, scope: !3497)
!3501 = !DILocation(line: 698, column: 18, scope: !3333)
!3502 = !DILocation(line: 0, scope: !3333)
!3503 = !DILocation(line: 700, column: 8, scope: !3333)
!3504 = !DILocation(line: 704, column: 6, scope: !3505)
!3505 = distinct !DILexicalBlock(scope: !3506, file: !200, line: 703, column: 12)
!3506 = distinct !DILexicalBlock(scope: !3507, file: !200, line: 701, column: 9)
!3507 = distinct !DILexicalBlock(scope: !3508, file: !200, line: 700, column: 22)
!3508 = distinct !DILexicalBlock(scope: !3333, file: !200, line: 700, column: 8)
!3509 = !DILocation(line: 704, column: 24, scope: !3505)
!3510 = !DILocation(line: 706, column: 4, scope: !3507)
!3511 = !DILocation(line: 709, column: 4, scope: !3512)
!3512 = distinct !DILexicalBlock(scope: !3513, file: !200, line: 709, column: 4)
!3513 = distinct !DILexicalBlock(scope: !3514, file: !200, line: 709, column: 4)
!3514 = distinct !DILexicalBlock(scope: !3515, file: !200, line: 709, column: 4)
!3515 = distinct !DILexicalBlock(scope: !3334, file: !200, line: 708, column: 10)
!3516 = !DILocation(line: 0, scope: !3328)
!3517 = !DILocation(line: 0, scope: !3314)
!3518 = !DILocation(line: 720, column: 6, scope: !3519)
!3519 = distinct !DILexicalBlock(scope: !3264, file: !200, line: 720, column: 6)
!3520 = !DILocation(line: 720, column: 17, scope: !3519)
!3521 = !DILocation(line: 720, column: 31, scope: !3519)
!3522 = !DILocation(line: 720, column: 6, scope: !3264)
!3523 = !DILocation(line: 721, column: 3, scope: !3524)
!3524 = distinct !DILexicalBlock(scope: !3525, file: !200, line: 721, column: 3)
!3525 = distinct !DILexicalBlock(scope: !3526, file: !200, line: 721, column: 3)
!3526 = distinct !DILexicalBlock(scope: !3527, file: !200, line: 721, column: 3)
!3527 = distinct !DILexicalBlock(scope: !3519, file: !200, line: 720, column: 38)
!3528 = !DILocation(line: 729, column: 6, scope: !3264)
!3529 = !DILocation(line: 730, column: 21, scope: !3530)
!3530 = distinct !DILexicalBlock(scope: !3531, file: !200, line: 729, column: 20)
!3531 = distinct !DILexicalBlock(scope: !3264, file: !200, line: 729, column: 6)
!3532 = !DILocation(line: 730, column: 27, scope: !3530)
!3533 = !DILocation(line: 730, column: 3, scope: !3530)
!3534 = !DILocation(line: 737, column: 22, scope: !3264)
!3535 = !DILocation(line: 737, column: 20, scope: !3264)
!3536 = !DILocation(line: 0, scope: !3537)
!3537 = distinct !DILexicalBlock(scope: !3264, file: !200, line: 739, column: 6)
!3538 = !DILocation(line: 745, column: 17, scope: !3539)
!3539 = distinct !DILexicalBlock(scope: !3537, file: !200, line: 743, column: 9)
!3540 = !DILocation(line: 745, column: 25, scope: !3539)
!3541 = !DILocation(line: 746, column: 17, scope: !3539)
!3542 = !DILocation(line: 746, column: 28, scope: !3539)
!3543 = !DILocation(line: 749, column: 29, scope: !3264)
!3544 = !DILocation(line: 749, column: 16, scope: !3264)
!3545 = !DILocation(line: 749, column: 27, scope: !3264)
!3546 = !DILocation(line: 756, column: 6, scope: !3340)
!3547 = !DILocation(line: 756, column: 6, scope: !3264)
!3548 = !DILocation(line: 757, column: 3, scope: !3338)
!3549 = !DILocation(line: 758, column: 10, scope: !3550)
!3550 = distinct !DILexicalBlock(scope: !3336, file: !200, line: 758, column: 8)
!3551 = !DILocation(line: 758, column: 25, scope: !3550)
!3552 = !DILocation(line: 758, column: 8, scope: !3336)
!3553 = !DILocation(line: 0, scope: !3336)
!3554 = !DILocation(line: 765, column: 8, scope: !3555)
!3555 = distinct !DILexicalBlock(scope: !3336, file: !200, line: 765, column: 8)
!3556 = !DILocation(line: 765, column: 19, scope: !3555)
!3557 = !DILocation(line: 765, column: 23, scope: !3555)
!3558 = !DILocation(line: 765, column: 8, scope: !3336)
!3559 = !DILocation(line: 762, column: 33, scope: !3336)
!3560 = !DILocation(line: 769, column: 8, scope: !3336)
!3561 = !DILocation(line: 769, column: 11, scope: !3336)
!3562 = !DILocation(line: 757, column: 27, scope: !3337)
!3563 = !DILocation(line: 757, column: 17, scope: !3337)
!3564 = distinct !{!3564, !3548, !3565}
!3565 = !DILocation(line: 770, column: 3, scope: !3338)
!3566 = !DILocation(line: 774, column: 16, scope: !3567)
!3567 = distinct !DILexicalBlock(scope: !3568, file: !200, line: 774, column: 2)
!3568 = distinct !DILexicalBlock(scope: !3264, file: !200, line: 774, column: 2)
!3569 = !DILocation(line: 774, column: 2, scope: !3568)
!3570 = !DILocation(line: 776, column: 16, scope: !3571)
!3571 = distinct !DILexicalBlock(scope: !3572, file: !200, line: 776, column: 7)
!3572 = distinct !DILexicalBlock(scope: !3567, file: !200, line: 774, column: 30)
!3573 = !DILocation(line: 776, column: 19, scope: !3571)
!3574 = !DILocation(line: 776, column: 34, scope: !3571)
!3575 = !DILocation(line: 776, column: 7, scope: !3572)
!3576 = !DILocation(line: 780, column: 7, scope: !3572)
!3577 = !DILocation(line: 782, column: 13, scope: !3578)
!3578 = distinct !DILexicalBlock(scope: !3579, file: !200, line: 780, column: 19)
!3579 = distinct !DILexicalBlock(scope: !3572, file: !200, line: 780, column: 7)
!3580 = !DILocation(line: 782, column: 8, scope: !3578)
!3581 = !DILocation(line: 782, column: 11, scope: !3578)
!3582 = !DILocation(line: 783, column: 3, scope: !3578)
!3583 = !DILocation(line: 785, column: 26, scope: !3584)
!3584 = distinct !DILexicalBlock(scope: !3579, file: !200, line: 783, column: 10)
!3585 = !DILocation(line: 785, column: 41, scope: !3584)
!3586 = !DILocation(line: 785, column: 24, scope: !3584)
!3587 = !DILocation(line: 785, column: 8, scope: !3584)
!3588 = !DILocation(line: 787, column: 52, scope: !3584)
!3589 = !DILocation(line: 789, column: 11, scope: !3584)
!3590 = !DILocation(line: 789, column: 21, scope: !3584)
!3591 = !DILocation(line: 0, scope: !3579)
!3592 = !DILocation(line: 793, column: 7, scope: !3593)
!3593 = distinct !DILexicalBlock(scope: !3572, file: !200, line: 793, column: 7)
!3594 = !DILocation(line: 793, column: 18, scope: !3593)
!3595 = !DILocation(line: 793, column: 22, scope: !3593)
!3596 = !DILocation(line: 793, column: 29, scope: !3593)
!3597 = !DILocation(line: 793, column: 7, scope: !3572)
!3598 = !DILocation(line: 797, column: 12, scope: !3572)
!3599 = !DILocation(line: 797, column: 7, scope: !3572)
!3600 = !DILocation(line: 797, column: 10, scope: !3572)
!3601 = !DILocation(line: 799, column: 3, scope: !3572)
!3602 = !DILocation(line: 800, column: 7, scope: !3572)
!3603 = !DILocation(line: 801, column: 2, scope: !3572)
!3604 = !DILocation(line: 338, column: 4, scope: !3264)
!3605 = !DILocation(line: 774, column: 26, scope: !3567)
!3606 = distinct !{!3606, !3569, !3607}
!3607 = !DILocation(line: 801, column: 2, scope: !3568)
!3608 = !DILocation(line: 808, column: 9, scope: !3264)
!3609 = !DILocation(line: 808, column: 2, scope: !3264)
!3610 = !DILocation(line: 813, column: 1, scope: !3264)
!3611 = distinct !DISubprogram(name: "ptr_in_rodata", scope: !200, file: !200, line: 33, type: !3612, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3614)
!3612 = !DISubroutineType(types: !3613)
!3613 = !{!145, !118}
!3614 = !{!3615}
!3615 = !DILocalVariable(name: "addr", arg: 1, scope: !3611, file: !200, line: 33, type: !118)
!3616 = !DILocation(line: 0, scope: !3611)
!3617 = !DILocation(line: 41, column: 9, scope: !3611)
!3618 = !DILocation(line: 41, column: 2, scope: !3611)
!3619 = distinct !DISubprogram(name: "linker_is_in_rodata", scope: !3620, file: !3620, line: 24, type: !143, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3621)
!3620 = !DIFile(filename: "zephyr/include/zephyr/linker/utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3621 = !{!3622}
!3622 = !DILocalVariable(name: "addr", arg: 1, scope: !3619, file: !3620, line: 24, type: !13)
!3623 = !DILocation(line: 0, scope: !3619)
!3624 = !DILocation(line: 49, column: 30, scope: !3619)
!3625 = !DILocation(line: 49, column: 57, scope: !3619)
!3626 = !DILocation(line: 49, column: 2, scope: !3619)
!3627 = distinct !DISubprogram(name: "cbprintf_package", scope: !200, file: !200, line: 815, type: !3628, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3630)
!3628 = !DISubroutineType(types: !3629)
!3629 = !{!107, !106, !185, !152, !118, null}
!3630 = !{!3631, !3632, !3633, !3634, !3635, !3636}
!3631 = !DILocalVariable(name: "packaged", arg: 1, scope: !3627, file: !200, line: 815, type: !106)
!3632 = !DILocalVariable(name: "len", arg: 2, scope: !3627, file: !200, line: 815, type: !185)
!3633 = !DILocalVariable(name: "flags", arg: 3, scope: !3627, file: !200, line: 815, type: !152)
!3634 = !DILocalVariable(name: "format", arg: 4, scope: !3627, file: !200, line: 816, type: !118)
!3635 = !DILocalVariable(name: "ap", scope: !3627, file: !200, line: 818, type: !3267)
!3636 = !DILocalVariable(name: "ret", scope: !3627, file: !200, line: 819, type: !107)
!3637 = !DILocation(line: 0, scope: !3627)
!3638 = !DILocation(line: 818, column: 2, scope: !3627)
!3639 = !DILocation(line: 818, column: 10, scope: !3627)
!3640 = !DILocation(line: 821, column: 2, scope: !3627)
!3641 = !DILocation(line: 822, column: 8, scope: !3627)
!3642 = !DILocation(line: 823, column: 2, scope: !3627)
!3643 = !DILocation(line: 825, column: 1, scope: !3627)
!3644 = !DILocation(line: 824, column: 2, scope: !3627)
!3645 = distinct !DISubprogram(name: "cbpprintf_external", scope: !200, file: !200, line: 827, type: !3646, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3656)
!3646 = !DISubroutineType(types: !3647)
!3647 = !{!107, !3648, !3652, !106, !106}
!3648 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3300, line: 297, baseType: !3649)
!3649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3650, size: 32)
!3650 = !DISubroutineType(types: !3651)
!3651 = !{!107, null}
!3652 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbvprintf_external_formatter_func", file: !3300, line: 328, baseType: !3653)
!3653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3654, size: 32)
!3654 = !DISubroutineType(types: !3655)
!3655 = !{!107, !3648, !106, !118, !3267}
!3656 = !{!3657, !3658, !3659, !3660, !3661, !3662, !3668, !3669, !3670, !3671, !3672, !3673, !3674, !3675}
!3657 = !DILocalVariable(name: "out", arg: 1, scope: !3645, file: !200, line: 827, type: !3648)
!3658 = !DILocalVariable(name: "formatter", arg: 2, scope: !3645, file: !200, line: 828, type: !3652)
!3659 = !DILocalVariable(name: "ctx", arg: 3, scope: !3645, file: !200, line: 829, type: !106)
!3660 = !DILocalVariable(name: "packaged", arg: 4, scope: !3645, file: !200, line: 829, type: !106)
!3661 = !DILocalVariable(name: "buf", scope: !3645, file: !200, line: 831, type: !194)
!3662 = !DILocalVariable(name: "hdr", scope: !3645, file: !200, line: 832, type: !3663)
!3663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3664, size: 32)
!3664 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_hdr_ext", file: !3300, line: 96, size: 64, elements: !3665)
!3665 = !{!3666, !3667}
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !3664, file: !3300, line: 98, baseType: !3299, size: 32)
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !3664, file: !3300, line: 101, baseType: !193, size: 32, offset: 32)
!3668 = !DILocalVariable(name: "s", scope: !3645, file: !200, line: 833, type: !193)
!3669 = !DILocalVariable(name: "ps", scope: !3645, file: !200, line: 833, type: !192)
!3670 = !DILocalVariable(name: "i", scope: !3645, file: !200, line: 834, type: !32)
!3671 = !DILocalVariable(name: "args_size", scope: !3645, file: !200, line: 834, type: !32)
!3672 = !DILocalVariable(name: "s_nbr", scope: !3645, file: !200, line: 834, type: !32)
!3673 = !DILocalVariable(name: "ros_nbr", scope: !3645, file: !200, line: 834, type: !32)
!3674 = !DILocalVariable(name: "rws_nbr", scope: !3645, file: !200, line: 834, type: !32)
!3675 = !DILocalVariable(name: "s_idx", scope: !3645, file: !200, line: 834, type: !32)
!3676 = !DILocation(line: 0, scope: !3645)
!3677 = !DILocation(line: 836, column: 10, scope: !3678)
!3678 = distinct !DILexicalBlock(scope: !3645, file: !200, line: 836, column: 6)
!3679 = !DILocation(line: 836, column: 6, scope: !3645)
!3680 = !DILocation(line: 842, column: 28, scope: !3645)
!3681 = !DILocation(line: 842, column: 14, scope: !3645)
!3682 = !DILocation(line: 852, column: 16, scope: !3683)
!3683 = distinct !DILexicalBlock(scope: !3684, file: !200, line: 852, column: 2)
!3684 = distinct !DILexicalBlock(scope: !3645, file: !200, line: 852, column: 2)
!3685 = !DILocation(line: 852, column: 2, scope: !3684)
!3686 = !DILocation(line: 841, column: 28, scope: !3645)
!3687 = !DILocation(line: 841, column: 14, scope: !3645)
!3688 = !DILocation(line: 841, column: 32, scope: !3645)
!3689 = !DILocation(line: 847, column: 19, scope: !3645)
!3690 = !DILocation(line: 843, column: 28, scope: !3645)
!3691 = !DILocation(line: 843, column: 14, scope: !3645)
!3692 = !DILocation(line: 847, column: 31, scope: !3645)
!3693 = !DILocation(line: 844, column: 28, scope: !3645)
!3694 = !DILocation(line: 844, column: 14, scope: !3645)
!3695 = !DILocation(line: 847, column: 45, scope: !3645)
!3696 = !DILocation(line: 847, column: 41, scope: !3645)
!3697 = !DILocation(line: 854, column: 24, scope: !3698)
!3698 = distinct !DILexicalBlock(scope: !3683, file: !200, line: 852, column: 30)
!3699 = !DILocation(line: 854, column: 11, scope: !3698)
!3700 = !DILocation(line: 855, column: 30, scope: !3698)
!3701 = !DILocation(line: 855, column: 22, scope: !3698)
!3702 = !DILocation(line: 855, column: 8, scope: !3698)
!3703 = !DILocation(line: 857, column: 7, scope: !3698)
!3704 = !DILocation(line: 859, column: 8, scope: !3698)
!3705 = !DILocation(line: 859, column: 18, scope: !3698)
!3706 = !DILocation(line: 859, column: 5, scope: !3698)
!3707 = !DILocation(line: 852, column: 26, scope: !3683)
!3708 = distinct !{!3708, !3685, !3709}
!3709 = !DILocation(line: 860, column: 2, scope: !3684)
!3710 = !DILocation(line: 863, column: 6, scope: !3645)
!3711 = !DILocation(line: 866, column: 56, scope: !3645)
!3712 = !DILocation(line: 866, column: 9, scope: !3645)
!3713 = !DILocation(line: 866, column: 2, scope: !3645)
!3714 = !DILocation(line: 867, column: 1, scope: !3645)
!3715 = distinct !DISubprogram(name: "cbprintf_via_va_list", scope: !200, file: !200, line: 179, type: !3716, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3718)
!3716 = !DISubroutineType(types: !3717)
!3717 = !{!107, !3648, !3652, !106, !118, !106}
!3718 = !{!3719, !3720, !3721, !3722, !3723, !3724}
!3719 = !DILocalVariable(name: "out", arg: 1, scope: !3715, file: !200, line: 179, type: !3648)
!3720 = !DILocalVariable(name: "formatter", arg: 2, scope: !3715, file: !200, line: 180, type: !3652)
!3721 = !DILocalVariable(name: "ctx", arg: 3, scope: !3715, file: !200, line: 181, type: !106)
!3722 = !DILocalVariable(name: "fmt", arg: 4, scope: !3715, file: !200, line: 182, type: !118)
!3723 = !DILocalVariable(name: "buf", arg: 5, scope: !3715, file: !200, line: 182, type: !106)
!3724 = !DILocalVariable(name: "u", scope: !3715, file: !200, line: 187, type: !3725)
!3725 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3715, file: !200, line: 184, size: 32, elements: !3726)
!3726 = !{!3727, !3728}
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !3725, file: !200, line: 185, baseType: !3267, size: 32)
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3725, file: !200, line: 186, baseType: !106, size: 32)
!3729 = !DILocation(line: 0, scope: !3715)
!3730 = !DILocation(line: 191, column: 9, scope: !3715)
!3731 = !DILocation(line: 191, column: 2, scope: !3715)
!3732 = distinct !DISubprogram(name: "is_ptr", scope: !200, file: !200, line: 881, type: !3733, scopeLine: 882, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3735)
!3733 = !DISubroutineType(types: !3734)
!3734 = !{!145, !118, !107}
!3735 = !{!3736, !3737, !3738, !3739, !3740}
!3736 = !DILocalVariable(name: "fmt", arg: 1, scope: !3732, file: !200, line: 881, type: !118)
!3737 = !DILocalVariable(name: "n", arg: 2, scope: !3732, file: !200, line: 881, type: !107)
!3738 = !DILocalVariable(name: "c", scope: !3732, file: !200, line: 883, type: !120)
!3739 = !DILocalVariable(name: "mod", scope: !3732, file: !200, line: 884, type: !145)
!3740 = !DILocalVariable(name: "cnt", scope: !3732, file: !200, line: 885, type: !107)
!3741 = !DILocation(line: 0, scope: !3732)
!3742 = !DILocation(line: 887, column: 14, scope: !3732)
!3743 = !DILocation(line: 887, column: 22, scope: !3732)
!3744 = !DILocation(line: 887, column: 2, scope: !3732)
!3745 = !DILocation(line: 887, column: 18, scope: !3732)
!3746 = !DILocation(line: 888, column: 7, scope: !3747)
!3747 = distinct !DILexicalBlock(scope: !3732, file: !200, line: 887, column: 31)
!3748 = !DILocation(line: 889, column: 12, scope: !3749)
!3749 = distinct !DILexicalBlock(scope: !3750, file: !200, line: 889, column: 8)
!3750 = distinct !DILexicalBlock(scope: !3751, file: !200, line: 888, column: 12)
!3751 = distinct !DILexicalBlock(scope: !3747, file: !200, line: 888, column: 7)
!3752 = !DILocation(line: 889, column: 8, scope: !3750)
!3753 = !DILocation(line: 890, column: 11, scope: !3754)
!3754 = distinct !DILexicalBlock(scope: !3755, file: !200, line: 890, column: 9)
!3755 = distinct !DILexicalBlock(scope: !3749, file: !200, line: 889, column: 18)
!3756 = !DILocation(line: 890, column: 9, scope: !3755)
!3757 = !DILocation(line: 892, column: 16, scope: !3758)
!3758 = distinct !DILexicalBlock(scope: !3754, file: !200, line: 892, column: 16)
!3759 = !DILocation(line: 892, column: 16, scope: !3754)
!3760 = !DILocation(line: 895, column: 15, scope: !3761)
!3761 = distinct !DILexicalBlock(scope: !3749, file: !200, line: 895, column: 15)
!3762 = !DILocation(line: 895, column: 15, scope: !3749)
!3763 = !DILocation(line: 900, column: 9, scope: !3764)
!3764 = distinct !DILexicalBlock(scope: !3747, file: !200, line: 900, column: 7)
!3765 = !DILocation(line: 900, column: 7, scope: !3747)
!3766 = distinct !{!3766, !3744, !3767}
!3767 = !DILocation(line: 903, column: 2, scope: !3732)
!3768 = !DILocation(line: 906, column: 1, scope: !3732)
!3769 = distinct !DISubprogram(name: "is_fmt_spec", scope: !200, file: !200, line: 873, type: !3770, scopeLine: 874, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3772)
!3770 = !DISubroutineType(types: !3771)
!3771 = !{!145, !120}
!3772 = !{!3773}
!3773 = !DILocalVariable(name: "c", arg: 1, scope: !3769, file: !200, line: 873, type: !120)
!3774 = !DILocation(line: 0, scope: !3769)
!3775 = !DILocation(line: 875, column: 19, scope: !3769)
!3776 = !DILocation(line: 875, column: 2, scope: !3769)
!3777 = distinct !DISubprogram(name: "cbprintf_package_convert", scope: !200, file: !200, line: 908, type: !3778, scopeLine: 915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3784)
!3778 = !DISubroutineType(types: !3779)
!3779 = !{!107, !106, !185, !3780, !106, !152, !2856, !185}
!3780 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_convert_cb", file: !3300, line: 308, baseType: !3781)
!3781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3782, size: 32)
!3782 = !DISubroutineType(types: !3783)
!3783 = !{!107, !13, !185, !106}
!3784 = !{!3785, !3786, !3787, !3788, !3789, !3790, !3791, !3792, !3793, !3794, !3795, !3796, !3797, !3798, !3799, !3800, !3802, !3803, !3804, !3805, !3806, !3812, !3815, !3816, !3817, !3819, !3822, !3823, !3824, !3825, !3826, !3827, !3828, !3829, !3830, !3831, !3832, !3833, !3835, !3838, !3839, !3840, !3841, !3842, !3843, !3845, !3848, !3849, !3850}
!3785 = !DILocalVariable(name: "in_packaged", arg: 1, scope: !3777, file: !200, line: 908, type: !106)
!3786 = !DILocalVariable(name: "in_len", arg: 2, scope: !3777, file: !200, line: 909, type: !185)
!3787 = !DILocalVariable(name: "cb", arg: 3, scope: !3777, file: !200, line: 910, type: !3780)
!3788 = !DILocalVariable(name: "ctx", arg: 4, scope: !3777, file: !200, line: 911, type: !106)
!3789 = !DILocalVariable(name: "flags", arg: 5, scope: !3777, file: !200, line: 912, type: !152)
!3790 = !DILocalVariable(name: "strl", arg: 6, scope: !3777, file: !200, line: 913, type: !2856)
!3791 = !DILocalVariable(name: "strl_len", arg: 7, scope: !3777, file: !200, line: 914, type: !185)
!3792 = !DILocalVariable(name: "buf", scope: !3777, file: !200, line: 918, type: !194)
!3793 = !DILocalVariable(name: "buf32", scope: !3777, file: !200, line: 919, type: !1032)
!3794 = !DILocalVariable(name: "args_size", scope: !3777, file: !200, line: 920, type: !32)
!3795 = !DILocalVariable(name: "ros_nbr", scope: !3777, file: !200, line: 920, type: !32)
!3796 = !DILocalVariable(name: "rws_nbr", scope: !3777, file: !200, line: 920, type: !32)
!3797 = !DILocalVariable(name: "fmt_present", scope: !3777, file: !200, line: 921, type: !145)
!3798 = !DILocalVariable(name: "rw_cpy", scope: !3777, file: !200, line: 922, type: !145)
!3799 = !DILocalVariable(name: "ro_cpy", scope: !3777, file: !200, line: 923, type: !145)
!3800 = !DILocalVariable(name: "in_desc", scope: !3777, file: !200, line: 924, type: !3801)
!3801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3303, size: 32)
!3802 = !DILocalVariable(name: "out_len", scope: !3777, file: !200, line: 960, type: !107)
!3803 = !DILocalVariable(name: "fmt", scope: !3777, file: !200, line: 965, type: !118)
!3804 = !DILocalVariable(name: "str_pos", scope: !3777, file: !200, line: 966, type: !194)
!3805 = !DILocalVariable(name: "strl_cnt", scope: !3777, file: !200, line: 967, type: !185)
!3806 = !DILocalVariable(name: "i", scope: !3807, file: !200, line: 973, type: !107)
!3807 = distinct !DILexicalBlock(scope: !3808, file: !200, line: 973, column: 4)
!3808 = distinct !DILexicalBlock(scope: !3809, file: !200, line: 972, column: 15)
!3809 = distinct !DILexicalBlock(scope: !3810, file: !200, line: 972, column: 7)
!3810 = distinct !DILexicalBlock(scope: !3811, file: !200, line: 970, column: 18)
!3811 = distinct !DILexicalBlock(scope: !3777, file: !200, line: 970, column: 6)
!3812 = !DILocalVariable(name: "str", scope: !3813, file: !200, line: 974, type: !118)
!3813 = distinct !DILexicalBlock(scope: !3814, file: !200, line: 973, column: 38)
!3814 = distinct !DILexicalBlock(scope: !3807, file: !200, line: 973, column: 4)
!3815 = !DILocalVariable(name: "len", scope: !3813, file: !200, line: 975, type: !107)
!3816 = !DILocalVariable(name: "drop_ro_str_pos", scope: !3810, file: !200, line: 990, type: !145)
!3817 = !DILocalVariable(name: "i", scope: !3818, file: !200, line: 995, type: !107)
!3818 = distinct !DILexicalBlock(scope: !3810, file: !200, line: 995, column: 3)
!3819 = !DILocalVariable(name: "arg_idx", scope: !3820, file: !200, line: 996, type: !195)
!3820 = distinct !DILexicalBlock(scope: !3821, file: !200, line: 995, column: 37)
!3821 = distinct !DILexicalBlock(scope: !3818, file: !200, line: 995, column: 3)
!3822 = !DILocalVariable(name: "arg_pos", scope: !3820, file: !200, line: 997, type: !195)
!3823 = !DILocalVariable(name: "str", scope: !3820, file: !200, line: 998, type: !118)
!3824 = !DILocalVariable(name: "is_ro", scope: !3820, file: !200, line: 999, type: !145)
!3825 = !DILocalVariable(name: "len", scope: !3820, file: !200, line: 1000, type: !107)
!3826 = !DILocalVariable(name: "out_desc", scope: !3777, file: !200, line: 1038, type: !3303)
!3827 = !DILocalVariable(name: "cpy_str_pos", scope: !3777, file: !200, line: 1040, type: !3285)
!3828 = !DILocalVariable(name: "keep_str_pos", scope: !3777, file: !200, line: 1042, type: !3285)
!3829 = !DILocalVariable(name: "scpy_cnt", scope: !3777, file: !200, line: 1043, type: !195)
!3830 = !DILocalVariable(name: "keep_cnt", scope: !3777, file: !200, line: 1044, type: !195)
!3831 = !DILocalVariable(name: "dst", scope: !3777, file: !200, line: 1045, type: !194)
!3832 = !DILocalVariable(name: "rv", scope: !3777, file: !200, line: 1046, type: !107)
!3833 = !DILocalVariable(name: "i", scope: !3834, file: !200, line: 1074, type: !107)
!3834 = distinct !DILexicalBlock(scope: !3777, file: !200, line: 1074, column: 2)
!3835 = !DILocalVariable(name: "arg_idx", scope: !3836, file: !200, line: 1075, type: !195)
!3836 = distinct !DILexicalBlock(scope: !3837, file: !200, line: 1074, column: 36)
!3837 = distinct !DILexicalBlock(scope: !3834, file: !200, line: 1074, column: 2)
!3838 = !DILocalVariable(name: "arg_pos", scope: !3836, file: !200, line: 1076, type: !195)
!3839 = !DILocalVariable(name: "str", scope: !3836, file: !200, line: 1077, type: !118)
!3840 = !DILocalVariable(name: "is_ro", scope: !3836, file: !200, line: 1078, type: !145)
!3841 = !DILocalVariable(name: "in_desc_backup", scope: !3777, file: !200, line: 1114, type: !3303)
!3842 = !DILocalVariable(name: "strs_len", scope: !3777, file: !200, line: 1134, type: !185)
!3843 = !DILocalVariable(name: "i", scope: !3844, file: !200, line: 1143, type: !107)
!3844 = distinct !DILexicalBlock(scope: !3777, file: !200, line: 1143, column: 2)
!3845 = !DILocalVariable(name: "loc", scope: !3846, file: !200, line: 1144, type: !195)
!3846 = distinct !DILexicalBlock(scope: !3847, file: !200, line: 1143, column: 37)
!3847 = distinct !DILexicalBlock(scope: !3844, file: !200, line: 1143, column: 2)
!3848 = !DILocalVariable(name: "str", scope: !3846, file: !200, line: 1145, type: !118)
!3849 = !DILocalVariable(name: "str_len", scope: !3846, file: !200, line: 1146, type: !197)
!3850 = !DILabel(scope: !3851, name: "calculate_string_length", file: !200, line: 1021)
!3851 = distinct !DILexicalBlock(scope: !3852, file: !200, line: 1020, column: 56)
!3852 = distinct !DILexicalBlock(scope: !3853, file: !200, line: 1020, column: 15)
!3853 = distinct !DILexicalBlock(scope: !3820, file: !200, line: 1014, column: 8)
!3854 = !DILocation(line: 0, scope: !3777)
!3855 = !DILocation(line: 916, column: 2, scope: !3856)
!3856 = distinct !DILexicalBlock(scope: !3857, file: !200, line: 916, column: 2)
!3857 = distinct !DILexicalBlock(scope: !3777, file: !200, line: 916, column: 2)
!3858 = !DILocation(line: 916, column: 2, scope: !3857)
!3859 = !DILocation(line: 916, column: 2, scope: !3860)
!3860 = distinct !DILexicalBlock(scope: !3856, file: !200, line: 916, column: 2)
!3861 = !DILocation(line: 919, column: 20, scope: !3777)
!3862 = !DILocation(line: 921, column: 27, scope: !3777)
!3863 = !DILocation(line: 921, column: 21, scope: !3777)
!3864 = !DILocation(line: 926, column: 18, scope: !3777)
!3865 = !DILocation(line: 926, column: 11, scope: !3777)
!3866 = !DILocation(line: 926, column: 34, scope: !3777)
!3867 = !DILocation(line: 931, column: 21, scope: !3777)
!3868 = !DILocation(line: 931, column: 12, scope: !3777)
!3869 = !DILocation(line: 932, column: 11, scope: !3777)
!3870 = !DILocation(line: 932, column: 19, scope: !3777)
!3871 = !DILocation(line: 938, column: 21, scope: !3777)
!3872 = !DILocation(line: 938, column: 12, scope: !3777)
!3873 = !DILocation(line: 939, column: 19, scope: !3777)
!3874 = !DILocation(line: 939, column: 23, scope: !3777)
!3875 = !DILocation(line: 946, column: 14, scope: !3876)
!3876 = distinct !DILexicalBlock(scope: !3777, file: !200, line: 946, column: 6)
!3877 = !DILocation(line: 947, column: 7, scope: !3878)
!3878 = distinct !DILexicalBlock(scope: !3879, file: !200, line: 947, column: 7)
!3879 = distinct !DILexicalBlock(scope: !3876, file: !200, line: 946, column: 26)
!3880 = !DILocation(line: 947, column: 7, scope: !3879)
!3881 = !DILocation(line: 948, column: 4, scope: !3882)
!3882 = distinct !DILexicalBlock(scope: !3878, file: !200, line: 947, column: 11)
!3883 = !DILocation(line: 949, column: 3, scope: !3882)
!3884 = !DILocation(line: 958, column: 23, scope: !3777)
!3885 = !DILocation(line: 958, column: 14, scope: !3777)
!3886 = !DILocation(line: 958, column: 27, scope: !3777)
!3887 = !DILocation(line: 965, column: 41, scope: !3777)
!3888 = !DILocation(line: 965, column: 20, scope: !3777)
!3889 = !DILocation(line: 966, column: 22, scope: !3777)
!3890 = !DILocation(line: 970, column: 9, scope: !3811)
!3891 = !DILocation(line: 970, column: 6, scope: !3777)
!3892 = !DILocation(line: 972, column: 7, scope: !3810)
!3893 = !DILocation(line: 0, scope: !3807)
!3894 = !DILocation(line: 973, column: 4, scope: !3807)
!3895 = !DILocation(line: 974, column: 46, scope: !3813)
!3896 = !DILocation(line: 974, column: 40, scope: !3813)
!3897 = !DILocation(line: 974, column: 23, scope: !3813)
!3898 = !DILocation(line: 0, scope: !3813)
!3899 = !DILocation(line: 975, column: 15, scope: !3813)
!3900 = !DILocation(line: 978, column: 14, scope: !3901)
!3901 = distinct !DILexicalBlock(scope: !3813, file: !200, line: 978, column: 9)
!3902 = !DILocation(line: 979, column: 25, scope: !3903)
!3903 = distinct !DILexicalBlock(scope: !3901, file: !200, line: 978, column: 38)
!3904 = !DILocation(line: 979, column: 19, scope: !3903)
!3905 = !DILocation(line: 979, column: 6, scope: !3903)
!3906 = !DILocation(line: 979, column: 23, scope: !3903)
!3907 = !DILocation(line: 980, column: 5, scope: !3903)
!3908 = !DILocation(line: 981, column: 13, scope: !3813)
!3909 = !DILocation(line: 982, column: 12, scope: !3813)
!3910 = !DILocation(line: 973, column: 34, scope: !3814)
!3911 = !DILocation(line: 973, column: 22, scope: !3814)
!3912 = distinct !{!3912, !3894, !3913}
!3913 = !DILocation(line: 983, column: 4, scope: !3807)
!3914 = !DILocation(line: 985, column: 16, scope: !3915)
!3915 = distinct !DILexicalBlock(scope: !3916, file: !200, line: 985, column: 8)
!3916 = distinct !DILexicalBlock(scope: !3809, file: !200, line: 984, column: 10)
!3917 = !DILocation(line: 967, column: 9, scope: !3777)
!3918 = !DILocation(line: 971, column: 11, scope: !3810)
!3919 = !DILocation(line: 0, scope: !3810)
!3920 = !DILocation(line: 0, scope: !3818)
!3921 = !DILocation(line: 995, column: 21, scope: !3821)
!3922 = !DILocation(line: 995, column: 3, scope: !3818)
!3923 = !DILocation(line: 990, column: 34, scope: !3810)
!3924 = !DILocation(line: 990, column: 26, scope: !3810)
!3925 = !DILocation(line: 996, column: 30, scope: !3820)
!3926 = !DILocation(line: 0, scope: !3820)
!3927 = !DILocation(line: 997, column: 30, scope: !3820)
!3928 = !DILocation(line: 997, column: 22, scope: !3820)
!3929 = !DILocation(line: 998, column: 39, scope: !3820)
!3930 = !DILocation(line: 998, column: 22, scope: !3820)
!3931 = !DILocation(line: 999, column: 17, scope: !3820)
!3932 = !DILocation(line: 1002, column: 20, scope: !3933)
!3933 = distinct !DILexicalBlock(scope: !3820, file: !200, line: 1002, column: 8)
!3934 = !DILocation(line: 996, column: 22, scope: !3820)
!3935 = !DILocation(line: 1002, column: 35, scope: !3933)
!3936 = !DILocation(line: 1002, column: 23, scope: !3933)
!3937 = !DILocation(line: 1002, column: 8, scope: !3820)
!3938 = !DILocation(line: 1003, column: 5, scope: !3939)
!3939 = distinct !DILexicalBlock(scope: !3940, file: !200, line: 1003, column: 5)
!3940 = distinct !DILexicalBlock(scope: !3941, file: !200, line: 1003, column: 5)
!3941 = distinct !DILexicalBlock(scope: !3942, file: !200, line: 1003, column: 5)
!3942 = distinct !DILexicalBlock(scope: !3943, file: !200, line: 1003, column: 5)
!3943 = distinct !DILexicalBlock(scope: !3933, file: !200, line: 1002, column: 45)
!3944 = !DILocation(line: 1010, column: 13, scope: !3943)
!3945 = !DILocation(line: 1011, column: 5, scope: !3943)
!3946 = !DILocation(line: 1014, column: 8, scope: !3820)
!3947 = !DILocation(line: 1015, column: 9, scope: !3948)
!3948 = distinct !DILexicalBlock(scope: !3853, file: !200, line: 1014, column: 15)
!3949 = !DILocation(line: 1018, column: 14, scope: !3950)
!3950 = distinct !DILexicalBlock(scope: !3951, file: !200, line: 1017, column: 12)
!3951 = distinct !DILexicalBlock(scope: !3948, file: !200, line: 1015, column: 9)
!3952 = !DILocation(line: 1020, column: 4, scope: !3948)
!3953 = !DILocation(line: 1020, column: 15, scope: !3853)
!3954 = !DILocation(line: 1021, column: 1, scope: !3851)
!3955 = !DILocation(line: 1022, column: 11, scope: !3851)
!3956 = !DILocation(line: 1025, column: 14, scope: !3957)
!3957 = distinct !DILexicalBlock(scope: !3851, file: !200, line: 1025, column: 9)
!3958 = !DILocation(line: 1026, column: 25, scope: !3959)
!3959 = distinct !DILexicalBlock(scope: !3957, file: !200, line: 1025, column: 38)
!3960 = !DILocation(line: 1026, column: 19, scope: !3959)
!3961 = !DILocation(line: 1026, column: 6, scope: !3959)
!3962 = !DILocation(line: 1026, column: 23, scope: !3959)
!3963 = !DILocation(line: 1027, column: 5, scope: !3959)
!3964 = !DILocation(line: 1031, column: 21, scope: !3851)
!3965 = !DILocation(line: 1031, column: 13, scope: !3851)
!3966 = !DILocation(line: 1032, column: 4, scope: !3851)
!3967 = !DILocation(line: 995, column: 33, scope: !3821)
!3968 = distinct !{!3968, !3922, !3969}
!3969 = !DILocation(line: 1033, column: 3, scope: !3818)
!3970 = !DILocation(line: 1040, column: 10, scope: !3777)
!3971 = !DILocation(line: 1042, column: 10, scope: !3777)
!3972 = !DILocation(line: 1052, column: 6, scope: !3777)
!3973 = !DILocation(line: 1055, column: 9, scope: !3974)
!3974 = distinct !DILexicalBlock(scope: !3975, file: !200, line: 1052, column: 14)
!3975 = distinct !DILexicalBlock(scope: !3777, file: !200, line: 1052, column: 6)
!3976 = !DILocation(line: 1056, column: 2, scope: !3974)
!3977 = !DILocation(line: 1056, column: 21, scope: !3978)
!3978 = distinct !DILexicalBlock(scope: !3975, file: !200, line: 1056, column: 13)
!3979 = !DILocation(line: 1066, column: 3, scope: !3980)
!3980 = distinct !DILexicalBlock(scope: !3981, file: !200, line: 1065, column: 11)
!3981 = distinct !DILexicalBlock(scope: !3777, file: !200, line: 1065, column: 6)
!3982 = !DILocation(line: 1067, column: 2, scope: !3980)
!3983 = !DILocation(line: 1068, column: 10, scope: !3777)
!3984 = !DILocation(line: 0, scope: !3834)
!3985 = !DILocation(line: 1074, column: 20, scope: !3837)
!3986 = !DILocation(line: 1074, column: 2, scope: !3834)
!3987 = !DILocation(line: 1110, column: 24, scope: !3777)
!3988 = !DILocation(line: 1053, column: 12, scope: !3974)
!3989 = !DILocation(line: 1054, column: 12, scope: !3974)
!3990 = !DILocation(line: 1108, column: 30, scope: !3777)
!3991 = !DILocation(line: 1108, column: 40, scope: !3777)
!3992 = !DILocation(line: 1108, column: 38, scope: !3777)
!3993 = !DILocation(line: 1109, column: 31, scope: !3777)
!3994 = !DILocation(line: 1109, column: 24, scope: !3777)
!3995 = !DILocation(line: 1110, column: 31, scope: !3777)
!3996 = !DILocation(line: 1114, column: 31, scope: !3777)
!3997 = !DILocation(line: 1114, column: 48, scope: !3777)
!3998 = !DILocation(line: 1115, column: 13, scope: !3777)
!3999 = !DILocation(line: 1118, column: 7, scope: !3777)
!4000 = !DILocation(line: 1119, column: 9, scope: !4001)
!4001 = distinct !DILexicalBlock(scope: !3777, file: !200, line: 1119, column: 6)
!4002 = !DILocation(line: 1119, column: 6, scope: !3777)
!4003 = !DILocation(line: 1075, column: 29, scope: !3836)
!4004 = !DILocation(line: 1075, column: 21, scope: !3836)
!4005 = !DILocation(line: 0, scope: !3836)
!4006 = !DILocation(line: 1076, column: 29, scope: !3836)
!4007 = !DILocation(line: 1076, column: 21, scope: !3836)
!4008 = !DILocation(line: 1077, column: 38, scope: !3836)
!4009 = !DILocation(line: 1077, column: 21, scope: !3836)
!4010 = !DILocation(line: 1078, column: 16, scope: !3836)
!4011 = !DILocation(line: 1080, column: 19, scope: !4012)
!4012 = distinct !DILexicalBlock(scope: !3836, file: !200, line: 1080, column: 7)
!4013 = !DILocation(line: 1080, column: 34, scope: !4012)
!4014 = !DILocation(line: 1080, column: 22, scope: !4012)
!4015 = !DILocation(line: 1080, column: 7, scope: !3836)
!4016 = !DILocation(line: 1084, column: 7, scope: !3836)
!4017 = !DILocation(line: 1085, column: 8, scope: !4018)
!4018 = distinct !DILexicalBlock(scope: !4019, file: !200, line: 1084, column: 14)
!4019 = distinct !DILexicalBlock(scope: !3836, file: !200, line: 1084, column: 7)
!4020 = !DILocation(line: 1086, column: 5, scope: !4021)
!4021 = distinct !DILexicalBlock(scope: !4022, file: !200, line: 1086, column: 5)
!4022 = distinct !DILexicalBlock(scope: !4023, file: !200, line: 1086, column: 5)
!4023 = distinct !DILexicalBlock(scope: !4024, file: !200, line: 1085, column: 49)
!4024 = distinct !DILexicalBlock(scope: !4018, file: !200, line: 1085, column: 8)
!4025 = !DILocation(line: 1086, column: 5, scope: !4022)
!4026 = !DILocation(line: 1086, column: 5, scope: !4027)
!4027 = distinct !DILexicalBlock(scope: !4021, file: !200, line: 1086, column: 5)
!4028 = !DILocation(line: 1087, column: 25, scope: !4023)
!4029 = !DILocation(line: 1087, column: 5, scope: !4023)
!4030 = !DILocation(line: 1088, column: 4, scope: !4023)
!4031 = !DILocation(line: 1088, column: 15, scope: !4024)
!4032 = !DILocation(line: 1089, column: 5, scope: !4033)
!4033 = distinct !DILexicalBlock(scope: !4034, file: !200, line: 1089, column: 5)
!4034 = distinct !DILexicalBlock(scope: !4035, file: !200, line: 1089, column: 5)
!4035 = distinct !DILexicalBlock(scope: !4036, file: !200, line: 1088, column: 61)
!4036 = distinct !DILexicalBlock(scope: !4024, file: !200, line: 1088, column: 15)
!4037 = !DILocation(line: 1089, column: 5, scope: !4034)
!4038 = !DILocation(line: 1089, column: 5, scope: !4039)
!4039 = distinct !DILexicalBlock(scope: !4033, file: !200, line: 1089, column: 5)
!4040 = !DILocation(line: 1090, column: 26, scope: !4035)
!4041 = !DILocation(line: 1090, column: 5, scope: !4035)
!4042 = !DILocation(line: 1091, column: 4, scope: !4035)
!4043 = !DILocation(line: 1095, column: 8, scope: !4044)
!4044 = distinct !DILexicalBlock(scope: !4019, file: !200, line: 1094, column: 10)
!4045 = !DILocation(line: 1096, column: 5, scope: !4046)
!4046 = distinct !DILexicalBlock(scope: !4047, file: !200, line: 1096, column: 5)
!4047 = distinct !DILexicalBlock(scope: !4048, file: !200, line: 1096, column: 5)
!4048 = distinct !DILexicalBlock(scope: !4049, file: !200, line: 1095, column: 49)
!4049 = distinct !DILexicalBlock(scope: !4044, file: !200, line: 1095, column: 8)
!4050 = !DILocation(line: 1096, column: 5, scope: !4047)
!4051 = !DILocation(line: 1096, column: 5, scope: !4052)
!4052 = distinct !DILexicalBlock(scope: !4046, file: !200, line: 1096, column: 5)
!4053 = !DILocation(line: 1097, column: 25, scope: !4048)
!4054 = !DILocation(line: 1097, column: 5, scope: !4048)
!4055 = !DILocation(line: 1098, column: 4, scope: !4048)
!4056 = !DILocation(line: 1099, column: 5, scope: !4057)
!4057 = distinct !DILexicalBlock(scope: !4058, file: !200, line: 1099, column: 5)
!4058 = distinct !DILexicalBlock(scope: !4059, file: !200, line: 1099, column: 5)
!4059 = distinct !DILexicalBlock(scope: !4049, file: !200, line: 1098, column: 11)
!4060 = !DILocation(line: 1099, column: 5, scope: !4058)
!4061 = !DILocation(line: 1099, column: 5, scope: !4062)
!4062 = distinct !DILexicalBlock(scope: !4057, file: !200, line: 1099, column: 5)
!4063 = !DILocation(line: 1100, column: 26, scope: !4059)
!4064 = !DILocation(line: 1100, column: 5, scope: !4059)
!4065 = !DILocation(line: 1100, column: 30, scope: !4059)
!4066 = !DILocation(line: 1101, column: 26, scope: !4059)
!4067 = !DILocation(line: 1101, column: 5, scope: !4059)
!4068 = !DILocation(line: 0, scope: !4019)
!4069 = !DILocation(line: 1074, column: 32, scope: !3837)
!4070 = distinct !{!4070, !3986, !4071}
!4071 = !DILocation(line: 1104, column: 2, scope: !3834)
!4072 = !DILocation(line: 1124, column: 13, scope: !3777)
!4073 = !DILocation(line: 1127, column: 10, scope: !3777)
!4074 = !DILocation(line: 1127, column: 7, scope: !3777)
!4075 = !DILocation(line: 1128, column: 9, scope: !4076)
!4076 = distinct !DILexicalBlock(scope: !3777, file: !200, line: 1128, column: 6)
!4077 = !DILocation(line: 1128, column: 6, scope: !3777)
!4078 = !DILocation(line: 1134, column: 27, scope: !3777)
!4079 = !DILocation(line: 1136, column: 7, scope: !3777)
!4080 = !DILocation(line: 1137, column: 9, scope: !4081)
!4081 = distinct !DILexicalBlock(scope: !3777, file: !200, line: 1137, column: 6)
!4082 = !DILocation(line: 1137, column: 6, scope: !3777)
!4083 = !DILocation(line: 1131, column: 10, scope: !3777)
!4084 = !DILocation(line: 1140, column: 10, scope: !3777)
!4085 = !DILocation(line: 0, scope: !3844)
!4086 = !DILocation(line: 1143, column: 20, scope: !3847)
!4087 = !DILocation(line: 1143, column: 2, scope: !3844)
!4088 = !DILocation(line: 1144, column: 3, scope: !3846)
!4089 = !DILocation(line: 1144, column: 17, scope: !3846)
!4090 = !DILocation(line: 0, scope: !3846)
!4091 = !DILocation(line: 1144, column: 11, scope: !3846)
!4092 = !DILocation(line: 1145, column: 38, scope: !3846)
!4093 = !DILocation(line: 1145, column: 21, scope: !3846)
!4094 = !DILocation(line: 1146, column: 22, scope: !3846)
!4095 = !DILocation(line: 1146, column: 29, scope: !3846)
!4096 = !DILocation(line: 1148, column: 8, scope: !3846)
!4097 = !DILocation(line: 1149, column: 10, scope: !4098)
!4098 = distinct !DILexicalBlock(scope: !3846, file: !200, line: 1149, column: 7)
!4099 = !DILocation(line: 1149, column: 7, scope: !3846)
!4100 = !DILocation(line: 1154, column: 8, scope: !3846)
!4101 = !DILocation(line: 1155, column: 10, scope: !4102)
!4102 = distinct !DILexicalBlock(scope: !3846, file: !200, line: 1155, column: 7)
!4103 = !DILocation(line: 1155, column: 7, scope: !3846)
!4104 = !DILocation(line: 1159, column: 2, scope: !3847)
!4105 = !DILocation(line: 1152, column: 11, scope: !3846)
!4106 = !DILocation(line: 1158, column: 11, scope: !3846)
!4107 = !DILocation(line: 1143, column: 33, scope: !3847)
!4108 = distinct !{!4108, !4087, !4109}
!4109 = !DILocation(line: 1159, column: 2, scope: !3844)
!4110 = !DILocation(line: 1162, column: 8, scope: !3777)
!4111 = !DILocation(line: 1164, column: 2, scope: !3777)
!4112 = !DILocation(line: 1165, column: 1, scope: !3777)
!4113 = distinct !DISubprogram(name: "get_package_len", scope: !200, file: !200, line: 196, type: !4114, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !4116)
!4114 = !DISubroutineType(types: !4115)
!4115 = !{!185, !106}
!4116 = !{!4117, !4118, !4119, !4120, !4121, !4122, !4123}
!4117 = !DILocalVariable(name: "packaged", arg: 1, scope: !4113, file: !200, line: 196, type: !106)
!4118 = !DILocalVariable(name: "buf", scope: !4113, file: !200, line: 200, type: !194)
!4119 = !DILocalVariable(name: "start", scope: !4113, file: !200, line: 201, type: !194)
!4120 = !DILocalVariable(name: "args_size", scope: !4113, file: !200, line: 202, type: !32)
!4121 = !DILocalVariable(name: "s_nbr", scope: !4113, file: !200, line: 202, type: !32)
!4122 = !DILocalVariable(name: "ros_nbr", scope: !4113, file: !200, line: 202, type: !32)
!4123 = !DILocalVariable(name: "i", scope: !4124, file: !200, line: 215, type: !107)
!4124 = distinct !DILexicalBlock(scope: !4113, file: !200, line: 215, column: 2)
!4125 = !DILocation(line: 0, scope: !4113)
!4126 = !DILocation(line: 198, column: 2, scope: !4127)
!4127 = distinct !DILexicalBlock(scope: !4128, file: !200, line: 198, column: 2)
!4128 = distinct !DILexicalBlock(scope: !4113, file: !200, line: 198, column: 2)
!4129 = !DILocation(line: 198, column: 2, scope: !4128)
!4130 = !DILocation(line: 198, column: 2, scope: !4131)
!4131 = distinct !DILexicalBlock(scope: !4127, file: !200, line: 198, column: 2)
!4132 = !DILocation(line: 204, column: 14, scope: !4113)
!4133 = !DILocation(line: 204, column: 21, scope: !4113)
!4134 = !DILocation(line: 205, column: 14, scope: !4113)
!4135 = !DILocation(line: 206, column: 14, scope: !4113)
!4136 = !DILocation(line: 209, column: 6, scope: !4113)
!4137 = !DILocation(line: 212, column: 6, scope: !4113)
!4138 = !DILocation(line: 0, scope: !4124)
!4139 = !DILocation(line: 215, column: 20, scope: !4140)
!4140 = distinct !DILexicalBlock(scope: !4124, file: !200, line: 215, column: 2)
!4141 = !DILocation(line: 215, column: 2, scope: !4124)
!4142 = !DILocation(line: 220, column: 33, scope: !4113)
!4143 = !DILocation(line: 220, column: 2, scope: !4113)
!4144 = !DILocation(line: 216, column: 6, scope: !4145)
!4145 = distinct !DILexicalBlock(scope: !4140, file: !200, line: 215, column: 34)
!4146 = !DILocation(line: 217, column: 10, scope: !4145)
!4147 = !DILocation(line: 217, column: 36, scope: !4145)
!4148 = !DILocation(line: 217, column: 7, scope: !4145)
!4149 = !DILocation(line: 215, column: 30, scope: !4140)
!4150 = distinct !{!4150, !4141, !4151}
!4151 = !DILocation(line: 218, column: 2, scope: !4124)
!4152 = distinct !DISubprogram(name: "append_string", scope: !200, file: !200, line: 223, type: !4153, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !4155)
!4153 = !DISubroutineType(types: !4154)
!4154 = !{!107, !3780, !106, !118, !197}
!4155 = !{!4156, !4157, !4158, !4159}
!4156 = !DILocalVariable(name: "cb", arg: 1, scope: !4152, file: !200, line: 223, type: !3780)
!4157 = !DILocalVariable(name: "ctx", arg: 2, scope: !4152, file: !200, line: 223, type: !106)
!4158 = !DILocalVariable(name: "str", arg: 3, scope: !4152, file: !200, line: 223, type: !118)
!4159 = !DILocalVariable(name: "strl", arg: 4, scope: !4152, file: !200, line: 223, type: !197)
!4160 = !DILocation(line: 0, scope: !4152)
!4161 = !DILocation(line: 225, column: 9, scope: !4162)
!4162 = distinct !DILexicalBlock(scope: !4152, file: !200, line: 225, column: 6)
!4163 = !DILocation(line: 225, column: 6, scope: !4152)
!4164 = !DILocation(line: 226, column: 14, scope: !4165)
!4165 = distinct !DILexicalBlock(scope: !4162, file: !200, line: 225, column: 18)
!4166 = !DILocation(line: 226, column: 12, scope: !4165)
!4167 = !DILocation(line: 226, column: 3, scope: !4165)
!4168 = !DILocation(line: 229, column: 14, scope: !4152)
!4169 = !DILocation(line: 229, column: 9, scope: !4152)
!4170 = !DILocation(line: 229, column: 27, scope: !4152)
!4171 = !DILocation(line: 229, column: 39, scope: !4152)
!4172 = !DILocation(line: 230, column: 17, scope: !4152)
!4173 = !DILocation(line: 230, column: 9, scope: !4152)
!4174 = !DILocation(line: 230, column: 2, scope: !4152)
!4175 = !DILocation(line: 231, column: 1, scope: !4152)
!4176 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !212, file: !212, line: 45, type: !214, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4177)
!4177 = !{!4178}
!4178 = !DILocalVariable(name: "c", arg: 1, scope: !4176, file: !212, line: 45, type: !107)
!4179 = !DILocation(line: 0, scope: !4176)
!4180 = !DILocation(line: 50, column: 2, scope: !4176)
!4181 = distinct !DISubprogram(name: "__printk_hook_install", scope: !212, file: !212, line: 63, type: !4182, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4184)
!4182 = !DISubroutineType(types: !4183)
!4183 = !{null, !213}
!4184 = !{!4185}
!4185 = !DILocalVariable(name: "fn", arg: 1, scope: !4181, file: !212, line: 63, type: !213)
!4186 = !DILocation(line: 0, scope: !4181)
!4187 = !DILocation(line: 65, column: 12, scope: !4181)
!4188 = !DILocation(line: 66, column: 1, scope: !4181)
!4189 = distinct !DISubprogram(name: "__printk_get_hook", scope: !212, file: !212, line: 76, type: !125, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !2236)
!4190 = !DILocation(line: 78, column: 9, scope: !4189)
!4191 = !DILocation(line: 78, column: 2, scope: !4189)
!4192 = distinct !DISubprogram(name: "vprintk", scope: !212, file: !212, line: 113, type: !4193, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4201)
!4193 = !DISubroutineType(types: !4194)
!4194 = !{null, !118, !4195}
!4195 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3268, line: 99, baseType: !4196)
!4196 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3268, line: 40, baseType: !4197)
!4197 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !212, baseType: !4198)
!4198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4199)
!4199 = !{!4200}
!4200 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4198, file: !212, line: 79, baseType: !106, size: 32)
!4201 = !{!4202, !4203, !4204}
!4202 = !DILocalVariable(name: "fmt", arg: 1, scope: !4192, file: !212, line: 113, type: !118)
!4203 = !DILocalVariable(name: "ap", arg: 2, scope: !4192, file: !212, line: 113, type: !4195)
!4204 = !DILocalVariable(name: "ctx", scope: !4205, file: !212, line: 121, type: !4207)
!4205 = distinct !DILexicalBlock(scope: !4206, file: !212, line: 120, column: 27)
!4206 = distinct !DILexicalBlock(scope: !4192, file: !212, line: 120, column: 6)
!4207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !212, line: 81, size: 32, elements: !4208)
!4208 = !{!4209, !4210}
!4209 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !4207, file: !212, line: 85, baseType: !32, size: 32)
!4210 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4207, file: !212, line: 86, baseType: !4211, offset: 32)
!4211 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, elements: !4212)
!4212 = !{!4213}
!4213 = !DISubrange(count: 0)
!4214 = !DILocation(line: 0, scope: !4192)
!4215 = !DILocation(line: 148, column: 3, scope: !4216)
!4216 = distinct !DILexicalBlock(scope: !4206, file: !212, line: 138, column: 9)
!4217 = !DILocation(line: 155, column: 1, scope: !4192)
!4218 = distinct !DISubprogram(name: "char_out", scope: !212, file: !212, line: 107, type: !4219, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4221)
!4219 = !DISubroutineType(types: !4220)
!4220 = !{!107, !107, !106}
!4221 = !{!4222, !4223}
!4222 = !DILocalVariable(name: "c", arg: 1, scope: !4218, file: !212, line: 107, type: !107)
!4223 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !4218, file: !212, line: 107, type: !106)
!4224 = !DILocation(line: 0, scope: !4218)
!4225 = !DILocation(line: 110, column: 9, scope: !4218)
!4226 = !DILocation(line: 110, column: 2, scope: !4218)
!4227 = distinct !DISubprogram(name: "cbvprintf", scope: !3300, file: !3300, line: 739, type: !4228, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4230)
!4228 = !DISubroutineType(types: !4229)
!4229 = !{!107, !3648, !106, !118, !4195}
!4230 = !{!4231, !4232, !4233, !4234}
!4231 = !DILocalVariable(name: "out", arg: 1, scope: !4227, file: !3300, line: 739, type: !3648)
!4232 = !DILocalVariable(name: "ctx", arg: 2, scope: !4227, file: !3300, line: 739, type: !106)
!4233 = !DILocalVariable(name: "format", arg: 3, scope: !4227, file: !3300, line: 739, type: !118)
!4234 = !DILocalVariable(name: "ap", arg: 4, scope: !4227, file: !3300, line: 739, type: !4195)
!4235 = !DILocation(line: 0, scope: !4227)
!4236 = !DILocation(line: 741, column: 9, scope: !4227)
!4237 = !DILocation(line: 741, column: 2, scope: !4227)
!4238 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !212, file: !212, line: 157, type: !4239, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4241)
!4239 = !DISubroutineType(types: !4240)
!4240 = !{null, !193, !185}
!4241 = !{!4242, !4243, !4244}
!4242 = !DILocalVariable(name: "c", arg: 1, scope: !4238, file: !212, line: 157, type: !193)
!4243 = !DILocalVariable(name: "n", arg: 2, scope: !4238, file: !212, line: 157, type: !185)
!4244 = !DILocalVariable(name: "i", scope: !4238, file: !212, line: 159, type: !185)
!4245 = !DILocation(line: 0, scope: !4238)
!4246 = !DILocation(line: 164, column: 16, scope: !4247)
!4247 = distinct !DILexicalBlock(scope: !4248, file: !212, line: 164, column: 2)
!4248 = distinct !DILexicalBlock(scope: !4238, file: !212, line: 164, column: 2)
!4249 = !DILocation(line: 164, column: 2, scope: !4248)
!4250 = !DILocation(line: 165, column: 3, scope: !4251)
!4251 = distinct !DILexicalBlock(scope: !4247, file: !212, line: 164, column: 26)
!4252 = !DILocation(line: 165, column: 13, scope: !4251)
!4253 = !DILocation(line: 164, column: 22, scope: !4247)
!4254 = distinct !{!4254, !4249, !4255}
!4255 = !DILocation(line: 166, column: 2, scope: !4248)
!4256 = !DILocation(line: 171, column: 1, scope: !4238)
!4257 = distinct !DISubprogram(name: "printk", scope: !212, file: !212, line: 203, type: !4258, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4260)
!4258 = !DISubroutineType(types: !4259)
!4259 = !{null, !118, null}
!4260 = !{!4261, !4262}
!4261 = !DILocalVariable(name: "fmt", arg: 1, scope: !4257, file: !212, line: 203, type: !118)
!4262 = !DILocalVariable(name: "ap", scope: !4257, file: !212, line: 205, type: !4195)
!4263 = !DILocation(line: 0, scope: !4257)
!4264 = !DILocation(line: 205, column: 2, scope: !4257)
!4265 = !DILocation(line: 205, column: 10, scope: !4257)
!4266 = !DILocation(line: 207, column: 2, scope: !4257)
!4267 = !DILocation(line: 209, column: 2, scope: !4257)
!4268 = !DILocation(line: 211, column: 2, scope: !4257)
!4269 = !DILocation(line: 212, column: 1, scope: !4257)
!4270 = distinct !DISubprogram(name: "snprintk", scope: !212, file: !212, line: 239, type: !4271, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4273)
!4271 = !DISubroutineType(types: !4272)
!4272 = !{!107, !193, !185, !118, null}
!4273 = !{!4274, !4275, !4276, !4277, !4278}
!4274 = !DILocalVariable(name: "str", arg: 1, scope: !4270, file: !212, line: 239, type: !193)
!4275 = !DILocalVariable(name: "size", arg: 2, scope: !4270, file: !212, line: 239, type: !185)
!4276 = !DILocalVariable(name: "fmt", arg: 3, scope: !4270, file: !212, line: 239, type: !118)
!4277 = !DILocalVariable(name: "ap", scope: !4270, file: !212, line: 241, type: !4195)
!4278 = !DILocalVariable(name: "ret", scope: !4270, file: !212, line: 242, type: !107)
!4279 = !DILocation(line: 0, scope: !4270)
!4280 = !DILocation(line: 241, column: 2, scope: !4270)
!4281 = !DILocation(line: 241, column: 10, scope: !4270)
!4282 = !DILocation(line: 244, column: 2, scope: !4270)
!4283 = !DILocation(line: 245, column: 8, scope: !4270)
!4284 = !DILocation(line: 246, column: 2, scope: !4270)
!4285 = !DILocation(line: 249, column: 1, scope: !4270)
!4286 = !DILocation(line: 248, column: 2, scope: !4270)
!4287 = distinct !DISubprogram(name: "vsnprintk", scope: !212, file: !212, line: 251, type: !4288, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4290)
!4288 = !DISubroutineType(types: !4289)
!4289 = !{!107, !193, !185, !118, !4195}
!4290 = !{!4291, !4292, !4293, !4294, !4295}
!4291 = !DILocalVariable(name: "str", arg: 1, scope: !4287, file: !212, line: 251, type: !193)
!4292 = !DILocalVariable(name: "size", arg: 2, scope: !4287, file: !212, line: 251, type: !185)
!4293 = !DILocalVariable(name: "fmt", arg: 3, scope: !4287, file: !212, line: 251, type: !118)
!4294 = !DILocalVariable(name: "ap", arg: 4, scope: !4287, file: !212, line: 251, type: !4195)
!4295 = !DILocalVariable(name: "ctx", scope: !4287, file: !212, line: 253, type: !4296)
!4296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !212, line: 217, size: 96, elements: !4297)
!4297 = !{!4298, !4299, !4300}
!4298 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !4296, file: !212, line: 218, baseType: !193, size: 32)
!4299 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !4296, file: !212, line: 219, baseType: !107, size: 32, offset: 32)
!4300 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4296, file: !212, line: 220, baseType: !107, size: 32, offset: 64)
!4301 = !DILocation(line: 0, scope: !4287)
!4302 = !DILocation(line: 253, column: 2, scope: !4287)
!4303 = !DILocation(line: 253, column: 21, scope: !4287)
!4304 = !DILocation(line: 253, column: 27, scope: !4287)
!4305 = !DILocation(line: 255, column: 2, scope: !4287)
!4306 = !DILocation(line: 257, column: 10, scope: !4307)
!4307 = distinct !DILexicalBlock(scope: !4287, file: !212, line: 257, column: 6)
!4308 = !DILocation(line: 257, column: 22, scope: !4307)
!4309 = !DILocation(line: 257, column: 16, scope: !4307)
!4310 = !DILocation(line: 257, column: 6, scope: !4287)
!4311 = !DILocation(line: 258, column: 3, scope: !4312)
!4312 = distinct !DILexicalBlock(scope: !4307, file: !212, line: 257, column: 27)
!4313 = !DILocation(line: 258, column: 18, scope: !4312)
!4314 = !DILocation(line: 259, column: 2, scope: !4312)
!4315 = !DILocation(line: 262, column: 1, scope: !4287)
!4316 = !DILocation(line: 261, column: 2, scope: !4287)
!4317 = distinct !DISubprogram(name: "str_out", scope: !212, file: !212, line: 223, type: !4318, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4321)
!4318 = !DISubroutineType(types: !4319)
!4319 = !{!107, !107, !4320}
!4320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4296, size: 32)
!4321 = !{!4322, !4323}
!4322 = !DILocalVariable(name: "c", arg: 1, scope: !4317, file: !212, line: 223, type: !107)
!4323 = !DILocalVariable(name: "ctx", arg: 2, scope: !4317, file: !212, line: 223, type: !4320)
!4324 = !DILocation(line: 0, scope: !4317)
!4325 = !DILocation(line: 225, column: 11, scope: !4326)
!4326 = distinct !DILexicalBlock(scope: !4317, file: !212, line: 225, column: 6)
!4327 = !DILocation(line: 225, column: 15, scope: !4326)
!4328 = !DILocation(line: 0, scope: !4326)
!4329 = !DILocation(line: 225, column: 23, scope: !4326)
!4330 = !DILocation(line: 225, column: 45, scope: !4326)
!4331 = !DILocation(line: 225, column: 37, scope: !4326)
!4332 = !DILocation(line: 225, column: 6, scope: !4317)
!4333 = !DILocation(line: 226, column: 8, scope: !4334)
!4334 = distinct !DILexicalBlock(scope: !4326, file: !212, line: 225, column: 50)
!4335 = !DILocation(line: 226, column: 13, scope: !4334)
!4336 = !DILocation(line: 227, column: 3, scope: !4334)
!4337 = !DILocation(line: 230, column: 29, scope: !4338)
!4338 = distinct !DILexicalBlock(scope: !4317, file: !212, line: 230, column: 6)
!4339 = !DILocation(line: 230, column: 17, scope: !4338)
!4340 = !DILocation(line: 230, column: 6, scope: !4317)
!4341 = !DILocation(line: 231, column: 22, scope: !4342)
!4342 = distinct !DILexicalBlock(scope: !4338, file: !212, line: 230, column: 34)
!4343 = !DILocation(line: 231, column: 3, scope: !4342)
!4344 = !DILocation(line: 231, column: 26, scope: !4342)
!4345 = !DILocation(line: 232, column: 2, scope: !4342)
!4346 = !DILocation(line: 233, column: 28, scope: !4347)
!4347 = distinct !DILexicalBlock(scope: !4338, file: !212, line: 232, column: 9)
!4348 = !DILocation(line: 233, column: 22, scope: !4347)
!4349 = !DILocation(line: 233, column: 3, scope: !4347)
!4350 = !DILocation(line: 233, column: 26, scope: !4347)
!4351 = !DILocation(line: 237, column: 1, scope: !4317)
!4352 = distinct !DISubprogram(name: "z_thread_entry", scope: !4353, file: !4353, line: 30, type: !4354, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2584, retainedNodes: !4356)
!4353 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4354 = !DISubroutineType(types: !4355)
!4355 = !{null, !559, !106, !106, !106}
!4356 = !{!4357, !4358, !4359, !4360}
!4357 = !DILocalVariable(name: "entry", arg: 1, scope: !4352, file: !4353, line: 30, type: !559)
!4358 = !DILocalVariable(name: "p1", arg: 2, scope: !4352, file: !4353, line: 31, type: !106)
!4359 = !DILocalVariable(name: "p2", arg: 3, scope: !4352, file: !4353, line: 31, type: !106)
!4360 = !DILocalVariable(name: "p3", arg: 4, scope: !4352, file: !4353, line: 31, type: !106)
!4361 = !DILocation(line: 0, scope: !4352)
!4362 = !DILocation(line: 36, column: 2, scope: !4352)
!4363 = !DILocation(line: 38, column: 17, scope: !4352)
!4364 = !DILocation(line: 38, column: 2, scope: !4352)
!4365 = !DILocation(line: 45, column: 2, scope: !4352)
!4366 = distinct !DISubprogram(name: "k_current_get", scope: !406, file: !406, line: 530, type: !4367, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2584, retainedNodes: !2236)
!4367 = !DISubroutineType(types: !4368)
!4368 = !{!4369}
!4369 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !309, line: 347, baseType: !4370)
!4370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4371, size: 32)
!4371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !4372)
!4372 = !{!4373, !4431, !4443, !4444, !4445, !4446, !4447, !4453, !4468}
!4373 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4371, file: !309, line: 247, baseType: !4374, size: 384)
!4374 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !4375)
!4375 = !{!4376, !4400, !4407, !4408, !4409, !4418, !4419, !4420}
!4376 = !DIDerivedType(tag: DW_TAG_member, scope: !4374, file: !309, line: 60, baseType: !4377, size: 64)
!4377 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4374, file: !309, line: 60, size: 64, elements: !4378)
!4378 = !{!4379, !4394}
!4379 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !4377, file: !309, line: 61, baseType: !4380, size: 64)
!4380 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !4381)
!4381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !4382)
!4382 = !{!4383, !4389}
!4383 = !DIDerivedType(tag: DW_TAG_member, scope: !4381, file: !319, line: 38, baseType: !4384, size: 32)
!4384 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4381, file: !319, line: 38, size: 32, elements: !4385)
!4385 = !{!4386, !4388}
!4386 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4384, file: !319, line: 39, baseType: !4387, size: 32)
!4387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4381, size: 32)
!4388 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4384, file: !319, line: 40, baseType: !4387, size: 32)
!4389 = !DIDerivedType(tag: DW_TAG_member, scope: !4381, file: !319, line: 42, baseType: !4390, size: 32, offset: 32)
!4390 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4381, file: !319, line: 42, size: 32, elements: !4391)
!4391 = !{!4392, !4393}
!4392 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !4390, file: !319, line: 43, baseType: !4387, size: 32)
!4393 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4390, file: !319, line: 44, baseType: !4387, size: 32)
!4394 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !4377, file: !309, line: 62, baseType: !4395, size: 64)
!4395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !4396)
!4396 = !{!4397}
!4397 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4395, file: !335, line: 50, baseType: !4398, size: 64)
!4398 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4399, size: 64, elements: !340)
!4399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4395, size: 32)
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !4374, file: !309, line: 68, baseType: !4401, size: 32, offset: 64)
!4401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4402, size: 32)
!4402 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !4403)
!4403 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !4404)
!4404 = !{!4405}
!4405 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !4403, file: !345, line: 232, baseType: !4406, size: 64)
!4406 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !4381)
!4407 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !4374, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !4374, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!4409 = !DIDerivedType(tag: DW_TAG_member, scope: !4374, file: !309, line: 90, baseType: !4410, size: 16, offset: 112)
!4410 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4374, file: !309, line: 90, size: 16, elements: !4411)
!4411 = !{!4412, !4417}
!4412 = !DIDerivedType(tag: DW_TAG_member, scope: !4410, file: !309, line: 91, baseType: !4413, size: 16)
!4413 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4410, file: !309, line: 91, size: 16, elements: !4414)
!4414 = !{!4415, !4416}
!4415 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !4413, file: !309, line: 96, baseType: !359, size: 8)
!4416 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !4413, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!4417 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !4410, file: !309, line: 100, baseType: !197, size: 16)
!4418 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !4374, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!4419 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !4374, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!4420 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4374, file: !309, line: 131, baseType: !4421, size: 192, offset: 192)
!4421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !4422)
!4422 = !{!4423, !4424, !4430}
!4423 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4421, file: !345, line: 245, baseType: !4380, size: 64)
!4424 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !4421, file: !345, line: 246, baseType: !4425, size: 32, offset: 64)
!4425 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !4426)
!4426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4427, size: 32)
!4427 = !DISubroutineType(types: !4428)
!4428 = !{null, !4429}
!4429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4421, size: 32)
!4430 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !4421, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!4431 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !4371, file: !309, line: 250, baseType: !4432, size: 288, offset: 384)
!4432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !4433)
!4433 = !{!4434, !4435, !4436, !4437, !4438, !4439, !4440, !4441, !4442}
!4434 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !4432, file: !379, line: 26, baseType: !152, size: 32)
!4435 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !4432, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!4436 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !4432, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!4437 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !4432, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!4438 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !4432, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!4439 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !4432, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!4440 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !4432, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!4441 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !4432, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!4442 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !4432, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!4443 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !4371, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!4444 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !4371, file: !309, line: 256, baseType: !4402, size: 64, offset: 704)
!4445 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4371, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!4446 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !4371, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!4447 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !4371, file: !309, line: 300, baseType: !4448, size: 96, offset: 1056)
!4448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !4449)
!4449 = !{!4450, !4451, !4452}
!4450 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4448, file: !309, line: 153, baseType: !22, size: 32)
!4451 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4448, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!4452 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !4448, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!4453 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !4371, file: !309, line: 325, baseType: !4454, size: 32, offset: 1152)
!4454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4455, size: 32)
!4455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !4456)
!4456 = !{!4457, !4463, !4464}
!4457 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4455, file: !406, line: 5074, baseType: !4458, size: 96)
!4458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !4459)
!4459 = !{!4460, !4461, !4462}
!4460 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4458, file: !410, line: 57, baseType: !413, size: 32)
!4461 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4458, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!4462 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4458, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!4463 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !4455, file: !406, line: 5075, baseType: !4402, size: 64, offset: 96)
!4464 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4455, file: !406, line: 5076, baseType: !4465, size: 32, offset: 160)
!4465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !4466)
!4466 = !{!4467}
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !4465, file: !420, line: 52, baseType: !22, size: 32)
!4468 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4371, file: !309, line: 343, baseType: !4469, size: 64, offset: 1184)
!4469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !4470)
!4470 = !{!4471, !4472}
!4471 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !4469, file: !379, line: 63, baseType: !152, size: 32)
!4472 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !4469, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!4473 = !DILocation(line: 535, column: 9, scope: !4366)
!4474 = !DILocation(line: 535, column: 2, scope: !4366)
!4475 = distinct !DISubprogram(name: "k_thread_abort", scope: !4476, file: !4476, line: 188, type: !4477, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2584, retainedNodes: !4479)
!4476 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/integration")
!4477 = !DISubroutineType(types: !4478)
!4478 = !{null, !4369}
!4479 = !{!4480}
!4480 = !DILocalVariable(name: "thread", arg: 1, scope: !4475, file: !4476, line: 188, type: !4369)
!4481 = !DILocation(line: 0, scope: !4475)
!4482 = !DILocation(line: 197, column: 2, scope: !4483)
!4483 = distinct !DILexicalBlock(scope: !4475, file: !4476, line: 197, column: 2)
!4484 = !{i64 2155066986}
!4485 = !DILocation(line: 198, column: 2, scope: !4475)
!4486 = !DILocation(line: 199, column: 1, scope: !4475)
!4487 = distinct !DISubprogram(name: "z_current_get", scope: !4476, file: !4476, line: 173, type: !4367, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2584, retainedNodes: !2236)
!4488 = !DILocation(line: 180, column: 2, scope: !4489)
!4489 = distinct !DILexicalBlock(scope: !4487, file: !4476, line: 180, column: 2)
!4490 = !{i64 2155066918}
!4491 = !DILocation(line: 181, column: 9, scope: !4487)
!4492 = !DILocation(line: 181, column: 2, scope: !4487)
!4493 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2590, file: !2590, line: 1338, type: !4494, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2586, retainedNodes: !4502)
!4494 = !DISubroutineType(types: !4495)
!4495 = !{!107, !3648, !106, !118, !4496, !152}
!4496 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3268, line: 99, baseType: !4497)
!4497 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3268, line: 40, baseType: !4498)
!4498 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2590, baseType: !4499)
!4499 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4500)
!4500 = !{!4501}
!4501 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4499, file: !2590, baseType: !106, size: 32)
!4502 = !{!4503, !4504, !4505, !4506, !4507, !4508, !4512, !4513, !4514, !4516, !4521, !4564, !4567, !4570, !4571, !4572, !4573, !4574, !4575, !4576, !4579, !4580, !4581, !4585, !4588, !4590, !4593, !4594, !4595, !4600, !4606, !4609, !4613, !4619, !4623, !4626, !4628, !4631}
!4503 = !DILocalVariable(name: "out", arg: 1, scope: !4493, file: !2590, line: 1338, type: !3648)
!4504 = !DILocalVariable(name: "ctx", arg: 2, scope: !4493, file: !2590, line: 1338, type: !106)
!4505 = !DILocalVariable(name: "fp", arg: 3, scope: !4493, file: !2590, line: 1338, type: !118)
!4506 = !DILocalVariable(name: "ap", arg: 4, scope: !4493, file: !2590, line: 1339, type: !4496)
!4507 = !DILocalVariable(name: "flags", arg: 5, scope: !4493, file: !2590, line: 1339, type: !152)
!4508 = !DILocalVariable(name: "buf", scope: !4493, file: !2590, line: 1341, type: !4509)
!4509 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 176, elements: !4510)
!4510 = !{!4511}
!4511 = !DISubrange(count: 22)
!4512 = !DILocalVariable(name: "count", scope: !4493, file: !2590, line: 1342, type: !185)
!4513 = !DILocalVariable(name: "sint", scope: !4493, file: !2590, line: 1343, type: !2609)
!4514 = !DILocalVariable(name: "tagged_ap", scope: !4493, file: !2590, line: 1345, type: !4515)
!4515 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !145)
!4516 = !DILocalVariable(name: "rc", scope: !4517, file: !2590, line: 1377, type: !107)
!4517 = distinct !DILexicalBlock(scope: !4518, file: !2590, line: 1377, column: 4)
!4518 = distinct !DILexicalBlock(scope: !4519, file: !2590, line: 1376, column: 19)
!4519 = distinct !DILexicalBlock(scope: !4520, file: !2590, line: 1376, column: 7)
!4520 = distinct !DILexicalBlock(scope: !4493, file: !2590, line: 1375, column: 19)
!4521 = !DILocalVariable(name: "state", scope: !4520, file: !2590, line: 1395, type: !4522)
!4522 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4493, file: !2590, line: 1392, size: 192, elements: !4523)
!4523 = !{!4524, !4532}
!4524 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4522, file: !2590, line: 1393, baseType: !4525, size: 64)
!4525 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2590, line: 166, size: 64, elements: !4526)
!4526 = !{!4527, !4528, !4529, !4530, !4531}
!4527 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4525, file: !2590, line: 168, baseType: !2609, size: 64)
!4528 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4525, file: !2590, line: 171, baseType: !2612, size: 64)
!4529 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4525, file: !2590, line: 174, baseType: !183, size: 64)
!4530 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4525, file: !2590, line: 177, baseType: !181, size: 64)
!4531 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4525, file: !2590, line: 180, baseType: !106, size: 32)
!4532 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4522, file: !2590, line: 1394, baseType: !4533, size: 96, offset: 64)
!4533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2590, line: 189, size: 96, elements: !4534)
!4534 = !{!4535, !4536, !4537, !4538, !4539, !4540, !4541, !4542, !4543, !4544, !4545, !4546, !4547, !4548, !4549, !4550, !4551, !4552, !4553, !4554, !4559}
!4535 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4533, file: !2590, line: 191, baseType: !145, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4536 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4533, file: !2590, line: 194, baseType: !145, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4537 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4533, file: !2590, line: 197, baseType: !145, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4538 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4533, file: !2590, line: 200, baseType: !145, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4539 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4533, file: !2590, line: 203, baseType: !145, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4540 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4533, file: !2590, line: 206, baseType: !145, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4541 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4533, file: !2590, line: 209, baseType: !145, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4542 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4533, file: !2590, line: 212, baseType: !145, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4543 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4533, file: !2590, line: 219, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4544 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4533, file: !2590, line: 222, baseType: !145, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4545 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4533, file: !2590, line: 229, baseType: !145, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4546 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4533, file: !2590, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4547 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4533, file: !2590, line: 238, baseType: !145, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4548 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4533, file: !2590, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4549 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4533, file: !2590, line: 244, baseType: !145, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4550 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4533, file: !2590, line: 247, baseType: !145, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4551 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4533, file: !2590, line: 252, baseType: !145, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4552 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4533, file: !2590, line: 257, baseType: !145, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4553 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4533, file: !2590, line: 260, baseType: !196, size: 8, offset: 24)
!4554 = !DIDerivedType(tag: DW_TAG_member, scope: !4533, file: !2590, line: 262, baseType: !4555, size: 32, offset: 32)
!4555 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4533, file: !2590, line: 262, size: 32, elements: !4556)
!4556 = !{!4557, !4558}
!4557 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4555, file: !2590, line: 267, baseType: !107, size: 32)
!4558 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4555, file: !2590, line: 289, baseType: !107, size: 32)
!4559 = !DIDerivedType(tag: DW_TAG_member, scope: !4533, file: !2590, line: 292, baseType: !4560, size: 32, offset: 64)
!4560 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4533, file: !2590, line: 292, size: 32, elements: !4561)
!4561 = !{!4562, !4563}
!4562 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4560, file: !2590, line: 297, baseType: !107, size: 32)
!4563 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4560, file: !2590, line: 306, baseType: !107, size: 32)
!4564 = !DILocalVariable(name: "conv", scope: !4520, file: !2590, line: 1400, type: !4565)
!4565 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4566)
!4566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4533, size: 32)
!4567 = !DILocalVariable(name: "value", scope: !4520, file: !2590, line: 1401, type: !4568)
!4568 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4569)
!4569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4525, size: 32)
!4570 = !DILocalVariable(name: "sp", scope: !4520, file: !2590, line: 1402, type: !118)
!4571 = !DILocalVariable(name: "width", scope: !4520, file: !2590, line: 1403, type: !107)
!4572 = !DILocalVariable(name: "precision", scope: !4520, file: !2590, line: 1404, type: !107)
!4573 = !DILocalVariable(name: "bps", scope: !4520, file: !2590, line: 1405, type: !118)
!4574 = !DILocalVariable(name: "bpe", scope: !4520, file: !2590, line: 1406, type: !118)
!4575 = !DILocalVariable(name: "sign", scope: !4520, file: !2590, line: 1407, type: !120)
!4576 = !DILocalVariable(name: "arg", scope: !4577, file: !2590, line: 1432, type: !107)
!4577 = distinct !DILexicalBlock(scope: !4578, file: !2590, line: 1431, column: 24)
!4578 = distinct !DILexicalBlock(scope: !4520, file: !2590, line: 1431, column: 7)
!4579 = !DILocalVariable(name: "specifier_cat", scope: !4520, file: !2590, line: 1468, type: !2589)
!4580 = !DILocalVariable(name: "length_mod", scope: !4520, file: !2590, line: 1470, type: !2597)
!4581 = !DILocalVariable(name: "rc", scope: !4582, file: !2590, line: 1575, type: !107)
!4582 = distinct !DILexicalBlock(scope: !4583, file: !2590, line: 1575, column: 4)
!4583 = distinct !DILexicalBlock(scope: !4584, file: !2590, line: 1574, column: 43)
!4584 = distinct !DILexicalBlock(scope: !4520, file: !2590, line: 1574, column: 7)
!4585 = !DILocalVariable(name: "rc", scope: !4586, file: !2590, line: 1584, type: !107)
!4586 = distinct !DILexicalBlock(scope: !4587, file: !2590, line: 1584, column: 4)
!4587 = distinct !DILexicalBlock(scope: !4520, file: !2590, line: 1582, column: 28)
!4588 = !DILocalVariable(name: "len", scope: !4589, file: !2590, line: 1589, type: !185)
!4589 = distinct !DILexicalBlock(scope: !4587, file: !2590, line: 1586, column: 13)
!4590 = !DILocalVariable(name: "len", scope: !4591, file: !2590, line: 1641, type: !185)
!4591 = distinct !DILexicalBlock(scope: !4592, file: !2590, line: 1640, column: 24)
!4592 = distinct !DILexicalBlock(scope: !4587, file: !2590, line: 1640, column: 8)
!4593 = !DILocalVariable(name: "nj_len", scope: !4520, file: !2590, line: 1722, type: !185)
!4594 = !DILocalVariable(name: "pad_len", scope: !4520, file: !2590, line: 1723, type: !107)
!4595 = !DILocalVariable(name: "pad", scope: !4596, file: !2590, line: 1751, type: !120)
!4596 = distinct !DILexicalBlock(scope: !4597, file: !2590, line: 1750, column: 26)
!4597 = distinct !DILexicalBlock(scope: !4598, file: !2590, line: 1750, column: 8)
!4598 = distinct !DILexicalBlock(scope: !4599, file: !2590, line: 1747, column: 18)
!4599 = distinct !DILexicalBlock(scope: !4520, file: !2590, line: 1747, column: 7)
!4600 = !DILocalVariable(name: "rc", scope: !4601, file: !2590, line: 1758, type: !107)
!4601 = distinct !DILexicalBlock(scope: !4602, file: !2590, line: 1758, column: 7)
!4602 = distinct !DILexicalBlock(scope: !4603, file: !2590, line: 1757, column: 21)
!4603 = distinct !DILexicalBlock(scope: !4604, file: !2590, line: 1757, column: 10)
!4604 = distinct !DILexicalBlock(scope: !4605, file: !2590, line: 1756, column: 26)
!4605 = distinct !DILexicalBlock(scope: !4596, file: !2590, line: 1756, column: 9)
!4606 = !DILocalVariable(name: "rc", scope: !4607, file: !2590, line: 1765, type: !107)
!4607 = distinct !DILexicalBlock(scope: !4608, file: !2590, line: 1765, column: 6)
!4608 = distinct !DILexicalBlock(scope: !4596, file: !2590, line: 1764, column: 25)
!4609 = !DILocalVariable(name: "rc", scope: !4610, file: !2590, line: 1774, type: !107)
!4610 = distinct !DILexicalBlock(scope: !4611, file: !2590, line: 1774, column: 4)
!4611 = distinct !DILexicalBlock(scope: !4612, file: !2590, line: 1773, column: 18)
!4612 = distinct !DILexicalBlock(scope: !4520, file: !2590, line: 1773, column: 7)
!4613 = !DILocalVariable(name: "rc", scope: !4614, file: !2590, line: 1819, type: !107)
!4614 = distinct !DILexicalBlock(scope: !4615, file: !2590, line: 1819, column: 5)
!4615 = distinct !DILexicalBlock(scope: !4616, file: !2590, line: 1818, column: 44)
!4616 = distinct !DILexicalBlock(scope: !4617, file: !2590, line: 1818, column: 8)
!4617 = distinct !DILexicalBlock(scope: !4618, file: !2590, line: 1817, column: 10)
!4618 = distinct !DILexicalBlock(scope: !4520, file: !2590, line: 1777, column: 7)
!4619 = !DILocalVariable(name: "rc", scope: !4620, file: !2590, line: 1823, type: !107)
!4620 = distinct !DILexicalBlock(scope: !4621, file: !2590, line: 1823, column: 5)
!4621 = distinct !DILexicalBlock(scope: !4622, file: !2590, line: 1822, column: 26)
!4622 = distinct !DILexicalBlock(scope: !4617, file: !2590, line: 1822, column: 8)
!4623 = !DILocalVariable(name: "rc", scope: !4624, file: !2590, line: 1828, type: !107)
!4624 = distinct !DILexicalBlock(scope: !4625, file: !2590, line: 1828, column: 5)
!4625 = distinct !DILexicalBlock(scope: !4617, file: !2590, line: 1827, column: 26)
!4626 = !DILocalVariable(name: "rc", scope: !4627, file: !2590, line: 1831, type: !107)
!4627 = distinct !DILexicalBlock(scope: !4617, file: !2590, line: 1831, column: 4)
!4628 = !DILocalVariable(name: "rc", scope: !4629, file: !2590, line: 1836, type: !107)
!4629 = distinct !DILexicalBlock(scope: !4630, file: !2590, line: 1836, column: 4)
!4630 = distinct !DILexicalBlock(scope: !4520, file: !2590, line: 1835, column: 21)
!4631 = !DILabel(scope: !4587, name: "prec_int_pad0", file: !2590, line: 1634)
!4632 = !DILocation(line: 0, scope: !4493)
!4633 = !DILocation(line: 1341, column: 2, scope: !4493)
!4634 = !DILocation(line: 1341, column: 7, scope: !4493)
!4635 = !DILocation(line: 1375, column: 2, scope: !4493)
!4636 = !DILocation(line: 1342, column: 9, scope: !4493)
!4637 = !DILocation(line: 1375, column: 9, scope: !4493)
!4638 = !DILocation(line: 1377, column: 4, scope: !4517)
!4639 = !DILocation(line: 0, scope: !4517)
!4640 = !DILocation(line: 1377, column: 4, scope: !4641)
!4641 = distinct !DILexicalBlock(scope: !4517, file: !2590, line: 1377, column: 4)
!4642 = distinct !{!4642, !4635, !4643}
!4643 = !DILocation(line: 1839, column: 2, scope: !4493)
!4644 = !DILocation(line: 1392, column: 3, scope: !4520)
!4645 = !DILocation(line: 1395, column: 5, scope: !4520)
!4646 = !DILocation(line: 0, scope: !4520)
!4647 = !DILocation(line: 1409, column: 8, scope: !4520)
!4648 = !DILocation(line: 1414, column: 13, scope: !4649)
!4649 = distinct !DILexicalBlock(scope: !4520, file: !2590, line: 1414, column: 7)
!4650 = !DILocation(line: 1414, column: 7, scope: !4520)
!4651 = !DILocation(line: 1415, column: 12, scope: !4652)
!4652 = distinct !DILexicalBlock(scope: !4649, file: !2590, line: 1414, column: 25)
!4653 = !DILocation(line: 1417, column: 14, scope: !4654)
!4654 = distinct !DILexicalBlock(scope: !4652, file: !2590, line: 1417, column: 8)
!4655 = !DILocation(line: 1417, column: 8, scope: !4652)
!4656 = !DILocation(line: 1418, column: 21, scope: !4657)
!4657 = distinct !DILexicalBlock(scope: !4654, file: !2590, line: 1417, column: 19)
!4658 = !DILocation(line: 1419, column: 13, scope: !4657)
!4659 = !DILocation(line: 1420, column: 4, scope: !4657)
!4660 = !DILocation(line: 1421, column: 20, scope: !4661)
!4661 = distinct !DILexicalBlock(scope: !4649, file: !2590, line: 1421, column: 14)
!4662 = !DILocation(line: 1421, column: 14, scope: !4649)
!4663 = !DILocation(line: 1431, column: 13, scope: !4578)
!4664 = !DILocation(line: 1431, column: 7, scope: !4520)
!4665 = !DILocation(line: 1432, column: 14, scope: !4577)
!4666 = !DILocation(line: 0, scope: !4577)
!4667 = !DILocation(line: 1434, column: 12, scope: !4668)
!4668 = distinct !DILexicalBlock(scope: !4577, file: !2590, line: 1434, column: 8)
!4669 = !DILocation(line: 1434, column: 8, scope: !4577)
!4670 = !DILocation(line: 1435, column: 24, scope: !4671)
!4671 = distinct !DILexicalBlock(scope: !4668, file: !2590, line: 1434, column: 17)
!4672 = !DILocation(line: 1436, column: 4, scope: !4671)
!4673 = !DILocation(line: 1439, column: 20, scope: !4674)
!4674 = distinct !DILexicalBlock(scope: !4578, file: !2590, line: 1439, column: 14)
!4675 = !DILocation(line: 1439, column: 14, scope: !4578)
!4676 = !DILocation(line: 1469, column: 37, scope: !4520)
!4677 = !DILocation(line: 1448, column: 20, scope: !4520)
!4678 = !DILocation(line: 1449, column: 22, scope: !4520)
!4679 = !DILocation(line: 1471, column: 34, scope: !4520)
!4680 = !DILocation(line: 1478, column: 7, scope: !4520)
!4681 = !DILocation(line: 1479, column: 4, scope: !4682)
!4682 = distinct !DILexicalBlock(scope: !4683, file: !2590, line: 1478, column: 40)
!4683 = distinct !DILexicalBlock(scope: !4520, file: !2590, line: 1478, column: 7)
!4684 = !DILocation(line: 1484, column: 19, scope: !4685)
!4685 = distinct !DILexicalBlock(scope: !4682, file: !2590, line: 1479, column: 24)
!4686 = !DILocation(line: 1484, column: 17, scope: !4685)
!4687 = !DILocation(line: 1485, column: 5, scope: !4685)
!4688 = !DILocation(line: 1492, column: 20, scope: !4689)
!4689 = distinct !DILexicalBlock(scope: !4690, file: !2590, line: 1491, column: 12)
!4690 = distinct !DILexicalBlock(scope: !4685, file: !2590, line: 1487, column: 9)
!4691 = !DILocation(line: 1492, column: 18, scope: !4689)
!4692 = !DILocation(line: 1494, column: 5, scope: !4685)
!4693 = !DILocation(line: 1497, column: 23, scope: !4685)
!4694 = !DILocation(line: 1496, column: 17, scope: !4685)
!4695 = !DILocation(line: 1498, column: 5, scope: !4685)
!4696 = !DILocation(line: 1501, column: 23, scope: !4685)
!4697 = !DILocation(line: 1500, column: 17, scope: !4685)
!4698 = !DILocation(line: 1502, column: 5, scope: !4685)
!4699 = !DILocation(line: 1513, column: 23, scope: !4685)
!4700 = !DILocation(line: 1513, column: 6, scope: !4685)
!4701 = !DILocation(line: 1512, column: 17, scope: !4685)
!4702 = !DILocation(line: 1514, column: 5, scope: !4685)
!4703 = !DILocation(line: 0, scope: !4685)
!4704 = !DILocation(line: 1516, column: 8, scope: !4682)
!4705 = !DILocation(line: 1517, column: 19, scope: !4706)
!4706 = distinct !DILexicalBlock(scope: !4707, file: !2590, line: 1516, column: 33)
!4707 = distinct !DILexicalBlock(scope: !4682, file: !2590, line: 1516, column: 8)
!4708 = !DILocation(line: 1517, column: 17, scope: !4706)
!4709 = !DILocation(line: 1518, column: 4, scope: !4706)
!4710 = !DILocation(line: 1519, column: 19, scope: !4711)
!4711 = distinct !DILexicalBlock(scope: !4712, file: !2590, line: 1518, column: 39)
!4712 = distinct !DILexicalBlock(scope: !4707, file: !2590, line: 1518, column: 15)
!4713 = !DILocation(line: 1519, column: 17, scope: !4711)
!4714 = !DILocation(line: 1520, column: 4, scope: !4711)
!4715 = !DILocation(line: 1522, column: 4, scope: !4716)
!4716 = distinct !DILexicalBlock(scope: !4717, file: !2590, line: 1521, column: 47)
!4717 = distinct !DILexicalBlock(scope: !4683, file: !2590, line: 1521, column: 14)
!4718 = !DILocation(line: 1527, column: 19, scope: !4719)
!4719 = distinct !DILexicalBlock(scope: !4716, file: !2590, line: 1522, column: 24)
!4720 = !DILocation(line: 1527, column: 17, scope: !4719)
!4721 = !DILocation(line: 1528, column: 5, scope: !4719)
!4722 = !DILocation(line: 0, scope: !4723)
!4723 = distinct !DILexicalBlock(scope: !4719, file: !2590, line: 1530, column: 9)
!4724 = !DILocation(line: 1540, column: 23, scope: !4719)
!4725 = !DILocation(line: 1539, column: 17, scope: !4719)
!4726 = !DILocation(line: 1542, column: 5, scope: !4719)
!4727 = !DILocation(line: 1545, column: 23, scope: !4719)
!4728 = !DILocation(line: 1544, column: 17, scope: !4719)
!4729 = !DILocation(line: 1547, column: 5, scope: !4719)
!4730 = !DILocation(line: 1551, column: 23, scope: !4719)
!4731 = !DILocation(line: 1551, column: 6, scope: !4719)
!4732 = !DILocation(line: 1550, column: 17, scope: !4719)
!4733 = !DILocation(line: 1552, column: 5, scope: !4719)
!4734 = !DILocation(line: 0, scope: !4719)
!4735 = !DILocation(line: 1554, column: 8, scope: !4716)
!4736 = !DILocation(line: 1555, column: 19, scope: !4737)
!4737 = distinct !DILexicalBlock(scope: !4738, file: !2590, line: 1554, column: 33)
!4738 = distinct !DILexicalBlock(scope: !4716, file: !2590, line: 1554, column: 8)
!4739 = !DILocation(line: 1555, column: 17, scope: !4737)
!4740 = !DILocation(line: 1556, column: 4, scope: !4737)
!4741 = !DILocation(line: 1557, column: 19, scope: !4742)
!4742 = distinct !DILexicalBlock(scope: !4743, file: !2590, line: 1556, column: 39)
!4743 = distinct !DILexicalBlock(scope: !4738, file: !2590, line: 1556, column: 15)
!4744 = !DILocation(line: 1557, column: 17, scope: !4742)
!4745 = !DILocation(line: 1558, column: 4, scope: !4742)
!4746 = !DILocation(line: 0, scope: !4747)
!4747 = distinct !DILexicalBlock(scope: !4748, file: !2590, line: 1560, column: 8)
!4748 = distinct !DILexicalBlock(scope: !4749, file: !2590, line: 1559, column: 45)
!4749 = distinct !DILexicalBlock(scope: !4717, file: !2590, line: 1559, column: 14)
!4750 = !DILocation(line: 1566, column: 17, scope: !4751)
!4751 = distinct !DILexicalBlock(scope: !4752, file: !2590, line: 1565, column: 46)
!4752 = distinct !DILexicalBlock(scope: !4749, file: !2590, line: 1565, column: 14)
!4753 = !DILocation(line: 1566, column: 15, scope: !4751)
!4754 = !DILocation(line: 1567, column: 3, scope: !4751)
!4755 = !DILocation(line: 1574, column: 21, scope: !4584)
!4756 = !DILocation(line: 1575, column: 4, scope: !4582)
!4757 = !DILocation(line: 0, scope: !4582)
!4758 = !DILocation(line: 1575, column: 4, scope: !4759)
!4759 = distinct !DILexicalBlock(scope: !4582, file: !2590, line: 1575, column: 4)
!4760 = !DILocation(line: 1582, column: 17, scope: !4520)
!4761 = !DILocation(line: 1582, column: 3, scope: !4520)
!4762 = !DILocation(line: 1584, column: 4, scope: !4586)
!4763 = !DILocation(line: 0, scope: !4586)
!4764 = !DILocation(line: 1584, column: 4, scope: !4765)
!4765 = distinct !DILexicalBlock(scope: !4586, file: !2590, line: 1584, column: 4)
!4766 = !DILocation(line: 1587, column: 31, scope: !4589)
!4767 = !DILocation(line: 1591, column: 18, scope: !4768)
!4768 = distinct !DILexicalBlock(scope: !4589, file: !2590, line: 1591, column: 8)
!4769 = !DILocation(line: 1591, column: 8, scope: !4589)
!4770 = !DILocation(line: 1592, column: 11, scope: !4771)
!4771 = distinct !DILexicalBlock(scope: !4768, file: !2590, line: 1591, column: 24)
!4772 = !DILocation(line: 0, scope: !4589)
!4773 = !DILocation(line: 1593, column: 4, scope: !4771)
!4774 = !DILocation(line: 1594, column: 11, scope: !4775)
!4775 = distinct !DILexicalBlock(scope: !4768, file: !2590, line: 1593, column: 11)
!4776 = !DILocation(line: 1604, column: 51, scope: !4587)
!4777 = !DILocation(line: 1604, column: 13, scope: !4587)
!4778 = !DILocation(line: 1604, column: 11, scope: !4587)
!4779 = !DILocation(line: 1606, column: 4, scope: !4587)
!4780 = !DILocation(line: 1609, column: 14, scope: !4781)
!4781 = distinct !DILexicalBlock(scope: !4587, file: !2590, line: 1609, column: 8)
!4782 = !DILocation(line: 1609, column: 8, scope: !4587)
!4783 = !DILocation(line: 1619, column: 18, scope: !4587)
!4784 = !DILocation(line: 1620, column: 13, scope: !4785)
!4785 = distinct !DILexicalBlock(scope: !4587, file: !2590, line: 1620, column: 8)
!4786 = !DILocation(line: 1620, column: 8, scope: !4587)
!4787 = !DILocation(line: 1622, column: 36, scope: !4788)
!4788 = distinct !DILexicalBlock(scope: !4785, file: !2590, line: 1620, column: 18)
!4789 = !DILocation(line: 1622, column: 17, scope: !4788)
!4790 = !DILocation(line: 1623, column: 4, scope: !4788)
!4791 = !DILocation(line: 1632, column: 29, scope: !4587)
!4792 = !DILocation(line: 1632, column: 10, scope: !4587)
!4793 = !DILocation(line: 1632, column: 4, scope: !4587)
!4794 = !DILocation(line: 1407, column: 8, scope: !4520)
!4795 = !DILocation(line: 0, scope: !4587)
!4796 = !DILocation(line: 1634, column: 3, scope: !4587)
!4797 = !DILocation(line: 1640, column: 18, scope: !4592)
!4798 = !DILocation(line: 1640, column: 8, scope: !4587)
!4799 = !DILocation(line: 1729, column: 13, scope: !4800)
!4800 = distinct !DILexicalBlock(scope: !4520, file: !2590, line: 1729, column: 7)
!4801 = !DILocation(line: 1641, column: 22, scope: !4591)
!4802 = !DILocation(line: 0, scope: !4591)
!4803 = !DILocation(line: 1646, column: 21, scope: !4591)
!4804 = !DILocation(line: 1649, column: 13, scope: !4805)
!4805 = distinct !DILexicalBlock(scope: !4591, file: !2590, line: 1649, column: 9)
!4806 = !DILocation(line: 1649, column: 9, scope: !4591)
!4807 = !DILocation(line: 1650, column: 35, scope: !4808)
!4808 = distinct !DILexicalBlock(scope: !4805, file: !2590, line: 1649, column: 34)
!4809 = !DILocation(line: 1650, column: 23, scope: !4808)
!4810 = !DILocation(line: 1651, column: 5, scope: !4808)
!4811 = !DILocation(line: 1660, column: 15, scope: !4812)
!4812 = distinct !DILexicalBlock(scope: !4587, file: !2590, line: 1660, column: 8)
!4813 = !DILocation(line: 1660, column: 19, scope: !4812)
!4814 = !DILocation(line: 1660, column: 8, scope: !4587)
!4815 = !DILocation(line: 1661, column: 23, scope: !4816)
!4816 = distinct !DILexicalBlock(scope: !4812, file: !2590, line: 1660, column: 28)
!4817 = !DILocation(line: 1661, column: 11, scope: !4816)
!4818 = !DILocation(line: 1665, column: 22, scope: !4816)
!4819 = !DILocation(line: 1666, column: 21, scope: !4816)
!4820 = !DILocation(line: 1668, column: 5, scope: !4816)
!4821 = !DILocation(line: 1677, column: 30, scope: !4822)
!4822 = distinct !DILexicalBlock(scope: !4823, file: !2590, line: 1676, column: 49)
!4823 = distinct !DILexicalBlock(scope: !4587, file: !2590, line: 1676, column: 8)
!4824 = !DILocation(line: 1677, column: 5, scope: !4822)
!4825 = !DILocation(line: 1680, column: 4, scope: !4587)
!4826 = !DILocation(line: 0, scope: !4768)
!4827 = !DILocation(line: 1597, column: 14, scope: !4589)
!4828 = !DILocation(line: 1699, column: 11, scope: !4829)
!4829 = distinct !DILexicalBlock(scope: !4520, file: !2590, line: 1699, column: 7)
!4830 = !DILocation(line: 1699, column: 7, scope: !4520)
!4831 = !DILocation(line: 1725, column: 7, scope: !4832)
!4832 = distinct !DILexicalBlock(scope: !4520, file: !2590, line: 1725, column: 7)
!4833 = !DILocation(line: 1725, column: 12, scope: !4832)
!4834 = !DILocation(line: 1747, column: 13, scope: !4599)
!4835 = !DILocation(line: 1747, column: 7, scope: !4520)
!4836 = !DILocation(line: 1722, column: 24, scope: !4520)
!4837 = !DILocation(line: 1725, column: 7, scope: !4520)
!4838 = !DILocation(line: 1729, column: 7, scope: !4520)
!4839 = !DILocation(line: 1736, column: 13, scope: !4840)
!4840 = distinct !DILexicalBlock(scope: !4520, file: !2590, line: 1736, column: 7)
!4841 = !DILocation(line: 1735, column: 19, scope: !4520)
!4842 = !DILocation(line: 1736, column: 7, scope: !4520)
!4843 = !DILocation(line: 1748, column: 10, scope: !4598)
!4844 = !DILocation(line: 1750, column: 15, scope: !4597)
!4845 = !DILocation(line: 1750, column: 8, scope: !4598)
!4846 = !DILocation(line: 0, scope: !4596)
!4847 = !DILocation(line: 1756, column: 15, scope: !4605)
!4848 = !DILocation(line: 1756, column: 9, scope: !4596)
!4849 = !DILocation(line: 1758, column: 7, scope: !4601)
!4850 = !DILocation(line: 0, scope: !4601)
!4851 = !DILocation(line: 1758, column: 7, scope: !4852)
!4852 = distinct !DILexicalBlock(scope: !4601, file: !2590, line: 1758, column: 7)
!4853 = !DILocation(line: 1764, column: 5, scope: !4596)
!4854 = !DILocation(line: 0, scope: !4598)
!4855 = !DILocation(line: 1764, column: 20, scope: !4596)
!4856 = !DILocation(line: 1764, column: 17, scope: !4596)
!4857 = !DILocation(line: 1765, column: 6, scope: !4607)
!4858 = !DILocation(line: 0, scope: !4607)
!4859 = !DILocation(line: 1765, column: 6, scope: !4860)
!4860 = distinct !DILexicalBlock(scope: !4607, file: !2590, line: 1765, column: 6)
!4861 = distinct !{!4861, !4853, !4862}
!4862 = !DILocation(line: 1766, column: 5, scope: !4596)
!4863 = !DILocation(line: 1773, column: 12, scope: !4612)
!4864 = !DILocation(line: 1773, column: 7, scope: !4520)
!4865 = !DILocation(line: 1773, column: 7, scope: !4612)
!4866 = !DILocation(line: 1774, column: 4, scope: !4610)
!4867 = !DILocation(line: 0, scope: !4610)
!4868 = !DILocation(line: 1774, column: 4, scope: !4869)
!4869 = distinct !DILexicalBlock(scope: !4610, file: !2590, line: 1774, column: 4)
!4870 = !DILocation(line: 1818, column: 8, scope: !4616)
!4871 = !DILocation(line: 1818, column: 27, scope: !4616)
!4872 = !DILocation(line: 1818, column: 25, scope: !4616)
!4873 = !DILocation(line: 1818, column: 8, scope: !4617)
!4874 = !DILocation(line: 1819, column: 5, scope: !4614)
!4875 = !DILocation(line: 0, scope: !4614)
!4876 = !DILocation(line: 1819, column: 5, scope: !4877)
!4877 = distinct !DILexicalBlock(scope: !4614, file: !2590, line: 1819, column: 5)
!4878 = !DILocation(line: 1822, column: 14, scope: !4622)
!4879 = !DILocation(line: 1822, column: 8, scope: !4617)
!4880 = !DILocation(line: 1823, column: 5, scope: !4620)
!4881 = !DILocation(line: 0, scope: !4620)
!4882 = !DILocation(line: 1823, column: 5, scope: !4883)
!4883 = distinct !DILexicalBlock(scope: !4620, file: !2590, line: 1823, column: 5)
!4884 = !DILocation(line: 1826, column: 20, scope: !4617)
!4885 = !DILocation(line: 1827, column: 4, scope: !4617)
!4886 = !DILocation(line: 0, scope: !4617)
!4887 = !DILocation(line: 1827, column: 21, scope: !4617)
!4888 = !DILocation(line: 1827, column: 18, scope: !4617)
!4889 = !DILocation(line: 1828, column: 5, scope: !4624)
!4890 = !DILocation(line: 0, scope: !4624)
!4891 = !DILocation(line: 1828, column: 5, scope: !4892)
!4892 = distinct !DILexicalBlock(scope: !4624, file: !2590, line: 1828, column: 5)
!4893 = distinct !{!4893, !4885, !4894}
!4894 = !DILocation(line: 1829, column: 4, scope: !4617)
!4895 = !DILocation(line: 1831, column: 4, scope: !4627)
!4896 = !DILocation(line: 0, scope: !4627)
!4897 = !DILocation(line: 1831, column: 4, scope: !4898)
!4898 = distinct !DILexicalBlock(scope: !4627, file: !2590, line: 1831, column: 4)
!4899 = !DILocation(line: 1835, column: 16, scope: !4520)
!4900 = !DILocation(line: 1835, column: 3, scope: !4520)
!4901 = !DILocation(line: 1836, column: 4, scope: !4629)
!4902 = !DILocation(line: 0, scope: !4629)
!4903 = !DILocation(line: 1836, column: 4, scope: !4904)
!4904 = distinct !DILexicalBlock(scope: !4629, file: !2590, line: 1836, column: 4)
!4905 = !DILocation(line: 1837, column: 4, scope: !4630)
!4906 = distinct !{!4906, !4900, !4907}
!4907 = !DILocation(line: 1838, column: 3, scope: !4520)
!4908 = !DILocation(line: 1844, column: 1, scope: !4493)
!4909 = distinct !DISubprogram(name: "extract_conversion", scope: !2590, file: !2590, line: 642, type: !4910, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2586, retainedNodes: !4912)
!4910 = !DISubroutineType(types: !4911)
!4911 = !{!118, !4566, !118}
!4912 = !{!4913, !4914}
!4913 = !DILocalVariable(name: "conv", arg: 1, scope: !4909, file: !2590, line: 642, type: !4566)
!4914 = !DILocalVariable(name: "sp", arg: 2, scope: !4909, file: !2590, line: 643, type: !118)
!4915 = !DILocation(line: 0, scope: !4909)
!4916 = !DILocation(line: 645, column: 10, scope: !4909)
!4917 = !DILocation(line: 653, column: 2, scope: !4909)
!4918 = !DILocation(line: 654, column: 6, scope: !4919)
!4919 = distinct !DILexicalBlock(scope: !4909, file: !2590, line: 654, column: 6)
!4920 = !DILocation(line: 654, column: 10, scope: !4919)
!4921 = !DILocation(line: 654, column: 6, scope: !4909)
!4922 = !DILocation(line: 655, column: 24, scope: !4923)
!4923 = distinct !DILexicalBlock(scope: !4919, file: !2590, line: 654, column: 18)
!4924 = !DILocation(line: 655, column: 19, scope: !4923)
!4925 = !DILocation(line: 656, column: 3, scope: !4923)
!4926 = !DILocation(line: 659, column: 7, scope: !4909)
!4927 = !DILocation(line: 660, column: 7, scope: !4909)
!4928 = !DILocation(line: 661, column: 7, scope: !4909)
!4929 = !DILocation(line: 662, column: 7, scope: !4909)
!4930 = !DILocation(line: 663, column: 7, scope: !4909)
!4931 = !DILocation(line: 665, column: 2, scope: !4909)
!4932 = !DILocation(line: 666, column: 1, scope: !4909)
!4933 = distinct !DISubprogram(name: "outs", scope: !2590, file: !2590, line: 1319, type: !4934, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2586, retainedNodes: !4936)
!4934 = !DISubroutineType(types: !4935)
!4935 = !{!107, !3648, !106, !118, !118}
!4936 = !{!4937, !4938, !4939, !4940, !4941, !4942}
!4937 = !DILocalVariable(name: "out", arg: 1, scope: !4933, file: !2590, line: 1319, type: !3648)
!4938 = !DILocalVariable(name: "ctx", arg: 2, scope: !4933, file: !2590, line: 1320, type: !106)
!4939 = !DILocalVariable(name: "sp", arg: 3, scope: !4933, file: !2590, line: 1321, type: !118)
!4940 = !DILocalVariable(name: "ep", arg: 4, scope: !4933, file: !2590, line: 1322, type: !118)
!4941 = !DILocalVariable(name: "count", scope: !4933, file: !2590, line: 1324, type: !185)
!4942 = !DILocalVariable(name: "rc", scope: !4943, file: !2590, line: 1327, type: !107)
!4943 = distinct !DILexicalBlock(scope: !4933, file: !2590, line: 1326, column: 45)
!4944 = !DILocation(line: 0, scope: !4933)
!4945 = !DILocation(line: 1326, column: 2, scope: !4933)
!4946 = !DILocation(line: 1324, column: 9, scope: !4933)
!4947 = !DILocation(line: 1326, column: 13, scope: !4933)
!4948 = !DILocation(line: 1326, column: 19, scope: !4933)
!4949 = !DILocation(line: 1327, column: 21, scope: !4943)
!4950 = !DILocation(line: 1326, column: 36, scope: !4933)
!4951 = !DILocation(line: 1326, column: 39, scope: !4933)
!4952 = !DILocation(line: 1327, column: 24, scope: !4943)
!4953 = !DILocation(line: 1327, column: 16, scope: !4943)
!4954 = !DILocation(line: 1327, column: 12, scope: !4943)
!4955 = !DILocation(line: 0, scope: !4943)
!4956 = !DILocation(line: 1329, column: 10, scope: !4957)
!4957 = distinct !DILexicalBlock(scope: !4943, file: !2590, line: 1329, column: 7)
!4958 = !DILocation(line: 1329, column: 7, scope: !4943)
!4959 = distinct !{!4959, !4945, !4960}
!4960 = !DILocation(line: 1333, column: 2, scope: !4933)
!4961 = !DILocation(line: 1336, column: 1, scope: !4933)
!4962 = distinct !DISubprogram(name: "encode_uint", scope: !2590, file: !2590, line: 788, type: !4963, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2586, retainedNodes: !4965)
!4963 = !DISubroutineType(types: !4964)
!4964 = !{!193, !2612, !4566, !193, !118}
!4965 = !{!4966, !4967, !4968, !4969, !4970, !4971, !4973, !4974}
!4966 = !DILocalVariable(name: "value", arg: 1, scope: !4962, file: !2590, line: 788, type: !2612)
!4967 = !DILocalVariable(name: "conv", arg: 2, scope: !4962, file: !2590, line: 789, type: !4566)
!4968 = !DILocalVariable(name: "bps", arg: 3, scope: !4962, file: !2590, line: 790, type: !193)
!4969 = !DILocalVariable(name: "bpe", arg: 4, scope: !4962, file: !2590, line: 791, type: !118)
!4970 = !DILocalVariable(name: "upcase", scope: !4962, file: !2590, line: 793, type: !145)
!4971 = !DILocalVariable(name: "radix", scope: !4962, file: !2590, line: 794, type: !4972)
!4972 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!4973 = !DILocalVariable(name: "bp", scope: !4962, file: !2590, line: 795, type: !193)
!4974 = !DILocalVariable(name: "lsv", scope: !4975, file: !2590, line: 798, type: !32)
!4975 = distinct !DILexicalBlock(scope: !4962, file: !2590, line: 797, column: 5)
!4976 = !DILocation(line: 0, scope: !4962)
!4977 = !DILocation(line: 793, column: 35, scope: !4962)
!4978 = !DILocation(line: 793, column: 24, scope: !4962)
!4979 = !DILocation(line: 793, column: 16, scope: !4962)
!4980 = !DILocation(line: 794, column: 29, scope: !4962)
!4981 = !DILocation(line: 795, column: 24, scope: !4962)
!4982 = !DILocation(line: 795, column: 17, scope: !4962)
!4983 = !DILocation(line: 797, column: 2, scope: !4962)
!4984 = !DILocation(line: 802, column: 9, scope: !4975)
!4985 = !DILocation(line: 798, column: 22, scope: !4975)
!4986 = !DILocation(line: 0, scope: !4975)
!4987 = !DILocation(line: 800, column: 16, scope: !4975)
!4988 = !DILocation(line: 800, column: 11, scope: !4975)
!4989 = !DILocation(line: 800, column: 4, scope: !4975)
!4990 = !DILocation(line: 800, column: 9, scope: !4975)
!4991 = !DILocation(line: 803, column: 18, scope: !4962)
!4992 = !DILocation(line: 803, column: 24, scope: !4962)
!4993 = !DILocation(line: 803, column: 2, scope: !4975)
!4994 = distinct !{!4994, !4983, !4995}
!4995 = !DILocation(line: 803, column: 37, scope: !4962)
!4996 = !DILocation(line: 808, column: 12, scope: !4997)
!4997 = distinct !DILexicalBlock(scope: !4962, file: !2590, line: 808, column: 6)
!4998 = !DILocation(line: 808, column: 6, scope: !4962)
!4999 = !DILocation(line: 809, column: 7, scope: !5000)
!5000 = distinct !DILexicalBlock(scope: !4997, file: !2590, line: 808, column: 23)
!5001 = !DILocation(line: 813, column: 3, scope: !5002)
!5002 = distinct !DILexicalBlock(scope: !5003, file: !2590, line: 811, column: 27)
!5003 = distinct !DILexicalBlock(scope: !5004, file: !2590, line: 811, column: 14)
!5004 = distinct !DILexicalBlock(scope: !5000, file: !2590, line: 809, column: 7)
!5005 = !DILocation(line: 0, scope: !5004)
!5006 = !DILocation(line: 818, column: 2, scope: !4962)
!5007 = distinct !DISubprogram(name: "store_count", scope: !2590, file: !2590, line: 1280, type: !5008, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2586, retainedNodes: !5012)
!5008 = !DISubroutineType(types: !5009)
!5009 = !{null, !5010, !106, !107}
!5010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5011, size: 32)
!5011 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4533)
!5012 = !{!5013, !5014, !5015}
!5013 = !DILocalVariable(name: "conv", arg: 1, scope: !5007, file: !2590, line: 1280, type: !5010)
!5014 = !DILocalVariable(name: "dp", arg: 2, scope: !5007, file: !2590, line: 1281, type: !106)
!5015 = !DILocalVariable(name: "count", arg: 3, scope: !5007, file: !2590, line: 1282, type: !107)
!5016 = !DILocation(line: 0, scope: !5007)
!5017 = !DILocation(line: 1284, column: 38, scope: !5007)
!5018 = !DILocation(line: 1284, column: 2, scope: !5007)
!5019 = !DILocation(line: 1286, column: 4, scope: !5020)
!5020 = distinct !DILexicalBlock(scope: !5007, file: !2590, line: 1284, column: 50)
!5021 = !DILocation(line: 1286, column: 14, scope: !5020)
!5022 = !DILocation(line: 1287, column: 3, scope: !5020)
!5023 = !DILocation(line: 1289, column: 24, scope: !5020)
!5024 = !DILocation(line: 1289, column: 22, scope: !5020)
!5025 = !DILocation(line: 1290, column: 3, scope: !5020)
!5026 = !DILocation(line: 1292, column: 18, scope: !5020)
!5027 = !DILocation(line: 1292, column: 4, scope: !5020)
!5028 = !DILocation(line: 1292, column: 16, scope: !5020)
!5029 = !DILocation(line: 1293, column: 3, scope: !5020)
!5030 = !DILocation(line: 1295, column: 4, scope: !5020)
!5031 = !DILocation(line: 1295, column: 15, scope: !5020)
!5032 = !DILocation(line: 1296, column: 3, scope: !5020)
!5033 = !DILocation(line: 1298, column: 22, scope: !5020)
!5034 = !DILocation(line: 1298, column: 4, scope: !5020)
!5035 = !DILocation(line: 1298, column: 20, scope: !5020)
!5036 = !DILocation(line: 1299, column: 3, scope: !5020)
!5037 = !DILocation(line: 1301, column: 21, scope: !5020)
!5038 = !DILocation(line: 1301, column: 4, scope: !5020)
!5039 = !DILocation(line: 1301, column: 19, scope: !5020)
!5040 = !DILocation(line: 1302, column: 3, scope: !5020)
!5041 = !DILocation(line: 1304, column: 4, scope: !5020)
!5042 = !DILocation(line: 1304, column: 17, scope: !5020)
!5043 = !DILocation(line: 1305, column: 3, scope: !5020)
!5044 = !DILocation(line: 1307, column: 4, scope: !5020)
!5045 = !DILocation(line: 1307, column: 20, scope: !5020)
!5046 = !DILocation(line: 1308, column: 3, scope: !5020)
!5047 = !DILocation(line: 1316, column: 1, scope: !5007)
!5048 = distinct !DISubprogram(name: "isupper", scope: !5049, file: !5049, line: 16, type: !214, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2586, retainedNodes: !5050)
!5049 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5050 = !{!5051}
!5051 = !DILocalVariable(name: "a", arg: 1, scope: !5048, file: !5049, line: 16, type: !107)
!5052 = !DILocation(line: 0, scope: !5048)
!5053 = !DILocation(line: 18, column: 29, scope: !5048)
!5054 = !DILocation(line: 18, column: 45, scope: !5048)
!5055 = !DILocation(line: 18, column: 2, scope: !5048)
!5056 = distinct !DISubprogram(name: "conversion_radix", scope: !2590, file: !2590, line: 761, type: !5057, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2586, retainedNodes: !5059)
!5057 = !DISubroutineType(types: !5058)
!5058 = !{!185, !120}
!5059 = !{!5060}
!5060 = !DILocalVariable(name: "specifier", arg: 1, scope: !5056, file: !2590, line: 761, type: !120)
!5061 = !DILocation(line: 0, scope: !5056)
!5062 = !DILocation(line: 763, column: 2, scope: !5056)
!5063 = !DILocation(line: 770, column: 3, scope: !5064)
!5064 = distinct !DILexicalBlock(scope: !5056, file: !2590, line: 763, column: 21)
!5065 = !DILocation(line: 774, column: 3, scope: !5064)
!5066 = !DILocation(line: 0, scope: !5064)
!5067 = !DILocation(line: 776, column: 1, scope: !5056)
!5068 = distinct !DISubprogram(name: "extract_flags", scope: !2590, file: !2590, line: 339, type: !4910, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2586, retainedNodes: !5069)
!5069 = !{!5070, !5071, !5072}
!5070 = !DILocalVariable(name: "conv", arg: 1, scope: !5068, file: !2590, line: 339, type: !4566)
!5071 = !DILocalVariable(name: "sp", arg: 2, scope: !5068, file: !2590, line: 340, type: !118)
!5072 = !DILocalVariable(name: "loop", scope: !5068, file: !2590, line: 342, type: !145)
!5073 = !DILocation(line: 0, scope: !5068)
!5074 = !DILocation(line: 344, column: 2, scope: !5068)
!5075 = !DILocation(line: 345, column: 11, scope: !5076)
!5076 = distinct !DILexicalBlock(scope: !5068, file: !2590, line: 344, column: 5)
!5077 = !DILocation(line: 345, column: 3, scope: !5076)
!5078 = !DILocation(line: 351, column: 4, scope: !5079)
!5079 = distinct !DILexicalBlock(scope: !5076, file: !2590, line: 345, column: 16)
!5080 = !DILocation(line: 354, column: 4, scope: !5079)
!5081 = !DILocation(line: 357, column: 4, scope: !5079)
!5082 = !DILocation(line: 360, column: 4, scope: !5079)
!5083 = !DILocation(line: 0, scope: !5079)
!5084 = !DILocation(line: 370, column: 12, scope: !5085)
!5085 = distinct !DILexicalBlock(scope: !5068, file: !2590, line: 370, column: 6)
!5086 = !DILocation(line: 370, column: 22, scope: !5085)
!5087 = !DILocation(line: 371, column: 19, scope: !5088)
!5088 = distinct !DILexicalBlock(scope: !5085, file: !2590, line: 370, column: 42)
!5089 = !DILocation(line: 372, column: 2, scope: !5088)
!5090 = !DILocation(line: 376, column: 2, scope: !5068)
!5091 = distinct !DISubprogram(name: "extract_width", scope: !2590, file: !2590, line: 388, type: !4910, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2586, retainedNodes: !5092)
!5092 = !{!5093, !5094, !5095, !5096}
!5093 = !DILocalVariable(name: "conv", arg: 1, scope: !5091, file: !2590, line: 388, type: !4566)
!5094 = !DILocalVariable(name: "sp", arg: 2, scope: !5091, file: !2590, line: 389, type: !118)
!5095 = !DILocalVariable(name: "wp", scope: !5091, file: !2590, line: 398, type: !118)
!5096 = !DILocalVariable(name: "width", scope: !5091, file: !2590, line: 399, type: !185)
!5097 = !DILocation(line: 0, scope: !5091)
!5098 = !DILocation(line: 391, column: 8, scope: !5091)
!5099 = !DILocation(line: 391, column: 22, scope: !5091)
!5100 = !DILocation(line: 393, column: 6, scope: !5101)
!5101 = distinct !DILexicalBlock(scope: !5091, file: !2590, line: 393, column: 6)
!5102 = !DILocation(line: 393, column: 10, scope: !5101)
!5103 = !DILocation(line: 393, column: 6, scope: !5091)
!5104 = !DILocation(line: 394, column: 20, scope: !5105)
!5105 = distinct !DILexicalBlock(scope: !5101, file: !2590, line: 393, column: 18)
!5106 = !DILocation(line: 395, column: 10, scope: !5105)
!5107 = !DILocation(line: 395, column: 3, scope: !5105)
!5108 = !DILocation(line: 399, column: 17, scope: !5091)
!5109 = !DILocation(line: 401, column: 6, scope: !5110)
!5110 = distinct !DILexicalBlock(scope: !5091, file: !2590, line: 401, column: 6)
!5111 = !DILocation(line: 401, column: 9, scope: !5110)
!5112 = !DILocation(line: 401, column: 6, scope: !5091)
!5113 = !DILocation(line: 402, column: 23, scope: !5114)
!5114 = distinct !DILexicalBlock(scope: !5110, file: !2590, line: 401, column: 16)
!5115 = !DILocation(line: 403, column: 9, scope: !5114)
!5116 = !DILocation(line: 403, column: 21, scope: !5114)
!5117 = !DILocation(line: 405, column: 11, scope: !5114)
!5118 = !DILocation(line: 404, column: 21, scope: !5114)
!5119 = !DILocation(line: 406, column: 2, scope: !5114)
!5120 = !DILocation(line: 409, column: 1, scope: !5091)
!5121 = distinct !DISubprogram(name: "extract_prec", scope: !2590, file: !2590, line: 420, type: !4910, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2586, retainedNodes: !5122)
!5122 = !{!5123, !5124, !5125}
!5123 = !DILocalVariable(name: "conv", arg: 1, scope: !5121, file: !2590, line: 420, type: !4566)
!5124 = !DILocalVariable(name: "sp", arg: 2, scope: !5121, file: !2590, line: 421, type: !118)
!5125 = !DILocalVariable(name: "prec", scope: !5121, file: !2590, line: 435, type: !185)
!5126 = !DILocation(line: 0, scope: !5121)
!5127 = !DILocation(line: 423, column: 24, scope: !5121)
!5128 = !DILocation(line: 423, column: 28, scope: !5121)
!5129 = !DILocation(line: 423, column: 8, scope: !5121)
!5130 = !DILocation(line: 423, column: 21, scope: !5121)
!5131 = !DILocation(line: 425, column: 6, scope: !5121)
!5132 = !DILocation(line: 428, column: 2, scope: !5121)
!5133 = !DILocation(line: 430, column: 6, scope: !5134)
!5134 = distinct !DILexicalBlock(scope: !5121, file: !2590, line: 430, column: 6)
!5135 = !DILocation(line: 430, column: 10, scope: !5134)
!5136 = !DILocation(line: 430, column: 6, scope: !5121)
!5137 = !DILocation(line: 431, column: 19, scope: !5138)
!5138 = distinct !DILexicalBlock(scope: !5134, file: !2590, line: 430, column: 18)
!5139 = !DILocation(line: 432, column: 10, scope: !5138)
!5140 = !DILocation(line: 432, column: 3, scope: !5138)
!5141 = !DILocation(line: 435, column: 16, scope: !5121)
!5142 = !DILocation(line: 437, column: 8, scope: !5121)
!5143 = !DILocation(line: 437, column: 19, scope: !5121)
!5144 = !DILocation(line: 439, column: 10, scope: !5121)
!5145 = !DILocation(line: 438, column: 20, scope: !5121)
!5146 = !DILocation(line: 441, column: 9, scope: !5121)
!5147 = !DILocation(line: 442, column: 1, scope: !5121)
!5148 = distinct !DISubprogram(name: "extract_length", scope: !2590, file: !2590, line: 453, type: !4910, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2586, retainedNodes: !5149)
!5149 = !{!5150, !5151}
!5150 = !DILocalVariable(name: "conv", arg: 1, scope: !5148, file: !2590, line: 453, type: !4566)
!5151 = !DILocalVariable(name: "sp", arg: 2, scope: !5148, file: !2590, line: 454, type: !118)
!5152 = !DILocation(line: 0, scope: !5148)
!5153 = !DILocation(line: 456, column: 10, scope: !5148)
!5154 = !DILocation(line: 456, column: 2, scope: !5148)
!5155 = !DILocation(line: 458, column: 8, scope: !5156)
!5156 = distinct !DILexicalBlock(scope: !5157, file: !2590, line: 458, column: 7)
!5157 = distinct !DILexicalBlock(scope: !5148, file: !2590, line: 456, column: 15)
!5158 = !DILocation(line: 458, column: 7, scope: !5156)
!5159 = !DILocation(line: 458, column: 13, scope: !5156)
!5160 = !DILocation(line: 0, scope: !5156)
!5161 = !DILocation(line: 458, column: 7, scope: !5157)
!5162 = !DILocation(line: 459, column: 21, scope: !5163)
!5163 = distinct !DILexicalBlock(scope: !5156, file: !2590, line: 458, column: 21)
!5164 = !DILocation(line: 460, column: 4, scope: !5163)
!5165 = !DILocation(line: 461, column: 3, scope: !5163)
!5166 = !DILocation(line: 462, column: 21, scope: !5167)
!5167 = distinct !DILexicalBlock(scope: !5156, file: !2590, line: 461, column: 10)
!5168 = !DILocation(line: 466, column: 8, scope: !5169)
!5169 = distinct !DILexicalBlock(scope: !5157, file: !2590, line: 466, column: 7)
!5170 = !DILocation(line: 466, column: 7, scope: !5169)
!5171 = !DILocation(line: 466, column: 13, scope: !5169)
!5172 = !DILocation(line: 0, scope: !5169)
!5173 = !DILocation(line: 466, column: 7, scope: !5157)
!5174 = !DILocation(line: 467, column: 21, scope: !5175)
!5175 = distinct !DILexicalBlock(scope: !5169, file: !2590, line: 466, column: 21)
!5176 = !DILocation(line: 468, column: 4, scope: !5175)
!5177 = !DILocation(line: 469, column: 3, scope: !5175)
!5178 = !DILocation(line: 470, column: 21, scope: !5179)
!5179 = distinct !DILexicalBlock(scope: !5169, file: !2590, line: 469, column: 10)
!5180 = !DILocation(line: 474, column: 9, scope: !5157)
!5181 = !DILocation(line: 474, column: 20, scope: !5157)
!5182 = !DILocation(line: 475, column: 3, scope: !5157)
!5183 = !DILocation(line: 476, column: 3, scope: !5157)
!5184 = !DILocation(line: 478, column: 9, scope: !5157)
!5185 = !DILocation(line: 478, column: 20, scope: !5157)
!5186 = !DILocation(line: 479, column: 3, scope: !5157)
!5187 = !DILocation(line: 480, column: 3, scope: !5157)
!5188 = !DILocation(line: 482, column: 9, scope: !5157)
!5189 = !DILocation(line: 482, column: 20, scope: !5157)
!5190 = !DILocation(line: 483, column: 3, scope: !5157)
!5191 = !DILocation(line: 484, column: 3, scope: !5157)
!5192 = !DILocation(line: 486, column: 9, scope: !5157)
!5193 = !DILocation(line: 486, column: 20, scope: !5157)
!5194 = !DILocation(line: 487, column: 3, scope: !5157)
!5195 = !DILocation(line: 492, column: 21, scope: !5157)
!5196 = !DILocation(line: 493, column: 3, scope: !5157)
!5197 = !DILocation(line: 495, column: 9, scope: !5157)
!5198 = !DILocation(line: 495, column: 20, scope: !5157)
!5199 = !DILocation(line: 496, column: 3, scope: !5157)
!5200 = !DILocation(line: 498, column: 2, scope: !5148)
!5201 = distinct !DISubprogram(name: "extract_specifier", scope: !2590, file: !2590, line: 513, type: !4910, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2586, retainedNodes: !5202)
!5202 = !{!5203, !5204, !5205, !5206}
!5203 = !DILocalVariable(name: "conv", arg: 1, scope: !5201, file: !2590, line: 513, type: !4566)
!5204 = !DILocalVariable(name: "sp", arg: 2, scope: !5201, file: !2590, line: 514, type: !118)
!5205 = !DILocalVariable(name: "unsupported", scope: !5201, file: !2590, line: 516, type: !145)
!5206 = !DILabel(scope: !5207, name: "int_conv", file: !2590, line: 526)
!5207 = distinct !DILexicalBlock(scope: !5201, file: !2590, line: 520, column: 27)
!5208 = !DILocation(line: 0, scope: !5201)
!5209 = !DILocation(line: 518, column: 20, scope: !5201)
!5210 = !DILocation(line: 518, column: 8, scope: !5201)
!5211 = !DILocation(line: 518, column: 18, scope: !5201)
!5212 = !DILocation(line: 520, column: 2, scope: !5201)
!5213 = !DILocation(line: 525, column: 3, scope: !5207)
!5214 = !DILocation(line: 0, scope: !5207)
!5215 = !DILocation(line: 526, column: 1, scope: !5207)
!5216 = !DILocation(line: 528, column: 24, scope: !5217)
!5217 = distinct !DILexicalBlock(scope: !5207, file: !2590, line: 528, column: 7)
!5218 = !DILocation(line: 528, column: 7, scope: !5207)
!5219 = !DILocation(line: 535, column: 23, scope: !5220)
!5220 = distinct !DILexicalBlock(scope: !5207, file: !2590, line: 535, column: 7)
!5221 = !DILocation(line: 535, column: 7, scope: !5207)
!5222 = !DILocation(line: 536, column: 36, scope: !5223)
!5223 = distinct !DILexicalBlock(scope: !5220, file: !2590, line: 535, column: 31)
!5224 = !DILocation(line: 537, column: 3, scope: !5223)
!5225 = !DILocation(line: 570, column: 9, scope: !5207)
!5226 = !DILocation(line: 570, column: 23, scope: !5207)
!5227 = !DILocation(line: 575, column: 4, scope: !5228)
!5228 = distinct !DILexicalBlock(scope: !5229, file: !2590, line: 573, column: 48)
!5229 = distinct !DILexicalBlock(scope: !5207, file: !2590, line: 573, column: 7)
!5230 = !DILocation(line: 603, column: 9, scope: !5207)
!5231 = !DILocation(line: 603, column: 23, scope: !5207)
!5232 = !DILocation(line: 605, column: 24, scope: !5233)
!5233 = distinct !DILexicalBlock(scope: !5207, file: !2590, line: 605, column: 7)
!5234 = !DILocation(line: 605, column: 7, scope: !5207)
!5235 = !DILocation(line: 612, column: 9, scope: !5207)
!5236 = !DILocation(line: 612, column: 23, scope: !5207)
!5237 = !DILocation(line: 619, column: 24, scope: !5238)
!5238 = distinct !DILexicalBlock(scope: !5207, file: !2590, line: 619, column: 7)
!5239 = !DILocation(line: 619, column: 7, scope: !5207)
!5240 = !DILocation(line: 625, column: 9, scope: !5207)
!5241 = !DILocation(line: 625, column: 17, scope: !5207)
!5242 = !DILocation(line: 626, column: 3, scope: !5207)
!5243 = !DILocation(line: 629, column: 20, scope: !5201)
!5244 = !DILocation(line: 629, column: 8, scope: !5201)
!5245 = !DILocation(line: 518, column: 23, scope: !5201)
!5246 = !DILocation(line: 631, column: 2, scope: !5201)
!5247 = distinct !DISubprogram(name: "extract_decimal", scope: !2590, file: !2590, line: 318, type: !5248, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2586, retainedNodes: !5250)
!5248 = !DISubroutineType(types: !5249)
!5249 = !{!185, !184}
!5250 = !{!5251, !5252, !5253}
!5251 = !DILocalVariable(name: "str", arg: 1, scope: !5247, file: !2590, line: 318, type: !184)
!5252 = !DILocalVariable(name: "sp", scope: !5247, file: !2590, line: 320, type: !118)
!5253 = !DILocalVariable(name: "val", scope: !5247, file: !2590, line: 321, type: !185)
!5254 = !DILocation(line: 0, scope: !5247)
!5255 = !DILocation(line: 320, column: 19, scope: !5247)
!5256 = !DILocation(line: 323, column: 37, scope: !5247)
!5257 = !DILocation(line: 323, column: 17, scope: !5247)
!5258 = !DILocation(line: 323, column: 9, scope: !5247)
!5259 = !DILocation(line: 323, column: 2, scope: !5247)
!5260 = !DILocation(line: 324, column: 13, scope: !5261)
!5261 = distinct !DILexicalBlock(scope: !5247, file: !2590, line: 323, column: 43)
!5262 = !DILocation(line: 324, column: 24, scope: !5261)
!5263 = !DILocation(line: 324, column: 19, scope: !5261)
!5264 = !DILocation(line: 324, column: 27, scope: !5261)
!5265 = distinct !{!5265, !5259, !5266}
!5266 = !DILocation(line: 325, column: 2, scope: !5247)
!5267 = !DILocation(line: 326, column: 7, scope: !5247)
!5268 = !DILocation(line: 327, column: 2, scope: !5247)
!5269 = distinct !DISubprogram(name: "isdigit", scope: !5049, file: !5049, line: 43, type: !214, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2586, retainedNodes: !5270)
!5270 = !{!5271}
!5271 = !DILocalVariable(name: "a", arg: 1, scope: !5269, file: !5049, line: 43, type: !107)
!5272 = !DILocation(line: 0, scope: !5269)
!5273 = !DILocation(line: 45, column: 29, scope: !5269)
!5274 = !DILocation(line: 45, column: 45, scope: !5269)
!5275 = !DILocation(line: 45, column: 2, scope: !5269)
!5276 = distinct !DISubprogram(name: "assert_post_action", scope: !5277, file: !5277, line: 26, type: !5278, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !5280)
!5277 = !DIFile(filename: "zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5278 = !DISubroutineType(types: !5279)
!5279 = !{null, !118, !32}
!5280 = !{!5281, !5282}
!5281 = !DILocalVariable(name: "file", arg: 1, scope: !5276, file: !5277, line: 26, type: !118)
!5282 = !DILocalVariable(name: "line", arg: 2, scope: !5276, file: !5277, line: 26, type: !32)
!5283 = !DILocation(line: 0, scope: !5276)
!5284 = !DILocation(line: 43, column: 2, scope: !5285)
!5285 = distinct !DILexicalBlock(scope: !5276, file: !5277, line: 43, column: 2)
!5286 = !{i64 2155072330, i64 2155072346, i64 2155072372, i64 2155072400, i64 2155072420}
!5287 = !DILocation(line: 44, column: 1, scope: !5276)
!5288 = distinct !DISubprogram(name: "assert_print", scope: !5277, file: !5277, line: 46, type: !4258, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !5289)
!5289 = !{!5290, !5291}
!5290 = !DILocalVariable(name: "fmt", arg: 1, scope: !5288, file: !5277, line: 46, type: !118)
!5291 = !DILocalVariable(name: "ap", scope: !5288, file: !5277, line: 48, type: !5292)
!5292 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3268, line: 99, baseType: !5293)
!5293 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3268, line: 40, baseType: !5294)
!5294 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !5277, baseType: !5295)
!5295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5296)
!5296 = !{!5297}
!5297 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5295, file: !5277, line: 48, baseType: !106, size: 32)
!5298 = !DILocation(line: 0, scope: !5288)
!5299 = !DILocation(line: 48, column: 2, scope: !5288)
!5300 = !DILocation(line: 48, column: 10, scope: !5288)
!5301 = !DILocation(line: 50, column: 2, scope: !5288)
!5302 = !DILocation(line: 52, column: 2, scope: !5288)
!5303 = !DILocation(line: 54, column: 2, scope: !5288)
!5304 = !DILocation(line: 55, column: 1, scope: !5288)
!5305 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !5306, file: !5306, line: 9, type: !3148, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2622, retainedNodes: !2236)
!5306 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/integration")
!5307 = !DILocation(line: 11, column: 1, scope: !5305)
!5308 = !{i64 2147567071, i64 2147567114, i64 2147567154}
!5309 = !DILocation(line: 12, column: 1, scope: !5305)
!5310 = !{i64 2147571298, i64 2147571341, i64 2147571381}
!5311 = !DILocation(line: 13, column: 1, scope: !5305)
!5312 = !{i64 2147571507, i64 2147571550, i64 2147571590}
!5313 = !DILocation(line: 14, column: 1, scope: !5305)
!5314 = !{i64 2147571676, i64 2147571719, i64 2147571759}
!5315 = !DILocation(line: 15, column: 1, scope: !5305)
!5316 = !{i64 2147571839, i64 2147571882, i64 2147571922}
!5317 = !DILocation(line: 16, column: 1, scope: !5305)
!5318 = !{i64 2147572023, i64 2147572066, i64 2147572106}
!5319 = !DILocation(line: 17, column: 1, scope: !5305)
!5320 = !{i64 2147572202, i64 2147572245, i64 2147572285}
!5321 = !DILocation(line: 18, column: 1, scope: !5305)
!5322 = !{i64 2147572444, i64 2147572487, i64 2147572527}
!5323 = !DILocation(line: 19, column: 1, scope: !5305)
!5324 = !{i64 2147572679, i64 2147572722, i64 2147572762}
!5325 = !DILocation(line: 20, column: 1, scope: !5305)
!5326 = !{i64 2147572865, i64 2147572908, i64 2147572948}
!5327 = !DILocation(line: 21, column: 1, scope: !5305)
!5328 = !{i64 2147573081, i64 2147573124, i64 2147573164}
!5329 = !DILocation(line: 22, column: 1, scope: !5305)
!5330 = !{i64 2147573284, i64 2147573327, i64 2147573367}
!5331 = !DILocation(line: 23, column: 1, scope: !5305)
!5332 = !{i64 2147573487, i64 2147573530, i64 2147573570}
!5333 = !DILocation(line: 24, column: 1, scope: !5305)
!5334 = !{i64 2147573662, i64 2147573705, i64 2147573745}
!5335 = !DILocation(line: 25, column: 1, scope: !5305)
!5336 = !{i64 2147573870, i64 2147573913, i64 2147573953}
!5337 = !DILocation(line: 26, column: 1, scope: !5305)
!5338 = !{i64 2147574074, i64 2147574117, i64 2147574157}
!5339 = !DILocation(line: 27, column: 1, scope: !5305)
!5340 = !{i64 2147574267, i64 2147574310, i64 2147574350}
!5341 = !DILocation(line: 28, column: 1, scope: !5305)
!5342 = !{i64 2147574469, i64 2147574512, i64 2147574552}
!5343 = !DILocation(line: 29, column: 1, scope: !5305)
!5344 = !{i64 2147574668, i64 2147574711, i64 2147574751}
!5345 = !DILocation(line: 30, column: 1, scope: !5305)
!5346 = !{i64 2147574895, i64 2147574938, i64 2147574978}
!5347 = !DILocation(line: 31, column: 1, scope: !5305)
!5348 = !{i64 2147575097, i64 2147575140, i64 2147575180}
!5349 = !DILocation(line: 32, column: 1, scope: !5305)
!5350 = !{i64 2147575312, i64 2147575355, i64 2147575395}
!5351 = !DILocation(line: 33, column: 1, scope: !5305)
!5352 = !{i64 2147575529, i64 2147575572, i64 2147575612}
!5353 = !DILocation(line: 34, column: 1, scope: !5305)
!5354 = !{i64 2147575701, i64 2147575744, i64 2147575784}
!5355 = !DILocation(line: 35, column: 1, scope: !5305)
!5356 = !{i64 2147575903, i64 2147575946, i64 2147575986}
!5357 = !DILocation(line: 36, column: 1, scope: !5305)
!5358 = !{i64 2147576129, i64 2147576172, i64 2147576212}
!5359 = !DILocation(line: 37, column: 1, scope: !5305)
!5360 = !{i64 2147576328, i64 2147576371, i64 2147576411}
!5361 = !DILocation(line: 38, column: 1, scope: !5305)
!5362 = !{i64 2147576503, i64 2147576546, i64 2147576586}
!5363 = !DILocation(line: 39, column: 1, scope: !5305)
!5364 = !{i64 2147576756, i64 2147576799, i64 2147576839}
!5365 = !DILocation(line: 40, column: 1, scope: !5305)
!5366 = !{i64 2147576997, i64 2147577040, i64 2147577080}
!5367 = !DILocation(line: 41, column: 1, scope: !5305)
!5368 = !{i64 2147577232, i64 2147577275, i64 2147577315}
!5369 = !DILocation(line: 42, column: 1, scope: !5305)
!5370 = !{i64 2147577464, i64 2147577507, i64 2147577547}
!5371 = !DILocation(line: 43, column: 1, scope: !5305)
!5372 = !{i64 2147577690, i64 2147577733, i64 2147577773}
!5373 = !DILocation(line: 44, column: 1, scope: !5305)
!5374 = !{i64 2147577916, i64 2147577959, i64 2147577999}
!5375 = !DILocation(line: 45, column: 1, scope: !5305)
!5376 = !{i64 2147578142, i64 2147578185, i64 2147578225}
!5377 = !DILocation(line: 46, column: 1, scope: !5305)
!5378 = !{i64 2147578377, i64 2147578420, i64 2147578460}
!5379 = !DILocation(line: 47, column: 1, scope: !5305)
!5380 = !{i64 2147578621, i64 2147578664, i64 2147578704}
!5381 = !DILocation(line: 48, column: 1, scope: !5305)
!5382 = !{i64 2147578868, i64 2147578911, i64 2147578951}
!5383 = !DILocation(line: 49, column: 1, scope: !5305)
!5384 = !{i64 2147579100, i64 2147579143, i64 2147579183}
!5385 = !DILocation(line: 50, column: 1, scope: !5305)
!5386 = !{i64 2147579344, i64 2147579387, i64 2147579427}
!5387 = !DILocation(line: 51, column: 1, scope: !5305)
!5388 = !{i64 2147579582, i64 2147579625, i64 2147579665}
!5389 = !DILocation(line: 52, column: 1, scope: !5305)
!5390 = !{i64 2147579856, i64 2147579899, i64 2147579939}
!5391 = !DILocation(line: 53, column: 1, scope: !5305)
!5392 = !{i64 2147584155, i64 2147584198, i64 2147584238}
!5393 = !DILocation(line: 54, column: 1, scope: !5305)
!5394 = !{i64 2147584408, i64 2147584451, i64 2147584491}
!5395 = !DILocation(line: 55, column: 1, scope: !5305)
!5396 = !{i64 2147584652, i64 2147584695, i64 2147584735}
!5397 = !DILocation(line: 56, column: 1, scope: !5305)
!5398 = !{i64 2147584887, i64 2147584930, i64 2147584970}
!5399 = !DILocation(line: 57, column: 1, scope: !5305)
!5400 = !{i64 2147585137, i64 2147585180, i64 2147585220}
!5401 = !DILocation(line: 58, column: 1, scope: !5305)
!5402 = !{i64 2147585384, i64 2147585427, i64 2147585467}
!5403 = !DILocation(line: 59, column: 1, scope: !5305)
!5404 = !{i64 2147585619, i64 2147585662, i64 2147585702}
!5405 = !DILocation(line: 60, column: 1, scope: !5305)
!5406 = !{i64 2147585854, i64 2147585897, i64 2147585937}
!5407 = !DILocation(line: 61, column: 1, scope: !5305)
!5408 = !{i64 2147586089, i64 2147586132, i64 2147586172}
!5409 = !DILocation(line: 62, column: 1, scope: !5305)
!5410 = !{i64 2147586324, i64 2147586367, i64 2147586407}
!5411 = !DILocation(line: 63, column: 1, scope: !5305)
!5412 = !{i64 2147586568, i64 2147586611, i64 2147586651}
!5413 = !DILocation(line: 64, column: 1, scope: !5305)
!5414 = !{i64 2147586806, i64 2147586849, i64 2147586889}
!5415 = !DILocation(line: 65, column: 1, scope: !5305)
!5416 = !{i64 2147587047, i64 2147587090, i64 2147587130}
!5417 = !DILocation(line: 66, column: 1, scope: !5305)
!5418 = !{i64 2147587327, i64 2147587370, i64 2147587410}
!5419 = !DILocation(line: 67, column: 1, scope: !5305)
!5420 = !{i64 2147587586, i64 2147587629, i64 2147587669}
!5421 = !DILocation(line: 68, column: 1, scope: !5305)
!5422 = !{i64 2147587824, i64 2147587867, i64 2147587907}
!5423 = !DILocation(line: 69, column: 1, scope: !5305)
!5424 = !{i64 2147588053, i64 2147588096, i64 2147588136}
!5425 = !DILocation(line: 70, column: 1, scope: !5305)
!5426 = !{i64 2147588261, i64 2147588304, i64 2147588344}
!5427 = !DILocation(line: 71, column: 1, scope: !5305)
!5428 = !{i64 2147588472, i64 2147588515, i64 2147588555}
!5429 = !DILocation(line: 72, column: 1, scope: !5305)
!5430 = !{i64 2147588707, i64 2147588750, i64 2147588790}
!5431 = !DILocation(line: 73, column: 1, scope: !5305)
!5432 = !{i64 2147588936, i64 2147588979, i64 2147589019}
!5433 = !DILocation(line: 74, column: 1, scope: !5305)
!5434 = !{i64 2147589153, i64 2147589196, i64 2147589236}
!5435 = !DILocation(line: 75, column: 1, scope: !5305)
!5436 = !{i64 2147589382, i64 2147589425, i64 2147589465}
!5437 = !DILocation(line: 76, column: 1, scope: !5305)
!5438 = !{i64 2147589620, i64 2147589663, i64 2147589703}
!5439 = !DILocation(line: 77, column: 1, scope: !5305)
!5440 = !{i64 2147589852, i64 2147589895, i64 2147589935}
!5441 = !DILocation(line: 78, column: 1, scope: !5305)
!5442 = !{i64 2147590078, i64 2147590121, i64 2147590161}
!5443 = !DILocation(line: 79, column: 1, scope: !5305)
!5444 = !{i64 2147590295, i64 2147590338, i64 2147590378}
!5445 = !DILocation(line: 80, column: 1, scope: !5305)
!5446 = !{i64 2147590527, i64 2147590570, i64 2147590610}
!5447 = !DILocation(line: 81, column: 1, scope: !5305)
!5448 = !{i64 2147590753, i64 2147590796, i64 2147590836}
!5449 = !DILocation(line: 82, column: 1, scope: !5305)
!5450 = !{i64 2147590967, i64 2147591010, i64 2147591050}
!5451 = !DILocation(line: 83, column: 1, scope: !5305)
!5452 = !{i64 2147591187, i64 2147591230, i64 2147591270}
!5453 = !DILocation(line: 84, column: 1, scope: !5305)
!5454 = !{i64 2147591419, i64 2147591462, i64 2147591502}
!5455 = !DILocation(line: 85, column: 1, scope: !5305)
!5456 = !{i64 2147591627, i64 2147591670, i64 2147591710}
!5457 = !DILocation(line: 86, column: 1, scope: !5305)
!5458 = !{i64 2147591832, i64 2147591875, i64 2147591915}
!5459 = !DILocation(line: 87, column: 1, scope: !5305)
!5460 = !{i64 2147592049, i64 2147592092, i64 2147592132}
!5461 = !DILocation(line: 88, column: 1, scope: !5305)
!5462 = !{i64 2147596324, i64 2147596367, i64 2147596407}
!5463 = !DILocation(line: 89, column: 1, scope: !5305)
!5464 = !{i64 2147596550, i64 2147596593, i64 2147596633}
!5465 = !DILocation(line: 90, column: 1, scope: !5305)
!5466 = !{i64 2147596770, i64 2147596813, i64 2147596853}
!5467 = !DILocation(line: 91, column: 1, scope: !5305)
!5468 = !{i64 2147596975, i64 2147597018, i64 2147597058}
!5469 = !DILocation(line: 92, column: 1, scope: !5305)
!5470 = !{i64 2147597207, i64 2147597250, i64 2147597290}
!5471 = !DILocation(line: 93, column: 1, scope: !5305)
!5472 = !{i64 2147597442, i64 2147597485, i64 2147597525}
!5473 = !DILocation(line: 94, column: 1, scope: !5305)
!5474 = !{i64 2147597692, i64 2147597735, i64 2147597775}
!5475 = !DILocation(line: 95, column: 1, scope: !5305)
!5476 = !{i64 2147597942, i64 2147597985, i64 2147598025}
!5477 = !DILocation(line: 96, column: 1, scope: !5305)
!5478 = !{i64 2147598180, i64 2147598223, i64 2147598263}
!5479 = !DILocation(line: 97, column: 1, scope: !5305)
!5480 = !{i64 2147598391, i64 2147598434, i64 2147598474}
!5481 = !DILocation(line: 98, column: 1, scope: !5305)
!5482 = !{i64 2147598608, i64 2147598651, i64 2147598691}
!5483 = !DILocation(line: 99, column: 1, scope: !5305)
!5484 = !{i64 2147598804, i64 2147598847, i64 2147598887}
!5485 = !DILocation(line: 100, column: 1, scope: !5305)
!5486 = !{i64 2147599006, i64 2147599049, i64 2147599089}
!5487 = !DILocation(line: 101, column: 1, scope: !5305)
!5488 = !{i64 2147599199, i64 2147599242, i64 2147599282}
!5489 = !DILocation(line: 102, column: 1, scope: !5305)
!5490 = !{i64 2147599407, i64 2147599450, i64 2147599490}
!5491 = !DILocation(line: 103, column: 1, scope: !5305)
!5492 = !{i64 2147599603, i64 2147599646, i64 2147599686}
!5493 = !DILocation(line: 104, column: 1, scope: !5305)
!5494 = !{i64 2147599835, i64 2147599878, i64 2147599918}
!5495 = !DILocation(line: 105, column: 1, scope: !5305)
!5496 = !{i64 2147600046, i64 2147600089, i64 2147600129}
!5497 = !DILocation(line: 106, column: 1, scope: !5305)
!5498 = !{i64 2147600245, i64 2147600288, i64 2147600328}
!5499 = !DILocation(line: 107, column: 1, scope: !5305)
!5500 = !{i64 2147600420, i64 2147600463, i64 2147600503}
!5501 = !DILocation(line: 108, column: 1, scope: !5305)
!5502 = !{i64 2147600604, i64 2147600647, i64 2147600687}
!5503 = !DILocation(line: 109, column: 1, scope: !5305)
!5504 = !{i64 2147600806, i64 2147600849, i64 2147600889}
!5505 = !DILocation(line: 110, column: 1, scope: !5305)
!5506 = !{i64 2147601005, i64 2147601048, i64 2147601088}
!5507 = !DILocation(line: 111, column: 1, scope: !5305)
!5508 = !{i64 2147601210, i64 2147601253, i64 2147601293}
!5509 = !DILocation(line: 112, column: 1, scope: !5305)
!5510 = !{i64 2147601403, i64 2147601446, i64 2147601486}
!5511 = !DILocation(line: 113, column: 1, scope: !5305)
!5512 = !{i64 2147601569, i64 2147601612, i64 2147601652}
!5513 = !DILocation(line: 114, column: 1, scope: !5305)
!5514 = !{i64 2147601753, i64 2147601796, i64 2147601836}
!5515 = !DILocation(line: 115, column: 1, scope: !5305)
!5516 = !{i64 2147601943, i64 2147601986, i64 2147602026}
!5517 = !DILocation(line: 116, column: 1, scope: !5305)
!5518 = !{i64 2147602127, i64 2147602170, i64 2147602210}
!5519 = !DILocation(line: 117, column: 1, scope: !5305)
!5520 = !{i64 2147602341, i64 2147602384, i64 2147602424}
!5521 = !DILocation(line: 118, column: 1, scope: !5305)
!5522 = !{i64 2147602552, i64 2147602595, i64 2147602635}
!5523 = !DILocation(line: 119, column: 1, scope: !5305)
!5524 = !{i64 2147602775, i64 2147602818, i64 2147602858}
!5525 = !DILocation(line: 120, column: 1, scope: !5305)
!5526 = !{i64 2147602959, i64 2147603002, i64 2147603042}
!5527 = !DILocation(line: 121, column: 1, scope: !5305)
!5528 = !{i64 2147603173, i64 2147603216, i64 2147603256}
!5529 = !DILocation(line: 122, column: 1, scope: !5305)
!5530 = !{i64 2147603339, i64 2147603382, i64 2147603422}
!5531 = !DILocation(line: 123, column: 1, scope: !5305)
!5532 = !{i64 2147603520, i64 2147603563, i64 2147603603}
!5533 = !DILocation(line: 124, column: 1, scope: !5305)
!5534 = !{i64 2147603713, i64 2147603756, i64 2147603796}
!5535 = !DILocation(line: 125, column: 1, scope: !5305)
!5536 = !{i64 2147603939, i64 2147603982, i64 2147604022}
!5537 = !DILocation(line: 126, column: 1, scope: !5305)
!5538 = !{i64 2147604153, i64 2147604196, i64 2147604236}
!5539 = !DILocation(line: 127, column: 1, scope: !5305)
!5540 = !{i64 2147604379, i64 2147604422, i64 2147604462}
!5541 = !DILocation(line: 128, column: 1, scope: !5305)
!5542 = !{i64 2147604596, i64 2147604639, i64 2147604679}
!5543 = !DILocation(line: 129, column: 1, scope: !5305)
!5544 = !{i64 2147604873, i64 2147604916, i64 2147604956}
!5545 = !DILocation(line: 130, column: 1, scope: !5305)
!5546 = !{i64 2147605099, i64 2147605142, i64 2147605182}
!5547 = !DILocation(line: 131, column: 1, scope: !5305)
!5548 = !{i64 2147605307, i64 2147605350, i64 2147605390}
!5549 = !DILocation(line: 132, column: 1, scope: !5305)
!5550 = !{i64 2147609564, i64 2147609607, i64 2147609647}
!5551 = !DILocation(line: 133, column: 1, scope: !5305)
!5552 = !{i64 2147609829, i64 2147609872, i64 2147609912}
!5553 = !DILocation(line: 134, column: 1, scope: !5305)
!5554 = !{i64 2147610043, i64 2147610086, i64 2147610126}
!5555 = !DILocation(line: 135, column: 1, scope: !5305)
!5556 = !{i64 2147610218, i64 2147610261, i64 2147610301}
!5557 = !DILocation(line: 136, column: 1, scope: !5305)
!5558 = !{i64 2147610472, i64 2147610515, i64 2147610555}
!5559 = !DILocation(line: 137, column: 1, scope: !5305)
!5560 = !{i64 2147610671, i64 2147610714, i64 2147610754}
!5561 = !DILocation(line: 138, column: 1, scope: !5305)
!5562 = !{i64 2147610913, i64 2147610956, i64 2147610996}
!5563 = !DILocation(line: 139, column: 1, scope: !5305)
!5564 = !{i64 2147611076, i64 2147611119, i64 2147611159}
!5565 = !DILocation(line: 140, column: 1, scope: !5305)
!5566 = !{i64 2147611263, i64 2147611306, i64 2147611346}
!5567 = !DILocation(line: 141, column: 1, scope: !5305)
!5568 = !{i64 2147611471, i64 2147611514, i64 2147611554}
!5569 = !DILocation(line: 142, column: 1, scope: !5305)
!5570 = !{i64 2147611667, i64 2147611710, i64 2147611750}
!5571 = !DILocation(line: 143, column: 1, scope: !5305)
!5572 = !{i64 2147611860, i64 2147611903, i64 2147611943}
!5573 = !DILocation(line: 144, column: 1, scope: !5305)
!5574 = !{i64 2147612043, i64 2147612086, i64 2147612126}
!5575 = !DILocation(line: 145, column: 1, scope: !5305)
!5576 = !{i64 2147612257, i64 2147612300, i64 2147612340}
!5577 = !DILocation(line: 146, column: 1, scope: !5305)
!5578 = !{i64 2147612468, i64 2147612511, i64 2147612551}
!5579 = !DILocation(line: 147, column: 1, scope: !5305)
!5580 = !{i64 2147612688, i64 2147612731, i64 2147612771}
!5581 = !DILocation(line: 148, column: 1, scope: !5305)
!5582 = !{i64 2147612895, i64 2147612938, i64 2147612978}
!5583 = !DILocation(line: 149, column: 1, scope: !5305)
!5584 = !{i64 2147613168, i64 2147613211, i64 2147613251}
!5585 = !DILocation(line: 150, column: 1, scope: !5305)
!5586 = !{i64 2147613416, i64 2147613459, i64 2147613499}
!5587 = !DILocation(line: 151, column: 1, scope: !5305)
!5588 = !{i64 2147613615, i64 2147613658, i64 2147613698}
!5589 = !DILocation(line: 152, column: 1, scope: !5305)
!5590 = !{i64 2147613850, i64 2147613893, i64 2147613933}
!5591 = !DILocation(line: 153, column: 1, scope: !5305)
!5592 = !{i64 2147614100, i64 2147614143, i64 2147614183}
!5593 = !DILocation(line: 154, column: 1, scope: !5305)
!5594 = !{i64 2147614302, i64 2147614345, i64 2147614385}
!5595 = !DILocation(line: 155, column: 1, scope: !5305)
!5596 = !{i64 2147614525, i64 2147614568, i64 2147614608}
!5597 = !DILocation(line: 156, column: 1, scope: !5305)
!5598 = !{i64 2147614739, i64 2147614782, i64 2147614822}
!5599 = !DILocation(line: 157, column: 1, scope: !5305)
!5600 = !{i64 2147614983, i64 2147615026, i64 2147615066}
!5601 = !DILocation(line: 158, column: 1, scope: !5305)
!5602 = !{i64 2147615212, i64 2147615255, i64 2147615295}
!5603 = !DILocation(line: 159, column: 1, scope: !5305)
!5604 = !{i64 2147615441, i64 2147615484, i64 2147615524}
!5605 = !DILocation(line: 160, column: 1, scope: !5305)
!5606 = !{i64 2147615649, i64 2147615692, i64 2147615732}
!5607 = !DILocation(line: 161, column: 1, scope: !5305)
!5608 = !{i64 2147615887, i64 2147615930, i64 2147615970}
!5609 = !DILocation(line: 162, column: 1, scope: !5305)
!5610 = !{i64 2147616113, i64 2147616156, i64 2147616196}
!5611 = !DILocation(line: 163, column: 1, scope: !5305)
!5612 = !{i64 2147616372, i64 2147616415, i64 2147616455}
!5613 = !DILocation(line: 164, column: 1, scope: !5305)
!5614 = !{i64 2147616592, i64 2147616635, i64 2147616675}
!5615 = !DILocation(line: 165, column: 1, scope: !5305)
!5616 = !{i64 2147616824, i64 2147616867, i64 2147616907}
!5617 = !DILocation(line: 166, column: 1, scope: !5305)
!5618 = !{i64 2147617065, i64 2147617108, i64 2147617148}
!5619 = !DILocation(line: 167, column: 1, scope: !5305)
!5620 = !{i64 2147617306, i64 2147617349, i64 2147617389}
!5621 = !DILocation(line: 168, column: 1, scope: !5305)
!5622 = !{i64 2147617529, i64 2147617572, i64 2147617612}
!5623 = !DILocation(line: 169, column: 1, scope: !5305)
!5624 = !{i64 2147617746, i64 2147617789, i64 2147617829}
!5625 = !DILocation(line: 170, column: 1, scope: !5305)
!5626 = !{i64 2147622048, i64 2147622091, i64 2147622131}
!5627 = !DILocation(line: 171, column: 1, scope: !5305)
!5628 = !{i64 2147622235, i64 2147622278, i64 2147622318}
!5629 = !DILocation(line: 172, column: 1, scope: !5305)
!5630 = !{i64 2147622422, i64 2147622465, i64 2147622505}
!5631 = !DILocation(line: 173, column: 1, scope: !5305)
!5632 = !{i64 2147622585, i64 2147622628, i64 2147622668}
!5633 = !DILocation(line: 174, column: 1, scope: !5305)
!5634 = !{i64 2147622790, i64 2147622833, i64 2147622873}
!5635 = !DILocation(line: 175, column: 1, scope: !5305)
!5636 = !{i64 2147622983, i64 2147623026, i64 2147623066}
!5637 = !DILocation(line: 176, column: 1, scope: !5305)
!5638 = !{i64 2147623242, i64 2147623285, i64 2147623325}
!5639 = !DILocation(line: 177, column: 1, scope: !5305)
!5640 = !{i64 2147623465, i64 2147623508, i64 2147623548}
!5641 = !DILocation(line: 178, column: 1, scope: !5305)
!5642 = !{i64 2147623694, i64 2147623737, i64 2147623777}
!5643 = !DILocation(line: 179, column: 1, scope: !5305)
!5644 = !{i64 2147623908, i64 2147623951, i64 2147623991}
!5645 = !DILocation(line: 180, column: 1, scope: !5305)
!5646 = !{i64 2147624110, i64 2147624153, i64 2147624193}
!5647 = !DILocation(line: 181, column: 1, scope: !5305)
!5648 = !{i64 2147624306, i64 2147624349, i64 2147624389}
!5649 = !DILocation(line: 182, column: 1, scope: !5305)
!5650 = !{i64 2147624518, i64 2147624561, i64 2147624601}
!5651 = !DILocation(line: 183, column: 1, scope: !5305)
!5652 = !{i64 2147624739, i64 2147624782, i64 2147624822}
!5653 = !DILocation(line: 184, column: 1, scope: !5305)
!5654 = !{i64 2147624953, i64 2147624996, i64 2147625036}
!5655 = !DILocation(line: 185, column: 1, scope: !5305)
!5656 = !{i64 2147625143, i64 2147625186, i64 2147625226}
!5657 = !DILocation(line: 186, column: 1, scope: !5305)
!5658 = !{i64 2147625342, i64 2147625385, i64 2147625425}
!5659 = !DILocation(line: 187, column: 1, scope: !5305)
!5660 = !{i64 2147625547, i64 2147625590, i64 2147625630}
!5661 = !DILocation(line: 188, column: 1, scope: !5305)
!5662 = !{i64 2147625767, i64 2147625810, i64 2147625850}
!5663 = !DILocation(line: 189, column: 1, scope: !5305)
!5664 = !{i64 2147625968, i64 2147626011, i64 2147626051}
!5665 = !DILocation(line: 190, column: 1, scope: !5305)
!5666 = !{i64 2147626167, i64 2147626210, i64 2147626250}
!5667 = !DILocation(line: 191, column: 1, scope: !5305)
!5668 = !{i64 2147626372, i64 2147626415, i64 2147626455}
!5669 = !DILocation(line: 192, column: 1, scope: !5305)
!5670 = !{i64 2147626541, i64 2147626584, i64 2147626624}
!5671 = !DILocation(line: 193, column: 1, scope: !5305)
!5672 = !{i64 2147626725, i64 2147626768, i64 2147626808}
!5673 = !DILocation(line: 194, column: 1, scope: !5305)
!5674 = !{i64 2147626909, i64 2147626952, i64 2147626992}
!5675 = !DILocation(line: 195, column: 1, scope: !5305)
!5676 = !{i64 2147627096, i64 2147627139, i64 2147627179}
!5677 = !DILocation(line: 196, column: 1, scope: !5305)
!5678 = !{i64 2147627280, i64 2147627323, i64 2147627363}
!5679 = !DILocation(line: 197, column: 1, scope: !5305)
!5680 = !{i64 2147627467, i64 2147627510, i64 2147627550}
!5681 = !DILocation(line: 198, column: 1, scope: !5305)
!5682 = !{i64 2147627679, i64 2147627722, i64 2147627762}
!5683 = !DILocation(line: 199, column: 1, scope: !5305)
!5684 = !{i64 2147627917, i64 2147627960, i64 2147628000}
!5685 = !DILocation(line: 200, column: 1, scope: !5305)
!5686 = !{i64 2147628147, i64 2147628190, i64 2147628230}
!5687 = !DILocation(line: 201, column: 1, scope: !5305)
!5688 = !{i64 2147628376, i64 2147628419, i64 2147628459}
!5689 = !DILocation(line: 202, column: 1, scope: !5305)
!5690 = !{i64 2147628563, i64 2147628606, i64 2147628646}
!5691 = !DILocation(line: 203, column: 1, scope: !5305)
!5692 = !{i64 2147628759, i64 2147628802, i64 2147628842}
!5693 = !DILocation(line: 204, column: 1, scope: !5305)
!5694 = !{i64 2147628967, i64 2147629010, i64 2147629050}
!5695 = !DILocation(line: 205, column: 1, scope: !5305)
!5696 = !{i64 2147629179, i64 2147629222, i64 2147629262}
!5697 = !DILocation(line: 206, column: 1, scope: !5305)
!5698 = !{i64 2147629378, i64 2147629421, i64 2147629461}
!5699 = !DILocation(line: 207, column: 1, scope: !5305)
!5700 = !{i64 2147629616, i64 2147629659, i64 2147629699}
!5701 = !DILocation(line: 208, column: 1, scope: !5305)
!5702 = !{i64 2147629812, i64 2147629855, i64 2147629895}
!5703 = !DILocation(line: 209, column: 1, scope: !5305)
!5704 = !{i64 2147630014, i64 2147630057, i64 2147630097}
!5705 = !DILocation(line: 210, column: 1, scope: !5305)
!5706 = !{i64 2147630207, i64 2147630250, i64 2147630290}
!5707 = !DILocation(line: 211, column: 1, scope: !5305)
!5708 = !{i64 2147630441, i64 2147630484, i64 2147630524}
!5709 = !DILocation(line: 212, column: 1, scope: !5305)
!5710 = !{i64 2147630604, i64 2147630647, i64 2147630687}
!5711 = !DILocation(line: 213, column: 1, scope: !5305)
!5712 = !{i64 2147630843, i64 2147630886, i64 2147630926}
!5713 = !DILocation(line: 214, column: 1, scope: !5305)
!5714 = !{i64 2147631082, i64 2147631125, i64 2147631165}
!5715 = !DILocation(line: 215, column: 1, scope: !5305)
!5716 = !{i64 2147635379, i64 2147635422, i64 2147635462}
!5717 = !DILocation(line: 216, column: 1, scope: !5305)
!5718 = !{i64 2147635609, i64 2147635652, i64 2147635692}
!5719 = !DILocation(line: 217, column: 1, scope: !5305)
!5720 = !{i64 2147635796, i64 2147635839, i64 2147635879}
!5721 = !DILocation(line: 218, column: 1, scope: !5305)
!5722 = !{i64 2147635995, i64 2147636038, i64 2147636078}
!5723 = !DILocation(line: 219, column: 1, scope: !5305)
!5724 = !{i64 2147636266, i64 2147636309, i64 2147636349}
!5725 = !DILocation(line: 220, column: 1, scope: !5305)
!5726 = !{i64 2147636441, i64 2147636484, i64 2147636524}
!5727 = !DILocation(line: 221, column: 1, scope: !5305)
!5728 = !{i64 2147636675, i64 2147636718, i64 2147636758}
!5729 = !DILocation(line: 222, column: 1, scope: !5305)
!5730 = !{i64 2147636883, i64 2147636926, i64 2147636966}
!5731 = !DILocation(line: 223, column: 1, scope: !5305)
!5732 = !{i64 2147637101, i64 2147637144, i64 2147637184}
!5733 = !DILocation(line: 224, column: 1, scope: !5305)
!5734 = !{i64 2147637291, i64 2147637334, i64 2147637374}
!5735 = !DILocation(line: 225, column: 1, scope: !5305)
!5736 = !{i64 2147637523, i64 2147637566, i64 2147637606}
!5737 = !DILocation(line: 226, column: 1, scope: !5305)
!5738 = !{i64 2147637743, i64 2147637786, i64 2147637826}
!5739 = !DILocation(line: 227, column: 1, scope: !5305)
!5740 = !{i64 2147637939, i64 2147637982, i64 2147638022}
!5741 = !DILocation(line: 228, column: 1, scope: !5305)
!5742 = !{i64 2147638145, i64 2147638188, i64 2147638228}
!5743 = !DILocation(line: 229, column: 1, scope: !5305)
!5744 = !{i64 2147638350, i64 2147638393, i64 2147638433}
!5745 = !DILocation(line: 230, column: 1, scope: !5305)
!5746 = !{i64 2147638564, i64 2147638607, i64 2147638647}
!5747 = !DILocation(line: 231, column: 1, scope: !5305)
!5748 = !{i64 2147638790, i64 2147638833, i64 2147638873}
!5749 = !DILocation(line: 232, column: 1, scope: !5305)
!5750 = !{i64 2147638998, i64 2147639041, i64 2147639081}
!5751 = !DILocation(line: 233, column: 1, scope: !5305)
!5752 = !{i64 2147639194, i64 2147639237, i64 2147639277}
!5753 = !DILocation(line: 234, column: 1, scope: !5305)
!5754 = !{i64 2147639426, i64 2147639469, i64 2147639509}
!5755 = !DILocation(line: 235, column: 1, scope: !5305)
!5756 = !{i64 2147639610, i64 2147639653, i64 2147639693}
!5757 = !DILocation(line: 236, column: 1, scope: !5305)
!5758 = !{i64 2147639819, i64 2147639862, i64 2147639902}
!5759 = !DILocation(line: 237, column: 1, scope: !5305)
!5760 = !{i64 2147640027, i64 2147640070, i64 2147640110}
!5761 = !DILocation(line: 238, column: 1, scope: !5305)
!5762 = !{i64 2147640223, i64 2147640266, i64 2147640306}
!5763 = !DILocation(line: 239, column: 1, scope: !5305)
!5764 = !{i64 2147640407, i64 2147640450, i64 2147640490}
!5765 = !DILocation(line: 240, column: 1, scope: !5305)
!5766 = !{i64 2147640633, i64 2147640676, i64 2147640716}
!5767 = !DILocation(line: 241, column: 1, scope: !5305)
!5768 = !{i64 2147640859, i64 2147640902, i64 2147640942}
!5769 = !DILocation(line: 242, column: 1, scope: !5305)
!5770 = !{i64 2147641085, i64 2147641128, i64 2147641168}
!5771 = !DILocation(line: 243, column: 1, scope: !5305)
!5772 = !{i64 2147641311, i64 2147641354, i64 2147641394}
!5773 = !DILocation(line: 244, column: 1, scope: !5305)
!5774 = !{i64 2147641537, i64 2147641580, i64 2147641620}
!5775 = !DILocation(line: 245, column: 1, scope: !5305)
!5776 = !{i64 2147641769, i64 2147641812, i64 2147641852}
!5777 = !DILocation(line: 246, column: 1, scope: !5305)
!5778 = !{i64 2147642007, i64 2147642050, i64 2147642090}
!5779 = !DILocation(line: 247, column: 1, scope: !5305)
!5780 = !{i64 2147642227, i64 2147642270, i64 2147642310}
!5781 = !DILocation(line: 248, column: 1, scope: !5305)
!5782 = !{i64 2147642471, i64 2147642514, i64 2147642554}
!5783 = !DILocation(line: 249, column: 1, scope: !5305)
!5784 = !{i64 2147642712, i64 2147642755, i64 2147642795}
!5785 = !DILocation(line: 250, column: 1, scope: !5305)
!5786 = !{i64 2147642947, i64 2147642990, i64 2147643030}
!5787 = !DILocation(line: 251, column: 1, scope: !5305)
!5788 = !{i64 2147643179, i64 2147643222, i64 2147643262}
!5789 = !DILocation(line: 252, column: 1, scope: !5305)
!5790 = !{i64 2147643381, i64 2147643424, i64 2147643464}
!5791 = !DILocation(line: 253, column: 1, scope: !5305)
!5792 = !{i64 2147643631, i64 2147643674, i64 2147643714}
!5793 = !DILocation(line: 254, column: 1, scope: !5305)
!5794 = !{i64 2147643869, i64 2147643912, i64 2147643952}
!5795 = !DILocation(line: 255, column: 1, scope: !5305)
!5796 = !{i64 2147648138, i64 2147648181, i64 2147648221}
!5797 = !DILocation(line: 256, column: 1, scope: !5305)
!5798 = !{i64 2147648334, i64 2147648377, i64 2147648417}
!5799 = !DILocation(line: 257, column: 1, scope: !5305)
!5800 = !{i64 2147648518, i64 2147648561, i64 2147648601}
!5801 = !DILocation(line: 258, column: 1, scope: !5305)
!5802 = !{i64 2147648735, i64 2147648778, i64 2147648818}
!5803 = !DILocation(line: 259, column: 1, scope: !5305)
!5804 = !{i64 2147648940, i64 2147648983, i64 2147649023}
!5805 = !DILocation(line: 260, column: 1, scope: !5305)
!5806 = !{i64 2147649175, i64 2147649218, i64 2147649258}
!5807 = !DILocation(line: 261, column: 1, scope: !5305)
!5808 = !{i64 2147649398, i64 2147649441, i64 2147649481}
!5809 = !DILocation(line: 262, column: 1, scope: !5305)
!5810 = !{i64 2147649622, i64 2147649665, i64 2147649705}
!5811 = !DILocation(line: 263, column: 1, scope: !5305)
!5812 = !{i64 2147649860, i64 2147649903, i64 2147649943}
!5813 = !DILocation(line: 264, column: 1, scope: !5305)
!5814 = !{i64 2147650098, i64 2147650141, i64 2147650181}
!5815 = !DILocation(line: 265, column: 1, scope: !5305)
!5816 = !{i64 2147650315, i64 2147650358, i64 2147650398}
!5817 = !DILocation(line: 266, column: 1, scope: !5305)
!5818 = !{i64 2147650520, i64 2147650563, i64 2147650603}
!5819 = !DILocation(line: 267, column: 1, scope: !5305)
!5820 = !{i64 2147650713, i64 2147650756, i64 2147650796}
!5821 = !DILocation(line: 268, column: 1, scope: !5305)
!5822 = !{i64 2147650966, i64 2147651009, i64 2147651049}
!5823 = !DILocation(line: 269, column: 1, scope: !5305)
!5824 = !{i64 2147651174, i64 2147651217, i64 2147651257}
!5825 = !DILocation(line: 270, column: 1, scope: !5305)
!5826 = !{i64 2147651370, i64 2147651413, i64 2147651453}
!5827 = !DILocation(line: 271, column: 1, scope: !5305)
!5828 = !{i64 2147651584, i64 2147651627, i64 2147651667}
!5829 = !DILocation(line: 272, column: 1, scope: !5305)
!5830 = !{i64 2147651792, i64 2147651835, i64 2147651875}
!5831 = !DILocation(line: 273, column: 1, scope: !5305)
!5832 = !{i64 2147651982, i64 2147652025, i64 2147652065}
!5833 = !DILocation(line: 274, column: 1, scope: !5305)
!5834 = !{i64 2147652196, i64 2147652239, i64 2147652279}
!5835 = !DILocation(line: 275, column: 1, scope: !5305)
!5836 = !{i64 2147652458, i64 2147652501, i64 2147652541}
!5837 = !DILocation(line: 276, column: 1, scope: !5305)
!5838 = !{i64 2147652669, i64 2147652712, i64 2147652752}
!5839 = !DILocation(line: 277, column: 1, scope: !5305)
!5840 = !{i64 2147652913, i64 2147652956, i64 2147652996}
!5841 = !DILocation(line: 278, column: 1, scope: !5305)
!5842 = !{i64 2147653124, i64 2147653167, i64 2147653207}
!5843 = !DILocation(line: 279, column: 1, scope: !5305)
!5844 = !{i64 2147653353, i64 2147653396, i64 2147653436}
!5845 = !DILocation(line: 280, column: 1, scope: !5305)
!5846 = !{i64 2147653618, i64 2147653661, i64 2147653701}
!5847 = !DILocation(line: 281, column: 1, scope: !5305)
!5848 = !{i64 2147653823, i64 2147653866, i64 2147653906}
!5849 = !DILocation(line: 282, column: 1, scope: !5305)
!5850 = !{i64 2147654019, i64 2147654062, i64 2147654102}
!5851 = !DILocation(line: 283, column: 1, scope: !5305)
!5852 = !{i64 2147654242, i64 2147654285, i64 2147654325}
!5853 = !DILocation(line: 284, column: 1, scope: !5305)
!5854 = !{i64 2147654405, i64 2147654448, i64 2147654488}
!5855 = !DILocation(line: 285, column: 1, scope: !5305)
!5856 = !{i64 2147654610, i64 2147654653, i64 2147654693}
!5857 = !DILocation(line: 286, column: 1, scope: !5305)
!5858 = !{i64 2147654830, i64 2147654873, i64 2147654913}
!5859 = !DILocation(line: 287, column: 1, scope: !5305)
!5860 = !{i64 2147655044, i64 2147655087, i64 2147655127}
!5861 = !DILocation(line: 288, column: 1, scope: !5305)
!5862 = !{i64 2147655288, i64 2147655331, i64 2147655371}
!5863 = !DILocation(line: 289, column: 1, scope: !5305)
!5864 = !{i64 2147655520, i64 2147655563, i64 2147655603}
!5865 = !DILocation(line: 290, column: 1, scope: !5305)
!5866 = !{i64 2147655734, i64 2147655777, i64 2147655817}
!5867 = !DILocation(line: 291, column: 1, scope: !5305)
!5868 = !{i64 2147655945, i64 2147655988, i64 2147656028}
!5869 = !DILocation(line: 292, column: 1, scope: !5305)
!5870 = !{i64 2147656138, i64 2147656181, i64 2147656221}
!5871 = !DILocation(line: 293, column: 1, scope: !5305)
!5872 = !{i64 2147656337, i64 2147656380, i64 2147656420}
!5873 = !DILocation(line: 294, column: 1, scope: !5305)
!5874 = !{i64 2147656509, i64 2147656552, i64 2147656592}
!5875 = !DILocation(line: 295, column: 1, scope: !5305)
!5876 = !{i64 2147656702, i64 2147656745, i64 2147656785}
!5877 = !DILocation(line: 296, column: 1, scope: !5305)
!5878 = !{i64 2147656874, i64 2147656917, i64 2147656957}
!5879 = !DILocation(line: 297, column: 1, scope: !5305)
!5880 = !{i64 2147661125, i64 2147661168, i64 2147661208}
!5881 = !DILocation(line: 298, column: 1, scope: !5305)
!5882 = !{i64 2147661318, i64 2147661361, i64 2147661401}
!5883 = !DILocation(line: 299, column: 1, scope: !5305)
!5884 = !{i64 2147661514, i64 2147661557, i64 2147661597}
!5885 = !DILocation(line: 300, column: 1, scope: !5305)
!5886 = !{i64 2147661677, i64 2147661720, i64 2147661760}
!5887 = !DILocation(line: 301, column: 1, scope: !5305)
!5888 = !{i64 2147661879, i64 2147661922, i64 2147661962}
!5889 = !DILocation(line: 302, column: 1, scope: !5305)
!5890 = !{i64 2147662090, i64 2147662133, i64 2147662173}
!5891 = !DILocation(line: 303, column: 1, scope: !5305)
!5892 = !{i64 2147662295, i64 2147662338, i64 2147662378}
!5893 = !DILocation(line: 304, column: 1, scope: !5305)
!5894 = !{i64 2147662503, i64 2147662546, i64 2147662586}
!5895 = !DILocation(line: 305, column: 1, scope: !5305)
!5896 = !{i64 2147662696, i64 2147662739, i64 2147662779}
!5897 = !DILocation(line: 306, column: 1, scope: !5305)
!5898 = !{i64 2147662934, i64 2147662977, i64 2147663017}
!5899 = !DILocation(line: 307, column: 1, scope: !5305)
!5900 = !{i64 2147663121, i64 2147663164, i64 2147663204}
!5901 = !DILocation(line: 308, column: 1, scope: !5305)
!5902 = !{i64 2147663290, i64 2147663333, i64 2147663373}
!5903 = !DILocation(line: 309, column: 1, scope: !5305)
!5904 = !{i64 2147663483, i64 2147663526, i64 2147663566}
!5905 = !DILocation(line: 310, column: 1, scope: !5305)
!5906 = !{i64 2147663688, i64 2147663731, i64 2147663771}
!5907 = !DILocation(line: 311, column: 1, scope: !5305)
!5908 = !{i64 2147663899, i64 2147663942, i64 2147663982}
!5909 = !DILocation(line: 312, column: 1, scope: !5305)
!5910 = !{i64 2147664122, i64 2147664165, i64 2147664205}
!5911 = !DILocation(line: 313, column: 1, scope: !5305)
!5912 = !{i64 2147664336, i64 2147664379, i64 2147664419}
!5913 = !DILocation(line: 314, column: 1, scope: !5305)
!5914 = !{i64 2147664554, i64 2147664597, i64 2147664637}
!5915 = !DILocation(line: 315, column: 1, scope: !5305)
!5916 = !{i64 2147664768, i64 2147664811, i64 2147664851}
!5917 = !DILocation(line: 316, column: 1, scope: !5305)
!5918 = !{i64 2147664982, i64 2147665025, i64 2147665065}
!5919 = !DILocation(line: 317, column: 1, scope: !5305)
!5920 = !{i64 2147665199, i64 2147665242, i64 2147665282}
!5921 = !DILocation(line: 318, column: 1, scope: !5305)
!5922 = !{i64 2147665413, i64 2147665456, i64 2147665496}
!5923 = !DILocation(line: 319, column: 1, scope: !5305)
!5924 = !{i64 2147665654, i64 2147665697, i64 2147665737}
!5925 = !DILocation(line: 320, column: 1, scope: !5305)
!5926 = !{i64 2147665820, i64 2147665863, i64 2147665903}
!5927 = !DILocation(line: 321, column: 1, scope: !5305)
!5928 = !{i64 2147666047, i64 2147666090, i64 2147666130}
!5929 = !DILocation(line: 322, column: 1, scope: !5305)
!5930 = !{i64 2147666264, i64 2147666307, i64 2147666347}
!5931 = !DILocation(line: 323, column: 1, scope: !5305)
!5932 = !{i64 2147666490, i64 2147666533, i64 2147666573}
!5933 = !DILocation(line: 324, column: 1, scope: !5305)
!5934 = !{i64 2147666695, i64 2147666738, i64 2147666778}
!5935 = !DILocation(line: 325, column: 1, scope: !5305)
!5936 = !{i64 2147666912, i64 2147666955, i64 2147666995}
!5937 = !DILocation(line: 326, column: 1, scope: !5305)
!5938 = !{i64 2147667204, i64 2147667247, i64 2147667287}
!5939 = !DILocation(line: 327, column: 1, scope: !5305)
!5940 = !{i64 2147667436, i64 2147667479, i64 2147667519}
!5941 = !DILocation(line: 328, column: 1, scope: !5305)
!5942 = !{i64 2147667653, i64 2147667696, i64 2147667736}
!5943 = !DILocation(line: 329, column: 1, scope: !5305)
!5944 = !{i64 2147667860, i64 2147667903, i64 2147667943}
!5945 = !DILocation(line: 330, column: 1, scope: !5305)
!5946 = !{i64 2147668061, i64 2147668104, i64 2147668144}
!5947 = !DILocation(line: 331, column: 1, scope: !5305)
!5948 = !{i64 2147668293, i64 2147668336, i64 2147668376}
!5949 = !DILocation(line: 332, column: 1, scope: !5305)
!5950 = !{i64 2147668501, i64 2147668544, i64 2147668584}
!5951 = !DILocation(line: 333, column: 1, scope: !5305)
!5952 = !{i64 2147668691, i64 2147668734, i64 2147668774}
!5953 = !DILocation(line: 334, column: 1, scope: !5305)
!5954 = !{i64 2147668917, i64 2147668960, i64 2147669000}
!5955 = !DILocation(line: 335, column: 1, scope: !5305)
!5956 = !{i64 2147669106, i64 2147669149, i64 2147669189}
!5957 = !DILocation(line: 336, column: 1, scope: !5305)
!5958 = !{i64 2147669377, i64 2147669420, i64 2147669460}
!5959 = !DILocation(line: 337, column: 1, scope: !5305)
!5960 = !{i64 2147669597, i64 2147669640, i64 2147669680}
!5961 = !DILocation(line: 338, column: 1, scope: !5305)
!5962 = !{i64 2147669850, i64 2147669893, i64 2147669933}
!5963 = !DILocation(line: 339, column: 1, scope: !5305)
!5964 = !{i64 2147674119, i64 2147674162, i64 2147674202}
!5965 = !DILocation(line: 340, column: 1, scope: !5305)
!5966 = !{i64 2147674351, i64 2147674394, i64 2147674434}
!5967 = !DILocation(line: 341, column: 1, scope: !5305)
!5968 = !{i64 2147674562, i64 2147674605, i64 2147674645}
!5969 = !DILocation(line: 342, column: 1, scope: !5305)
!5970 = !{i64 2147674752, i64 2147674795, i64 2147674835}
!5971 = !DILocation(line: 343, column: 1, scope: !5305)
!5972 = !{i64 2147674966, i64 2147675009, i64 2147675049}
!5973 = !DILocation(line: 344, column: 1, scope: !5305)
!5974 = !{i64 2147675165, i64 2147675208, i64 2147675248}
!5975 = !DILocation(line: 345, column: 1, scope: !5305)
!5976 = !{i64 2147675352, i64 2147675395, i64 2147675435}
!5977 = !DILocation(line: 346, column: 1, scope: !5305)
!5978 = !{i64 2147675548, i64 2147675591, i64 2147675631}
!5979 = !DILocation(line: 347, column: 1, scope: !5305)
!5980 = !{i64 2147675756, i64 2147675799, i64 2147675839}
!5981 = !DILocation(line: 348, column: 1, scope: !5305)
!5982 = !{i64 2147675985, i64 2147676028, i64 2147676068}
!5983 = !DILocation(line: 349, column: 1, scope: !5305)
!5984 = !{i64 2147676187, i64 2147676230, i64 2147676270}
!5985 = !DILocation(line: 350, column: 1, scope: !5305)
!5986 = !{i64 2147676386, i64 2147676429, i64 2147676469}
!5987 = !DILocation(line: 351, column: 1, scope: !5305)
!5988 = !{i64 2147676603, i64 2147676646, i64 2147676686}
!5989 = !DILocation(line: 353, column: 1, scope: !5305)
!5990 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !235, file: !235, line: 30, type: !242, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !5991)
!5991 = !{!5992, !5993}
!5992 = !DILocalVariable(name: "arg", arg: 1, scope: !5990, file: !235, line: 30, type: !244)
!5993 = !DILocalVariable(name: "key", scope: !5990, file: !235, line: 32, type: !152)
!5994 = !DILocation(line: 0, scope: !5990)
!5995 = !DILocation(line: 37, column: 2, scope: !5990)
!5996 = !DILocation(line: 38, column: 2, scope: !5990)
!5997 = !DILocation(line: 55, column: 2, scope: !5998, inlinedAt: !6005)
!5998 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5999, file: !5999, line: 42, type: !6000, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !6002)
!5999 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6000 = !DISubroutineType(types: !6001)
!6001 = !{!32}
!6002 = !{!6003, !6004}
!6003 = !DILocalVariable(name: "key", scope: !5998, file: !5999, line: 44, type: !32)
!6004 = !DILocalVariable(name: "tmp", scope: !5998, file: !5999, line: 53, type: !32)
!6005 = distinct !DILocation(line: 40, column: 8, scope: !5990)
!6006 = !{i64 2190035}
!6007 = !DILocation(line: 0, scope: !5998, inlinedAt: !6005)
!6008 = !DILocalVariable(name: "key", arg: 1, scope: !6009, file: !5999, line: 84, type: !32)
!6009 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5999, file: !5999, line: 84, type: !6010, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !6012)
!6010 = !DISubroutineType(types: !6011)
!6011 = !{null, !32}
!6012 = !{!6008}
!6013 = !DILocation(line: 0, scope: !6009, inlinedAt: !6014)
!6014 = distinct !DILocation(line: 47, column: 2, scope: !5990)
!6015 = !DILocation(line: 95, column: 2, scope: !6009, inlinedAt: !6014)
!6016 = !{i64 2190852}
!6017 = !DILocation(line: 51, column: 18, scope: !5990)
!6018 = !DILocation(line: 53, column: 2, scope: !5990)
!6019 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !6020, file: !6020, line: 1609, type: !3148, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !2236)
!6020 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6021 = !DILocation(line: 1611, column: 3, scope: !6019)
!6022 = !DILocation(line: 1612, column: 1, scope: !6019)
!6023 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !6020, file: !6020, line: 1629, type: !3148, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !2236)
!6024 = !DILocation(line: 1631, column: 3, scope: !6023)
!6025 = !DILocation(line: 1632, column: 1, scope: !6023)
!6026 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !271, file: !271, line: 26, type: !277, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !268, retainedNodes: !6027)
!6027 = !{!6028}
!6028 = !DILocalVariable(name: "dev", arg: 1, scope: !6026, file: !271, line: 26, type: !279)
!6029 = !DILocation(line: 0, scope: !6026)
!6030 = !DILocation(line: 68, column: 2, scope: !6026)
!6031 = distinct !DISubprogram(name: "z_log_minimal_printk", scope: !6032, file: !6032, line: 14, type: !4258, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2624, retainedNodes: !6033)
!6032 = !DIFile(filename: "zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6033 = !{!6034, !6035}
!6034 = !DILocalVariable(name: "fmt", arg: 1, scope: !6031, file: !6032, line: 14, type: !118)
!6035 = !DILocalVariable(name: "ap", scope: !6031, file: !6032, line: 16, type: !6036)
!6036 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3268, line: 99, baseType: !6037)
!6037 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3268, line: 40, baseType: !6038)
!6038 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !6032, baseType: !6039)
!6039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !6040)
!6040 = !{!6041}
!6041 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !6039, file: !6032, line: 16, baseType: !106, size: 32)
!6042 = !DILocation(line: 0, scope: !6031)
!6043 = !DILocation(line: 16, column: 2, scope: !6031)
!6044 = !DILocation(line: 16, column: 10, scope: !6031)
!6045 = !DILocation(line: 18, column: 2, scope: !6031)
!6046 = !DILocation(line: 19, column: 2, scope: !6031)
!6047 = !DILocation(line: 20, column: 2, scope: !6031)
!6048 = !DILocation(line: 21, column: 1, scope: !6031)
!6049 = distinct !DISubprogram(name: "z_log_minimal_vprintk", scope: !6032, file: !6032, line: 23, type: !6050, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2624, retainedNodes: !6052)
!6050 = !DISubroutineType(types: !6051)
!6051 = !{null, !118, !6036}
!6052 = !{!6053, !6054}
!6053 = !DILocalVariable(name: "fmt", arg: 1, scope: !6049, file: !6032, line: 23, type: !118)
!6054 = !DILocalVariable(name: "ap", arg: 2, scope: !6049, file: !6032, line: 23, type: !6036)
!6055 = !DILocation(line: 0, scope: !6049)
!6056 = !DILocation(line: 25, column: 2, scope: !6049)
!6057 = !DILocation(line: 26, column: 1, scope: !6049)
!6058 = distinct !DISubprogram(name: "z_log_minimal_hexdump_print", scope: !6032, file: !6032, line: 52, type: !6059, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2624, retainedNodes: !6061)
!6059 = !DISubroutineType(types: !6060)
!6060 = !{null, !107, !13, !185}
!6061 = !{!6062, !6063, !6064, !6065}
!6062 = !DILocalVariable(name: "level", arg: 1, scope: !6058, file: !6032, line: 52, type: !107)
!6063 = !DILocalVariable(name: "data", arg: 2, scope: !6058, file: !6032, line: 52, type: !13)
!6064 = !DILocalVariable(name: "size", arg: 3, scope: !6058, file: !6032, line: 52, type: !185)
!6065 = !DILocalVariable(name: "data_buffer", scope: !6058, file: !6032, line: 54, type: !118)
!6066 = !DILocation(line: 0, scope: !6058)
!6067 = !DILocation(line: 55, column: 14, scope: !6058)
!6068 = !DILocation(line: 55, column: 2, scope: !6058)
!6069 = !DILocation(line: 56, column: 3, scope: !6070)
!6070 = distinct !DILexicalBlock(scope: !6058, file: !6032, line: 55, column: 20)
!6071 = !DILocation(line: 57, column: 3, scope: !6070)
!6072 = !DILocation(line: 59, column: 7, scope: !6070)
!6073 = distinct !{!6073, !6068, !6074}
!6074 = !DILocation(line: 65, column: 2, scope: !6058)
!6075 = !DILocation(line: 66, column: 1, scope: !6058)
!6076 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !6077, file: !6077, line: 175, type: !6078, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2624, retainedNodes: !6080)
!6077 = !DIFile(filename: "zephyr/include/zephyr/logging/log_core.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6078 = !DISubroutineType(types: !6079)
!6079 = !{!120, !107}
!6080 = !{!6081}
!6081 = !DILocalVariable(name: "level", arg: 1, scope: !6076, file: !6077, line: 175, type: !107)
!6082 = !DILocation(line: 0, scope: !6076)
!6083 = !DILocation(line: 177, column: 2, scope: !6076)
!6084 = !DILocation(line: 189, column: 1, scope: !6076)
!6085 = distinct !DISubprogram(name: "minimal_hexdump_line_print", scope: !6032, file: !6032, line: 28, type: !6086, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2624, retainedNodes: !6088)
!6086 = !DISubroutineType(types: !6087)
!6087 = !{null, !118, !185}
!6088 = !{!6089, !6090, !6091, !6093, !6095}
!6089 = !DILocalVariable(name: "data", arg: 1, scope: !6085, file: !6032, line: 28, type: !118)
!6090 = !DILocalVariable(name: "length", arg: 2, scope: !6085, file: !6032, line: 28, type: !185)
!6091 = !DILocalVariable(name: "i", scope: !6092, file: !6032, line: 30, type: !185)
!6092 = distinct !DILexicalBlock(scope: !6085, file: !6032, line: 30, column: 2)
!6093 = !DILocalVariable(name: "i", scope: !6094, file: !6032, line: 40, type: !185)
!6094 = distinct !DILexicalBlock(scope: !6085, file: !6032, line: 40, column: 2)
!6095 = !DILocalVariable(name: "c", scope: !6096, file: !6032, line: 42, type: !196)
!6096 = distinct !DILexicalBlock(scope: !6097, file: !6032, line: 41, column: 19)
!6097 = distinct !DILexicalBlock(scope: !6098, file: !6032, line: 41, column: 7)
!6098 = distinct !DILexicalBlock(scope: !6099, file: !6032, line: 40, column: 54)
!6099 = distinct !DILexicalBlock(scope: !6094, file: !6032, line: 40, column: 2)
!6100 = !DILocation(line: 0, scope: !6085)
!6101 = !DILocation(line: 0, scope: !6092)
!6102 = !DILocation(line: 30, column: 2, scope: !6092)
!6103 = !DILocation(line: 38, column: 2, scope: !6085)
!6104 = !DILocation(line: 0, scope: !6094)
!6105 = !DILocation(line: 40, column: 2, scope: !6094)
!6106 = !DILocation(line: 31, column: 9, scope: !6107)
!6107 = distinct !DILexicalBlock(scope: !6108, file: !6032, line: 31, column: 7)
!6108 = distinct !DILexicalBlock(scope: !6109, file: !6032, line: 30, column: 54)
!6109 = distinct !DILexicalBlock(scope: !6092, file: !6032, line: 30, column: 2)
!6110 = !DILocation(line: 31, column: 7, scope: !6108)
!6111 = !DILocation(line: 32, column: 35, scope: !6112)
!6112 = distinct !DILexicalBlock(scope: !6107, file: !6032, line: 31, column: 19)
!6113 = !DILocation(line: 32, column: 20, scope: !6112)
!6114 = !DILocation(line: 32, column: 4, scope: !6112)
!6115 = !DILocation(line: 33, column: 3, scope: !6112)
!6116 = !DILocation(line: 34, column: 4, scope: !6117)
!6117 = distinct !DILexicalBlock(scope: !6107, file: !6032, line: 33, column: 10)
!6118 = !DILocation(line: 30, column: 50, scope: !6109)
!6119 = !DILocation(line: 30, column: 24, scope: !6109)
!6120 = distinct !{!6120, !6102, !6121}
!6121 = !DILocation(line: 36, column: 2, scope: !6092)
!6122 = !DILocation(line: 49, column: 2, scope: !6085)
!6123 = !DILocation(line: 50, column: 1, scope: !6085)
!6124 = !DILocation(line: 41, column: 9, scope: !6097)
!6125 = !DILocation(line: 41, column: 7, scope: !6098)
!6126 = !DILocation(line: 42, column: 22, scope: !6096)
!6127 = !DILocation(line: 0, scope: !6096)
!6128 = !DILocation(line: 44, column: 25, scope: !6096)
!6129 = !DILocation(line: 44, column: 17, scope: !6096)
!6130 = !DILocation(line: 44, column: 33, scope: !6096)
!6131 = !DILocation(line: 44, column: 4, scope: !6096)
!6132 = !DILocation(line: 45, column: 3, scope: !6096)
!6133 = !DILocation(line: 46, column: 4, scope: !6134)
!6134 = distinct !DILexicalBlock(scope: !6097, file: !6032, line: 45, column: 10)
!6135 = !DILocation(line: 40, column: 50, scope: !6099)
!6136 = !DILocation(line: 40, column: 24, scope: !6099)
!6137 = distinct !{!6137, !6105, !6138}
!6138 = !DILocation(line: 48, column: 2, scope: !6094)
!6139 = distinct !DISubprogram(name: "isprint", scope: !5049, file: !5049, line: 37, type: !214, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2624, retainedNodes: !6140)
!6140 = !{!6141}
!6141 = !DILocalVariable(name: "c", arg: 1, scope: !6139, file: !5049, line: 37, type: !107)
!6142 = !DILocation(line: 0, scope: !6139)
!6143 = !DILocation(line: 39, column: 38, scope: !6139)
!6144 = !DILocation(line: 39, column: 2, scope: !6139)
!6145 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !6146, file: !6146, line: 57, type: !6147, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2627, retainedNodes: !6193)
!6146 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6147 = !DISubroutineType(types: !6148)
!6148 = !{null, !32, !6149}
!6149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6150, size: 32)
!6150 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6151)
!6151 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2747, line: 141, baseType: !6152)
!6152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2747, line: 97, size: 256, elements: !6153)
!6153 = !{!6154}
!6154 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !6152, file: !2747, line: 107, baseType: !6155, size: 256)
!6155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2747, line: 98, size: 256, elements: !6156)
!6156 = !{!6157, !6162, !6167, !6172, !6177, !6182, !6187, !6192}
!6157 = !DIDerivedType(tag: DW_TAG_member, scope: !6155, file: !2747, line: 99, baseType: !6158, size: 32)
!6158 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6155, file: !2747, line: 99, size: 32, elements: !6159)
!6159 = !{!6160, !6161}
!6160 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !6158, file: !2747, line: 99, baseType: !152, size: 32)
!6161 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !6158, file: !2747, line: 99, baseType: !152, size: 32)
!6162 = !DIDerivedType(tag: DW_TAG_member, scope: !6155, file: !2747, line: 100, baseType: !6163, size: 32, offset: 32)
!6163 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6155, file: !2747, line: 100, size: 32, elements: !6164)
!6164 = !{!6165, !6166}
!6165 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !6163, file: !2747, line: 100, baseType: !152, size: 32)
!6166 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !6163, file: !2747, line: 100, baseType: !152, size: 32)
!6167 = !DIDerivedType(tag: DW_TAG_member, scope: !6155, file: !2747, line: 101, baseType: !6168, size: 32, offset: 64)
!6168 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6155, file: !2747, line: 101, size: 32, elements: !6169)
!6169 = !{!6170, !6171}
!6170 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !6168, file: !2747, line: 101, baseType: !152, size: 32)
!6171 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !6168, file: !2747, line: 101, baseType: !152, size: 32)
!6172 = !DIDerivedType(tag: DW_TAG_member, scope: !6155, file: !2747, line: 102, baseType: !6173, size: 32, offset: 96)
!6173 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6155, file: !2747, line: 102, size: 32, elements: !6174)
!6174 = !{!6175, !6176}
!6175 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !6173, file: !2747, line: 102, baseType: !152, size: 32)
!6176 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !6173, file: !2747, line: 102, baseType: !152, size: 32)
!6177 = !DIDerivedType(tag: DW_TAG_member, scope: !6155, file: !2747, line: 103, baseType: !6178, size: 32, offset: 128)
!6178 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6155, file: !2747, line: 103, size: 32, elements: !6179)
!6179 = !{!6180, !6181}
!6180 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !6178, file: !2747, line: 103, baseType: !152, size: 32)
!6181 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !6178, file: !2747, line: 103, baseType: !152, size: 32)
!6182 = !DIDerivedType(tag: DW_TAG_member, scope: !6155, file: !2747, line: 104, baseType: !6183, size: 32, offset: 160)
!6183 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6155, file: !2747, line: 104, size: 32, elements: !6184)
!6184 = !{!6185, !6186}
!6185 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !6183, file: !2747, line: 104, baseType: !152, size: 32)
!6186 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !6183, file: !2747, line: 104, baseType: !152, size: 32)
!6187 = !DIDerivedType(tag: DW_TAG_member, scope: !6155, file: !2747, line: 105, baseType: !6188, size: 32, offset: 192)
!6188 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6155, file: !2747, line: 105, size: 32, elements: !6189)
!6189 = !{!6190, !6191}
!6190 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !6188, file: !2747, line: 105, baseType: !152, size: 32)
!6191 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !6188, file: !2747, line: 105, baseType: !152, size: 32)
!6192 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !6155, file: !2747, line: 106, baseType: !152, size: 32, offset: 224)
!6193 = !{!6194, !6195}
!6194 = !DILocalVariable(name: "reason", arg: 1, scope: !6145, file: !6146, line: 57, type: !32)
!6195 = !DILocalVariable(name: "esf", arg: 2, scope: !6145, file: !6146, line: 57, type: !6149)
!6196 = !DILocation(line: 0, scope: !6145)
!6197 = !DILocation(line: 60, column: 10, scope: !6198)
!6198 = distinct !DILexicalBlock(scope: !6145, file: !6146, line: 60, column: 6)
!6199 = !DILocation(line: 60, column: 6, scope: !6145)
!6200 = !DILocation(line: 61, column: 3, scope: !6201)
!6201 = distinct !DILexicalBlock(scope: !6198, file: !6146, line: 60, column: 19)
!6202 = !DILocation(line: 62, column: 2, scope: !6201)
!6203 = !DILocation(line: 63, column: 2, scope: !6145)
!6204 = !DILocation(line: 64, column: 1, scope: !6145)
!6205 = distinct !DISubprogram(name: "esf_dump", scope: !6146, file: !6146, line: 20, type: !6206, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2627, retainedNodes: !6208)
!6206 = !DISubroutineType(types: !6207)
!6207 = !{null, !6149}
!6208 = !{!6209}
!6209 = !DILocalVariable(name: "esf", arg: 1, scope: !6205, file: !6146, line: 20, type: !6149)
!6210 = !DILocation(line: 0, scope: !6205)
!6211 = !DILocation(line: 22, column: 2, scope: !6212)
!6212 = distinct !DILexicalBlock(scope: !6213, file: !6146, line: 22, column: 2)
!6213 = distinct !DILexicalBlock(scope: !6214, file: !6146, line: 22, column: 2)
!6214 = distinct !DILexicalBlock(scope: !6215, file: !6146, line: 22, column: 2)
!6215 = distinct !DILexicalBlock(scope: !6205, file: !6146, line: 22, column: 2)
!6216 = !DILocation(line: 24, column: 2, scope: !6217)
!6217 = distinct !DILexicalBlock(scope: !6218, file: !6146, line: 24, column: 2)
!6218 = distinct !DILexicalBlock(scope: !6219, file: !6146, line: 24, column: 2)
!6219 = distinct !DILexicalBlock(scope: !6220, file: !6146, line: 24, column: 2)
!6220 = distinct !DILexicalBlock(scope: !6205, file: !6146, line: 24, column: 2)
!6221 = !DILocation(line: 26, column: 2, scope: !6222)
!6222 = distinct !DILexicalBlock(scope: !6223, file: !6146, line: 26, column: 2)
!6223 = distinct !DILexicalBlock(scope: !6224, file: !6146, line: 26, column: 2)
!6224 = distinct !DILexicalBlock(scope: !6225, file: !6146, line: 26, column: 2)
!6225 = distinct !DILexicalBlock(scope: !6205, file: !6146, line: 26, column: 2)
!6226 = !DILocation(line: 53, column: 2, scope: !6227)
!6227 = distinct !DILexicalBlock(scope: !6228, file: !6146, line: 53, column: 2)
!6228 = distinct !DILexicalBlock(scope: !6229, file: !6146, line: 53, column: 2)
!6229 = distinct !DILexicalBlock(scope: !6230, file: !6146, line: 53, column: 2)
!6230 = distinct !DILexicalBlock(scope: !6205, file: !6146, line: 53, column: 2)
!6231 = !DILocation(line: 55, column: 1, scope: !6205)
!6232 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !6146, file: !6146, line: 82, type: !6233, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2627, retainedNodes: !6248)
!6233 = !DISubroutineType(types: !6234)
!6234 = !{null, !6149, !6235}
!6235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6236, size: 32)
!6236 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !379, line: 37, baseType: !6237)
!6237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !6238)
!6238 = !{!6239, !6240, !6241, !6242, !6243, !6244, !6245, !6246, !6247}
!6239 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6237, file: !379, line: 26, baseType: !152, size: 32)
!6240 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6237, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!6241 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6237, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!6242 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6237, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!6243 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6237, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!6244 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6237, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!6245 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6237, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!6246 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6237, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!6247 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6237, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!6248 = !{!6249, !6250, !6251}
!6249 = !DILocalVariable(name: "esf", arg: 1, scope: !6232, file: !6146, line: 82, type: !6149)
!6250 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !6232, file: !6146, line: 82, type: !6235)
!6251 = !DILocalVariable(name: "reason", scope: !6232, file: !6146, line: 88, type: !32)
!6252 = !DILocation(line: 0, scope: !6232)
!6253 = !DILocation(line: 88, column: 35, scope: !6232)
!6254 = !DILocation(line: 108, column: 2, scope: !6232)
!6255 = !DILocation(line: 131, column: 1, scope: !6232)
!6256 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !6146, file: !6146, line: 133, type: !131, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2627, retainedNodes: !6257)
!6257 = !{!6258, !6259, !6260}
!6258 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !6256, file: !6146, line: 133, type: !106)
!6259 = !DILocalVariable(name: "ssf_contents", scope: !6256, file: !6146, line: 135, type: !1032)
!6260 = !DILocalVariable(name: "oops_esf", scope: !6256, file: !6146, line: 136, type: !6151)
!6261 = !DILocation(line: 0, scope: !6256)
!6262 = !DILocation(line: 136, column: 2, scope: !6256)
!6263 = !DILocation(line: 136, column: 15, scope: !6256)
!6264 = !DILocation(line: 139, column: 22, scope: !6256)
!6265 = !DILocation(line: 139, column: 17, scope: !6256)
!6266 = !DILocation(line: 139, column: 20, scope: !6256)
!6267 = !DILocation(line: 141, column: 2, scope: !6256)
!6268 = !DILocation(line: 142, column: 2, scope: !6256)
!6269 = distinct !DISubprogram(name: "arch_irq_enable", scope: !6270, file: !6270, line: 40, type: !6010, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2638, retainedNodes: !6271)
!6270 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6271 = !{!6272}
!6272 = !DILocalVariable(name: "irq", arg: 1, scope: !6269, file: !6270, line: 40, type: !32)
!6273 = !DILocation(line: 0, scope: !6269)
!6274 = !DILocation(line: 42, column: 2, scope: !6269)
!6275 = !DILocation(line: 43, column: 1, scope: !6269)
!6276 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !463, file: !463, line: 1684, type: !6277, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2638, retainedNodes: !6279)
!6277 = !DISubroutineType(types: !6278)
!6278 = !{null, !930}
!6279 = !{!6280}
!6280 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6276, file: !463, line: 1684, type: !930)
!6281 = !DILocation(line: 0, scope: !6276)
!6282 = !DILocation(line: 1686, column: 23, scope: !6283)
!6283 = distinct !DILexicalBlock(scope: !6276, file: !463, line: 1686, column: 7)
!6284 = !DILocation(line: 1686, column: 7, scope: !6276)
!6285 = !DILocation(line: 1688, column: 5, scope: !6286)
!6286 = distinct !DILexicalBlock(scope: !6283, file: !463, line: 1687, column: 3)
!6287 = !{i64 2151258811}
!6288 = !DILocation(line: 1689, column: 81, scope: !6286)
!6289 = !DILocation(line: 1689, column: 60, scope: !6286)
!6290 = !DILocation(line: 1689, column: 34, scope: !6286)
!6291 = !DILocation(line: 1689, column: 5, scope: !6286)
!6292 = !DILocation(line: 1689, column: 43, scope: !6286)
!6293 = !DILocation(line: 1690, column: 5, scope: !6286)
!6294 = !{i64 2151258925}
!6295 = !DILocation(line: 1691, column: 3, scope: !6286)
!6296 = !DILocation(line: 1692, column: 1, scope: !6276)
!6297 = distinct !DISubprogram(name: "arch_irq_disable", scope: !6270, file: !6270, line: 45, type: !6010, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2638, retainedNodes: !6298)
!6298 = !{!6299}
!6299 = !DILocalVariable(name: "irq", arg: 1, scope: !6297, file: !6270, line: 45, type: !32)
!6300 = !DILocation(line: 0, scope: !6297)
!6301 = !DILocation(line: 47, column: 2, scope: !6297)
!6302 = !DILocation(line: 48, column: 1, scope: !6297)
!6303 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !463, file: !463, line: 1722, type: !6277, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2638, retainedNodes: !6304)
!6304 = !{!6305}
!6305 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6303, file: !463, line: 1722, type: !930)
!6306 = !DILocation(line: 0, scope: !6303)
!6307 = !DILocation(line: 1724, column: 23, scope: !6308)
!6308 = distinct !DILexicalBlock(scope: !6303, file: !463, line: 1724, column: 7)
!6309 = !DILocation(line: 1724, column: 7, scope: !6303)
!6310 = !DILocation(line: 1726, column: 81, scope: !6311)
!6311 = distinct !DILexicalBlock(scope: !6308, file: !463, line: 1725, column: 3)
!6312 = !DILocation(line: 1726, column: 60, scope: !6311)
!6313 = !DILocation(line: 1726, column: 34, scope: !6311)
!6314 = !DILocation(line: 1726, column: 5, scope: !6311)
!6315 = !DILocation(line: 1726, column: 43, scope: !6311)
!6316 = !DILocation(line: 271, column: 3, scope: !6317, inlinedAt: !6319)
!6317 = distinct !DISubprogram(name: "__DSB", scope: !6318, file: !6318, line: 269, type: !3148, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2638, retainedNodes: !2236)
!6318 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6319 = distinct !DILocation(line: 1727, column: 5, scope: !6311)
!6320 = !{i64 3713194}
!6321 = !DILocation(line: 260, column: 3, scope: !6322, inlinedAt: !6323)
!6322 = distinct !DISubprogram(name: "__ISB", scope: !6318, file: !6318, line: 258, type: !3148, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2638, retainedNodes: !2236)
!6323 = distinct !DILocation(line: 1728, column: 5, scope: !6311)
!6324 = !{i64 3712911}
!6325 = !DILocation(line: 1729, column: 3, scope: !6311)
!6326 = !DILocation(line: 1730, column: 1, scope: !6303)
!6327 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !6270, file: !6270, line: 50, type: !6328, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2638, retainedNodes: !6330)
!6328 = !DISubroutineType(types: !6329)
!6329 = !{!107, !32}
!6330 = !{!6331}
!6331 = !DILocalVariable(name: "irq", arg: 1, scope: !6327, file: !6270, line: 50, type: !32)
!6332 = !DILocation(line: 0, scope: !6327)
!6333 = !DILocation(line: 52, column: 20, scope: !6327)
!6334 = !DILocation(line: 52, column: 9, scope: !6327)
!6335 = !DILocation(line: 52, column: 41, scope: !6327)
!6336 = !DILocation(line: 52, column: 39, scope: !6327)
!6337 = !DILocation(line: 52, column: 2, scope: !6327)
!6338 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !6270, file: !6270, line: 64, type: !6339, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2638, retainedNodes: !6341)
!6339 = !DISubroutineType(types: !6340)
!6340 = !{null, !32, !32, !152}
!6341 = !{!6342, !6343, !6344}
!6342 = !DILocalVariable(name: "irq", arg: 1, scope: !6338, file: !6270, line: 64, type: !32)
!6343 = !DILocalVariable(name: "prio", arg: 2, scope: !6338, file: !6270, line: 64, type: !32)
!6344 = !DILocalVariable(name: "flags", arg: 3, scope: !6338, file: !6270, line: 64, type: !152)
!6345 = !DILocation(line: 0, scope: !6338)
!6346 = !DILocation(line: 83, column: 8, scope: !6347)
!6347 = distinct !DILexicalBlock(scope: !6348, file: !6270, line: 82, column: 9)
!6348 = distinct !DILexicalBlock(scope: !6338, file: !6270, line: 76, column: 6)
!6349 = !DILocation(line: 91, column: 2, scope: !6350)
!6350 = distinct !DILexicalBlock(scope: !6351, file: !6270, line: 91, column: 2)
!6351 = distinct !DILexicalBlock(scope: !6338, file: !6270, line: 91, column: 2)
!6352 = !DILocation(line: 91, column: 2, scope: !6351)
!6353 = !DILocation(line: 91, column: 2, scope: !6354)
!6354 = distinct !DILexicalBlock(scope: !6350, file: !6270, line: 91, column: 2)
!6355 = !DILocation(line: 95, column: 2, scope: !6338)
!6356 = !DILocation(line: 96, column: 1, scope: !6338)
!6357 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !463, file: !463, line: 1814, type: !6358, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2638, retainedNodes: !6360)
!6358 = !DISubroutineType(types: !6359)
!6359 = !{null, !930, !152}
!6360 = !{!6361, !6362}
!6361 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6357, file: !463, line: 1814, type: !930)
!6362 = !DILocalVariable(name: "priority", arg: 2, scope: !6357, file: !463, line: 1814, type: !152)
!6363 = !DILocation(line: 0, scope: !6357)
!6364 = !DILocation(line: 0, scope: !6365)
!6365 = distinct !DILexicalBlock(scope: !6357, file: !463, line: 1816, column: 7)
!6366 = !DILocation(line: 1816, column: 7, scope: !6357)
!6367 = !DILocation(line: 1824, column: 1, scope: !6357)
!6368 = distinct !DISubprogram(name: "z_irq_spurious", scope: !6270, file: !6270, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2638, retainedNodes: !6369)
!6369 = !{!6370}
!6370 = !DILocalVariable(name: "unused", arg: 1, scope: !6368, file: !6270, line: 155, type: !13)
!6371 = !DILocation(line: 0, scope: !6368)
!6372 = !DILocation(line: 159, column: 2, scope: !6368)
!6373 = !DILocation(line: 160, column: 1, scope: !6368)
!6374 = distinct !DISubprogram(name: "z_arm_nmi", scope: !6375, file: !6375, line: 87, type: !3148, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2684, retainedNodes: !2236)
!6375 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6376 = !DILocation(line: 89, column: 2, scope: !6374)
!6377 = !DILocation(line: 90, column: 2, scope: !6374)
!6378 = !DILocation(line: 91, column: 1, scope: !6374)
!6379 = !DISubprogram(name: "z_SysNmiOnReset", scope: !6375, file: !6375, line: 23, type: !3148, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2236)
!6380 = !DISubprogram(name: "z_arm_int_exit", scope: !6381, file: !6381, line: 153, type: !3148, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2236)
!6381 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6382 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !6383, file: !6383, line: 256, type: !3148, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2686, retainedNodes: !2236)
!6383 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6384 = !DILocation(line: 258, column: 2, scope: !6382)
!6385 = !DILocation(line: 260, column: 2, scope: !6382)
!6386 = !DILocation(line: 262, column: 2, scope: !6382)
!6387 = !DILocation(line: 263, column: 2, scope: !6382)
!6388 = !DILocation(line: 267, column: 2, scope: !6382)
!6389 = !DILocation(line: 268, column: 2, scope: !6382)
!6390 = distinct !DISubprogram(name: "relocate_vector_table", scope: !6383, file: !6383, line: 53, type: !3148, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2686, retainedNodes: !2236)
!6391 = !DILocation(line: 55, column: 12, scope: !6390)
!6392 = !DILocation(line: 271, column: 3, scope: !6393, inlinedAt: !6394)
!6393 = distinct !DISubprogram(name: "__DSB", scope: !6318, file: !6318, line: 269, type: !3148, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2686, retainedNodes: !2236)
!6394 = distinct !DILocation(line: 56, column: 2, scope: !6390)
!6395 = !{i64 3711865}
!6396 = !DILocation(line: 260, column: 3, scope: !6397, inlinedAt: !6398)
!6397 = distinct !DISubprogram(name: "__ISB", scope: !6318, file: !6318, line: 258, type: !3148, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2686, retainedNodes: !2236)
!6398 = distinct !DILocation(line: 57, column: 2, scope: !6390)
!6399 = !{i64 3711582}
!6400 = !DILocation(line: 58, column: 1, scope: !6390)
!6401 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !6383, file: !6383, line: 96, type: !3148, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2686, retainedNodes: !2236)
!6402 = !DILocation(line: 103, column: 13, scope: !6401)
!6403 = !DILocation(line: 975, column: 3, scope: !6404, inlinedAt: !6409)
!6404 = distinct !DISubprogram(name: "__get_CONTROL", scope: !6318, file: !6318, line: 971, type: !6405, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2686, retainedNodes: !6407)
!6405 = !DISubroutineType(types: !6406)
!6406 = !{!152}
!6407 = !{!6408}
!6408 = !DILocalVariable(name: "result", scope: !6404, file: !6318, line: 973, type: !152)
!6409 = distinct !DILocation(line: 189, column: 16, scope: !6401)
!6410 = !{i64 3732695}
!6411 = !DILocation(line: 0, scope: !6404, inlinedAt: !6409)
!6412 = !DILocation(line: 189, column: 32, scope: !6401)
!6413 = !DILocalVariable(name: "control", arg: 1, scope: !6414, file: !6318, line: 1001, type: !152)
!6414 = distinct !DISubprogram(name: "__set_CONTROL", scope: !6318, file: !6318, line: 1001, type: !6415, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2686, retainedNodes: !6417)
!6415 = !DISubroutineType(types: !6416)
!6416 = !{null, !152}
!6417 = !{!6413}
!6418 = !DILocation(line: 0, scope: !6414, inlinedAt: !6419)
!6419 = distinct !DILocation(line: 189, column: 2, scope: !6401)
!6420 = !DILocation(line: 1003, column: 3, scope: !6414, inlinedAt: !6419)
!6421 = !{i64 3733415}
!6422 = !DILocation(line: 260, column: 3, scope: !6397, inlinedAt: !6423)
!6423 = distinct !DILocation(line: 1004, column: 3, scope: !6414, inlinedAt: !6419)
!6424 = !DILocation(line: 191, column: 1, scope: !6401)
!6425 = distinct !DISubprogram(name: "arch_swap", scope: !6426, file: !6426, line: 33, type: !6328, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !6427)
!6426 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6427 = !{!6428}
!6428 = !DILocalVariable(name: "key", arg: 1, scope: !6425, file: !6426, line: 33, type: !32)
!6429 = !DILocation(line: 0, scope: !6425)
!6430 = !DILocation(line: 36, column: 2, scope: !6425)
!6431 = !DILocation(line: 36, column: 17, scope: !6425)
!6432 = !DILocation(line: 36, column: 25, scope: !6425)
!6433 = !DILocation(line: 37, column: 37, scope: !6425)
!6434 = !DILocation(line: 37, column: 17, scope: !6425)
!6435 = !DILocation(line: 37, column: 35, scope: !6425)
!6436 = !DILocation(line: 41, column: 12, scope: !6425)
!6437 = !DILocalVariable(name: "key", arg: 1, scope: !6438, file: !5999, line: 84, type: !32)
!6438 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5999, file: !5999, line: 84, type: !6010, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !6439)
!6439 = !{!6437}
!6440 = !DILocation(line: 0, scope: !6438, inlinedAt: !6441)
!6441 = distinct !DILocation(line: 44, column: 2, scope: !6425)
!6442 = !DILocation(line: 95, column: 2, scope: !6438, inlinedAt: !6441)
!6443 = !{i64 2282366}
!6444 = !DILocation(line: 53, column: 9, scope: !6425)
!6445 = !DILocation(line: 53, column: 24, scope: !6425)
!6446 = !DILocation(line: 53, column: 2, scope: !6425)
!6447 = distinct !DISubprogram(name: "arch_new_thread", scope: !6448, file: !6448, line: 56, type: !6449, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2742, retainedNodes: !6559)
!6448 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6449 = !DISubroutineType(types: !6450)
!6450 = !{null, !6451, !6554, !193, !559, !106, !106, !106}
!6451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6452, size: 32)
!6452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !6453)
!6453 = !{!6454, !6512, !6524, !6525, !6526, !6527, !6528, !6534, !6549}
!6454 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6452, file: !309, line: 247, baseType: !6455, size: 384)
!6455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !6456)
!6456 = !{!6457, !6481, !6488, !6489, !6490, !6499, !6500, !6501}
!6457 = !DIDerivedType(tag: DW_TAG_member, scope: !6455, file: !309, line: 60, baseType: !6458, size: 64)
!6458 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6455, file: !309, line: 60, size: 64, elements: !6459)
!6459 = !{!6460, !6475}
!6460 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6458, file: !309, line: 61, baseType: !6461, size: 64)
!6461 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !6462)
!6462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !6463)
!6463 = !{!6464, !6470}
!6464 = !DIDerivedType(tag: DW_TAG_member, scope: !6462, file: !319, line: 38, baseType: !6465, size: 32)
!6465 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6462, file: !319, line: 38, size: 32, elements: !6466)
!6466 = !{!6467, !6469}
!6467 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6465, file: !319, line: 39, baseType: !6468, size: 32)
!6468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6462, size: 32)
!6469 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6465, file: !319, line: 40, baseType: !6468, size: 32)
!6470 = !DIDerivedType(tag: DW_TAG_member, scope: !6462, file: !319, line: 42, baseType: !6471, size: 32, offset: 32)
!6471 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6462, file: !319, line: 42, size: 32, elements: !6472)
!6472 = !{!6473, !6474}
!6473 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6471, file: !319, line: 43, baseType: !6468, size: 32)
!6474 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6471, file: !319, line: 44, baseType: !6468, size: 32)
!6475 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6458, file: !309, line: 62, baseType: !6476, size: 64)
!6476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !6477)
!6477 = !{!6478}
!6478 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6476, file: !335, line: 50, baseType: !6479, size: 64)
!6479 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6480, size: 64, elements: !340)
!6480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6476, size: 32)
!6481 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6455, file: !309, line: 68, baseType: !6482, size: 32, offset: 64)
!6482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6483, size: 32)
!6483 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !6484)
!6484 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !6485)
!6485 = !{!6486}
!6486 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6484, file: !345, line: 232, baseType: !6487, size: 64)
!6487 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !6462)
!6488 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6455, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!6489 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6455, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!6490 = !DIDerivedType(tag: DW_TAG_member, scope: !6455, file: !309, line: 90, baseType: !6491, size: 16, offset: 112)
!6491 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6455, file: !309, line: 90, size: 16, elements: !6492)
!6492 = !{!6493, !6498}
!6493 = !DIDerivedType(tag: DW_TAG_member, scope: !6491, file: !309, line: 91, baseType: !6494, size: 16)
!6494 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6491, file: !309, line: 91, size: 16, elements: !6495)
!6495 = !{!6496, !6497}
!6496 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6494, file: !309, line: 96, baseType: !359, size: 8)
!6497 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6494, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!6498 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6491, file: !309, line: 100, baseType: !197, size: 16)
!6499 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6455, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!6500 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6455, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!6501 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6455, file: !309, line: 131, baseType: !6502, size: 192, offset: 192)
!6502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !6503)
!6503 = !{!6504, !6505, !6511}
!6504 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6502, file: !345, line: 245, baseType: !6461, size: 64)
!6505 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6502, file: !345, line: 246, baseType: !6506, size: 32, offset: 64)
!6506 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !6507)
!6507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6508, size: 32)
!6508 = !DISubroutineType(types: !6509)
!6509 = !{null, !6510}
!6510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6502, size: 32)
!6511 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6502, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!6512 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6452, file: !309, line: 250, baseType: !6513, size: 288, offset: 384)
!6513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !6514)
!6514 = !{!6515, !6516, !6517, !6518, !6519, !6520, !6521, !6522, !6523}
!6515 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6513, file: !379, line: 26, baseType: !152, size: 32)
!6516 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6513, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!6517 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6513, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!6518 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6513, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!6519 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6513, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!6520 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6513, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!6521 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6513, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!6522 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6513, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!6523 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6513, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!6524 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6452, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!6525 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6452, file: !309, line: 256, baseType: !6483, size: 64, offset: 704)
!6526 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6452, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!6527 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6452, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!6528 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6452, file: !309, line: 300, baseType: !6529, size: 96, offset: 1056)
!6529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !6530)
!6530 = !{!6531, !6532, !6533}
!6531 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6529, file: !309, line: 153, baseType: !22, size: 32)
!6532 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6529, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!6533 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6529, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!6534 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6452, file: !309, line: 325, baseType: !6535, size: 32, offset: 1152)
!6535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6536, size: 32)
!6536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !6537)
!6537 = !{!6538, !6544, !6545}
!6538 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6536, file: !406, line: 5074, baseType: !6539, size: 96)
!6539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !6540)
!6540 = !{!6541, !6542, !6543}
!6541 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6539, file: !410, line: 57, baseType: !413, size: 32)
!6542 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6539, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!6543 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6539, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!6544 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6536, file: !406, line: 5075, baseType: !6483, size: 64, offset: 96)
!6545 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6536, file: !406, line: 5076, baseType: !6546, size: 32, offset: 160)
!6546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !6547)
!6547 = !{!6548}
!6548 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !6546, file: !420, line: 52, baseType: !22, size: 32)
!6549 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6452, file: !309, line: 343, baseType: !6550, size: 64, offset: 1184)
!6550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !6551)
!6551 = !{!6552, !6553}
!6552 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6550, file: !379, line: 63, baseType: !152, size: 32)
!6553 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6550, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!6554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6555, size: 32)
!6555 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !560, line: 44, baseType: !6556)
!6556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !577, line: 47, size: 8, elements: !6557)
!6557 = !{!6558}
!6558 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6556, file: !577, line: 48, baseType: !120, size: 8)
!6559 = !{!6560, !6561, !6562, !6563, !6564, !6565, !6566, !6567}
!6560 = !DILocalVariable(name: "thread", arg: 1, scope: !6447, file: !6448, line: 56, type: !6451)
!6561 = !DILocalVariable(name: "stack", arg: 2, scope: !6447, file: !6448, line: 56, type: !6554)
!6562 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !6447, file: !6448, line: 57, type: !193)
!6563 = !DILocalVariable(name: "entry", arg: 4, scope: !6447, file: !6448, line: 57, type: !559)
!6564 = !DILocalVariable(name: "p1", arg: 5, scope: !6447, file: !6448, line: 58, type: !106)
!6565 = !DILocalVariable(name: "p2", arg: 6, scope: !6447, file: !6448, line: 58, type: !106)
!6566 = !DILocalVariable(name: "p3", arg: 7, scope: !6447, file: !6448, line: 58, type: !106)
!6567 = !DILocalVariable(name: "iframe", scope: !6447, file: !6448, line: 60, type: !2745)
!6568 = !DILocation(line: 0, scope: !6447)
!6569 = !DILocation(line: 85, column: 11, scope: !6447)
!6570 = !DILocation(line: 93, column: 10, scope: !6447)
!6571 = !DILocation(line: 98, column: 13, scope: !6447)
!6572 = !DILocation(line: 100, column: 15, scope: !6447)
!6573 = !DILocation(line: 100, column: 10, scope: !6447)
!6574 = !DILocation(line: 100, column: 13, scope: !6447)
!6575 = !DILocation(line: 101, column: 15, scope: !6447)
!6576 = !DILocation(line: 101, column: 10, scope: !6447)
!6577 = !DILocation(line: 101, column: 13, scope: !6447)
!6578 = !DILocation(line: 102, column: 15, scope: !6447)
!6579 = !DILocation(line: 102, column: 10, scope: !6447)
!6580 = !DILocation(line: 102, column: 13, scope: !6447)
!6581 = !DILocation(line: 103, column: 15, scope: !6447)
!6582 = !DILocation(line: 103, column: 10, scope: !6447)
!6583 = !DILocation(line: 103, column: 13, scope: !6447)
!6584 = !DILocation(line: 106, column: 10, scope: !6447)
!6585 = !DILocation(line: 106, column: 15, scope: !6447)
!6586 = !DILocation(line: 122, column: 29, scope: !6447)
!6587 = !DILocation(line: 122, column: 23, scope: !6447)
!6588 = !DILocation(line: 122, column: 27, scope: !6447)
!6589 = !DILocation(line: 123, column: 15, scope: !6447)
!6590 = !DILocation(line: 123, column: 23, scope: !6447)
!6591 = !DILocation(line: 143, column: 1, scope: !6447)
!6592 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !6448, file: !6448, line: 385, type: !6593, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2742, retainedNodes: !6596)
!6593 = !DISubroutineType(types: !6594)
!6594 = !{!152, !6595, !6595}
!6595 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !152)
!6596 = !{!6597, !6598, !6599, !6602}
!6597 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !6592, file: !6448, line: 385, type: !6595)
!6598 = !DILocalVariable(name: "psp", arg: 2, scope: !6592, file: !6448, line: 385, type: !6595)
!6599 = !DILocalVariable(name: "thread", scope: !6592, file: !6448, line: 388, type: !6600)
!6600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6601, size: 32)
!6601 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6452)
!6602 = !DILocalVariable(name: "guard_len", scope: !6592, file: !6448, line: 405, type: !152)
!6603 = !DILocation(line: 0, scope: !6592)
!6604 = !DILocation(line: 388, column: 34, scope: !6592)
!6605 = !DILocation(line: 390, column: 13, scope: !6606)
!6606 = distinct !DILexicalBlock(scope: !6592, file: !6448, line: 390, column: 6)
!6607 = !DILocation(line: 390, column: 6, scope: !6592)
!6608 = !DILocation(line: 438, column: 6, scope: !6609)
!6609 = distinct !DILexicalBlock(scope: !6592, file: !6448, line: 438, column: 6)
!6610 = !DILocation(line: 438, column: 6, scope: !6592)
!6611 = !DILocation(line: 442, column: 3, scope: !6612)
!6612 = distinct !DILexicalBlock(scope: !6609, file: !6448, line: 440, column: 22)
!6613 = !DILocation(line: 455, column: 1, scope: !6592)
!6614 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !6448, file: !6448, line: 530, type: !6615, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2742, retainedNodes: !6617)
!6615 = !DISubroutineType(types: !6616)
!6616 = !{null, !6451, !193, !559}
!6617 = !{!6618, !6619, !6620}
!6618 = !DILocalVariable(name: "main_thread", arg: 1, scope: !6614, file: !6448, line: 530, type: !6451)
!6619 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !6614, file: !6448, line: 530, type: !193)
!6620 = !DILocalVariable(name: "_main", arg: 3, scope: !6614, file: !6448, line: 531, type: !559)
!6621 = !DILocation(line: 0, scope: !6614)
!6622 = !DILocation(line: 535, column: 11, scope: !6614)
!6623 = !DILocation(line: 560, column: 2, scope: !6614)
!6624 = !DILocation(line: 576, column: 2, scope: !6614)
!6625 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!6626 = !DILocation(line: 603, column: 2, scope: !6614)
!6627 = distinct !DISubprogram(name: "z_arm_fault", scope: !6628, file: !6628, line: 1036, type: !6629, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2785, retainedNodes: !6644)
!6628 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6629 = !DISubroutineType(types: !6630)
!6630 = !{null, !152, !152, !152, !6631}
!6631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6632, size: 32)
!6632 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !379, line: 37, baseType: !6633)
!6633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !6634)
!6634 = !{!6635, !6636, !6637, !6638, !6639, !6640, !6641, !6642, !6643}
!6635 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6633, file: !379, line: 26, baseType: !152, size: 32)
!6636 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6633, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!6637 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6633, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!6638 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6633, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!6639 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6633, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!6640 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6633, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!6641 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6633, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!6642 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6633, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!6643 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6633, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!6644 = !{!6645, !6646, !6647, !6648, !6649, !6650, !6651, !6652, !6653, !6654}
!6645 = !DILocalVariable(name: "msp", arg: 1, scope: !6627, file: !6628, line: 1036, type: !152)
!6646 = !DILocalVariable(name: "psp", arg: 2, scope: !6627, file: !6628, line: 1036, type: !152)
!6647 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6627, file: !6628, line: 1036, type: !152)
!6648 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !6627, file: !6628, line: 1037, type: !6631)
!6649 = !DILocalVariable(name: "reason", scope: !6627, file: !6628, line: 1039, type: !152)
!6650 = !DILocalVariable(name: "fault", scope: !6627, file: !6628, line: 1040, type: !107)
!6651 = !DILocalVariable(name: "recoverable", scope: !6627, file: !6628, line: 1041, type: !145)
!6652 = !DILocalVariable(name: "nested_exc", scope: !6627, file: !6628, line: 1041, type: !145)
!6653 = !DILocalVariable(name: "esf", scope: !6627, file: !6628, line: 1042, type: !2813)
!6654 = !DILocalVariable(name: "esf_copy", scope: !6627, file: !6628, line: 1047, type: !2814)
!6655 = !DILocation(line: 0, scope: !6627)
!6656 = !DILocation(line: 1040, column: 19, scope: !6627)
!6657 = !DILocation(line: 1041, column: 2, scope: !6627)
!6658 = !DILocation(line: 1047, column: 2, scope: !6627)
!6659 = !DILocation(line: 1047, column: 15, scope: !6627)
!6660 = !DILocalVariable(name: "key", arg: 1, scope: !6661, file: !5999, line: 84, type: !32)
!6661 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5999, file: !5999, line: 84, type: !6010, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2785, retainedNodes: !6662)
!6662 = !{!6660}
!6663 = !DILocation(line: 0, scope: !6661, inlinedAt: !6664)
!6664 = distinct !DILocation(line: 1050, column: 2, scope: !6627)
!6665 = !DILocation(line: 95, column: 2, scope: !6661, inlinedAt: !6664)
!6666 = !{i64 2315610}
!6667 = !DILocation(line: 1055, column: 9, scope: !6627)
!6668 = !DILocation(line: 1056, column: 2, scope: !6669)
!6669 = distinct !DILexicalBlock(scope: !6670, file: !6628, line: 1056, column: 2)
!6670 = distinct !DILexicalBlock(scope: !6627, file: !6628, line: 1056, column: 2)
!6671 = !DILocation(line: 1056, column: 2, scope: !6670)
!6672 = !DILocation(line: 1056, column: 2, scope: !6673)
!6673 = distinct !DILexicalBlock(scope: !6669, file: !6628, line: 1056, column: 2)
!6674 = !DILocation(line: 1040, column: 24, scope: !6627)
!6675 = !DILocation(line: 1063, column: 11, scope: !6627)
!6676 = !DILocation(line: 1064, column: 6, scope: !6677)
!6677 = distinct !DILexicalBlock(scope: !6627, file: !6628, line: 1064, column: 6)
!6678 = !{i8 0, i8 2}
!6679 = !DILocation(line: 1064, column: 6, scope: !6627)
!6680 = !DILocation(line: 1070, column: 20, scope: !6627)
!6681 = !DILocation(line: 1070, column: 2, scope: !6627)
!6682 = !DILocation(line: 1089, column: 6, scope: !6683)
!6683 = distinct !DILexicalBlock(scope: !6627, file: !6628, line: 1089, column: 6)
!6684 = !DILocation(line: 0, scope: !6683)
!6685 = !DILocation(line: 1089, column: 6, scope: !6627)
!6686 = !DILocation(line: 1090, column: 28, scope: !6687)
!6687 = distinct !DILexicalBlock(scope: !6688, file: !6628, line: 1090, column: 7)
!6688 = distinct !DILexicalBlock(scope: !6683, file: !6628, line: 1089, column: 18)
!6689 = !DILocation(line: 1090, column: 44, scope: !6687)
!6690 = !DILocation(line: 1090, column: 7, scope: !6688)
!6691 = !DILocation(line: 1091, column: 24, scope: !6692)
!6692 = distinct !DILexicalBlock(scope: !6687, file: !6628, line: 1090, column: 50)
!6693 = !DILocation(line: 1092, column: 3, scope: !6692)
!6694 = !DILocation(line: 1094, column: 23, scope: !6695)
!6695 = distinct !DILexicalBlock(scope: !6683, file: !6628, line: 1093, column: 9)
!6696 = !DILocation(line: 1097, column: 2, scope: !6627)
!6697 = !DILocation(line: 1098, column: 1, scope: !6627)
!6698 = distinct !DISubprogram(name: "get_esf", scope: !6628, file: !6628, line: 894, type: !6699, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2785, retainedNodes: !6702)
!6699 = !DISubroutineType(types: !6700)
!6700 = !{!2813, !152, !152, !152, !6701}
!6701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !145, size: 32)
!6702 = !{!6703, !6704, !6705, !6706, !6707, !6708}
!6703 = !DILocalVariable(name: "msp", arg: 1, scope: !6698, file: !6628, line: 894, type: !152)
!6704 = !DILocalVariable(name: "psp", arg: 2, scope: !6698, file: !6628, line: 894, type: !152)
!6705 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6698, file: !6628, line: 894, type: !152)
!6706 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !6698, file: !6628, line: 895, type: !6701)
!6707 = !DILocalVariable(name: "alternative_state_exc", scope: !6698, file: !6628, line: 897, type: !145)
!6708 = !DILocalVariable(name: "ptr_esf", scope: !6698, file: !6628, line: 898, type: !2813)
!6709 = !DILocation(line: 0, scope: !6698)
!6710 = !DILocation(line: 900, column: 14, scope: !6698)
!6711 = !DILocation(line: 902, column: 49, scope: !6712)
!6712 = distinct !DILexicalBlock(scope: !6698, file: !6628, line: 902, column: 6)
!6713 = !DILocation(line: 902, column: 6, scope: !6698)
!6714 = !DILocation(line: 983, column: 44, scope: !6715)
!6715 = distinct !DILexicalBlock(scope: !6698, file: !6628, line: 983, column: 6)
!6716 = !DILocation(line: 985, column: 3, scope: !6717)
!6717 = distinct !DILexicalBlock(scope: !6718, file: !6628, line: 985, column: 3)
!6718 = distinct !DILexicalBlock(scope: !6719, file: !6628, line: 985, column: 3)
!6719 = distinct !DILexicalBlock(scope: !6720, file: !6628, line: 985, column: 3)
!6720 = distinct !DILexicalBlock(scope: !6721, file: !6628, line: 985, column: 3)
!6721 = distinct !DILexicalBlock(scope: !6715, file: !6628, line: 984, column: 47)
!6722 = !DILocation(line: 986, column: 3, scope: !6721)
!6723 = !DILocation(line: 983, column: 18, scope: !6715)
!6724 = !DILocation(line: 991, column: 7, scope: !6725)
!6725 = distinct !DILexicalBlock(scope: !6726, file: !6628, line: 990, column: 30)
!6726 = distinct !DILexicalBlock(scope: !6698, file: !6628, line: 990, column: 6)
!6727 = !DILocation(line: 998, column: 16, scope: !6728)
!6728 = distinct !DILexicalBlock(scope: !6729, file: !6628, line: 995, column: 10)
!6729 = distinct !DILexicalBlock(scope: !6725, file: !6628, line: 991, column: 7)
!6730 = !DILocation(line: 1002, column: 2, scope: !6698)
!6731 = !DILocation(line: 1003, column: 1, scope: !6698)
!6732 = distinct !DISubprogram(name: "fault_handle", scope: !6628, file: !6628, line: 786, type: !6733, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2785, retainedNodes: !6735)
!6733 = !DISubroutineType(types: !6734)
!6734 = !{!152, !2813, !107, !6701}
!6735 = !{!6736, !6737, !6738, !6739}
!6736 = !DILocalVariable(name: "esf", arg: 1, scope: !6732, file: !6628, line: 786, type: !2813)
!6737 = !DILocalVariable(name: "fault", arg: 2, scope: !6732, file: !6628, line: 786, type: !107)
!6738 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6732, file: !6628, line: 786, type: !6701)
!6739 = !DILocalVariable(name: "reason", scope: !6732, file: !6628, line: 788, type: !152)
!6740 = !DILocation(line: 0, scope: !6732)
!6741 = !DILocation(line: 790, column: 15, scope: !6732)
!6742 = !DILocation(line: 792, column: 2, scope: !6732)
!6743 = !DILocation(line: 794, column: 12, scope: !6744)
!6744 = distinct !DILexicalBlock(scope: !6732, file: !6628, line: 792, column: 17)
!6745 = !DILocation(line: 795, column: 3, scope: !6744)
!6746 = !DILocation(line: 800, column: 12, scope: !6744)
!6747 = !DILocation(line: 801, column: 3, scope: !6744)
!6748 = !DILocation(line: 803, column: 12, scope: !6744)
!6749 = !DILocation(line: 804, column: 3, scope: !6744)
!6750 = !DILocation(line: 806, column: 12, scope: !6744)
!6751 = !DILocation(line: 807, column: 3, scope: !6744)
!6752 = !DILocation(line: 814, column: 3, scope: !6744)
!6753 = !DILocation(line: 815, column: 3, scope: !6744)
!6754 = !DILocation(line: 820, column: 3, scope: !6744)
!6755 = !DILocation(line: 821, column: 3, scope: !6744)
!6756 = !DILocation(line: 829, column: 2, scope: !6732)
!6757 = distinct !DISubprogram(name: "hard_fault", scope: !6628, file: !6628, line: 709, type: !6758, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2785, retainedNodes: !6760)
!6758 = !DISubroutineType(types: !6759)
!6759 = !{!152, !2813, !6701}
!6760 = !{!6761, !6762, !6763}
!6761 = !DILocalVariable(name: "esf", arg: 1, scope: !6757, file: !6628, line: 709, type: !2813)
!6762 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6757, file: !6628, line: 709, type: !6701)
!6763 = !DILocalVariable(name: "reason", scope: !6757, file: !6628, line: 711, type: !152)
!6764 = !DILocation(line: 0, scope: !6757)
!6765 = !DILocation(line: 713, column: 2, scope: !6766)
!6766 = distinct !DILexicalBlock(scope: !6767, file: !6628, line: 713, column: 2)
!6767 = distinct !DILexicalBlock(scope: !6768, file: !6628, line: 713, column: 2)
!6768 = distinct !DILexicalBlock(scope: !6769, file: !6628, line: 713, column: 2)
!6769 = distinct !DILexicalBlock(scope: !6757, file: !6628, line: 713, column: 2)
!6770 = !DILocation(line: 732, column: 15, scope: !6757)
!6771 = !DILocation(line: 734, column: 12, scope: !6772)
!6772 = distinct !DILexicalBlock(scope: !6757, file: !6628, line: 734, column: 6)
!6773 = !DILocation(line: 734, column: 17, scope: !6772)
!6774 = !DILocation(line: 734, column: 41, scope: !6772)
!6775 = !DILocation(line: 734, column: 6, scope: !6757)
!6776 = !DILocation(line: 735, column: 3, scope: !6777)
!6777 = distinct !DILexicalBlock(scope: !6778, file: !6628, line: 735, column: 3)
!6778 = distinct !DILexicalBlock(scope: !6779, file: !6628, line: 735, column: 3)
!6779 = distinct !DILexicalBlock(scope: !6780, file: !6628, line: 735, column: 3)
!6780 = distinct !DILexicalBlock(scope: !6781, file: !6628, line: 735, column: 3)
!6781 = distinct !DILexicalBlock(scope: !6772, file: !6628, line: 734, column: 47)
!6782 = !DILocation(line: 736, column: 2, scope: !6781)
!6783 = !DILocation(line: 736, column: 19, scope: !6784)
!6784 = distinct !DILexicalBlock(scope: !6772, file: !6628, line: 736, column: 13)
!6785 = !DILocation(line: 736, column: 49, scope: !6784)
!6786 = !DILocation(line: 736, column: 13, scope: !6772)
!6787 = !DILocation(line: 737, column: 3, scope: !6788)
!6788 = distinct !DILexicalBlock(scope: !6789, file: !6628, line: 737, column: 3)
!6789 = distinct !DILexicalBlock(scope: !6790, file: !6628, line: 737, column: 3)
!6790 = distinct !DILexicalBlock(scope: !6791, file: !6628, line: 737, column: 3)
!6791 = distinct !DILexicalBlock(scope: !6792, file: !6628, line: 737, column: 3)
!6792 = distinct !DILexicalBlock(scope: !6784, file: !6628, line: 736, column: 55)
!6793 = !DILocation(line: 738, column: 2, scope: !6792)
!6794 = !DILocation(line: 738, column: 19, scope: !6795)
!6795 = distinct !DILexicalBlock(scope: !6784, file: !6628, line: 738, column: 13)
!6796 = !DILocation(line: 738, column: 24, scope: !6795)
!6797 = !DILocation(line: 738, column: 47, scope: !6795)
!6798 = !DILocation(line: 738, column: 13, scope: !6784)
!6799 = !DILocation(line: 739, column: 3, scope: !6800)
!6800 = distinct !DILexicalBlock(scope: !6801, file: !6628, line: 739, column: 3)
!6801 = distinct !DILexicalBlock(scope: !6802, file: !6628, line: 739, column: 3)
!6802 = distinct !DILexicalBlock(scope: !6803, file: !6628, line: 739, column: 3)
!6803 = distinct !DILexicalBlock(scope: !6804, file: !6628, line: 739, column: 3)
!6804 = distinct !DILexicalBlock(scope: !6795, file: !6628, line: 738, column: 53)
!6805 = !DILocation(line: 740, column: 7, scope: !6806)
!6806 = distinct !DILexicalBlock(scope: !6804, file: !6628, line: 740, column: 7)
!6807 = !DILocation(line: 740, column: 7, scope: !6804)
!6808 = !DILocation(line: 741, column: 4, scope: !6809)
!6809 = distinct !DILexicalBlock(scope: !6810, file: !6628, line: 741, column: 4)
!6810 = distinct !DILexicalBlock(scope: !6811, file: !6628, line: 741, column: 4)
!6811 = distinct !DILexicalBlock(scope: !6812, file: !6628, line: 741, column: 4)
!6812 = distinct !DILexicalBlock(scope: !6813, file: !6628, line: 741, column: 4)
!6813 = distinct !DILexicalBlock(scope: !6806, file: !6628, line: 740, column: 38)
!6814 = !DILocation(line: 742, column: 24, scope: !6813)
!6815 = !DILocation(line: 743, column: 3, scope: !6813)
!6816 = !DILocation(line: 743, column: 20, scope: !6817)
!6817 = distinct !DILexicalBlock(scope: !6806, file: !6628, line: 743, column: 14)
!6818 = !DILocation(line: 743, column: 25, scope: !6817)
!6819 = !DILocation(line: 743, column: 52, scope: !6817)
!6820 = !DILocation(line: 743, column: 14, scope: !6806)
!6821 = !DILocation(line: 744, column: 13, scope: !6822)
!6822 = distinct !DILexicalBlock(scope: !6817, file: !6628, line: 743, column: 58)
!6823 = !DILocation(line: 745, column: 3, scope: !6822)
!6824 = !DILocation(line: 745, column: 20, scope: !6825)
!6825 = distinct !DILexicalBlock(scope: !6817, file: !6628, line: 745, column: 14)
!6826 = !DILocation(line: 745, column: 25, scope: !6825)
!6827 = !DILocation(line: 745, column: 52, scope: !6825)
!6828 = !DILocation(line: 745, column: 14, scope: !6817)
!6829 = !DILocation(line: 746, column: 13, scope: !6830)
!6830 = distinct !DILexicalBlock(scope: !6825, file: !6628, line: 745, column: 58)
!6831 = !DILocation(line: 747, column: 3, scope: !6830)
!6832 = !DILocation(line: 747, column: 20, scope: !6833)
!6833 = distinct !DILexicalBlock(scope: !6825, file: !6628, line: 747, column: 14)
!6834 = !DILocation(line: 747, column: 52, scope: !6833)
!6835 = !DILocation(line: 747, column: 14, scope: !6825)
!6836 = !DILocation(line: 748, column: 13, scope: !6837)
!6837 = distinct !DILexicalBlock(scope: !6833, file: !6628, line: 747, column: 58)
!6838 = !DILocation(line: 754, column: 4, scope: !6839)
!6839 = distinct !DILexicalBlock(scope: !6840, file: !6628, line: 754, column: 4)
!6840 = distinct !DILexicalBlock(scope: !6841, file: !6628, line: 754, column: 4)
!6841 = distinct !DILexicalBlock(scope: !6842, file: !6628, line: 754, column: 4)
!6842 = distinct !DILexicalBlock(scope: !6833, file: !6628, line: 753, column: 10)
!6843 = !DILocation(line: 758, column: 3, scope: !6844)
!6844 = distinct !DILexicalBlock(scope: !6845, file: !6628, line: 758, column: 3)
!6845 = distinct !DILexicalBlock(scope: !6846, file: !6628, line: 758, column: 3)
!6846 = distinct !DILexicalBlock(scope: !6847, file: !6628, line: 758, column: 3)
!6847 = distinct !DILexicalBlock(scope: !6795, file: !6628, line: 757, column: 9)
!6848 = !DILocation(line: 766, column: 2, scope: !6757)
!6849 = distinct !DISubprogram(name: "mem_manage_fault", scope: !6628, file: !6628, line: 229, type: !6733, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2785, retainedNodes: !6850)
!6850 = !{!6851, !6852, !6853, !6854, !6855, !6856, !6859}
!6851 = !DILocalVariable(name: "esf", arg: 1, scope: !6849, file: !6628, line: 229, type: !2813)
!6852 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6849, file: !6628, line: 229, type: !107)
!6853 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6849, file: !6628, line: 230, type: !6701)
!6854 = !DILocalVariable(name: "reason", scope: !6849, file: !6628, line: 232, type: !152)
!6855 = !DILocalVariable(name: "mmfar", scope: !6849, file: !6628, line: 233, type: !152)
!6856 = !DILocalVariable(name: "temp", scope: !6857, file: !6628, line: 254, type: !152)
!6857 = distinct !DILexicalBlock(scope: !6858, file: !6628, line: 244, column: 48)
!6858 = distinct !DILexicalBlock(scope: !6849, file: !6628, line: 244, column: 6)
!6859 = !DILocalVariable(name: "min_stack_ptr", scope: !6860, file: !6628, line: 309, type: !152)
!6860 = distinct !DILexicalBlock(scope: !6861, file: !6628, line: 308, column: 43)
!6861 = distinct !DILexicalBlock(scope: !6862, file: !6628, line: 308, column: 7)
!6862 = distinct !DILexicalBlock(scope: !6863, file: !6628, line: 289, column: 40)
!6863 = distinct !DILexicalBlock(scope: !6849, file: !6628, line: 288, column: 6)
!6864 = !DILocation(line: 0, scope: !6849)
!6865 = !DILocation(line: 235, column: 2, scope: !6866)
!6866 = distinct !DILexicalBlock(scope: !6867, file: !6628, line: 235, column: 2)
!6867 = distinct !DILexicalBlock(scope: !6868, file: !6628, line: 235, column: 2)
!6868 = distinct !DILexicalBlock(scope: !6869, file: !6628, line: 235, column: 2)
!6869 = distinct !DILexicalBlock(scope: !6849, file: !6628, line: 235, column: 2)
!6870 = !DILocation(line: 237, column: 12, scope: !6871)
!6871 = distinct !DILexicalBlock(scope: !6849, file: !6628, line: 237, column: 6)
!6872 = !DILocation(line: 237, column: 17, scope: !6871)
!6873 = !DILocation(line: 237, column: 41, scope: !6871)
!6874 = !DILocation(line: 237, column: 6, scope: !6849)
!6875 = !DILocation(line: 238, column: 3, scope: !6876)
!6876 = distinct !DILexicalBlock(scope: !6877, file: !6628, line: 238, column: 3)
!6877 = distinct !DILexicalBlock(scope: !6878, file: !6628, line: 238, column: 3)
!6878 = distinct !DILexicalBlock(scope: !6879, file: !6628, line: 238, column: 3)
!6879 = distinct !DILexicalBlock(scope: !6880, file: !6628, line: 238, column: 3)
!6880 = distinct !DILexicalBlock(scope: !6871, file: !6628, line: 237, column: 47)
!6881 = !DILocation(line: 240, column: 2, scope: !6880)
!6882 = !DILocation(line: 241, column: 12, scope: !6883)
!6883 = distinct !DILexicalBlock(scope: !6849, file: !6628, line: 241, column: 6)
!6884 = !DILocation(line: 241, column: 17, scope: !6883)
!6885 = !DILocation(line: 241, column: 43, scope: !6883)
!6886 = !DILocation(line: 241, column: 6, scope: !6849)
!6887 = !DILocation(line: 242, column: 3, scope: !6888)
!6888 = distinct !DILexicalBlock(scope: !6889, file: !6628, line: 242, column: 3)
!6889 = distinct !DILexicalBlock(scope: !6890, file: !6628, line: 242, column: 3)
!6890 = distinct !DILexicalBlock(scope: !6891, file: !6628, line: 242, column: 3)
!6891 = distinct !DILexicalBlock(scope: !6892, file: !6628, line: 242, column: 3)
!6892 = distinct !DILexicalBlock(scope: !6883, file: !6628, line: 241, column: 49)
!6893 = !DILocation(line: 243, column: 2, scope: !6892)
!6894 = !DILocation(line: 244, column: 12, scope: !6858)
!6895 = !DILocation(line: 244, column: 17, scope: !6858)
!6896 = !DILocation(line: 244, column: 42, scope: !6858)
!6897 = !DILocation(line: 244, column: 6, scope: !6849)
!6898 = !DILocation(line: 245, column: 3, scope: !6899)
!6899 = distinct !DILexicalBlock(scope: !6900, file: !6628, line: 245, column: 3)
!6900 = distinct !DILexicalBlock(scope: !6901, file: !6628, line: 245, column: 3)
!6901 = distinct !DILexicalBlock(scope: !6902, file: !6628, line: 245, column: 3)
!6902 = distinct !DILexicalBlock(scope: !6857, file: !6628, line: 245, column: 3)
!6903 = !DILocation(line: 254, column: 24, scope: !6857)
!6904 = !DILocation(line: 0, scope: !6857)
!6905 = !DILocation(line: 256, column: 13, scope: !6906)
!6906 = distinct !DILexicalBlock(scope: !6857, file: !6628, line: 256, column: 7)
!6907 = !DILocation(line: 256, column: 18, scope: !6906)
!6908 = !DILocation(line: 256, column: 44, scope: !6906)
!6909 = !DILocation(line: 256, column: 7, scope: !6857)
!6910 = !DILocation(line: 258, column: 4, scope: !6911)
!6911 = distinct !DILexicalBlock(scope: !6912, file: !6628, line: 258, column: 4)
!6912 = distinct !DILexicalBlock(scope: !6913, file: !6628, line: 258, column: 4)
!6913 = distinct !DILexicalBlock(scope: !6914, file: !6628, line: 258, column: 4)
!6914 = distinct !DILexicalBlock(scope: !6915, file: !6628, line: 258, column: 4)
!6915 = distinct !DILexicalBlock(scope: !6906, file: !6628, line: 256, column: 50)
!6916 = !DILocation(line: 259, column: 24, scope: !6917)
!6917 = distinct !DILexicalBlock(scope: !6915, file: !6628, line: 259, column: 8)
!6918 = !DILocation(line: 259, column: 8, scope: !6915)
!6919 = !DILocation(line: 261, column: 15, scope: !6920)
!6920 = distinct !DILexicalBlock(scope: !6917, file: !6628, line: 259, column: 30)
!6921 = !DILocation(line: 262, column: 4, scope: !6920)
!6922 = !DILocation(line: 265, column: 12, scope: !6923)
!6923 = distinct !DILexicalBlock(scope: !6849, file: !6628, line: 265, column: 6)
!6924 = !DILocation(line: 265, column: 17, scope: !6923)
!6925 = !DILocation(line: 265, column: 42, scope: !6923)
!6926 = !DILocation(line: 265, column: 6, scope: !6849)
!6927 = !DILocation(line: 266, column: 3, scope: !6928)
!6928 = distinct !DILexicalBlock(scope: !6929, file: !6628, line: 266, column: 3)
!6929 = distinct !DILexicalBlock(scope: !6930, file: !6628, line: 266, column: 3)
!6930 = distinct !DILexicalBlock(scope: !6931, file: !6628, line: 266, column: 3)
!6931 = distinct !DILexicalBlock(scope: !6932, file: !6628, line: 266, column: 3)
!6932 = distinct !DILexicalBlock(scope: !6923, file: !6628, line: 265, column: 48)
!6933 = !DILocation(line: 267, column: 2, scope: !6932)
!6934 = !DILocation(line: 269, column: 12, scope: !6935)
!6935 = distinct !DILexicalBlock(scope: !6849, file: !6628, line: 269, column: 6)
!6936 = !DILocation(line: 269, column: 17, scope: !6935)
!6937 = !DILocation(line: 269, column: 41, scope: !6935)
!6938 = !DILocation(line: 269, column: 6, scope: !6849)
!6939 = !DILocation(line: 270, column: 3, scope: !6940)
!6940 = distinct !DILexicalBlock(scope: !6941, file: !6628, line: 270, column: 3)
!6941 = distinct !DILexicalBlock(scope: !6942, file: !6628, line: 270, column: 3)
!6942 = distinct !DILexicalBlock(scope: !6943, file: !6628, line: 270, column: 3)
!6943 = distinct !DILexicalBlock(scope: !6944, file: !6628, line: 270, column: 3)
!6944 = distinct !DILexicalBlock(scope: !6935, file: !6628, line: 269, column: 47)
!6945 = !DILocation(line: 272, column: 2, scope: !6944)
!6946 = !DILocation(line: 288, column: 12, scope: !6863)
!6947 = !DILocation(line: 288, column: 17, scope: !6863)
!6948 = !DILocation(line: 288, column: 41, scope: !6863)
!6949 = !DILocation(line: 289, column: 9, scope: !6863)
!6950 = !DILocation(line: 289, column: 14, scope: !6863)
!6951 = !DILocation(line: 288, column: 6, scope: !6849)
!6952 = !DILocation(line: 308, column: 12, scope: !6861)
!6953 = !DILocation(line: 308, column: 17, scope: !6861)
!6954 = !DILocation(line: 308, column: 7, scope: !6862)
!6955 = !DILocation(line: 310, column: 6, scope: !6860)
!6956 = !DILocation(line: 309, column: 29, scope: !6860)
!6957 = !DILocation(line: 0, scope: !6860)
!6958 = !DILocation(line: 312, column: 8, scope: !6959)
!6959 = distinct !DILexicalBlock(scope: !6860, file: !6628, line: 312, column: 8)
!6960 = !DILocation(line: 312, column: 8, scope: !6860)
!6961 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !6962, file: !6318, line: 1099, type: !152)
!6962 = distinct !DISubprogram(name: "__set_PSP", scope: !6318, file: !6318, line: 1099, type: !6415, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2785, retainedNodes: !6963)
!6963 = !{!6961}
!6964 = !DILocation(line: 0, scope: !6962, inlinedAt: !6965)
!6965 = distinct !DILocation(line: 338, column: 5, scope: !6966)
!6966 = distinct !DILexicalBlock(scope: !6959, file: !6628, line: 312, column: 23)
!6967 = !DILocation(line: 1101, column: 3, scope: !6962, inlinedAt: !6965)
!6968 = !{i64 3762834}
!6969 = !DILocation(line: 341, column: 4, scope: !6966)
!6970 = !DILocation(line: 342, column: 5, scope: !6971)
!6971 = distinct !DILexicalBlock(scope: !6972, file: !6628, line: 342, column: 5)
!6972 = distinct !DILexicalBlock(scope: !6973, file: !6628, line: 342, column: 5)
!6973 = distinct !DILexicalBlock(scope: !6959, file: !6628, line: 341, column: 11)
!6974 = !DILocation(line: 342, column: 5, scope: !6972)
!6975 = !DILocation(line: 342, column: 5, scope: !6976)
!6976 = distinct !DILexicalBlock(scope: !6971, file: !6628, line: 342, column: 5)
!6977 = !DILocation(line: 360, column: 12, scope: !6978)
!6978 = distinct !DILexicalBlock(scope: !6849, file: !6628, line: 360, column: 6)
!6979 = !DILocation(line: 360, column: 17, scope: !6978)
!6980 = !DILocation(line: 360, column: 41, scope: !6978)
!6981 = !DILocation(line: 360, column: 6, scope: !6849)
!6982 = !DILocation(line: 361, column: 14, scope: !6983)
!6983 = distinct !DILexicalBlock(scope: !6978, file: !6628, line: 360, column: 47)
!6984 = !DILocation(line: 362, column: 2, scope: !6983)
!6985 = !DILocation(line: 366, column: 12, scope: !6849)
!6986 = !DILocation(line: 369, column: 15, scope: !6849)
!6987 = !DILocation(line: 371, column: 2, scope: !6849)
!6988 = distinct !DISubprogram(name: "bus_fault", scope: !6628, file: !6628, line: 383, type: !6989, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2785, retainedNodes: !6991)
!6989 = !DISubroutineType(types: !6990)
!6990 = !{!107, !2813, !107, !6701}
!6991 = !{!6992, !6993, !6994, !6995, !6996}
!6992 = !DILocalVariable(name: "esf", arg: 1, scope: !6988, file: !6628, line: 383, type: !2813)
!6993 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6988, file: !6628, line: 383, type: !107)
!6994 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6988, file: !6628, line: 383, type: !6701)
!6995 = !DILocalVariable(name: "reason", scope: !6988, file: !6628, line: 385, type: !152)
!6996 = !DILocalVariable(name: "bfar", scope: !6997, file: !6628, line: 405, type: !152)
!6997 = distinct !DILexicalBlock(scope: !6998, file: !6628, line: 395, column: 42)
!6998 = distinct !DILexicalBlock(scope: !6988, file: !6628, line: 395, column: 6)
!6999 = !DILocation(line: 0, scope: !6988)
!7000 = !DILocation(line: 387, column: 2, scope: !7001)
!7001 = distinct !DILexicalBlock(scope: !7002, file: !6628, line: 387, column: 2)
!7002 = distinct !DILexicalBlock(scope: !7003, file: !6628, line: 387, column: 2)
!7003 = distinct !DILexicalBlock(scope: !7004, file: !6628, line: 387, column: 2)
!7004 = distinct !DILexicalBlock(scope: !6988, file: !6628, line: 387, column: 2)
!7005 = !DILocation(line: 389, column: 11, scope: !7006)
!7006 = distinct !DILexicalBlock(scope: !6988, file: !6628, line: 389, column: 6)
!7007 = !DILocation(line: 389, column: 16, scope: !7006)
!7008 = !DILocation(line: 389, column: 6, scope: !6988)
!7009 = !DILocation(line: 390, column: 3, scope: !7010)
!7010 = distinct !DILexicalBlock(scope: !7011, file: !6628, line: 390, column: 3)
!7011 = distinct !DILexicalBlock(scope: !7012, file: !6628, line: 390, column: 3)
!7012 = distinct !DILexicalBlock(scope: !7013, file: !6628, line: 390, column: 3)
!7013 = distinct !DILexicalBlock(scope: !7014, file: !6628, line: 390, column: 3)
!7014 = distinct !DILexicalBlock(scope: !7006, file: !6628, line: 389, column: 39)
!7015 = !DILocation(line: 391, column: 2, scope: !7014)
!7016 = !DILocation(line: 392, column: 11, scope: !7017)
!7017 = distinct !DILexicalBlock(scope: !6988, file: !6628, line: 392, column: 6)
!7018 = !DILocation(line: 392, column: 16, scope: !7017)
!7019 = !DILocation(line: 392, column: 6, scope: !6988)
!7020 = !DILocation(line: 393, column: 3, scope: !7021)
!7021 = distinct !DILexicalBlock(scope: !7022, file: !6628, line: 393, column: 3)
!7022 = distinct !DILexicalBlock(scope: !7023, file: !6628, line: 393, column: 3)
!7023 = distinct !DILexicalBlock(scope: !7024, file: !6628, line: 393, column: 3)
!7024 = distinct !DILexicalBlock(scope: !7025, file: !6628, line: 393, column: 3)
!7025 = distinct !DILexicalBlock(scope: !7017, file: !6628, line: 392, column: 41)
!7026 = !DILocation(line: 394, column: 2, scope: !7025)
!7027 = !DILocation(line: 395, column: 11, scope: !6998)
!7028 = !DILocation(line: 395, column: 16, scope: !6998)
!7029 = !DILocation(line: 395, column: 6, scope: !6988)
!7030 = !DILocation(line: 396, column: 3, scope: !7031)
!7031 = distinct !DILexicalBlock(scope: !7032, file: !6628, line: 396, column: 3)
!7032 = distinct !DILexicalBlock(scope: !7033, file: !6628, line: 396, column: 3)
!7033 = distinct !DILexicalBlock(scope: !7034, file: !6628, line: 396, column: 3)
!7034 = distinct !DILexicalBlock(scope: !6997, file: !6628, line: 396, column: 3)
!7035 = !DILocation(line: 405, column: 3, scope: !6997)
!7036 = !DILocation(line: 0, scope: !6997)
!7037 = !DILocation(line: 407, column: 13, scope: !7038)
!7038 = distinct !DILexicalBlock(scope: !6997, file: !6628, line: 407, column: 7)
!7039 = !DILocation(line: 407, column: 18, scope: !7038)
!7040 = !DILocation(line: 407, column: 44, scope: !7038)
!7041 = !DILocation(line: 407, column: 7, scope: !6997)
!7042 = !DILocation(line: 408, column: 4, scope: !7043)
!7043 = distinct !DILexicalBlock(scope: !7044, file: !6628, line: 408, column: 4)
!7044 = distinct !DILexicalBlock(scope: !7045, file: !6628, line: 408, column: 4)
!7045 = distinct !DILexicalBlock(scope: !7046, file: !6628, line: 408, column: 4)
!7046 = distinct !DILexicalBlock(scope: !7047, file: !6628, line: 408, column: 4)
!7047 = distinct !DILexicalBlock(scope: !7038, file: !6628, line: 407, column: 50)
!7048 = !DILocation(line: 409, column: 24, scope: !7049)
!7049 = distinct !DILexicalBlock(scope: !7047, file: !6628, line: 409, column: 8)
!7050 = !DILocation(line: 409, column: 8, scope: !7047)
!7051 = !DILocation(line: 411, column: 15, scope: !7052)
!7052 = distinct !DILexicalBlock(scope: !7049, file: !6628, line: 409, column: 30)
!7053 = !DILocation(line: 412, column: 4, scope: !7052)
!7054 = !DILocation(line: 415, column: 11, scope: !7055)
!7055 = distinct !DILexicalBlock(scope: !6988, file: !6628, line: 415, column: 6)
!7056 = !DILocation(line: 415, column: 16, scope: !7055)
!7057 = !DILocation(line: 415, column: 6, scope: !6988)
!7058 = !DILocation(line: 416, column: 3, scope: !7059)
!7059 = distinct !DILexicalBlock(scope: !7060, file: !6628, line: 416, column: 3)
!7060 = distinct !DILexicalBlock(scope: !7061, file: !6628, line: 416, column: 3)
!7061 = distinct !DILexicalBlock(scope: !7062, file: !6628, line: 416, column: 3)
!7062 = distinct !DILexicalBlock(scope: !7063, file: !6628, line: 416, column: 3)
!7063 = distinct !DILexicalBlock(scope: !7055, file: !6628, line: 415, column: 44)
!7064 = !DILocation(line: 417, column: 2, scope: !7063)
!7065 = !DILocation(line: 418, column: 12, scope: !7066)
!7066 = distinct !DILexicalBlock(scope: !6988, file: !6628, line: 418, column: 6)
!7067 = !DILocation(line: 418, column: 17, scope: !7066)
!7068 = !DILocation(line: 418, column: 41, scope: !7066)
!7069 = !DILocation(line: 418, column: 6, scope: !6988)
!7070 = !DILocation(line: 423, column: 18, scope: !7071)
!7071 = distinct !DILexicalBlock(scope: !7066, file: !6628, line: 423, column: 13)
!7072 = !DILocation(line: 423, column: 23, scope: !7071)
!7073 = !DILocation(line: 423, column: 13, scope: !7066)
!7074 = !DILocation(line: 0, scope: !7066)
!7075 = !DILocation(line: 524, column: 12, scope: !6988)
!7076 = !DILocation(line: 526, column: 15, scope: !6988)
!7077 = !DILocation(line: 528, column: 2, scope: !6988)
!7078 = distinct !DISubprogram(name: "usage_fault", scope: !6628, file: !6628, line: 539, type: !7079, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2785, retainedNodes: !7083)
!7079 = !DISubroutineType(types: !7080)
!7080 = !{!152, !7081}
!7081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7082, size: 32)
!7082 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2814)
!7083 = !{!7084, !7085}
!7084 = !DILocalVariable(name: "esf", arg: 1, scope: !7078, file: !6628, line: 539, type: !7081)
!7085 = !DILocalVariable(name: "reason", scope: !7078, file: !6628, line: 541, type: !152)
!7086 = !DILocation(line: 0, scope: !7078)
!7087 = !DILocation(line: 543, column: 2, scope: !7088)
!7088 = distinct !DILexicalBlock(scope: !7089, file: !6628, line: 543, column: 2)
!7089 = distinct !DILexicalBlock(scope: !7090, file: !6628, line: 543, column: 2)
!7090 = distinct !DILexicalBlock(scope: !7091, file: !6628, line: 543, column: 2)
!7091 = distinct !DILexicalBlock(scope: !7078, file: !6628, line: 543, column: 2)
!7092 = !DILocation(line: 546, column: 12, scope: !7093)
!7093 = distinct !DILexicalBlock(scope: !7078, file: !6628, line: 546, column: 6)
!7094 = !DILocation(line: 546, column: 17, scope: !7093)
!7095 = !DILocation(line: 546, column: 43, scope: !7093)
!7096 = !DILocation(line: 546, column: 6, scope: !7078)
!7097 = !DILocation(line: 547, column: 3, scope: !7098)
!7098 = distinct !DILexicalBlock(scope: !7099, file: !6628, line: 547, column: 3)
!7099 = distinct !DILexicalBlock(scope: !7100, file: !6628, line: 547, column: 3)
!7100 = distinct !DILexicalBlock(scope: !7101, file: !6628, line: 547, column: 3)
!7101 = distinct !DILexicalBlock(scope: !7102, file: !6628, line: 547, column: 3)
!7102 = distinct !DILexicalBlock(scope: !7093, file: !6628, line: 546, column: 49)
!7103 = !DILocation(line: 548, column: 2, scope: !7102)
!7104 = !DILocation(line: 549, column: 12, scope: !7105)
!7105 = distinct !DILexicalBlock(scope: !7078, file: !6628, line: 549, column: 6)
!7106 = !DILocation(line: 549, column: 17, scope: !7105)
!7107 = !DILocation(line: 549, column: 43, scope: !7105)
!7108 = !DILocation(line: 549, column: 6, scope: !7078)
!7109 = !DILocation(line: 550, column: 3, scope: !7110)
!7110 = distinct !DILexicalBlock(scope: !7111, file: !6628, line: 550, column: 3)
!7111 = distinct !DILexicalBlock(scope: !7112, file: !6628, line: 550, column: 3)
!7112 = distinct !DILexicalBlock(scope: !7113, file: !6628, line: 550, column: 3)
!7113 = distinct !DILexicalBlock(scope: !7114, file: !6628, line: 550, column: 3)
!7114 = distinct !DILexicalBlock(scope: !7105, file: !6628, line: 549, column: 49)
!7115 = !DILocation(line: 551, column: 2, scope: !7114)
!7116 = !DILocation(line: 567, column: 12, scope: !7117)
!7117 = distinct !DILexicalBlock(scope: !7078, file: !6628, line: 567, column: 6)
!7118 = !DILocation(line: 567, column: 17, scope: !7117)
!7119 = !DILocation(line: 567, column: 38, scope: !7117)
!7120 = !DILocation(line: 567, column: 6, scope: !7078)
!7121 = !DILocation(line: 568, column: 3, scope: !7122)
!7122 = distinct !DILexicalBlock(scope: !7123, file: !6628, line: 568, column: 3)
!7123 = distinct !DILexicalBlock(scope: !7124, file: !6628, line: 568, column: 3)
!7124 = distinct !DILexicalBlock(scope: !7125, file: !6628, line: 568, column: 3)
!7125 = distinct !DILexicalBlock(scope: !7126, file: !6628, line: 568, column: 3)
!7126 = distinct !DILexicalBlock(scope: !7117, file: !6628, line: 567, column: 44)
!7127 = !DILocation(line: 569, column: 2, scope: !7126)
!7128 = !DILocation(line: 570, column: 12, scope: !7129)
!7129 = distinct !DILexicalBlock(scope: !7078, file: !6628, line: 570, column: 6)
!7130 = !DILocation(line: 570, column: 17, scope: !7129)
!7131 = !DILocation(line: 570, column: 39, scope: !7129)
!7132 = !DILocation(line: 570, column: 6, scope: !7078)
!7133 = !DILocation(line: 571, column: 3, scope: !7134)
!7134 = distinct !DILexicalBlock(scope: !7135, file: !6628, line: 571, column: 3)
!7135 = distinct !DILexicalBlock(scope: !7136, file: !6628, line: 571, column: 3)
!7136 = distinct !DILexicalBlock(scope: !7137, file: !6628, line: 571, column: 3)
!7137 = distinct !DILexicalBlock(scope: !7138, file: !6628, line: 571, column: 3)
!7138 = distinct !DILexicalBlock(scope: !7129, file: !6628, line: 570, column: 45)
!7139 = !DILocation(line: 572, column: 2, scope: !7138)
!7140 = !DILocation(line: 573, column: 12, scope: !7141)
!7141 = distinct !DILexicalBlock(scope: !7078, file: !6628, line: 573, column: 6)
!7142 = !DILocation(line: 573, column: 17, scope: !7141)
!7143 = !DILocation(line: 573, column: 42, scope: !7141)
!7144 = !DILocation(line: 573, column: 6, scope: !7078)
!7145 = !DILocation(line: 574, column: 3, scope: !7146)
!7146 = distinct !DILexicalBlock(scope: !7147, file: !6628, line: 574, column: 3)
!7147 = distinct !DILexicalBlock(scope: !7148, file: !6628, line: 574, column: 3)
!7148 = distinct !DILexicalBlock(scope: !7149, file: !6628, line: 574, column: 3)
!7149 = distinct !DILexicalBlock(scope: !7150, file: !6628, line: 574, column: 3)
!7150 = distinct !DILexicalBlock(scope: !7141, file: !6628, line: 573, column: 48)
!7151 = !DILocation(line: 575, column: 2, scope: !7150)
!7152 = !DILocation(line: 576, column: 12, scope: !7153)
!7153 = distinct !DILexicalBlock(scope: !7078, file: !6628, line: 576, column: 6)
!7154 = !DILocation(line: 576, column: 17, scope: !7153)
!7155 = !DILocation(line: 576, column: 44, scope: !7153)
!7156 = !DILocation(line: 576, column: 6, scope: !7078)
!7157 = !DILocation(line: 577, column: 3, scope: !7158)
!7158 = distinct !DILexicalBlock(scope: !7159, file: !6628, line: 577, column: 3)
!7159 = distinct !DILexicalBlock(scope: !7160, file: !6628, line: 577, column: 3)
!7160 = distinct !DILexicalBlock(scope: !7161, file: !6628, line: 577, column: 3)
!7161 = distinct !DILexicalBlock(scope: !7162, file: !6628, line: 577, column: 3)
!7162 = distinct !DILexicalBlock(scope: !7153, file: !6628, line: 576, column: 50)
!7163 = !DILocation(line: 578, column: 2, scope: !7162)
!7164 = !DILocation(line: 581, column: 12, scope: !7078)
!7165 = !DILocation(line: 583, column: 2, scope: !7078)
!7166 = distinct !DISubprogram(name: "debug_monitor", scope: !6628, file: !6628, line: 632, type: !7167, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2785, retainedNodes: !7169)
!7167 = !DISubroutineType(types: !7168)
!7168 = !{null, !2813, !6701}
!7169 = !{!7170, !7171}
!7170 = !DILocalVariable(name: "esf", arg: 1, scope: !7166, file: !6628, line: 632, type: !2813)
!7171 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7166, file: !6628, line: 632, type: !6701)
!7172 = !DILocation(line: 0, scope: !7166)
!7173 = !DILocation(line: 634, column: 15, scope: !7166)
!7174 = !DILocation(line: 636, column: 2, scope: !7175)
!7175 = distinct !DILexicalBlock(scope: !7176, file: !6628, line: 636, column: 2)
!7176 = distinct !DILexicalBlock(scope: !7177, file: !6628, line: 636, column: 2)
!7177 = distinct !DILexicalBlock(scope: !7178, file: !6628, line: 636, column: 2)
!7178 = distinct !DILexicalBlock(scope: !7166, file: !6628, line: 636, column: 2)
!7179 = !DILocation(line: 652, column: 1, scope: !7166)
!7180 = distinct !DISubprogram(name: "reserved_exception", scope: !6628, file: !6628, line: 776, type: !7181, scopeLine: 777, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2785, retainedNodes: !7183)
!7181 = !DISubroutineType(types: !7182)
!7182 = !{null, !7081, !107}
!7183 = !{!7184, !7185}
!7184 = !DILocalVariable(name: "esf", arg: 1, scope: !7180, file: !6628, line: 776, type: !7081)
!7185 = !DILocalVariable(name: "fault", arg: 2, scope: !7180, file: !6628, line: 776, type: !107)
!7186 = !DILocation(line: 0, scope: !7180)
!7187 = !DILocation(line: 780, column: 2, scope: !7188)
!7188 = distinct !DILexicalBlock(scope: !7189, file: !6628, line: 780, column: 2)
!7189 = distinct !DILexicalBlock(scope: !7190, file: !6628, line: 780, column: 2)
!7190 = distinct !DILexicalBlock(scope: !7191, file: !6628, line: 780, column: 2)
!7191 = distinct !DILexicalBlock(scope: !7180, file: !6628, line: 780, column: 2)
!7192 = !DILocation(line: 783, column: 1, scope: !7180)
!7193 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !6628, file: !6628, line: 658, type: !7194, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2785, retainedNodes: !7196)
!7194 = !DISubroutineType(types: !7195)
!7195 = !{!145, !2813}
!7196 = !{!7197, !7198, !7199}
!7197 = !DILocalVariable(name: "esf", arg: 1, scope: !7193, file: !6628, line: 658, type: !2813)
!7198 = !DILocalVariable(name: "ret_addr", scope: !7193, file: !6628, line: 660, type: !2856)
!7199 = !DILocalVariable(name: "fault_insn", scope: !7193, file: !6628, line: 686, type: !197)
!7200 = !DILocation(line: 0, scope: !7193)
!7201 = !DILocation(line: 660, column: 46, scope: !7193)
!7202 = !DILocation(line: 660, column: 23, scope: !7193)
!7203 = !DILocation(line: 682, column: 11, scope: !7193)
!7204 = !DILocation(line: 271, column: 3, scope: !7205, inlinedAt: !7206)
!7205 = distinct !DISubprogram(name: "__DSB", scope: !6318, file: !6318, line: 269, type: !3148, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2785, retainedNodes: !2236)
!7206 = distinct !DILocation(line: 683, column: 2, scope: !7193)
!7207 = !{i64 3738969}
!7208 = !DILocation(line: 260, column: 3, scope: !7209, inlinedAt: !7210)
!7209 = distinct !DISubprogram(name: "__ISB", scope: !6318, file: !6318, line: 258, type: !3148, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2785, retainedNodes: !2236)
!7210 = distinct !DILocation(line: 684, column: 2, scope: !7193)
!7211 = !{i64 3738686}
!7212 = !DILocation(line: 686, column: 35, scope: !7193)
!7213 = !DILocation(line: 686, column: 24, scope: !7193)
!7214 = !DILocation(line: 688, column: 11, scope: !7193)
!7215 = !DILocation(line: 271, column: 3, scope: !7205, inlinedAt: !7216)
!7216 = distinct !DILocation(line: 689, column: 2, scope: !7193)
!7217 = !DILocation(line: 260, column: 3, scope: !7209, inlinedAt: !7218)
!7218 = distinct !DILocation(line: 690, column: 2, scope: !7193)
!7219 = !DILocation(line: 693, column: 45, scope: !7220)
!7220 = distinct !DILexicalBlock(scope: !7193, file: !6628, line: 693, column: 6)
!7221 = !DILocation(line: 699, column: 1, scope: !7193)
!7222 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !6628, file: !6628, line: 1107, type: !3148, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2785, retainedNodes: !2236)
!7223 = !DILocation(line: 1111, column: 11, scope: !7222)
!7224 = !DILocation(line: 1136, column: 1, scope: !7222)
!7225 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !7226, file: !7226, line: 26, type: !3148, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2857, retainedNodes: !7227)
!7226 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7227 = !{!7228}
!7228 = !DILocalVariable(name: "irq", scope: !7225, file: !7226, line: 28, type: !107)
!7229 = !DILocation(line: 0, scope: !7225)
!7230 = !DILocation(line: 30, column: 2, scope: !7231)
!7231 = distinct !DILexicalBlock(scope: !7225, file: !7226, line: 30, column: 2)
!7232 = !DILocation(line: 31, column: 3, scope: !7233)
!7233 = distinct !DILexicalBlock(scope: !7234, file: !7226, line: 30, column: 39)
!7234 = distinct !DILexicalBlock(scope: !7231, file: !7226, line: 30, column: 2)
!7235 = !DILocation(line: 30, column: 35, scope: !7234)
!7236 = !DILocation(line: 30, column: 13, scope: !7234)
!7237 = distinct !{!7237, !7230, !7238}
!7238 = !DILocation(line: 32, column: 2, scope: !7231)
!7239 = !DILocation(line: 33, column: 1, scope: !7225)
!7240 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !463, file: !463, line: 1814, type: !6358, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2857, retainedNodes: !7241)
!7241 = !{!7242, !7243}
!7242 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7240, file: !463, line: 1814, type: !930)
!7243 = !DILocalVariable(name: "priority", arg: 2, scope: !7240, file: !463, line: 1814, type: !152)
!7244 = !DILocation(line: 0, scope: !7240)
!7245 = !DILocation(line: 1816, column: 7, scope: !7240)
!7246 = !DILocation(line: 0, scope: !7247)
!7247 = distinct !DILexicalBlock(scope: !7240, file: !463, line: 1816, column: 7)
!7248 = !DILocation(line: 1824, column: 1, scope: !7240)
!7249 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !7250, file: !7250, line: 27, type: !7251, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2902, retainedNodes: !7357)
!7250 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7251 = !DISubroutineType(types: !7252)
!7252 = !{null, !7253}
!7253 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !309, line: 347, baseType: !7254)
!7254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7255, size: 32)
!7255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !7256)
!7256 = !{!7257, !7315, !7327, !7328, !7329, !7330, !7331, !7337, !7352}
!7257 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7255, file: !309, line: 247, baseType: !7258, size: 384)
!7258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !7259)
!7259 = !{!7260, !7284, !7291, !7292, !7293, !7302, !7303, !7304}
!7260 = !DIDerivedType(tag: DW_TAG_member, scope: !7258, file: !309, line: 60, baseType: !7261, size: 64)
!7261 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7258, file: !309, line: 60, size: 64, elements: !7262)
!7262 = !{!7263, !7278}
!7263 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7261, file: !309, line: 61, baseType: !7264, size: 64)
!7264 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !7265)
!7265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !7266)
!7266 = !{!7267, !7273}
!7267 = !DIDerivedType(tag: DW_TAG_member, scope: !7265, file: !319, line: 38, baseType: !7268, size: 32)
!7268 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7265, file: !319, line: 38, size: 32, elements: !7269)
!7269 = !{!7270, !7272}
!7270 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7268, file: !319, line: 39, baseType: !7271, size: 32)
!7271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7265, size: 32)
!7272 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7268, file: !319, line: 40, baseType: !7271, size: 32)
!7273 = !DIDerivedType(tag: DW_TAG_member, scope: !7265, file: !319, line: 42, baseType: !7274, size: 32, offset: 32)
!7274 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7265, file: !319, line: 42, size: 32, elements: !7275)
!7275 = !{!7276, !7277}
!7276 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7274, file: !319, line: 43, baseType: !7271, size: 32)
!7277 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7274, file: !319, line: 44, baseType: !7271, size: 32)
!7278 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7261, file: !309, line: 62, baseType: !7279, size: 64)
!7279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !7280)
!7280 = !{!7281}
!7281 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7279, file: !335, line: 50, baseType: !7282, size: 64)
!7282 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7283, size: 64, elements: !340)
!7283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7279, size: 32)
!7284 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7258, file: !309, line: 68, baseType: !7285, size: 32, offset: 64)
!7285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7286, size: 32)
!7286 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !7287)
!7287 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !7288)
!7288 = !{!7289}
!7289 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7287, file: !345, line: 232, baseType: !7290, size: 64)
!7290 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !7265)
!7291 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7258, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!7292 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7258, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!7293 = !DIDerivedType(tag: DW_TAG_member, scope: !7258, file: !309, line: 90, baseType: !7294, size: 16, offset: 112)
!7294 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7258, file: !309, line: 90, size: 16, elements: !7295)
!7295 = !{!7296, !7301}
!7296 = !DIDerivedType(tag: DW_TAG_member, scope: !7294, file: !309, line: 91, baseType: !7297, size: 16)
!7297 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7294, file: !309, line: 91, size: 16, elements: !7298)
!7298 = !{!7299, !7300}
!7299 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7297, file: !309, line: 96, baseType: !359, size: 8)
!7300 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7297, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!7301 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7294, file: !309, line: 100, baseType: !197, size: 16)
!7302 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7258, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!7303 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7258, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!7304 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7258, file: !309, line: 131, baseType: !7305, size: 192, offset: 192)
!7305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !7306)
!7306 = !{!7307, !7308, !7314}
!7307 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7305, file: !345, line: 245, baseType: !7264, size: 64)
!7308 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7305, file: !345, line: 246, baseType: !7309, size: 32, offset: 64)
!7309 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !7310)
!7310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7311, size: 32)
!7311 = !DISubroutineType(types: !7312)
!7312 = !{null, !7313}
!7313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7305, size: 32)
!7314 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7305, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!7315 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7255, file: !309, line: 250, baseType: !7316, size: 288, offset: 384)
!7316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !7317)
!7317 = !{!7318, !7319, !7320, !7321, !7322, !7323, !7324, !7325, !7326}
!7318 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7316, file: !379, line: 26, baseType: !152, size: 32)
!7319 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7316, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!7320 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7316, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!7321 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7316, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!7322 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7316, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!7323 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7316, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!7324 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7316, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!7325 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7316, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!7326 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7316, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!7327 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7255, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!7328 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7255, file: !309, line: 256, baseType: !7286, size: 64, offset: 704)
!7329 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7255, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!7330 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7255, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!7331 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7255, file: !309, line: 300, baseType: !7332, size: 96, offset: 1056)
!7332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !7333)
!7333 = !{!7334, !7335, !7336}
!7334 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7332, file: !309, line: 153, baseType: !22, size: 32)
!7335 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7332, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!7336 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7332, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!7337 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7255, file: !309, line: 325, baseType: !7338, size: 32, offset: 1152)
!7338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7339, size: 32)
!7339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !7340)
!7340 = !{!7341, !7347, !7348}
!7341 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7339, file: !406, line: 5074, baseType: !7342, size: 96)
!7342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !7343)
!7343 = !{!7344, !7345, !7346}
!7344 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7342, file: !410, line: 57, baseType: !413, size: 32)
!7345 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7342, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!7346 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7342, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!7347 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7339, file: !406, line: 5075, baseType: !7286, size: 64, offset: 96)
!7348 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7339, file: !406, line: 5076, baseType: !7349, size: 32, offset: 160)
!7349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !7350)
!7350 = !{!7351}
!7351 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !7349, file: !420, line: 52, baseType: !22, size: 32)
!7352 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7255, file: !309, line: 343, baseType: !7353, size: 64, offset: 1184)
!7353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !7354)
!7354 = !{!7355, !7356}
!7355 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7353, file: !379, line: 63, baseType: !152, size: 32)
!7356 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7353, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!7357 = !{!7358}
!7358 = !DILocalVariable(name: "thread", arg: 1, scope: !7249, file: !7250, line: 27, type: !7253)
!7359 = !DILocation(line: 0, scope: !7249)
!7360 = !DILocation(line: 29, column: 6, scope: !7361)
!7361 = distinct !DILexicalBlock(scope: !7249, file: !7250, line: 29, column: 6)
!7362 = !DILocation(line: 29, column: 15, scope: !7361)
!7363 = !DILocation(line: 29, column: 6, scope: !7249)
!7364 = !DILocation(line: 1031, column: 3, scope: !7365, inlinedAt: !7368)
!7365 = distinct !DISubprogram(name: "__get_IPSR", scope: !6318, file: !6318, line: 1027, type: !6405, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2902, retainedNodes: !7366)
!7366 = !{!7367}
!7367 = !DILocalVariable(name: "result", scope: !7365, file: !6318, line: 1029, type: !152)
!7368 = distinct !DILocation(line: 48, column: 10, scope: !7369, inlinedAt: !7373)
!7369 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7370, file: !7370, line: 46, type: !7371, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2902, retainedNodes: !2236)
!7370 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7371 = !DISubroutineType(types: !7372)
!7372 = !{!145}
!7373 = distinct !DILocation(line: 30, column: 7, scope: !7374)
!7374 = distinct !DILexicalBlock(scope: !7375, file: !7250, line: 30, column: 7)
!7375 = distinct !DILexicalBlock(scope: !7361, file: !7250, line: 29, column: 26)
!7376 = !{i64 3727817}
!7377 = !DILocation(line: 0, scope: !7365, inlinedAt: !7368)
!7378 = !DILocation(line: 48, column: 9, scope: !7369, inlinedAt: !7373)
!7379 = !DILocation(line: 30, column: 7, scope: !7375)
!7380 = !DILocation(line: 42, column: 14, scope: !7381)
!7381 = distinct !DILexicalBlock(scope: !7374, file: !7250, line: 30, column: 25)
!7382 = !DILocation(line: 48, column: 15, scope: !7381)
!7383 = !DILocation(line: 49, column: 3, scope: !7381)
!7384 = !DILocation(line: 52, column: 2, scope: !7249)
!7385 = !DILocation(line: 53, column: 1, scope: !7249)
!7386 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !304, file: !304, line: 127, type: !3148, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !2236)
!7387 = !DILocation(line: 134, column: 2, scope: !7386)
!7388 = !DILocation(line: 156, column: 1, scope: !7386)
!7389 = !DILocation(line: 0, scope: !303)
!7390 = !DILocation(line: 289, column: 36, scope: !7391)
!7391 = distinct !DILexicalBlock(scope: !303, file: !304, line: 285, column: 2)
!7392 = !DILocation(line: 289, column: 42, scope: !7391)
!7393 = !DILocation(line: 300, column: 36, scope: !303)
!7394 = !DILocation(line: 301, column: 35, scope: !303)
!7395 = !DILocation(line: 302, column: 37, scope: !303)
!7396 = !DILocation(line: 311, column: 2, scope: !303)
!7397 = !DILocation(line: 316, column: 1, scope: !303)
!7398 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !491, file: !491, line: 180, type: !3148, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !2236)
!7399 = !DILocation(line: 188, column: 12, scope: !7398)
!7400 = !DILocation(line: 271, column: 3, scope: !7401, inlinedAt: !7402)
!7401 = distinct !DISubprogram(name: "__DSB", scope: !6318, file: !6318, line: 269, type: !3148, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !2236)
!7402 = distinct !DILocation(line: 192, column: 2, scope: !7398)
!7403 = !{i64 3918707}
!7404 = !DILocation(line: 260, column: 3, scope: !7405, inlinedAt: !7406)
!7405 = distinct !DISubprogram(name: "__ISB", scope: !6318, file: !6318, line: 258, type: !3148, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !2236)
!7406 = distinct !DILocation(line: 193, column: 2, scope: !7398)
!7407 = !{i64 3918424}
!7408 = !DILocation(line: 194, column: 1, scope: !7398)
!7409 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !491, file: !491, line: 199, type: !3148, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !2236)
!7410 = !DILocation(line: 282, column: 3, scope: !7411, inlinedAt: !7412)
!7411 = distinct !DISubprogram(name: "__DMB", scope: !6318, file: !6318, line: 280, type: !3148, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !2236)
!7412 = distinct !DILocation(line: 202, column: 2, scope: !7409)
!7413 = !{i64 3918983}
!7414 = !DILocation(line: 205, column: 12, scope: !7409)
!7415 = !DILocation(line: 206, column: 1, scope: !7409)
!7416 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !491, file: !491, line: 275, type: !7417, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7430)
!7417 = !DISubroutineType(types: !7418)
!7418 = !{null, !7419, !2018, !6595, !6595}
!7419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7420, size: 32)
!7420 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7421)
!7421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !435, line: 52, size: 96, elements: !7422)
!7422 = !{!7423, !7424, !7425}
!7423 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7421, file: !435, line: 53, baseType: !22, size: 32)
!7424 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7421, file: !435, line: 54, baseType: !185, size: 32, offset: 32)
!7425 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !7421, file: !435, line: 55, baseType: !7426, size: 32, offset: 64)
!7426 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !441, line: 151, baseType: !7427)
!7427 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !441, line: 149, size: 32, elements: !7428)
!7428 = !{!7429}
!7429 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !7427, file: !441, line: 150, baseType: !152, size: 32)
!7430 = !{!7431, !7432, !7433, !7434}
!7431 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7416, file: !491, line: 276, type: !7419)
!7432 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7416, file: !491, line: 276, type: !2018)
!7433 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !7416, file: !491, line: 277, type: !6595)
!7434 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7416, file: !491, line: 277, type: !6595)
!7435 = !DILocation(line: 0, scope: !7416)
!7436 = !DILocation(line: 279, column: 6, scope: !7437)
!7437 = distinct !DILexicalBlock(scope: !7416, file: !491, line: 279, column: 6)
!7438 = !DILocation(line: 280, column: 57, scope: !7437)
!7439 = !DILocation(line: 279, column: 6, scope: !7416)
!7440 = !DILocation(line: 282, column: 3, scope: !7441)
!7441 = distinct !DILexicalBlock(scope: !7442, file: !491, line: 282, column: 3)
!7442 = distinct !DILexicalBlock(scope: !7443, file: !491, line: 282, column: 3)
!7443 = distinct !DILexicalBlock(scope: !7444, file: !491, line: 282, column: 3)
!7444 = distinct !DILexicalBlock(scope: !7437, file: !491, line: 280, column: 69)
!7445 = !DILocation(line: 285, column: 1, scope: !7416)
!7446 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !7447, file: !7447, line: 220, type: !7448, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7450)
!7447 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7448 = !DISubroutineType(types: !7449)
!7449 = !{!107, !7419, !2018, !6595, !6595}
!7450 = !{!7451, !7452, !7453, !7454, !7455}
!7451 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7446, file: !7447, line: 221, type: !7419)
!7452 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7446, file: !7447, line: 221, type: !2018)
!7453 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !7446, file: !7447, line: 222, type: !6595)
!7454 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7446, file: !7447, line: 223, type: !6595)
!7455 = !DILocalVariable(name: "mpu_reg_index", scope: !7446, file: !7447, line: 225, type: !107)
!7456 = !DILocation(line: 0, scope: !7446)
!7457 = !DILocation(line: 225, column: 22, scope: !7446)
!7458 = !DILocation(line: 233, column: 18, scope: !7446)
!7459 = !DILocation(line: 236, column: 23, scope: !7446)
!7460 = !DILocation(line: 236, column: 21, scope: !7446)
!7461 = !DILocation(line: 238, column: 2, scope: !7446)
!7462 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !491, file: !491, line: 105, type: !7463, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7465)
!7463 = !DISubroutineType(types: !7464)
!7464 = !{!107, !7419, !195, !195, !145}
!7465 = !{!7466, !7467, !7468, !7469, !7470, !7471}
!7466 = !DILocalVariable(name: "regions", arg: 1, scope: !7462, file: !491, line: 106, type: !7419)
!7467 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7462, file: !491, line: 106, type: !195)
!7468 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !7462, file: !491, line: 106, type: !195)
!7469 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !7462, file: !491, line: 107, type: !145)
!7470 = !DILocalVariable(name: "i", scope: !7462, file: !491, line: 109, type: !107)
!7471 = !DILocalVariable(name: "reg_index", scope: !7462, file: !491, line: 110, type: !107)
!7472 = !DILocation(line: 0, scope: !7462)
!7473 = !DILocation(line: 110, column: 18, scope: !7462)
!7474 = !DILocation(line: 112, column: 16, scope: !7475)
!7475 = distinct !DILexicalBlock(scope: !7476, file: !491, line: 112, column: 2)
!7476 = distinct !DILexicalBlock(scope: !7462, file: !491, line: 112, column: 2)
!7477 = !DILocation(line: 112, column: 2, scope: !7476)
!7478 = !DILocation(line: 113, column: 7, scope: !7479)
!7479 = distinct !DILexicalBlock(scope: !7480, file: !491, line: 113, column: 7)
!7480 = distinct !DILexicalBlock(scope: !7475, file: !491, line: 112, column: 36)
!7481 = !DILocation(line: 113, column: 18, scope: !7479)
!7482 = !DILocation(line: 113, column: 23, scope: !7479)
!7483 = !DILocation(line: 113, column: 7, scope: !7480)
!7484 = !DILocation(line: 118, column: 23, scope: !7485)
!7485 = distinct !DILexicalBlock(scope: !7480, file: !491, line: 118, column: 7)
!7486 = !DILocation(line: 119, column: 7, scope: !7485)
!7487 = !DILocation(line: 118, column: 7, scope: !7480)
!7488 = !DILocation(line: 120, column: 4, scope: !7489)
!7489 = distinct !DILexicalBlock(scope: !7490, file: !491, line: 120, column: 4)
!7490 = distinct !DILexicalBlock(scope: !7491, file: !491, line: 120, column: 4)
!7491 = distinct !DILexicalBlock(scope: !7492, file: !491, line: 120, column: 4)
!7492 = distinct !DILexicalBlock(scope: !7493, file: !491, line: 120, column: 4)
!7493 = distinct !DILexicalBlock(scope: !7485, file: !491, line: 119, column: 45)
!7494 = !DILocation(line: 121, column: 4, scope: !7493)
!7495 = !DILocation(line: 124, column: 36, scope: !7480)
!7496 = !DILocation(line: 124, column: 15, scope: !7480)
!7497 = !DILocation(line: 126, column: 17, scope: !7498)
!7498 = distinct !DILexicalBlock(scope: !7480, file: !491, line: 126, column: 7)
!7499 = !DILocation(line: 126, column: 7, scope: !7480)
!7500 = !DILocation(line: 131, column: 12, scope: !7480)
!7501 = !DILocation(line: 132, column: 2, scope: !7480)
!7502 = !DILocation(line: 112, column: 32, scope: !7475)
!7503 = distinct !{!7503, !7477, !7504}
!7504 = !DILocation(line: 132, column: 2, scope: !7476)
!7505 = !DILocation(line: 135, column: 1, scope: !7462)
!7506 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !7447, file: !7447, line: 63, type: !7507, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7509)
!7507 = !DISubroutineType(types: !7508)
!7508 = !{!107, !7419}
!7509 = !{!7510, !7511}
!7510 = !DILocalVariable(name: "part", arg: 1, scope: !7506, file: !7447, line: 63, type: !7419)
!7511 = !DILocalVariable(name: "partition_is_valid", scope: !7506, file: !7447, line: 70, type: !107)
!7512 = !DILocation(line: 0, scope: !7506)
!7513 = !DILocation(line: 71, column: 11, scope: !7506)
!7514 = !DILocation(line: 71, column: 37, scope: !7506)
!7515 = !{i32 0, i32 33}
!7516 = !DILocation(line: 72, column: 3, scope: !7506)
!7517 = !DILocation(line: 71, column: 30, scope: !7506)
!7518 = !DILocation(line: 75, column: 11, scope: !7506)
!7519 = !DILocation(line: 75, column: 17, scope: !7506)
!7520 = !DILocation(line: 75, column: 38, scope: !7506)
!7521 = !DILocation(line: 77, column: 2, scope: !7506)
!7522 = distinct !DISubprogram(name: "mpu_configure_region", scope: !491, file: !491, line: 79, type: !7523, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7525)
!7523 = !DISubroutineType(types: !7524)
!7524 = !{!107, !2018, !7419}
!7525 = !{!7526, !7527, !7528}
!7526 = !DILocalVariable(name: "index", arg: 1, scope: !7522, file: !491, line: 79, type: !2018)
!7527 = !DILocalVariable(name: "new_region", arg: 2, scope: !7522, file: !491, line: 80, type: !7419)
!7528 = !DILocalVariable(name: "region_conf", scope: !7522, file: !491, line: 82, type: !480)
!7529 = !DILocation(line: 0, scope: !7522)
!7530 = !DILocation(line: 82, column: 2, scope: !7522)
!7531 = !DILocation(line: 82, column: 24, scope: !7522)
!7532 = !DILocation(line: 87, column: 33, scope: !7522)
!7533 = !DILocation(line: 87, column: 14, scope: !7522)
!7534 = !DILocation(line: 87, column: 19, scope: !7522)
!7535 = !DILocation(line: 91, column: 55, scope: !7522)
!7536 = !DILocation(line: 92, column: 16, scope: !7522)
!7537 = !DILocation(line: 92, column: 53, scope: !7522)
!7538 = !DILocation(line: 91, column: 2, scope: !7522)
!7539 = !DILocation(line: 95, column: 9, scope: !7522)
!7540 = !DILocation(line: 97, column: 1, scope: !7522)
!7541 = !DILocation(line: 95, column: 2, scope: !7522)
!7542 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !7447, file: !7447, line: 113, type: !7543, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7548)
!7543 = !DISubroutineType(types: !7544)
!7544 = !{null, !7545, !7546, !152, !152}
!7545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !486, size: 32)
!7546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7547, size: 32)
!7547 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7426)
!7548 = !{!7549, !7550, !7551, !7552}
!7549 = !DILocalVariable(name: "p_attr", arg: 1, scope: !7542, file: !7447, line: 114, type: !7545)
!7550 = !DILocalVariable(name: "attr", arg: 2, scope: !7542, file: !7447, line: 115, type: !7546)
!7551 = !DILocalVariable(name: "base", arg: 3, scope: !7542, file: !7447, line: 115, type: !152)
!7552 = !DILocalVariable(name: "size", arg: 4, scope: !7542, file: !7447, line: 115, type: !152)
!7553 = !DILocation(line: 0, scope: !7542)
!7554 = !DILocation(line: 127, column: 23, scope: !7542)
!7555 = !DILocation(line: 127, column: 35, scope: !7542)
!7556 = !DILocation(line: 127, column: 33, scope: !7542)
!7557 = !DILocation(line: 127, column: 10, scope: !7542)
!7558 = !DILocation(line: 127, column: 15, scope: !7542)
!7559 = !DILocation(line: 129, column: 1, scope: !7542)
!7560 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !491, file: !491, line: 57, type: !7561, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7563)
!7561 = !DISubroutineType(types: !7562)
!7562 = !{!107, !2018, !478}
!7563 = !{!7564, !7565}
!7564 = !DILocalVariable(name: "index", arg: 1, scope: !7560, file: !491, line: 57, type: !2018)
!7565 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7560, file: !491, line: 58, type: !478)
!7566 = !DILocation(line: 0, scope: !7560)
!7567 = !DILocation(line: 61, column: 6, scope: !7568)
!7568 = distinct !DILexicalBlock(scope: !7560, file: !491, line: 61, column: 6)
!7569 = !DILocation(line: 61, column: 12, scope: !7568)
!7570 = !DILocation(line: 61, column: 6, scope: !7560)
!7571 = !DILocation(line: 64, column: 3, scope: !7572)
!7572 = distinct !DILexicalBlock(scope: !7573, file: !491, line: 64, column: 3)
!7573 = distinct !DILexicalBlock(scope: !7574, file: !491, line: 64, column: 3)
!7574 = distinct !DILexicalBlock(scope: !7575, file: !491, line: 64, column: 3)
!7575 = distinct !DILexicalBlock(scope: !7576, file: !491, line: 64, column: 3)
!7576 = distinct !DILexicalBlock(scope: !7568, file: !491, line: 61, column: 40)
!7577 = !DILocation(line: 65, column: 3, scope: !7576)
!7578 = !DILocation(line: 71, column: 2, scope: !7560)
!7579 = !DILocation(line: 73, column: 2, scope: !7560)
!7580 = !DILocation(line: 74, column: 1, scope: !7560)
!7581 = distinct !DISubprogram(name: "region_init", scope: !7447, file: !7447, line: 29, type: !7582, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7584)
!7582 = !DISubroutineType(types: !7583)
!7583 = !{null, !6595, !478}
!7584 = !{!7585, !7586}
!7585 = !DILocalVariable(name: "index", arg: 1, scope: !7581, file: !7447, line: 29, type: !6595)
!7586 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7581, file: !7447, line: 30, type: !478)
!7587 = !DILocation(line: 0, scope: !7581)
!7588 = !DILocation(line: 33, column: 2, scope: !7581)
!7589 = !DILocation(line: 47, column: 28, scope: !7581)
!7590 = !DILocation(line: 47, column: 33, scope: !7581)
!7591 = !DILocation(line: 48, column: 26, scope: !7581)
!7592 = !DILocation(line: 47, column: 12, scope: !7581)
!7593 = !DILocation(line: 49, column: 32, scope: !7581)
!7594 = !DILocation(line: 49, column: 37, scope: !7581)
!7595 = !DILocation(line: 49, column: 12, scope: !7581)
!7596 = !DILocation(line: 53, column: 1, scope: !7581)
!7597 = distinct !DISubprogram(name: "set_region_number", scope: !7598, file: !7598, line: 32, type: !6415, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7599)
!7598 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7599 = !{!7600}
!7600 = !DILocalVariable(name: "index", arg: 1, scope: !7597, file: !7598, line: 32, type: !152)
!7601 = !DILocation(line: 0, scope: !7597)
!7602 = !DILocation(line: 34, column: 11, scope: !7597)
!7603 = !DILocation(line: 35, column: 1, scope: !7597)
!7604 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !7447, file: !7447, line: 88, type: !7605, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7607)
!7605 = !DISubroutineType(types: !7606)
!7606 = !{!152, !152}
!7607 = !{!7608}
!7608 = !DILocalVariable(name: "size", arg: 1, scope: !7604, file: !7447, line: 88, type: !152)
!7609 = !DILocation(line: 0, scope: !7604)
!7610 = !DILocation(line: 91, column: 11, scope: !7611)
!7611 = distinct !DILexicalBlock(scope: !7604, file: !7447, line: 91, column: 6)
!7612 = !DILocation(line: 91, column: 6, scope: !7604)
!7613 = !DILocation(line: 100, column: 11, scope: !7614)
!7614 = distinct !DILexicalBlock(scope: !7604, file: !7447, line: 100, column: 6)
!7615 = !DILocation(line: 100, column: 6, scope: !7604)
!7616 = !DILocation(line: 104, column: 35, scope: !7604)
!7617 = !DILocation(line: 104, column: 16, scope: !7604)
!7618 = !DILocation(line: 104, column: 50, scope: !7604)
!7619 = !DILocation(line: 104, column: 72, scope: !7604)
!7620 = !DILocation(line: 104, column: 2, scope: !7604)
!7621 = !DILocation(line: 106, column: 1, scope: !7604)
!7622 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !491, file: !491, line: 307, type: !7623, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7625)
!7623 = !DISubroutineType(types: !7624)
!7624 = !{null, !7419, !195}
!7625 = !{!7626, !7627}
!7626 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7622, file: !491, line: 308, type: !7419)
!7627 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7622, file: !491, line: 308, type: !195)
!7628 = !DILocation(line: 0, scope: !7622)
!7629 = !DILocation(line: 310, column: 6, scope: !7630)
!7630 = distinct !DILexicalBlock(scope: !7622, file: !491, line: 310, column: 6)
!7631 = !DILocation(line: 311, column: 3, scope: !7630)
!7632 = !DILocation(line: 310, column: 6, scope: !7622)
!7633 = !DILocation(line: 313, column: 3, scope: !7634)
!7634 = distinct !DILexicalBlock(scope: !7635, file: !491, line: 313, column: 3)
!7635 = distinct !DILexicalBlock(scope: !7636, file: !491, line: 313, column: 3)
!7636 = distinct !DILexicalBlock(scope: !7637, file: !491, line: 313, column: 3)
!7637 = distinct !DILexicalBlock(scope: !7630, file: !491, line: 311, column: 15)
!7638 = !DILocation(line: 316, column: 1, scope: !7622)
!7639 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !7447, file: !7447, line: 249, type: !7640, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7642)
!7640 = !DISubroutineType(types: !7641)
!7641 = !{!107, !7419, !195}
!7642 = !{!7643, !7644, !7645, !7646}
!7643 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7639, file: !7447, line: 250, type: !7419)
!7644 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7639, file: !7447, line: 250, type: !195)
!7645 = !DILocalVariable(name: "mpu_reg_index", scope: !7639, file: !7447, line: 252, type: !107)
!7646 = !DILocalVariable(name: "i", scope: !7647, file: !7447, line: 264, type: !107)
!7647 = distinct !DILexicalBlock(scope: !7648, file: !7447, line: 264, column: 3)
!7648 = distinct !DILexicalBlock(scope: !7649, file: !7447, line: 261, column: 32)
!7649 = distinct !DILexicalBlock(scope: !7639, file: !7447, line: 261, column: 6)
!7650 = !DILocation(line: 0, scope: !7639)
!7651 = !DILocation(line: 252, column: 22, scope: !7639)
!7652 = !DILocation(line: 258, column: 18, scope: !7639)
!7653 = !DILocation(line: 261, column: 20, scope: !7649)
!7654 = !DILocation(line: 261, column: 6, scope: !7639)
!7655 = !DILocation(line: 0, scope: !7647)
!7656 = !DILocation(line: 265, column: 4, scope: !7657)
!7657 = distinct !DILexicalBlock(scope: !7658, file: !7447, line: 264, column: 59)
!7658 = distinct !DILexicalBlock(scope: !7647, file: !7447, line: 264, column: 3)
!7659 = !DILocation(line: 264, column: 55, scope: !7658)
!7660 = !DILocation(line: 264, column: 33, scope: !7658)
!7661 = !DILocation(line: 264, column: 3, scope: !7647)
!7662 = distinct !{!7662, !7661, !7663}
!7663 = !DILocation(line: 266, column: 3, scope: !7647)
!7664 = !DILocation(line: 269, column: 2, scope: !7639)
!7665 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !7666, file: !7666, line: 218, type: !6415, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7667)
!7666 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7667 = !{!7668}
!7668 = !DILocalVariable(name: "rnr", arg: 1, scope: !7665, file: !7666, line: 218, type: !152)
!7669 = !DILocation(line: 0, scope: !7665)
!7670 = !DILocation(line: 220, column: 12, scope: !7665)
!7671 = !DILocation(line: 221, column: 13, scope: !7665)
!7672 = !DILocation(line: 222, column: 1, scope: !7665)
!7673 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !491, file: !491, line: 326, type: !7674, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7676)
!7674 = !DISubroutineType(types: !7675)
!7675 = !{!107}
!7676 = !{!7677}
!7677 = !DILocalVariable(name: "r_index", scope: !7673, file: !491, line: 328, type: !152)
!7678 = !DILocation(line: 330, column: 17, scope: !7679)
!7679 = distinct !DILexicalBlock(scope: !7673, file: !491, line: 330, column: 6)
!7680 = !DILocation(line: 330, column: 29, scope: !7679)
!7681 = !DILocation(line: 330, column: 6, scope: !7673)
!7682 = !DILocation(line: 337, column: 3, scope: !7683)
!7683 = distinct !DILexicalBlock(scope: !7684, file: !491, line: 337, column: 3)
!7684 = distinct !DILexicalBlock(scope: !7685, file: !491, line: 337, column: 3)
!7685 = distinct !DILexicalBlock(scope: !7686, file: !491, line: 337, column: 3)
!7686 = distinct !DILexicalBlock(scope: !7679, file: !491, line: 330, column: 50)
!7687 = !DILocation(line: 347, column: 2, scope: !7673)
!7688 = !DILocation(line: 0, scope: !7673)
!7689 = !DILocation(line: 364, column: 29, scope: !7690)
!7690 = distinct !DILexicalBlock(scope: !7691, file: !491, line: 364, column: 2)
!7691 = distinct !DILexicalBlock(scope: !7673, file: !491, line: 364, column: 2)
!7692 = !DILocation(line: 364, column: 2, scope: !7691)
!7693 = !DILocation(line: 365, column: 25, scope: !7694)
!7694 = distinct !DILexicalBlock(scope: !7690, file: !491, line: 364, column: 66)
!7695 = !DILocation(line: 365, column: 3, scope: !7694)
!7696 = !DILocation(line: 364, column: 62, scope: !7690)
!7697 = distinct !{!7697, !7692, !7698}
!7698 = !DILocation(line: 366, column: 2, scope: !7691)
!7699 = !DILocation(line: 369, column: 23, scope: !7673)
!7700 = !DILocation(line: 369, column: 21, scope: !7673)
!7701 = !DILocation(line: 372, column: 2, scope: !7673)
!7702 = !DILocation(line: 433, column: 2, scope: !7703)
!7703 = distinct !DILexicalBlock(scope: !7704, file: !491, line: 433, column: 2)
!7704 = distinct !DILexicalBlock(scope: !7673, file: !491, line: 433, column: 2)
!7705 = !DILocation(line: 433, column: 2, scope: !7704)
!7706 = !DILocation(line: 433, column: 2, scope: !7707)
!7707 = distinct !DILexicalBlock(scope: !7703, file: !491, line: 433, column: 2)
!7708 = !DILocation(line: 444, column: 1, scope: !7673)
!7709 = distinct !DISubprogram(name: "strcpy", scope: !7710, file: !7710, line: 20, type: !7711, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2930, retainedNodes: !7715)
!7710 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7711 = !DISubroutineType(types: !7712)
!7712 = !{!193, !7713, !7714}
!7713 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !193)
!7714 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !118)
!7715 = !{!7716, !7717, !7718}
!7716 = !DILocalVariable(name: "d", arg: 1, scope: !7709, file: !7710, line: 20, type: !7713)
!7717 = !DILocalVariable(name: "s", arg: 2, scope: !7709, file: !7710, line: 20, type: !7714)
!7718 = !DILocalVariable(name: "dest", scope: !7709, file: !7710, line: 22, type: !193)
!7719 = !DILocation(line: 0, scope: !7709)
!7720 = !DILocation(line: 24, column: 9, scope: !7709)
!7721 = !DILocation(line: 24, column: 12, scope: !7709)
!7722 = !DILocation(line: 24, column: 2, scope: !7709)
!7723 = !DILocation(line: 25, column: 6, scope: !7724)
!7724 = distinct !DILexicalBlock(scope: !7709, file: !7710, line: 24, column: 21)
!7725 = !DILocation(line: 26, column: 4, scope: !7724)
!7726 = !DILocation(line: 27, column: 4, scope: !7724)
!7727 = distinct !{!7727, !7722, !7728}
!7728 = !DILocation(line: 28, column: 2, scope: !7709)
!7729 = !DILocation(line: 30, column: 5, scope: !7709)
!7730 = !DILocation(line: 32, column: 2, scope: !7709)
!7731 = distinct !DISubprogram(name: "strncpy", scope: !7710, file: !7710, line: 42, type: !7732, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2930, retainedNodes: !7734)
!7732 = !DISubroutineType(types: !7733)
!7733 = !{!193, !7713, !7714, !185}
!7734 = !{!7735, !7736, !7737, !7738}
!7735 = !DILocalVariable(name: "d", arg: 1, scope: !7731, file: !7710, line: 42, type: !7713)
!7736 = !DILocalVariable(name: "s", arg: 2, scope: !7731, file: !7710, line: 42, type: !7714)
!7737 = !DILocalVariable(name: "n", arg: 3, scope: !7731, file: !7710, line: 42, type: !185)
!7738 = !DILocalVariable(name: "dest", scope: !7731, file: !7710, line: 44, type: !193)
!7739 = !DILocation(line: 0, scope: !7731)
!7740 = !DILocation(line: 46, column: 12, scope: !7731)
!7741 = !DILocation(line: 46, column: 17, scope: !7731)
!7742 = !DILocation(line: 46, column: 20, scope: !7731)
!7743 = !DILocation(line: 46, column: 23, scope: !7731)
!7744 = !DILocation(line: 46, column: 2, scope: !7731)
!7745 = !DILocation(line: 47, column: 6, scope: !7746)
!7746 = distinct !DILexicalBlock(scope: !7731, file: !7710, line: 46, column: 32)
!7747 = !DILocation(line: 48, column: 4, scope: !7746)
!7748 = !DILocation(line: 49, column: 4, scope: !7746)
!7749 = !DILocation(line: 50, column: 4, scope: !7746)
!7750 = distinct !{!7750, !7744, !7751}
!7751 = !DILocation(line: 51, column: 2, scope: !7731)
!7752 = !DILocation(line: 54, column: 6, scope: !7753)
!7753 = distinct !DILexicalBlock(scope: !7731, file: !7710, line: 53, column: 16)
!7754 = !DILocation(line: 55, column: 4, scope: !7753)
!7755 = !DILocation(line: 56, column: 4, scope: !7753)
!7756 = !DILocation(line: 53, column: 11, scope: !7731)
!7757 = !DILocation(line: 53, column: 2, scope: !7731)
!7758 = distinct !{!7758, !7757, !7759}
!7759 = !DILocation(line: 57, column: 2, scope: !7731)
!7760 = !DILocation(line: 59, column: 2, scope: !7731)
!7761 = distinct !DISubprogram(name: "strchr", scope: !7710, file: !7710, line: 69, type: !7762, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2930, retainedNodes: !7764)
!7762 = !DISubroutineType(types: !7763)
!7763 = !{!193, !118, !107}
!7764 = !{!7765, !7766, !7767}
!7765 = !DILocalVariable(name: "s", arg: 1, scope: !7761, file: !7710, line: 69, type: !118)
!7766 = !DILocalVariable(name: "c", arg: 2, scope: !7761, file: !7710, line: 69, type: !107)
!7767 = !DILocalVariable(name: "tmp", scope: !7761, file: !7710, line: 71, type: !120)
!7768 = !DILocation(line: 0, scope: !7761)
!7769 = !DILocation(line: 73, column: 2, scope: !7761)
!7770 = !DILocation(line: 73, column: 10, scope: !7761)
!7771 = !DILocation(line: 73, column: 13, scope: !7761)
!7772 = !DILocation(line: 73, column: 21, scope: !7761)
!7773 = !DILocation(line: 74, column: 4, scope: !7774)
!7774 = distinct !DILexicalBlock(scope: !7761, file: !7710, line: 73, column: 38)
!7775 = distinct !{!7775, !7769, !7776}
!7776 = !DILocation(line: 75, column: 2, scope: !7761)
!7777 = !DILocation(line: 77, column: 9, scope: !7761)
!7778 = !DILocation(line: 77, column: 2, scope: !7761)
!7779 = distinct !DISubprogram(name: "strrchr", scope: !7710, file: !7710, line: 87, type: !7762, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2930, retainedNodes: !7780)
!7780 = !{!7781, !7782, !7783}
!7781 = !DILocalVariable(name: "s", arg: 1, scope: !7779, file: !7710, line: 87, type: !118)
!7782 = !DILocalVariable(name: "c", arg: 2, scope: !7779, file: !7710, line: 87, type: !107)
!7783 = !DILocalVariable(name: "match", scope: !7779, file: !7710, line: 89, type: !193)
!7784 = !DILocation(line: 0, scope: !7779)
!7785 = !DILocation(line: 91, column: 2, scope: !7779)
!7786 = !DILocation(line: 92, column: 7, scope: !7787)
!7787 = distinct !DILexicalBlock(scope: !7788, file: !7710, line: 92, column: 7)
!7788 = distinct !DILexicalBlock(scope: !7779, file: !7710, line: 91, column: 5)
!7789 = !DILocation(line: 92, column: 10, scope: !7787)
!7790 = !DILocation(line: 92, column: 7, scope: !7788)
!7791 = !DILocation(line: 95, column: 13, scope: !7779)
!7792 = !DILocation(line: 95, column: 2, scope: !7788)
!7793 = distinct !{!7793, !7785, !7794}
!7794 = !DILocation(line: 95, column: 15, scope: !7779)
!7795 = !DILocation(line: 97, column: 2, scope: !7779)
!7796 = distinct !DISubprogram(name: "strlen", scope: !7710, file: !7710, line: 107, type: !7797, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2930, retainedNodes: !7799)
!7797 = !DISubroutineType(types: !7798)
!7798 = !{!185, !118}
!7799 = !{!7800, !7801}
!7800 = !DILocalVariable(name: "s", arg: 1, scope: !7796, file: !7710, line: 107, type: !118)
!7801 = !DILocalVariable(name: "n", scope: !7796, file: !7710, line: 109, type: !185)
!7802 = !DILocation(line: 0, scope: !7796)
!7803 = !DILocation(line: 111, column: 9, scope: !7796)
!7804 = !DILocation(line: 111, column: 12, scope: !7796)
!7805 = !DILocation(line: 111, column: 2, scope: !7796)
!7806 = !DILocation(line: 112, column: 4, scope: !7807)
!7807 = distinct !DILexicalBlock(scope: !7796, file: !7710, line: 111, column: 21)
!7808 = !DILocation(line: 113, column: 4, scope: !7807)
!7809 = distinct !{!7809, !7805, !7810}
!7810 = !DILocation(line: 114, column: 2, scope: !7796)
!7811 = !DILocation(line: 116, column: 2, scope: !7796)
!7812 = distinct !DISubprogram(name: "strnlen", scope: !7710, file: !7710, line: 126, type: !7813, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2930, retainedNodes: !7815)
!7813 = !DISubroutineType(types: !7814)
!7814 = !{!185, !118, !185}
!7815 = !{!7816, !7817, !7818}
!7816 = !DILocalVariable(name: "s", arg: 1, scope: !7812, file: !7710, line: 126, type: !118)
!7817 = !DILocalVariable(name: "maxlen", arg: 2, scope: !7812, file: !7710, line: 126, type: !185)
!7818 = !DILocalVariable(name: "n", scope: !7812, file: !7710, line: 128, type: !185)
!7819 = !DILocation(line: 0, scope: !7812)
!7820 = !DILocation(line: 130, column: 9, scope: !7812)
!7821 = !DILocation(line: 130, column: 12, scope: !7812)
!7822 = !DILocation(line: 130, column: 20, scope: !7812)
!7823 = !DILocation(line: 130, column: 2, scope: !7812)
!7824 = !DILocation(line: 131, column: 4, scope: !7825)
!7825 = distinct !DILexicalBlock(scope: !7812, file: !7710, line: 130, column: 35)
!7826 = !DILocation(line: 132, column: 4, scope: !7825)
!7827 = distinct !{!7827, !7823, !7828}
!7828 = !DILocation(line: 133, column: 2, scope: !7812)
!7829 = !DILocation(line: 135, column: 2, scope: !7812)
!7830 = distinct !DISubprogram(name: "strcmp", scope: !7710, file: !7710, line: 145, type: !7831, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2930, retainedNodes: !7833)
!7831 = !DISubroutineType(types: !7832)
!7832 = !{!107, !118, !118}
!7833 = !{!7834, !7835}
!7834 = !DILocalVariable(name: "s1", arg: 1, scope: !7830, file: !7710, line: 145, type: !118)
!7835 = !DILocalVariable(name: "s2", arg: 2, scope: !7830, file: !7710, line: 145, type: !118)
!7836 = !DILocation(line: 0, scope: !7830)
!7837 = !DILocation(line: 147, column: 10, scope: !7830)
!7838 = !DILocation(line: 147, column: 17, scope: !7830)
!7839 = !DILocation(line: 147, column: 14, scope: !7830)
!7840 = !DILocation(line: 147, column: 22, scope: !7830)
!7841 = !DILocation(line: 148, column: 5, scope: !7842)
!7842 = distinct !DILexicalBlock(scope: !7830, file: !7710, line: 147, column: 40)
!7843 = !DILocation(line: 149, column: 5, scope: !7842)
!7844 = distinct !{!7844, !7845, !7846}
!7845 = !DILocation(line: 147, column: 2, scope: !7830)
!7846 = !DILocation(line: 150, column: 2, scope: !7830)
!7847 = !DILocation(line: 152, column: 9, scope: !7830)
!7848 = !DILocation(line: 152, column: 15, scope: !7830)
!7849 = !DILocation(line: 152, column: 13, scope: !7830)
!7850 = !DILocation(line: 152, column: 2, scope: !7830)
!7851 = distinct !DISubprogram(name: "strncmp", scope: !7710, file: !7710, line: 162, type: !7852, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2930, retainedNodes: !7854)
!7852 = !DISubroutineType(types: !7853)
!7853 = !{!107, !118, !118, !185}
!7854 = !{!7855, !7856, !7857}
!7855 = !DILocalVariable(name: "s1", arg: 1, scope: !7851, file: !7710, line: 162, type: !118)
!7856 = !DILocalVariable(name: "s2", arg: 2, scope: !7851, file: !7710, line: 162, type: !118)
!7857 = !DILocalVariable(name: "n", arg: 3, scope: !7851, file: !7710, line: 162, type: !185)
!7858 = !DILocation(line: 0, scope: !7851)
!7859 = !DILocation(line: 164, column: 17, scope: !7851)
!7860 = !DILocation(line: 164, column: 21, scope: !7851)
!7861 = !DILocation(line: 164, column: 28, scope: !7851)
!7862 = !DILocation(line: 164, column: 25, scope: !7851)
!7863 = !DILocation(line: 164, column: 33, scope: !7851)
!7864 = !DILocation(line: 165, column: 5, scope: !7865)
!7865 = distinct !DILexicalBlock(scope: !7851, file: !7710, line: 164, column: 51)
!7866 = !DILocation(line: 166, column: 5, scope: !7865)
!7867 = !DILocation(line: 167, column: 4, scope: !7865)
!7868 = distinct !{!7868, !7869, !7870}
!7869 = !DILocation(line: 164, column: 2, scope: !7851)
!7870 = !DILocation(line: 168, column: 2, scope: !7851)
!7871 = !DILocation(line: 170, column: 25, scope: !7851)
!7872 = !DILocation(line: 170, column: 31, scope: !7851)
!7873 = !DILocation(line: 170, column: 29, scope: !7851)
!7874 = !DILocation(line: 170, column: 9, scope: !7851)
!7875 = !DILocation(line: 170, column: 2, scope: !7851)
!7876 = distinct !DISubprogram(name: "strtok_r", scope: !7710, file: !7710, line: 180, type: !7877, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2930, retainedNodes: !7879)
!7877 = !DISubroutineType(types: !7878)
!7878 = !{!193, !193, !118, !192}
!7879 = !{!7880, !7881, !7882, !7883, !7884}
!7880 = !DILocalVariable(name: "str", arg: 1, scope: !7876, file: !7710, line: 180, type: !193)
!7881 = !DILocalVariable(name: "sep", arg: 2, scope: !7876, file: !7710, line: 180, type: !118)
!7882 = !DILocalVariable(name: "state", arg: 3, scope: !7876, file: !7710, line: 180, type: !192)
!7883 = !DILocalVariable(name: "start", scope: !7876, file: !7710, line: 182, type: !193)
!7884 = !DILocalVariable(name: "end", scope: !7876, file: !7710, line: 182, type: !193)
!7885 = !DILocation(line: 0, scope: !7876)
!7886 = !DILocation(line: 184, column: 10, scope: !7876)
!7887 = !DILocation(line: 184, column: 22, scope: !7876)
!7888 = !DILocation(line: 187, column: 9, scope: !7876)
!7889 = !DILocation(line: 187, column: 16, scope: !7876)
!7890 = !DILocation(line: 187, column: 19, scope: !7876)
!7891 = !DILocation(line: 187, column: 2, scope: !7876)
!7892 = !DILocation(line: 188, column: 8, scope: !7893)
!7893 = distinct !DILexicalBlock(scope: !7876, file: !7710, line: 187, column: 40)
!7894 = distinct !{!7894, !7891, !7895}
!7895 = !DILocation(line: 189, column: 2, scope: !7876)
!7896 = !DILocation(line: 198, column: 9, scope: !7876)
!7897 = !DILocation(line: 198, column: 18, scope: !7876)
!7898 = !DILocation(line: 198, column: 17, scope: !7876)
!7899 = !DILocation(line: 198, column: 2, scope: !7876)
!7900 = !DILocation(line: 199, column: 6, scope: !7901)
!7901 = distinct !DILexicalBlock(scope: !7876, file: !7710, line: 198, column: 37)
!7902 = !DILocation(line: 198, column: 14, scope: !7876)
!7903 = distinct !{!7903, !7899, !7904}
!7904 = !DILocation(line: 200, column: 2, scope: !7876)
!7905 = !DILocation(line: 203, column: 8, scope: !7906)
!7906 = distinct !DILexicalBlock(scope: !7907, file: !7710, line: 202, column: 20)
!7907 = distinct !DILexicalBlock(scope: !7876, file: !7710, line: 202, column: 6)
!7908 = !DILocation(line: 204, column: 16, scope: !7906)
!7909 = !DILocation(line: 205, column: 2, scope: !7906)
!7910 = !DILocation(line: 210, column: 1, scope: !7876)
!7911 = distinct !DISubprogram(name: "strcat", scope: !7710, file: !7710, line: 212, type: !7711, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2930, retainedNodes: !7912)
!7912 = !{!7913, !7914}
!7913 = !DILocalVariable(name: "dest", arg: 1, scope: !7911, file: !7710, line: 212, type: !7713)
!7914 = !DILocalVariable(name: "src", arg: 2, scope: !7911, file: !7710, line: 212, type: !7714)
!7915 = !DILocation(line: 0, scope: !7911)
!7916 = !DILocation(line: 214, column: 16, scope: !7911)
!7917 = !DILocation(line: 214, column: 14, scope: !7911)
!7918 = !DILocation(line: 214, column: 2, scope: !7911)
!7919 = !DILocation(line: 215, column: 2, scope: !7911)
!7920 = distinct !DISubprogram(name: "strncat", scope: !7710, file: !7710, line: 218, type: !7732, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2930, retainedNodes: !7921)
!7921 = !{!7922, !7923, !7924, !7925, !7926}
!7922 = !DILocalVariable(name: "dest", arg: 1, scope: !7920, file: !7710, line: 218, type: !7713)
!7923 = !DILocalVariable(name: "src", arg: 2, scope: !7920, file: !7710, line: 218, type: !7714)
!7924 = !DILocalVariable(name: "n", arg: 3, scope: !7920, file: !7710, line: 219, type: !185)
!7925 = !DILocalVariable(name: "orig_dest", scope: !7920, file: !7710, line: 221, type: !193)
!7926 = !DILocalVariable(name: "len", scope: !7920, file: !7710, line: 222, type: !185)
!7927 = !DILocation(line: 0, scope: !7920)
!7928 = !DILocation(line: 222, column: 15, scope: !7920)
!7929 = !DILocation(line: 224, column: 7, scope: !7920)
!7930 = !DILocation(line: 225, column: 14, scope: !7920)
!7931 = !DILocation(line: 225, column: 19, scope: !7920)
!7932 = !DILocation(line: 225, column: 11, scope: !7920)
!7933 = !DILocation(line: 225, column: 23, scope: !7920)
!7934 = !DILocation(line: 225, column: 28, scope: !7920)
!7935 = !DILocation(line: 225, column: 2, scope: !7920)
!7936 = !DILocation(line: 226, column: 17, scope: !7937)
!7937 = distinct !DILexicalBlock(scope: !7920, file: !7710, line: 225, column: 38)
!7938 = !DILocation(line: 226, column: 8, scope: !7937)
!7939 = !DILocation(line: 226, column: 11, scope: !7937)
!7940 = distinct !{!7940, !7935, !7941}
!7941 = !DILocation(line: 227, column: 2, scope: !7920)
!7942 = !DILocation(line: 228, column: 8, scope: !7920)
!7943 = !DILocation(line: 230, column: 2, scope: !7920)
!7944 = distinct !DISubprogram(name: "memcmp", scope: !7710, file: !7710, line: 239, type: !7945, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2930, retainedNodes: !7947)
!7945 = !DISubroutineType(types: !7946)
!7946 = !{!107, !13, !13, !185}
!7947 = !{!7948, !7949, !7950, !7951, !7952}
!7948 = !DILocalVariable(name: "m1", arg: 1, scope: !7944, file: !7710, line: 239, type: !13)
!7949 = !DILocalVariable(name: "m2", arg: 2, scope: !7944, file: !7710, line: 239, type: !13)
!7950 = !DILocalVariable(name: "n", arg: 3, scope: !7944, file: !7710, line: 239, type: !185)
!7951 = !DILocalVariable(name: "c1", scope: !7944, file: !7710, line: 241, type: !118)
!7952 = !DILocalVariable(name: "c2", scope: !7944, file: !7710, line: 242, type: !118)
!7953 = !DILocation(line: 0, scope: !7944)
!7954 = !DILocation(line: 244, column: 7, scope: !7955)
!7955 = distinct !DILexicalBlock(scope: !7944, file: !7710, line: 244, column: 6)
!7956 = !DILocation(line: 244, column: 6, scope: !7944)
!7957 = !DILocation(line: 248, column: 10, scope: !7944)
!7958 = !DILocation(line: 248, column: 14, scope: !7944)
!7959 = !DILocation(line: 248, column: 19, scope: !7944)
!7960 = !DILocation(line: 248, column: 2, scope: !7944)
!7961 = !DILocation(line: 248, column: 23, scope: !7944)
!7962 = !DILocation(line: 248, column: 30, scope: !7944)
!7963 = !DILocation(line: 248, column: 27, scope: !7944)
!7964 = !DILocation(line: 249, column: 5, scope: !7965)
!7965 = distinct !DILexicalBlock(scope: !7944, file: !7710, line: 248, column: 36)
!7966 = !DILocation(line: 250, column: 5, scope: !7965)
!7967 = distinct !{!7967, !7960, !7968}
!7968 = !DILocation(line: 251, column: 2, scope: !7944)
!7969 = !DILocation(line: 253, column: 9, scope: !7944)
!7970 = !DILocation(line: 253, column: 15, scope: !7944)
!7971 = !DILocation(line: 253, column: 13, scope: !7944)
!7972 = !DILocation(line: 253, column: 2, scope: !7944)
!7973 = !DILocation(line: 254, column: 1, scope: !7944)
!7974 = distinct !DISubprogram(name: "memmove", scope: !7710, file: !7710, line: 263, type: !7975, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2930, retainedNodes: !7977)
!7975 = !DISubroutineType(types: !7976)
!7976 = !{!106, !106, !13, !185}
!7977 = !{!7978, !7979, !7980, !7981, !7982}
!7978 = !DILocalVariable(name: "d", arg: 1, scope: !7974, file: !7710, line: 263, type: !106)
!7979 = !DILocalVariable(name: "s", arg: 2, scope: !7974, file: !7710, line: 263, type: !13)
!7980 = !DILocalVariable(name: "n", arg: 3, scope: !7974, file: !7710, line: 263, type: !185)
!7981 = !DILocalVariable(name: "dest", scope: !7974, file: !7710, line: 265, type: !193)
!7982 = !DILocalVariable(name: "src", scope: !7974, file: !7710, line: 266, type: !118)
!7983 = !DILocation(line: 0, scope: !7974)
!7984 = !DILocation(line: 268, column: 21, scope: !7985)
!7985 = distinct !DILexicalBlock(scope: !7974, file: !7710, line: 268, column: 6)
!7986 = !DILocation(line: 268, column: 28, scope: !7985)
!7987 = !DILocation(line: 268, column: 6, scope: !7974)
!7988 = !DILocation(line: 280, column: 12, scope: !7989)
!7989 = distinct !DILexicalBlock(scope: !7985, file: !7710, line: 278, column: 9)
!7990 = !DILocation(line: 280, column: 3, scope: !7989)
!7991 = !DILocation(line: 275, column: 5, scope: !7992)
!7992 = distinct !DILexicalBlock(scope: !7993, file: !7710, line: 274, column: 17)
!7993 = distinct !DILexicalBlock(scope: !7985, file: !7710, line: 268, column: 33)
!7994 = !DILocation(line: 276, column: 14, scope: !7992)
!7995 = !DILocation(line: 276, column: 4, scope: !7992)
!7996 = !DILocation(line: 276, column: 12, scope: !7992)
!7997 = !DILocation(line: 274, column: 12, scope: !7993)
!7998 = !DILocation(line: 274, column: 3, scope: !7993)
!7999 = distinct !{!7999, !7998, !8000}
!8000 = !DILocation(line: 277, column: 3, scope: !7993)
!8001 = !DILocation(line: 281, column: 12, scope: !8002)
!8002 = distinct !DILexicalBlock(scope: !7989, file: !7710, line: 280, column: 17)
!8003 = !DILocation(line: 281, column: 10, scope: !8002)
!8004 = !DILocation(line: 282, column: 8, scope: !8002)
!8005 = !DILocation(line: 283, column: 7, scope: !8002)
!8006 = !DILocation(line: 284, column: 5, scope: !8002)
!8007 = distinct !{!8007, !7990, !8008}
!8008 = !DILocation(line: 285, column: 3, scope: !7989)
!8009 = !DILocation(line: 288, column: 2, scope: !7974)
!8010 = distinct !DISubprogram(name: "memcpy", scope: !7710, file: !7710, line: 298, type: !8011, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2930, retainedNodes: !8015)
!8011 = !DISubroutineType(types: !8012)
!8012 = !{!106, !8013, !8014, !185}
!8013 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !106)
!8014 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!8015 = !{!8016, !8017, !8018, !8019, !8020}
!8016 = !DILocalVariable(name: "d", arg: 1, scope: !8010, file: !7710, line: 298, type: !8013)
!8017 = !DILocalVariable(name: "s", arg: 2, scope: !8010, file: !7710, line: 298, type: !8014)
!8018 = !DILocalVariable(name: "n", arg: 3, scope: !8010, file: !7710, line: 298, type: !185)
!8019 = !DILocalVariable(name: "d_byte", scope: !8010, file: !7710, line: 302, type: !1137)
!8020 = !DILocalVariable(name: "s_byte", scope: !8010, file: !7710, line: 303, type: !2933)
!8021 = !DILocation(line: 0, scope: !8010)
!8022 = !DILocation(line: 337, column: 11, scope: !8010)
!8023 = !DILocation(line: 337, column: 2, scope: !8010)
!8024 = !DILocation(line: 338, column: 25, scope: !8025)
!8025 = distinct !DILexicalBlock(scope: !8010, file: !7710, line: 337, column: 16)
!8026 = !DILocation(line: 338, column: 17, scope: !8025)
!8027 = !DILocation(line: 338, column: 11, scope: !8025)
!8028 = !DILocation(line: 338, column: 15, scope: !8025)
!8029 = !DILocation(line: 339, column: 4, scope: !8025)
!8030 = distinct !{!8030, !8023, !8031}
!8031 = !DILocation(line: 340, column: 2, scope: !8010)
!8032 = !DILocation(line: 342, column: 2, scope: !8010)
!8033 = distinct !DISubprogram(name: "memset", scope: !7710, file: !7710, line: 352, type: !8034, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2930, retainedNodes: !8036)
!8034 = !DISubroutineType(types: !8035)
!8035 = !{!106, !106, !107, !185}
!8036 = !{!8037, !8038, !8039, !8040, !8041}
!8037 = !DILocalVariable(name: "buf", arg: 1, scope: !8033, file: !7710, line: 352, type: !106)
!8038 = !DILocalVariable(name: "c", arg: 2, scope: !8033, file: !7710, line: 352, type: !107)
!8039 = !DILocalVariable(name: "n", arg: 3, scope: !8033, file: !7710, line: 352, type: !185)
!8040 = !DILocalVariable(name: "d_byte", scope: !8033, file: !7710, line: 356, type: !1137)
!8041 = !DILocalVariable(name: "c_byte", scope: !8033, file: !7710, line: 357, type: !196)
!8042 = !DILocation(line: 0, scope: !8033)
!8043 = !DILocation(line: 357, column: 25, scope: !8033)
!8044 = !DILocation(line: 389, column: 11, scope: !8033)
!8045 = !DILocation(line: 389, column: 2, scope: !8033)
!8046 = !DILocation(line: 390, column: 11, scope: !8047)
!8047 = distinct !DILexicalBlock(scope: !8033, file: !7710, line: 389, column: 16)
!8048 = !DILocation(line: 390, column: 15, scope: !8047)
!8049 = !DILocation(line: 391, column: 4, scope: !8047)
!8050 = distinct !{!8050, !8045, !8051}
!8051 = !DILocation(line: 392, column: 2, scope: !8033)
!8052 = !DILocation(line: 394, column: 2, scope: !8033)
!8053 = distinct !DISubprogram(name: "memchr", scope: !7710, file: !7710, line: 404, type: !8054, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2930, retainedNodes: !8056)
!8054 = !DISubroutineType(types: !8055)
!8055 = !{!106, !13, !107, !185}
!8056 = !{!8057, !8058, !8059, !8060}
!8057 = !DILocalVariable(name: "s", arg: 1, scope: !8053, file: !7710, line: 404, type: !13)
!8058 = !DILocalVariable(name: "c", arg: 2, scope: !8053, file: !7710, line: 404, type: !107)
!8059 = !DILocalVariable(name: "n", arg: 3, scope: !8053, file: !7710, line: 404, type: !185)
!8060 = !DILocalVariable(name: "p", scope: !8061, file: !7710, line: 407, type: !2933)
!8061 = distinct !DILexicalBlock(scope: !8062, file: !7710, line: 406, column: 14)
!8062 = distinct !DILexicalBlock(scope: !8053, file: !7710, line: 406, column: 6)
!8063 = !DILocation(line: 0, scope: !8053)
!8064 = !DILocation(line: 406, column: 8, scope: !8062)
!8065 = !DILocation(line: 406, column: 6, scope: !8053)
!8066 = !DILocation(line: 409, column: 3, scope: !8061)
!8067 = !DILocation(line: 0, scope: !8061)
!8068 = !DILocation(line: 410, column: 8, scope: !8069)
!8069 = distinct !DILexicalBlock(scope: !8070, file: !7710, line: 410, column: 8)
!8070 = distinct !DILexicalBlock(scope: !8061, file: !7710, line: 409, column: 6)
!8071 = !DILocation(line: 410, column: 13, scope: !8069)
!8072 = !DILocation(line: 410, column: 8, scope: !8070)
!8073 = distinct !{!8073, !8066, !8074}
!8074 = !DILocation(line: 414, column: 20, scope: !8061)
!8075 = !DILocation(line: 417, column: 2, scope: !8053)
!8076 = !DILocation(line: 418, column: 1, scope: !8053)
!8077 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !501, file: !501, line: 23, type: !4182, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8078)
!8078 = !{!8079}
!8079 = !DILocalVariable(name: "hook", arg: 1, scope: !8077, file: !501, line: 23, type: !213)
!8080 = !DILocation(line: 0, scope: !8077)
!8081 = !DILocation(line: 25, column: 15, scope: !8077)
!8082 = !DILocation(line: 26, column: 1, scope: !8077)
!8083 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !501, file: !501, line: 14, type: !214, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8084)
!8084 = !{!8085}
!8085 = !DILocalVariable(name: "c", arg: 1, scope: !8083, file: !501, line: 14, type: !107)
!8086 = !DILocation(line: 0, scope: !8083)
!8087 = !DILocation(line: 18, column: 2, scope: !8083)
!8088 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !501, file: !501, line: 28, type: !8089, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8091)
!8089 = !DISubroutineType(types: !8090)
!8090 = !{!107, !107, !497}
!8091 = !{!8092, !8093}
!8092 = !DILocalVariable(name: "c", arg: 1, scope: !8088, file: !501, line: 28, type: !107)
!8093 = !DILocalVariable(name: "stream", arg: 2, scope: !8088, file: !501, line: 28, type: !497)
!8094 = !DILocation(line: 0, scope: !8088)
!8095 = !DILocation(line: 30, column: 27, scope: !8088)
!8096 = !DILocation(line: 30, column: 50, scope: !8088)
!8097 = !DILocation(line: 30, column: 9, scope: !8088)
!8098 = !DILocation(line: 30, column: 2, scope: !8088)
!8099 = distinct !DISubprogram(name: "fputc", scope: !501, file: !501, line: 41, type: !8089, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8100)
!8100 = !{!8101, !8102}
!8101 = !DILocalVariable(name: "c", arg: 1, scope: !8099, file: !501, line: 41, type: !107)
!8102 = !DILocalVariable(name: "stream", arg: 2, scope: !8099, file: !501, line: 41, type: !497)
!8103 = !DILocation(line: 0, scope: !8099)
!8104 = !DILocation(line: 43, column: 9, scope: !8099)
!8105 = !DILocation(line: 43, column: 2, scope: !8099)
!8106 = distinct !DISubprogram(name: "zephyr_fputc", scope: !8107, file: !8107, line: 72, type: !8089, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8108)
!8107 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/integration")
!8108 = !{!8109, !8110}
!8109 = !DILocalVariable(name: "c", arg: 1, scope: !8106, file: !8107, line: 72, type: !107)
!8110 = !DILocalVariable(name: "stream", arg: 2, scope: !8106, file: !8107, line: 72, type: !497)
!8111 = !DILocation(line: 0, scope: !8106)
!8112 = !DILocation(line: 81, column: 2, scope: !8113)
!8113 = distinct !DILexicalBlock(scope: !8106, file: !8107, line: 81, column: 2)
!8114 = !{i64 2155132535}
!8115 = !DILocation(line: 82, column: 9, scope: !8106)
!8116 = !DILocation(line: 82, column: 2, scope: !8106)
!8117 = distinct !DISubprogram(name: "fputs", scope: !501, file: !501, line: 46, type: !8118, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8121)
!8118 = !DISubroutineType(types: !8119)
!8119 = !{!107, !7714, !8120}
!8120 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !497)
!8121 = !{!8122, !8123, !8124, !8125}
!8122 = !DILocalVariable(name: "s", arg: 1, scope: !8117, file: !501, line: 46, type: !7714)
!8123 = !DILocalVariable(name: "stream", arg: 2, scope: !8117, file: !501, line: 46, type: !8120)
!8124 = !DILocalVariable(name: "len", scope: !8117, file: !501, line: 48, type: !107)
!8125 = !DILocalVariable(name: "ret", scope: !8117, file: !501, line: 49, type: !107)
!8126 = !DILocation(line: 0, scope: !8117)
!8127 = !DILocation(line: 48, column: 12, scope: !8117)
!8128 = !DILocation(line: 51, column: 8, scope: !8117)
!8129 = !DILocation(line: 53, column: 13, scope: !8117)
!8130 = !DILocation(line: 53, column: 9, scope: !8117)
!8131 = !DILocation(line: 53, column: 2, scope: !8117)
!8132 = distinct !DISubprogram(name: "fwrite", scope: !501, file: !501, line: 99, type: !8133, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8135)
!8133 = !DISubroutineType(types: !8134)
!8134 = !{!185, !8014, !185, !185, !8120}
!8135 = !{!8136, !8137, !8138, !8139}
!8136 = !DILocalVariable(name: "ptr", arg: 1, scope: !8132, file: !501, line: 99, type: !8014)
!8137 = !DILocalVariable(name: "size", arg: 2, scope: !8132, file: !501, line: 99, type: !185)
!8138 = !DILocalVariable(name: "nitems", arg: 3, scope: !8132, file: !501, line: 99, type: !185)
!8139 = !DILocalVariable(name: "stream", arg: 4, scope: !8132, file: !501, line: 100, type: !8120)
!8140 = !DILocation(line: 0, scope: !8132)
!8141 = !DILocation(line: 102, column: 9, scope: !8132)
!8142 = !DILocation(line: 102, column: 2, scope: !8132)
!8143 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !8107, file: !8107, line: 96, type: !8133, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8144)
!8144 = !{!8145, !8146, !8147, !8148}
!8145 = !DILocalVariable(name: "ptr", arg: 1, scope: !8143, file: !8107, line: 96, type: !8014)
!8146 = !DILocalVariable(name: "size", arg: 2, scope: !8143, file: !8107, line: 96, type: !185)
!8147 = !DILocalVariable(name: "nitems", arg: 3, scope: !8143, file: !8107, line: 96, type: !185)
!8148 = !DILocalVariable(name: "stream", arg: 4, scope: !8143, file: !8107, line: 96, type: !8120)
!8149 = !DILocation(line: 0, scope: !8143)
!8150 = !DILocation(line: 107, column: 2, scope: !8151)
!8151 = distinct !DILexicalBlock(scope: !8143, file: !8107, line: 107, column: 2)
!8152 = !{i64 2155132639}
!8153 = !DILocation(line: 108, column: 9, scope: !8143)
!8154 = !DILocation(line: 108, column: 2, scope: !8143)
!8155 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !501, file: !501, line: 56, type: !8133, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8156)
!8156 = !{!8157, !8158, !8159, !8160, !8161, !8162, !8163, !8164}
!8157 = !DILocalVariable(name: "ptr", arg: 1, scope: !8155, file: !501, line: 56, type: !8014)
!8158 = !DILocalVariable(name: "size", arg: 2, scope: !8155, file: !501, line: 56, type: !185)
!8159 = !DILocalVariable(name: "nitems", arg: 3, scope: !8155, file: !501, line: 57, type: !185)
!8160 = !DILocalVariable(name: "stream", arg: 4, scope: !8155, file: !501, line: 57, type: !8120)
!8161 = !DILocalVariable(name: "i", scope: !8155, file: !501, line: 59, type: !185)
!8162 = !DILocalVariable(name: "j", scope: !8155, file: !501, line: 60, type: !185)
!8163 = !DILocalVariable(name: "p", scope: !8155, file: !501, line: 61, type: !2933)
!8164 = !DILabel(scope: !8155, name: "done", file: !501, line: 82)
!8165 = !DILocation(line: 0, scope: !8155)
!8166 = !DILocation(line: 63, column: 14, scope: !8167)
!8167 = distinct !DILexicalBlock(scope: !8155, file: !501, line: 63, column: 6)
!8168 = !DILocation(line: 63, column: 24, scope: !8167)
!8169 = !DILocation(line: 72, column: 3, scope: !8170)
!8170 = distinct !DILexicalBlock(scope: !8155, file: !501, line: 70, column: 5)
!8171 = !DILocation(line: 0, scope: !8170)
!8172 = !DILocation(line: 73, column: 8, scope: !8173)
!8173 = distinct !DILexicalBlock(scope: !8174, file: !501, line: 73, column: 8)
!8174 = distinct !DILexicalBlock(scope: !8170, file: !501, line: 72, column: 6)
!8175 = !DILocation(line: 73, column: 29, scope: !8173)
!8176 = !DILocation(line: 73, column: 27, scope: !8173)
!8177 = !DILocation(line: 73, column: 21, scope: !8173)
!8178 = !DILocation(line: 73, column: 33, scope: !8173)
!8179 = !DILocation(line: 73, column: 8, scope: !8174)
!8180 = !DILocation(line: 76, column: 5, scope: !8174)
!8181 = !DILocation(line: 77, column: 14, scope: !8170)
!8182 = !DILocation(line: 77, column: 3, scope: !8174)
!8183 = distinct !{!8183, !8169, !8184}
!8184 = !DILocation(line: 77, column: 17, scope: !8170)
!8185 = !DILocation(line: 79, column: 4, scope: !8170)
!8186 = !DILocation(line: 80, column: 13, scope: !8155)
!8187 = !DILocation(line: 80, column: 2, scope: !8170)
!8188 = distinct !{!8188, !8189, !8190}
!8189 = !DILocation(line: 70, column: 2, scope: !8155)
!8190 = !DILocation(line: 80, column: 16, scope: !8155)
!8191 = !DILocation(line: 82, column: 1, scope: !8155)
!8192 = !DILocation(line: 83, column: 17, scope: !8155)
!8193 = !DILocation(line: 83, column: 2, scope: !8155)
!8194 = !DILocation(line: 84, column: 1, scope: !8155)
!8195 = distinct !DISubprogram(name: "puts", scope: !501, file: !501, line: 106, type: !8196, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8198)
!8196 = !DISubroutineType(types: !8197)
!8197 = !{!107, !118}
!8198 = !{!8199}
!8199 = !DILocalVariable(name: "s", arg: 1, scope: !8195, file: !501, line: 106, type: !118)
!8200 = !DILocation(line: 0, scope: !8195)
!8201 = !DILocation(line: 108, column: 6, scope: !8202)
!8202 = distinct !DILexicalBlock(scope: !8195, file: !501, line: 108, column: 6)
!8203 = !DILocation(line: 108, column: 23, scope: !8202)
!8204 = !DILocation(line: 108, column: 6, scope: !8195)
!8205 = !DILocation(line: 112, column: 9, scope: !8195)
!8206 = !DILocation(line: 112, column: 29, scope: !8195)
!8207 = !DILocation(line: 112, column: 2, scope: !8195)
!8208 = !DILocation(line: 113, column: 1, scope: !8195)
!8209 = distinct !DISubprogram(name: "end_report", scope: !533, file: !533, line: 67, type: !3148, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2236)
!8210 = !DILocation(line: 69, column: 6, scope: !8211)
!8211 = distinct !DILexicalBlock(scope: !8209, file: !533, line: 69, column: 6)
!8212 = !DILocation(line: 0, scope: !8211)
!8213 = !DILocation(line: 74, column: 1, scope: !8209)
!8214 = distinct !DISubprogram(name: "z_impl_z_test_1cpu_start", scope: !533, file: !533, line: 159, type: !3148, scopeLine: 160, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2236)
!8215 = !DILocation(line: 183, column: 1, scope: !8214)
!8216 = distinct !DISubprogram(name: "z_impl_z_test_1cpu_stop", scope: !533, file: !533, line: 185, type: !3148, scopeLine: 186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2236)
!8217 = !DILocation(line: 196, column: 1, scope: !8216)
!8218 = distinct !DISubprogram(name: "ztest_skip_failed_assumption", scope: !533, file: !533, line: 295, type: !3148, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2236)
!8219 = !DILocation(line: 298, column: 34, scope: !8220)
!8220 = distinct !DILexicalBlock(scope: !8221, file: !533, line: 297, column: 47)
!8221 = distinct !DILexicalBlock(scope: !8218, file: !533, line: 297, column: 6)
!8222 = !DILocation(line: 300, column: 2, scope: !8218)
!8223 = !DILocation(line: 301, column: 1, scope: !8218)
!8224 = distinct !DISubprogram(name: "ztest_test_skip", scope: !533, file: !533, line: 476, type: !3148, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2236)
!8225 = !DILocation(line: 478, column: 10, scope: !8224)
!8226 = !DILocation(line: 478, column: 2, scope: !8224)
!8227 = !DILocation(line: 480, column: 15, scope: !8228)
!8228 = distinct !DILexicalBlock(scope: !8224, file: !533, line: 478, column: 17)
!8229 = !DILocation(line: 481, column: 3, scope: !8228)
!8230 = !DILocation(line: 484, column: 15, scope: !8228)
!8231 = !DILocation(line: 485, column: 3, scope: !8228)
!8232 = !DILocation(line: 486, column: 3, scope: !8228)
!8233 = !DILocation(line: 489, column: 9, scope: !8228)
!8234 = !DILocation(line: 488, column: 3, scope: !8228)
!8235 = !DILocation(line: 490, column: 15, scope: !8228)
!8236 = !DILocation(line: 491, column: 3, scope: !8228)
!8237 = !DILocation(line: 493, column: 1, scope: !8224)
!8238 = distinct !DISubprogram(name: "test_finalize", scope: !533, file: !533, line: 432, type: !3148, scopeLine: 433, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2236)
!8239 = !DILocation(line: 435, column: 3, scope: !8240)
!8240 = distinct !DILexicalBlock(scope: !8241, file: !533, line: 434, column: 41)
!8241 = distinct !DILexicalBlock(scope: !8238, file: !533, line: 434, column: 6)
!8242 = !DILocation(line: 436, column: 18, scope: !8240)
!8243 = !DILocation(line: 436, column: 3, scope: !8240)
!8244 = !DILocation(line: 438, column: 1, scope: !8238)
!8245 = distinct !DISubprogram(name: "get_friendly_phase_name", scope: !533, file: !533, line: 274, type: !8246, scopeLine: 275, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8248)
!8246 = !DISubroutineType(types: !8247)
!8247 = !{!118, !532}
!8248 = !{!8249}
!8249 = !DILocalVariable(name: "phase", arg: 1, scope: !8245, file: !533, line: 274, type: !532)
!8250 = !DILocation(line: 0, scope: !8245)
!8251 = !DILocation(line: 276, column: 2, scope: !8245)
!8252 = !DILocation(line: 0, scope: !8253)
!8253 = distinct !DILexicalBlock(scope: !8245, file: !533, line: 276, column: 17)
!8254 = !DILocation(line: 292, column: 1, scope: !8245)
!8255 = distinct !DISubprogram(name: "k_thread_abort", scope: !4476, file: !4476, line: 188, type: !8256, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8260)
!8256 = !DISubroutineType(types: !8257)
!8257 = !{null, !8258}
!8258 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !309, line: 347, baseType: !8259)
!8259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !586, size: 32)
!8260 = !{!8261}
!8261 = !DILocalVariable(name: "thread", arg: 1, scope: !8255, file: !4476, line: 188, type: !8258)
!8262 = !DILocation(line: 0, scope: !8255)
!8263 = !DILocation(line: 197, column: 2, scope: !8264)
!8264 = distinct !DILexicalBlock(scope: !8255, file: !4476, line: 197, column: 2)
!8265 = !{i64 2155094338}
!8266 = !DILocation(line: 198, column: 2, scope: !8255)
!8267 = !DILocation(line: 199, column: 1, scope: !8255)
!8268 = distinct !DISubprogram(name: "k_current_get", scope: !406, file: !406, line: 530, type: !8269, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2236)
!8269 = !DISubroutineType(types: !8270)
!8270 = !{!8258}
!8271 = !DILocation(line: 535, column: 9, scope: !8268)
!8272 = !DILocation(line: 535, column: 2, scope: !8268)
!8273 = distinct !DISubprogram(name: "z_current_get", scope: !4476, file: !4476, line: 173, type: !8269, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2236)
!8274 = !DILocation(line: 180, column: 2, scope: !8275)
!8275 = distinct !DILexicalBlock(scope: !8273, file: !4476, line: 180, column: 2)
!8276 = !{i64 2155094270}
!8277 = !DILocation(line: 181, column: 9, scope: !8273)
!8278 = !DILocation(line: 181, column: 2, scope: !8273)
!8279 = distinct !DISubprogram(name: "ztest_test_fail", scope: !533, file: !533, line: 440, type: !3148, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2236)
!8280 = !DILocation(line: 442, column: 10, scope: !8279)
!8281 = !DILocation(line: 442, column: 2, scope: !8279)
!8282 = !DILocation(line: 444, column: 15, scope: !8283)
!8283 = distinct !DILexicalBlock(scope: !8279, file: !533, line: 442, column: 17)
!8284 = !DILocation(line: 445, column: 3, scope: !8283)
!8285 = !DILocation(line: 448, column: 15, scope: !8283)
!8286 = !DILocation(line: 449, column: 3, scope: !8283)
!8287 = !DILocation(line: 450, column: 3, scope: !8283)
!8288 = !DILocation(line: 453, column: 9, scope: !8283)
!8289 = !DILocation(line: 452, column: 3, scope: !8283)
!8290 = !DILocation(line: 454, column: 15, scope: !8283)
!8291 = !DILocation(line: 455, column: 3, scope: !8283)
!8292 = !DILocation(line: 457, column: 1, scope: !8279)
!8293 = distinct !DISubprogram(name: "ztest_test_pass", scope: !533, file: !533, line: 459, type: !3148, scopeLine: 460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2236)
!8294 = !DILocation(line: 461, column: 10, scope: !8293)
!8295 = !DILocation(line: 461, column: 2, scope: !8293)
!8296 = !DILocation(line: 463, column: 15, scope: !8297)
!8297 = distinct !DILexicalBlock(scope: !8293, file: !533, line: 461, column: 17)
!8298 = !DILocation(line: 465, column: 3, scope: !8297)
!8299 = !DILocation(line: 468, column: 9, scope: !8297)
!8300 = !DILocation(line: 467, column: 3, scope: !8297)
!8301 = !DILocation(line: 469, column: 15, scope: !8297)
!8302 = !DILocation(line: 470, column: 7, scope: !8303)
!8303 = distinct !DILexicalBlock(scope: !8297, file: !533, line: 470, column: 7)
!8304 = !DILocation(line: 470, column: 13, scope: !8303)
!8305 = !DILocation(line: 470, column: 7, scope: !8297)
!8306 = !DILocation(line: 0, scope: !8297)
!8307 = !DILocation(line: 474, column: 1, scope: !8293)
!8308 = distinct !DISubprogram(name: "ztest_simple_1cpu_before", scope: !533, file: !533, line: 495, type: !131, scopeLine: 496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8309)
!8309 = !{!8310}
!8310 = !DILocalVariable(name: "data", arg: 1, scope: !8308, file: !533, line: 495, type: !106)
!8311 = !DILocation(line: 0, scope: !8308)
!8312 = !DILocation(line: 498, column: 2, scope: !8308)
!8313 = !DILocation(line: 499, column: 1, scope: !8308)
!8314 = distinct !DISubprogram(name: "z_test_1cpu_start", scope: !8315, file: !8315, line: 24, type: !3148, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2236)
!8315 = !DIFile(filename: "zephyr/include/generated/syscalls/ztest_test.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/integration")
!8316 = !DILocation(line: 32, column: 2, scope: !8317)
!8317 = distinct !DILexicalBlock(scope: !8314, file: !8315, line: 32, column: 2)
!8318 = !{i64 2155216725}
!8319 = !DILocation(line: 34, column: 1, scope: !8314)
!8320 = distinct !DISubprogram(name: "ztest_simple_1cpu_after", scope: !533, file: !533, line: 501, type: !131, scopeLine: 502, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8321)
!8321 = !{!8322}
!8322 = !DILocalVariable(name: "data", arg: 1, scope: !8320, file: !533, line: 501, type: !106)
!8323 = !DILocation(line: 0, scope: !8320)
!8324 = !DILocation(line: 504, column: 2, scope: !8320)
!8325 = !DILocation(line: 505, column: 1, scope: !8320)
!8326 = distinct !DISubprogram(name: "z_test_1cpu_stop", scope: !8315, file: !8315, line: 47, type: !3148, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2236)
!8327 = !DILocation(line: 55, column: 2, scope: !8328)
!8328 = distinct !DILexicalBlock(scope: !8326, file: !8315, line: 55, column: 2)
!8329 = !{i64 2155216793}
!8330 = !DILocation(line: 57, column: 1, scope: !8326)
!8331 = distinct !DISubprogram(name: "z_ztest_get_next_test", scope: !533, file: !533, line: 617, type: !8332, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8351)
!8332 = !DISubroutineType(types: !8333)
!8333 = !{!8334, !118, !8334}
!8334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8335, size: 32)
!8335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_unit_test", file: !114, line: 97, size: 160, elements: !8336)
!8336 = !{!8337, !8338, !8339, !8340, !8341}
!8337 = !DIDerivedType(tag: DW_TAG_member, name: "test_suite_name", scope: !8335, file: !114, line: 98, baseType: !118, size: 32)
!8338 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8335, file: !114, line: 99, baseType: !118, size: 32, offset: 32)
!8339 = !DIDerivedType(tag: DW_TAG_member, name: "test", scope: !8335, file: !114, line: 100, baseType: !130, size: 32, offset: 64)
!8340 = !DIDerivedType(tag: DW_TAG_member, name: "thread_options", scope: !8335, file: !114, line: 101, baseType: !152, size: 32, offset: 96)
!8341 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !8335, file: !114, line: 104, baseType: !8342, size: 32, offset: 128)
!8342 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8343)
!8343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8344, size: 32)
!8344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_unit_test_stats", file: !114, line: 123, size: 160, elements: !8345)
!8345 = !{!8346, !8347, !8348, !8349, !8350}
!8346 = !DIDerivedType(tag: DW_TAG_member, name: "run_count", scope: !8344, file: !114, line: 125, baseType: !152, size: 32)
!8347 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !8344, file: !114, line: 127, baseType: !152, size: 32, offset: 32)
!8348 = !DIDerivedType(tag: DW_TAG_member, name: "fail_count", scope: !8344, file: !114, line: 129, baseType: !152, size: 32, offset: 64)
!8349 = !DIDerivedType(tag: DW_TAG_member, name: "pass_count", scope: !8344, file: !114, line: 131, baseType: !152, size: 32, offset: 96)
!8350 = !DIDerivedType(tag: DW_TAG_member, name: "duration_worst_ms", scope: !8344, file: !114, line: 133, baseType: !152, size: 32, offset: 128)
!8351 = !{!8352, !8353, !8354}
!8352 = !DILocalVariable(name: "suite", arg: 1, scope: !8331, file: !533, line: 617, type: !118)
!8353 = !DILocalVariable(name: "prev", arg: 2, scope: !8331, file: !533, line: 617, type: !8334)
!8354 = !DILocalVariable(name: "test", scope: !8331, file: !533, line: 619, type: !8334)
!8355 = !DILocation(line: 0, scope: !8331)
!8356 = !DILocation(line: 619, column: 39, scope: !8331)
!8357 = !DILocation(line: 619, column: 33, scope: !8331)
!8358 = !DILocation(line: 621, column: 14, scope: !8359)
!8359 = distinct !DILexicalBlock(scope: !8360, file: !533, line: 621, column: 2)
!8360 = distinct !DILexicalBlock(scope: !8331, file: !533, line: 621, column: 2)
!8361 = !DILocation(line: 621, column: 2, scope: !8360)
!8362 = !DILocation(line: 622, column: 27, scope: !8363)
!8363 = distinct !DILexicalBlock(scope: !8364, file: !533, line: 622, column: 7)
!8364 = distinct !DILexicalBlock(scope: !8359, file: !533, line: 621, column: 51)
!8365 = !DILocation(line: 622, column: 7, scope: !8363)
!8366 = !DILocation(line: 622, column: 44, scope: !8363)
!8367 = !DILocation(line: 622, column: 7, scope: !8364)
!8368 = !DILocation(line: 621, column: 43, scope: !8359)
!8369 = distinct !{!8369, !8361, !8370}
!8370 = !DILocation(line: 625, column: 2, scope: !8360)
!8371 = !DILocation(line: 627, column: 1, scope: !8331)
!8372 = distinct !DISubprogram(name: "z_ztest_run_test_suite", scope: !533, file: !533, line: 764, type: !8196, scopeLine: 765, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8373)
!8373 = !{!8374}
!8374 = !DILocalVariable(name: "name", arg: 1, scope: !8372, file: !533, line: 764, type: !118)
!8375 = !DILocation(line: 0, scope: !8372)
!8376 = !DILocation(line: 766, column: 36, scope: !8372)
!8377 = !DILocation(line: 766, column: 9, scope: !8372)
!8378 = !DILocation(line: 766, column: 2, scope: !8372)
!8379 = distinct !DISubprogram(name: "ztest_find_test_suite", scope: !533, file: !533, line: 604, type: !8380, scopeLine: 605, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8399)
!8380 = !DISubroutineType(types: !8381)
!8381 = !{!8382, !118}
!8382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8383, size: 32)
!8383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_node", file: !114, line: 177, size: 224, elements: !8384)
!8384 = !{!8385, !8386, !8387, !8388, !8389, !8390, !8391}
!8385 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8383, file: !114, line: 179, baseType: !117, size: 32)
!8386 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !8383, file: !114, line: 182, baseType: !122, size: 32, offset: 32)
!8387 = !DIDerivedType(tag: DW_TAG_member, name: "before", scope: !8383, file: !114, line: 185, baseType: !128, size: 32, offset: 64)
!8388 = !DIDerivedType(tag: DW_TAG_member, name: "after", scope: !8383, file: !114, line: 188, baseType: !134, size: 32, offset: 96)
!8389 = !DIDerivedType(tag: DW_TAG_member, name: "teardown", scope: !8383, file: !114, line: 191, baseType: !137, size: 32, offset: 128)
!8390 = !DIDerivedType(tag: DW_TAG_member, name: "predicate", scope: !8383, file: !114, line: 194, baseType: !140, size: 32, offset: 160)
!8391 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !8383, file: !114, line: 197, baseType: !8392, size: 32, offset: 192)
!8392 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8393)
!8393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8394, size: 32)
!8394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_stats", file: !114, line: 114, size: 96, elements: !8395)
!8395 = !{!8396, !8397, !8398}
!8396 = !DIDerivedType(tag: DW_TAG_member, name: "run_count", scope: !8394, file: !114, line: 116, baseType: !152, size: 32)
!8397 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !8394, file: !114, line: 118, baseType: !152, size: 32, offset: 32)
!8398 = !DIDerivedType(tag: DW_TAG_member, name: "fail_count", scope: !8394, file: !114, line: 120, baseType: !152, size: 32, offset: 64)
!8399 = !{!8400, !8401}
!8400 = !DILocalVariable(name: "name", arg: 1, scope: !8379, file: !533, line: 604, type: !118)
!8401 = !DILocalVariable(name: "node", scope: !8379, file: !533, line: 606, type: !8382)
!8402 = !DILocation(line: 0, scope: !8379)
!8403 = !DILocation(line: 608, column: 2, scope: !8404)
!8404 = distinct !DILexicalBlock(scope: !8379, file: !533, line: 608, column: 2)
!8405 = !DILocation(line: 609, column: 26, scope: !8406)
!8406 = distinct !DILexicalBlock(scope: !8407, file: !533, line: 609, column: 7)
!8407 = distinct !DILexicalBlock(scope: !8408, file: !533, line: 608, column: 87)
!8408 = distinct !DILexicalBlock(scope: !8404, file: !533, line: 608, column: 2)
!8409 = !DILocation(line: 609, column: 7, scope: !8406)
!8410 = !DILocation(line: 609, column: 32, scope: !8406)
!8411 = !DILocation(line: 609, column: 7, scope: !8407)
!8412 = !DILocation(line: 608, column: 79, scope: !8408)
!8413 = !DILocation(line: 608, column: 49, scope: !8408)
!8414 = distinct !{!8414, !8403, !8415}
!8415 = !DILocation(line: 612, column: 2, scope: !8404)
!8416 = !DILocation(line: 615, column: 1, scope: !8379)
!8417 = distinct !DISubprogram(name: "z_ztest_run_test_suite_ptr", scope: !533, file: !533, line: 652, type: !8418, scopeLine: 653, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8420)
!8418 = !DISubroutineType(types: !8419)
!8419 = !{!107, !8382}
!8420 = !{!8421, !8422, !8423, !8424, !8425, !8426}
!8421 = !DILocalVariable(name: "suite", arg: 1, scope: !8417, file: !533, line: 652, type: !8382)
!8422 = !DILocalVariable(name: "test", scope: !8417, file: !533, line: 654, type: !8334)
!8423 = !DILocalVariable(name: "data", scope: !8417, file: !533, line: 655, type: !106)
!8424 = !DILocalVariable(name: "fail", scope: !8417, file: !533, line: 656, type: !107)
!8425 = !DILocalVariable(name: "tc_result", scope: !8417, file: !533, line: 657, type: !107)
!8426 = !DILocalVariable(name: "i", scope: !8427, file: !533, line: 692, type: !107)
!8427 = distinct !DILexicalBlock(scope: !8417, file: !533, line: 692, column: 2)
!8428 = !DILocation(line: 0, scope: !8417)
!8429 = !DILocation(line: 663, column: 12, scope: !8430)
!8430 = distinct !DILexicalBlock(scope: !8417, file: !533, line: 663, column: 6)
!8431 = !DILocation(line: 663, column: 6, scope: !8417)
!8432 = !DILocation(line: 664, column: 15, scope: !8433)
!8433 = distinct !DILexicalBlock(scope: !8430, file: !533, line: 663, column: 21)
!8434 = !DILocation(line: 665, column: 3, scope: !8433)
!8435 = !DILocation(line: 679, column: 2, scope: !8436)
!8436 = distinct !DILexicalBlock(scope: !8417, file: !533, line: 679, column: 2)
!8437 = !DILocation(line: 680, column: 33, scope: !8417)
!8438 = !DILocation(line: 681, column: 14, scope: !8417)
!8439 = !DILocation(line: 682, column: 8, scope: !8417)
!8440 = !DILocation(line: 688, column: 55, scope: !8441)
!8441 = distinct !DILexicalBlock(scope: !8417, file: !533, line: 688, column: 6)
!8442 = !DILocation(line: 688, column: 61, scope: !8441)
!8443 = !DILocation(line: 688, column: 6, scope: !8417)
!8444 = !DILocation(line: 689, column: 10, scope: !8445)
!8445 = distinct !DILexicalBlock(scope: !8441, file: !533, line: 688, column: 70)
!8446 = !DILocation(line: 690, column: 2, scope: !8445)
!8447 = !DILocation(line: 0, scope: !8427)
!8448 = !DILocation(line: 727, column: 3, scope: !8449)
!8449 = distinct !DILexicalBlock(scope: !8450, file: !533, line: 692, column: 46)
!8450 = distinct !DILexicalBlock(scope: !8427, file: !533, line: 692, column: 2)
!8451 = !DILocation(line: 0, scope: !8449)
!8452 = !DILocation(line: 727, column: 48, scope: !8449)
!8453 = !DILocation(line: 727, column: 19, scope: !8449)
!8454 = !DILocation(line: 727, column: 61, scope: !8449)
!8455 = !DILocation(line: 728, column: 41, scope: !8456)
!8456 = distinct !DILexicalBlock(scope: !8457, file: !533, line: 728, column: 8)
!8457 = distinct !DILexicalBlock(scope: !8449, file: !533, line: 727, column: 71)
!8458 = !DILocation(line: 728, column: 53, scope: !8456)
!8459 = !DILocation(line: 728, column: 8, scope: !8456)
!8460 = !DILocation(line: 728, column: 8, scope: !8457)
!8461 = !DILocation(line: 729, column: 11, scope: !8462)
!8462 = distinct !DILexicalBlock(scope: !8456, file: !533, line: 728, column: 60)
!8463 = !DILocation(line: 729, column: 18, scope: !8462)
!8464 = !DILocation(line: 729, column: 27, scope: !8462)
!8465 = !DILocation(line: 730, column: 17, scope: !8462)
!8466 = !DILocation(line: 731, column: 9, scope: !8462)
!8467 = !DILocation(line: 732, column: 12, scope: !8468)
!8468 = distinct !DILexicalBlock(scope: !8469, file: !533, line: 731, column: 31)
!8469 = distinct !DILexicalBlock(scope: !8462, file: !533, line: 731, column: 9)
!8470 = !DILocation(line: 732, column: 19, scope: !8468)
!8471 = !DILocation(line: 733, column: 5, scope: !8468)
!8472 = !DILocation(line: 734, column: 12, scope: !8473)
!8473 = distinct !DILexicalBlock(scope: !8474, file: !533, line: 733, column: 38)
!8474 = distinct !DILexicalBlock(scope: !8469, file: !533, line: 733, column: 16)
!8475 = !DILocation(line: 734, column: 19, scope: !8473)
!8476 = !DILocation(line: 735, column: 5, scope: !8473)
!8477 = !DILocation(line: 736, column: 12, scope: !8478)
!8478 = distinct !DILexicalBlock(scope: !8479, file: !533, line: 735, column: 38)
!8479 = distinct !DILexicalBlock(scope: !8474, file: !533, line: 735, column: 16)
!8480 = !DILocation(line: 736, column: 19, scope: !8478)
!8481 = !DILocation(line: 737, column: 5, scope: !8478)
!8482 = !DILocation(line: 0, scope: !8469)
!8483 = !DILocation(line: 739, column: 19, scope: !8484)
!8484 = distinct !DILexicalBlock(scope: !8462, file: !533, line: 739, column: 9)
!8485 = !DILocation(line: 739, column: 9, scope: !8462)
!8486 = !DILocation(line: 744, column: 31, scope: !8487)
!8487 = distinct !DILexicalBlock(scope: !8457, file: !533, line: 744, column: 8)
!8488 = !DILocation(line: 744, column: 43, scope: !8487)
!8489 = !DILocation(line: 744, column: 8, scope: !8457)
!8490 = distinct !{!8490, !8448, !8491}
!8491 = !DILocation(line: 747, column: 3, scope: !8449)
!8492 = !DILocation(line: 750, column: 7, scope: !8493)
!8493 = distinct !DILexicalBlock(scope: !8449, file: !533, line: 750, column: 7)
!8494 = !DILocation(line: 750, column: 38, scope: !8493)
!8495 = !DILocation(line: 751, column: 16, scope: !8496)
!8496 = distinct !DILexicalBlock(scope: !8493, file: !533, line: 750, column: 52)
!8497 = !DILocation(line: 752, column: 3, scope: !8496)
!8498 = !DILocation(line: 755, column: 2, scope: !8499)
!8499 = distinct !DILexicalBlock(scope: !8500, file: !533, line: 755, column: 2)
!8500 = distinct !DILexicalBlock(scope: !8417, file: !533, line: 755, column: 2)
!8501 = !DILocation(line: 0, scope: !8499)
!8502 = !DILocation(line: 756, column: 8, scope: !8417)
!8503 = !DILocation(line: 757, column: 13, scope: !8504)
!8504 = distinct !DILexicalBlock(scope: !8417, file: !533, line: 757, column: 6)
!8505 = !DILocation(line: 757, column: 22, scope: !8504)
!8506 = !DILocation(line: 757, column: 6, scope: !8417)
!8507 = !DILocation(line: 758, column: 3, scope: !8508)
!8508 = distinct !DILexicalBlock(scope: !8504, file: !533, line: 757, column: 31)
!8509 = !DILocation(line: 759, column: 2, scope: !8508)
!8510 = !DILocation(line: 762, column: 1, scope: !8417)
!8511 = distinct !DISubprogram(name: "run_test", scope: !533, file: !533, line: 521, type: !8512, scopeLine: 522, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8514)
!8512 = !DISubroutineType(types: !8513)
!8513 = !{!107, !8382, !8334, !106}
!8514 = !{!8515, !8516, !8517, !8518}
!8515 = !DILocalVariable(name: "suite", arg: 1, scope: !8511, file: !533, line: 521, type: !8382)
!8516 = !DILocalVariable(name: "test", arg: 2, scope: !8511, file: !533, line: 521, type: !8334)
!8517 = !DILocalVariable(name: "data", arg: 3, scope: !8511, file: !533, line: 521, type: !106)
!8518 = !DILocalVariable(name: "ret", scope: !8511, file: !533, line: 523, type: !107)
!8519 = !DILocation(line: 0, scope: !8511)
!8520 = !DILocation(line: 528, column: 2, scope: !8521)
!8521 = distinct !DILexicalBlock(scope: !8511, file: !533, line: 528, column: 2)
!8522 = !DILocation(line: 530, column: 8, scope: !8511)
!8523 = !DILocation(line: 536, column: 3, scope: !8524)
!8524 = distinct !DILexicalBlock(scope: !8525, file: !533, line: 535, column: 41)
!8525 = distinct !DILexicalBlock(scope: !8511, file: !533, line: 535, column: 6)
!8526 = !DILocation(line: 539, column: 32, scope: !8524)
!8527 = !DILocation(line: 539, column: 39, scope: !8524)
!8528 = !DILocation(line: 541, column: 11, scope: !8524)
!8529 = !DILocation(line: 541, column: 26, scope: !8524)
!8530 = !DILocation(line: 537, column: 3, scope: !8524)
!8531 = !DILocation(line: 543, column: 3, scope: !8524)
!8532 = !DILocation(line: 544, column: 13, scope: !8533)
!8533 = distinct !DILexicalBlock(scope: !8524, file: !533, line: 544, column: 7)
!8534 = !DILocation(line: 544, column: 18, scope: !8533)
!8535 = !DILocation(line: 544, column: 7, scope: !8524)
!8536 = !DILocation(line: 545, column: 4, scope: !8537)
!8537 = distinct !DILexicalBlock(scope: !8533, file: !533, line: 544, column: 27)
!8538 = !DILocation(line: 546, column: 3, scope: !8537)
!8539 = !DILocation(line: 548, column: 7, scope: !8540)
!8540 = distinct !DILexicalBlock(scope: !8524, file: !533, line: 548, column: 7)
!8541 = !DILocation(line: 548, column: 46, scope: !8540)
!8542 = !DILocation(line: 550, column: 4, scope: !8543)
!8543 = distinct !DILexicalBlock(scope: !8540, file: !533, line: 549, column: 47)
!8544 = !DILocation(line: 551, column: 4, scope: !8543)
!8545 = !DILocation(line: 552, column: 3, scope: !8543)
!8546 = !DILocation(line: 564, column: 8, scope: !8511)
!8547 = !DILocation(line: 565, column: 13, scope: !8548)
!8548 = distinct !DILexicalBlock(scope: !8511, file: !533, line: 565, column: 6)
!8549 = !DILocation(line: 565, column: 19, scope: !8548)
!8550 = !DILocation(line: 565, column: 6, scope: !8511)
!8551 = !DILocation(line: 566, column: 3, scope: !8552)
!8552 = distinct !DILexicalBlock(scope: !8548, file: !533, line: 565, column: 28)
!8553 = !DILocation(line: 567, column: 2, scope: !8552)
!8554 = !DILocation(line: 568, column: 2, scope: !8511)
!8555 = !DILocation(line: 570, column: 2, scope: !8511)
!8556 = !DILocation(line: 571, column: 6, scope: !8557)
!8557 = distinct !DILexicalBlock(scope: !8511, file: !533, line: 571, column: 6)
!8558 = !DILocation(line: 571, column: 28, scope: !8557)
!8559 = !DILocation(line: 571, column: 35, scope: !8557)
!8560 = !DILocation(line: 571, column: 20, scope: !8557)
!8561 = !DILocation(line: 571, column: 6, scope: !8511)
!8562 = !DILocation(line: 572, column: 34, scope: !8563)
!8563 = distinct !DILexicalBlock(scope: !8557, file: !533, line: 571, column: 54)
!8564 = !DILocation(line: 573, column: 2, scope: !8563)
!8565 = !DILocation(line: 575, column: 8, scope: !8511)
!8566 = !DILocation(line: 583, column: 6, scope: !8567)
!8567 = distinct !DILexicalBlock(scope: !8511, file: !533, line: 583, column: 6)
!8568 = !DILocation(line: 583, column: 39, scope: !8567)
!8569 = !DILocation(line: 585, column: 46, scope: !8570)
!8570 = distinct !DILexicalBlock(scope: !8567, file: !533, line: 585, column: 13)
!8571 = !DILocation(line: 590, column: 10, scope: !8572)
!8572 = distinct !DILexicalBlock(scope: !8573, file: !533, line: 589, column: 54)
!8573 = distinct !DILexicalBlock(scope: !8511, file: !533, line: 589, column: 6)
!8574 = !DILocation(line: 593, column: 8, scope: !8511)
!8575 = !DILocation(line: 594, column: 2, scope: !8576)
!8576 = distinct !DILexicalBlock(scope: !8511, file: !533, line: 594, column: 2)
!8577 = !DILocation(line: 595, column: 10, scope: !8578)
!8578 = distinct !DILexicalBlock(scope: !8511, file: !533, line: 595, column: 6)
!8579 = !DILocation(line: 595, column: 21, scope: !8578)
!8580 = !DILocation(line: 595, column: 24, scope: !8578)
!8581 = !DILocation(line: 595, column: 6, scope: !8511)
!8582 = !DILocation(line: 596, column: 15, scope: !8583)
!8583 = distinct !DILexicalBlock(scope: !8578, file: !533, line: 595, column: 56)
!8584 = !DILocation(line: 597, column: 2, scope: !8583)
!8585 = !DILocation(line: 599, column: 2, scope: !8511)
!8586 = distinct !DISubprogram(name: "get_start_time_cyc", scope: !690, file: !690, line: 98, type: !3148, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2236)
!8587 = !DILocation(line: 100, column: 18, scope: !8586)
!8588 = !DILocation(line: 100, column: 16, scope: !8586)
!8589 = !DILocation(line: 101, column: 1, scope: !8586)
!8590 = distinct !DISubprogram(name: "k_thread_create", scope: !4476, file: !4476, line: 24, type: !8591, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8599)
!8591 = !DISubroutineType(types: !8592)
!8592 = !{!8258, !8259, !8593, !185, !559, !106, !106, !106, !107, !152, !8595}
!8593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8594, size: 32)
!8594 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !560, line: 44, baseType: !576)
!8595 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !565, line: 67, baseType: !8596)
!8596 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !565, line: 65, size: 64, elements: !8597)
!8597 = !{!8598}
!8598 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !8596, file: !565, line: 66, baseType: !564, size: 64)
!8599 = !{!8600, !8601, !8602, !8603, !8604, !8605, !8606, !8607, !8608, !8609}
!8600 = !DILocalVariable(name: "new_thread", arg: 1, scope: !8590, file: !4476, line: 24, type: !8259)
!8601 = !DILocalVariable(name: "stack", arg: 2, scope: !8590, file: !4476, line: 24, type: !8593)
!8602 = !DILocalVariable(name: "stack_size", arg: 3, scope: !8590, file: !4476, line: 24, type: !185)
!8603 = !DILocalVariable(name: "entry", arg: 4, scope: !8590, file: !4476, line: 24, type: !559)
!8604 = !DILocalVariable(name: "p1", arg: 5, scope: !8590, file: !4476, line: 24, type: !106)
!8605 = !DILocalVariable(name: "p2", arg: 6, scope: !8590, file: !4476, line: 24, type: !106)
!8606 = !DILocalVariable(name: "p3", arg: 7, scope: !8590, file: !4476, line: 24, type: !106)
!8607 = !DILocalVariable(name: "prio", arg: 8, scope: !8590, file: !4476, line: 24, type: !107)
!8608 = !DILocalVariable(name: "options", arg: 9, scope: !8590, file: !4476, line: 24, type: !152)
!8609 = !DILocalVariable(name: "delay", arg: 10, scope: !8590, file: !4476, line: 24, type: !8595)
!8610 = !DILocation(line: 0, scope: !8590)
!8611 = !DILocation(line: 49, column: 2, scope: !8612)
!8612 = distinct !DILexicalBlock(scope: !8590, file: !4476, line: 49, column: 2)
!8613 = !{i64 2155093726}
!8614 = !DILocation(line: 50, column: 9, scope: !8590)
!8615 = !DILocation(line: 50, column: 2, scope: !8590)
!8616 = distinct !DISubprogram(name: "k_object_access_grant", scope: !8617, file: !8617, line: 24, type: !8618, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8620)
!8617 = !DIFile(filename: "zephyr/include/generated/syscalls/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/integration")
!8618 = !DISubroutineType(types: !8619)
!8619 = !{null, !13, !8259}
!8620 = !{!8621, !8622}
!8621 = !DILocalVariable(name: "object", arg: 1, scope: !8616, file: !8617, line: 24, type: !13)
!8622 = !DILocalVariable(name: "thread", arg: 2, scope: !8616, file: !8617, line: 24, type: !8259)
!8623 = !DILocation(line: 0, scope: !8616)
!8624 = !DILocation(line: 34, column: 2, scope: !8625)
!8625 = distinct !DILexicalBlock(scope: !8616, file: !8617, line: 34, column: 2)
!8626 = !{i64 2154610146}
!8627 = !DILocation(line: 36, column: 1, scope: !8616)
!8628 = distinct !DISubprogram(name: "k_thread_name_set", scope: !4476, file: !4476, line: 391, type: !8629, scopeLine: 392, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8631)
!8629 = !DISubroutineType(types: !8630)
!8630 = !{!107, !8258, !118}
!8631 = !{!8632, !8633}
!8632 = !DILocalVariable(name: "thread", arg: 1, scope: !8628, file: !4476, line: 391, type: !8258)
!8633 = !DILocalVariable(name: "str", arg: 2, scope: !8628, file: !4476, line: 391, type: !118)
!8634 = !DILocation(line: 0, scope: !8628)
!8635 = !DILocation(line: 400, column: 2, scope: !8636)
!8636 = distinct !DILexicalBlock(scope: !8628, file: !4476, line: 400, column: 2)
!8637 = !{i64 2155095154}
!8638 = !DILocation(line: 401, column: 9, scope: !8628)
!8639 = !DILocation(line: 401, column: 2, scope: !8628)
!8640 = distinct !DISubprogram(name: "k_thread_start", scope: !4476, file: !4476, line: 205, type: !8256, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8641)
!8641 = !{!8642}
!8642 = !DILocalVariable(name: "thread", arg: 1, scope: !8640, file: !4476, line: 205, type: !8258)
!8643 = !DILocation(line: 0, scope: !8640)
!8644 = !DILocation(line: 214, column: 2, scope: !8645)
!8645 = distinct !DILexicalBlock(scope: !8640, file: !4476, line: 214, column: 2)
!8646 = !{i64 2155094406}
!8647 = !DILocation(line: 215, column: 2, scope: !8640)
!8648 = !DILocation(line: 216, column: 1, scope: !8640)
!8649 = distinct !DISubprogram(name: "k_thread_join", scope: !4476, file: !4476, line: 74, type: !8650, scopeLine: 75, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8652)
!8650 = !DISubroutineType(types: !8651)
!8651 = !{!107, !8259, !8595}
!8652 = !{!8653, !8654}
!8653 = !DILocalVariable(name: "thread", arg: 1, scope: !8649, file: !4476, line: 74, type: !8259)
!8654 = !DILocalVariable(name: "timeout", arg: 2, scope: !8649, file: !4476, line: 74, type: !8595)
!8655 = !DILocation(line: 0, scope: !8649)
!8656 = !DILocation(line: 83, column: 2, scope: !8657)
!8657 = distinct !DILexicalBlock(scope: !8649, file: !4476, line: 83, column: 2)
!8658 = !{i64 2155093862}
!8659 = !DILocation(line: 84, column: 9, scope: !8649)
!8660 = !DILocation(line: 84, column: 2, scope: !8649)
!8661 = distinct !DISubprogram(name: "run_test_rules", scope: !533, file: !533, line: 207, type: !8662, scopeLine: 208, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8664)
!8662 = !DISubroutineType(types: !8663)
!8663 = !{null, !145, !8334, !106}
!8664 = !{!8665, !8666, !8667, !8668}
!8665 = !DILocalVariable(name: "is_before", arg: 1, scope: !8661, file: !533, line: 207, type: !145)
!8666 = !DILocalVariable(name: "test", arg: 2, scope: !8661, file: !533, line: 207, type: !8334)
!8667 = !DILocalVariable(name: "data", arg: 3, scope: !8661, file: !533, line: 207, type: !106)
!8668 = !DILocalVariable(name: "rule", scope: !8669, file: !533, line: 209, type: !8670)
!8669 = distinct !DILexicalBlock(scope: !8661, file: !533, line: 209, column: 2)
!8670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8671, size: 32)
!8671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_test_rule", file: !114, line: 437, size: 64, elements: !8672)
!8672 = !{!8673, !8680}
!8673 = !DIDerivedType(tag: DW_TAG_member, name: "before_each", scope: !8671, file: !114, line: 438, baseType: !8674, size: 32)
!8674 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_rule_cb", file: !114, line: 434, baseType: !8675)
!8675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8676, size: 32)
!8676 = !DISubroutineType(types: !8677)
!8677 = !{null, !8678, !106}
!8678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8679, size: 32)
!8679 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8335)
!8680 = !DIDerivedType(tag: DW_TAG_member, name: "after_each", scope: !8671, file: !114, line: 439, baseType: !8674, size: 32, offset: 32)
!8681 = !DILocation(line: 0, scope: !8661)
!8682 = !DILocation(line: 0, scope: !8669)
!8683 = !DILocation(line: 209, column: 2, scope: !8669)
!8684 = !DILocation(line: 217, column: 1, scope: !8661)
!8685 = !DILocation(line: 211, column: 17, scope: !8686)
!8686 = distinct !DILexicalBlock(scope: !8687, file: !533, line: 211, column: 7)
!8687 = distinct !DILexicalBlock(scope: !8688, file: !533, line: 210, column: 49)
!8688 = distinct !DILexicalBlock(scope: !8669, file: !533, line: 209, column: 2)
!8689 = !DILocation(line: 211, column: 26, scope: !8686)
!8690 = !DILocation(line: 211, column: 20, scope: !8686)
!8691 = !DILocation(line: 211, column: 7, scope: !8687)
!8692 = !DILocation(line: 213, column: 34, scope: !8693)
!8693 = distinct !DILexicalBlock(scope: !8686, file: !533, line: 213, column: 14)
!8694 = !DILocation(line: 213, column: 28, scope: !8693)
!8695 = !DILocation(line: 213, column: 14, scope: !8686)
!8696 = !DILocation(line: 0, scope: !8686)
!8697 = !DILocation(line: 210, column: 41, scope: !8688)
!8698 = !DILocation(line: 210, column: 12, scope: !8688)
!8699 = distinct !{!8699, !8683, !8700}
!8700 = !DILocation(line: 216, column: 2, scope: !8669)
!8701 = distinct !DISubprogram(name: "get_test_duration_ms", scope: !690, file: !690, line: 103, type: !3148, scopeLine: 104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8702)
!8702 = !{!8703}
!8703 = !DILocalVariable(name: "spend_cycle", scope: !8701, file: !690, line: 105, type: !152)
!8704 = !DILocation(line: 105, column: 25, scope: !8701)
!8705 = !DILocation(line: 105, column: 44, scope: !8701)
!8706 = !DILocation(line: 105, column: 42, scope: !8701)
!8707 = !DILocation(line: 0, scope: !8701)
!8708 = !DILocation(line: 107, column: 18, scope: !8701)
!8709 = !DILocation(line: 107, column: 16, scope: !8701)
!8710 = !DILocation(line: 108, column: 1, scope: !8701)
!8711 = distinct !DISubprogram(name: "cleanup_test", scope: !533, file: !533, line: 76, type: !8712, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8714)
!8712 = !DISubroutineType(types: !8713)
!8713 = !{!107, !8334}
!8714 = !{!8715, !8716, !8717}
!8715 = !DILocalVariable(name: "test", arg: 1, scope: !8711, file: !533, line: 76, type: !8334)
!8716 = !DILocalVariable(name: "ret", scope: !8711, file: !533, line: 78, type: !107)
!8717 = !DILocalVariable(name: "mock_status", scope: !8711, file: !533, line: 79, type: !107)
!8718 = !DILocation(line: 0, scope: !8711)
!8719 = !DILocation(line: 89, column: 3, scope: !8720)
!8720 = distinct !DILexicalBlock(scope: !8721, file: !533, line: 88, column: 41)
!8721 = distinct !DILexicalBlock(scope: !8711, file: !533, line: 88, column: 6)
!8722 = !DILocation(line: 103, column: 2, scope: !8711)
!8723 = distinct !DISubprogram(name: "get_final_test_result", scope: !533, file: !533, line: 236, type: !8724, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8726)
!8724 = !DISubroutineType(types: !8725)
!8725 = !{!107, !8678, !107}
!8726 = !{!8727, !8728, !8729, !8730}
!8727 = !DILocalVariable(name: "test", arg: 1, scope: !8723, file: !533, line: 236, type: !8678)
!8728 = !DILocalVariable(name: "ret", arg: 2, scope: !8723, file: !533, line: 236, type: !107)
!8729 = !DILocalVariable(name: "expected_result", scope: !8723, file: !533, line: 238, type: !554)
!8730 = !DILocalVariable(name: "expectation", scope: !8731, file: !533, line: 240, type: !8732)
!8731 = distinct !DILexicalBlock(scope: !8723, file: !533, line: 240, column: 2)
!8732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8733, size: 32)
!8733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_expected_result_entry", file: !114, line: 47, size: 96, elements: !8734)
!8734 = !{!8735, !8736, !8737}
!8735 = !DIDerivedType(tag: DW_TAG_member, name: "test_suite_name", scope: !8733, file: !114, line: 48, baseType: !118, size: 32)
!8736 = !DIDerivedType(tag: DW_TAG_member, name: "test_name", scope: !8733, file: !114, line: 49, baseType: !118, size: 32, offset: 32)
!8737 = !DIDerivedType(tag: DW_TAG_member, name: "expected_result", scope: !8733, file: !114, line: 50, baseType: !554, size: 32, offset: 64)
!8738 = !DILocation(line: 0, scope: !8723)
!8739 = !DILocation(line: 0, scope: !8731)
!8740 = !DILocation(line: 240, column: 2, scope: !8731)
!8741 = !DILocation(line: 243, column: 27, scope: !8742)
!8742 = distinct !DILexicalBlock(scope: !8743, file: !533, line: 243, column: 7)
!8743 = distinct !DILexicalBlock(scope: !8744, file: !533, line: 242, column: 75)
!8744 = distinct !DILexicalBlock(scope: !8731, file: !533, line: 240, column: 2)
!8745 = !DILocation(line: 243, column: 44, scope: !8742)
!8746 = !DILocation(line: 243, column: 7, scope: !8742)
!8747 = !DILocation(line: 243, column: 50, scope: !8742)
!8748 = !DILocation(line: 243, column: 55, scope: !8742)
!8749 = !DILocation(line: 244, column: 27, scope: !8742)
!8750 = !DILocation(line: 244, column: 50, scope: !8742)
!8751 = !DILocation(line: 244, column: 7, scope: !8742)
!8752 = !DILocation(line: 244, column: 67, scope: !8742)
!8753 = !DILocation(line: 243, column: 7, scope: !8743)
!8754 = !DILocation(line: 242, column: 60, scope: !8744)
!8755 = !DILocation(line: 242, column: 19, scope: !8744)
!8756 = distinct !{!8756, !8740, !8757}
!8757 = !DILocation(line: 248, column: 2, scope: !8731)
!8758 = !DILocation(line: 245, column: 35, scope: !8759)
!8759 = distinct !DILexicalBlock(scope: !8742, file: !533, line: 244, column: 73)
!8760 = !DILocation(line: 250, column: 6, scope: !8723)
!8761 = !DILocation(line: 255, column: 15, scope: !8762)
!8762 = distinct !DILexicalBlock(scope: !8763, file: !533, line: 250, column: 53)
!8763 = distinct !DILexicalBlock(scope: !8723, file: !533, line: 250, column: 6)
!8764 = !DILocation(line: 255, column: 10, scope: !8762)
!8765 = !DILocation(line: 255, column: 3, scope: !8762)
!8766 = !DILocation(line: 262, column: 15, scope: !8767)
!8767 = distinct !DILexicalBlock(scope: !8768, file: !533, line: 257, column: 53)
!8768 = distinct !DILexicalBlock(scope: !8723, file: !533, line: 257, column: 6)
!8769 = !DILocation(line: 262, column: 10, scope: !8767)
!8770 = !DILocation(line: 262, column: 3, scope: !8767)
!8771 = !DILocation(line: 266, column: 1, scope: !8723)
!8772 = distinct !DISubprogram(name: "TC_RESULT_TO_STR", scope: !690, file: !690, line: 81, type: !8773, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8775)
!8773 = !DISubroutineType(types: !8774)
!8774 = !{!118, !107}
!8775 = !{!8776}
!8776 = !DILocalVariable(name: "result", arg: 1, scope: !8772, file: !690, line: 81, type: !107)
!8777 = !DILocation(line: 0, scope: !8772)
!8778 = !DILocation(line: 83, column: 2, scope: !8772)
!8779 = !DILocation(line: 0, scope: !8780)
!8780 = distinct !DILexicalBlock(scope: !8772, file: !690, line: 83, column: 18)
!8781 = !DILocation(line: 93, column: 1, scope: !8772)
!8782 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !406, file: !406, line: 1675, type: !6405, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2236)
!8783 = !DILocation(line: 1677, column: 9, scope: !8782)
!8784 = !DILocation(line: 1677, column: 2, scope: !8782)
!8785 = distinct !DISubprogram(name: "k_cyc_to_ms_ceil32", scope: !8786, file: !8786, line: 809, type: !7605, scopeLine: 810, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8787)
!8786 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8787 = !{!8788}
!8788 = !DILocalVariable(name: "t", arg: 1, scope: !8785, file: !8786, line: 809, type: !152)
!8789 = !DILocation(line: 0, scope: !8785)
!8790 = !DILocation(line: 812, column: 17, scope: !8785)
!8791 = !DILocalVariable(name: "t", arg: 1, scope: !8792, file: !8786, line: 102, type: !566)
!8792 = distinct !DISubprogram(name: "z_tmcvt", scope: !8786, file: !8786, line: 102, type: !8793, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8795)
!8793 = !DISubroutineType(types: !8794)
!8794 = !{!566, !566, !152, !152, !145, !145, !145, !145}
!8795 = !{!8791, !8796, !8797, !8798, !8799, !8800, !8801, !8802, !8803, !8804, !8805}
!8796 = !DILocalVariable(name: "from_hz", arg: 2, scope: !8792, file: !8786, line: 102, type: !152)
!8797 = !DILocalVariable(name: "to_hz", arg: 3, scope: !8792, file: !8786, line: 103, type: !152)
!8798 = !DILocalVariable(name: "const_hz", arg: 4, scope: !8792, file: !8786, line: 103, type: !145)
!8799 = !DILocalVariable(name: "result32", arg: 5, scope: !8792, file: !8786, line: 104, type: !145)
!8800 = !DILocalVariable(name: "round_up", arg: 6, scope: !8792, file: !8786, line: 104, type: !145)
!8801 = !DILocalVariable(name: "round_off", arg: 7, scope: !8792, file: !8786, line: 105, type: !145)
!8802 = !DILocalVariable(name: "mul_ratio", scope: !8792, file: !8786, line: 107, type: !145)
!8803 = !DILocalVariable(name: "div_ratio", scope: !8792, file: !8786, line: 109, type: !145)
!8804 = !DILocalVariable(name: "off", scope: !8792, file: !8786, line: 116, type: !566)
!8805 = !DILocalVariable(name: "rdivisor", scope: !8806, file: !8786, line: 119, type: !152)
!8806 = distinct !DILexicalBlock(scope: !8807, file: !8786, line: 118, column: 18)
!8807 = distinct !DILexicalBlock(scope: !8792, file: !8786, line: 118, column: 6)
!8808 = !DILocation(line: 0, scope: !8792, inlinedAt: !8809)
!8809 = distinct !DILocation(line: 812, column: 9, scope: !8785)
!8810 = !DILocation(line: 135, column: 5, scope: !8811, inlinedAt: !8809)
!8811 = distinct !DILexicalBlock(scope: !8812, file: !8786, line: 134, column: 17)
!8812 = distinct !DILexicalBlock(scope: !8792, file: !8786, line: 134, column: 6)
!8813 = !DILocation(line: 136, column: 16, scope: !8814, inlinedAt: !8809)
!8814 = distinct !DILexicalBlock(scope: !8811, file: !8786, line: 136, column: 7)
!8815 = !DILocation(line: 812, column: 9, scope: !8785)
!8816 = !DILocation(line: 812, column: 2, scope: !8785)
!8817 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !8818, file: !8818, line: 24, type: !6405, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2236)
!8818 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8819 = !DILocation(line: 26, column: 9, scope: !8817)
!8820 = !DILocation(line: 26, column: 2, scope: !8817)
!8821 = distinct !DISubprogram(name: "test_cb", scope: !533, file: !533, line: 507, type: !562, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8822)
!8822 = !{!8823, !8824, !8825, !8826, !8827}
!8823 = !DILocalVariable(name: "a", arg: 1, scope: !8821, file: !533, line: 507, type: !106)
!8824 = !DILocalVariable(name: "b", arg: 2, scope: !8821, file: !533, line: 507, type: !106)
!8825 = !DILocalVariable(name: "c", arg: 3, scope: !8821, file: !533, line: 507, type: !106)
!8826 = !DILocalVariable(name: "suite", scope: !8821, file: !533, line: 509, type: !8382)
!8827 = !DILocalVariable(name: "test", scope: !8821, file: !533, line: 510, type: !8334)
!8828 = !DILocation(line: 0, scope: !8821)
!8829 = !DILocation(line: 510, column: 33, scope: !8821)
!8830 = !DILocation(line: 512, column: 14, scope: !8821)
!8831 = !DILocation(line: 513, column: 2, scope: !8821)
!8832 = !DILocation(line: 514, column: 13, scope: !8833)
!8833 = distinct !DILexicalBlock(scope: !8821, file: !533, line: 514, column: 6)
!8834 = !DILocation(line: 514, column: 6, scope: !8833)
!8835 = !DILocation(line: 514, column: 6, scope: !8821)
!8836 = !DILocation(line: 515, column: 3, scope: !8837)
!8837 = distinct !DILexicalBlock(scope: !8833, file: !533, line: 514, column: 21)
!8838 = !DILocation(line: 516, column: 2, scope: !8837)
!8839 = !DILocation(line: 517, column: 2, scope: !8821)
!8840 = !DILocation(line: 518, column: 14, scope: !8821)
!8841 = !DILocation(line: 519, column: 1, scope: !8821)
!8842 = distinct !DISubprogram(name: "run_test_functions", scope: !533, file: !533, line: 219, type: !8843, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8845)
!8843 = !DISubroutineType(types: !8844)
!8844 = !{null, !8382, !8334, !106}
!8845 = !{!8846, !8847, !8848}
!8846 = !DILocalVariable(name: "suite", arg: 1, scope: !8842, file: !533, line: 219, type: !8382)
!8847 = !DILocalVariable(name: "test", arg: 2, scope: !8842, file: !533, line: 219, type: !8334)
!8848 = !DILocalVariable(name: "data", arg: 3, scope: !8842, file: !533, line: 220, type: !106)
!8849 = !DILocation(line: 0, scope: !8842)
!8850 = !DILocation(line: 222, column: 8, scope: !8842)
!8851 = !DILocation(line: 223, column: 8, scope: !8842)
!8852 = !DILocation(line: 223, column: 2, scope: !8842)
!8853 = !DILocation(line: 224, column: 1, scope: !8842)
!8854 = distinct !DISubprogram(name: "z_impl_ztest_run_test_suites", scope: !533, file: !533, line: 929, type: !8855, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8857)
!8855 = !DISubroutineType(types: !8856)
!8856 = !{!107, !13}
!8857 = !{!8858, !8859, !8860}
!8858 = !DILocalVariable(name: "state", arg: 1, scope: !8854, file: !533, line: 929, type: !13)
!8859 = !DILocalVariable(name: "count", scope: !8854, file: !533, line: 931, type: !107)
!8860 = !DILocalVariable(name: "ptr", scope: !8861, file: !533, line: 954, type: !8382)
!8861 = distinct !DILexicalBlock(scope: !8854, file: !533, line: 954, column: 2)
!8862 = !DILocation(line: 0, scope: !8854)
!8863 = !DILocation(line: 933, column: 6, scope: !8864)
!8864 = distinct !DILexicalBlock(scope: !8854, file: !533, line: 933, column: 6)
!8865 = !DILocation(line: 933, column: 18, scope: !8864)
!8866 = !DILocation(line: 933, column: 6, scope: !8854)
!8867 = !DILocation(line: 0, scope: !8861)
!8868 = !DILocation(line: 954, column: 2, scope: !8861)
!8869 = !DILocation(line: 956, column: 12, scope: !8870)
!8870 = distinct !DILexicalBlock(scope: !8871, file: !533, line: 955, column: 48)
!8871 = distinct !DILexicalBlock(scope: !8861, file: !533, line: 954, column: 2)
!8872 = !DILocation(line: 956, column: 9, scope: !8870)
!8873 = !DILocation(line: 960, column: 7, scope: !8874)
!8874 = distinct !DILexicalBlock(scope: !8870, file: !533, line: 960, column: 7)
!8875 = !DILocation(line: 960, column: 19, scope: !8874)
!8876 = !DILocation(line: 955, column: 41, scope: !8871)
!8877 = !DILocation(line: 960, column: 50, scope: !8874)
!8878 = distinct !{!8878, !8868, !8879}
!8879 = !DILocation(line: 964, column: 2, scope: !8861)
!8880 = !DILocation(line: 967, column: 2, scope: !8854)
!8881 = !DILocation(line: 969, column: 2, scope: !8854)
!8882 = !DILocation(line: 970, column: 1, scope: !8854)
!8883 = distinct !DISubprogram(name: "__ztest_run_test_suite", scope: !533, file: !533, line: 907, type: !8884, scopeLine: 908, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8886)
!8884 = !DISubroutineType(types: !8885)
!8885 = !{!107, !8382, !13}
!8886 = !{!8887, !8888, !8889, !8890, !8891, !8893}
!8887 = !DILocalVariable(name: "ptr", arg: 1, scope: !8883, file: !533, line: 907, type: !8382)
!8888 = !DILocalVariable(name: "state", arg: 2, scope: !8883, file: !533, line: 907, type: !13)
!8889 = !DILocalVariable(name: "stats", scope: !8883, file: !533, line: 909, type: !8393)
!8890 = !DILocalVariable(name: "count", scope: !8883, file: !533, line: 910, type: !107)
!8891 = !DILocalVariable(name: "i", scope: !8892, file: !533, line: 914, type: !107)
!8892 = distinct !DILexicalBlock(scope: !8883, file: !533, line: 914, column: 2)
!8893 = !DILocalVariable(name: "fail", scope: !8894, file: !533, line: 916, type: !107)
!8894 = distinct !DILexicalBlock(scope: !8895, file: !533, line: 915, column: 47)
!8895 = distinct !DILexicalBlock(scope: !8896, file: !533, line: 915, column: 7)
!8896 = distinct !DILexicalBlock(scope: !8897, file: !533, line: 914, column: 47)
!8897 = distinct !DILexicalBlock(scope: !8892, file: !533, line: 914, column: 2)
!8898 = !DILocation(line: 0, scope: !8883)
!8899 = !DILocation(line: 909, column: 41, scope: !8883)
!8900 = !DILocation(line: 912, column: 2, scope: !8883)
!8901 = !DILocation(line: 0, scope: !8892)
!8902 = !DILocation(line: 915, column: 7, scope: !8895)
!8903 = !DILocation(line: 915, column: 7, scope: !8896)
!8904 = !DILocation(line: 916, column: 15, scope: !8894)
!8905 = !DILocation(line: 0, scope: !8894)
!8906 = !DILocation(line: 919, column: 20, scope: !8894)
!8907 = !DILocation(line: 920, column: 31, scope: !8894)
!8908 = !DILocation(line: 920, column: 25, scope: !8894)
!8909 = !DILocation(line: 921, column: 3, scope: !8894)
!8910 = !DILocation(line: 0, scope: !8895)
!8911 = !DILocation(line: 926, column: 2, scope: !8883)
!8912 = distinct !DISubprogram(name: "__ztest_show_suite_summary", scope: !533, file: !533, line: 886, type: !3148, scopeLine: 887, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8913)
!8913 = !{!8914}
!8914 = !DILocalVariable(name: "ptr", scope: !8915, file: !533, line: 894, type: !8382)
!8915 = distinct !DILexicalBlock(scope: !8912, file: !533, line: 894, column: 2)
!8916 = !DILocation(line: 892, column: 2, scope: !8912)
!8917 = !DILocation(line: 0, scope: !8915)
!8918 = !DILocation(line: 894, column: 2, scope: !8915)
!8919 = !DILocation(line: 903, column: 2, scope: !8912)
!8920 = !DILocation(line: 905, column: 1, scope: !8912)
!8921 = !DILocation(line: 898, column: 3, scope: !8922)
!8922 = distinct !DILexicalBlock(scope: !8923, file: !533, line: 895, column: 48)
!8923 = distinct !DILexicalBlock(scope: !8915, file: !533, line: 894, column: 2)
!8924 = !DILocation(line: 895, column: 41, scope: !8923)
!8925 = !DILocation(line: 895, column: 11, scope: !8923)
!8926 = distinct !{!8926, !8918, !8927}
!8927 = !DILocation(line: 902, column: 2, scope: !8915)
!8928 = distinct !DISubprogram(name: "__ztest_show_suite_summary_verbose", scope: !533, file: !533, line: 852, type: !8929, scopeLine: 853, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8931)
!8929 = !DISubroutineType(types: !8930)
!8930 = !{null, !8382}
!8931 = !{!8932, !8933, !8934, !8935}
!8932 = !DILocalVariable(name: "suite", arg: 1, scope: !8928, file: !533, line: 852, type: !8382)
!8933 = !DILocalVariable(name: "test", scope: !8928, file: !533, line: 854, type: !8334)
!8934 = !DILocalVariable(name: "tc_result", scope: !8928, file: !533, line: 855, type: !107)
!8935 = !DILocalVariable(name: "flush_frequency", scope: !8928, file: !533, line: 856, type: !107)
!8936 = !DILocation(line: 0, scope: !8928)
!8937 = !DILocation(line: 858, column: 2, scope: !8928)
!8938 = !DILocation(line: 860, column: 47, scope: !8928)
!8939 = !DILocation(line: 860, column: 18, scope: !8928)
!8940 = !DILocation(line: 860, column: 60, scope: !8928)
!8941 = !DILocation(line: 860, column: 2, scope: !8928)
!8942 = !DILocation(line: 861, column: 13, scope: !8943)
!8943 = distinct !DILexicalBlock(scope: !8944, file: !533, line: 861, column: 7)
!8944 = distinct !DILexicalBlock(scope: !8928, file: !533, line: 860, column: 70)
!8945 = !DILocation(line: 861, column: 20, scope: !8943)
!8946 = !DILocation(line: 861, column: 47, scope: !8943)
!8947 = !DILocation(line: 861, column: 31, scope: !8943)
!8948 = !DILocation(line: 861, column: 7, scope: !8944)
!8949 = !DILocation(line: 863, column: 27, scope: !8950)
!8950 = distinct !DILexicalBlock(scope: !8943, file: !533, line: 863, column: 14)
!8951 = !DILocation(line: 863, column: 38, scope: !8950)
!8952 = !DILocation(line: 0, scope: !8943)
!8953 = !DILocation(line: 869, column: 3, scope: !8944)
!8954 = distinct !{!8954, !8941, !8955}
!8955 = !DILocation(line: 880, column: 2, scope: !8928)
!8956 = !DILocation(line: 881, column: 2, scope: !8928)
!8957 = !DILocation(line: 883, column: 1, scope: !8928)
!8958 = distinct !DISubprogram(name: "__ztest_show_suite_summary_oneline", scope: !533, file: !533, line: 801, type: !8929, scopeLine: 802, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8959)
!8959 = !{!8960, !8961, !8962, !8963, !8964, !8965, !8966, !8967, !8968, !8969, !8970, !8971, !8972, !8973}
!8960 = !DILocalVariable(name: "suite", arg: 1, scope: !8958, file: !533, line: 801, type: !8382)
!8961 = !DILocalVariable(name: "distinct_pass", scope: !8958, file: !533, line: 803, type: !107)
!8962 = !DILocalVariable(name: "distinct_fail", scope: !8958, file: !533, line: 803, type: !107)
!8963 = !DILocalVariable(name: "distinct_skip", scope: !8958, file: !533, line: 803, type: !107)
!8964 = !DILocalVariable(name: "distinct_total", scope: !8958, file: !533, line: 803, type: !107)
!8965 = !DILocalVariable(name: "effective_total", scope: !8958, file: !533, line: 804, type: !107)
!8966 = !DILocalVariable(name: "expanded_pass", scope: !8958, file: !533, line: 805, type: !107)
!8967 = !DILocalVariable(name: "expanded_passrate", scope: !8958, file: !533, line: 805, type: !107)
!8968 = !DILocalVariable(name: "passrate_major", scope: !8958, file: !533, line: 806, type: !107)
!8969 = !DILocalVariable(name: "passrate_minor", scope: !8958, file: !533, line: 806, type: !107)
!8970 = !DILocalVariable(name: "passrate_tail", scope: !8958, file: !533, line: 806, type: !107)
!8971 = !DILocalVariable(name: "suite_result", scope: !8958, file: !533, line: 807, type: !107)
!8972 = !DILocalVariable(name: "test", scope: !8958, file: !533, line: 809, type: !8334)
!8973 = !DILocalVariable(name: "suite_duration_worst_ms", scope: !8958, file: !533, line: 810, type: !32)
!8974 = !DILocation(line: 0, scope: !8958)
!8975 = !DILocation(line: 813, column: 47, scope: !8958)
!8976 = !DILocation(line: 813, column: 18, scope: !8958)
!8977 = !DILocation(line: 813, column: 60, scope: !8958)
!8978 = !DILocation(line: 813, column: 2, scope: !8958)
!8979 = !DILocation(line: 814, column: 17, scope: !8980)
!8980 = distinct !DILexicalBlock(scope: !8958, file: !533, line: 813, column: 70)
!8981 = !DILocation(line: 815, column: 36, scope: !8980)
!8982 = !DILocation(line: 815, column: 43, scope: !8980)
!8983 = !DILocation(line: 815, column: 27, scope: !8980)
!8984 = !DILocation(line: 816, column: 20, scope: !8985)
!8985 = distinct !DILexicalBlock(scope: !8980, file: !533, line: 816, column: 7)
!8986 = !DILocation(line: 816, column: 47, scope: !8985)
!8987 = !DILocation(line: 816, column: 31, scope: !8985)
!8988 = !DILocation(line: 816, column: 7, scope: !8980)
!8989 = !DILocation(line: 817, column: 17, scope: !8990)
!8990 = distinct !DILexicalBlock(scope: !8985, file: !533, line: 816, column: 58)
!8991 = !DILocation(line: 818, column: 3, scope: !8990)
!8992 = !DILocation(line: 818, column: 27, scope: !8993)
!8993 = distinct !DILexicalBlock(scope: !8985, file: !533, line: 818, column: 14)
!8994 = !DILocation(line: 818, column: 38, scope: !8993)
!8995 = !DILocation(line: 818, column: 14, scope: !8985)
!8996 = !DILocation(line: 819, column: 17, scope: !8997)
!8997 = distinct !DILexicalBlock(scope: !8993, file: !533, line: 818, column: 65)
!8998 = !DILocation(line: 820, column: 3, scope: !8997)
!8999 = !DILocation(line: 821, column: 17, scope: !9000)
!9000 = distinct !DILexicalBlock(scope: !8993, file: !533, line: 820, column: 10)
!9001 = distinct !{!9001, !8978, !9002}
!9002 = !DILocation(line: 823, column: 2, scope: !8958)
!9003 = !DILocation(line: 825, column: 20, scope: !9004)
!9004 = distinct !DILexicalBlock(scope: !8958, file: !533, line: 825, column: 6)
!9005 = !DILocation(line: 825, column: 6, scope: !8958)
!9006 = !DILocation(line: 829, column: 33, scope: !9007)
!9007 = distinct !DILexicalBlock(scope: !9004, file: !533, line: 828, column: 9)
!9008 = !DILocation(line: 829, column: 18, scope: !9007)
!9009 = !DILocation(line: 830, column: 36, scope: !9007)
!9010 = !DILocation(line: 831, column: 33, scope: !9007)
!9011 = !DILocation(line: 832, column: 37, scope: !9007)
!9012 = !DILocation(line: 833, column: 38, scope: !9007)
!9013 = !DILocation(line: 834, column: 56, scope: !9007)
!9014 = !DILocation(line: 834, column: 39, scope: !9007)
!9015 = !DILocation(line: 834, column: 64, scope: !9007)
!9016 = !DILocation(line: 835, column: 78, scope: !9007)
!9017 = !DILocation(line: 835, column: 61, scope: !9007)
!9018 = !DILocation(line: 836, column: 21, scope: !9019)
!9019 = distinct !DILexicalBlock(scope: !9007, file: !533, line: 836, column: 7)
!9020 = !DILocation(line: 836, column: 7, scope: !9007)
!9021 = !DILocation(line: 0, scope: !9004)
!9022 = !DILocation(line: 841, column: 2, scope: !8958)
!9023 = !DILocation(line: 849, column: 1, scope: !8958)
!9024 = distinct !DISubprogram(name: "__ztest_init_unit_test_result_for_suite", scope: !533, file: !533, line: 773, type: !8929, scopeLine: 774, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !9025)
!9025 = !{!9026, !9027}
!9026 = !DILocalVariable(name: "suite", arg: 1, scope: !9024, file: !533, line: 773, type: !8382)
!9027 = !DILocalVariable(name: "test", scope: !9024, file: !533, line: 775, type: !8334)
!9028 = !DILocation(line: 0, scope: !9024)
!9029 = !DILocation(line: 777, column: 47, scope: !9024)
!9030 = !DILocation(line: 777, column: 18, scope: !9024)
!9031 = !DILocation(line: 777, column: 60, scope: !9024)
!9032 = !DILocation(line: 777, column: 2, scope: !9024)
!9033 = !DILocation(line: 778, column: 9, scope: !9034)
!9034 = distinct !DILexicalBlock(scope: !9024, file: !533, line: 777, column: 70)
!9035 = !DILocation(line: 778, column: 16, scope: !9034)
!9036 = !DILocation(line: 778, column: 26, scope: !9034)
!9037 = !DILocation(line: 779, column: 9, scope: !9034)
!9038 = !DILocation(line: 779, column: 16, scope: !9034)
!9039 = !DILocation(line: 779, column: 27, scope: !9034)
!9040 = !DILocation(line: 780, column: 9, scope: !9034)
!9041 = !DILocation(line: 780, column: 16, scope: !9034)
!9042 = !DILocation(line: 780, column: 27, scope: !9034)
!9043 = !DILocation(line: 781, column: 9, scope: !9034)
!9044 = !DILocation(line: 781, column: 16, scope: !9034)
!9045 = !DILocation(line: 781, column: 27, scope: !9034)
!9046 = !DILocation(line: 782, column: 9, scope: !9034)
!9047 = !DILocation(line: 782, column: 16, scope: !9034)
!9048 = !DILocation(line: 782, column: 34, scope: !9034)
!9049 = distinct !{!9049, !9032, !9050}
!9050 = !DILocation(line: 783, column: 2, scope: !9024)
!9051 = !DILocation(line: 784, column: 1, scope: !9024)
!9052 = distinct !DISubprogram(name: "ztest_verify_all_test_suites_ran", scope: !533, file: !533, line: 972, type: !3148, scopeLine: 973, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !9053)
!9053 = !{!9054, !9055, !9056}
!9054 = !DILocalVariable(name: "all_tests_run", scope: !9052, file: !533, line: 974, type: !145)
!9055 = !DILocalVariable(name: "suite", scope: !9052, file: !533, line: 975, type: !8382)
!9056 = !DILocalVariable(name: "test", scope: !9052, file: !533, line: 976, type: !8334)
!9057 = !DILocation(line: 0, scope: !9052)
!9058 = !DILocation(line: 979, column: 3, scope: !9059)
!9059 = distinct !DILexicalBlock(scope: !9060, file: !533, line: 979, column: 3)
!9060 = distinct !DILexicalBlock(scope: !9061, file: !533, line: 978, column: 47)
!9061 = distinct !DILexicalBlock(scope: !9052, file: !533, line: 978, column: 6)
!9062 = !DILocation(line: 987, column: 3, scope: !9063)
!9063 = distinct !DILexicalBlock(scope: !9060, file: !533, line: 987, column: 3)
!9064 = !DILocation(line: 981, column: 15, scope: !9065)
!9065 = distinct !DILexicalBlock(scope: !9066, file: !533, line: 981, column: 8)
!9066 = distinct !DILexicalBlock(scope: !9067, file: !533, line: 980, column: 17)
!9067 = distinct !DILexicalBlock(scope: !9059, file: !533, line: 979, column: 3)
!9068 = !DILocation(line: 981, column: 22, scope: !9065)
!9069 = !DILocation(line: 981, column: 32, scope: !9065)
!9070 = !DILocation(line: 981, column: 8, scope: !9066)
!9071 = !DILocation(line: 982, column: 59, scope: !9072)
!9072 = distinct !DILexicalBlock(scope: !9065, file: !533, line: 981, column: 37)
!9073 = !DILocation(line: 982, column: 5, scope: !9072)
!9074 = !DILocation(line: 984, column: 4, scope: !9072)
!9075 = !DILocation(line: 980, column: 8, scope: !9067)
!9076 = !DILocation(line: 979, column: 52, scope: !9067)
!9077 = distinct !{!9077, !9058, !9078}
!9078 = !DILocation(line: 985, column: 3, scope: !9059)
!9079 = !DILocation(line: 988, column: 40, scope: !9080)
!9080 = distinct !DILexicalBlock(scope: !9081, file: !533, line: 987, column: 86)
!9081 = distinct !DILexicalBlock(scope: !9063, file: !533, line: 987, column: 3)
!9082 = !DILocation(line: 988, column: 12, scope: !9080)
!9083 = !DILocation(line: 989, column: 14, scope: !9084)
!9084 = distinct !DILexicalBlock(scope: !9080, file: !533, line: 989, column: 8)
!9085 = !DILocation(line: 989, column: 8, scope: !9080)
!9086 = !DILocation(line: 992, column: 17, scope: !9087)
!9087 = distinct !DILexicalBlock(scope: !9084, file: !533, line: 989, column: 23)
!9088 = !DILocation(line: 992, column: 29, scope: !9087)
!9089 = !DILocation(line: 990, column: 5, scope: !9087)
!9090 = !DILocation(line: 994, column: 4, scope: !9087)
!9091 = !DILocation(line: 987, column: 78, scope: !9081)
!9092 = !DILocation(line: 987, column: 49, scope: !9081)
!9093 = distinct !{!9093, !9062, !9094}
!9094 = !DILocation(line: 995, column: 3, scope: !9063)
!9095 = !DILocation(line: 997, column: 7, scope: !9060)
!9096 = !DILocation(line: 998, column: 16, scope: !9097)
!9097 = distinct !DILexicalBlock(scope: !9098, file: !533, line: 997, column: 23)
!9098 = distinct !DILexicalBlock(scope: !9060, file: !533, line: 997, column: 7)
!9099 = !DILocation(line: 999, column: 3, scope: !9097)
!9100 = !DILocation(line: 1002, column: 2, scope: !9101)
!9101 = distinct !DILexicalBlock(scope: !9052, file: !533, line: 1002, column: 2)
!9102 = !DILocation(line: 1003, column: 13, scope: !9103)
!9103 = distinct !DILexicalBlock(scope: !9104, file: !533, line: 1003, column: 7)
!9104 = distinct !DILexicalBlock(scope: !9105, file: !533, line: 1002, column: 85)
!9105 = distinct !DILexicalBlock(scope: !9101, file: !533, line: 1002, column: 2)
!9106 = !DILocation(line: 1003, column: 20, scope: !9103)
!9107 = !DILocation(line: 1003, column: 46, scope: !9103)
!9108 = !DILocation(line: 1003, column: 31, scope: !9103)
!9109 = !DILocation(line: 1003, column: 72, scope: !9103)
!9110 = !DILocation(line: 1003, column: 57, scope: !9103)
!9111 = !DILocation(line: 1004, column: 20, scope: !9103)
!9112 = !DILocation(line: 1003, column: 83, scope: !9103)
!9113 = !DILocation(line: 1003, column: 7, scope: !9104)
!9114 = !DILocation(line: 1005, column: 41, scope: !9115)
!9115 = distinct !DILexicalBlock(scope: !9103, file: !533, line: 1004, column: 31)
!9116 = !DILocation(line: 1005, column: 64, scope: !9115)
!9117 = !DILocation(line: 1005, column: 4, scope: !9115)
!9118 = !DILocation(line: 1006, column: 16, scope: !9115)
!9119 = !DILocation(line: 1007, column: 3, scope: !9115)
!9120 = !DILocation(line: 1002, column: 77, scope: !9105)
!9121 = !DILocation(line: 1002, column: 48, scope: !9105)
!9122 = distinct !{!9122, !9100, !9123}
!9123 = !DILocation(line: 1008, column: 2, scope: !9101)
!9124 = !DILocation(line: 1009, column: 1, scope: !9052)
!9125 = distinct !DISubprogram(name: "ztest_run_all", scope: !533, file: !533, line: 1011, type: !17, scopeLine: 1011, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !9126)
!9126 = !{!9127}
!9127 = !DILocalVariable(name: "state", arg: 1, scope: !9125, file: !533, line: 1011, type: !13)
!9128 = !DILocation(line: 0, scope: !9125)
!9129 = !DILocation(line: 1011, column: 51, scope: !9125)
!9130 = !DILocation(line: 1011, column: 41, scope: !9125)
!9131 = !DILocation(line: 1011, column: 67, scope: !9125)
!9132 = distinct !DISubprogram(name: "test_main", scope: !533, file: !533, line: 1013, type: !3148, scopeLine: 1014, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2236)
!9133 = !DILocation(line: 1015, column: 2, scope: !9132)
!9134 = !DILocation(line: 1017, column: 2, scope: !9132)
!9135 = !DILocation(line: 1018, column: 1, scope: !9132)
!9136 = distinct !DISubprogram(name: "main", scope: !533, file: !533, line: 1030, type: !3148, scopeLine: 1031, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2236)
!9137 = !DILocation(line: 1046, column: 2, scope: !9136)
!9138 = !DILocation(line: 1047, column: 2, scope: !9136)
!9139 = !DILocation(line: 1071, column: 1, scope: !9136)
!9140 = distinct !DISubprogram(name: "z_ztest_run_all", scope: !699, file: !699, line: 30, type: !17, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !9141)
!9141 = !{!9142}
!9142 = !DILocalVariable(name: "state", arg: 1, scope: !9140, file: !699, line: 30, type: !13)
!9143 = !DILocation(line: 0, scope: !9140)
!9144 = !DILocation(line: 32, column: 2, scope: !9140)
!9145 = !DILocation(line: 33, column: 1, scope: !9140)
!9146 = distinct !DISubprogram(name: "z_ztest_should_suite_run", scope: !699, file: !699, line: 45, type: !706, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !9147)
!9147 = !{!9148, !9149, !9150}
!9148 = !DILocalVariable(name: "state", arg: 1, scope: !9146, file: !699, line: 45, type: !13)
!9149 = !DILocalVariable(name: "suite", arg: 2, scope: !9146, file: !699, line: 45, type: !708)
!9150 = !DILocalVariable(name: "run_suite", scope: !9146, file: !699, line: 47, type: !145)
!9151 = !DILocation(line: 0, scope: !9146)
!9152 = !DILocation(line: 49, column: 13, scope: !9153)
!9153 = distinct !DILexicalBlock(scope: !9146, file: !699, line: 49, column: 6)
!9154 = !DILocation(line: 49, column: 23, scope: !9153)
!9155 = !DILocation(line: 49, column: 6, scope: !9146)
!9156 = !DILocation(line: 50, column: 15, scope: !9157)
!9157 = distinct !DILexicalBlock(scope: !9153, file: !699, line: 49, column: 32)
!9158 = !DILocation(line: 51, column: 2, scope: !9157)
!9159 = !DILocation(line: 53, column: 2, scope: !9146)
!9160 = distinct !DISubprogram(name: "z_ztest_should_test_run", scope: !699, file: !699, line: 65, type: !727, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !9161)
!9161 = !{!9162, !9163}
!9162 = !DILocalVariable(name: "suite", arg: 1, scope: !9160, file: !699, line: 65, type: !118)
!9163 = !DILocalVariable(name: "test", arg: 2, scope: !9160, file: !699, line: 65, type: !118)
!9164 = !DILocation(line: 0, scope: !9160)
!9165 = !DILocation(line: 67, column: 2, scope: !9160)
!9166 = distinct !DISubprogram(name: "ztest_run_test_suites", scope: !9167, file: !9167, line: 24, type: !8855, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !9168)
!9167 = !DIFile(filename: "zephyr/include/generated/syscalls/ztest_test_new.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/integration")
!9168 = !{!9169}
!9169 = !DILocalVariable(name: "state", arg: 1, scope: !9166, file: !9167, line: 24, type: !13)
!9170 = !DILocation(line: 0, scope: !9166)
!9171 = !DILocation(line: 32, column: 2, scope: !9172)
!9172 = distinct !DILexicalBlock(scope: !9166, file: !9167, line: 32, column: 2)
!9173 = !{i64 2155189477}
!9174 = !DILocation(line: 33, column: 9, scope: !9166)
!9175 = !DILocation(line: 33, column: 2, scope: !9166)
!9176 = distinct !DISubprogram(name: "ztest_relative_filename", scope: !699, file: !699, line: 20, type: !9177, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !9179)
!9177 = !DISubroutineType(types: !9178)
!9178 = !{!118, !118}
!9179 = !{!9180}
!9180 = !DILocalVariable(name: "file", arg: 1, scope: !9176, file: !699, line: 20, type: !118)
!9181 = !DILocation(line: 0, scope: !9176)
!9182 = !DILocation(line: 22, column: 2, scope: !9176)
!9183 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !844, file: !844, line: 368, type: !897, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9184)
!9184 = !{!9185}
!9185 = !DILocalVariable(name: "dev", arg: 1, scope: !9183, file: !844, line: 368, type: !873)
!9186 = !DILocation(line: 0, scope: !9183)
!9187 = !DILocation(line: 370, column: 2, scope: !9183)
!9188 = !DILocation(line: 371, column: 1, scope: !9183)
!9189 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !844, file: !844, line: 243, type: !9190, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9192)
!9190 = !DISubroutineType(types: !9191)
!9191 = !{null, !107, !107, !873}
!9192 = !{!9193, !9194, !9195, !9196, !9198}
!9193 = !DILocalVariable(name: "min", arg: 1, scope: !9189, file: !844, line: 243, type: !107)
!9194 = !DILocalVariable(name: "max", arg: 2, scope: !9189, file: !844, line: 243, type: !107)
!9195 = !DILocalVariable(name: "dev", arg: 3, scope: !9189, file: !844, line: 243, type: !873)
!9196 = !DILocalVariable(name: "data", scope: !9189, file: !844, line: 245, type: !9197)
!9197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !877, size: 32)
!9198 = !DILocalVariable(name: "line", scope: !9189, file: !844, line: 246, type: !107)
!9199 = !DILocation(line: 0, scope: !9189)
!9200 = !DILocation(line: 245, column: 38, scope: !9189)
!9201 = !DILocation(line: 249, column: 24, scope: !9202)
!9202 = distinct !DILexicalBlock(scope: !9203, file: !844, line: 249, column: 2)
!9203 = distinct !DILexicalBlock(scope: !9189, file: !844, line: 249, column: 2)
!9204 = !DILocation(line: 249, column: 2, scope: !9203)
!9205 = !DILocation(line: 251, column: 7, scope: !9206)
!9206 = distinct !DILexicalBlock(scope: !9207, file: !844, line: 251, column: 7)
!9207 = distinct !DILexicalBlock(scope: !9202, file: !844, line: 249, column: 39)
!9208 = !DILocation(line: 251, column: 7, scope: !9207)
!9209 = !DILocation(line: 253, column: 4, scope: !9210)
!9210 = distinct !DILexicalBlock(scope: !9206, file: !844, line: 251, column: 36)
!9211 = !DILocation(line: 256, column: 24, scope: !9212)
!9212 = distinct !DILexicalBlock(scope: !9210, file: !844, line: 256, column: 8)
!9213 = !DILocation(line: 256, column: 9, scope: !9212)
!9214 = !DILocation(line: 256, column: 8, scope: !9210)
!9215 = !DILocation(line: 260, column: 43, scope: !9210)
!9216 = !DILocation(line: 260, column: 4, scope: !9210)
!9217 = !DILocation(line: 261, column: 3, scope: !9210)
!9218 = !DILocation(line: 249, column: 35, scope: !9202)
!9219 = distinct !{!9219, !9204, !9220}
!9220 = !DILocation(line: 262, column: 2, scope: !9203)
!9221 = !DILocation(line: 263, column: 1, scope: !9189)
!9222 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !844, file: !844, line: 158, type: !214, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9223)
!9223 = !{!9224}
!9224 = !DILocalVariable(name: "line", arg: 1, scope: !9222, file: !844, line: 158, type: !107)
!9225 = !DILocation(line: 0, scope: !9222)
!9226 = !DILocation(line: 170, column: 38, scope: !9227)
!9227 = distinct !DILexicalBlock(scope: !9228, file: !844, line: 160, column: 17)
!9228 = distinct !DILexicalBlock(scope: !9222, file: !844, line: 160, column: 6)
!9229 = !DILocation(line: 170, column: 10, scope: !9227)
!9230 = !DILocation(line: 176, column: 1, scope: !9222)
!9231 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !844, file: !844, line: 183, type: !9232, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9234)
!9232 = !DISubroutineType(types: !9233)
!9233 = !{null, !107}
!9234 = !{!9235}
!9235 = !DILocalVariable(name: "line", arg: 1, scope: !9231, file: !844, line: 183, type: !107)
!9236 = !DILocation(line: 0, scope: !9231)
!9237 = !DILocation(line: 195, column: 28, scope: !9238)
!9238 = distinct !DILexicalBlock(scope: !9239, file: !844, line: 185, column: 17)
!9239 = distinct !DILexicalBlock(scope: !9231, file: !844, line: 185, column: 6)
!9240 = !DILocation(line: 195, column: 3, scope: !9238)
!9241 = !DILocation(line: 200, column: 1, scope: !9231)
!9242 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !9243, file: !9243, line: 910, type: !6415, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9244)
!9243 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9244 = !{!9245}
!9245 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9242, file: !9243, line: 910, type: !152)
!9246 = !DILocation(line: 0, scope: !9242)
!9247 = !DILocation(line: 912, column: 3, scope: !9242)
!9248 = !DILocation(line: 913, column: 1, scope: !9242)
!9249 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !9243, file: !9243, line: 834, type: !7605, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9250)
!9250 = !{!9251}
!9251 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9249, file: !9243, line: 834, type: !152)
!9252 = !DILocation(line: 0, scope: !9249)
!9253 = !DILocation(line: 836, column: 11, scope: !9249)
!9254 = !DILocation(line: 836, column: 40, scope: !9249)
!9255 = !DILocation(line: 836, column: 3, scope: !9249)
!9256 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !844, file: !844, line: 304, type: !897, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9257)
!9257 = !{!9258}
!9258 = !DILocalVariable(name: "dev", arg: 1, scope: !9256, file: !844, line: 304, type: !873)
!9259 = !DILocation(line: 0, scope: !9256)
!9260 = !DILocation(line: 306, column: 2, scope: !9256)
!9261 = !DILocation(line: 307, column: 1, scope: !9256)
!9262 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !844, file: !844, line: 299, type: !897, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9263)
!9263 = !{!9264}
!9264 = !DILocalVariable(name: "dev", arg: 1, scope: !9262, file: !844, line: 299, type: !873)
!9265 = !DILocation(line: 0, scope: !9262)
!9266 = !DILocation(line: 301, column: 2, scope: !9262)
!9267 = !DILocation(line: 302, column: 1, scope: !9262)
!9268 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !844, file: !844, line: 294, type: !897, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9269)
!9269 = !{!9270}
!9270 = !DILocalVariable(name: "dev", arg: 1, scope: !9268, file: !844, line: 294, type: !873)
!9271 = !DILocation(line: 0, scope: !9268)
!9272 = !DILocation(line: 296, column: 2, scope: !9268)
!9273 = !DILocation(line: 297, column: 1, scope: !9268)
!9274 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !844, file: !844, line: 397, type: !897, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9275)
!9275 = !{!9276}
!9276 = !DILocalVariable(name: "dev", arg: 1, scope: !9274, file: !844, line: 397, type: !873)
!9277 = !DILocation(line: 0, scope: !9274)
!9278 = !DILocation(line: 399, column: 2, scope: !9274)
!9279 = !DILocation(line: 400, column: 1, scope: !9274)
!9280 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !844, file: !844, line: 392, type: !897, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9281)
!9281 = !{!9282}
!9282 = !DILocalVariable(name: "dev", arg: 1, scope: !9280, file: !844, line: 392, type: !873)
!9283 = !DILocation(line: 0, scope: !9280)
!9284 = !DILocation(line: 394, column: 2, scope: !9280)
!9285 = !DILocation(line: 395, column: 1, scope: !9280)
!9286 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !844, file: !844, line: 289, type: !897, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9287)
!9287 = !{!9288}
!9288 = !DILocalVariable(name: "dev", arg: 1, scope: !9286, file: !844, line: 289, type: !873)
!9289 = !DILocation(line: 0, scope: !9286)
!9290 = !DILocation(line: 291, column: 2, scope: !9286)
!9291 = !DILocation(line: 292, column: 1, scope: !9286)
!9292 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !844, file: !844, line: 387, type: !897, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9293)
!9293 = !{!9294}
!9294 = !DILocalVariable(name: "dev", arg: 1, scope: !9292, file: !844, line: 387, type: !873)
!9295 = !DILocation(line: 0, scope: !9292)
!9296 = !DILocation(line: 389, column: 2, scope: !9292)
!9297 = !DILocation(line: 390, column: 1, scope: !9292)
!9298 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !844, file: !844, line: 382, type: !897, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9299)
!9299 = !{!9300}
!9300 = !DILocalVariable(name: "dev", arg: 1, scope: !9298, file: !844, line: 382, type: !873)
!9301 = !DILocation(line: 0, scope: !9298)
!9302 = !DILocation(line: 384, column: 2, scope: !9298)
!9303 = !DILocation(line: 385, column: 1, scope: !9298)
!9304 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !844, file: !844, line: 373, type: !897, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9305)
!9305 = !{!9306}
!9306 = !DILocalVariable(name: "dev", arg: 1, scope: !9304, file: !844, line: 373, type: !873)
!9307 = !DILocation(line: 0, scope: !9304)
!9308 = !DILocation(line: 375, column: 2, scope: !9304)
!9309 = !DILocation(line: 376, column: 1, scope: !9304)
!9310 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !844, file: !844, line: 284, type: !897, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9311)
!9311 = !{!9312}
!9312 = !DILocalVariable(name: "dev", arg: 1, scope: !9310, file: !844, line: 284, type: !873)
!9313 = !DILocation(line: 0, scope: !9310)
!9314 = !DILocation(line: 286, column: 2, scope: !9310)
!9315 = !DILocation(line: 287, column: 1, scope: !9310)
!9316 = distinct !DISubprogram(name: "stm32_exti_init", scope: !844, file: !844, line: 416, type: !871, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9317)
!9317 = !{!9318}
!9318 = !DILocalVariable(name: "dev", arg: 1, scope: !9316, file: !844, line: 416, type: !873)
!9319 = !DILocation(line: 0, scope: !9316)
!9320 = !DILocation(line: 418, column: 2, scope: !9316)
!9321 = !DILocation(line: 420, column: 2, scope: !9316)
!9322 = !DILocation(line: 0, scope: !896)
!9323 = !DILocation(line: 493, column: 2, scope: !9324)
!9324 = distinct !DILexicalBlock(scope: !896, file: !844, line: 493, column: 2)
!9325 = !DILocation(line: 497, column: 2, scope: !9326)
!9326 = distinct !DILexicalBlock(scope: !896, file: !844, line: 497, column: 2)
!9327 = !DILocation(line: 507, column: 2, scope: !9328)
!9328 = distinct !DILexicalBlock(scope: !896, file: !844, line: 507, column: 2)
!9329 = !DILocation(line: 512, column: 2, scope: !9330)
!9330 = distinct !DILexicalBlock(scope: !896, file: !844, line: 512, column: 2)
!9331 = !DILocation(line: 516, column: 2, scope: !9332)
!9332 = distinct !DILexicalBlock(scope: !896, file: !844, line: 516, column: 2)
!9333 = !DILocation(line: 523, column: 2, scope: !9334)
!9334 = distinct !DILexicalBlock(scope: !896, file: !844, line: 523, column: 2)
!9335 = !DILocation(line: 527, column: 2, scope: !9336)
!9336 = distinct !DILexicalBlock(scope: !896, file: !844, line: 527, column: 2)
!9337 = !DILocation(line: 581, column: 2, scope: !9338)
!9338 = distinct !DILexicalBlock(scope: !896, file: !844, line: 581, column: 2)
!9339 = !DILocation(line: 586, column: 2, scope: !9340)
!9340 = distinct !DILexicalBlock(scope: !896, file: !844, line: 586, column: 2)
!9341 = !DILocation(line: 591, column: 2, scope: !9342)
!9342 = distinct !DILexicalBlock(scope: !896, file: !844, line: 591, column: 2)
!9343 = !DILocation(line: 595, column: 2, scope: !9344)
!9344 = distinct !DILexicalBlock(scope: !896, file: !844, line: 595, column: 2)
!9345 = !DILocation(line: 607, column: 1, scope: !896)
!9346 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !844, file: !844, line: 112, type: !9232, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9347)
!9347 = !{!9348, !9349}
!9348 = !DILocalVariable(name: "line", arg: 1, scope: !9346, file: !844, line: 112, type: !107)
!9349 = !DILocalVariable(name: "irqnum", scope: !9346, file: !844, line: 114, type: !107)
!9350 = !DILocation(line: 0, scope: !9346)
!9351 = !DILocation(line: 122, column: 13, scope: !9352)
!9352 = distinct !DILexicalBlock(scope: !9346, file: !844, line: 122, column: 6)
!9353 = !DILocation(line: 122, column: 6, scope: !9346)
!9354 = !DILocation(line: 123, column: 3, scope: !9355)
!9355 = distinct !DILexicalBlock(scope: !9356, file: !844, line: 123, column: 3)
!9356 = distinct !DILexicalBlock(scope: !9357, file: !844, line: 123, column: 3)
!9357 = distinct !DILexicalBlock(scope: !9358, file: !844, line: 123, column: 3)
!9358 = distinct !DILexicalBlock(scope: !9352, file: !844, line: 122, column: 22)
!9359 = !DILocation(line: 121, column: 11, scope: !9346)
!9360 = !DILocation(line: 130, column: 26, scope: !9346)
!9361 = !DILocation(line: 130, column: 2, scope: !9346)
!9362 = !DILocation(line: 134, column: 2, scope: !9346)
!9363 = !DILocation(line: 135, column: 1, scope: !9346)
!9364 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !9243, file: !9243, line: 268, type: !6415, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9365)
!9365 = !{!9366}
!9366 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9364, file: !9243, line: 268, type: !152)
!9367 = !DILocation(line: 0, scope: !9364)
!9368 = !DILocation(line: 270, column: 3, scope: !9364)
!9369 = !DILocation(line: 271, column: 1, scope: !9364)
!9370 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !844, file: !844, line: 137, type: !9232, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9371)
!9371 = !{!9372}
!9372 = !DILocalVariable(name: "line", arg: 1, scope: !9370, file: !844, line: 137, type: !107)
!9373 = !DILocation(line: 0, scope: !9370)
!9374 = !DILocation(line: 141, column: 11, scope: !9375)
!9375 = distinct !DILexicalBlock(scope: !9370, file: !844, line: 141, column: 6)
!9376 = !DILocation(line: 141, column: 6, scope: !9370)
!9377 = !DILocation(line: 145, column: 28, scope: !9378)
!9378 = distinct !DILexicalBlock(scope: !9375, file: !844, line: 141, column: 17)
!9379 = !DILocation(line: 145, column: 3, scope: !9378)
!9380 = !DILocation(line: 147, column: 2, scope: !9378)
!9381 = !DILocation(line: 151, column: 1, scope: !9370)
!9382 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !9243, file: !9243, line: 309, type: !6415, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9383)
!9383 = !{!9384}
!9384 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9382, file: !9243, line: 309, type: !152)
!9385 = !DILocation(line: 0, scope: !9382)
!9386 = !DILocation(line: 311, column: 3, scope: !9382)
!9387 = !DILocation(line: 312, column: 1, scope: !9382)
!9388 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !844, file: !844, line: 202, type: !9389, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9391)
!9389 = !DISubroutineType(types: !9390)
!9390 = !{null, !107, !107}
!9391 = !{!9392, !9393}
!9392 = !DILocalVariable(name: "line", arg: 1, scope: !9388, file: !844, line: 202, type: !107)
!9393 = !DILocalVariable(name: "trigger", arg: 2, scope: !9388, file: !844, line: 202, type: !107)
!9394 = !DILocation(line: 0, scope: !9388)
!9395 = !DILocation(line: 211, column: 2, scope: !9388)
!9396 = !DILocation(line: 213, column: 36, scope: !9397)
!9397 = distinct !DILexicalBlock(scope: !9388, file: !844, line: 211, column: 19)
!9398 = !DILocation(line: 213, column: 3, scope: !9397)
!9399 = !DILocation(line: 214, column: 3, scope: !9397)
!9400 = !DILocation(line: 215, column: 3, scope: !9397)
!9401 = !DILocation(line: 217, column: 35, scope: !9397)
!9402 = !DILocation(line: 217, column: 3, scope: !9397)
!9403 = !DILocation(line: 218, column: 3, scope: !9397)
!9404 = !DILocation(line: 219, column: 3, scope: !9397)
!9405 = !DILocation(line: 221, column: 36, scope: !9397)
!9406 = !DILocation(line: 221, column: 3, scope: !9397)
!9407 = !DILocation(line: 222, column: 3, scope: !9397)
!9408 = !DILocation(line: 223, column: 3, scope: !9397)
!9409 = !DILocation(line: 225, column: 35, scope: !9397)
!9410 = !DILocation(line: 225, column: 3, scope: !9397)
!9411 = !DILocation(line: 226, column: 3, scope: !9397)
!9412 = !DILocation(line: 227, column: 3, scope: !9397)
!9413 = !DILocation(line: 232, column: 1, scope: !9388)
!9414 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !9243, file: !9243, line: 573, type: !6415, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9415)
!9415 = !{!9416}
!9416 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9414, file: !9243, line: 573, type: !152)
!9417 = !DILocation(line: 0, scope: !9414)
!9418 = !DILocation(line: 575, column: 3, scope: !9414)
!9419 = !DILocation(line: 577, column: 1, scope: !9414)
!9420 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !9243, file: !9243, line: 703, type: !6415, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9421)
!9421 = !{!9422}
!9422 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9420, file: !9243, line: 703, type: !152)
!9423 = !DILocation(line: 0, scope: !9420)
!9424 = !DILocation(line: 705, column: 3, scope: !9420)
!9425 = !DILocation(line: 706, column: 1, scope: !9420)
!9426 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !9243, file: !9243, line: 529, type: !6415, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9427)
!9427 = !{!9428}
!9428 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9426, file: !9243, line: 529, type: !152)
!9429 = !DILocation(line: 0, scope: !9426)
!9430 = !DILocation(line: 531, column: 3, scope: !9426)
!9431 = !DILocation(line: 533, column: 1, scope: !9426)
!9432 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !9243, file: !9243, line: 661, type: !6415, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9433)
!9433 = !{!9434}
!9434 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9432, file: !9243, line: 661, type: !152)
!9435 = !DILocation(line: 0, scope: !9432)
!9436 = !DILocation(line: 663, column: 3, scope: !9432)
!9437 = !DILocation(line: 664, column: 1, scope: !9432)
!9438 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !844, file: !844, line: 433, type: !9439, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9441)
!9439 = !DISubroutineType(types: !9440)
!9440 = !{!107, !107, !884, !106}
!9441 = !{!9442, !9443, !9444, !9445, !9447}
!9442 = !DILocalVariable(name: "line", arg: 1, scope: !9438, file: !844, line: 433, type: !107)
!9443 = !DILocalVariable(name: "cb", arg: 2, scope: !9438, file: !844, line: 433, type: !884)
!9444 = !DILocalVariable(name: "arg", arg: 3, scope: !9438, file: !844, line: 433, type: !106)
!9445 = !DILocalVariable(name: "dev", scope: !9438, file: !844, line: 435, type: !9446)
!9446 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !873)
!9447 = !DILocalVariable(name: "data", scope: !9438, file: !844, line: 436, type: !9197)
!9448 = !DILocation(line: 0, scope: !9438)
!9449 = !DILocation(line: 438, column: 21, scope: !9450)
!9450 = distinct !DILexicalBlock(scope: !9438, file: !844, line: 438, column: 6)
!9451 = !DILocation(line: 438, column: 6, scope: !9450)
!9452 = !DILocation(line: 438, column: 6, scope: !9438)
!9453 = !DILocation(line: 442, column: 20, scope: !9438)
!9454 = !DILocation(line: 443, column: 17, scope: !9438)
!9455 = !DILocation(line: 443, column: 22, scope: !9438)
!9456 = !DILocation(line: 445, column: 2, scope: !9438)
!9457 = !DILocation(line: 446, column: 1, scope: !9438)
!9458 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !844, file: !844, line: 448, type: !9232, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9459)
!9459 = !{!9460, !9461, !9462}
!9460 = !DILocalVariable(name: "line", arg: 1, scope: !9458, file: !844, line: 448, type: !107)
!9461 = !DILocalVariable(name: "dev", scope: !9458, file: !844, line: 450, type: !9446)
!9462 = !DILocalVariable(name: "data", scope: !9458, file: !844, line: 451, type: !9197)
!9463 = !DILocation(line: 0, scope: !9458)
!9464 = !DILocation(line: 453, column: 17, scope: !9458)
!9465 = !DILocation(line: 453, column: 20, scope: !9458)
!9466 = !DILocation(line: 454, column: 17, scope: !9458)
!9467 = !DILocation(line: 454, column: 22, scope: !9458)
!9468 = !DILocation(line: 455, column: 1, scope: !9458)
!9469 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !1036, file: !1036, line: 183, type: !1074, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !9470)
!9470 = !{!9471, !9472, !9473, !9474, !9475}
!9471 = !DILocalVariable(name: "dev", arg: 1, scope: !9469, file: !1036, line: 183, type: !1065)
!9472 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9469, file: !1036, line: 184, type: !1076)
!9473 = !DILocalVariable(name: "pclken", scope: !9469, file: !1036, line: 186, type: !1026)
!9474 = !DILocalVariable(name: "reg", scope: !9469, file: !1036, line: 187, type: !1616)
!9475 = !DILocalVariable(name: "reg_val", scope: !9469, file: !1036, line: 188, type: !152)
!9476 = !DILocation(line: 0, scope: !9469)
!9477 = !DILocation(line: 192, column: 6, scope: !9478)
!9478 = distinct !DILexicalBlock(scope: !9469, file: !1036, line: 192, column: 6)
!9479 = !DILocation(line: 192, column: 6, scope: !9469)
!9480 = !DILocation(line: 197, column: 52, scope: !9469)
!9481 = !DILocation(line: 197, column: 8, scope: !9469)
!9482 = !DILocation(line: 198, column: 12, scope: !9469)
!9483 = !DILocation(line: 199, column: 21, scope: !9469)
!9484 = !DILocation(line: 199, column: 10, scope: !9469)
!9485 = !DILocation(line: 200, column: 7, scope: !9469)
!9486 = !DILocation(line: 202, column: 2, scope: !9469)
!9487 = !DILocation(line: 203, column: 1, scope: !9469)
!9488 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !1036, file: !1036, line: 205, type: !1074, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !9489)
!9489 = !{!9490, !9491, !9492, !9493, !9494}
!9490 = !DILocalVariable(name: "dev", arg: 1, scope: !9488, file: !1036, line: 205, type: !1065)
!9491 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9488, file: !1036, line: 206, type: !1076)
!9492 = !DILocalVariable(name: "pclken", scope: !9488, file: !1036, line: 208, type: !1026)
!9493 = !DILocalVariable(name: "reg", scope: !9488, file: !1036, line: 209, type: !1616)
!9494 = !DILocalVariable(name: "reg_val", scope: !9488, file: !1036, line: 210, type: !152)
!9495 = !DILocation(line: 0, scope: !9488)
!9496 = !DILocation(line: 214, column: 6, scope: !9497)
!9497 = distinct !DILexicalBlock(scope: !9488, file: !1036, line: 214, column: 6)
!9498 = !DILocation(line: 214, column: 6, scope: !9488)
!9499 = !DILocation(line: 219, column: 52, scope: !9488)
!9500 = !DILocation(line: 219, column: 8, scope: !9488)
!9501 = !DILocation(line: 220, column: 12, scope: !9488)
!9502 = !DILocation(line: 221, column: 22, scope: !9488)
!9503 = !DILocation(line: 221, column: 13, scope: !9488)
!9504 = !DILocation(line: 221, column: 10, scope: !9488)
!9505 = !DILocation(line: 222, column: 7, scope: !9488)
!9506 = !DILocation(line: 224, column: 2, scope: !9488)
!9507 = !DILocation(line: 225, column: 1, scope: !9488)
!9508 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !1036, file: !1036, line: 262, type: !1090, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !9509)
!9509 = !{!9510, !9511, !9512, !9513, !9514, !9515, !9516, !9517}
!9510 = !DILocalVariable(name: "clock", arg: 1, scope: !9508, file: !1036, line: 262, type: !1065)
!9511 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9508, file: !1036, line: 263, type: !1076)
!9512 = !DILocalVariable(name: "rate", arg: 3, scope: !9508, file: !1036, line: 264, type: !1032)
!9513 = !DILocalVariable(name: "pclken", scope: !9508, file: !1036, line: 266, type: !1026)
!9514 = !DILocalVariable(name: "ahb_clock", scope: !9508, file: !1036, line: 273, type: !152)
!9515 = !DILocalVariable(name: "apb1_clock", scope: !9508, file: !1036, line: 274, type: !152)
!9516 = !DILocalVariable(name: "apb2_clock", scope: !9508, file: !1036, line: 276, type: !152)
!9517 = !DILocalVariable(name: "ahb3_clock", scope: !9508, file: !1036, line: 286, type: !152)
!9518 = !DILocation(line: 0, scope: !9508)
!9519 = !DILocation(line: 273, column: 23, scope: !9508)
!9520 = !DILocation(line: 299, column: 18, scope: !9508)
!9521 = !DILocation(line: 299, column: 2, scope: !9508)
!9522 = !DILocation(line: 274, column: 24, scope: !9508)
!9523 = !DILocation(line: 319, column: 3, scope: !9524)
!9524 = distinct !DILexicalBlock(scope: !9508, file: !1036, line: 299, column: 23)
!9525 = !DILocation(line: 276, column: 24, scope: !9508)
!9526 = !DILocation(line: 323, column: 3, scope: !9524)
!9527 = !DILocation(line: 346, column: 33, scope: !9524)
!9528 = !DILocation(line: 346, column: 11, scope: !9524)
!9529 = !DILocation(line: 350, column: 3, scope: !9524)
!9530 = !DILocation(line: 354, column: 33, scope: !9524)
!9531 = !DILocation(line: 354, column: 11, scope: !9524)
!9532 = !DILocation(line: 358, column: 3, scope: !9524)
!9533 = !DILocation(line: 374, column: 3, scope: !9524)
!9534 = !DILocation(line: 379, column: 3, scope: !9524)
!9535 = !DILocation(line: 0, scope: !9524)
!9536 = !DILocation(line: 396, column: 1, scope: !9508)
!9537 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !1036, file: !1036, line: 227, type: !1106, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !9538)
!9538 = !{!9539, !9540, !9541, !9542, !9543, !9544, !9545, !9546}
!9539 = !DILocalVariable(name: "dev", arg: 1, scope: !9537, file: !1036, line: 227, type: !1065)
!9540 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9537, file: !1036, line: 228, type: !1076)
!9541 = !DILocalVariable(name: "data", arg: 3, scope: !9537, file: !1036, line: 229, type: !106)
!9542 = !DILocalVariable(name: "pclken", scope: !9537, file: !1036, line: 233, type: !1026)
!9543 = !DILocalVariable(name: "reg", scope: !9537, file: !1036, line: 234, type: !1616)
!9544 = !DILocalVariable(name: "reg_val", scope: !9537, file: !1036, line: 235, type: !152)
!9545 = !DILocalVariable(name: "dt_val", scope: !9537, file: !1036, line: 235, type: !152)
!9546 = !DILocalVariable(name: "err", scope: !9537, file: !1036, line: 236, type: !107)
!9547 = !DILocation(line: 0, scope: !9537)
!9548 = !DILocation(line: 241, column: 30, scope: !9537)
!9549 = !DILocation(line: 241, column: 8, scope: !9537)
!9550 = !DILocation(line: 242, column: 10, scope: !9551)
!9551 = distinct !DILexicalBlock(scope: !9537, file: !1036, line: 242, column: 6)
!9552 = !DILocation(line: 242, column: 6, scope: !9537)
!9553 = !DILocation(line: 247, column: 11, scope: !9537)
!9554 = !DILocation(line: 248, column: 6, scope: !9537)
!9555 = !DILocation(line: 247, column: 44, scope: !9537)
!9556 = !DILocation(line: 250, column: 6, scope: !9537)
!9557 = !DILocation(line: 249, column: 52, scope: !9537)
!9558 = !DILocation(line: 249, column: 8, scope: !9537)
!9559 = !DILocation(line: 251, column: 12, scope: !9537)
!9560 = !DILocation(line: 252, column: 10, scope: !9537)
!9561 = !DILocation(line: 253, column: 7, scope: !9537)
!9562 = !DILocation(line: 255, column: 2, scope: !9537)
!9563 = !DILocation(line: 260, column: 1, scope: !9537)
!9564 = distinct !DISubprogram(name: "enabled_clock", scope: !1036, file: !1036, line: 100, type: !9565, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !9567)
!9565 = !DISubroutineType(types: !9566)
!9566 = !{!107, !152}
!9567 = !{!9568, !9569}
!9568 = !DILocalVariable(name: "src_clk", arg: 1, scope: !9564, file: !1036, line: 100, type: !152)
!9569 = !DILocalVariable(name: "r", scope: !9564, file: !1036, line: 102, type: !107)
!9570 = !DILocation(line: 0, scope: !9564)
!9571 = !DILocation(line: 104, column: 2, scope: !9564)
!9572 = !DILocation(line: 180, column: 2, scope: !9564)
!9573 = !DILocation(line: 181, column: 1, scope: !9564)
!9574 = distinct !DISubprogram(name: "get_bus_clock", scope: !1036, file: !1036, line: 79, type: !9575, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !9577)
!9575 = !DISubroutineType(types: !9576)
!9576 = !{!152, !152, !152}
!9577 = !{!9578, !9579}
!9578 = !DILocalVariable(name: "clock", arg: 1, scope: !9574, file: !1036, line: 79, type: !152)
!9579 = !DILocalVariable(name: "prescaler", arg: 2, scope: !9574, file: !1036, line: 79, type: !152)
!9580 = !DILocation(line: 0, scope: !9574)
!9581 = !DILocation(line: 81, column: 15, scope: !9574)
!9582 = !DILocation(line: 81, column: 2, scope: !9574)
!9583 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !1036, file: !1036, line: 68, type: !9584, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !9586)
!9584 = !DISubroutineType(types: !9585)
!9585 = !{!152, !152, !107, !107, !107}
!9586 = !{!9587, !9588, !9589, !9590}
!9587 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !9583, file: !1036, line: 68, type: !152)
!9588 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !9583, file: !1036, line: 69, type: !107)
!9589 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !9583, file: !1036, line: 70, type: !107)
!9590 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !9583, file: !1036, line: 71, type: !107)
!9591 = !DILocation(line: 0, scope: !9583)
!9592 = !DILocation(line: 75, column: 22, scope: !9583)
!9593 = !DILocation(line: 76, column: 13, scope: !9583)
!9594 = !DILocation(line: 75, column: 34, scope: !9583)
!9595 = !DILocation(line: 75, column: 2, scope: !9583)
!9596 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !1036, file: !1036, line: 641, type: !1063, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !9597)
!9597 = !{!9598, !9599, !9600}
!9598 = !DILocalVariable(name: "dev", arg: 1, scope: !9596, file: !1036, line: 641, type: !1065)
!9599 = !DILocalVariable(name: "old_flash_freq", scope: !9596, file: !1036, line: 664, type: !152)
!9600 = !DILocalVariable(name: "new_flash_freq", scope: !9596, file: !1036, line: 665, type: !152)
!9601 = !DILocation(line: 0, scope: !9596)
!9602 = !DILocation(line: 646, column: 2, scope: !9596)
!9603 = !DILocation(line: 667, column: 19, scope: !9596)
!9604 = !DILocation(line: 674, column: 21, scope: !9605)
!9605 = distinct !DILexicalBlock(scope: !9596, file: !1036, line: 674, column: 6)
!9606 = !DILocation(line: 674, column: 6, scope: !9596)
!9607 = !DILocation(line: 675, column: 3, scope: !9608)
!9608 = distinct !DILexicalBlock(scope: !9605, file: !1036, line: 674, column: 59)
!9609 = !DILocation(line: 676, column: 2, scope: !9608)
!9610 = !DILocation(line: 680, column: 2, scope: !9596)
!9611 = !DILocation(line: 683, column: 2, scope: !9596)
!9612 = !DILocation(line: 690, column: 3, scope: !9613)
!9613 = distinct !DILexicalBlock(scope: !9614, file: !1036, line: 689, column: 9)
!9614 = distinct !DILexicalBlock(scope: !9596, file: !1036, line: 685, column: 6)
!9615 = !DILocation(line: 695, column: 2, scope: !9596)
!9616 = !DILocation(line: 696, column: 2, scope: !9596)
!9617 = !DILocation(line: 696, column: 9, scope: !9596)
!9618 = !DILocation(line: 696, column: 34, scope: !9596)
!9619 = distinct !{!9619, !9616, !9620}
!9620 = !DILocation(line: 697, column: 2, scope: !9596)
!9621 = !DILocation(line: 720, column: 21, scope: !9622)
!9622 = distinct !DILexicalBlock(scope: !9596, file: !1036, line: 720, column: 6)
!9623 = !DILocation(line: 720, column: 6, scope: !9596)
!9624 = !DILocation(line: 721, column: 3, scope: !9625)
!9625 = distinct !DILexicalBlock(scope: !9622, file: !1036, line: 720, column: 60)
!9626 = !DILocation(line: 722, column: 2, scope: !9625)
!9627 = !DILocation(line: 725, column: 18, scope: !9596)
!9628 = !DILocation(line: 728, column: 2, scope: !9596)
!9629 = !DILocation(line: 730, column: 2, scope: !9596)
!9630 = !DILocation(line: 745, column: 2, scope: !9596)
!9631 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !9632, file: !9632, line: 3275, type: !6405, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !2236)
!9632 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9633 = !DILocation(line: 3277, column: 21, scope: !9631)
!9634 = !DILocation(line: 3277, column: 3, scope: !9631)
!9635 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !1036, file: !1036, line: 507, type: !3148, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !2236)
!9636 = !DILocation(line: 516, column: 4, scope: !9637)
!9637 = distinct !DILexicalBlock(scope: !9638, file: !1036, line: 515, column: 10)
!9638 = distinct !DILexicalBlock(scope: !9639, file: !1036, line: 513, column: 7)
!9639 = distinct !DILexicalBlock(scope: !9640, file: !1036, line: 510, column: 37)
!9640 = distinct !DILexicalBlock(scope: !9635, file: !1036, line: 510, column: 6)
!9641 = !DILocation(line: 526, column: 3, scope: !9639)
!9642 = !DILocation(line: 527, column: 3, scope: !9639)
!9643 = !DILocation(line: 527, column: 10, scope: !9639)
!9644 = !DILocation(line: 527, column: 31, scope: !9639)
!9645 = distinct !{!9645, !9642, !9646}
!9646 = !DILocation(line: 529, column: 3, scope: !9639)
!9647 = !DILocation(line: 583, column: 3, scope: !9648)
!9648 = distinct !DILexicalBlock(scope: !9649, file: !1036, line: 577, column: 37)
!9649 = distinct !DILexicalBlock(scope: !9635, file: !1036, line: 577, column: 6)
!9650 = !DILocation(line: 584, column: 3, scope: !9648)
!9651 = !DILocation(line: 584, column: 10, scope: !9648)
!9652 = !DILocation(line: 584, column: 31, scope: !9648)
!9653 = distinct !{!9653, !9650, !9654}
!9654 = !DILocation(line: 585, column: 3, scope: !9648)
!9655 = !DILocation(line: 627, column: 1, scope: !9635)
!9656 = distinct !DISubprogram(name: "set_up_plls", scope: !1036, file: !1036, line: 448, type: !3148, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !2236)
!9657 = !DILocation(line: 460, column: 6, scope: !9658)
!9658 = distinct !DILexicalBlock(scope: !9656, file: !1036, line: 460, column: 6)
!9659 = !DILocation(line: 460, column: 31, scope: !9658)
!9660 = !DILocation(line: 460, column: 6, scope: !9656)
!9661 = !DILocation(line: 461, column: 3, scope: !9662)
!9662 = distinct !DILexicalBlock(scope: !9658, file: !1036, line: 460, column: 67)
!9663 = !DILocation(line: 462, column: 3, scope: !9662)
!9664 = !DILocation(line: 463, column: 2, scope: !9662)
!9665 = !DILocation(line: 464, column: 2, scope: !9656)
!9666 = !DILocation(line: 488, column: 2, scope: !9656)
!9667 = !DILocation(line: 492, column: 2, scope: !9656)
!9668 = !DILocation(line: 496, column: 2, scope: !9656)
!9669 = !DILocation(line: 499, column: 2, scope: !9656)
!9670 = !DILocation(line: 500, column: 2, scope: !9656)
!9671 = !DILocation(line: 500, column: 9, scope: !9656)
!9672 = !DILocation(line: 500, column: 30, scope: !9656)
!9673 = distinct !{!9673, !9670, !9674}
!9674 = !DILocation(line: 502, column: 2, scope: !9656)
!9675 = !DILocation(line: 505, column: 1, scope: !9656)
!9676 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !9632, file: !9632, line: 3224, type: !6415, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !9677)
!9677 = !{!9678}
!9678 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !9676, file: !9632, line: 3224, type: !152)
!9679 = !DILocation(line: 0, scope: !9676)
!9680 = !DILocation(line: 3226, column: 3, scope: !9676)
!9681 = !DILocation(line: 3227, column: 1, scope: !9676)
!9682 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !9632, file: !9632, line: 3188, type: !6415, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !9683)
!9683 = !{!9684}
!9684 = !DILocalVariable(name: "Source", arg: 1, scope: !9682, file: !9632, line: 3188, type: !152)
!9685 = !DILocation(line: 0, scope: !9682)
!9686 = !DILocation(line: 3190, column: 3, scope: !9682)
!9687 = !DILocation(line: 3191, column: 1, scope: !9682)
!9688 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !9632, file: !9632, line: 3204, type: !6405, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !2236)
!9689 = !DILocation(line: 3206, column: 21, scope: !9688)
!9690 = !DILocation(line: 3206, column: 3, scope: !9688)
!9691 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !9632, file: !9632, line: 3240, type: !6415, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !9692)
!9692 = !{!9693}
!9693 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !9691, file: !9632, line: 3240, type: !152)
!9694 = !DILocation(line: 0, scope: !9691)
!9695 = !DILocation(line: 3242, column: 3, scope: !9691)
!9696 = !DILocation(line: 3243, column: 1, scope: !9691)
!9697 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !9632, file: !9632, line: 3256, type: !6415, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !9698)
!9698 = !{!9699}
!9699 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !9697, file: !9632, line: 3256, type: !152)
!9700 = !DILocation(line: 0, scope: !9697)
!9701 = !DILocation(line: 3258, column: 3, scope: !9697)
!9702 = !DILocation(line: 3259, column: 1, scope: !9697)
!9703 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !1036, file: !1036, line: 409, type: !3148, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !2236)
!9704 = !DILocation(line: 412, column: 6, scope: !9705)
!9705 = distinct !DILexicalBlock(scope: !9703, file: !1036, line: 412, column: 6)
!9706 = !DILocation(line: 412, column: 27, scope: !9705)
!9707 = !DILocation(line: 412, column: 6, scope: !9703)
!9708 = !DILocation(line: 414, column: 3, scope: !9709)
!9709 = distinct !DILexicalBlock(scope: !9705, file: !1036, line: 412, column: 33)
!9710 = !DILocation(line: 415, column: 3, scope: !9709)
!9711 = !DILocation(line: 415, column: 10, scope: !9709)
!9712 = !DILocation(line: 415, column: 31, scope: !9709)
!9713 = distinct !{!9713, !9710, !9714}
!9714 = !DILocation(line: 417, column: 3, scope: !9709)
!9715 = !DILocation(line: 421, column: 2, scope: !9703)
!9716 = !DILocation(line: 422, column: 2, scope: !9703)
!9717 = !DILocation(line: 422, column: 9, scope: !9703)
!9718 = !DILocation(line: 422, column: 34, scope: !9703)
!9719 = distinct !{!9719, !9716, !9720}
!9720 = !DILocation(line: 423, column: 2, scope: !9703)
!9721 = !DILocation(line: 424, column: 1, scope: !9703)
!9722 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !9632, file: !9632, line: 4195, type: !3148, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !2236)
!9723 = !DILocation(line: 4197, column: 3, scope: !9722)
!9724 = !DILocation(line: 4198, column: 1, scope: !9722)
!9725 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !9632, file: !9632, line: 4184, type: !3148, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !2236)
!9726 = !DILocation(line: 4186, column: 3, scope: !9725)
!9727 = !DILocation(line: 4187, column: 1, scope: !9725)
!9728 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !9632, file: !9632, line: 4205, type: !6405, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !2236)
!9729 = !DILocation(line: 4207, column: 11, scope: !9728)
!9730 = !DILocation(line: 4207, column: 44, scope: !9728)
!9731 = !DILocation(line: 4207, column: 3, scope: !9728)
!9732 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !9632, file: !9632, line: 3007, type: !6405, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !2236)
!9733 = !DILocation(line: 3009, column: 11, scope: !9732)
!9734 = !DILocation(line: 3009, column: 44, scope: !9732)
!9735 = !DILocation(line: 3009, column: 3, scope: !9732)
!9736 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !9632, file: !9632, line: 2987, type: !3148, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !2236)
!9737 = !DILocation(line: 2989, column: 3, scope: !9736)
!9738 = !DILocation(line: 2990, column: 1, scope: !9736)
!9739 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !9632, file: !9632, line: 2939, type: !3148, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !2236)
!9740 = !DILocation(line: 2941, column: 3, scope: !9739)
!9741 = !DILocation(line: 2942, column: 1, scope: !9739)
!9742 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !9632, file: !9632, line: 2949, type: !3148, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !2236)
!9743 = !DILocation(line: 2951, column: 3, scope: !9742)
!9744 = !DILocation(line: 2952, column: 1, scope: !9742)
!9745 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !9632, file: !9632, line: 2969, type: !6405, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !2236)
!9746 = !DILocation(line: 2971, column: 11, scope: !9745)
!9747 = !DILocation(line: 2971, column: 44, scope: !9745)
!9748 = !DILocation(line: 2971, column: 3, scope: !9745)
!9749 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !9632, file: !9632, line: 3143, type: !3148, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !2236)
!9750 = !DILocation(line: 3145, column: 3, scope: !9749)
!9751 = !DILocation(line: 3146, column: 1, scope: !9749)
!9752 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !9632, file: !9632, line: 3163, type: !6405, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !2236)
!9753 = !DILocation(line: 3165, column: 11, scope: !9752)
!9754 = !DILocation(line: 3165, column: 46, scope: !9752)
!9755 = !DILocation(line: 3165, column: 3, scope: !9752)
!9756 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !9757, file: !9757, line: 40, type: !6405, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2935, retainedNodes: !2236)
!9757 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9758 = !DILocation(line: 45, column: 3, scope: !9759)
!9759 = distinct !DILexicalBlock(scope: !9760, file: !9757, line: 44, column: 44)
!9760 = distinct !DILexicalBlock(scope: !9761, file: !9757, line: 44, column: 13)
!9761 = distinct !DILexicalBlock(scope: !9756, file: !9757, line: 42, column: 6)
!9762 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !9757, file: !9757, line: 56, type: !3148, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2935, retainedNodes: !2236)
!9763 = !DILocation(line: 58, column: 2, scope: !9762)
!9764 = !DILocation(line: 62, column: 1, scope: !9762)
!9765 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !9632, file: !9632, line: 4304, type: !9766, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2935, retainedNodes: !9768)
!9766 = !DISubroutineType(types: !9767)
!9767 = !{null, !152, !152, !152, !152}
!9768 = !{!9769, !9770, !9771, !9772}
!9769 = !DILocalVariable(name: "Source", arg: 1, scope: !9765, file: !9632, line: 4304, type: !152)
!9770 = !DILocalVariable(name: "PLLM", arg: 2, scope: !9765, file: !9632, line: 4304, type: !152)
!9771 = !DILocalVariable(name: "PLLN", arg: 3, scope: !9765, file: !9632, line: 4304, type: !152)
!9772 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !9765, file: !9632, line: 4304, type: !152)
!9773 = !DILocation(line: 0, scope: !9765)
!9774 = !DILocation(line: 4306, column: 3, scope: !9765)
!9775 = !DILocation(line: 4308, column: 3, scope: !9765)
!9776 = !DILocation(line: 4310, column: 3, scope: !9765)
!9777 = !DILocation(line: 4312, column: 1, scope: !9765)
!9778 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !9757, file: !9757, line: 69, type: !3148, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2935, retainedNodes: !2236)
!9779 = !DILocation(line: 72, column: 2, scope: !9778)
!9780 = !DILocation(line: 73, column: 1, scope: !9778)
!9781 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !9782, file: !9782, line: 1185, type: !6415, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2935, retainedNodes: !9783)
!9782 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9783 = !{!9784, !9785}
!9784 = !DILocalVariable(name: "Periphs", arg: 1, scope: !9781, file: !9782, line: 1185, type: !152)
!9785 = !DILocalVariable(name: "tmpreg", scope: !9781, file: !9782, line: 1187, type: !227)
!9786 = !DILocation(line: 0, scope: !9781)
!9787 = !DILocation(line: 1187, column: 3, scope: !9781)
!9788 = !DILocation(line: 1187, column: 17, scope: !9781)
!9789 = !DILocation(line: 1188, column: 3, scope: !9781)
!9790 = !DILocation(line: 1190, column: 12, scope: !9781)
!9791 = !DILocation(line: 1190, column: 10, scope: !9781)
!9792 = !DILocation(line: 1191, column: 9, scope: !9781)
!9793 = !DILocation(line: 1192, column: 1, scope: !9781)
!9794 = distinct !DISubprogram(name: "uart_console_init", scope: !1167, file: !1167, line: 588, type: !1144, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1110, retainedNodes: !9795)
!9795 = !{!9796}
!9796 = !DILocalVariable(name: "arg", arg: 1, scope: !9794, file: !1167, line: 588, type: !1122)
!9797 = !DILocation(line: 0, scope: !9794)
!9798 = !DILocation(line: 593, column: 7, scope: !9799)
!9799 = distinct !DILexicalBlock(scope: !9794, file: !1167, line: 593, column: 6)
!9800 = !DILocation(line: 593, column: 6, scope: !9794)
!9801 = !DILocation(line: 597, column: 2, scope: !9794)
!9802 = !DILocation(line: 599, column: 2, scope: !9794)
!9803 = !DILocation(line: 600, column: 1, scope: !9794)
!9804 = distinct !DISubprogram(name: "device_is_ready", scope: !9805, file: !9805, line: 47, type: !9806, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1110, retainedNodes: !9808)
!9805 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/integration")
!9806 = !DISubroutineType(types: !9807)
!9807 = !{!145, !1122}
!9808 = !{!9809}
!9809 = !DILocalVariable(name: "dev", arg: 1, scope: !9804, file: !9805, line: 47, type: !1122)
!9810 = !DILocation(line: 0, scope: !9804)
!9811 = !DILocation(line: 55, column: 2, scope: !9812)
!9812 = distinct !DILexicalBlock(scope: !9804, file: !9805, line: 55, column: 2)
!9813 = !{i64 2155298616}
!9814 = !DILocation(line: 56, column: 9, scope: !9804)
!9815 = !DILocation(line: 56, column: 2, scope: !9804)
!9816 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1167, file: !1167, line: 573, type: !3148, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1110, retainedNodes: !2236)
!9817 = !DILocation(line: 576, column: 2, scope: !9816)
!9818 = !DILocation(line: 579, column: 2, scope: !9816)
!9819 = !DILocation(line: 581, column: 1, scope: !9816)
!9820 = distinct !DISubprogram(name: "console_out", scope: !1167, file: !1167, line: 77, type: !214, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1110, retainedNodes: !9821)
!9821 = !{!9822}
!9822 = !DILocalVariable(name: "c", arg: 1, scope: !9820, file: !1167, line: 77, type: !107)
!9823 = !DILocation(line: 0, scope: !9820)
!9824 = !DILocation(line: 89, column: 11, scope: !9825)
!9825 = distinct !DILexicalBlock(scope: !9820, file: !1167, line: 89, column: 6)
!9826 = !DILocation(line: 89, column: 6, scope: !9820)
!9827 = !DILocation(line: 90, column: 3, scope: !9828)
!9828 = distinct !DILexicalBlock(scope: !9825, file: !1167, line: 89, column: 17)
!9829 = !DILocation(line: 91, column: 2, scope: !9828)
!9830 = !DILocation(line: 92, column: 34, scope: !9820)
!9831 = !DILocation(line: 92, column: 2, scope: !9820)
!9832 = !DILocation(line: 94, column: 2, scope: !9820)
!9833 = distinct !DISubprogram(name: "uart_poll_out", scope: !9834, file: !9834, line: 95, type: !1140, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1110, retainedNodes: !9835)
!9834 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/integration")
!9835 = !{!9836, !9837}
!9836 = !DILocalVariable(name: "dev", arg: 1, scope: !9833, file: !9834, line: 95, type: !1122)
!9837 = !DILocalVariable(name: "out_char", arg: 2, scope: !9833, file: !9834, line: 95, type: !196)
!9838 = !DILocation(line: 0, scope: !9833)
!9839 = !DILocation(line: 105, column: 2, scope: !9840)
!9840 = distinct !DILexicalBlock(scope: !9833, file: !9834, line: 105, column: 2)
!9841 = !{i64 2155382007}
!9842 = !DILocation(line: 106, column: 2, scope: !9833)
!9843 = !DILocation(line: 107, column: 1, scope: !9833)
!9844 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !1116, file: !1116, line: 574, type: !1140, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1110, retainedNodes: !9845)
!9845 = !{!9846, !9847, !9848}
!9846 = !DILocalVariable(name: "dev", arg: 1, scope: !9844, file: !1116, line: 574, type: !1122)
!9847 = !DILocalVariable(name: "out_char", arg: 2, scope: !9844, file: !1116, line: 575, type: !196)
!9848 = !DILocalVariable(name: "api", scope: !9844, file: !1116, line: 577, type: !1113)
!9849 = !DILocation(line: 0, scope: !9844)
!9850 = !DILocation(line: 578, column: 40, scope: !9844)
!9851 = !DILocation(line: 580, column: 7, scope: !9844)
!9852 = !DILocation(line: 580, column: 2, scope: !9844)
!9853 = !DILocation(line: 581, column: 1, scope: !9844)
!9854 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !247, file: !247, line: 730, type: !9806, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1110, retainedNodes: !9855)
!9855 = !{!9856}
!9856 = !DILocalVariable(name: "dev", arg: 1, scope: !9854, file: !247, line: 730, type: !1122)
!9857 = !DILocation(line: 0, scope: !9854)
!9858 = !DILocation(line: 732, column: 9, scope: !9854)
!9859 = !DILocation(line: 732, column: 2, scope: !9854)
!9860 = distinct !DISubprogram(name: "uart_register_input", scope: !1167, file: !1167, line: 560, type: !9861, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1110, retainedNodes: !9908)
!9861 = !DISubroutineType(types: !9862)
!9862 = !{null, !9863, !9863, !9905}
!9863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9864, size: 32)
!9864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !406, line: 2208, size: 160, elements: !9865)
!9865 = !{!9866}
!9866 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !9864, file: !406, line: 2209, baseType: !9867, size: 160)
!9867 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !406, line: 1709, size: 160, elements: !9868)
!9868 = !{!9869, !9882, !9886}
!9869 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !9867, file: !406, line: 1710, baseType: !9870, size: 64)
!9870 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !9871, line: 46, baseType: !9872)
!9871 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !9871, line: 41, size: 64, elements: !9873)
!9873 = !{!9874, !9881}
!9874 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9872, file: !9871, line: 42, baseType: !9875, size: 32)
!9875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9876, size: 32)
!9876 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !9871, line: 39, baseType: !9877)
!9877 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !9871, line: 35, size: 32, elements: !9878)
!9878 = !{!9879}
!9879 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !9877, file: !9871, line: 36, baseType: !9880, size: 32)
!9880 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !9871, line: 32, baseType: !152)
!9881 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9872, file: !9871, line: 43, baseType: !9875, size: 32, offset: 32)
!9882 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9867, file: !406, line: 1711, baseType: !9883, size: 32, offset: 64)
!9883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !9884)
!9884 = !{!9885}
!9885 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !9883, file: !420, line: 52, baseType: !22, size: 32)
!9886 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9867, file: !406, line: 1712, baseType: !9887, size: 64, offset: 96)
!9887 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !9888)
!9888 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !9889)
!9889 = !{!9890}
!9890 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !9888, file: !345, line: 232, baseType: !9891, size: 64)
!9891 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !9892)
!9892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !9893)
!9893 = !{!9894, !9900}
!9894 = !DIDerivedType(tag: DW_TAG_member, scope: !9892, file: !319, line: 38, baseType: !9895, size: 32)
!9895 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9892, file: !319, line: 38, size: 32, elements: !9896)
!9896 = !{!9897, !9899}
!9897 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9895, file: !319, line: 39, baseType: !9898, size: 32)
!9898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9892, size: 32)
!9899 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9895, file: !319, line: 40, baseType: !9898, size: 32)
!9900 = !DIDerivedType(tag: DW_TAG_member, scope: !9892, file: !319, line: 42, baseType: !9901, size: 32, offset: 32)
!9901 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9892, file: !319, line: 42, size: 32, elements: !9902)
!9902 = !{!9903, !9904}
!9903 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9901, file: !319, line: 43, baseType: !9898, size: 32)
!9904 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9901, file: !319, line: 44, baseType: !9898, size: 32)
!9905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9906, size: 32)
!9906 = !DISubroutineType(types: !9907)
!9907 = !{!195, !193, !195}
!9908 = !{!9909, !9910, !9911}
!9909 = !DILocalVariable(name: "avail", arg: 1, scope: !9860, file: !1167, line: 560, type: !9863)
!9910 = !DILocalVariable(name: "lines", arg: 2, scope: !9860, file: !1167, line: 560, type: !9863)
!9911 = !DILocalVariable(name: "completion", arg: 3, scope: !9860, file: !1167, line: 561, type: !9905)
!9912 = !DILocation(line: 0, scope: !9860)
!9913 = !DILocation(line: 566, column: 1, scope: !9860)
!9914 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1347, file: !1347, line: 523, type: !1203, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !9915)
!9915 = !{!9916, !9917, !9918, !9919, !9920}
!9916 = !DILocalVariable(name: "dev", arg: 1, scope: !9914, file: !1347, line: 523, type: !1205)
!9917 = !DILocalVariable(name: "pin", arg: 2, scope: !9914, file: !1347, line: 524, type: !1220)
!9918 = !DILocalVariable(name: "flags", arg: 3, scope: !9914, file: !1347, line: 524, type: !1221)
!9919 = !DILocalVariable(name: "err", scope: !9914, file: !1347, line: 526, type: !107)
!9920 = !DILocalVariable(name: "pincfg", scope: !9914, file: !1347, line: 527, type: !107)
!9921 = !DILocation(line: 0, scope: !9914)
!9922 = !DILocation(line: 527, column: 2, scope: !9914)
!9923 = !DILocation(line: 532, column: 8, scope: !9914)
!9924 = !DILocation(line: 533, column: 10, scope: !9925)
!9925 = distinct !DILexicalBlock(scope: !9914, file: !1347, line: 533, column: 6)
!9926 = !DILocation(line: 533, column: 6, scope: !9914)
!9927 = !DILocation(line: 543, column: 13, scope: !9928)
!9928 = distinct !DILexicalBlock(scope: !9914, file: !1347, line: 543, column: 6)
!9929 = !DILocation(line: 543, column: 28, scope: !9928)
!9930 = !DILocation(line: 543, column: 6, scope: !9914)
!9931 = !DILocation(line: 544, column: 14, scope: !9932)
!9932 = distinct !DILexicalBlock(scope: !9933, file: !1347, line: 544, column: 7)
!9933 = distinct !DILexicalBlock(scope: !9928, file: !1347, line: 543, column: 34)
!9934 = !DILocation(line: 544, column: 39, scope: !9932)
!9935 = !DILocation(line: 544, column: 7, scope: !9933)
!9936 = !DILocation(line: 545, column: 38, scope: !9937)
!9937 = distinct !DILexicalBlock(scope: !9932, file: !1347, line: 544, column: 45)
!9938 = !DILocation(line: 545, column: 4, scope: !9937)
!9939 = !DILocation(line: 546, column: 3, scope: !9937)
!9940 = !DILocation(line: 546, column: 21, scope: !9941)
!9941 = distinct !DILexicalBlock(scope: !9932, file: !1347, line: 546, column: 14)
!9942 = !DILocation(line: 546, column: 45, scope: !9941)
!9943 = !DILocation(line: 546, column: 14, scope: !9932)
!9944 = !DILocation(line: 547, column: 40, scope: !9945)
!9945 = distinct !DILexicalBlock(scope: !9941, file: !1347, line: 546, column: 51)
!9946 = !DILocation(line: 547, column: 4, scope: !9945)
!9947 = !DILocation(line: 548, column: 3, scope: !9945)
!9948 = !DILocation(line: 551, column: 32, scope: !9914)
!9949 = !DILocation(line: 551, column: 37, scope: !9914)
!9950 = !DILocation(line: 551, column: 2, scope: !9914)
!9951 = !DILocation(line: 554, column: 6, scope: !9914)
!9952 = !DILocation(line: 562, column: 1, scope: !9914)
!9953 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1347, file: !1347, line: 410, type: !9954, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !9956)
!9954 = !DISubroutineType(types: !9955)
!9955 = !{!107, !1205, !1032}
!9956 = !{!9957, !9958, !9959, !9961}
!9957 = !DILocalVariable(name: "dev", arg: 1, scope: !9953, file: !1347, line: 410, type: !1205)
!9958 = !DILocalVariable(name: "value", arg: 2, scope: !9953, file: !1347, line: 410, type: !1032)
!9959 = !DILocalVariable(name: "cfg", scope: !9953, file: !1347, line: 412, type: !9960)
!9960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1456, size: 32)
!9961 = !DILocalVariable(name: "gpio", scope: !9953, file: !1347, line: 413, type: !1278)
!9962 = !DILocation(line: 0, scope: !9953)
!9963 = !DILocation(line: 412, column: 45, scope: !9953)
!9964 = !DILocation(line: 413, column: 44, scope: !9953)
!9965 = !DILocation(line: 415, column: 11, scope: !9953)
!9966 = !DILocation(line: 415, column: 9, scope: !9953)
!9967 = !DILocation(line: 417, column: 2, scope: !9953)
!9968 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1347, file: !1347, line: 420, type: !1230, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !9969)
!9969 = !{!9970, !9971, !9972, !9973, !9974, !9975}
!9970 = !DILocalVariable(name: "dev", arg: 1, scope: !9968, file: !1347, line: 420, type: !1205)
!9971 = !DILocalVariable(name: "mask", arg: 2, scope: !9968, file: !1347, line: 421, type: !1232)
!9972 = !DILocalVariable(name: "value", arg: 3, scope: !9968, file: !1347, line: 422, type: !1227)
!9973 = !DILocalVariable(name: "cfg", scope: !9968, file: !1347, line: 424, type: !9960)
!9974 = !DILocalVariable(name: "gpio", scope: !9968, file: !1347, line: 425, type: !1278)
!9975 = !DILocalVariable(name: "port_value", scope: !9968, file: !1347, line: 426, type: !152)
!9976 = !DILocation(line: 0, scope: !9968)
!9977 = !DILocation(line: 424, column: 45, scope: !9968)
!9978 = !DILocation(line: 425, column: 44, scope: !9968)
!9979 = !DILocation(line: 430, column: 15, scope: !9968)
!9980 = !DILocation(line: 431, column: 46, scope: !9968)
!9981 = !DILocation(line: 431, column: 44, scope: !9968)
!9982 = !DILocation(line: 431, column: 61, scope: !9968)
!9983 = !DILocation(line: 431, column: 53, scope: !9968)
!9984 = !DILocation(line: 431, column: 2, scope: !9968)
!9985 = !DILocation(line: 435, column: 2, scope: !9968)
!9986 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1347, file: !1347, line: 438, type: !1235, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !9987)
!9987 = !{!9988, !9989, !9990, !9991}
!9988 = !DILocalVariable(name: "dev", arg: 1, scope: !9986, file: !1347, line: 438, type: !1205)
!9989 = !DILocalVariable(name: "pins", arg: 2, scope: !9986, file: !1347, line: 439, type: !1232)
!9990 = !DILocalVariable(name: "cfg", scope: !9986, file: !1347, line: 441, type: !9960)
!9991 = !DILocalVariable(name: "gpio", scope: !9986, file: !1347, line: 442, type: !1278)
!9992 = !DILocation(line: 0, scope: !9986)
!9993 = !DILocation(line: 441, column: 45, scope: !9986)
!9994 = !DILocation(line: 442, column: 44, scope: !9986)
!9995 = !DILocation(line: 448, column: 2, scope: !9986)
!9996 = !DILocation(line: 450, column: 2, scope: !9986)
!9997 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1347, file: !1347, line: 453, type: !1235, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !9998)
!9998 = !{!9999, !10000, !10001, !10002}
!9999 = !DILocalVariable(name: "dev", arg: 1, scope: !9997, file: !1347, line: 453, type: !1205)
!10000 = !DILocalVariable(name: "pins", arg: 2, scope: !9997, file: !1347, line: 454, type: !1232)
!10001 = !DILocalVariable(name: "cfg", scope: !9997, file: !1347, line: 456, type: !9960)
!10002 = !DILocalVariable(name: "gpio", scope: !9997, file: !1347, line: 457, type: !1278)
!10003 = !DILocation(line: 0, scope: !9997)
!10004 = !DILocation(line: 456, column: 45, scope: !9997)
!10005 = !DILocation(line: 457, column: 44, scope: !9997)
!10006 = !DILocation(line: 467, column: 2, scope: !9997)
!10007 = !DILocation(line: 470, column: 2, scope: !9997)
!10008 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1347, file: !1347, line: 473, type: !1235, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10009)
!10009 = !{!10010, !10011, !10012, !10013}
!10010 = !DILocalVariable(name: "dev", arg: 1, scope: !10008, file: !1347, line: 473, type: !1205)
!10011 = !DILocalVariable(name: "pins", arg: 2, scope: !10008, file: !1347, line: 474, type: !1232)
!10012 = !DILocalVariable(name: "cfg", scope: !10008, file: !1347, line: 476, type: !9960)
!10013 = !DILocalVariable(name: "gpio", scope: !10008, file: !1347, line: 477, type: !1278)
!10014 = !DILocation(line: 0, scope: !10008)
!10015 = !DILocation(line: 476, column: 45, scope: !10008)
!10016 = !DILocation(line: 477, column: 44, scope: !10008)
!10017 = !DILocation(line: 484, column: 2, scope: !10008)
!10018 = !DILocation(line: 487, column: 2, scope: !10008)
!10019 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1347, file: !1347, line: 594, type: !1241, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10020)
!10020 = !{!10021, !10022, !10023, !10024, !10025, !10026, !10028, !10029, !10030}
!10021 = !DILocalVariable(name: "dev", arg: 1, scope: !10019, file: !1347, line: 594, type: !1205)
!10022 = !DILocalVariable(name: "pin", arg: 2, scope: !10019, file: !1347, line: 595, type: !1220)
!10023 = !DILocalVariable(name: "mode", arg: 3, scope: !10019, file: !1347, line: 596, type: !1179)
!10024 = !DILocalVariable(name: "trig", arg: 4, scope: !10019, file: !1347, line: 597, type: !1185)
!10025 = !DILocalVariable(name: "cfg", scope: !10019, file: !1347, line: 599, type: !9960)
!10026 = !DILocalVariable(name: "data", scope: !10019, file: !1347, line: 600, type: !10027)
!10027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1410, size: 32)
!10028 = !DILocalVariable(name: "edge", scope: !10019, file: !1347, line: 601, type: !107)
!10029 = !DILocalVariable(name: "err", scope: !10019, file: !1347, line: 602, type: !107)
!10030 = !DILabel(scope: !10019, name: "exit", file: !1347, line: 643)
!10031 = !DILocation(line: 0, scope: !10019)
!10032 = !DILocation(line: 599, column: 45, scope: !10019)
!10033 = !DILocation(line: 604, column: 6, scope: !10019)
!10034 = !DILocation(line: 605, column: 34, scope: !10035)
!10035 = distinct !DILexicalBlock(scope: !10036, file: !1347, line: 605, column: 7)
!10036 = distinct !DILexicalBlock(scope: !10037, file: !1347, line: 604, column: 38)
!10037 = distinct !DILexicalBlock(scope: !10019, file: !1347, line: 604, column: 6)
!10038 = !DILocation(line: 605, column: 7, scope: !10035)
!10039 = !DILocation(line: 605, column: 47, scope: !10035)
!10040 = !DILocation(line: 605, column: 39, scope: !10035)
!10041 = !DILocation(line: 605, column: 7, scope: !10036)
!10042 = !DILocation(line: 606, column: 4, scope: !10043)
!10043 = distinct !DILexicalBlock(scope: !10035, file: !1347, line: 605, column: 53)
!10044 = !DILocation(line: 607, column: 4, scope: !10043)
!10045 = !DILocation(line: 608, column: 4, scope: !10043)
!10046 = !DILocation(line: 609, column: 3, scope: !10043)
!10047 = !DILocation(line: 600, column: 38, scope: !10019)
!10048 = !DILocation(line: 620, column: 30, scope: !10049)
!10049 = distinct !DILexicalBlock(scope: !10019, file: !1347, line: 620, column: 6)
!10050 = !DILocation(line: 620, column: 6, scope: !10049)
!10051 = !DILocation(line: 620, column: 57, scope: !10049)
!10052 = !DILocation(line: 620, column: 6, scope: !10019)
!10053 = !DILocation(line: 625, column: 29, scope: !10019)
!10054 = !DILocation(line: 625, column: 2, scope: !10019)
!10055 = !DILocation(line: 627, column: 2, scope: !10019)
!10056 = !DILocation(line: 630, column: 3, scope: !10057)
!10057 = distinct !DILexicalBlock(scope: !10019, file: !1347, line: 627, column: 16)
!10058 = !DILocation(line: 633, column: 3, scope: !10057)
!10059 = !DILocation(line: 636, column: 3, scope: !10057)
!10060 = !DILocation(line: 639, column: 2, scope: !10019)
!10061 = !DILocation(line: 641, column: 2, scope: !10019)
!10062 = !DILocation(line: 643, column: 1, scope: !10019)
!10063 = !DILocation(line: 644, column: 2, scope: !10019)
!10064 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1347, file: !1347, line: 647, type: !1245, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10065)
!10065 = !{!10066, !10067, !10068, !10069}
!10066 = !DILocalVariable(name: "dev", arg: 1, scope: !10064, file: !1347, line: 647, type: !1205)
!10067 = !DILocalVariable(name: "callback", arg: 2, scope: !10064, file: !1347, line: 648, type: !1247)
!10068 = !DILocalVariable(name: "set", arg: 3, scope: !10064, file: !1347, line: 649, type: !145)
!10069 = !DILocalVariable(name: "data", scope: !10064, file: !1347, line: 651, type: !10027)
!10070 = !DILocation(line: 0, scope: !10064)
!10071 = !DILocation(line: 651, column: 38, scope: !10064)
!10072 = !DILocation(line: 653, column: 37, scope: !10064)
!10073 = !DILocation(line: 653, column: 9, scope: !10064)
!10074 = !DILocation(line: 653, column: 2, scope: !10064)
!10075 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !10076, file: !10076, line: 38, type: !10077, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10080)
!10076 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10077 = !DISubroutineType(types: !10078)
!10078 = !{!107, !10079, !1247, !145}
!10079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1416, size: 32)
!10080 = !{!10081, !10082, !10083}
!10081 = !DILocalVariable(name: "callbacks", arg: 1, scope: !10075, file: !10076, line: 38, type: !10079)
!10082 = !DILocalVariable(name: "callback", arg: 2, scope: !10075, file: !10076, line: 39, type: !1247)
!10083 = !DILocalVariable(name: "set", arg: 3, scope: !10075, file: !10076, line: 40, type: !145)
!10084 = !DILocation(line: 0, scope: !10075)
!10085 = !DILocation(line: 42, column: 2, scope: !10086)
!10086 = distinct !DILexicalBlock(scope: !10087, file: !10076, line: 42, column: 2)
!10087 = distinct !DILexicalBlock(scope: !10075, file: !10076, line: 42, column: 2)
!10088 = !DILocation(line: 42, column: 2, scope: !10087)
!10089 = !DILocation(line: 42, column: 2, scope: !10090)
!10090 = distinct !DILexicalBlock(scope: !10086, file: !10076, line: 42, column: 2)
!10091 = !DILocation(line: 43, column: 2, scope: !10092)
!10092 = distinct !DILexicalBlock(scope: !10093, file: !10076, line: 43, column: 2)
!10093 = distinct !DILexicalBlock(scope: !10075, file: !10076, line: 43, column: 2)
!10094 = !DILocation(line: 43, column: 2, scope: !10093)
!10095 = !DILocation(line: 43, column: 2, scope: !10096)
!10096 = distinct !DILexicalBlock(scope: !10092, file: !10076, line: 43, column: 2)
!10097 = !DILocation(line: 45, column: 7, scope: !10098)
!10098 = distinct !DILexicalBlock(scope: !10075, file: !10076, line: 45, column: 6)
!10099 = !DILocation(line: 45, column: 6, scope: !10075)
!10100 = !DILocation(line: 46, column: 56, scope: !10101)
!10101 = distinct !DILexicalBlock(scope: !10102, file: !10076, line: 46, column: 7)
!10102 = distinct !DILexicalBlock(scope: !10098, file: !10076, line: 45, column: 38)
!10103 = !DILocation(line: 46, column: 8, scope: !10101)
!10104 = !DILocation(line: 46, column: 7, scope: !10102)
!10105 = !DILocation(line: 51, column: 13, scope: !10098)
!10106 = !DILocation(line: 56, column: 43, scope: !10107)
!10107 = distinct !DILexicalBlock(scope: !10108, file: !10076, line: 55, column: 11)
!10108 = distinct !DILexicalBlock(scope: !10075, file: !10076, line: 55, column: 6)
!10109 = !DILocation(line: 56, column: 3, scope: !10107)
!10110 = !DILocation(line: 57, column: 2, scope: !10107)
!10111 = !DILocation(line: 60, column: 1, scope: !10075)
!10112 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1252, file: !1252, line: 261, type: !10113, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10115)
!10113 = !DISubroutineType(types: !10114)
!10114 = !{!145, !10079}
!10115 = !{!10116}
!10116 = !DILocalVariable(name: "list", arg: 1, scope: !10112, file: !1252, line: 261, type: !10079)
!10117 = !DILocation(line: 0, scope: !10112)
!10118 = !DILocation(line: 261, column: 1, scope: !10112)
!10119 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1252, file: !1252, line: 417, type: !10120, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10122)
!10120 = !DISubroutineType(types: !10121)
!10121 = !{!145, !10079, !1420}
!10122 = !{!10123, !10124, !10125, !10126}
!10123 = !DILocalVariable(name: "list", arg: 1, scope: !10119, file: !1252, line: 417, type: !10079)
!10124 = !DILocalVariable(name: "node", arg: 2, scope: !10119, file: !1252, line: 417, type: !1420)
!10125 = !DILocalVariable(name: "prev", scope: !10119, file: !1252, line: 417, type: !1420)
!10126 = !DILocalVariable(name: "test", scope: !10119, file: !1252, line: 417, type: !1420)
!10127 = !DILocation(line: 0, scope: !10119)
!10128 = !DILocation(line: 417, column: 1, scope: !10129)
!10129 = distinct !DILexicalBlock(scope: !10119, file: !1252, line: 417, column: 1)
!10130 = !DILocation(line: 417, column: 1, scope: !10131)
!10131 = distinct !DILexicalBlock(scope: !10129, file: !1252, line: 417, column: 1)
!10132 = !DILocation(line: 417, column: 1, scope: !10133)
!10133 = distinct !DILexicalBlock(scope: !10134, file: !1252, line: 417, column: 1)
!10134 = distinct !DILexicalBlock(scope: !10131, file: !1252, line: 417, column: 1)
!10135 = !DILocation(line: 417, column: 1, scope: !10134)
!10136 = distinct !{!10136, !10128, !10128}
!10137 = !DILocation(line: 417, column: 1, scope: !10138)
!10138 = distinct !DILexicalBlock(scope: !10133, file: !1252, line: 417, column: 1)
!10139 = !DILocation(line: 417, column: 1, scope: !10119)
!10140 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1252, file: !1252, line: 298, type: !10141, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10143)
!10141 = !DISubroutineType(types: !10142)
!10142 = !{null, !10079, !1420}
!10143 = !{!10144, !10145}
!10144 = !DILocalVariable(name: "list", arg: 1, scope: !10140, file: !1252, line: 298, type: !10079)
!10145 = !DILocalVariable(name: "node", arg: 2, scope: !10140, file: !1252, line: 298, type: !1420)
!10146 = !DILocation(line: 0, scope: !10140)
!10147 = !DILocation(line: 298, column: 1, scope: !10140)
!10148 = !DILocation(line: 298, column: 1, scope: !10149)
!10149 = distinct !DILexicalBlock(scope: !10140, file: !1252, line: 298, column: 1)
!10150 = !DILocation(line: 298, column: 1, scope: !10151)
!10151 = distinct !DILexicalBlock(scope: !10149, file: !1252, line: 298, column: 1)
!10152 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1252, file: !1252, line: 231, type: !10153, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10155)
!10153 = !DISubroutineType(types: !10154)
!10154 = !{!1420, !10079}
!10155 = !{!10156}
!10156 = !DILocalVariable(name: "list", arg: 1, scope: !10152, file: !1252, line: 231, type: !10079)
!10157 = !DILocation(line: 0, scope: !10152)
!10158 = !DILocation(line: 233, column: 15, scope: !10152)
!10159 = !DILocation(line: 233, column: 2, scope: !10152)
!10160 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1252, file: !1252, line: 209, type: !10161, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10163)
!10161 = !DISubroutineType(types: !10162)
!10162 = !{null, !1420, !1420}
!10163 = !{!10164, !10165}
!10164 = !DILocalVariable(name: "parent", arg: 1, scope: !10160, file: !1252, line: 209, type: !1420)
!10165 = !DILocalVariable(name: "child", arg: 2, scope: !10160, file: !1252, line: 209, type: !1420)
!10166 = !DILocation(line: 0, scope: !10160)
!10167 = !DILocation(line: 211, column: 10, scope: !10160)
!10168 = !DILocation(line: 211, column: 15, scope: !10160)
!10169 = !DILocation(line: 212, column: 1, scope: !10160)
!10170 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1252, file: !1252, line: 214, type: !10141, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10171)
!10171 = !{!10172, !10173}
!10172 = !DILocalVariable(name: "list", arg: 1, scope: !10170, file: !1252, line: 214, type: !10079)
!10173 = !DILocalVariable(name: "node", arg: 2, scope: !10170, file: !1252, line: 214, type: !1420)
!10174 = !DILocation(line: 0, scope: !10170)
!10175 = !DILocation(line: 216, column: 8, scope: !10170)
!10176 = !DILocation(line: 216, column: 13, scope: !10170)
!10177 = !DILocation(line: 217, column: 1, scope: !10170)
!10178 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1252, file: !1252, line: 243, type: !10153, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10179)
!10179 = !{!10180}
!10180 = !DILocalVariable(name: "list", arg: 1, scope: !10178, file: !1252, line: 243, type: !10079)
!10181 = !DILocation(line: 0, scope: !10178)
!10182 = !DILocation(line: 245, column: 15, scope: !10178)
!10183 = !DILocation(line: 245, column: 2, scope: !10178)
!10184 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1252, file: !1252, line: 219, type: !10141, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10185)
!10185 = !{!10186, !10187}
!10186 = !DILocalVariable(name: "list", arg: 1, scope: !10184, file: !1252, line: 219, type: !10079)
!10187 = !DILocalVariable(name: "node", arg: 2, scope: !10184, file: !1252, line: 219, type: !1420)
!10188 = !DILocation(line: 0, scope: !10184)
!10189 = !DILocation(line: 221, column: 8, scope: !10184)
!10190 = !DILocation(line: 221, column: 13, scope: !10184)
!10191 = !DILocation(line: 222, column: 1, scope: !10184)
!10192 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1252, file: !1252, line: 401, type: !10193, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10195)
!10193 = !DISubroutineType(types: !10194)
!10194 = !{null, !10079, !1420, !1420}
!10195 = !{!10196, !10197, !10198}
!10196 = !DILocalVariable(name: "list", arg: 1, scope: !10192, file: !1252, line: 401, type: !10079)
!10197 = !DILocalVariable(name: "prev_node", arg: 2, scope: !10192, file: !1252, line: 401, type: !1420)
!10198 = !DILocalVariable(name: "node", arg: 3, scope: !10192, file: !1252, line: 401, type: !1420)
!10199 = !DILocation(line: 0, scope: !10192)
!10200 = !DILocation(line: 401, column: 1, scope: !10201)
!10201 = distinct !DILexicalBlock(scope: !10192, file: !1252, line: 401, column: 1)
!10202 = !DILocation(line: 0, scope: !10201)
!10203 = !DILocation(line: 401, column: 1, scope: !10192)
!10204 = !DILocation(line: 401, column: 1, scope: !10205)
!10205 = distinct !DILexicalBlock(scope: !10201, file: !1252, line: 401, column: 1)
!10206 = !DILocation(line: 401, column: 1, scope: !10207)
!10207 = distinct !DILexicalBlock(scope: !10205, file: !1252, line: 401, column: 1)
!10208 = !DILocation(line: 401, column: 1, scope: !10209)
!10209 = distinct !DILexicalBlock(scope: !10207, file: !1252, line: 401, column: 1)
!10210 = !DILocation(line: 401, column: 1, scope: !10211)
!10211 = distinct !DILexicalBlock(scope: !10201, file: !1252, line: 401, column: 1)
!10212 = !DILocation(line: 401, column: 1, scope: !10213)
!10213 = distinct !DILexicalBlock(scope: !10211, file: !1252, line: 401, column: 1)
!10214 = !DILocation(line: 401, column: 1, scope: !10215)
!10215 = distinct !DILexicalBlock(scope: !10213, file: !1252, line: 401, column: 1)
!10216 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1252, file: !1252, line: 285, type: !10217, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10219)
!10217 = !DISubroutineType(types: !10218)
!10218 = !{!1420, !1420}
!10219 = !{!10220}
!10220 = !DILocalVariable(name: "node", arg: 1, scope: !10216, file: !1252, line: 285, type: !1420)
!10221 = !DILocation(line: 0, scope: !10216)
!10222 = !DILocation(line: 285, column: 1, scope: !10216)
!10223 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1252, file: !1252, line: 274, type: !10217, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10224)
!10224 = !{!10225}
!10225 = !DILocalVariable(name: "node", arg: 1, scope: !10223, file: !1252, line: 274, type: !1420)
!10226 = !DILocation(line: 0, scope: !10223)
!10227 = !DILocation(line: 274, column: 1, scope: !10223)
!10228 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1252, file: !1252, line: 204, type: !10217, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10229)
!10229 = !{!10230}
!10230 = !DILocalVariable(name: "node", arg: 1, scope: !10228, file: !1252, line: 204, type: !1420)
!10231 = !DILocation(line: 0, scope: !10228)
!10232 = !DILocation(line: 206, column: 15, scope: !10228)
!10233 = !DILocation(line: 206, column: 2, scope: !10228)
!10234 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1347, file: !1347, line: 342, type: !214, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10235)
!10235 = !{!10236, !10237, !10238}
!10236 = !DILocalVariable(name: "pin", arg: 1, scope: !10234, file: !1347, line: 342, type: !107)
!10237 = !DILocalVariable(name: "line", scope: !10234, file: !1347, line: 344, type: !152)
!10238 = !DILocalVariable(name: "port", scope: !10234, file: !1347, line: 345, type: !107)
!10239 = !DILocation(line: 0, scope: !10234)
!10240 = !DILocation(line: 344, column: 18, scope: !10234)
!10241 = !{i32 983040, i32 0}
!10242 = !DILocation(line: 356, column: 9, scope: !10234)
!10243 = !DILocation(line: 370, column: 2, scope: !10234)
!10244 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1347, file: !1347, line: 37, type: !887, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10245)
!10245 = !{!10246, !10247, !10248}
!10246 = !DILocalVariable(name: "line", arg: 1, scope: !10244, file: !1347, line: 37, type: !107)
!10247 = !DILocalVariable(name: "arg", arg: 2, scope: !10244, file: !1347, line: 37, type: !106)
!10248 = !DILocalVariable(name: "data", scope: !10244, file: !1347, line: 39, type: !10027)
!10249 = !DILocation(line: 0, scope: !10244)
!10250 = !DILocation(line: 41, column: 29, scope: !10244)
!10251 = !DILocation(line: 41, column: 39, scope: !10244)
!10252 = !DILocation(line: 41, column: 44, scope: !10244)
!10253 = !DILocation(line: 41, column: 2, scope: !10244)
!10254 = !DILocation(line: 42, column: 1, scope: !10244)
!10255 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1347, file: !1347, line: 376, type: !10256, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10258)
!10256 = !DISubroutineType(types: !10257)
!10257 = !{!107, !107, !107}
!10258 = !{!10259, !10260, !10261, !10263, !10264}
!10259 = !DILocalVariable(name: "port", arg: 1, scope: !10255, file: !1347, line: 376, type: !107)
!10260 = !DILocalVariable(name: "pin", arg: 2, scope: !10255, file: !1347, line: 376, type: !107)
!10261 = !DILocalVariable(name: "clk", scope: !10255, file: !1347, line: 386, type: !10262)
!10262 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1205)
!10263 = !DILocalVariable(name: "pclken", scope: !10255, file: !1347, line: 387, type: !1463)
!10264 = !DILocalVariable(name: "ret", scope: !10255, file: !1347, line: 396, type: !107)
!10265 = !DILocation(line: 0, scope: !10255)
!10266 = !DILocation(line: 387, column: 2, scope: !10255)
!10267 = !DILocation(line: 387, column: 22, scope: !10255)
!10268 = !DILocation(line: 399, column: 8, scope: !10255)
!10269 = !DILocation(line: 400, column: 10, scope: !10270)
!10270 = distinct !DILexicalBlock(scope: !10255, file: !1347, line: 400, column: 6)
!10271 = !DILocation(line: 400, column: 6, scope: !10255)
!10272 = !DILocation(line: 405, column: 2, scope: !10255)
!10273 = !DILocation(line: 407, column: 2, scope: !10255)
!10274 = !DILocation(line: 408, column: 1, scope: !10255)
!10275 = distinct !DISubprogram(name: "clock_control_on", scope: !980, file: !980, line: 123, type: !1312, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10276)
!10276 = !{!10277, !10278, !10279}
!10277 = !DILocalVariable(name: "dev", arg: 1, scope: !10275, file: !980, line: 123, type: !1205)
!10278 = !DILocalVariable(name: "sys", arg: 2, scope: !10275, file: !980, line: 124, type: !1076)
!10279 = !DILocalVariable(name: "api", scope: !10275, file: !980, line: 126, type: !1305)
!10280 = !DILocation(line: 0, scope: !10275)
!10281 = !DILocation(line: 127, column: 49, scope: !10275)
!10282 = !DILocation(line: 129, column: 14, scope: !10275)
!10283 = !DILocation(line: 129, column: 9, scope: !10275)
!10284 = !DILocation(line: 129, column: 2, scope: !10275)
!10285 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1347, file: !1347, line: 311, type: !9389, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10286)
!10286 = !{!10287, !10288, !10289}
!10287 = !DILocalVariable(name: "port", arg: 1, scope: !10285, file: !1347, line: 311, type: !107)
!10288 = !DILocalVariable(name: "pin", arg: 2, scope: !10285, file: !1347, line: 311, type: !107)
!10289 = !DILocalVariable(name: "line", scope: !10285, file: !1347, line: 313, type: !152)
!10290 = !DILocation(line: 0, scope: !10285)
!10291 = !DILocation(line: 313, column: 18, scope: !10285)
!10292 = !DILocation(line: 337, column: 2, scope: !10285)
!10293 = !DILocation(line: 340, column: 1, scope: !10285)
!10294 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1347, file: !1347, line: 295, type: !10295, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10297)
!10295 = !DISubroutineType(types: !10296)
!10296 = !{!152, !107}
!10297 = !{!10298}
!10298 = !DILocalVariable(name: "pin", arg: 1, scope: !10294, file: !1347, line: 295, type: !107)
!10299 = !DILocation(line: 0, scope: !10294)
!10300 = !DILocation(line: 307, column: 46, scope: !10294)
!10301 = !DILocation(line: 307, column: 27, scope: !10294)
!10302 = !DILocation(line: 307, column: 32, scope: !10294)
!10303 = !DILocation(line: 307, column: 14, scope: !10294)
!10304 = !DILocation(line: 307, column: 39, scope: !10294)
!10305 = !DILocation(line: 307, column: 2, scope: !10294)
!10306 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !6020, file: !6020, line: 671, type: !10307, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10309)
!10307 = !DISubroutineType(types: !10308)
!10308 = !{null, !152, !152}
!10309 = !{!10310, !10311}
!10310 = !DILocalVariable(name: "Port", arg: 1, scope: !10306, file: !6020, line: 671, type: !152)
!10311 = !DILocalVariable(name: "Line", arg: 2, scope: !10306, file: !6020, line: 671, type: !152)
!10312 = !DILocation(line: 0, scope: !10306)
!10313 = !DILocation(line: 673, column: 3, scope: !10306)
!10314 = !DILocalVariable(name: "value", arg: 1, scope: !10315, file: !6318, line: 373, type: !152)
!10315 = distinct !DISubprogram(name: "__RBIT", scope: !6318, file: !6318, line: 373, type: !7605, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10316)
!10316 = !{!10314, !10317}
!10317 = !DILocalVariable(name: "result", scope: !10315, file: !6318, line: 375, type: !152)
!10318 = !DILocation(line: 0, scope: !10315, inlinedAt: !10319)
!10319 = distinct !DILocation(line: 673, column: 3, scope: !10306)
!10320 = !DILocation(line: 380, column: 4, scope: !10315, inlinedAt: !10319)
!10321 = !{i64 3735117}
!10322 = !DILocalVariable(name: "value", arg: 1, scope: !10323, file: !6318, line: 403, type: !152)
!10323 = distinct !DISubprogram(name: "__CLZ", scope: !6318, file: !6318, line: 403, type: !10324, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10326)
!10324 = !DISubroutineType(types: !10325)
!10325 = !{!195, !152}
!10326 = !{!10322}
!10327 = !DILocation(line: 0, scope: !10323, inlinedAt: !10328)
!10328 = distinct !DILocation(line: 673, column: 3, scope: !10306)
!10329 = !DILocation(line: 414, column: 7, scope: !10323, inlinedAt: !10328)
!10330 = !DILocation(line: 674, column: 1, scope: !10306)
!10331 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !10076, file: !10076, line: 69, type: !10332, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10334)
!10332 = !DISubroutineType(types: !10333)
!10333 = !{null, !10079, !1205, !152}
!10334 = !{!10335, !10336, !10337, !10338, !10339}
!10335 = !DILocalVariable(name: "list", arg: 1, scope: !10331, file: !10076, line: 69, type: !10079)
!10336 = !DILocalVariable(name: "port", arg: 2, scope: !10331, file: !10076, line: 70, type: !1205)
!10337 = !DILocalVariable(name: "pins", arg: 3, scope: !10331, file: !10076, line: 71, type: !152)
!10338 = !DILocalVariable(name: "cb", scope: !10331, file: !10076, line: 73, type: !1247)
!10339 = !DILocalVariable(name: "tmp", scope: !10331, file: !10076, line: 73, type: !1247)
!10340 = !DILocation(line: 0, scope: !10331)
!10341 = !DILocation(line: 75, column: 2, scope: !10342)
!10342 = distinct !DILexicalBlock(scope: !10331, file: !10076, line: 75, column: 2)
!10343 = !DILocation(line: 0, scope: !10342)
!10344 = !DILocation(line: 76, column: 11, scope: !10345)
!10345 = distinct !DILexicalBlock(scope: !10346, file: !10076, line: 76, column: 7)
!10346 = distinct !DILexicalBlock(scope: !10347, file: !10076, line: 75, column: 57)
!10347 = distinct !DILexicalBlock(scope: !10342, file: !10076, line: 75, column: 2)
!10348 = !DILocation(line: 76, column: 20, scope: !10345)
!10349 = !DILocation(line: 76, column: 7, scope: !10346)
!10350 = !DILocation(line: 77, column: 4, scope: !10351)
!10351 = distinct !DILexicalBlock(scope: !10352, file: !10076, line: 77, column: 4)
!10352 = distinct !DILexicalBlock(scope: !10353, file: !10076, line: 77, column: 4)
!10353 = distinct !DILexicalBlock(scope: !10345, file: !10076, line: 76, column: 28)
!10354 = !DILocation(line: 77, column: 4, scope: !10352)
!10355 = !DILocation(line: 77, column: 4, scope: !10356)
!10356 = distinct !DILexicalBlock(scope: !10351, file: !10076, line: 77, column: 4)
!10357 = !DILocation(line: 78, column: 4, scope: !10353)
!10358 = !DILocation(line: 79, column: 3, scope: !10353)
!10359 = !DILocation(line: 75, column: 2, scope: !10347)
!10360 = !DILocation(line: 81, column: 1, scope: !10331)
!10361 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !6020, file: !6020, line: 710, type: !7605, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10362)
!10362 = !{!10363}
!10363 = !DILocalVariable(name: "Line", arg: 1, scope: !10361, file: !6020, line: 710, type: !152)
!10364 = !DILocation(line: 0, scope: !10361)
!10365 = !DILocation(line: 712, column: 21, scope: !10361)
!10366 = !DILocation(line: 0, scope: !10315, inlinedAt: !10367)
!10367 = distinct !DILocation(line: 712, column: 76, scope: !10361)
!10368 = !DILocation(line: 380, column: 4, scope: !10315, inlinedAt: !10367)
!10369 = !DILocation(line: 0, scope: !10323, inlinedAt: !10370)
!10370 = distinct !DILocation(line: 712, column: 76, scope: !10361)
!10371 = !DILocation(line: 414, column: 7, scope: !10323, inlinedAt: !10370)
!10372 = !DILocation(line: 712, column: 73, scope: !10361)
!10373 = !DILocation(line: 712, column: 3, scope: !10361)
!10374 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !10375, file: !10375, line: 910, type: !10376, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10378)
!10375 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10376 = !DISubroutineType(types: !10377)
!10377 = !{null, !1278, !152}
!10378 = !{!10379, !10380}
!10379 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10374, file: !10375, line: 910, type: !1278)
!10380 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10374, file: !10375, line: 910, type: !152)
!10381 = !DILocation(line: 0, scope: !10374)
!10382 = !DILocation(line: 912, column: 3, scope: !10374)
!10383 = !DILocation(line: 913, column: 1, scope: !10374)
!10384 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !10375, file: !10375, line: 823, type: !10385, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10387)
!10385 = !DISubroutineType(types: !10386)
!10386 = !{!152, !1278}
!10387 = !{!10388}
!10388 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10384, file: !10375, line: 823, type: !1278)
!10389 = !DILocation(line: 0, scope: !10384)
!10390 = !DILocation(line: 825, column: 21, scope: !10384)
!10391 = !DILocation(line: 825, column: 3, scope: !10384)
!10392 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !10375, file: !10375, line: 812, type: !10376, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10393)
!10393 = !{!10394, !10395}
!10394 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10392, file: !10375, line: 812, type: !1278)
!10395 = !DILocalVariable(name: "PortValue", arg: 2, scope: !10392, file: !10375, line: 812, type: !152)
!10396 = !DILocation(line: 0, scope: !10392)
!10397 = !DILocation(line: 814, column: 3, scope: !10392)
!10398 = !DILocation(line: 815, column: 1, scope: !10392)
!10399 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !10375, file: !10375, line: 771, type: !10385, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10400)
!10400 = !{!10401}
!10401 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10399, file: !10375, line: 771, type: !1278)
!10402 = !DILocation(line: 0, scope: !10399)
!10403 = !DILocation(line: 773, column: 21, scope: !10399)
!10404 = !DILocation(line: 773, column: 3, scope: !10399)
!10405 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1347, file: !1347, line: 47, type: !10406, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10408)
!10406 = !DISubroutineType(types: !10407)
!10407 = !{!107, !1221, !187}
!10408 = !{!10409, !10410}
!10409 = !DILocalVariable(name: "flags", arg: 1, scope: !10405, file: !1347, line: 47, type: !1221)
!10410 = !DILocalVariable(name: "pincfg", arg: 2, scope: !10405, file: !1347, line: 47, type: !187)
!10411 = !DILocation(line: 0, scope: !10405)
!10412 = !DILocation(line: 50, column: 13, scope: !10413)
!10413 = distinct !DILexicalBlock(scope: !10405, file: !1347, line: 50, column: 6)
!10414 = !DILocation(line: 50, column: 28, scope: !10413)
!10415 = !DILocation(line: 50, column: 6, scope: !10405)
!10416 = !DILocation(line: 53, column: 11, scope: !10417)
!10417 = distinct !DILexicalBlock(scope: !10413, file: !1347, line: 50, column: 34)
!10418 = !DILocation(line: 55, column: 14, scope: !10419)
!10419 = distinct !DILexicalBlock(scope: !10417, file: !1347, line: 55, column: 7)
!10420 = !DILocation(line: 55, column: 35, scope: !10419)
!10421 = !DILocation(line: 55, column: 7, scope: !10417)
!10422 = !DILocation(line: 56, column: 14, scope: !10423)
!10423 = distinct !DILexicalBlock(scope: !10424, file: !1347, line: 56, column: 8)
!10424 = distinct !DILexicalBlock(scope: !10419, file: !1347, line: 55, column: 41)
!10425 = !DILocation(line: 56, column: 8, scope: !10424)
!10426 = !DILocation(line: 0, scope: !10419)
!10427 = !DILocation(line: 66, column: 14, scope: !10428)
!10428 = distinct !DILexicalBlock(scope: !10417, file: !1347, line: 66, column: 7)
!10429 = !DILocation(line: 66, column: 30, scope: !10428)
!10430 = !DILocation(line: 66, column: 7, scope: !10417)
!10431 = !DILocation(line: 67, column: 12, scope: !10432)
!10432 = distinct !DILexicalBlock(scope: !10428, file: !1347, line: 66, column: 36)
!10433 = !DILocation(line: 68, column: 3, scope: !10432)
!10434 = !DILocation(line: 68, column: 21, scope: !10435)
!10435 = distinct !DILexicalBlock(scope: !10428, file: !1347, line: 68, column: 14)
!10436 = !DILocation(line: 68, column: 39, scope: !10435)
!10437 = !DILocation(line: 68, column: 14, scope: !10428)
!10438 = !DILocation(line: 69, column: 12, scope: !10439)
!10439 = distinct !DILexicalBlock(scope: !10435, file: !1347, line: 68, column: 45)
!10440 = !DILocation(line: 70, column: 3, scope: !10439)
!10441 = !DILocation(line: 72, column: 21, scope: !10442)
!10442 = distinct !DILexicalBlock(scope: !10413, file: !1347, line: 72, column: 14)
!10443 = !DILocation(line: 72, column: 35, scope: !10442)
!10444 = !DILocation(line: 72, column: 14, scope: !10413)
!10445 = !DILocation(line: 77, column: 14, scope: !10446)
!10446 = distinct !DILexicalBlock(scope: !10447, file: !1347, line: 77, column: 7)
!10447 = distinct !DILexicalBlock(scope: !10442, file: !1347, line: 72, column: 41)
!10448 = !DILocation(line: 77, column: 30, scope: !10446)
!10449 = !DILocation(line: 77, column: 7, scope: !10447)
!10450 = !DILocation(line: 0, scope: !10413)
!10451 = !DILocation(line: 90, column: 1, scope: !10405)
!10452 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1347, file: !1347, line: 157, type: !10453, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10455)
!10453 = !DISubroutineType(types: !10454)
!10454 = !{null, !1205, !107, !107, !107}
!10455 = !{!10456, !10457, !10458, !10459, !10460, !10461, !10462, !10463, !10464, !10465, !10466}
!10456 = !DILocalVariable(name: "dev", arg: 1, scope: !10452, file: !1347, line: 157, type: !1205)
!10457 = !DILocalVariable(name: "pin", arg: 2, scope: !10452, file: !1347, line: 157, type: !107)
!10458 = !DILocalVariable(name: "conf", arg: 3, scope: !10452, file: !1347, line: 158, type: !107)
!10459 = !DILocalVariable(name: "func", arg: 4, scope: !10452, file: !1347, line: 158, type: !107)
!10460 = !DILocalVariable(name: "cfg", scope: !10452, file: !1347, line: 160, type: !9960)
!10461 = !DILocalVariable(name: "gpio", scope: !10452, file: !1347, line: 161, type: !1278)
!10462 = !DILocalVariable(name: "pin_ll", scope: !10452, file: !1347, line: 163, type: !107)
!10463 = !DILocalVariable(name: "mode", scope: !10452, file: !1347, line: 227, type: !32)
!10464 = !DILocalVariable(name: "otype", scope: !10452, file: !1347, line: 227, type: !32)
!10465 = !DILocalVariable(name: "ospeed", scope: !10452, file: !1347, line: 227, type: !32)
!10466 = !DILocalVariable(name: "pupd", scope: !10452, file: !1347, line: 227, type: !32)
!10467 = !DILocation(line: 0, scope: !10452)
!10468 = !DILocation(line: 160, column: 45, scope: !10452)
!10469 = !DILocation(line: 161, column: 44, scope: !10452)
!10470 = !DILocation(line: 163, column: 15, scope: !10452)
!10471 = !DILocation(line: 229, column: 14, scope: !10452)
!10472 = !DILocation(line: 246, column: 47, scope: !10452)
!10473 = !DILocation(line: 246, column: 2, scope: !10452)
!10474 = !DILocation(line: 248, column: 43, scope: !10452)
!10475 = !DILocation(line: 248, column: 2, scope: !10452)
!10476 = !DILocation(line: 250, column: 40, scope: !10452)
!10477 = !DILocation(line: 250, column: 2, scope: !10452)
!10478 = !DILocation(line: 252, column: 11, scope: !10479)
!10479 = distinct !DILexicalBlock(scope: !10452, file: !1347, line: 252, column: 6)
!10480 = !DILocation(line: 252, column: 6, scope: !10452)
!10481 = !DILocation(line: 253, column: 11, scope: !10482)
!10482 = distinct !DILexicalBlock(scope: !10483, file: !1347, line: 253, column: 7)
!10483 = distinct !DILexicalBlock(scope: !10479, file: !1347, line: 252, column: 36)
!10484 = !DILocation(line: 253, column: 7, scope: !10483)
!10485 = !DILocation(line: 254, column: 4, scope: !10486)
!10486 = distinct !DILexicalBlock(scope: !10482, file: !1347, line: 253, column: 16)
!10487 = !DILocation(line: 255, column: 3, scope: !10486)
!10488 = !DILocation(line: 256, column: 4, scope: !10489)
!10489 = distinct !DILexicalBlock(scope: !10482, file: !1347, line: 255, column: 10)
!10490 = !DILocation(line: 260, column: 40, scope: !10452)
!10491 = !DILocation(line: 260, column: 2, scope: !10452)
!10492 = !DILocation(line: 265, column: 1, scope: !10452)
!10493 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1347, file: !1347, line: 137, type: !10295, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10494)
!10494 = !{!10495, !10496}
!10495 = !DILocalVariable(name: "pin", arg: 1, scope: !10493, file: !1347, line: 137, type: !107)
!10496 = !DILocalVariable(name: "pinval", scope: !10493, file: !1347, line: 139, type: !152)
!10497 = !DILocation(line: 0, scope: !10493)
!10498 = !DILocation(line: 149, column: 13, scope: !10493)
!10499 = !DILocation(line: 151, column: 2, scope: !10493)
!10500 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !10375, file: !10375, line: 342, type: !10501, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10503)
!10501 = !DISubroutineType(types: !10502)
!10502 = !{null, !1278, !152, !152}
!10503 = !{!10504, !10505, !10506}
!10504 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10500, file: !10375, line: 342, type: !1278)
!10505 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10500, file: !10375, line: 342, type: !152)
!10506 = !DILocalVariable(name: "OutputType", arg: 3, scope: !10500, file: !10375, line: 342, type: !152)
!10507 = !DILocation(line: 0, scope: !10500)
!10508 = !DILocation(line: 344, column: 3, scope: !10500)
!10509 = !DILocation(line: 345, column: 1, scope: !10500)
!10510 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !10375, file: !10375, line: 413, type: !10501, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10511)
!10511 = !{!10512, !10513, !10514}
!10512 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10510, file: !10375, line: 413, type: !1278)
!10513 = !DILocalVariable(name: "Pin", arg: 2, scope: !10510, file: !10375, line: 413, type: !152)
!10514 = !DILocalVariable(name: "Speed", arg: 3, scope: !10510, file: !10375, line: 413, type: !152)
!10515 = !DILocation(line: 0, scope: !10510)
!10516 = !DILocation(line: 415, column: 3, scope: !10510)
!10517 = !DILocation(line: 0, scope: !10315, inlinedAt: !10518)
!10518 = distinct !DILocation(line: 415, column: 3, scope: !10510)
!10519 = !DILocation(line: 380, column: 4, scope: !10315, inlinedAt: !10518)
!10520 = !DILocation(line: 0, scope: !10323, inlinedAt: !10521)
!10521 = distinct !DILocation(line: 415, column: 3, scope: !10510)
!10522 = !DILocation(line: 414, column: 7, scope: !10323, inlinedAt: !10521)
!10523 = !DILocation(line: 0, scope: !10315, inlinedAt: !10524)
!10524 = distinct !DILocation(line: 415, column: 3, scope: !10510)
!10525 = !DILocation(line: 0, scope: !10323, inlinedAt: !10526)
!10526 = distinct !DILocation(line: 415, column: 3, scope: !10510)
!10527 = !DILocation(line: 417, column: 1, scope: !10510)
!10528 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !10375, file: !10375, line: 484, type: !10501, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10529)
!10529 = !{!10530, !10531, !10532}
!10530 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10528, file: !10375, line: 484, type: !1278)
!10531 = !DILocalVariable(name: "Pin", arg: 2, scope: !10528, file: !10375, line: 484, type: !152)
!10532 = !DILocalVariable(name: "Pull", arg: 3, scope: !10528, file: !10375, line: 484, type: !152)
!10533 = !DILocation(line: 0, scope: !10528)
!10534 = !DILocation(line: 486, column: 3, scope: !10528)
!10535 = !DILocation(line: 0, scope: !10315, inlinedAt: !10536)
!10536 = distinct !DILocation(line: 486, column: 3, scope: !10528)
!10537 = !DILocation(line: 380, column: 4, scope: !10315, inlinedAt: !10536)
!10538 = !DILocation(line: 0, scope: !10323, inlinedAt: !10539)
!10539 = distinct !DILocation(line: 486, column: 3, scope: !10528)
!10540 = !DILocation(line: 414, column: 7, scope: !10323, inlinedAt: !10539)
!10541 = !DILocation(line: 0, scope: !10315, inlinedAt: !10542)
!10542 = distinct !DILocation(line: 486, column: 3, scope: !10528)
!10543 = !DILocation(line: 0, scope: !10323, inlinedAt: !10544)
!10544 = distinct !DILocation(line: 486, column: 3, scope: !10528)
!10545 = !DILocation(line: 487, column: 1, scope: !10528)
!10546 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !10375, file: !10375, line: 556, type: !10501, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10547)
!10547 = !{!10548, !10549, !10550}
!10548 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10546, file: !10375, line: 556, type: !1278)
!10549 = !DILocalVariable(name: "Pin", arg: 2, scope: !10546, file: !10375, line: 556, type: !152)
!10550 = !DILocalVariable(name: "Alternate", arg: 3, scope: !10546, file: !10375, line: 556, type: !152)
!10551 = !DILocation(line: 0, scope: !10546)
!10552 = !DILocation(line: 558, column: 3, scope: !10546)
!10553 = !DILocation(line: 0, scope: !10315, inlinedAt: !10554)
!10554 = distinct !DILocation(line: 558, column: 3, scope: !10546)
!10555 = !DILocation(line: 380, column: 4, scope: !10315, inlinedAt: !10554)
!10556 = !DILocation(line: 0, scope: !10323, inlinedAt: !10557)
!10557 = distinct !DILocation(line: 558, column: 3, scope: !10546)
!10558 = !DILocation(line: 414, column: 7, scope: !10323, inlinedAt: !10557)
!10559 = !DILocation(line: 0, scope: !10315, inlinedAt: !10560)
!10560 = distinct !DILocation(line: 558, column: 3, scope: !10546)
!10561 = !DILocation(line: 0, scope: !10323, inlinedAt: !10562)
!10562 = distinct !DILocation(line: 558, column: 3, scope: !10546)
!10563 = !DILocation(line: 560, column: 1, scope: !10546)
!10564 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !10375, file: !10375, line: 633, type: !10501, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10565)
!10565 = !{!10566, !10567, !10568}
!10566 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10564, file: !10375, line: 633, type: !1278)
!10567 = !DILocalVariable(name: "Pin", arg: 2, scope: !10564, file: !10375, line: 633, type: !152)
!10568 = !DILocalVariable(name: "Alternate", arg: 3, scope: !10564, file: !10375, line: 633, type: !152)
!10569 = !DILocation(line: 0, scope: !10564)
!10570 = !DILocation(line: 635, column: 3, scope: !10564)
!10571 = !DILocation(line: 0, scope: !10315, inlinedAt: !10572)
!10572 = distinct !DILocation(line: 635, column: 3, scope: !10564)
!10573 = !DILocation(line: 380, column: 4, scope: !10315, inlinedAt: !10572)
!10574 = !DILocation(line: 0, scope: !10323, inlinedAt: !10575)
!10575 = distinct !DILocation(line: 635, column: 3, scope: !10564)
!10576 = !DILocation(line: 414, column: 7, scope: !10323, inlinedAt: !10575)
!10577 = !DILocation(line: 0, scope: !10315, inlinedAt: !10578)
!10578 = distinct !DILocation(line: 635, column: 3, scope: !10564)
!10579 = !DILocation(line: 0, scope: !10323, inlinedAt: !10580)
!10580 = distinct !DILocation(line: 635, column: 3, scope: !10564)
!10581 = !DILocation(line: 637, column: 1, scope: !10564)
!10582 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !10375, file: !10375, line: 273, type: !10501, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10583)
!10583 = !{!10584, !10585, !10586}
!10584 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10582, file: !10375, line: 273, type: !1278)
!10585 = !DILocalVariable(name: "Pin", arg: 2, scope: !10582, file: !10375, line: 273, type: !152)
!10586 = !DILocalVariable(name: "Mode", arg: 3, scope: !10582, file: !10375, line: 273, type: !152)
!10587 = !DILocation(line: 0, scope: !10582)
!10588 = !DILocation(line: 275, column: 3, scope: !10582)
!10589 = !DILocation(line: 0, scope: !10315, inlinedAt: !10590)
!10590 = distinct !DILocation(line: 275, column: 3, scope: !10582)
!10591 = !DILocation(line: 380, column: 4, scope: !10315, inlinedAt: !10590)
!10592 = !DILocation(line: 0, scope: !10323, inlinedAt: !10593)
!10593 = distinct !DILocation(line: 275, column: 3, scope: !10582)
!10594 = !DILocation(line: 414, column: 7, scope: !10323, inlinedAt: !10593)
!10595 = !DILocation(line: 0, scope: !10315, inlinedAt: !10596)
!10596 = distinct !DILocation(line: 275, column: 3, scope: !10582)
!10597 = !DILocation(line: 0, scope: !10323, inlinedAt: !10598)
!10598 = distinct !DILocation(line: 275, column: 3, scope: !10582)
!10599 = !DILocation(line: 276, column: 1, scope: !10582)
!10600 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1347, file: !1347, line: 698, type: !1360, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10601)
!10601 = !{!10602, !10603, !10604}
!10602 = !DILocalVariable(name: "dev", arg: 1, scope: !10600, file: !1347, line: 698, type: !1205)
!10603 = !DILocalVariable(name: "data", scope: !10600, file: !1347, line: 700, type: !10027)
!10604 = !DILocalVariable(name: "ret", scope: !10600, file: !1347, line: 701, type: !107)
!10605 = !DILocation(line: 0, scope: !10600)
!10606 = !DILocation(line: 700, column: 38, scope: !10600)
!10607 = !DILocation(line: 703, column: 8, scope: !10600)
!10608 = !DILocation(line: 703, column: 12, scope: !10600)
!10609 = !DILocation(line: 705, column: 7, scope: !10610)
!10610 = distinct !DILexicalBlock(scope: !10600, file: !1347, line: 705, column: 6)
!10611 = !DILocation(line: 705, column: 6, scope: !10600)
!10612 = !DILocation(line: 722, column: 8, scope: !10600)
!10613 = !DILocation(line: 723, column: 10, scope: !10614)
!10614 = distinct !DILexicalBlock(scope: !10600, file: !1347, line: 723, column: 6)
!10615 = !DILocation(line: 723, column: 6, scope: !10600)
!10616 = !DILocation(line: 731, column: 1, scope: !10600)
!10617 = distinct !DISubprogram(name: "device_is_ready", scope: !9805, file: !9805, line: 47, type: !10618, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10620)
!10618 = !DISubroutineType(types: !10619)
!10619 = !{!145, !1205}
!10620 = !{!10621}
!10621 = !DILocalVariable(name: "dev", arg: 1, scope: !10617, file: !9805, line: 47, type: !1205)
!10622 = !DILocation(line: 0, scope: !10617)
!10623 = !DILocation(line: 55, column: 2, scope: !10624)
!10624 = distinct !DILexicalBlock(scope: !10617, file: !9805, line: 55, column: 2)
!10625 = !{i64 2155289823}
!10626 = !DILocation(line: 56, column: 9, scope: !10617)
!10627 = !DILocation(line: 56, column: 2, scope: !10617)
!10628 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1347, file: !1347, line: 270, type: !10629, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10631)
!10629 = !DISubroutineType(types: !10630)
!10630 = !{!107, !1205, !145}
!10631 = !{!10632, !10633, !10634, !10635, !10636}
!10632 = !DILocalVariable(name: "dev", arg: 1, scope: !10628, file: !1347, line: 270, type: !1205)
!10633 = !DILocalVariable(name: "on", arg: 2, scope: !10628, file: !1347, line: 270, type: !145)
!10634 = !DILocalVariable(name: "cfg", scope: !10628, file: !1347, line: 272, type: !9960)
!10635 = !DILocalVariable(name: "ret", scope: !10628, file: !1347, line: 273, type: !107)
!10636 = !DILocalVariable(name: "clk", scope: !10628, file: !1347, line: 278, type: !10262)
!10637 = !DILocation(line: 0, scope: !10628)
!10638 = !DILocation(line: 272, column: 45, scope: !10628)
!10639 = !DILocation(line: 282, column: 38, scope: !10640)
!10640 = distinct !DILexicalBlock(scope: !10641, file: !1347, line: 280, column: 10)
!10641 = distinct !DILexicalBlock(scope: !10628, file: !1347, line: 280, column: 6)
!10642 = !DILocation(line: 282, column: 6, scope: !10640)
!10643 = !DILocation(line: 281, column: 9, scope: !10640)
!10644 = !DILocation(line: 293, column: 1, scope: !10628)
!10645 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !247, file: !247, line: 730, type: !10618, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10646)
!10646 = !{!10647}
!10647 = !DILocalVariable(name: "dev", arg: 1, scope: !10645, file: !247, line: 730, type: !1205)
!10648 = !DILocation(line: 0, scope: !10645)
!10649 = !DILocation(line: 732, column: 9, scope: !10645)
!10650 = !DILocation(line: 732, column: 2, scope: !10645)
!10651 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1347, file: !1347, line: 496, type: !10652, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10654)
!10652 = !DISubroutineType(types: !10653)
!10653 = !{!107, !1205, !107, !107, !107}
!10654 = !{!10655, !10656, !10657, !10658, !10659, !10660}
!10655 = !DILocalVariable(name: "dev", arg: 1, scope: !10651, file: !1347, line: 496, type: !1205)
!10656 = !DILocalVariable(name: "pin", arg: 2, scope: !10651, file: !1347, line: 496, type: !107)
!10657 = !DILocalVariable(name: "conf", arg: 3, scope: !10651, file: !1347, line: 496, type: !107)
!10658 = !DILocalVariable(name: "func", arg: 4, scope: !10651, file: !1347, line: 496, type: !107)
!10659 = !DILocalVariable(name: "ret", scope: !10651, file: !1347, line: 498, type: !107)
!10660 = !DILocalVariable(name: "gpio_out", scope: !10661, file: !1347, line: 508, type: !152)
!10661 = distinct !DILexicalBlock(scope: !10662, file: !1347, line: 507, column: 27)
!10662 = distinct !DILexicalBlock(scope: !10651, file: !1347, line: 507, column: 6)
!10663 = !DILocation(line: 0, scope: !10651)
!10664 = !DILocation(line: 505, column: 2, scope: !10651)
!10665 = !DILocation(line: 507, column: 11, scope: !10662)
!10666 = !DILocation(line: 507, column: 6, scope: !10651)
!10667 = !DILocation(line: 508, column: 28, scope: !10661)
!10668 = !DILocation(line: 0, scope: !10661)
!10669 = !DILocation(line: 510, column: 16, scope: !10670)
!10670 = distinct !DILexicalBlock(scope: !10661, file: !1347, line: 510, column: 7)
!10671 = !DILocation(line: 0, scope: !10670)
!10672 = !DILocation(line: 510, column: 7, scope: !10661)
!10673 = !DILocation(line: 511, column: 4, scope: !10674)
!10674 = distinct !DILexicalBlock(scope: !10670, file: !1347, line: 510, column: 32)
!10675 = !DILocation(line: 512, column: 3, scope: !10674)
!10676 = !DILocation(line: 513, column: 4, scope: !10677)
!10677 = distinct !DILexicalBlock(scope: !10678, file: !1347, line: 512, column: 39)
!10678 = distinct !DILexicalBlock(scope: !10670, file: !1347, line: 512, column: 14)
!10679 = !DILocation(line: 514, column: 3, scope: !10677)
!10680 = !DILocation(line: 518, column: 1, scope: !10651)
!10681 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1620, file: !1620, line: 526, type: !1523, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !10682)
!10682 = !{!10683, !10684, !10685}
!10683 = !DILocalVariable(name: "dev", arg: 1, scope: !10681, file: !1620, line: 526, type: !1525)
!10684 = !DILocalVariable(name: "c", arg: 2, scope: !10681, file: !1620, line: 526, type: !1137)
!10685 = !DILocalVariable(name: "config", scope: !10681, file: !1620, line: 528, type: !10686)
!10686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1661, size: 32)
!10687 = !DILocation(line: 0, scope: !10681)
!10688 = !DILocation(line: 528, column: 48, scope: !10681)
!10689 = !DILocation(line: 531, column: 40, scope: !10690)
!10690 = distinct !DILexicalBlock(scope: !10681, file: !1620, line: 531, column: 6)
!10691 = !DILocation(line: 531, column: 6, scope: !10690)
!10692 = !DILocation(line: 531, column: 6, scope: !10681)
!10693 = !DILocation(line: 532, column: 34, scope: !10694)
!10694 = distinct !DILexicalBlock(scope: !10690, file: !1620, line: 531, column: 48)
!10695 = !DILocation(line: 532, column: 3, scope: !10694)
!10696 = !DILocation(line: 533, column: 2, scope: !10694)
!10697 = !DILocation(line: 539, column: 42, scope: !10698)
!10698 = distinct !DILexicalBlock(scope: !10681, file: !1620, line: 539, column: 6)
!10699 = !DILocation(line: 539, column: 7, scope: !10698)
!10700 = !DILocation(line: 539, column: 6, scope: !10681)
!10701 = !DILocation(line: 543, column: 52, scope: !10681)
!10702 = !DILocation(line: 543, column: 22, scope: !10681)
!10703 = !DILocation(line: 543, column: 5, scope: !10681)
!10704 = !DILocation(line: 545, column: 2, scope: !10681)
!10705 = !DILocation(line: 546, column: 1, scope: !10681)
!10706 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1620, file: !1620, line: 548, type: !1542, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !10707)
!10707 = !{!10708, !10709, !10710, !10711}
!10708 = !DILocalVariable(name: "dev", arg: 1, scope: !10706, file: !1620, line: 548, type: !1525)
!10709 = !DILocalVariable(name: "c", arg: 2, scope: !10706, file: !1620, line: 549, type: !196)
!10710 = !DILocalVariable(name: "config", scope: !10706, file: !1620, line: 551, type: !10686)
!10711 = !DILocalVariable(name: "key", scope: !10706, file: !1620, line: 555, type: !32)
!10712 = !DILocation(line: 0, scope: !10706)
!10713 = !DILocation(line: 551, column: 48, scope: !10706)
!10714 = !DILocation(line: 562, column: 2, scope: !10706)
!10715 = !DILocation(line: 563, column: 41, scope: !10716)
!10716 = distinct !DILexicalBlock(scope: !10717, file: !1620, line: 563, column: 7)
!10717 = distinct !DILexicalBlock(scope: !10706, file: !1620, line: 562, column: 12)
!10718 = !DILocation(line: 563, column: 7, scope: !10716)
!10719 = !DILocation(line: 563, column: 7, scope: !10717)
!10720 = !DILocation(line: 55, column: 2, scope: !10721, inlinedAt: !10725)
!10721 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5999, file: !5999, line: 42, type: !6000, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !10722)
!10722 = !{!10723, !10724}
!10723 = !DILocalVariable(name: "key", scope: !10721, file: !5999, line: 44, type: !32)
!10724 = !DILocalVariable(name: "tmp", scope: !10721, file: !5999, line: 53, type: !32)
!10725 = distinct !DILocation(line: 564, column: 10, scope: !10726)
!10726 = distinct !DILexicalBlock(scope: !10716, file: !1620, line: 563, column: 49)
!10727 = !{i64 2331967}
!10728 = !DILocation(line: 0, scope: !10721, inlinedAt: !10725)
!10729 = !DILocation(line: 565, column: 42, scope: !10730)
!10730 = distinct !DILexicalBlock(scope: !10726, file: !1620, line: 565, column: 8)
!10731 = !DILocation(line: 565, column: 8, scope: !10730)
!10732 = !DILocation(line: 565, column: 8, scope: !10726)
!10733 = !DILocalVariable(name: "key", arg: 1, scope: !10734, file: !5999, line: 84, type: !32)
!10734 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5999, file: !5999, line: 84, type: !6010, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !10735)
!10735 = !{!10733}
!10736 = !DILocation(line: 0, scope: !10734, inlinedAt: !10737)
!10737 = distinct !DILocation(line: 568, column: 4, scope: !10726)
!10738 = !DILocation(line: 95, column: 2, scope: !10734, inlinedAt: !10737)
!10739 = !{i64 2332784}
!10740 = !DILocation(line: 569, column: 3, scope: !10726)
!10741 = distinct !{!10741, !10714, !10742}
!10742 = !DILocation(line: 570, column: 2, scope: !10706)
!10743 = !DILocation(line: 592, column: 33, scope: !10706)
!10744 = !DILocation(line: 592, column: 2, scope: !10706)
!10745 = !DILocation(line: 0, scope: !10734, inlinedAt: !10746)
!10746 = distinct !DILocation(line: 593, column: 2, scope: !10706)
!10747 = !DILocation(line: 95, column: 2, scope: !10734, inlinedAt: !10746)
!10748 = !DILocation(line: 594, column: 1, scope: !10706)
!10749 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1620, file: !1620, line: 596, type: !1546, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !10750)
!10750 = !{!10751, !10752, !10753}
!10751 = !DILocalVariable(name: "dev", arg: 1, scope: !10749, file: !1620, line: 596, type: !1525)
!10752 = !DILocalVariable(name: "config", scope: !10749, file: !1620, line: 598, type: !10686)
!10753 = !DILocalVariable(name: "err", scope: !10749, file: !1620, line: 599, type: !152)
!10754 = !DILocation(line: 0, scope: !10749)
!10755 = !DILocation(line: 598, column: 48, scope: !10749)
!10756 = !DILocation(line: 606, column: 40, scope: !10757)
!10757 = distinct !DILexicalBlock(scope: !10749, file: !1620, line: 606, column: 6)
!10758 = !DILocation(line: 606, column: 6, scope: !10757)
!10759 = !DILocation(line: 606, column: 6, scope: !10749)
!10760 = !DILocation(line: 610, column: 39, scope: !10761)
!10761 = distinct !DILexicalBlock(scope: !10749, file: !1620, line: 610, column: 6)
!10762 = !DILocation(line: 610, column: 6, scope: !10761)
!10763 = !DILocation(line: 610, column: 6, scope: !10749)
!10764 = !DILocation(line: 614, column: 39, scope: !10765)
!10765 = distinct !DILexicalBlock(scope: !10749, file: !1620, line: 614, column: 6)
!10766 = !DILocation(line: 614, column: 6, scope: !10765)
!10767 = !DILocation(line: 614, column: 6, scope: !10749)
!10768 = !DILocation(line: 619, column: 40, scope: !10769)
!10769 = distinct !DILexicalBlock(scope: !10749, file: !1620, line: 619, column: 6)
!10770 = !DILocation(line: 619, column: 6, scope: !10769)
!10771 = !DILocation(line: 619, column: 6, scope: !10749)
!10772 = !DILocation(line: 623, column: 10, scope: !10773)
!10773 = distinct !DILexicalBlock(scope: !10749, file: !1620, line: 623, column: 6)
!10774 = !DILocation(line: 623, column: 6, scope: !10749)
!10775 = !DILocation(line: 624, column: 34, scope: !10776)
!10776 = distinct !DILexicalBlock(scope: !10773, file: !1620, line: 623, column: 24)
!10777 = !DILocation(line: 624, column: 3, scope: !10776)
!10778 = !DILocation(line: 625, column: 2, scope: !10776)
!10779 = !DILocation(line: 632, column: 10, scope: !10780)
!10780 = distinct !DILexicalBlock(scope: !10749, file: !1620, line: 632, column: 6)
!10781 = !DILocation(line: 632, column: 6, scope: !10749)
!10782 = !DILocation(line: 633, column: 34, scope: !10783)
!10783 = distinct !DILexicalBlock(scope: !10780, file: !1620, line: 632, column: 32)
!10784 = !DILocation(line: 633, column: 3, scope: !10783)
!10785 = !DILocation(line: 634, column: 2, scope: !10783)
!10786 = !DILocation(line: 636, column: 10, scope: !10787)
!10787 = distinct !DILexicalBlock(scope: !10749, file: !1620, line: 636, column: 6)
!10788 = !DILocation(line: 636, column: 6, scope: !10749)
!10789 = !DILocation(line: 637, column: 33, scope: !10790)
!10790 = distinct !DILexicalBlock(scope: !10787, file: !1620, line: 636, column: 31)
!10791 = !DILocation(line: 637, column: 3, scope: !10790)
!10792 = !DILocation(line: 638, column: 2, scope: !10790)
!10793 = !DILocation(line: 640, column: 10, scope: !10794)
!10794 = distinct !DILexicalBlock(scope: !10749, file: !1620, line: 640, column: 6)
!10795 = !DILocation(line: 640, column: 6, scope: !10749)
!10796 = !DILocation(line: 641, column: 33, scope: !10797)
!10797 = distinct !DILexicalBlock(scope: !10794, file: !1620, line: 640, column: 32)
!10798 = !DILocation(line: 641, column: 3, scope: !10797)
!10799 = !DILocation(line: 642, column: 2, scope: !10797)
!10800 = !DILocation(line: 646, column: 32, scope: !10749)
!10801 = !DILocation(line: 646, column: 2, scope: !10749)
!10802 = !DILocation(line: 648, column: 2, scope: !10749)
!10803 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1620, file: !1620, line: 419, type: !1550, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !10804)
!10804 = !{!10805, !10806, !10807, !10808, !10810, !10811, !10812, !10813}
!10805 = !DILocalVariable(name: "dev", arg: 1, scope: !10803, file: !1620, line: 419, type: !1525)
!10806 = !DILocalVariable(name: "cfg", arg: 2, scope: !10803, file: !1620, line: 420, type: !1552)
!10807 = !DILocalVariable(name: "config", scope: !10803, file: !1620, line: 422, type: !10686)
!10808 = !DILocalVariable(name: "data", scope: !10803, file: !1620, line: 423, type: !10809)
!10809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1718, size: 32)
!10810 = !DILocalVariable(name: "parity", scope: !10803, file: !1620, line: 424, type: !6595)
!10811 = !DILocalVariable(name: "stopbits", scope: !10803, file: !1620, line: 425, type: !6595)
!10812 = !DILocalVariable(name: "databits", scope: !10803, file: !1620, line: 426, type: !6595)
!10813 = !DILocalVariable(name: "flowctrl", scope: !10803, file: !1620, line: 428, type: !6595)
!10814 = !DILocation(line: 0, scope: !10803)
!10815 = !DILocation(line: 422, column: 48, scope: !10803)
!10816 = !DILocation(line: 423, column: 38, scope: !10803)
!10817 = !DILocation(line: 424, column: 56, scope: !10803)
!10818 = !DILocation(line: 424, column: 51, scope: !10803)
!10819 = !DILocation(line: 424, column: 26, scope: !10803)
!10820 = !DILocation(line: 425, column: 60, scope: !10803)
!10821 = !DILocation(line: 425, column: 55, scope: !10803)
!10822 = !DILocation(line: 425, column: 28, scope: !10803)
!10823 = !DILocation(line: 426, column: 60, scope: !10803)
!10824 = !DILocation(line: 426, column: 55, scope: !10803)
!10825 = !DILocation(line: 426, column: 28, scope: !10803)
!10826 = !DILocation(line: 428, column: 58, scope: !10803)
!10827 = !DILocation(line: 428, column: 53, scope: !10803)
!10828 = !DILocation(line: 428, column: 28, scope: !10803)
!10829 = !DILocation(line: 431, column: 44, scope: !10830)
!10830 = distinct !DILexicalBlock(scope: !10803, file: !1620, line: 431, column: 6)
!10831 = !DILocation(line: 438, column: 22, scope: !10832)
!10832 = distinct !DILexicalBlock(scope: !10803, file: !1620, line: 437, column: 6)
!10833 = !DILocation(line: 437, column: 6, scope: !10803)
!10834 = !DILocation(line: 448, column: 6, scope: !10803)
!10835 = !DILocation(line: 465, column: 47, scope: !10836)
!10836 = distinct !DILexicalBlock(scope: !10803, file: !1620, line: 465, column: 6)
!10837 = !DILocation(line: 475, column: 21, scope: !10838)
!10838 = distinct !DILexicalBlock(scope: !10803, file: !1620, line: 475, column: 6)
!10839 = !DILocation(line: 475, column: 6, scope: !10803)
!10840 = !DILocation(line: 476, column: 8, scope: !10841)
!10841 = distinct !DILexicalBlock(scope: !10842, file: !1620, line: 476, column: 7)
!10842 = distinct !DILexicalBlock(scope: !10838, file: !1620, line: 475, column: 49)
!10843 = !DILocation(line: 477, column: 34, scope: !10841)
!10844 = !DILocation(line: 476, column: 7, scope: !10842)
!10845 = !DILocation(line: 482, column: 27, scope: !10803)
!10846 = !DILocation(line: 482, column: 2, scope: !10803)
!10847 = !DILocation(line: 484, column: 16, scope: !10848)
!10848 = distinct !DILexicalBlock(scope: !10803, file: !1620, line: 484, column: 6)
!10849 = !DILocation(line: 484, column: 13, scope: !10848)
!10850 = !DILocation(line: 484, column: 6, scope: !10803)
!10851 = !DILocation(line: 485, column: 3, scope: !10852)
!10852 = distinct !DILexicalBlock(scope: !10848, file: !1620, line: 484, column: 44)
!10853 = !DILocation(line: 486, column: 2, scope: !10852)
!10854 = !DILocation(line: 488, column: 18, scope: !10855)
!10855 = distinct !DILexicalBlock(scope: !10803, file: !1620, line: 488, column: 6)
!10856 = !DILocation(line: 488, column: 15, scope: !10855)
!10857 = !DILocation(line: 488, column: 6, scope: !10803)
!10858 = !DILocation(line: 489, column: 3, scope: !10859)
!10859 = distinct !DILexicalBlock(scope: !10855, file: !1620, line: 488, column: 48)
!10860 = !DILocation(line: 490, column: 2, scope: !10859)
!10861 = !DILocation(line: 492, column: 18, scope: !10862)
!10862 = distinct !DILexicalBlock(scope: !10803, file: !1620, line: 492, column: 6)
!10863 = !DILocation(line: 492, column: 15, scope: !10862)
!10864 = !DILocation(line: 492, column: 6, scope: !10803)
!10865 = !DILocation(line: 493, column: 3, scope: !10866)
!10866 = distinct !DILexicalBlock(scope: !10862, file: !1620, line: 492, column: 48)
!10867 = !DILocation(line: 494, column: 2, scope: !10866)
!10868 = !DILocation(line: 496, column: 18, scope: !10869)
!10869 = distinct !DILexicalBlock(scope: !10803, file: !1620, line: 496, column: 6)
!10870 = !DILocation(line: 496, column: 15, scope: !10869)
!10871 = !DILocation(line: 496, column: 6, scope: !10803)
!10872 = !DILocation(line: 497, column: 3, scope: !10873)
!10873 = distinct !DILexicalBlock(scope: !10869, file: !1620, line: 496, column: 46)
!10874 = !DILocation(line: 498, column: 2, scope: !10873)
!10875 = !DILocation(line: 500, column: 11, scope: !10876)
!10876 = distinct !DILexicalBlock(scope: !10803, file: !1620, line: 500, column: 6)
!10877 = !DILocation(line: 500, column: 29, scope: !10876)
!10878 = !DILocation(line: 500, column: 20, scope: !10876)
!10879 = !DILocation(line: 500, column: 6, scope: !10803)
!10880 = !DILocation(line: 501, column: 3, scope: !10881)
!10881 = distinct !DILexicalBlock(scope: !10876, file: !1620, line: 500, column: 40)
!10882 = !DILocation(line: 502, column: 26, scope: !10881)
!10883 = !DILocation(line: 502, column: 19, scope: !10881)
!10884 = !DILocation(line: 503, column: 2, scope: !10881)
!10885 = !DILocation(line: 505, column: 26, scope: !10803)
!10886 = !DILocation(line: 505, column: 2, scope: !10803)
!10887 = !DILocation(line: 506, column: 2, scope: !10803)
!10888 = !DILocation(line: 507, column: 1, scope: !10803)
!10889 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1620, file: !1620, line: 509, type: !1563, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !10890)
!10890 = !{!10891, !10892, !10893}
!10891 = !DILocalVariable(name: "dev", arg: 1, scope: !10889, file: !1620, line: 509, type: !1525)
!10892 = !DILocalVariable(name: "cfg", arg: 2, scope: !10889, file: !1620, line: 510, type: !1565)
!10893 = !DILocalVariable(name: "data", scope: !10889, file: !1620, line: 512, type: !10809)
!10894 = !DILocation(line: 0, scope: !10889)
!10895 = !DILocation(line: 512, column: 38, scope: !10889)
!10896 = !DILocation(line: 514, column: 24, scope: !10889)
!10897 = !DILocation(line: 514, column: 7, scope: !10889)
!10898 = !DILocation(line: 514, column: 16, scope: !10889)
!10899 = !DILocation(line: 515, column: 41, scope: !10889)
!10900 = !{i32 0, i32 1537}
!10901 = !DILocation(line: 515, column: 16, scope: !10889)
!10902 = !DILocation(line: 515, column: 7, scope: !10889)
!10903 = !DILocation(line: 515, column: 14, scope: !10889)
!10904 = !DILocation(line: 517, column: 3, scope: !10889)
!10905 = !{i32 0, i32 12289}
!10906 = !DILocation(line: 516, column: 19, scope: !10889)
!10907 = !DILocation(line: 516, column: 7, scope: !10889)
!10908 = !DILocation(line: 516, column: 17, scope: !10889)
!10909 = !DILocation(line: 519, column: 3, scope: !10889)
!10910 = !DILocation(line: 519, column: 33, scope: !10889)
!10911 = !DILocation(line: 518, column: 19, scope: !10889)
!10912 = !DILocation(line: 518, column: 7, scope: !10889)
!10913 = !DILocation(line: 518, column: 17, scope: !10889)
!10914 = !DILocation(line: 521, column: 3, scope: !10889)
!10915 = !{i32 0, i32 769}
!10916 = !DILocation(line: 520, column: 19, scope: !10889)
!10917 = !DILocation(line: 520, column: 7, scope: !10889)
!10918 = !DILocation(line: 520, column: 17, scope: !10889)
!10919 = !DILocation(line: 522, column: 2, scope: !10889)
!10920 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1620, file: !1620, line: 205, type: !10921, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !10923)
!10921 = !DISubroutineType(types: !10922)
!10922 = !{!152, !1525}
!10923 = !{!10924, !10925}
!10924 = !DILocalVariable(name: "dev", arg: 1, scope: !10920, file: !1620, line: 205, type: !1525)
!10925 = !DILocalVariable(name: "config", scope: !10920, file: !1620, line: 207, type: !10686)
!10926 = !DILocation(line: 0, scope: !10920)
!10927 = !DILocation(line: 207, column: 48, scope: !10920)
!10928 = !DILocation(line: 209, column: 36, scope: !10920)
!10929 = !DILocation(line: 209, column: 9, scope: !10920)
!10930 = !DILocation(line: 209, column: 2, scope: !10920)
!10931 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1620, file: !1620, line: 270, type: !10932, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !10934)
!10932 = !DISubroutineType(types: !10933)
!10933 = !{!1491, !152}
!10934 = !{!10935}
!10935 = !DILocalVariable(name: "parity", arg: 1, scope: !10931, file: !1620, line: 270, type: !152)
!10936 = !DILocation(line: 0, scope: !10931)
!10937 = !DILocation(line: 272, column: 2, scope: !10931)
!10938 = !DILocation(line: 281, column: 1, scope: !10931)
!10939 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1620, file: !1620, line: 220, type: !10921, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !10940)
!10940 = !{!10941, !10942}
!10941 = !DILocalVariable(name: "dev", arg: 1, scope: !10939, file: !1620, line: 220, type: !1525)
!10942 = !DILocalVariable(name: "config", scope: !10939, file: !1620, line: 222, type: !10686)
!10943 = !DILocation(line: 0, scope: !10939)
!10944 = !DILocation(line: 222, column: 48, scope: !10939)
!10945 = !DILocation(line: 224, column: 44, scope: !10939)
!10946 = !DILocation(line: 224, column: 9, scope: !10939)
!10947 = !DILocation(line: 224, column: 2, scope: !10939)
!10948 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1620, file: !1620, line: 304, type: !10949, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !10951)
!10949 = !DISubroutineType(types: !10950)
!10950 = !{!1505, !152}
!10951 = !{!10952}
!10952 = !DILocalVariable(name: "sb", arg: 1, scope: !10948, file: !1620, line: 304, type: !152)
!10953 = !DILocation(line: 0, scope: !10948)
!10954 = !DILocation(line: 306, column: 2, scope: !10948)
!10955 = !DILocation(line: 0, scope: !10956)
!10956 = distinct !DILexicalBlock(scope: !10948, file: !1620, line: 306, column: 14)
!10957 = !DILocation(line: 323, column: 1, scope: !10948)
!10958 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1620, file: !1620, line: 235, type: !10921, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !10959)
!10959 = !{!10960, !10961}
!10960 = !DILocalVariable(name: "dev", arg: 1, scope: !10958, file: !1620, line: 235, type: !1525)
!10961 = !DILocalVariable(name: "config", scope: !10958, file: !1620, line: 237, type: !10686)
!10962 = !DILocation(line: 0, scope: !10958)
!10963 = !DILocation(line: 237, column: 48, scope: !10958)
!10964 = !DILocation(line: 239, column: 39, scope: !10958)
!10965 = !DILocation(line: 239, column: 9, scope: !10958)
!10966 = !DILocation(line: 239, column: 2, scope: !10958)
!10967 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1620, file: !1620, line: 355, type: !10968, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !10970)
!10968 = !DISubroutineType(types: !10969)
!10969 = !{!1498, !152, !152}
!10970 = !{!10971, !10972}
!10971 = !DILocalVariable(name: "db", arg: 1, scope: !10967, file: !1620, line: 355, type: !152)
!10972 = !DILocalVariable(name: "p", arg: 2, scope: !10967, file: !1620, line: 356, type: !152)
!10973 = !DILocation(line: 0, scope: !10967)
!10974 = !DILocation(line: 358, column: 2, scope: !10967)
!10975 = !DILocation(line: 384, column: 1, scope: !10967)
!10976 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1620, file: !1620, line: 250, type: !10921, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !10977)
!10977 = !{!10978, !10979}
!10978 = !DILocalVariable(name: "dev", arg: 1, scope: !10976, file: !1620, line: 250, type: !1525)
!10979 = !DILocalVariable(name: "config", scope: !10976, file: !1620, line: 252, type: !10686)
!10980 = !DILocation(line: 0, scope: !10976)
!10981 = !DILocation(line: 252, column: 48, scope: !10976)
!10982 = !DILocation(line: 254, column: 40, scope: !10976)
!10983 = !DILocation(line: 254, column: 9, scope: !10976)
!10984 = !DILocation(line: 254, column: 2, scope: !10976)
!10985 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1620, file: !1620, line: 409, type: !10986, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !10988)
!10986 = !DISubroutineType(types: !10987)
!10987 = !{!1511, !152}
!10988 = !{!10989}
!10989 = !DILocalVariable(name: "fc", arg: 1, scope: !10985, file: !1620, line: 409, type: !152)
!10990 = !DILocation(line: 0, scope: !10985)
!10991 = !DILocation(line: 411, column: 9, scope: !10992)
!10992 = distinct !DILexicalBlock(scope: !10985, file: !1620, line: 411, column: 6)
!10993 = !DILocation(line: 416, column: 1, scope: !10985)
!10994 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !10995, file: !10995, line: 967, type: !10996, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !10998)
!10995 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10996 = !DISubroutineType(types: !10997)
!10997 = !{!152, !1566}
!10998 = !{!10999}
!10999 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10994, file: !10995, line: 967, type: !1566)
!11000 = !DILocation(line: 0, scope: !10994)
!11001 = !DILocation(line: 969, column: 21, scope: !10994)
!11002 = !DILocation(line: 969, column: 3, scope: !10994)
!11003 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !10995, file: !10995, line: 601, type: !10996, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11004)
!11004 = !{!11005}
!11005 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11003, file: !10995, line: 601, type: !1566)
!11006 = !DILocation(line: 0, scope: !11003)
!11007 = !DILocation(line: 603, column: 21, scope: !11003)
!11008 = !DILocation(line: 603, column: 3, scope: !11003)
!11009 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !10995, file: !10995, line: 820, type: !10996, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11010)
!11010 = !{!11011}
!11011 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11009, file: !10995, line: 820, type: !1566)
!11012 = !DILocation(line: 0, scope: !11009)
!11013 = !DILocation(line: 822, column: 21, scope: !11009)
!11014 = !DILocation(line: 822, column: 3, scope: !11009)
!11015 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !10995, file: !10995, line: 547, type: !10996, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11016)
!11016 = !{!11017}
!11017 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11015, file: !10995, line: 547, type: !1566)
!11018 = !DILocation(line: 0, scope: !11015)
!11019 = !DILocation(line: 549, column: 21, scope: !11015)
!11020 = !DILocation(line: 549, column: 3, scope: !11015)
!11021 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1620, file: !1620, line: 257, type: !11022, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11024)
!11022 = !DISubroutineType(types: !11023)
!11023 = !{!152, !1491}
!11024 = !{!11025}
!11025 = !DILocalVariable(name: "parity", arg: 1, scope: !11021, file: !1620, line: 257, type: !1491)
!11026 = !DILocation(line: 0, scope: !11021)
!11027 = !DILocation(line: 259, column: 2, scope: !11021)
!11028 = !DILocation(line: 268, column: 1, scope: !11021)
!11029 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1620, file: !1620, line: 283, type: !11030, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11032)
!11030 = !DISubroutineType(types: !11031)
!11031 = !{!152, !1505}
!11032 = !{!11033}
!11033 = !DILocalVariable(name: "sb", arg: 1, scope: !11029, file: !1620, line: 283, type: !1505)
!11034 = !DILocation(line: 0, scope: !11029)
!11035 = !DILocation(line: 285, column: 2, scope: !11029)
!11036 = !DILocation(line: 0, scope: !11037)
!11037 = distinct !DILexicalBlock(scope: !11029, file: !1620, line: 285, column: 14)
!11038 = !DILocation(line: 302, column: 1, scope: !11029)
!11039 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1620, file: !1620, line: 325, type: !11040, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11042)
!11040 = !DISubroutineType(types: !11041)
!11041 = !{!152, !1498, !1491}
!11042 = !{!11043, !11044}
!11043 = !DILocalVariable(name: "db", arg: 1, scope: !11039, file: !1620, line: 325, type: !1498)
!11044 = !DILocalVariable(name: "p", arg: 2, scope: !11039, file: !1620, line: 326, type: !1491)
!11045 = !DILocation(line: 0, scope: !11039)
!11046 = !DILocation(line: 328, column: 2, scope: !11039)
!11047 = !DILocation(line: 353, column: 1, scope: !11039)
!11048 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1620, file: !1620, line: 393, type: !11049, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11051)
!11049 = !DISubroutineType(types: !11050)
!11050 = !{!152, !1511}
!11051 = !{!11052}
!11052 = !DILocalVariable(name: "fc", arg: 1, scope: !11048, file: !1620, line: 393, type: !1511)
!11053 = !DILocation(line: 0, scope: !11048)
!11054 = !DILocation(line: 395, column: 9, scope: !11055)
!11055 = distinct !DILexicalBlock(scope: !11048, file: !1620, line: 395, column: 6)
!11056 = !DILocation(line: 400, column: 1, scope: !11048)
!11057 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !10995, file: !10995, line: 424, type: !11058, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11060)
!11058 = !DISubroutineType(types: !11059)
!11059 = !{null, !1566}
!11060 = !{!11061}
!11061 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11057, file: !10995, line: 424, type: !1566)
!11062 = !DILocation(line: 0, scope: !11057)
!11063 = !DILocation(line: 426, column: 3, scope: !11057)
!11064 = !DILocation(line: 427, column: 1, scope: !11057)
!11065 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1620, file: !1620, line: 197, type: !11066, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11068)
!11066 = !DISubroutineType(types: !11067)
!11067 = !{null, !1525, !152}
!11068 = !{!11069, !11070, !11071}
!11069 = !DILocalVariable(name: "dev", arg: 1, scope: !11065, file: !1620, line: 197, type: !1525)
!11070 = !DILocalVariable(name: "parity", arg: 2, scope: !11065, file: !1620, line: 198, type: !152)
!11071 = !DILocalVariable(name: "config", scope: !11065, file: !1620, line: 200, type: !10686)
!11072 = !DILocation(line: 0, scope: !11065)
!11073 = !DILocation(line: 200, column: 48, scope: !11065)
!11074 = !DILocation(line: 202, column: 29, scope: !11065)
!11075 = !DILocation(line: 202, column: 2, scope: !11065)
!11076 = !DILocation(line: 203, column: 1, scope: !11065)
!11077 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1620, file: !1620, line: 212, type: !11066, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11078)
!11078 = !{!11079, !11080, !11081}
!11079 = !DILocalVariable(name: "dev", arg: 1, scope: !11077, file: !1620, line: 212, type: !1525)
!11080 = !DILocalVariable(name: "stopbits", arg: 2, scope: !11077, file: !1620, line: 213, type: !152)
!11081 = !DILocalVariable(name: "config", scope: !11077, file: !1620, line: 215, type: !10686)
!11082 = !DILocation(line: 0, scope: !11077)
!11083 = !DILocation(line: 215, column: 48, scope: !11077)
!11084 = !DILocation(line: 217, column: 37, scope: !11077)
!11085 = !DILocation(line: 217, column: 2, scope: !11077)
!11086 = !DILocation(line: 218, column: 1, scope: !11077)
!11087 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1620, file: !1620, line: 227, type: !11066, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11088)
!11088 = !{!11089, !11090, !11091}
!11089 = !DILocalVariable(name: "dev", arg: 1, scope: !11087, file: !1620, line: 227, type: !1525)
!11090 = !DILocalVariable(name: "databits", arg: 2, scope: !11087, file: !1620, line: 228, type: !152)
!11091 = !DILocalVariable(name: "config", scope: !11087, file: !1620, line: 230, type: !10686)
!11092 = !DILocation(line: 0, scope: !11087)
!11093 = !DILocation(line: 230, column: 48, scope: !11087)
!11094 = !DILocation(line: 232, column: 32, scope: !11087)
!11095 = !DILocation(line: 232, column: 2, scope: !11087)
!11096 = !DILocation(line: 233, column: 1, scope: !11087)
!11097 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1620, file: !1620, line: 242, type: !11066, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11098)
!11098 = !{!11099, !11100, !11101}
!11099 = !DILocalVariable(name: "dev", arg: 1, scope: !11097, file: !1620, line: 242, type: !1525)
!11100 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !11097, file: !1620, line: 243, type: !152)
!11101 = !DILocalVariable(name: "config", scope: !11097, file: !1620, line: 245, type: !10686)
!11102 = !DILocation(line: 0, scope: !11097)
!11103 = !DILocation(line: 245, column: 48, scope: !11097)
!11104 = !DILocation(line: 247, column: 33, scope: !11097)
!11105 = !DILocation(line: 247, column: 2, scope: !11097)
!11106 = !DILocation(line: 248, column: 1, scope: !11097)
!11107 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1620, file: !1620, line: 107, type: !11066, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11108)
!11108 = !{!11109, !11110, !11111, !11112, !11113}
!11109 = !DILocalVariable(name: "dev", arg: 1, scope: !11107, file: !1620, line: 107, type: !1525)
!11110 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !11107, file: !1620, line: 107, type: !152)
!11111 = !DILocalVariable(name: "config", scope: !11107, file: !1620, line: 109, type: !10686)
!11112 = !DILocalVariable(name: "data", scope: !11107, file: !1620, line: 110, type: !10809)
!11113 = !DILocalVariable(name: "clock_rate", scope: !11107, file: !1620, line: 112, type: !152)
!11114 = !DILocation(line: 0, scope: !11107)
!11115 = !DILocation(line: 109, column: 48, scope: !11107)
!11116 = !DILocation(line: 110, column: 38, scope: !11107)
!11117 = !DILocation(line: 112, column: 2, scope: !11107)
!11118 = !DILocation(line: 123, column: 36, scope: !11119)
!11119 = distinct !DILexicalBlock(scope: !11120, file: !1620, line: 123, column: 7)
!11120 = distinct !DILexicalBlock(scope: !11121, file: !1620, line: 122, column: 9)
!11121 = distinct !DILexicalBlock(scope: !11107, file: !1620, line: 115, column: 6)
!11122 = !DILocation(line: 124, column: 42, scope: !11119)
!11123 = !DILocation(line: 123, column: 7, scope: !11119)
!11124 = !DILocation(line: 125, column: 22, scope: !11119)
!11125 = !DILocation(line: 123, column: 7, scope: !11120)
!11126 = !DILocation(line: 126, column: 4, scope: !11127)
!11127 = distinct !DILexicalBlock(scope: !11128, file: !1620, line: 126, column: 4)
!11128 = distinct !DILexicalBlock(scope: !11129, file: !1620, line: 126, column: 4)
!11129 = distinct !DILexicalBlock(scope: !11130, file: !1620, line: 126, column: 4)
!11130 = distinct !DILexicalBlock(scope: !11131, file: !1620, line: 126, column: 4)
!11131 = distinct !DILexicalBlock(scope: !11119, file: !1620, line: 125, column: 27)
!11132 = !DILocation(line: 127, column: 4, scope: !11131)
!11133 = !DILocation(line: 176, column: 36, scope: !11107)
!11134 = !DILocation(line: 176, column: 3, scope: !11107)
!11135 = !DILocation(line: 179, column: 32, scope: !11107)
!11136 = !DILocation(line: 180, column: 10, scope: !11107)
!11137 = !DILocation(line: 179, column: 3, scope: !11107)
!11138 = !DILocation(line: 189, column: 3, scope: !11139)
!11139 = distinct !DILexicalBlock(scope: !11140, file: !1620, line: 189, column: 3)
!11140 = distinct !DILexicalBlock(scope: !11107, file: !1620, line: 189, column: 3)
!11141 = !DILocation(line: 189, column: 3, scope: !11140)
!11142 = !DILocation(line: 189, column: 3, scope: !11143)
!11143 = distinct !DILexicalBlock(scope: !11139, file: !1620, line: 189, column: 3)
!11144 = !DILocation(line: 195, column: 1, scope: !11107)
!11145 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !10995, file: !10995, line: 410, type: !11058, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11146)
!11146 = !{!11147}
!11147 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11145, file: !10995, line: 410, type: !1566)
!11148 = !DILocation(line: 0, scope: !11145)
!11149 = !DILocation(line: 412, column: 3, scope: !11145)
!11150 = !DILocation(line: 413, column: 1, scope: !11145)
!11151 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !980, file: !980, line: 216, type: !1599, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11152)
!11152 = !{!11153, !11154, !11155, !11156}
!11153 = !DILocalVariable(name: "dev", arg: 1, scope: !11151, file: !980, line: 216, type: !1525)
!11154 = !DILocalVariable(name: "sys", arg: 2, scope: !11151, file: !980, line: 217, type: !1076)
!11155 = !DILocalVariable(name: "rate", arg: 3, scope: !11151, file: !980, line: 218, type: !1032)
!11156 = !DILocalVariable(name: "api", scope: !11151, file: !980, line: 220, type: !1577)
!11157 = !DILocation(line: 0, scope: !11151)
!11158 = !DILocation(line: 221, column: 49, scope: !11151)
!11159 = !DILocation(line: 223, column: 11, scope: !11160)
!11160 = distinct !DILexicalBlock(scope: !11151, file: !980, line: 223, column: 6)
!11161 = !DILocation(line: 223, column: 20, scope: !11160)
!11162 = !DILocation(line: 223, column: 6, scope: !11151)
!11163 = !DILocation(line: 227, column: 9, scope: !11151)
!11164 = !DILocation(line: 227, column: 2, scope: !11151)
!11165 = !DILocation(line: 228, column: 1, scope: !11151)
!11166 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !6077, file: !6077, line: 175, type: !6078, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11167)
!11167 = !{!11168}
!11168 = !DILocalVariable(name: "level", arg: 1, scope: !11166, file: !6077, line: 175, type: !107)
!11169 = !DILocation(line: 0, scope: !11166)
!11170 = !DILocation(line: 177, column: 2, scope: !11166)
!11171 = !DILocation(line: 189, column: 1, scope: !11166)
!11172 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !10995, file: !10995, line: 615, type: !11173, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11175)
!11173 = !DISubroutineType(types: !11174)
!11174 = !{null, !1566, !152}
!11175 = !{!11176, !11177}
!11176 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11172, file: !10995, line: 615, type: !1566)
!11177 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !11172, file: !10995, line: 615, type: !152)
!11178 = !DILocation(line: 0, scope: !11172)
!11179 = !DILocation(line: 617, column: 3, scope: !11172)
!11180 = !DILocation(line: 618, column: 1, scope: !11172)
!11181 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !10995, file: !10995, line: 1020, type: !11182, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11184)
!11182 = !DISubroutineType(types: !11183)
!11183 = !{null, !1566, !152, !152, !152}
!11184 = !{!11185, !11186, !11187, !11188}
!11185 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11181, file: !10995, line: 1020, type: !1566)
!11186 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !11181, file: !10995, line: 1020, type: !152)
!11187 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !11181, file: !10995, line: 1020, type: !152)
!11188 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !11181, file: !10995, line: 1021, type: !152)
!11189 = !DILocation(line: 0, scope: !11181)
!11190 = !DILocation(line: 1029, column: 30, scope: !11191)
!11191 = distinct !DILexicalBlock(scope: !11192, file: !10995, line: 1028, column: 3)
!11192 = distinct !DILexicalBlock(scope: !11181, file: !10995, line: 1023, column: 7)
!11193 = !DILocation(line: 1029, column: 19, scope: !11191)
!11194 = !DILocation(line: 1029, column: 13, scope: !11191)
!11195 = !DILocation(line: 1029, column: 17, scope: !11191)
!11196 = !DILocation(line: 1031, column: 1, scope: !11181)
!11197 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !10995, file: !10995, line: 949, type: !11173, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11198)
!11198 = !{!11199, !11200}
!11199 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11197, file: !10995, line: 949, type: !1566)
!11200 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !11197, file: !10995, line: 949, type: !152)
!11201 = !DILocation(line: 0, scope: !11197)
!11202 = !DILocation(line: 951, column: 3, scope: !11197)
!11203 = !DILocation(line: 952, column: 1, scope: !11197)
!11204 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !10995, file: !10995, line: 588, type: !11173, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11205)
!11205 = !{!11206, !11207}
!11206 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11204, file: !10995, line: 588, type: !1566)
!11207 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11204, file: !10995, line: 588, type: !152)
!11208 = !DILocation(line: 0, scope: !11204)
!11209 = !DILocation(line: 590, column: 3, scope: !11204)
!11210 = !DILocation(line: 591, column: 1, scope: !11204)
!11211 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !10995, file: !10995, line: 805, type: !11173, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11212)
!11212 = !{!11213, !11214}
!11213 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11211, file: !10995, line: 805, type: !1566)
!11214 = !DILocalVariable(name: "StopBits", arg: 2, scope: !11211, file: !10995, line: 805, type: !152)
!11215 = !DILocation(line: 0, scope: !11211)
!11216 = !DILocation(line: 807, column: 3, scope: !11211)
!11217 = !DILocation(line: 808, column: 1, scope: !11211)
!11218 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !10995, file: !10995, line: 532, type: !11173, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11219)
!11219 = !{!11220, !11221}
!11220 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11218, file: !10995, line: 532, type: !1566)
!11221 = !DILocalVariable(name: "Parity", arg: 2, scope: !11218, file: !10995, line: 532, type: !152)
!11222 = !DILocation(line: 0, scope: !11218)
!11223 = !DILocation(line: 534, column: 3, scope: !11218)
!11224 = !DILocation(line: 535, column: 1, scope: !11218)
!11225 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !10995, file: !10995, line: 1770, type: !10996, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11226)
!11226 = !{!11227}
!11227 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11225, file: !10995, line: 1770, type: !1566)
!11228 = !DILocation(line: 0, scope: !11225)
!11229 = !DILocation(line: 1772, column: 11, scope: !11225)
!11230 = !DILocation(line: 1772, column: 46, scope: !11225)
!11231 = !DILocation(line: 1772, column: 3, scope: !11225)
!11232 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !10995, file: !10995, line: 1737, type: !10996, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11233)
!11233 = !{!11234}
!11234 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11232, file: !10995, line: 1737, type: !1566)
!11235 = !DILocation(line: 0, scope: !11232)
!11236 = !DILocation(line: 1739, column: 11, scope: !11232)
!11237 = !DILocation(line: 1739, column: 3, scope: !11232)
!11238 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !10995, file: !10995, line: 1748, type: !10996, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11239)
!11239 = !{!11240}
!11240 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11238, file: !10995, line: 1748, type: !1566)
!11241 = !DILocation(line: 0, scope: !11238)
!11242 = !DILocation(line: 1750, column: 11, scope: !11238)
!11243 = !DILocation(line: 1750, column: 45, scope: !11238)
!11244 = !DILocation(line: 1750, column: 3, scope: !11238)
!11245 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !10995, file: !10995, line: 1827, type: !10996, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11246)
!11246 = !{!11247}
!11247 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11245, file: !10995, line: 1827, type: !1566)
!11248 = !DILocation(line: 0, scope: !11245)
!11249 = !DILocation(line: 1829, column: 11, scope: !11245)
!11250 = !DILocation(line: 1829, column: 46, scope: !11245)
!11251 = !DILocation(line: 1829, column: 3, scope: !11245)
!11252 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !10995, file: !10995, line: 1992, type: !11058, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11253)
!11253 = !{!11254}
!11254 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11252, file: !10995, line: 1992, type: !1566)
!11255 = !DILocation(line: 0, scope: !11252)
!11256 = !DILocation(line: 1994, column: 3, scope: !11252)
!11257 = !DILocation(line: 1995, column: 1, scope: !11252)
!11258 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !10995, file: !10995, line: 1934, type: !11058, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11259)
!11259 = !{!11260, !11261}
!11260 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11258, file: !10995, line: 1934, type: !1566)
!11261 = !DILocalVariable(name: "tmpreg", scope: !11258, file: !10995, line: 1936, type: !227)
!11262 = !DILocation(line: 0, scope: !11258)
!11263 = !DILocation(line: 1936, column: 3, scope: !11258)
!11264 = !DILocation(line: 1936, column: 17, scope: !11258)
!11265 = !DILocation(line: 1937, column: 20, scope: !11258)
!11266 = !DILocation(line: 1937, column: 10, scope: !11258)
!11267 = !DILocation(line: 1938, column: 10, scope: !11258)
!11268 = !DILocation(line: 1939, column: 20, scope: !11258)
!11269 = !DILocation(line: 1939, column: 10, scope: !11258)
!11270 = !DILocation(line: 1940, column: 10, scope: !11258)
!11271 = !DILocation(line: 1941, column: 1, scope: !11258)
!11272 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !10995, file: !10995, line: 1877, type: !11058, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11273)
!11273 = !{!11274, !11275}
!11274 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11272, file: !10995, line: 1877, type: !1566)
!11275 = !DILocalVariable(name: "tmpreg", scope: !11272, file: !10995, line: 1879, type: !227)
!11276 = !DILocation(line: 0, scope: !11272)
!11277 = !DILocation(line: 1879, column: 3, scope: !11272)
!11278 = !DILocation(line: 1879, column: 17, scope: !11272)
!11279 = !DILocation(line: 1880, column: 20, scope: !11272)
!11280 = !DILocation(line: 1880, column: 10, scope: !11272)
!11281 = !DILocation(line: 1881, column: 10, scope: !11272)
!11282 = !DILocation(line: 1882, column: 20, scope: !11272)
!11283 = !DILocation(line: 1882, column: 10, scope: !11272)
!11284 = !DILocation(line: 1883, column: 10, scope: !11272)
!11285 = !DILocation(line: 1884, column: 1, scope: !11272)
!11286 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !10995, file: !10995, line: 1896, type: !11058, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11287)
!11287 = !{!11288, !11289}
!11288 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11286, file: !10995, line: 1896, type: !1566)
!11289 = !DILocalVariable(name: "tmpreg", scope: !11286, file: !10995, line: 1898, type: !227)
!11290 = !DILocation(line: 0, scope: !11286)
!11291 = !DILocation(line: 1898, column: 3, scope: !11286)
!11292 = !DILocation(line: 1898, column: 17, scope: !11286)
!11293 = !DILocation(line: 1899, column: 20, scope: !11286)
!11294 = !DILocation(line: 1899, column: 10, scope: !11286)
!11295 = !DILocation(line: 1900, column: 10, scope: !11286)
!11296 = !DILocation(line: 1901, column: 20, scope: !11286)
!11297 = !DILocation(line: 1901, column: 10, scope: !11286)
!11298 = !DILocation(line: 1902, column: 10, scope: !11286)
!11299 = !DILocation(line: 1903, column: 1, scope: !11286)
!11300 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !10995, file: !10995, line: 1915, type: !11058, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11301)
!11301 = !{!11302, !11303}
!11302 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11300, file: !10995, line: 1915, type: !1566)
!11303 = !DILocalVariable(name: "tmpreg", scope: !11300, file: !10995, line: 1917, type: !227)
!11304 = !DILocation(line: 0, scope: !11300)
!11305 = !DILocation(line: 1917, column: 3, scope: !11300)
!11306 = !DILocation(line: 1917, column: 17, scope: !11300)
!11307 = !DILocation(line: 1918, column: 20, scope: !11300)
!11308 = !DILocation(line: 1918, column: 10, scope: !11300)
!11309 = !DILocation(line: 1919, column: 10, scope: !11300)
!11310 = !DILocation(line: 1920, column: 20, scope: !11300)
!11311 = !DILocation(line: 1920, column: 10, scope: !11300)
!11312 = !DILocation(line: 1921, column: 10, scope: !11300)
!11313 = !DILocation(line: 1922, column: 1, scope: !11300)
!11314 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !10995, file: !10995, line: 1814, type: !10996, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11315)
!11315 = !{!11316}
!11316 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11314, file: !10995, line: 1814, type: !1566)
!11317 = !DILocation(line: 0, scope: !11314)
!11318 = !DILocation(line: 1816, column: 11, scope: !11314)
!11319 = !DILocation(line: 1816, column: 46, scope: !11314)
!11320 = !DILocation(line: 1816, column: 3, scope: !11314)
!11321 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !10995, file: !10995, line: 2426, type: !11322, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11324)
!11322 = !DISubroutineType(types: !11323)
!11323 = !{null, !1566, !195}
!11324 = !{!11325, !11326}
!11325 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11321, file: !10995, line: 2426, type: !1566)
!11326 = !DILocalVariable(name: "Value", arg: 2, scope: !11321, file: !10995, line: 2426, type: !195)
!11327 = !DILocation(line: 0, scope: !11321)
!11328 = !DILocation(line: 2428, column: 16, scope: !11321)
!11329 = !DILocation(line: 2428, column: 11, scope: !11321)
!11330 = !DILocation(line: 2428, column: 14, scope: !11321)
!11331 = !DILocation(line: 2429, column: 1, scope: !11321)
!11332 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !10995, file: !10995, line: 1792, type: !10996, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11333)
!11333 = !{!11334}
!11334 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11332, file: !10995, line: 1792, type: !1566)
!11335 = !DILocation(line: 0, scope: !11332)
!11336 = !DILocation(line: 1794, column: 11, scope: !11332)
!11337 = !DILocation(line: 1794, column: 47, scope: !11332)
!11338 = !DILocation(line: 1794, column: 3, scope: !11332)
!11339 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !10995, file: !10995, line: 2403, type: !11340, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11342)
!11340 = !DISubroutineType(types: !11341)
!11341 = !{!195, !1566}
!11342 = !{!11343}
!11343 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11339, file: !10995, line: 2403, type: !1566)
!11344 = !DILocation(line: 0, scope: !11339)
!11345 = !DILocation(line: 2405, column: 20, scope: !11339)
!11346 = !DILocation(line: 2405, column: 10, scope: !11339)
!11347 = !DILocation(line: 2405, column: 3, scope: !11339)
!11348 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1620, file: !1620, line: 1583, type: !1546, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11349)
!11349 = !{!11350, !11351, !11352, !11353, !11354, !11355}
!11350 = !DILocalVariable(name: "dev", arg: 1, scope: !11348, file: !1620, line: 1583, type: !1525)
!11351 = !DILocalVariable(name: "config", scope: !11348, file: !1620, line: 1585, type: !10686)
!11352 = !DILocalVariable(name: "data", scope: !11348, file: !1620, line: 1586, type: !10809)
!11353 = !DILocalVariable(name: "ll_parity", scope: !11348, file: !1620, line: 1587, type: !152)
!11354 = !DILocalVariable(name: "ll_datawidth", scope: !11348, file: !1620, line: 1588, type: !152)
!11355 = !DILocalVariable(name: "err", scope: !11348, file: !1620, line: 1589, type: !107)
!11356 = !DILocation(line: 0, scope: !11348)
!11357 = !DILocation(line: 1585, column: 48, scope: !11348)
!11358 = !DILocation(line: 1586, column: 38, scope: !11348)
!11359 = !DILocation(line: 1591, column: 2, scope: !11348)
!11360 = !DILocation(line: 1593, column: 29, scope: !11361)
!11361 = distinct !DILexicalBlock(scope: !11348, file: !1620, line: 1593, column: 6)
!11362 = !DILocation(line: 1593, column: 7, scope: !11361)
!11363 = !DILocation(line: 1593, column: 6, scope: !11348)
!11364 = !DILocation(line: 1594, column: 3, scope: !11365)
!11365 = distinct !DILexicalBlock(scope: !11366, file: !1620, line: 1594, column: 3)
!11366 = distinct !DILexicalBlock(scope: !11367, file: !1620, line: 1594, column: 3)
!11367 = distinct !DILexicalBlock(scope: !11368, file: !1620, line: 1594, column: 3)
!11368 = distinct !DILexicalBlock(scope: !11369, file: !1620, line: 1594, column: 3)
!11369 = distinct !DILexicalBlock(scope: !11361, file: !1620, line: 1593, column: 37)
!11370 = !DILocation(line: 1595, column: 3, scope: !11369)
!11371 = !DILocation(line: 1599, column: 31, scope: !11348)
!11372 = !DILocation(line: 1599, column: 71, scope: !11348)
!11373 = !DILocation(line: 1599, column: 8, scope: !11348)
!11374 = !DILocation(line: 1600, column: 10, scope: !11375)
!11375 = distinct !DILexicalBlock(scope: !11348, file: !1620, line: 1600, column: 6)
!11376 = !DILocation(line: 1600, column: 6, scope: !11348)
!11377 = !DILocation(line: 1601, column: 3, scope: !11378)
!11378 = distinct !DILexicalBlock(scope: !11379, file: !1620, line: 1601, column: 3)
!11379 = distinct !DILexicalBlock(scope: !11380, file: !1620, line: 1601, column: 3)
!11380 = distinct !DILexicalBlock(scope: !11381, file: !1620, line: 1601, column: 3)
!11381 = distinct !DILexicalBlock(scope: !11382, file: !1620, line: 1601, column: 3)
!11382 = distinct !DILexicalBlock(scope: !11375, file: !1620, line: 1600, column: 16)
!11383 = !DILocation(line: 1602, column: 3, scope: !11382)
!11384 = !DILocation(line: 1616, column: 36, scope: !11348)
!11385 = !DILocation(line: 1616, column: 8, scope: !11348)
!11386 = !DILocation(line: 1617, column: 10, scope: !11387)
!11387 = distinct !DILexicalBlock(scope: !11348, file: !1620, line: 1617, column: 6)
!11388 = !DILocation(line: 1617, column: 6, scope: !11348)
!11389 = !DILocation(line: 1621, column: 27, scope: !11348)
!11390 = !DILocation(line: 1621, column: 2, scope: !11348)
!11391 = !DILocation(line: 1624, column: 40, scope: !11348)
!11392 = !DILocation(line: 1624, column: 2, scope: !11348)
!11393 = !DILocation(line: 1630, column: 14, scope: !11394)
!11394 = distinct !DILexicalBlock(scope: !11348, file: !1620, line: 1630, column: 6)
!11395 = !DILocation(line: 1630, column: 6, scope: !11348)
!11396 = !DILocation(line: 1640, column: 4, scope: !11397)
!11397 = distinct !DILexicalBlock(scope: !11398, file: !1620, line: 1640, column: 4)
!11398 = distinct !DILexicalBlock(scope: !11399, file: !1620, line: 1640, column: 4)
!11399 = distinct !DILexicalBlock(scope: !11400, file: !1620, line: 1640, column: 4)
!11400 = distinct !DILexicalBlock(scope: !11401, file: !1620, line: 1640, column: 4)
!11401 = distinct !DILexicalBlock(scope: !11402, file: !1620, line: 1639, column: 28)
!11402 = distinct !DILexicalBlock(scope: !11403, file: !1620, line: 1639, column: 7)
!11403 = distinct !DILexicalBlock(scope: !11404, file: !1620, line: 1638, column: 9)
!11404 = distinct !DILexicalBlock(scope: !11394, file: !1620, line: 1634, column: 13)
!11405 = !DILocation(line: 0, scope: !11394)
!11406 = !DILocation(line: 1649, column: 35, scope: !11348)
!11407 = !DILocation(line: 1649, column: 2, scope: !11348)
!11408 = !DILocation(line: 1654, column: 14, scope: !11409)
!11409 = distinct !DILexicalBlock(scope: !11348, file: !1620, line: 1654, column: 6)
!11410 = !DILocation(line: 1654, column: 6, scope: !11348)
!11411 = !DILocation(line: 1655, column: 3, scope: !11412)
!11412 = distinct !DILexicalBlock(scope: !11409, file: !1620, line: 1654, column: 31)
!11413 = !DILocation(line: 1656, column: 2, scope: !11412)
!11414 = !DILocation(line: 1659, column: 37, scope: !11348)
!11415 = !DILocation(line: 1659, column: 2, scope: !11348)
!11416 = !DILocation(line: 1662, column: 14, scope: !11417)
!11417 = distinct !DILexicalBlock(scope: !11348, file: !1620, line: 1662, column: 6)
!11418 = !DILocation(line: 1662, column: 6, scope: !11348)
!11419 = !DILocation(line: 1663, column: 37, scope: !11420)
!11420 = distinct !DILexicalBlock(scope: !11417, file: !1620, line: 1662, column: 27)
!11421 = !DILocation(line: 1663, column: 3, scope: !11420)
!11422 = !DILocation(line: 1664, column: 2, scope: !11420)
!11423 = !DILocation(line: 1684, column: 26, scope: !11348)
!11424 = !DILocation(line: 1684, column: 2, scope: !11348)
!11425 = !DILocation(line: 1722, column: 2, scope: !11348)
!11426 = !DILocation(line: 1724, column: 1, scope: !11348)
!11427 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1620, file: !1620, line: 651, type: !11428, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11430)
!11428 = !DISubroutineType(types: !11429)
!11429 = !{null, !1525}
!11430 = !{!11431, !11432, !11433}
!11431 = !DILocalVariable(name: "dev", arg: 1, scope: !11427, file: !1620, line: 651, type: !1525)
!11432 = !DILocalVariable(name: "data", scope: !11427, file: !1620, line: 653, type: !10809)
!11433 = !DILocalVariable(name: "clk", scope: !11427, file: !1620, line: 654, type: !11434)
!11434 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1525)
!11435 = !DILocation(line: 0, scope: !11427)
!11436 = !DILocation(line: 653, column: 38, scope: !11427)
!11437 = !DILocation(line: 656, column: 8, scope: !11427)
!11438 = !DILocation(line: 656, column: 14, scope: !11427)
!11439 = !DILocation(line: 657, column: 1, scope: !11427)
!11440 = distinct !DISubprogram(name: "device_is_ready", scope: !9805, file: !9805, line: 47, type: !11441, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11443)
!11441 = !DISubroutineType(types: !11442)
!11442 = !{!145, !1525}
!11443 = !{!11444}
!11444 = !DILocalVariable(name: "dev", arg: 1, scope: !11440, file: !9805, line: 47, type: !1525)
!11445 = !DILocation(line: 0, scope: !11440)
!11446 = !DILocation(line: 55, column: 2, scope: !11447)
!11447 = distinct !DILexicalBlock(scope: !11440, file: !9805, line: 55, column: 2)
!11448 = !{i64 2155380986}
!11449 = !DILocation(line: 56, column: 9, scope: !11440)
!11450 = !DILocation(line: 56, column: 2, scope: !11440)
!11451 = distinct !DISubprogram(name: "clock_control_on", scope: !980, file: !980, line: 123, type: !1584, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11452)
!11452 = !{!11453, !11454, !11455}
!11453 = !DILocalVariable(name: "dev", arg: 1, scope: !11451, file: !980, line: 123, type: !1525)
!11454 = !DILocalVariable(name: "sys", arg: 2, scope: !11451, file: !980, line: 124, type: !1076)
!11455 = !DILocalVariable(name: "api", scope: !11451, file: !980, line: 126, type: !1577)
!11456 = !DILocation(line: 0, scope: !11451)
!11457 = !DILocation(line: 127, column: 49, scope: !11451)
!11458 = !DILocation(line: 129, column: 14, scope: !11451)
!11459 = !DILocation(line: 129, column: 9, scope: !11451)
!11460 = !DILocation(line: 129, column: 2, scope: !11451)
!11461 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1684, file: !1684, line: 342, type: !11462, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11464)
!11462 = !DISubroutineType(types: !11463)
!11463 = !{!107, !1681, !195}
!11464 = !{!11465, !11466, !11467, !11468}
!11465 = !DILocalVariable(name: "config", arg: 1, scope: !11461, file: !1684, line: 342, type: !1681)
!11466 = !DILocalVariable(name: "id", arg: 2, scope: !11461, file: !1684, line: 343, type: !195)
!11467 = !DILocalVariable(name: "ret", scope: !11461, file: !1684, line: 345, type: !107)
!11468 = !DILocalVariable(name: "state", scope: !11461, file: !1684, line: 346, type: !1687)
!11469 = !DILocation(line: 0, scope: !11461)
!11470 = !DILocation(line: 346, column: 2, scope: !11461)
!11471 = !DILocation(line: 348, column: 8, scope: !11461)
!11472 = !DILocation(line: 349, column: 10, scope: !11473)
!11473 = distinct !DILexicalBlock(scope: !11461, file: !1684, line: 349, column: 6)
!11474 = !DILocation(line: 349, column: 6, scope: !11461)
!11475 = !DILocation(line: 353, column: 44, scope: !11461)
!11476 = !DILocation(line: 353, column: 9, scope: !11461)
!11477 = !DILocation(line: 353, column: 2, scope: !11461)
!11478 = !DILocation(line: 354, column: 1, scope: !11461)
!11479 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !10995, file: !10995, line: 497, type: !11173, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11480)
!11480 = !{!11481, !11482, !11483}
!11481 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11479, file: !10995, line: 497, type: !1566)
!11482 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !11479, file: !10995, line: 497, type: !152)
!11483 = !DILocalVariable(name: "val", scope: !11484, file: !10995, line: 499, type: !152)
!11484 = distinct !DILexicalBlock(scope: !11479, file: !10995, line: 499, column: 3)
!11485 = !DILocation(line: 0, scope: !11479)
!11486 = !DILocation(line: 499, column: 3, scope: !11484)
!11487 = !DILocalVariable(name: "addr", arg: 1, scope: !11488, file: !6318, line: 476, type: !1616)
!11488 = distinct !DISubprogram(name: "__LDREXW", scope: !6318, file: !6318, line: 476, type: !11489, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11491)
!11489 = !DISubroutineType(types: !11490)
!11490 = !{!152, !1616}
!11491 = !{!11487, !11492}
!11492 = !DILocalVariable(name: "result", scope: !11488, file: !6318, line: 478, type: !152)
!11493 = !DILocation(line: 0, scope: !11488, inlinedAt: !11494)
!11494 = distinct !DILocation(line: 499, column: 3, scope: !11495)
!11495 = distinct !DILexicalBlock(scope: !11484, file: !10995, line: 499, column: 3)
!11496 = !DILocation(line: 480, column: 4, scope: !11488, inlinedAt: !11494)
!11497 = !{i64 3762724}
!11498 = !DILocation(line: 499, column: 3, scope: !11495)
!11499 = !DILocation(line: 0, scope: !11484)
!11500 = !DILocalVariable(name: "value", arg: 1, scope: !11501, file: !6318, line: 527, type: !152)
!11501 = distinct !DISubprogram(name: "__STREXW", scope: !6318, file: !6318, line: 527, type: !11502, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11504)
!11502 = !DISubroutineType(types: !11503)
!11503 = !{!152, !152, !1616}
!11504 = !{!11500, !11505, !11506}
!11505 = !DILocalVariable(name: "addr", arg: 2, scope: !11501, file: !6318, line: 527, type: !1616)
!11506 = !DILocalVariable(name: "result", scope: !11501, file: !6318, line: 529, type: !152)
!11507 = !DILocation(line: 0, scope: !11501, inlinedAt: !11508)
!11508 = distinct !DILocation(line: 499, column: 3, scope: !11484)
!11509 = !DILocation(line: 531, column: 4, scope: !11501, inlinedAt: !11508)
!11510 = !{i64 3764160}
!11511 = distinct !{!11511, !11486, !11486}
!11512 = !DILocation(line: 500, column: 1, scope: !11479)
!11513 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !10995, file: !10995, line: 850, type: !11182, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11514)
!11514 = !{!11515, !11516, !11517, !11518}
!11515 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11513, file: !10995, line: 850, type: !1566)
!11516 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11513, file: !10995, line: 850, type: !152)
!11517 = !DILocalVariable(name: "Parity", arg: 3, scope: !11513, file: !10995, line: 850, type: !152)
!11518 = !DILocalVariable(name: "StopBits", arg: 4, scope: !11513, file: !10995, line: 851, type: !152)
!11519 = !DILocation(line: 0, scope: !11513)
!11520 = !DILocation(line: 853, column: 3, scope: !11513)
!11521 = !DILocation(line: 854, column: 3, scope: !11513)
!11522 = !DILocation(line: 855, column: 1, scope: !11513)
!11523 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !10995, file: !10995, line: 1337, type: !11058, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11524)
!11524 = !{!11525}
!11525 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11523, file: !10995, line: 1337, type: !1566)
!11526 = !DILocation(line: 0, scope: !11523)
!11527 = !DILocation(line: 1339, column: 3, scope: !11523)
!11528 = !DILocation(line: 1340, column: 1, scope: !11523)
!11529 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1684, file: !1684, line: 316, type: !11530, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11532)
!11530 = !DISubroutineType(types: !11531)
!11531 = !{!107, !1681, !1687}
!11532 = !{!11533, !11534, !11535}
!11533 = !DILocalVariable(name: "config", arg: 1, scope: !11529, file: !1684, line: 317, type: !1681)
!11534 = !DILocalVariable(name: "state", arg: 2, scope: !11529, file: !1684, line: 318, type: !1687)
!11535 = !DILocalVariable(name: "reg", scope: !11529, file: !1684, line: 320, type: !22)
!11536 = !DILocation(line: 0, scope: !11529)
!11537 = !DILocation(line: 329, column: 39, scope: !11529)
!11538 = !DILocation(line: 329, column: 52, scope: !11529)
!11539 = !DILocation(line: 329, column: 9, scope: !11529)
!11540 = !DILocation(line: 329, column: 2, scope: !11529)
!11541 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !247, file: !247, line: 730, type: !11441, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11542)
!11542 = !{!11543}
!11543 = !DILocalVariable(name: "dev", arg: 1, scope: !11541, file: !247, line: 730, type: !1525)
!11544 = !DILocation(line: 0, scope: !11541)
!11545 = !DILocation(line: 732, column: 9, scope: !11541)
!11546 = !DILocation(line: 732, column: 2, scope: !11541)
!11547 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1843, file: !1843, line: 270, type: !1849, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1765, retainedNodes: !11548)
!11548 = !{!11549}
!11549 = !DILocalVariable(name: "dev", arg: 1, scope: !11547, file: !1843, line: 270, type: !1851)
!11550 = !DILocation(line: 0, scope: !11547)
!11551 = !DILocation(line: 274, column: 2, scope: !11547)
!11552 = !DILocation(line: 275, column: 12, scope: !11547)
!11553 = !DILocation(line: 276, column: 15, scope: !11547)
!11554 = !DILocation(line: 277, column: 16, scope: !11547)
!11555 = !DILocation(line: 278, column: 15, scope: !11547)
!11556 = !DILocation(line: 279, column: 16, scope: !11547)
!11557 = !DILocation(line: 282, column: 2, scope: !11547)
!11558 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !463, file: !463, line: 1814, type: !6358, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1765, retainedNodes: !11559)
!11559 = !{!11560, !11561}
!11560 = !DILocalVariable(name: "IRQn", arg: 1, scope: !11558, file: !463, line: 1814, type: !930)
!11561 = !DILocalVariable(name: "priority", arg: 2, scope: !11558, file: !463, line: 1814, type: !152)
!11562 = !DILocation(line: 0, scope: !11558)
!11563 = !DILocation(line: 1822, column: 46, scope: !11564)
!11564 = distinct !DILexicalBlock(scope: !11565, file: !463, line: 1821, column: 3)
!11565 = distinct !DILexicalBlock(scope: !11558, file: !463, line: 1816, column: 7)
!11566 = !DILocation(line: 1824, column: 1, scope: !11558)
!11567 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1843, file: !1843, line: 118, type: !131, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1765, retainedNodes: !11568)
!11568 = !{!11569, !11570}
!11569 = !DILocalVariable(name: "arg", arg: 1, scope: !11567, file: !1843, line: 118, type: !106)
!11570 = !DILocalVariable(name: "dticks", scope: !11567, file: !1843, line: 121, type: !152)
!11571 = !DILocation(line: 0, scope: !11567)
!11572 = !DILocation(line: 124, column: 2, scope: !11567)
!11573 = !DILocation(line: 129, column: 17, scope: !11567)
!11574 = !DILocation(line: 129, column: 14, scope: !11567)
!11575 = !DILocation(line: 130, column: 15, scope: !11567)
!11576 = !DILocation(line: 145, column: 27, scope: !11577)
!11577 = distinct !DILexicalBlock(scope: !11578, file: !1843, line: 132, column: 16)
!11578 = distinct !DILexicalBlock(scope: !11567, file: !1843, line: 132, column: 6)
!11579 = !DILocation(line: 145, column: 25, scope: !11577)
!11580 = !DILocation(line: 145, column: 45, scope: !11577)
!11581 = !DILocation(line: 146, column: 30, scope: !11577)
!11582 = !DILocation(line: 146, column: 20, scope: !11577)
!11583 = !DILocation(line: 147, column: 3, scope: !11577)
!11584 = !DILocation(line: 151, column: 2, scope: !11567)
!11585 = !DILocation(line: 152, column: 1, scope: !11567)
!11586 = distinct !DISubprogram(name: "elapsed", scope: !1843, file: !1843, line: 85, type: !6405, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1765, retainedNodes: !11587)
!11587 = !{!11588, !11589, !11590}
!11588 = !DILocalVariable(name: "val1", scope: !11586, file: !1843, line: 87, type: !152)
!11589 = !DILocalVariable(name: "ctrl", scope: !11586, file: !1843, line: 88, type: !152)
!11590 = !DILocalVariable(name: "val2", scope: !11586, file: !1843, line: 89, type: !152)
!11591 = !DILocation(line: 87, column: 27, scope: !11586)
!11592 = !DILocation(line: 0, scope: !11586)
!11593 = !DILocation(line: 88, column: 27, scope: !11586)
!11594 = !DILocation(line: 89, column: 27, scope: !11586)
!11595 = !DILocation(line: 105, column: 12, scope: !11596)
!11596 = distinct !DILexicalBlock(scope: !11586, file: !1843, line: 105, column: 6)
!11597 = !DILocation(line: 106, column: 6, scope: !11596)
!11598 = !DILocation(line: 107, column: 16, scope: !11599)
!11599 = distinct !DILexicalBlock(scope: !11596, file: !1843, line: 106, column: 24)
!11600 = !DILocation(line: 111, column: 18, scope: !11599)
!11601 = !DILocation(line: 112, column: 2, scope: !11599)
!11602 = !DILocation(line: 114, column: 20, scope: !11586)
!11603 = !DILocation(line: 114, column: 30, scope: !11586)
!11604 = !DILocation(line: 114, column: 28, scope: !11586)
!11605 = !DILocation(line: 114, column: 2, scope: !11586)
!11606 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1843, file: !1843, line: 154, type: !11607, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1765, retainedNodes: !11609)
!11607 = !DISubroutineType(types: !11608)
!11608 = !{null, !904, !145}
!11609 = !{!11610, !11611, !11612, !11613, !11614, !11615, !11616, !11621, !11622}
!11610 = !DILocalVariable(name: "ticks", arg: 1, scope: !11606, file: !1843, line: 154, type: !904)
!11611 = !DILocalVariable(name: "idle", arg: 2, scope: !11606, file: !1843, line: 154, type: !145)
!11612 = !DILocalVariable(name: "delay", scope: !11606, file: !1843, line: 169, type: !152)
!11613 = !DILocalVariable(name: "val1", scope: !11606, file: !1843, line: 170, type: !152)
!11614 = !DILocalVariable(name: "val2", scope: !11606, file: !1843, line: 170, type: !152)
!11615 = !DILocalVariable(name: "last_load_", scope: !11606, file: !1843, line: 171, type: !152)
!11616 = !DILocalVariable(name: "key", scope: !11606, file: !1843, line: 176, type: !11617)
!11617 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !420, line: 106, baseType: !11618)
!11618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !420, line: 32, size: 32, elements: !11619)
!11619 = !{!11620}
!11620 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !11618, file: !420, line: 33, baseType: !107, size: 32)
!11621 = !DILocalVariable(name: "pending", scope: !11606, file: !1843, line: 178, type: !152)
!11622 = !DILocalVariable(name: "unannounced", scope: !11606, file: !1843, line: 185, type: !152)
!11623 = !DILocation(line: 0, scope: !11606)
!11624 = !DILocation(line: 162, column: 49, scope: !11625)
!11625 = distinct !DILexicalBlock(scope: !11606, file: !1843, line: 162, column: 6)
!11626 = !DILocation(line: 163, column: 17, scope: !11627)
!11627 = distinct !DILexicalBlock(scope: !11625, file: !1843, line: 162, column: 78)
!11628 = !DILocation(line: 164, column: 13, scope: !11627)
!11629 = !DILocation(line: 165, column: 3, scope: !11627)
!11630 = !DILocation(line: 171, column: 24, scope: !11606)
!11631 = !DILocation(line: 173, column: 10, scope: !11606)
!11632 = !DILocation(line: 174, column: 10, scope: !11606)
!11633 = !DILocalVariable(name: "l", arg: 1, scope: !11634, file: !420, line: 136, type: !11637)
!11634 = distinct !DISubprogram(name: "k_spin_lock", scope: !420, file: !420, line: 136, type: !11635, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1765, retainedNodes: !11638)
!11635 = !DISubroutineType(types: !11636)
!11636 = !{!11617, !11637}
!11637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1869, size: 32)
!11638 = !{!11633, !11639}
!11639 = !DILocalVariable(name: "k", scope: !11634, file: !420, line: 139, type: !11617)
!11640 = !DILocation(line: 0, scope: !11634, inlinedAt: !11641)
!11641 = distinct !DILocation(line: 176, column: 25, scope: !11606)
!11642 = !DILocation(line: 55, column: 2, scope: !11643, inlinedAt: !11647)
!11643 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5999, file: !5999, line: 42, type: !6000, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1765, retainedNodes: !11644)
!11644 = !{!11645, !11646}
!11645 = !DILocalVariable(name: "key", scope: !11643, file: !5999, line: 44, type: !32)
!11646 = !DILocalVariable(name: "tmp", scope: !11643, file: !5999, line: 53, type: !32)
!11647 = distinct !DILocation(line: 145, column: 10, scope: !11634, inlinedAt: !11641)
!11648 = !{i64 2284322}
!11649 = !DILocation(line: 0, scope: !11643, inlinedAt: !11647)
!11650 = !DILocation(line: 148, column: 2, scope: !11651, inlinedAt: !11641)
!11651 = distinct !DILexicalBlock(scope: !11652, file: !420, line: 148, column: 2)
!11652 = distinct !DILexicalBlock(scope: !11634, file: !420, line: 148, column: 2)
!11653 = !DILocation(line: 148, column: 2, scope: !11652, inlinedAt: !11641)
!11654 = !DILocation(line: 148, column: 2, scope: !11655, inlinedAt: !11641)
!11655 = distinct !DILexicalBlock(scope: !11651, file: !420, line: 148, column: 2)
!11656 = !DILocation(line: 160, column: 2, scope: !11634, inlinedAt: !11641)
!11657 = !DILocation(line: 178, column: 21, scope: !11606)
!11658 = !DILocation(line: 180, column: 18, scope: !11606)
!11659 = !DILocation(line: 182, column: 14, scope: !11606)
!11660 = !DILocation(line: 183, column: 15, scope: !11606)
!11661 = !DILocation(line: 185, column: 39, scope: !11606)
!11662 = !DILocation(line: 185, column: 37, scope: !11606)
!11663 = !DILocation(line: 187, column: 27, scope: !11664)
!11664 = distinct !DILexicalBlock(scope: !11606, file: !1843, line: 187, column: 6)
!11665 = !DILocation(line: 187, column: 6, scope: !11606)
!11666 = !DILocation(line: 202, column: 27, scope: !11667)
!11667 = distinct !DILexicalBlock(scope: !11664, file: !1843, line: 195, column: 9)
!11668 = !DILocation(line: 202, column: 48, scope: !11667)
!11669 = !DILocation(line: 203, column: 9, scope: !11667)
!11670 = !DILocation(line: 204, column: 11, scope: !11667)
!11671 = !DILocation(line: 205, column: 13, scope: !11672)
!11672 = distinct !DILexicalBlock(scope: !11667, file: !1843, line: 205, column: 7)
!11673 = !DILocation(line: 205, column: 7, scope: !11667)
!11674 = !DILocation(line: 0, scope: !11664)
!11675 = !DILocation(line: 212, column: 18, scope: !11606)
!11676 = !DILocation(line: 214, column: 28, scope: !11606)
!11677 = !DILocation(line: 214, column: 16, scope: !11606)
!11678 = !DILocation(line: 215, column: 15, scope: !11606)
!11679 = !DILocation(line: 227, column: 11, scope: !11680)
!11680 = distinct !DILexicalBlock(scope: !11606, file: !1843, line: 227, column: 6)
!11681 = !DILocation(line: 227, column: 6, scope: !11606)
!11682 = !DILocation(line: 228, column: 15, scope: !11683)
!11683 = distinct !DILexicalBlock(scope: !11680, file: !1843, line: 227, column: 19)
!11684 = !DILocation(line: 228, column: 38, scope: !11683)
!11685 = !DILocation(line: 228, column: 24, scope: !11683)
!11686 = !DILocation(line: 229, column: 2, scope: !11683)
!11687 = !DILocation(line: 230, column: 24, scope: !11688)
!11688 = distinct !DILexicalBlock(scope: !11680, file: !1843, line: 229, column: 9)
!11689 = !DILocation(line: 230, column: 15, scope: !11688)
!11690 = !DILocation(line: 0, scope: !11680)
!11691 = !DILocalVariable(name: "key", arg: 2, scope: !11692, file: !420, line: 190, type: !11617)
!11692 = distinct !DISubprogram(name: "k_spin_unlock", scope: !420, file: !420, line: 189, type: !11693, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1765, retainedNodes: !11695)
!11693 = !DISubroutineType(types: !11694)
!11694 = !{null, !11637, !11617}
!11695 = !{!11696, !11691}
!11696 = !DILocalVariable(name: "l", arg: 1, scope: !11692, file: !420, line: 189, type: !11637)
!11697 = !DILocation(line: 0, scope: !11692, inlinedAt: !11698)
!11698 = distinct !DILocation(line: 232, column: 2, scope: !11606)
!11699 = !DILocation(line: 194, column: 2, scope: !11700, inlinedAt: !11698)
!11700 = distinct !DILexicalBlock(scope: !11701, file: !420, line: 194, column: 2)
!11701 = distinct !DILexicalBlock(scope: !11692, file: !420, line: 194, column: 2)
!11702 = !DILocation(line: 194, column: 2, scope: !11701, inlinedAt: !11698)
!11703 = !DILocation(line: 194, column: 2, scope: !11704, inlinedAt: !11698)
!11704 = distinct !DILexicalBlock(scope: !11700, file: !420, line: 194, column: 2)
!11705 = !DILocalVariable(name: "key", arg: 1, scope: !11706, file: !5999, line: 84, type: !32)
!11706 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5999, file: !5999, line: 84, type: !6010, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1765, retainedNodes: !11707)
!11707 = !{!11705}
!11708 = !DILocation(line: 0, scope: !11706, inlinedAt: !11709)
!11709 = distinct !DILocation(line: 215, column: 2, scope: !11692, inlinedAt: !11698)
!11710 = !DILocation(line: 95, column: 2, scope: !11706, inlinedAt: !11709)
!11711 = !{i64 2285139}
!11712 = !DILocation(line: 234, column: 1, scope: !11606)
!11713 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1843, file: !1843, line: 236, type: !6405, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1765, retainedNodes: !11714)
!11714 = !{!11715, !11716}
!11715 = !DILocalVariable(name: "key", scope: !11713, file: !1843, line: 242, type: !11617)
!11716 = !DILocalVariable(name: "cyc", scope: !11713, file: !1843, line: 243, type: !152)
!11717 = !DILocation(line: 0, scope: !11634, inlinedAt: !11718)
!11718 = distinct !DILocation(line: 242, column: 25, scope: !11713)
!11719 = !DILocation(line: 55, column: 2, scope: !11643, inlinedAt: !11720)
!11720 = distinct !DILocation(line: 145, column: 10, scope: !11634, inlinedAt: !11718)
!11721 = !DILocation(line: 0, scope: !11643, inlinedAt: !11720)
!11722 = !DILocation(line: 148, column: 2, scope: !11651, inlinedAt: !11718)
!11723 = !DILocation(line: 148, column: 2, scope: !11652, inlinedAt: !11718)
!11724 = !DILocation(line: 148, column: 2, scope: !11655, inlinedAt: !11718)
!11725 = !DILocation(line: 160, column: 2, scope: !11634, inlinedAt: !11718)
!11726 = !DILocation(line: 0, scope: !11713)
!11727 = !DILocation(line: 243, column: 17, scope: !11713)
!11728 = !DILocation(line: 243, column: 29, scope: !11713)
!11729 = !DILocation(line: 243, column: 43, scope: !11713)
!11730 = !DILocation(line: 0, scope: !11692, inlinedAt: !11731)
!11731 = distinct !DILocation(line: 245, column: 2, scope: !11713)
!11732 = !DILocation(line: 194, column: 2, scope: !11700, inlinedAt: !11731)
!11733 = !DILocation(line: 194, column: 2, scope: !11701, inlinedAt: !11731)
!11734 = !DILocation(line: 194, column: 2, scope: !11704, inlinedAt: !11731)
!11735 = !DILocation(line: 243, column: 27, scope: !11713)
!11736 = !DILocation(line: 243, column: 41, scope: !11713)
!11737 = !DILocation(line: 0, scope: !11706, inlinedAt: !11738)
!11738 = distinct !DILocation(line: 215, column: 2, scope: !11692, inlinedAt: !11731)
!11739 = !DILocation(line: 95, column: 2, scope: !11706, inlinedAt: !11738)
!11740 = !DILocation(line: 246, column: 13, scope: !11713)
!11741 = !DILocation(line: 246, column: 2, scope: !11713)
!11742 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1843, file: !1843, line: 249, type: !6405, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1765, retainedNodes: !11743)
!11743 = !{!11744, !11745}
!11744 = !DILocalVariable(name: "key", scope: !11742, file: !1843, line: 251, type: !11617)
!11745 = !DILocalVariable(name: "ret", scope: !11742, file: !1843, line: 252, type: !152)
!11746 = !DILocation(line: 0, scope: !11634, inlinedAt: !11747)
!11747 = distinct !DILocation(line: 251, column: 25, scope: !11742)
!11748 = !DILocation(line: 55, column: 2, scope: !11643, inlinedAt: !11749)
!11749 = distinct !DILocation(line: 145, column: 10, scope: !11634, inlinedAt: !11747)
!11750 = !DILocation(line: 0, scope: !11643, inlinedAt: !11749)
!11751 = !DILocation(line: 148, column: 2, scope: !11651, inlinedAt: !11747)
!11752 = !DILocation(line: 148, column: 2, scope: !11652, inlinedAt: !11747)
!11753 = !DILocation(line: 148, column: 2, scope: !11655, inlinedAt: !11747)
!11754 = !DILocation(line: 160, column: 2, scope: !11634, inlinedAt: !11747)
!11755 = !DILocation(line: 0, scope: !11742)
!11756 = !DILocation(line: 252, column: 17, scope: !11742)
!11757 = !DILocation(line: 252, column: 29, scope: !11742)
!11758 = !DILocation(line: 0, scope: !11692, inlinedAt: !11759)
!11759 = distinct !DILocation(line: 254, column: 2, scope: !11742)
!11760 = !DILocation(line: 194, column: 2, scope: !11700, inlinedAt: !11759)
!11761 = !DILocation(line: 194, column: 2, scope: !11701, inlinedAt: !11759)
!11762 = !DILocation(line: 194, column: 2, scope: !11704, inlinedAt: !11759)
!11763 = !DILocation(line: 252, column: 27, scope: !11742)
!11764 = !DILocation(line: 0, scope: !11706, inlinedAt: !11765)
!11765 = distinct !DILocation(line: 215, column: 2, scope: !11692, inlinedAt: !11759)
!11766 = !DILocation(line: 95, column: 2, scope: !11706, inlinedAt: !11765)
!11767 = !DILocation(line: 255, column: 2, scope: !11742)
!11768 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1843, file: !1843, line: 258, type: !3148, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1765, retainedNodes: !2236)
!11769 = !DILocation(line: 260, column: 6, scope: !11770)
!11770 = distinct !DILexicalBlock(scope: !11768, file: !1843, line: 260, column: 6)
!11771 = !DILocation(line: 260, column: 16, scope: !11770)
!11772 = !DILocation(line: 260, column: 6, scope: !11768)
!11773 = !DILocation(line: 261, column: 17, scope: !11774)
!11774 = distinct !DILexicalBlock(scope: !11770, file: !1843, line: 260, column: 34)
!11775 = !DILocation(line: 262, column: 2, scope: !11774)
!11776 = !DILocation(line: 263, column: 1, scope: !11768)
!11777 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1843, file: !1843, line: 265, type: !3148, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1765, retainedNodes: !2236)
!11778 = !DILocation(line: 267, column: 16, scope: !11777)
!11779 = !DILocation(line: 268, column: 1, scope: !11777)
!11780 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !11781, file: !11781, line: 9, type: !11782, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2976, retainedNodes: !11805)
!11781 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11782 = !DISubroutineType(types: !11783)
!11783 = !{!107, !11784, !195, !11804}
!11784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11785, size: 32)
!11785 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11786)
!11786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1684, line: 60, size: 64, elements: !11787)
!11787 = !{!11788, !11803}
!11788 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !11786, file: !1684, line: 69, baseType: !11789, size: 32)
!11789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11790, size: 32)
!11790 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11791)
!11791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1684, line: 50, size: 64, elements: !11792)
!11792 = !{!11793, !11801, !11802}
!11793 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !11791, file: !1684, line: 52, baseType: !11794, size: 32)
!11794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11795, size: 32)
!11795 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11796)
!11796 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1695, line: 37, baseType: !11797)
!11797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1695, line: 32, size: 64, elements: !11798)
!11798 = !{!11799, !11800}
!11799 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !11797, file: !1695, line: 34, baseType: !152, size: 32)
!11800 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !11797, file: !1695, line: 36, baseType: !152, size: 32, offset: 32)
!11801 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !11791, file: !1684, line: 54, baseType: !195, size: 8, offset: 32)
!11802 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !11791, file: !1684, line: 56, baseType: !195, size: 8, offset: 40)
!11803 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !11786, file: !1684, line: 71, baseType: !195, size: 8, offset: 32)
!11804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11789, size: 32)
!11805 = !{!11806, !11807, !11808}
!11806 = !DILocalVariable(name: "config", arg: 1, scope: !11780, file: !11781, line: 9, type: !11784)
!11807 = !DILocalVariable(name: "id", arg: 2, scope: !11780, file: !11781, line: 9, type: !195)
!11808 = !DILocalVariable(name: "state", arg: 3, scope: !11780, file: !11781, line: 10, type: !11804)
!11809 = !DILocation(line: 0, scope: !11780)
!11810 = !DILocation(line: 12, column: 20, scope: !11780)
!11811 = !DILocation(line: 13, column: 27, scope: !11780)
!11812 = !DILocation(line: 13, column: 42, scope: !11780)
!11813 = !DILocation(line: 13, column: 19, scope: !11780)
!11814 = !DILocation(line: 13, column: 16, scope: !11780)
!11815 = !DILocation(line: 13, column: 2, scope: !11780)
!11816 = distinct !{!11816, !11815, !11817}
!11817 = !DILocation(line: 19, column: 2, scope: !11780)
!11818 = !DILocation(line: 14, column: 23, scope: !11819)
!11819 = distinct !DILexicalBlock(scope: !11820, file: !11781, line: 14, column: 7)
!11820 = distinct !DILexicalBlock(scope: !11780, file: !11781, line: 13, column: 54)
!11821 = !DILocation(line: 14, column: 10, scope: !11819)
!11822 = !DILocation(line: 18, column: 11, scope: !11820)
!11823 = !DILocation(line: 14, column: 7, scope: !11820)
!11824 = !DILocation(line: 22, column: 1, scope: !11780)
!11825 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1962, file: !1962, line: 193, type: !11826, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1880, retainedNodes: !11835)
!11826 = !DISubroutineType(types: !11827)
!11827 = !{!107, !11828, !195, !22}
!11828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11829, size: 32)
!11829 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11830)
!11830 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1695, line: 37, baseType: !11831)
!11831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1695, line: 32, size: 64, elements: !11832)
!11832 = !{!11833, !11834}
!11833 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !11831, file: !1695, line: 34, baseType: !152, size: 32)
!11834 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !11831, file: !1695, line: 36, baseType: !152, size: 32, offset: 32)
!11835 = !{!11836, !11837, !11838, !11839, !11840, !11841, !11842, !11843, !11845}
!11836 = !DILocalVariable(name: "pins", arg: 1, scope: !11825, file: !1962, line: 193, type: !11828)
!11837 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !11825, file: !1962, line: 193, type: !195)
!11838 = !DILocalVariable(name: "reg", arg: 3, scope: !11825, file: !1962, line: 194, type: !22)
!11839 = !DILocalVariable(name: "pin", scope: !11825, file: !1962, line: 196, type: !152)
!11840 = !DILocalVariable(name: "mux", scope: !11825, file: !1962, line: 196, type: !152)
!11841 = !DILocalVariable(name: "pin_cgf", scope: !11825, file: !1962, line: 197, type: !152)
!11842 = !DILocalVariable(name: "ret", scope: !11825, file: !1962, line: 198, type: !107)
!11843 = !DILocalVariable(name: "i", scope: !11844, file: !1962, line: 209, type: !195)
!11844 = distinct !DILexicalBlock(scope: !11825, file: !1962, line: 209, column: 2)
!11845 = !DILocalVariable(name: "gpio_out", scope: !11846, file: !1962, line: 239, type: !152)
!11846 = distinct !DILexicalBlock(scope: !11847, file: !1962, line: 238, column: 55)
!11847 = distinct !DILexicalBlock(scope: !11848, file: !1962, line: 238, column: 14)
!11848 = distinct !DILexicalBlock(scope: !11849, file: !1962, line: 236, column: 14)
!11849 = distinct !DILexicalBlock(scope: !11850, file: !1962, line: 234, column: 7)
!11850 = distinct !DILexicalBlock(scope: !11851, file: !1962, line: 209, column: 41)
!11851 = distinct !DILexicalBlock(scope: !11844, file: !1962, line: 209, column: 2)
!11852 = !DILocation(line: 0, scope: !11825)
!11853 = !DILocation(line: 0, scope: !11844)
!11854 = !DILocation(line: 209, column: 25, scope: !11851)
!11855 = !DILocation(line: 209, column: 2, scope: !11844)
!11856 = distinct !{!11856, !11855, !11857}
!11857 = !DILocation(line: 259, column: 2, scope: !11844)
!11858 = !DILocation(line: 210, column: 17, scope: !11850)
!11859 = !DILocation(line: 234, column: 7, scope: !11849)
!11860 = !DILocation(line: 234, column: 33, scope: !11849)
!11861 = !DILocation(line: 234, column: 7, scope: !11850)
!11862 = !DILocation(line: 235, column: 22, scope: !11863)
!11863 = distinct !DILexicalBlock(scope: !11849, file: !1962, line: 234, column: 49)
!11864 = !DILocation(line: 235, column: 29, scope: !11863)
!11865 = !DILocation(line: 236, column: 3, scope: !11863)
!11866 = !DILocation(line: 236, column: 14, scope: !11849)
!11867 = !DILocation(line: 239, column: 32, scope: !11846)
!11868 = !DILocation(line: 0, scope: !11846)
!11869 = !DILocation(line: 241, column: 8, scope: !11846)
!11870 = !DILocation(line: 246, column: 3, scope: !11846)
!11871 = !DILocation(line: 252, column: 9, scope: !11850)
!11872 = !DILocation(line: 255, column: 9, scope: !11850)
!11873 = !DILocation(line: 256, column: 11, scope: !11874)
!11874 = distinct !DILexicalBlock(scope: !11850, file: !1962, line: 256, column: 7)
!11875 = !DILocation(line: 209, column: 37, scope: !11851)
!11876 = !DILocation(line: 256, column: 7, scope: !11850)
!11877 = !DILocation(line: 262, column: 1, scope: !11825)
!11878 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1962, file: !1962, line: 176, type: !11879, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1880, retainedNodes: !11881)
!11879 = !DISubroutineType(types: !11880)
!11880 = !{!107, !152, !152, !152}
!11881 = !{!11882, !11883, !11884, !11885}
!11882 = !DILocalVariable(name: "pin", arg: 1, scope: !11878, file: !1962, line: 176, type: !152)
!11883 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !11878, file: !1962, line: 176, type: !152)
!11884 = !DILocalVariable(name: "pin_func", arg: 3, scope: !11878, file: !1962, line: 176, type: !152)
!11885 = !DILocalVariable(name: "port_device", scope: !11878, file: !1962, line: 178, type: !1892)
!11886 = !DILocation(line: 0, scope: !11878)
!11887 = !DILocation(line: 180, column: 22, scope: !11888)
!11888 = distinct !DILexicalBlock(scope: !11878, file: !1962, line: 180, column: 6)
!11889 = !DILocation(line: 180, column: 6, scope: !11878)
!11890 = !DILocation(line: 180, column: 6, scope: !11888)
!11891 = !DILocation(line: 184, column: 16, scope: !11878)
!11892 = !DILocation(line: 186, column: 19, scope: !11893)
!11893 = distinct !DILexicalBlock(scope: !11878, file: !1962, line: 186, column: 6)
!11894 = !DILocation(line: 186, column: 28, scope: !11893)
!11895 = !DILocation(line: 186, column: 33, scope: !11893)
!11896 = !DILocation(line: 186, column: 6, scope: !11878)
!11897 = !DILocation(line: 190, column: 43, scope: !11878)
!11898 = !DILocation(line: 190, column: 9, scope: !11878)
!11899 = !DILocation(line: 190, column: 2, scope: !11878)
!11900 = !DILocation(line: 191, column: 1, scope: !11878)
!11901 = distinct !DISubprogram(name: "device_is_ready", scope: !9805, file: !9805, line: 47, type: !11902, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1880, retainedNodes: !11904)
!11902 = !DISubroutineType(types: !11903)
!11903 = !{!145, !1892}
!11904 = !{!11905}
!11905 = !DILocalVariable(name: "dev", arg: 1, scope: !11901, file: !9805, line: 47, type: !1892)
!11906 = !DILocation(line: 0, scope: !11901)
!11907 = !DILocation(line: 55, column: 2, scope: !11908)
!11908 = distinct !DILexicalBlock(scope: !11901, file: !9805, line: 55, column: 2)
!11909 = !{i64 2149518331}
!11910 = !DILocation(line: 56, column: 9, scope: !11901)
!11911 = !DILocation(line: 56, column: 2, scope: !11901)
!11912 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !247, file: !247, line: 730, type: !11902, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1880, retainedNodes: !11913)
!11913 = !{!11914}
!11914 = !DILocalVariable(name: "dev", arg: 1, scope: !11912, file: !247, line: 730, type: !1892)
!11915 = !DILocation(line: 0, scope: !11912)
!11916 = !DILocation(line: 732, column: 9, scope: !11912)
!11917 = !DILocation(line: 732, column: 2, scope: !11912)
!11918 = distinct !DISubprogram(name: "SystemInit", scope: !2014, file: !2014, line: 167, type: !3148, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1970, retainedNodes: !2236)
!11919 = !DILocation(line: 182, column: 1, scope: !11918)
!11920 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !2014, file: !2014, line: 220, type: !3148, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1970, retainedNodes: !11921)
!11921 = !{!11922, !11923, !11924, !11925, !11926}
!11922 = !DILocalVariable(name: "tmp", scope: !11920, file: !2014, line: 222, type: !152)
!11923 = !DILocalVariable(name: "pllvco", scope: !11920, file: !2014, line: 222, type: !152)
!11924 = !DILocalVariable(name: "pllp", scope: !11920, file: !2014, line: 222, type: !152)
!11925 = !DILocalVariable(name: "pllsource", scope: !11920, file: !2014, line: 222, type: !152)
!11926 = !DILocalVariable(name: "pllm", scope: !11920, file: !2014, line: 222, type: !152)
!11927 = !DILocation(line: 0, scope: !11920)
!11928 = !DILocation(line: 225, column: 14, scope: !11920)
!11929 = !DILocation(line: 225, column: 19, scope: !11920)
!11930 = !DILocation(line: 227, column: 3, scope: !11920)
!11931 = !DILocation(line: 240, column: 25, scope: !11932)
!11932 = distinct !DILexicalBlock(scope: !11920, file: !2014, line: 228, column: 3)
!11933 = !DILocation(line: 241, column: 19, scope: !11932)
!11934 = !DILocation(line: 241, column: 27, scope: !11932)
!11935 = !DILocation(line: 0, scope: !11936)
!11936 = distinct !DILexicalBlock(scope: !11932, file: !2014, line: 243, column: 11)
!11937 = !DILocation(line: 254, column: 22, scope: !11932)
!11938 = !DILocation(line: 254, column: 62, scope: !11932)
!11939 = !DILocation(line: 255, column: 31, scope: !11932)
!11940 = !DILocation(line: 256, column: 7, scope: !11932)
!11941 = !DILocation(line: 0, scope: !11932)
!11942 = !DILocation(line: 263, column: 30, scope: !11920)
!11943 = !DILocation(line: 263, column: 52, scope: !11920)
!11944 = !DILocation(line: 263, column: 9, scope: !11920)
!11945 = !DILocation(line: 265, column: 19, scope: !11920)
!11946 = !DILocation(line: 266, column: 1, scope: !11920)
!11947 = distinct !DISubprogram(name: "HAL_RCCEx_PeriphCLKConfig", scope: !11948, file: !11948, line: 87, type: !11949, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !11988)
!11948 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc_ex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11949 = !DISubroutineType(types: !11950)
!11950 = !{!11951, !11952}
!11951 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !2982, line: 44, baseType: !2981)
!11952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11953, size: 32)
!11953 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PeriphCLKInitTypeDef", file: !11954, line: 172, baseType: !11955)
!11954 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11955 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11954, line: 121, size: 736, elements: !11956)
!11956 = !{!11957, !11958, !11967, !11975, !11976, !11977, !11978, !11979, !11980, !11981, !11982, !11983, !11984, !11985, !11986, !11987}
!11957 = !DIDerivedType(tag: DW_TAG_member, name: "PeriphClockSelection", scope: !11955, file: !11954, line: 123, baseType: !152, size: 32)
!11958 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2S", scope: !11955, file: !11954, line: 126, baseType: !11959, size: 160, offset: 32)
!11959 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLI2SInitTypeDef", file: !11954, line: 97, baseType: !11960)
!11960 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11954, line: 79, size: 160, elements: !11961)
!11961 = !{!11962, !11963, !11964, !11965, !11966}
!11962 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SM", scope: !11960, file: !11954, line: 81, baseType: !152, size: 32)
!11963 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SN", scope: !11960, file: !11954, line: 84, baseType: !152, size: 32, offset: 32)
!11964 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SP", scope: !11960, file: !11954, line: 87, baseType: !152, size: 32, offset: 64)
!11965 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SQ", scope: !11960, file: !11954, line: 90, baseType: !152, size: 32, offset: 96)
!11966 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SR", scope: !11960, file: !11954, line: 94, baseType: !152, size: 32, offset: 128)
!11967 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAI", scope: !11955, file: !11954, line: 129, baseType: !11968, size: 128, offset: 192)
!11968 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLSAIInitTypeDef", file: !11954, line: 116, baseType: !11969)
!11969 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11954, line: 102, size: 128, elements: !11970)
!11970 = !{!11971, !11972, !11973, !11974}
!11971 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIM", scope: !11969, file: !11954, line: 104, baseType: !152, size: 32)
!11972 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIN", scope: !11969, file: !11954, line: 107, baseType: !152, size: 32, offset: 32)
!11973 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIP", scope: !11969, file: !11954, line: 110, baseType: !152, size: 32, offset: 64)
!11974 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIQ", scope: !11969, file: !11954, line: 113, baseType: !152, size: 32, offset: 96)
!11975 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SDivQ", scope: !11955, file: !11954, line: 132, baseType: !152, size: 32, offset: 320)
!11976 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIDivQ", scope: !11955, file: !11954, line: 136, baseType: !152, size: 32, offset: 352)
!11977 = !DIDerivedType(tag: DW_TAG_member, name: "Sai1ClockSelection", scope: !11955, file: !11954, line: 140, baseType: !152, size: 32, offset: 384)
!11978 = !DIDerivedType(tag: DW_TAG_member, name: "Sai2ClockSelection", scope: !11955, file: !11954, line: 143, baseType: !152, size: 32, offset: 416)
!11979 = !DIDerivedType(tag: DW_TAG_member, name: "I2sApb1ClockSelection", scope: !11955, file: !11954, line: 146, baseType: !152, size: 32, offset: 448)
!11980 = !DIDerivedType(tag: DW_TAG_member, name: "I2sApb2ClockSelection", scope: !11955, file: !11954, line: 149, baseType: !152, size: 32, offset: 480)
!11981 = !DIDerivedType(tag: DW_TAG_member, name: "RTCClockSelection", scope: !11955, file: !11954, line: 152, baseType: !152, size: 32, offset: 512)
!11982 = !DIDerivedType(tag: DW_TAG_member, name: "SdioClockSelection", scope: !11955, file: !11954, line: 155, baseType: !152, size: 32, offset: 544)
!11983 = !DIDerivedType(tag: DW_TAG_member, name: "CecClockSelection", scope: !11955, file: !11954, line: 158, baseType: !152, size: 32, offset: 576)
!11984 = !DIDerivedType(tag: DW_TAG_member, name: "Fmpi2c1ClockSelection", scope: !11955, file: !11954, line: 161, baseType: !152, size: 32, offset: 608)
!11985 = !DIDerivedType(tag: DW_TAG_member, name: "SpdifClockSelection", scope: !11955, file: !11954, line: 164, baseType: !152, size: 32, offset: 640)
!11986 = !DIDerivedType(tag: DW_TAG_member, name: "Clk48ClockSelection", scope: !11955, file: !11954, line: 167, baseType: !152, size: 32, offset: 672)
!11987 = !DIDerivedType(tag: DW_TAG_member, name: "TIMPresSelection", scope: !11955, file: !11954, line: 170, baseType: !195, size: 8, offset: 704)
!11988 = !{!11989, !11990, !11991, !11992, !11993, !11994, !11995, !11996, !11997, !11998, !11999}
!11989 = !DILocalVariable(name: "PeriphClkInit", arg: 1, scope: !11947, file: !11948, line: 87, type: !11952)
!11990 = !DILocalVariable(name: "tickstart", scope: !11947, file: !11948, line: 89, type: !152)
!11991 = !DILocalVariable(name: "tmpreg1", scope: !11947, file: !11948, line: 90, type: !152)
!11992 = !DILocalVariable(name: "plli2sp", scope: !11947, file: !11948, line: 91, type: !152)
!11993 = !DILocalVariable(name: "plli2sq", scope: !11947, file: !11948, line: 92, type: !152)
!11994 = !DILocalVariable(name: "plli2sr", scope: !11947, file: !11948, line: 93, type: !152)
!11995 = !DILocalVariable(name: "pllsaip", scope: !11947, file: !11948, line: 94, type: !152)
!11996 = !DILocalVariable(name: "pllsaiq", scope: !11947, file: !11948, line: 95, type: !152)
!11997 = !DILocalVariable(name: "plli2sused", scope: !11947, file: !11948, line: 96, type: !152)
!11998 = !DILocalVariable(name: "pllsaiused", scope: !11947, file: !11948, line: 97, type: !152)
!11999 = !DILocalVariable(name: "tmpreg", scope: !12000, file: !11948, line: 184, type: !227)
!12000 = distinct !DILexicalBlock(scope: !12001, file: !11948, line: 184, column: 5)
!12001 = distinct !DILexicalBlock(scope: !12002, file: !11948, line: 179, column: 3)
!12002 = distinct !DILexicalBlock(scope: !11947, file: !11948, line: 178, column: 6)
!12003 = !DILocation(line: 0, scope: !11947)
!12004 = !DILocation(line: 103, column: 23, scope: !12005)
!12005 = distinct !DILexicalBlock(scope: !11947, file: !11948, line: 103, column: 6)
!12006 = !DILocation(line: 103, column: 45, scope: !12005)
!12007 = !DILocation(line: 103, column: 71, scope: !12005)
!12008 = !DILocation(line: 103, column: 6, scope: !11947)
!12009 = !DILocation(line: 109, column: 5, scope: !12010)
!12010 = distinct !DILexicalBlock(scope: !12005, file: !11948, line: 104, column: 3)
!12011 = !DILocation(line: 111, column: 23, scope: !12012)
!12012 = distinct !DILexicalBlock(scope: !12010, file: !11948, line: 111, column: 8)
!12013 = !DILocation(line: 111, column: 45, scope: !12012)
!12014 = !DILocation(line: 111, column: 8, scope: !12010)
!12015 = !DILocation(line: 119, column: 23, scope: !12016)
!12016 = distinct !DILexicalBlock(scope: !11947, file: !11948, line: 119, column: 6)
!12017 = !DILocation(line: 119, column: 45, scope: !12016)
!12018 = !DILocation(line: 119, column: 71, scope: !12016)
!12019 = !DILocation(line: 119, column: 6, scope: !11947)
!12020 = !DILocation(line: 125, column: 5, scope: !12021)
!12021 = distinct !DILexicalBlock(scope: !12016, file: !11948, line: 120, column: 3)
!12022 = !DILocation(line: 127, column: 23, scope: !12023)
!12023 = distinct !DILexicalBlock(scope: !12021, file: !11948, line: 127, column: 8)
!12024 = !DILocation(line: 127, column: 45, scope: !12023)
!12025 = !DILocation(line: 127, column: 8, scope: !12021)
!12026 = !DILocation(line: 135, column: 23, scope: !12027)
!12027 = distinct !DILexicalBlock(scope: !11947, file: !11948, line: 135, column: 6)
!12028 = !DILocation(line: 135, column: 45, scope: !12027)
!12029 = !DILocation(line: 135, column: 67, scope: !12027)
!12030 = !DILocation(line: 135, column: 6, scope: !11947)
!12031 = !DILocation(line: 141, column: 5, scope: !12032)
!12032 = distinct !DILexicalBlock(scope: !12027, file: !11948, line: 136, column: 3)
!12033 = !DILocation(line: 143, column: 23, scope: !12034)
!12034 = distinct !DILexicalBlock(scope: !12032, file: !11948, line: 143, column: 8)
!12035 = !DILocation(line: 143, column: 42, scope: !12034)
!12036 = !DILocation(line: 143, column: 8, scope: !12032)
!12037 = !DILocation(line: 148, column: 42, scope: !12038)
!12038 = distinct !DILexicalBlock(scope: !12032, file: !11948, line: 148, column: 8)
!12039 = !DILocation(line: 148, column: 8, scope: !12032)
!12040 = !DILocation(line: 156, column: 23, scope: !12041)
!12041 = distinct !DILexicalBlock(scope: !11947, file: !11948, line: 156, column: 6)
!12042 = !DILocation(line: 156, column: 45, scope: !12041)
!12043 = !DILocation(line: 156, column: 67, scope: !12041)
!12044 = !DILocation(line: 156, column: 6, scope: !11947)
!12045 = !DILocation(line: 162, column: 5, scope: !12046)
!12046 = distinct !DILexicalBlock(scope: !12041, file: !11948, line: 157, column: 3)
!12047 = !DILocation(line: 165, column: 23, scope: !12048)
!12048 = distinct !DILexicalBlock(scope: !12046, file: !11948, line: 165, column: 8)
!12049 = !DILocation(line: 165, column: 42, scope: !12048)
!12050 = !DILocation(line: 165, column: 8, scope: !12046)
!12051 = !DILocation(line: 170, column: 42, scope: !12052)
!12052 = distinct !DILexicalBlock(scope: !12046, file: !11948, line: 170, column: 8)
!12053 = !DILocation(line: 170, column: 8, scope: !12046)
!12054 = !DILocation(line: 178, column: 23, scope: !12002)
!12055 = !DILocation(line: 178, column: 45, scope: !12002)
!12056 = !DILocation(line: 178, column: 66, scope: !12002)
!12057 = !DILocation(line: 178, column: 6, scope: !11947)
!12058 = !DILocation(line: 184, column: 5, scope: !12000)
!12059 = !DILocation(line: 184, column: 5, scope: !12001)
!12060 = !DILocation(line: 187, column: 13, scope: !12001)
!12061 = !DILocation(line: 190, column: 17, scope: !12001)
!12062 = !DILocation(line: 192, column: 5, scope: !12001)
!12063 = !DILocation(line: 192, column: 17, scope: !12001)
!12064 = !DILocation(line: 192, column: 20, scope: !12001)
!12065 = !DILocation(line: 192, column: 34, scope: !12001)
!12066 = !DILocation(line: 194, column: 11, scope: !12067)
!12067 = distinct !DILexicalBlock(scope: !12068, file: !11948, line: 194, column: 10)
!12068 = distinct !DILexicalBlock(scope: !12001, file: !11948, line: 193, column: 5)
!12069 = !DILocation(line: 194, column: 25, scope: !12067)
!12070 = !DILocation(line: 194, column: 39, scope: !12067)
!12071 = !DILocation(line: 194, column: 10, scope: !12068)
!12072 = distinct !{!12072, !12062, !12073}
!12073 = !DILocation(line: 198, column: 5, scope: !12001)
!12074 = !DILocation(line: 200, column: 21, scope: !12001)
!12075 = !DILocation(line: 200, column: 26, scope: !12001)
!12076 = !DILocation(line: 201, column: 17, scope: !12077)
!12077 = distinct !DILexicalBlock(scope: !12001, file: !11948, line: 201, column: 8)
!12078 = !DILocation(line: 201, column: 33, scope: !12077)
!12079 = !DILocation(line: 201, column: 66, scope: !12077)
!12080 = !DILocation(line: 201, column: 84, scope: !12077)
!12081 = !DILocation(line: 201, column: 47, scope: !12077)
!12082 = !DILocation(line: 201, column: 8, scope: !12001)
!12083 = !DILocation(line: 204, column: 23, scope: !12084)
!12084 = distinct !DILexicalBlock(scope: !12077, file: !11948, line: 202, column: 5)
!12085 = !DILocation(line: 204, column: 28, scope: !12084)
!12086 = !DILocation(line: 206, column: 7, scope: !12084)
!12087 = !DILocation(line: 207, column: 7, scope: !12084)
!12088 = !DILocation(line: 209, column: 17, scope: !12084)
!12089 = !DILocation(line: 212, column: 10, scope: !12090)
!12090 = distinct !DILexicalBlock(scope: !12084, file: !11948, line: 212, column: 10)
!12091 = !DILocation(line: 212, column: 10, scope: !12084)
!12092 = !DILocation(line: 215, column: 21, scope: !12093)
!12093 = distinct !DILexicalBlock(scope: !12090, file: !11948, line: 213, column: 7)
!12094 = !DILocation(line: 218, column: 9, scope: !12093)
!12095 = !DILocation(line: 218, column: 15, scope: !12093)
!12096 = !DILocation(line: 218, column: 51, scope: !12093)
!12097 = !DILocation(line: 220, column: 15, scope: !12098)
!12098 = distinct !DILexicalBlock(scope: !12099, file: !11948, line: 220, column: 14)
!12099 = distinct !DILexicalBlock(scope: !12093, file: !11948, line: 219, column: 9)
!12100 = !DILocation(line: 220, column: 29, scope: !12098)
!12101 = !DILocation(line: 220, column: 43, scope: !12098)
!12102 = !DILocation(line: 220, column: 14, scope: !12099)
!12103 = distinct !{!12103, !12094, !12104}
!12104 = !DILocation(line: 224, column: 9, scope: !12093)
!12105 = !DILocation(line: 227, column: 5, scope: !12106)
!12106 = distinct !DILexicalBlock(scope: !12001, file: !11948, line: 227, column: 5)
!12107 = !DILocation(line: 232, column: 23, scope: !12108)
!12108 = distinct !DILexicalBlock(scope: !11947, file: !11948, line: 232, column: 6)
!12109 = !DILocation(line: 228, column: 3, scope: !12001)
!12110 = !DILocation(line: 232, column: 45, scope: !12108)
!12111 = !DILocation(line: 232, column: 66, scope: !12108)
!12112 = !DILocation(line: 232, column: 6, scope: !11947)
!12113 = !DILocation(line: 235, column: 5, scope: !12114)
!12114 = distinct !DILexicalBlock(scope: !12108, file: !11948, line: 233, column: 3)
!12115 = !DILocation(line: 240, column: 23, scope: !12116)
!12116 = distinct !DILexicalBlock(scope: !11947, file: !11948, line: 240, column: 6)
!12117 = !DILocation(line: 236, column: 3, scope: !12114)
!12118 = !DILocation(line: 240, column: 45, scope: !12116)
!12119 = !DILocation(line: 240, column: 70, scope: !12116)
!12120 = !DILocation(line: 240, column: 6, scope: !11947)
!12121 = !DILocation(line: 246, column: 5, scope: !12122)
!12122 = distinct !DILexicalBlock(scope: !12116, file: !11948, line: 241, column: 3)
!12123 = !DILocation(line: 251, column: 23, scope: !12124)
!12124 = distinct !DILexicalBlock(scope: !11947, file: !11948, line: 251, column: 6)
!12125 = !DILocation(line: 247, column: 3, scope: !12122)
!12126 = !DILocation(line: 251, column: 45, scope: !12124)
!12127 = !DILocation(line: 251, column: 66, scope: !12124)
!12128 = !DILocation(line: 251, column: 6, scope: !11947)
!12129 = !DILocation(line: 257, column: 5, scope: !12130)
!12130 = distinct !DILexicalBlock(scope: !12124, file: !11948, line: 252, column: 3)
!12131 = !DILocation(line: 262, column: 23, scope: !12132)
!12132 = distinct !DILexicalBlock(scope: !11947, file: !11948, line: 262, column: 6)
!12133 = !DILocation(line: 258, column: 3, scope: !12130)
!12134 = !DILocation(line: 262, column: 45, scope: !12132)
!12135 = !DILocation(line: 262, column: 68, scope: !12132)
!12136 = !DILocation(line: 262, column: 6, scope: !11947)
!12137 = !DILocation(line: 268, column: 5, scope: !12138)
!12138 = distinct !DILexicalBlock(scope: !12132, file: !11948, line: 263, column: 3)
!12139 = !DILocation(line: 271, column: 23, scope: !12140)
!12140 = distinct !DILexicalBlock(scope: !12138, file: !11948, line: 271, column: 8)
!12141 = !DILocation(line: 271, column: 43, scope: !12140)
!12142 = !DILocation(line: 271, column: 8, scope: !12138)
!12143 = !DILocation(line: 279, column: 23, scope: !12144)
!12144 = distinct !DILexicalBlock(scope: !11947, file: !11948, line: 279, column: 6)
!12145 = !DILocation(line: 279, column: 45, scope: !12144)
!12146 = !DILocation(line: 279, column: 67, scope: !12144)
!12147 = !DILocation(line: 279, column: 6, scope: !11947)
!12148 = !DILocation(line: 285, column: 5, scope: !12149)
!12149 = distinct !DILexicalBlock(scope: !12144, file: !11948, line: 280, column: 3)
!12150 = !DILocation(line: 290, column: 23, scope: !12151)
!12151 = distinct !DILexicalBlock(scope: !11947, file: !11948, line: 290, column: 6)
!12152 = !DILocation(line: 286, column: 3, scope: !12149)
!12153 = !DILocation(line: 290, column: 45, scope: !12151)
!12154 = !DILocation(line: 290, column: 70, scope: !12151)
!12155 = !DILocation(line: 290, column: 6, scope: !11947)
!12156 = !DILocation(line: 296, column: 5, scope: !12157)
!12157 = distinct !DILexicalBlock(scope: !12151, file: !11948, line: 291, column: 3)
!12158 = !DILocation(line: 298, column: 23, scope: !12159)
!12159 = distinct !DILexicalBlock(scope: !12157, file: !11948, line: 298, column: 8)
!12160 = !DILocation(line: 298, column: 43, scope: !12159)
!12161 = !DILocation(line: 298, column: 8, scope: !12157)
!12162 = !DILocation(line: 308, column: 44, scope: !12163)
!12163 = distinct !DILexicalBlock(scope: !11947, file: !11948, line: 308, column: 6)
!12164 = !DILocation(line: 308, column: 18, scope: !12163)
!12165 = !DILocation(line: 308, column: 25, scope: !12163)
!12166 = !DILocation(line: 308, column: 65, scope: !12163)
!12167 = !DILocation(line: 308, column: 6, scope: !11947)
!12168 = !DILocation(line: 311, column: 5, scope: !12169)
!12169 = distinct !DILexicalBlock(scope: !12163, file: !11948, line: 309, column: 3)
!12170 = !DILocation(line: 313, column: 17, scope: !12169)
!12171 = !DILocation(line: 315, column: 5, scope: !12169)
!12172 = !DILocation(line: 315, column: 11, scope: !12169)
!12173 = !DILocation(line: 317, column: 11, scope: !12174)
!12174 = distinct !DILexicalBlock(scope: !12175, file: !11948, line: 317, column: 10)
!12175 = distinct !DILexicalBlock(scope: !12169, file: !11948, line: 316, column: 5)
!12176 = !DILocation(line: 317, column: 25, scope: !12174)
!12177 = !DILocation(line: 317, column: 39, scope: !12174)
!12178 = !DILocation(line: 317, column: 10, scope: !12175)
!12179 = distinct !{!12179, !12171, !12180}
!12180 = !DILocation(line: 322, column: 5, scope: !12169)
!12181 = !DILocation(line: 329, column: 27, scope: !12182)
!12182 = distinct !DILexicalBlock(scope: !12169, file: !11948, line: 329, column: 8)
!12183 = !DILocation(line: 329, column: 49, scope: !12182)
!12184 = !DILocation(line: 329, column: 75, scope: !12182)
!12185 = !DILocation(line: 329, column: 102, scope: !12182)
!12186 = !DILocation(line: 329, column: 121, scope: !12182)
!12187 = !DILocation(line: 329, column: 143, scope: !12182)
!12188 = !DILocation(line: 329, column: 176, scope: !12182)
!12189 = !DILocation(line: 330, column: 49, scope: !12182)
!12190 = !DILocation(line: 330, column: 75, scope: !12182)
!12191 = !DILocation(line: 330, column: 102, scope: !12182)
!12192 = !DILocation(line: 330, column: 121, scope: !12182)
!12193 = !DILocation(line: 330, column: 143, scope: !12182)
!12194 = !DILocation(line: 329, column: 8, scope: !12169)
!12195 = !DILocation(line: 336, column: 26, scope: !12196)
!12196 = distinct !DILexicalBlock(scope: !12182, file: !11948, line: 331, column: 5)
!12197 = !DILocation(line: 336, column: 100, scope: !12196)
!12198 = !DILocation(line: 337, column: 24, scope: !12196)
!12199 = !DILocation(line: 337, column: 61, scope: !12196)
!12200 = !DILocation(line: 341, column: 7, scope: !12196)
!12201 = !DILocation(line: 345, column: 27, scope: !12202)
!12202 = distinct !DILexicalBlock(scope: !12169, file: !11948, line: 345, column: 8)
!12203 = !DILocation(line: 342, column: 5, scope: !12196)
!12204 = !DILocation(line: 345, column: 49, scope: !12202)
!12205 = !DILocation(line: 345, column: 71, scope: !12202)
!12206 = !DILocation(line: 345, column: 94, scope: !12202)
!12207 = !DILocation(line: 345, column: 113, scope: !12202)
!12208 = !DILocation(line: 345, column: 132, scope: !12202)
!12209 = !DILocation(line: 345, column: 162, scope: !12202)
!12210 = !DILocation(line: 346, column: 49, scope: !12202)
!12211 = !DILocation(line: 346, column: 71, scope: !12202)
!12212 = !DILocation(line: 346, column: 94, scope: !12202)
!12213 = !DILocation(line: 346, column: 113, scope: !12202)
!12214 = !DILocation(line: 346, column: 132, scope: !12202)
!12215 = !DILocation(line: 345, column: 8, scope: !12169)
!12216 = !DILocation(line: 354, column: 26, scope: !12217)
!12217 = distinct !DILexicalBlock(scope: !12202, file: !11948, line: 347, column: 5)
!12218 = !DILocation(line: 354, column: 100, scope: !12217)
!12219 = !DILocation(line: 355, column: 24, scope: !12217)
!12220 = !DILocation(line: 355, column: 61, scope: !12217)
!12221 = !DILocation(line: 360, column: 7, scope: !12217)
!12222 = !DILocation(line: 363, column: 7, scope: !12217)
!12223 = !DILocation(line: 367, column: 26, scope: !12224)
!12224 = distinct !DILexicalBlock(scope: !12169, file: !11948, line: 367, column: 8)
!12225 = !DILocation(line: 364, column: 5, scope: !12217)
!12226 = !DILocation(line: 367, column: 48, scope: !12224)
!12227 = !DILocation(line: 367, column: 73, scope: !12224)
!12228 = !DILocation(line: 367, column: 99, scope: !12224)
!12229 = !DILocation(line: 367, column: 118, scope: !12224)
!12230 = !DILocation(line: 367, column: 138, scope: !12224)
!12231 = !DILocation(line: 367, column: 8, scope: !12169)
!12232 = !DILocation(line: 372, column: 26, scope: !12233)
!12233 = distinct !DILexicalBlock(scope: !12224, file: !11948, line: 368, column: 5)
!12234 = !DILocation(line: 373, column: 24, scope: !12233)
!12235 = !DILocation(line: 373, column: 61, scope: !12233)
!12236 = !DILocation(line: 377, column: 7, scope: !12233)
!12237 = !DILocation(line: 381, column: 24, scope: !12238)
!12238 = distinct !DILexicalBlock(scope: !12169, file: !11948, line: 381, column: 8)
!12239 = !DILocation(line: 378, column: 5, scope: !12233)
!12240 = !DILocation(line: 381, column: 45, scope: !12238)
!12241 = !DILocation(line: 381, column: 69, scope: !12238)
!12242 = !DILocation(line: 381, column: 8, scope: !12169)
!12243 = !DILocation(line: 390, column: 7, scope: !12244)
!12244 = distinct !DILexicalBlock(scope: !12238, file: !11948, line: 382, column: 5)
!12245 = !DILocation(line: 391, column: 5, scope: !12244)
!12246 = !DILocation(line: 394, column: 5, scope: !12169)
!12247 = !DILocation(line: 396, column: 17, scope: !12169)
!12248 = !DILocation(line: 398, column: 5, scope: !12169)
!12249 = !DILocation(line: 398, column: 11, scope: !12169)
!12250 = !DILocation(line: 398, column: 51, scope: !12169)
!12251 = !DILocation(line: 400, column: 11, scope: !12252)
!12252 = distinct !DILexicalBlock(scope: !12253, file: !11948, line: 400, column: 10)
!12253 = distinct !DILexicalBlock(scope: !12169, file: !11948, line: 399, column: 5)
!12254 = !DILocation(line: 400, column: 25, scope: !12252)
!12255 = !DILocation(line: 400, column: 39, scope: !12252)
!12256 = !DILocation(line: 400, column: 10, scope: !12253)
!12257 = distinct !{!12257, !12248, !12258}
!12258 = !DILocation(line: 405, column: 5, scope: !12169)
!12259 = !DILocation(line: 411, column: 17, scope: !12260)
!12260 = distinct !DILexicalBlock(scope: !11947, file: !11948, line: 411, column: 6)
!12261 = !DILocation(line: 411, column: 6, scope: !11947)
!12262 = !DILocation(line: 414, column: 5, scope: !12263)
!12263 = distinct !DILexicalBlock(scope: !12260, file: !11948, line: 412, column: 3)
!12264 = !DILocation(line: 416, column: 17, scope: !12263)
!12265 = !DILocation(line: 418, column: 5, scope: !12263)
!12266 = !DILocation(line: 418, column: 11, scope: !12263)
!12267 = !DILocation(line: 420, column: 11, scope: !12268)
!12268 = distinct !DILexicalBlock(scope: !12269, file: !11948, line: 420, column: 10)
!12269 = distinct !DILexicalBlock(scope: !12263, file: !11948, line: 419, column: 5)
!12270 = !DILocation(line: 420, column: 25, scope: !12268)
!12271 = !DILocation(line: 420, column: 39, scope: !12268)
!12272 = !DILocation(line: 420, column: 10, scope: !12269)
!12273 = distinct !{!12273, !12265, !12274}
!12274 = !DILocation(line: 425, column: 5, scope: !12263)
!12275 = !DILocation(line: 432, column: 27, scope: !12276)
!12276 = distinct !DILexicalBlock(scope: !12263, file: !11948, line: 432, column: 8)
!12277 = !DILocation(line: 432, column: 49, scope: !12276)
!12278 = !DILocation(line: 432, column: 71, scope: !12276)
!12279 = !DILocation(line: 432, column: 94, scope: !12276)
!12280 = !DILocation(line: 432, column: 113, scope: !12276)
!12281 = !DILocation(line: 432, column: 132, scope: !12276)
!12282 = !DILocation(line: 432, column: 162, scope: !12276)
!12283 = !DILocation(line: 433, column: 49, scope: !12276)
!12284 = !DILocation(line: 433, column: 71, scope: !12276)
!12285 = !DILocation(line: 433, column: 94, scope: !12276)
!12286 = !DILocation(line: 433, column: 113, scope: !12276)
!12287 = !DILocation(line: 433, column: 132, scope: !12276)
!12288 = !DILocation(line: 432, column: 8, scope: !12263)
!12289 = !DILocation(line: 441, column: 26, scope: !12290)
!12290 = distinct !DILexicalBlock(scope: !12276, file: !11948, line: 434, column: 5)
!12291 = !DILocation(line: 441, column: 100, scope: !12290)
!12292 = !DILocation(line: 445, column: 7, scope: !12290)
!12293 = !DILocation(line: 448, column: 7, scope: !12290)
!12294 = !DILocation(line: 453, column: 26, scope: !12295)
!12295 = distinct !DILexicalBlock(scope: !12263, file: !11948, line: 453, column: 8)
!12296 = !DILocation(line: 449, column: 5, scope: !12290)
!12297 = !DILocation(line: 453, column: 48, scope: !12295)
!12298 = !DILocation(line: 453, column: 71, scope: !12295)
!12299 = !DILocation(line: 453, column: 95, scope: !12295)
!12300 = !DILocation(line: 453, column: 114, scope: !12295)
!12301 = !DILocation(line: 453, column: 134, scope: !12295)
!12302 = !DILocation(line: 453, column: 8, scope: !12263)
!12303 = !DILocation(line: 458, column: 24, scope: !12304)
!12304 = distinct !DILexicalBlock(scope: !12295, file: !11948, line: 454, column: 5)
!12305 = !DILocation(line: 458, column: 61, scope: !12304)
!12306 = !DILocation(line: 462, column: 7, scope: !12304)
!12307 = !DILocation(line: 463, column: 5, scope: !12304)
!12308 = !DILocation(line: 466, column: 5, scope: !12263)
!12309 = !DILocation(line: 468, column: 17, scope: !12263)
!12310 = !DILocation(line: 470, column: 5, scope: !12263)
!12311 = !DILocation(line: 470, column: 11, scope: !12263)
!12312 = !DILocation(line: 470, column: 39, scope: !12263)
!12313 = !DILocation(line: 472, column: 11, scope: !12314)
!12314 = distinct !DILexicalBlock(scope: !12315, file: !11948, line: 472, column: 10)
!12315 = distinct !DILexicalBlock(scope: !12263, file: !11948, line: 471, column: 5)
!12316 = !DILocation(line: 472, column: 25, scope: !12314)
!12317 = !DILocation(line: 472, column: 39, scope: !12314)
!12318 = !DILocation(line: 472, column: 10, scope: !12315)
!12319 = distinct !{!12319, !12310, !12320}
!12320 = !DILocation(line: 477, column: 5, scope: !12263)
!12321 = !DILocation(line: 480, column: 1, scope: !11947)
!12322 = !DISubprogram(name: "HAL_GetTick", scope: !12323, file: !12323, line: 234, type: !6405, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2236)
!12323 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12324 = distinct !DISubprogram(name: "HAL_RCCEx_GetPeriphCLKConfig", scope: !11948, file: !11948, line: 489, type: !12325, scopeLine: 490, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !12327)
!12325 = !DISubroutineType(types: !12326)
!12326 = !{null, !11952}
!12327 = !{!12328, !12329}
!12328 = !DILocalVariable(name: "PeriphClkInit", arg: 1, scope: !12324, file: !11948, line: 489, type: !11952)
!12329 = !DILocalVariable(name: "tempreg", scope: !12324, file: !11948, line: 491, type: !152)
!12330 = !DILocation(line: 0, scope: !12324)
!12331 = !DILocation(line: 494, column: 18, scope: !12324)
!12332 = !DILocation(line: 494, column: 39, scope: !12324)
!12333 = !DILocation(line: 502, column: 52, scope: !12324)
!12334 = !DILocation(line: 502, column: 63, scope: !12324)
!12335 = !DILocation(line: 502, column: 25, scope: !12324)
!12336 = !DILocation(line: 502, column: 33, scope: !12324)
!12337 = !DILocation(line: 503, column: 52, scope: !12324)
!12338 = !DILocation(line: 503, column: 89, scope: !12324)
!12339 = !DILocation(line: 503, column: 25, scope: !12324)
!12340 = !DILocation(line: 503, column: 33, scope: !12324)
!12341 = !DILocation(line: 504, column: 54, scope: !12324)
!12342 = !DILocation(line: 504, column: 128, scope: !12324)
!12343 = !DILocation(line: 504, column: 25, scope: !12324)
!12344 = !DILocation(line: 504, column: 33, scope: !12324)
!12345 = !DILocation(line: 505, column: 52, scope: !12324)
!12346 = !DILocation(line: 505, column: 89, scope: !12324)
!12347 = !DILocation(line: 505, column: 25, scope: !12324)
!12348 = !DILocation(line: 505, column: 33, scope: !12324)
!12349 = !DILocation(line: 506, column: 52, scope: !12324)
!12350 = !DILocation(line: 506, column: 89, scope: !12324)
!12351 = !DILocation(line: 506, column: 25, scope: !12324)
!12352 = !DILocation(line: 506, column: 33, scope: !12324)
!12353 = !DILocation(line: 508, column: 52, scope: !12324)
!12354 = !DILocation(line: 508, column: 63, scope: !12324)
!12355 = !DILocation(line: 508, column: 25, scope: !12324)
!12356 = !DILocation(line: 508, column: 33, scope: !12324)
!12357 = !DILocation(line: 509, column: 52, scope: !12324)
!12358 = !DILocation(line: 509, column: 89, scope: !12324)
!12359 = !DILocation(line: 509, column: 25, scope: !12324)
!12360 = !DILocation(line: 509, column: 33, scope: !12324)
!12361 = !DILocation(line: 510, column: 54, scope: !12324)
!12362 = !DILocation(line: 510, column: 128, scope: !12324)
!12363 = !DILocation(line: 510, column: 25, scope: !12324)
!12364 = !DILocation(line: 510, column: 33, scope: !12324)
!12365 = !DILocation(line: 511, column: 52, scope: !12324)
!12366 = !DILocation(line: 511, column: 89, scope: !12324)
!12367 = !DILocation(line: 511, column: 25, scope: !12324)
!12368 = !DILocation(line: 511, column: 33, scope: !12324)
!12369 = !DILocation(line: 513, column: 48, scope: !12324)
!12370 = !DILocation(line: 513, column: 56, scope: !12324)
!12371 = !DILocation(line: 513, column: 18, scope: !12324)
!12372 = !DILocation(line: 513, column: 29, scope: !12324)
!12373 = !DILocation(line: 514, column: 48, scope: !12324)
!12374 = !DILocation(line: 514, column: 82, scope: !12324)
!12375 = !DILocation(line: 514, column: 18, scope: !12324)
!12376 = !DILocation(line: 514, column: 29, scope: !12324)
!12377 = !DILocation(line: 517, column: 39, scope: !12324)
!12378 = !DILocation(line: 517, column: 18, scope: !12324)
!12379 = !DILocation(line: 517, column: 37, scope: !12324)
!12380 = !DILocation(line: 520, column: 39, scope: !12324)
!12381 = !DILocation(line: 520, column: 18, scope: !12324)
!12382 = !DILocation(line: 520, column: 37, scope: !12324)
!12383 = !DILocation(line: 523, column: 42, scope: !12324)
!12384 = !DILocation(line: 523, column: 18, scope: !12324)
!12385 = !DILocation(line: 523, column: 40, scope: !12324)
!12386 = !DILocation(line: 526, column: 42, scope: !12324)
!12387 = !DILocation(line: 526, column: 18, scope: !12324)
!12388 = !DILocation(line: 526, column: 40, scope: !12324)
!12389 = !DILocation(line: 529, column: 19, scope: !12324)
!12390 = !DILocation(line: 529, column: 24, scope: !12324)
!12391 = !DILocation(line: 530, column: 67, scope: !12324)
!12392 = !DILocation(line: 530, column: 72, scope: !12324)
!12393 = !DILocation(line: 530, column: 59, scope: !12324)
!12394 = !DILocation(line: 530, column: 18, scope: !12324)
!12395 = !DILocation(line: 530, column: 36, scope: !12324)
!12396 = !DILocation(line: 533, column: 38, scope: !12324)
!12397 = !DILocation(line: 533, column: 18, scope: !12324)
!12398 = !DILocation(line: 533, column: 36, scope: !12324)
!12399 = !DILocation(line: 536, column: 42, scope: !12324)
!12400 = !DILocation(line: 536, column: 18, scope: !12324)
!12401 = !DILocation(line: 536, column: 40, scope: !12324)
!12402 = !DILocation(line: 539, column: 40, scope: !12324)
!12403 = !DILocation(line: 539, column: 18, scope: !12324)
!12404 = !DILocation(line: 539, column: 38, scope: !12324)
!12405 = !DILocation(line: 542, column: 39, scope: !12324)
!12406 = !DILocation(line: 542, column: 18, scope: !12324)
!12407 = !DILocation(line: 542, column: 37, scope: !12324)
!12408 = !DILocation(line: 545, column: 40, scope: !12324)
!12409 = !DILocation(line: 545, column: 18, scope: !12324)
!12410 = !DILocation(line: 545, column: 38, scope: !12324)
!12411 = !DILocation(line: 548, column: 13, scope: !12412)
!12412 = distinct !DILexicalBlock(scope: !12324, file: !11948, line: 548, column: 7)
!12413 = !DILocation(line: 548, column: 7, scope: !12324)
!12414 = !DILocation(line: 550, column: 20, scope: !12415)
!12415 = distinct !DILexicalBlock(scope: !12412, file: !11948, line: 549, column: 3)
!12416 = !DILocation(line: 550, column: 37, scope: !12415)
!12417 = !DILocation(line: 556, column: 1, scope: !12324)
!12418 = distinct !DISubprogram(name: "HAL_RCCEx_GetPeriphCLKFreq", scope: !11948, file: !11948, line: 569, type: !7605, scopeLine: 570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !12419)
!12419 = !{!12420, !12421, !12422, !12423, !12424, !12425, !12426}
!12420 = !DILocalVariable(name: "PeriphClk", arg: 1, scope: !12418, file: !11948, line: 569, type: !152)
!12421 = !DILocalVariable(name: "tmpreg1", scope: !12418, file: !11948, line: 571, type: !152)
!12422 = !DILocalVariable(name: "frequency", scope: !12418, file: !11948, line: 573, type: !152)
!12423 = !DILocalVariable(name: "vcoinput", scope: !12418, file: !11948, line: 575, type: !152)
!12424 = !DILocalVariable(name: "saiclocksource", scope: !12418, file: !11948, line: 577, type: !152)
!12425 = !DILocalVariable(name: "srcclk", scope: !12418, file: !11948, line: 578, type: !152)
!12426 = !DILocalVariable(name: "vcooutput", scope: !12418, file: !11948, line: 580, type: !152)
!12427 = !DILocation(line: 0, scope: !12418)
!12428 = !DILocation(line: 581, column: 3, scope: !12418)
!12429 = !DILocation(line: 586, column: 29, scope: !12430)
!12430 = distinct !DILexicalBlock(scope: !12431, file: !11948, line: 585, column: 5)
!12431 = distinct !DILexicalBlock(scope: !12418, file: !11948, line: 582, column: 3)
!12432 = !DILocation(line: 588, column: 7, scope: !12430)
!12433 = !DILocation(line: 594, column: 20, scope: !12434)
!12434 = distinct !DILexicalBlock(scope: !12435, file: !11948, line: 594, column: 14)
!12435 = distinct !DILexicalBlock(scope: !12436, file: !11948, line: 591, column: 9)
!12436 = distinct !DILexicalBlock(scope: !12430, file: !11948, line: 589, column: 7)
!12437 = !DILocation(line: 0, scope: !12434)
!12438 = !DILocation(line: 606, column: 27, scope: !12435)
!12439 = !DILocation(line: 606, column: 64, scope: !12435)
!12440 = !DILocation(line: 607, column: 42, scope: !12435)
!12441 = !DILocation(line: 607, column: 79, scope: !12435)
!12442 = !DILocation(line: 607, column: 33, scope: !12435)
!12443 = !DILocation(line: 607, column: 86, scope: !12435)
!12444 = !DILocation(line: 610, column: 29, scope: !12435)
!12445 = !DILocation(line: 610, column: 63, scope: !12435)
!12446 = !DILocation(line: 610, column: 70, scope: !12435)
!12447 = !DILocation(line: 611, column: 32, scope: !12435)
!12448 = !DILocation(line: 612, column: 11, scope: !12435)
!12449 = !DILocation(line: 619, column: 20, scope: !12450)
!12450 = distinct !DILexicalBlock(scope: !12451, file: !11948, line: 619, column: 14)
!12451 = distinct !DILexicalBlock(scope: !12436, file: !11948, line: 616, column: 9)
!12452 = !DILocation(line: 0, scope: !12450)
!12453 = !DILocation(line: 632, column: 27, scope: !12451)
!12454 = !DILocation(line: 632, column: 64, scope: !12451)
!12455 = !DILocation(line: 633, column: 42, scope: !12451)
!12456 = !DILocation(line: 633, column: 79, scope: !12451)
!12457 = !DILocation(line: 633, column: 33, scope: !12451)
!12458 = !DILocation(line: 633, column: 86, scope: !12451)
!12459 = !DILocation(line: 636, column: 28, scope: !12451)
!12460 = !DILocation(line: 636, column: 36, scope: !12451)
!12461 = !DILocation(line: 636, column: 62, scope: !12451)
!12462 = !DILocation(line: 637, column: 32, scope: !12451)
!12463 = !DILocation(line: 638, column: 11, scope: !12451)
!12464 = !DILocation(line: 645, column: 20, scope: !12465)
!12465 = distinct !DILexicalBlock(scope: !12466, file: !11948, line: 645, column: 14)
!12466 = distinct !DILexicalBlock(scope: !12436, file: !11948, line: 642, column: 9)
!12467 = !DILocation(line: 0, scope: !12465)
!12468 = !DILocation(line: 658, column: 27, scope: !12466)
!12469 = !DILocation(line: 658, column: 55, scope: !12466)
!12470 = !DILocation(line: 659, column: 42, scope: !12466)
!12471 = !DILocation(line: 659, column: 70, scope: !12466)
!12472 = !DILocation(line: 659, column: 33, scope: !12466)
!12473 = !DILocation(line: 659, column: 77, scope: !12466)
!12474 = !DILocation(line: 660, column: 11, scope: !12466)
!12475 = !DILocation(line: 665, column: 11, scope: !12476)
!12476 = distinct !DILexicalBlock(scope: !12436, file: !11948, line: 663, column: 9)
!12477 = !DILocation(line: 669, column: 20, scope: !12478)
!12478 = distinct !DILexicalBlock(scope: !12479, file: !11948, line: 669, column: 14)
!12479 = distinct !DILexicalBlock(scope: !12436, file: !11948, line: 668, column: 9)
!12480 = !DILocation(line: 691, column: 16, scope: !12481)
!12481 = distinct !DILexicalBlock(scope: !12431, file: !11948, line: 689, column: 5)
!12482 = !DILocation(line: 692, column: 7, scope: !12481)
!12483 = !DILocation(line: 706, column: 20, scope: !12484)
!12484 = distinct !DILexicalBlock(scope: !12485, file: !11948, line: 706, column: 14)
!12485 = distinct !DILexicalBlock(scope: !12486, file: !11948, line: 703, column: 9)
!12486 = distinct !DILexicalBlock(scope: !12481, file: !11948, line: 693, column: 7)
!12487 = !DILocation(line: 0, scope: !12484)
!12488 = !DILocation(line: 718, column: 53, scope: !12485)
!12489 = !DILocation(line: 718, column: 90, scope: !12485)
!12490 = !DILocation(line: 718, column: 43, scope: !12485)
!12491 = !DILocation(line: 720, column: 53, scope: !12485)
!12492 = !DILocation(line: 720, column: 90, scope: !12485)
!12493 = !DILocation(line: 720, column: 44, scope: !12485)
!12494 = !DILocation(line: 721, column: 11, scope: !12485)
!12495 = !DILocation(line: 728, column: 20, scope: !12496)
!12496 = distinct !DILexicalBlock(scope: !12497, file: !11948, line: 728, column: 14)
!12497 = distinct !DILexicalBlock(scope: !12486, file: !11948, line: 725, column: 9)
!12498 = !DILocation(line: 0, scope: !12496)
!12499 = !DILocation(line: 740, column: 53, scope: !12497)
!12500 = !DILocation(line: 740, column: 81, scope: !12497)
!12501 = !DILocation(line: 740, column: 43, scope: !12497)
!12502 = !DILocation(line: 742, column: 53, scope: !12497)
!12503 = !DILocation(line: 742, column: 81, scope: !12497)
!12504 = !DILocation(line: 742, column: 44, scope: !12497)
!12505 = !DILocation(line: 743, column: 11, scope: !12497)
!12506 = !DILocation(line: 748, column: 20, scope: !12507)
!12507 = distinct !DILexicalBlock(scope: !12508, file: !11948, line: 748, column: 14)
!12508 = distinct !DILexicalBlock(scope: !12486, file: !11948, line: 747, column: 9)
!12509 = !DILocation(line: 770, column: 16, scope: !12510)
!12510 = distinct !DILexicalBlock(scope: !12431, file: !11948, line: 768, column: 5)
!12511 = !DILocation(line: 771, column: 7, scope: !12510)
!12512 = !DILocation(line: 785, column: 20, scope: !12513)
!12513 = distinct !DILexicalBlock(scope: !12514, file: !11948, line: 785, column: 14)
!12514 = distinct !DILexicalBlock(scope: !12515, file: !11948, line: 782, column: 9)
!12515 = distinct !DILexicalBlock(scope: !12510, file: !11948, line: 772, column: 7)
!12516 = !DILocation(line: 0, scope: !12513)
!12517 = !DILocation(line: 797, column: 53, scope: !12514)
!12518 = !DILocation(line: 797, column: 90, scope: !12514)
!12519 = !DILocation(line: 797, column: 43, scope: !12514)
!12520 = !DILocation(line: 799, column: 53, scope: !12514)
!12521 = !DILocation(line: 799, column: 90, scope: !12514)
!12522 = !DILocation(line: 799, column: 44, scope: !12514)
!12523 = !DILocation(line: 800, column: 11, scope: !12514)
!12524 = !DILocation(line: 807, column: 20, scope: !12525)
!12525 = distinct !DILexicalBlock(scope: !12526, file: !11948, line: 807, column: 14)
!12526 = distinct !DILexicalBlock(scope: !12515, file: !11948, line: 804, column: 9)
!12527 = !DILocation(line: 0, scope: !12525)
!12528 = !DILocation(line: 819, column: 53, scope: !12526)
!12529 = !DILocation(line: 819, column: 81, scope: !12526)
!12530 = !DILocation(line: 819, column: 43, scope: !12526)
!12531 = !DILocation(line: 821, column: 53, scope: !12526)
!12532 = !DILocation(line: 821, column: 81, scope: !12526)
!12533 = !DILocation(line: 821, column: 44, scope: !12526)
!12534 = !DILocation(line: 822, column: 11, scope: !12526)
!12535 = !DILocation(line: 827, column: 20, scope: !12536)
!12536 = distinct !DILexicalBlock(scope: !12537, file: !11948, line: 827, column: 14)
!12537 = distinct !DILexicalBlock(scope: !12515, file: !11948, line: 826, column: 9)
!12538 = !DILocation(line: 847, column: 3, scope: !12418)
!12539 = distinct !DISubprogram(name: "HAL_RCCEx_SelectLSEMode", scope: !11948, file: !11948, line: 2766, type: !12540, scopeLine: 2767, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !12542)
!12540 = !DISubroutineType(types: !12541)
!12541 = !{null, !195}
!12542 = !{!12543}
!12543 = !DILocalVariable(name: "Mode", arg: 1, scope: !12539, file: !11948, line: 2766, type: !195)
!12544 = !DILocation(line: 0, scope: !12539)
!12545 = !DILocation(line: 2770, column: 11, scope: !12546)
!12546 = distinct !DILexicalBlock(scope: !12539, file: !11948, line: 2770, column: 6)
!12547 = !DILocation(line: 0, scope: !12546)
!12548 = !DILocation(line: 2770, column: 6, scope: !12539)
!12549 = !DILocation(line: 2778, column: 1, scope: !12539)
!12550 = distinct !DISubprogram(name: "HAL_RCCEx_EnablePLLI2S", scope: !11948, file: !11948, line: 2803, type: !12551, scopeLine: 2804, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !12554)
!12551 = !DISubroutineType(types: !12552)
!12552 = !{!11951, !12553}
!12553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11959, size: 32)
!12554 = !{!12555, !12556}
!12555 = !DILocalVariable(name: "PLLI2SInit", arg: 1, scope: !12550, file: !11948, line: 2803, type: !12553)
!12556 = !DILocalVariable(name: "tickstart", scope: !12550, file: !11948, line: 2805, type: !152)
!12557 = !DILocation(line: 0, scope: !12550)
!12558 = !DILocation(line: 2821, column: 3, scope: !12550)
!12559 = !DILocation(line: 2824, column: 15, scope: !12550)
!12560 = !DILocation(line: 2825, column: 3, scope: !12550)
!12561 = !DILocation(line: 2825, column: 9, scope: !12550)
!12562 = !DILocation(line: 2827, column: 9, scope: !12563)
!12563 = distinct !DILexicalBlock(scope: !12564, file: !11948, line: 2827, column: 8)
!12564 = distinct !DILexicalBlock(scope: !12550, file: !11948, line: 2826, column: 3)
!12565 = !DILocation(line: 2827, column: 23, scope: !12563)
!12566 = !DILocation(line: 2827, column: 37, scope: !12563)
!12567 = !DILocation(line: 2827, column: 8, scope: !12564)
!12568 = distinct !{!12568, !12560, !12569}
!12569 = !DILocation(line: 2832, column: 3, scope: !12550)
!12570 = !DILocation(line: 2840, column: 3, scope: !12550)
!12571 = !DILocation(line: 2866, column: 3, scope: !12550)
!12572 = !DILocation(line: 2869, column: 15, scope: !12550)
!12573 = !DILocation(line: 2870, column: 3, scope: !12550)
!12574 = !DILocation(line: 2870, column: 9, scope: !12550)
!12575 = !DILocation(line: 2870, column: 48, scope: !12550)
!12576 = !DILocation(line: 2872, column: 9, scope: !12577)
!12577 = distinct !DILexicalBlock(scope: !12578, file: !11948, line: 2872, column: 8)
!12578 = distinct !DILexicalBlock(scope: !12550, file: !11948, line: 2871, column: 3)
!12579 = !DILocation(line: 2872, column: 23, scope: !12577)
!12580 = !DILocation(line: 2872, column: 37, scope: !12577)
!12581 = !DILocation(line: 2872, column: 8, scope: !12578)
!12582 = distinct !{!12582, !12573, !12583}
!12583 = !DILocation(line: 2877, column: 3, scope: !12550)
!12584 = !DILocation(line: 2880, column: 1, scope: !12550)
!12585 = distinct !DISubprogram(name: "HAL_RCCEx_DisablePLLI2S", scope: !11948, file: !11948, line: 2886, type: !12586, scopeLine: 2887, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !12588)
!12586 = !DISubroutineType(types: !12587)
!12587 = !{!11951}
!12588 = !{!12589}
!12589 = !DILocalVariable(name: "tickstart", scope: !12585, file: !11948, line: 2888, type: !152)
!12590 = !DILocation(line: 2891, column: 3, scope: !12585)
!12591 = !DILocation(line: 2894, column: 15, scope: !12585)
!12592 = !DILocation(line: 0, scope: !12585)
!12593 = !DILocation(line: 2895, column: 3, scope: !12585)
!12594 = !DILocation(line: 2895, column: 9, scope: !12585)
!12595 = !DILocation(line: 2895, column: 45, scope: !12585)
!12596 = !DILocation(line: 2897, column: 9, scope: !12597)
!12597 = distinct !DILexicalBlock(scope: !12598, file: !11948, line: 2897, column: 8)
!12598 = distinct !DILexicalBlock(scope: !12585, file: !11948, line: 2896, column: 3)
!12599 = !DILocation(line: 2897, column: 23, scope: !12597)
!12600 = !DILocation(line: 2897, column: 36, scope: !12597)
!12601 = !DILocation(line: 2897, column: 8, scope: !12598)
!12602 = distinct !{!12602, !12593, !12603}
!12603 = !DILocation(line: 2902, column: 3, scope: !12585)
!12604 = !DILocation(line: 2905, column: 1, scope: !12585)
!12605 = distinct !DISubprogram(name: "HAL_RCCEx_EnablePLLSAI", scope: !11948, file: !11948, line: 2916, type: !12606, scopeLine: 2917, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !12609)
!12606 = !DISubroutineType(types: !12607)
!12607 = !{!11951, !12608}
!12608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11968, size: 32)
!12609 = !{!12610, !12611}
!12610 = !DILocalVariable(name: "PLLSAIInit", arg: 1, scope: !12605, file: !11948, line: 2916, type: !12608)
!12611 = !DILocalVariable(name: "tickstart", scope: !12605, file: !11948, line: 2918, type: !152)
!12612 = !DILocation(line: 0, scope: !12605)
!12613 = !DILocation(line: 2934, column: 3, scope: !12605)
!12614 = !DILocation(line: 2937, column: 15, scope: !12605)
!12615 = !DILocation(line: 2938, column: 3, scope: !12605)
!12616 = !DILocation(line: 2938, column: 9, scope: !12605)
!12617 = !DILocation(line: 2940, column: 9, scope: !12618)
!12618 = distinct !DILexicalBlock(scope: !12619, file: !11948, line: 2940, column: 8)
!12619 = distinct !DILexicalBlock(scope: !12605, file: !11948, line: 2939, column: 3)
!12620 = !DILocation(line: 2940, column: 23, scope: !12618)
!12621 = !DILocation(line: 2940, column: 37, scope: !12618)
!12622 = !DILocation(line: 2940, column: 8, scope: !12619)
!12623 = distinct !{!12623, !12615, !12624}
!12624 = !DILocation(line: 2945, column: 3, scope: !12605)
!12625 = !DILocation(line: 2953, column: 3, scope: !12605)
!12626 = !DILocation(line: 2970, column: 3, scope: !12605)
!12627 = !DILocation(line: 2973, column: 15, scope: !12605)
!12628 = !DILocation(line: 2974, column: 3, scope: !12605)
!12629 = !DILocation(line: 2974, column: 9, scope: !12605)
!12630 = !DILocation(line: 2974, column: 37, scope: !12605)
!12631 = !DILocation(line: 2976, column: 9, scope: !12632)
!12632 = distinct !DILexicalBlock(scope: !12633, file: !11948, line: 2976, column: 8)
!12633 = distinct !DILexicalBlock(scope: !12605, file: !11948, line: 2975, column: 3)
!12634 = !DILocation(line: 2976, column: 23, scope: !12632)
!12635 = !DILocation(line: 2976, column: 37, scope: !12632)
!12636 = !DILocation(line: 2976, column: 8, scope: !12633)
!12637 = distinct !{!12637, !12628, !12638}
!12638 = !DILocation(line: 2981, column: 3, scope: !12605)
!12639 = !DILocation(line: 2984, column: 1, scope: !12605)
!12640 = distinct !DISubprogram(name: "HAL_RCCEx_DisablePLLSAI", scope: !11948, file: !11948, line: 2990, type: !12586, scopeLine: 2991, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !12641)
!12641 = !{!12642}
!12642 = !DILocalVariable(name: "tickstart", scope: !12640, file: !11948, line: 2992, type: !152)
!12643 = !DILocation(line: 2995, column: 3, scope: !12640)
!12644 = !DILocation(line: 2998, column: 15, scope: !12640)
!12645 = !DILocation(line: 0, scope: !12640)
!12646 = !DILocation(line: 2999, column: 3, scope: !12640)
!12647 = !DILocation(line: 2999, column: 9, scope: !12640)
!12648 = !DILocation(line: 3001, column: 9, scope: !12649)
!12649 = distinct !DILexicalBlock(scope: !12650, file: !11948, line: 3001, column: 8)
!12650 = distinct !DILexicalBlock(scope: !12640, file: !11948, line: 3000, column: 3)
!12651 = !DILocation(line: 3001, column: 23, scope: !12649)
!12652 = !DILocation(line: 3001, column: 36, scope: !12649)
!12653 = !DILocation(line: 3001, column: 8, scope: !12650)
!12654 = distinct !{!12654, !12646, !12655}
!12655 = !DILocation(line: 3006, column: 3, scope: !12640)
!12656 = !DILocation(line: 3009, column: 1, scope: !12640)
!12657 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !11948, file: !11948, line: 3051, type: !6405, scopeLine: 3052, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !12658)
!12658 = !{!12659, !12660, !12661, !12662, !12663}
!12659 = !DILocalVariable(name: "pllm", scope: !12657, file: !11948, line: 3053, type: !152)
!12660 = !DILocalVariable(name: "pllvco", scope: !12657, file: !11948, line: 3054, type: !152)
!12661 = !DILocalVariable(name: "pllp", scope: !12657, file: !11948, line: 3055, type: !152)
!12662 = !DILocalVariable(name: "pllr", scope: !12657, file: !11948, line: 3056, type: !152)
!12663 = !DILocalVariable(name: "sysclockfreq", scope: !12657, file: !11948, line: 3057, type: !152)
!12664 = !DILocation(line: 0, scope: !12657)
!12665 = !DILocation(line: 3060, column: 16, scope: !12657)
!12666 = !DILocation(line: 3060, column: 3, scope: !12657)
!12667 = !DILocation(line: 3076, column: 19, scope: !12668)
!12668 = distinct !DILexicalBlock(scope: !12669, file: !11948, line: 3073, column: 5)
!12669 = distinct !DILexicalBlock(scope: !12657, file: !11948, line: 3061, column: 3)
!12670 = !DILocation(line: 3076, column: 27, scope: !12668)
!12671 = !DILocation(line: 3077, column: 10, scope: !12672)
!12672 = distinct !DILexicalBlock(scope: !12668, file: !11948, line: 3077, column: 10)
!12673 = !DILocation(line: 0, scope: !12672)
!12674 = !DILocation(line: 3087, column: 23, scope: !12668)
!12675 = !DILocation(line: 3087, column: 82, scope: !12668)
!12676 = !DILocation(line: 3089, column: 28, scope: !12668)
!12677 = !DILocation(line: 3090, column: 7, scope: !12668)
!12678 = !DILocation(line: 3096, column: 19, scope: !12679)
!12679 = distinct !DILexicalBlock(scope: !12669, file: !11948, line: 3093, column: 5)
!12680 = !DILocation(line: 3096, column: 27, scope: !12679)
!12681 = !DILocation(line: 3097, column: 10, scope: !12682)
!12682 = distinct !DILexicalBlock(scope: !12679, file: !11948, line: 3097, column: 10)
!12683 = !DILocation(line: 0, scope: !12682)
!12684 = !DILocation(line: 3107, column: 21, scope: !12679)
!12685 = !DILocation(line: 3107, column: 49, scope: !12679)
!12686 = !DILocation(line: 3109, column: 28, scope: !12679)
!12687 = !DILocation(line: 3110, column: 7, scope: !12679)
!12688 = !DILocation(line: 0, scope: !12669)
!12689 = !DILocation(line: 3118, column: 3, scope: !12657)
!12690 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !11948, file: !11948, line: 3143, type: !12586, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !12691)
!12691 = !{!12692}
!12692 = !DILocalVariable(name: "tickstart", scope: !12690, file: !11948, line: 3145, type: !152)
!12693 = !DILocation(line: 3148, column: 15, scope: !12690)
!12694 = !DILocation(line: 0, scope: !12690)
!12695 = !DILocation(line: 3151, column: 3, scope: !12690)
!12696 = !DILocation(line: 3154, column: 3, scope: !12690)
!12697 = !DILocation(line: 3154, column: 10, scope: !12690)
!12698 = !DILocation(line: 3154, column: 43, scope: !12690)
!12699 = !DILocation(line: 3156, column: 10, scope: !12700)
!12700 = distinct !DILexicalBlock(scope: !12701, file: !11948, line: 3156, column: 9)
!12701 = distinct !DILexicalBlock(scope: !12690, file: !11948, line: 3155, column: 3)
!12702 = !DILocation(line: 3156, column: 24, scope: !12700)
!12703 = !DILocation(line: 3156, column: 37, scope: !12700)
!12704 = !DILocation(line: 3156, column: 9, scope: !12701)
!12705 = distinct !{!12705, !12696, !12706}
!12706 = !DILocation(line: 3160, column: 3, scope: !12690)
!12707 = !DILocation(line: 3163, column: 3, scope: !12690)
!12708 = !DILocation(line: 3166, column: 15, scope: !12690)
!12709 = !DILocation(line: 3169, column: 3, scope: !12690)
!12710 = !DILocation(line: 3172, column: 3, scope: !12690)
!12711 = !DILocation(line: 3172, column: 10, scope: !12690)
!12712 = !DILocation(line: 3172, column: 44, scope: !12690)
!12713 = !DILocation(line: 3174, column: 24, scope: !12714)
!12714 = distinct !DILexicalBlock(scope: !12715, file: !11948, line: 3174, column: 9)
!12715 = distinct !DILexicalBlock(scope: !12690, file: !11948, line: 3173, column: 3)
!12716 = !DILocation(line: 3174, column: 37, scope: !12714)
!12717 = !DILocation(line: 3174, column: 9, scope: !12715)
!12718 = distinct !{!12718, !12710, !12719}
!12719 = !DILocation(line: 3178, column: 3, scope: !12690)
!12720 = !DILocation(line: 3184, column: 3, scope: !12690)
!12721 = !DILocation(line: 3187, column: 3, scope: !12690)
!12722 = !DILocation(line: 3187, column: 10, scope: !12690)
!12723 = !DILocation(line: 3187, column: 43, scope: !12690)
!12724 = !DILocation(line: 3189, column: 24, scope: !12725)
!12725 = distinct !DILexicalBlock(scope: !12726, file: !11948, line: 3189, column: 9)
!12726 = distinct !DILexicalBlock(scope: !12690, file: !11948, line: 3188, column: 3)
!12727 = !DILocation(line: 3189, column: 37, scope: !12725)
!12728 = !DILocation(line: 3189, column: 9, scope: !12726)
!12729 = distinct !{!12729, !12721, !12730}
!12730 = !DILocation(line: 3193, column: 3, scope: !12690)
!12731 = !DILocation(line: 3199, column: 3, scope: !12690)
!12732 = !DILocation(line: 3202, column: 3, scope: !12690)
!12733 = !DILocation(line: 3202, column: 10, scope: !12690)
!12734 = !DILocation(line: 3202, column: 43, scope: !12690)
!12735 = !DILocation(line: 3204, column: 24, scope: !12736)
!12736 = distinct !DILexicalBlock(scope: !12737, file: !11948, line: 3204, column: 9)
!12737 = distinct !DILexicalBlock(scope: !12690, file: !11948, line: 3203, column: 3)
!12738 = !DILocation(line: 3204, column: 37, scope: !12736)
!12739 = !DILocation(line: 3204, column: 9, scope: !12737)
!12740 = distinct !{!12740, !12732, !12741}
!12741 = !DILocation(line: 3208, column: 3, scope: !12690)
!12742 = !DILocation(line: 3215, column: 3, scope: !12690)
!12743 = !DILocation(line: 3218, column: 3, scope: !12690)
!12744 = !DILocation(line: 3218, column: 10, scope: !12690)
!12745 = !DILocation(line: 3218, column: 46, scope: !12690)
!12746 = !DILocation(line: 3220, column: 24, scope: !12747)
!12747 = distinct !DILexicalBlock(scope: !12748, file: !11948, line: 3220, column: 9)
!12748 = distinct !DILexicalBlock(scope: !12690, file: !11948, line: 3219, column: 3)
!12749 = !DILocation(line: 3220, column: 37, scope: !12747)
!12750 = !DILocation(line: 3220, column: 9, scope: !12748)
!12751 = distinct !{!12751, !12743, !12752}
!12752 = !DILocation(line: 3224, column: 3, scope: !12690)
!12753 = !DILocation(line: 3232, column: 3, scope: !12690)
!12754 = !DILocation(line: 3235, column: 3, scope: !12690)
!12755 = !DILocation(line: 3235, column: 10, scope: !12690)
!12756 = !DILocation(line: 3235, column: 46, scope: !12690)
!12757 = !DILocation(line: 3237, column: 10, scope: !12758)
!12758 = distinct !DILexicalBlock(scope: !12759, file: !11948, line: 3237, column: 9)
!12759 = distinct !DILexicalBlock(scope: !12690, file: !11948, line: 3236, column: 3)
!12760 = !DILocation(line: 3237, column: 24, scope: !12758)
!12761 = !DILocation(line: 3237, column: 37, scope: !12758)
!12762 = !DILocation(line: 3237, column: 9, scope: !12759)
!12763 = distinct !{!12763, !12754, !12764}
!12764 = !DILocation(line: 3241, column: 3, scope: !12690)
!12765 = !DILocation(line: 3247, column: 16, scope: !12690)
!12766 = !DILocation(line: 3257, column: 19, scope: !12690)
!12767 = !DILocation(line: 3270, column: 19, scope: !12690)
!12768 = !DILocation(line: 3274, column: 3, scope: !12690)
!12769 = !DILocation(line: 3277, column: 3, scope: !12690)
!12770 = !DILocation(line: 3281, column: 3, scope: !12690)
!12771 = !DILocation(line: 3285, column: 3, scope: !12690)
!12772 = !DILocation(line: 3288, column: 3, scope: !12690)
!12773 = !DILocation(line: 3292, column: 3, scope: !12690)
!12774 = !DILocation(line: 3296, column: 3, scope: !12690)
!12775 = !DILocation(line: 3299, column: 3, scope: !12690)
!12776 = !DILocation(line: 3302, column: 19, scope: !12690)
!12777 = !DILocation(line: 3305, column: 19, scope: !12778)
!12778 = distinct !DILexicalBlock(scope: !12690, file: !11948, line: 3305, column: 6)
!12779 = !DILocation(line: 3305, column: 6, scope: !12778)
!12780 = !DILocation(line: 3305, column: 31, scope: !12778)
!12781 = !DILocation(line: 0, scope: !12778)
!12782 = !DILocation(line: 3313, column: 1, scope: !12690)
!12783 = !DISubprogram(name: "HAL_InitTick", scope: !12323, file: !12323, line: 223, type: !12784, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2236)
!12784 = !DISubroutineType(types: !12785)
!12785 = !{!11951, !152}
!12786 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !11948, file: !11948, line: 3333, type: !12787, scopeLine: 3334, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !12811)
!12787 = !DISubroutineType(types: !12788)
!12788 = !{!11951, !12789}
!12789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12790, size: 32)
!12790 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !12791, line: 70, baseType: !12792)
!12791 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12792 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12791, line: 49, size: 416, elements: !12793)
!12793 = !{!12794, !12795, !12796, !12797, !12798, !12799, !12800}
!12794 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !12792, file: !12791, line: 51, baseType: !152, size: 32)
!12795 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !12792, file: !12791, line: 54, baseType: !152, size: 32, offset: 32)
!12796 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !12792, file: !12791, line: 57, baseType: !152, size: 32, offset: 64)
!12797 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !12792, file: !12791, line: 60, baseType: !152, size: 32, offset: 96)
!12798 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !12792, file: !12791, line: 63, baseType: !152, size: 32, offset: 128)
!12799 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !12792, file: !12791, line: 66, baseType: !152, size: 32, offset: 160)
!12800 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !12792, file: !12791, line: 69, baseType: !12801, size: 224, offset: 192)
!12801 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !11954, line: 73, baseType: !12802)
!12802 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11954, line: 45, size: 224, elements: !12803)
!12803 = !{!12804, !12805, !12806, !12807, !12808, !12809, !12810}
!12804 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !12802, file: !11954, line: 47, baseType: !152, size: 32)
!12805 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !12802, file: !11954, line: 50, baseType: !152, size: 32, offset: 32)
!12806 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !12802, file: !11954, line: 53, baseType: !152, size: 32, offset: 64)
!12807 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !12802, file: !11954, line: 56, baseType: !152, size: 32, offset: 96)
!12808 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !12802, file: !11954, line: 60, baseType: !152, size: 32, offset: 128)
!12809 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !12802, file: !11954, line: 63, baseType: !152, size: 32, offset: 160)
!12810 = !DIDerivedType(tag: DW_TAG_member, name: "PLLR", scope: !12802, file: !11954, line: 68, baseType: !152, size: 32, offset: 192)
!12811 = !{!12812, !12813, !12814, !12815, !12819}
!12812 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !12786, file: !11948, line: 3333, type: !12789)
!12813 = !DILocalVariable(name: "tickstart", scope: !12786, file: !11948, line: 3335, type: !152)
!12814 = !DILocalVariable(name: "pll_config", scope: !12786, file: !11948, line: 3335, type: !152)
!12815 = !DILocalVariable(name: "pwrclkchanged", scope: !12816, file: !11948, line: 3517, type: !12818)
!12816 = distinct !DILexicalBlock(scope: !12817, file: !11948, line: 3516, column: 3)
!12817 = distinct !DILexicalBlock(scope: !12786, file: !11948, line: 3515, column: 6)
!12818 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !975, line: 188, baseType: !2988)
!12819 = !DILocalVariable(name: "tmpreg", scope: !12820, file: !11948, line: 3526, type: !227)
!12820 = distinct !DILexicalBlock(scope: !12821, file: !11948, line: 3526, column: 7)
!12821 = distinct !DILexicalBlock(scope: !12822, file: !11948, line: 3525, column: 5)
!12822 = distinct !DILexicalBlock(scope: !12816, file: !11948, line: 3524, column: 8)
!12823 = !DILocation(line: 0, scope: !12786)
!12824 = !DILocation(line: 3338, column: 24, scope: !12825)
!12825 = distinct !DILexicalBlock(scope: !12786, file: !11948, line: 3338, column: 6)
!12826 = !DILocation(line: 3338, column: 6, scope: !12786)
!12827 = !DILocation(line: 3346, column: 27, scope: !12828)
!12828 = distinct !DILexicalBlock(scope: !12786, file: !11948, line: 3346, column: 6)
!12829 = !DILocation(line: 3346, column: 43, scope: !12828)
!12830 = !DILocation(line: 3346, column: 69, scope: !12828)
!12831 = !DILocation(line: 3346, column: 6, scope: !12786)
!12832 = !DILocation(line: 3352, column: 9, scope: !12833)
!12833 = distinct !DILexicalBlock(scope: !12834, file: !11948, line: 3352, column: 8)
!12834 = distinct !DILexicalBlock(scope: !12828, file: !11948, line: 3347, column: 3)
!12835 = !DILocation(line: 3352, column: 39, scope: !12833)
!12836 = !DILocation(line: 3352, column: 128, scope: !12833)
!12837 = !DILocation(line: 3353, column: 9, scope: !12833)
!12838 = !DILocation(line: 3353, column: 39, scope: !12833)
!12839 = !DILocation(line: 3353, column: 60, scope: !12833)
!12840 = !DILocation(line: 3353, column: 70, scope: !12833)
!12841 = !DILocation(line: 3353, column: 78, scope: !12833)
!12842 = !DILocation(line: 3353, column: 100, scope: !12833)
!12843 = !DILocation(line: 3353, column: 128, scope: !12833)
!12844 = !DILocation(line: 3354, column: 9, scope: !12833)
!12845 = !DILocation(line: 3354, column: 39, scope: !12833)
!12846 = !DILocation(line: 3354, column: 61, scope: !12833)
!12847 = !DILocation(line: 3354, column: 71, scope: !12833)
!12848 = !DILocation(line: 3354, column: 79, scope: !12833)
!12849 = !DILocation(line: 3354, column: 101, scope: !12833)
!12850 = !DILocation(line: 3352, column: 8, scope: !12834)
!12851 = !DILocation(line: 3360, column: 11, scope: !12852)
!12852 = distinct !DILexicalBlock(scope: !12853, file: !11948, line: 3360, column: 10)
!12853 = distinct !DILexicalBlock(scope: !12833, file: !11948, line: 3359, column: 5)
!12854 = !DILocation(line: 3360, column: 57, scope: !12852)
!12855 = !DILocation(line: 3360, column: 80, scope: !12852)
!12856 = !DILocation(line: 3360, column: 89, scope: !12852)
!12857 = !DILocation(line: 3360, column: 10, scope: !12853)
!12858 = !DILocation(line: 3368, column: 7, scope: !12859)
!12859 = distinct !DILexicalBlock(scope: !12860, file: !11948, line: 3368, column: 7)
!12860 = distinct !DILexicalBlock(scope: !12861, file: !11948, line: 3368, column: 7)
!12861 = distinct !DILexicalBlock(scope: !12833, file: !11948, line: 3366, column: 5)
!12862 = !DILocation(line: 3368, column: 7, scope: !12860)
!12863 = !DILocation(line: 3368, column: 7, scope: !12864)
!12864 = distinct !DILexicalBlock(scope: !12859, file: !11948, line: 3368, column: 7)
!12865 = !DILocation(line: 3368, column: 7, scope: !12866)
!12866 = distinct !DILexicalBlock(scope: !12867, file: !11948, line: 3368, column: 7)
!12867 = distinct !DILexicalBlock(scope: !12859, file: !11948, line: 3368, column: 7)
!12868 = !DILocation(line: 3368, column: 7, scope: !12869)
!12869 = distinct !DILexicalBlock(scope: !12867, file: !11948, line: 3368, column: 7)
!12870 = !DILocation(line: 0, scope: !12859)
!12871 = !DILocation(line: 3371, column: 30, scope: !12872)
!12872 = distinct !DILexicalBlock(scope: !12861, file: !11948, line: 3371, column: 10)
!12873 = !DILocation(line: 3371, column: 40, scope: !12872)
!12874 = !DILocation(line: 0, scope: !12872)
!12875 = !DILocation(line: 3371, column: 10, scope: !12861)
!12876 = !DILocation(line: 3377, column: 15, scope: !12877)
!12877 = distinct !DILexicalBlock(scope: !12872, file: !11948, line: 3372, column: 7)
!12878 = !DILocation(line: 3377, column: 51, scope: !12877)
!12879 = !DILocation(line: 3377, column: 9, scope: !12877)
!12880 = !DILocation(line: 3379, column: 15, scope: !12881)
!12881 = distinct !DILexicalBlock(scope: !12882, file: !11948, line: 3379, column: 14)
!12882 = distinct !DILexicalBlock(scope: !12877, file: !11948, line: 3378, column: 9)
!12883 = !DILocation(line: 3379, column: 29, scope: !12881)
!12884 = !DILocation(line: 3379, column: 43, scope: !12881)
!12885 = !DILocation(line: 3379, column: 14, scope: !12882)
!12886 = distinct !{!12886, !12879, !12887}
!12887 = !DILocation(line: 3383, column: 9, scope: !12877)
!12888 = !DILocation(line: 3391, column: 15, scope: !12889)
!12889 = distinct !DILexicalBlock(scope: !12872, file: !11948, line: 3386, column: 7)
!12890 = !DILocation(line: 3391, column: 9, scope: !12889)
!12891 = !DILocation(line: 3393, column: 15, scope: !12892)
!12892 = distinct !DILexicalBlock(scope: !12893, file: !11948, line: 3393, column: 14)
!12893 = distinct !DILexicalBlock(scope: !12889, file: !11948, line: 3392, column: 9)
!12894 = !DILocation(line: 3393, column: 29, scope: !12892)
!12895 = !DILocation(line: 3393, column: 43, scope: !12892)
!12896 = !DILocation(line: 3393, column: 14, scope: !12893)
!12897 = distinct !{!12897, !12890, !12898}
!12898 = !DILocation(line: 3397, column: 9, scope: !12889)
!12899 = !DILocation(line: 3402, column: 27, scope: !12900)
!12900 = distinct !DILexicalBlock(scope: !12786, file: !11948, line: 3402, column: 6)
!12901 = !DILocation(line: 3402, column: 43, scope: !12900)
!12902 = !DILocation(line: 3402, column: 69, scope: !12900)
!12903 = !DILocation(line: 3402, column: 6, scope: !12786)
!12904 = !DILocation(line: 3410, column: 9, scope: !12905)
!12905 = distinct !DILexicalBlock(scope: !12906, file: !11948, line: 3410, column: 8)
!12906 = distinct !DILexicalBlock(scope: !12900, file: !11948, line: 3403, column: 3)
!12907 = !DILocation(line: 3410, column: 39, scope: !12905)
!12908 = !DILocation(line: 3410, column: 128, scope: !12905)
!12909 = !DILocation(line: 3411, column: 9, scope: !12905)
!12910 = !DILocation(line: 3411, column: 39, scope: !12905)
!12911 = !DILocation(line: 3411, column: 60, scope: !12905)
!12912 = !DILocation(line: 3411, column: 70, scope: !12905)
!12913 = !DILocation(line: 3411, column: 78, scope: !12905)
!12914 = !DILocation(line: 3411, column: 100, scope: !12905)
!12915 = !DILocation(line: 3411, column: 128, scope: !12905)
!12916 = !DILocation(line: 3412, column: 9, scope: !12905)
!12917 = !DILocation(line: 3412, column: 39, scope: !12905)
!12918 = !DILocation(line: 3412, column: 61, scope: !12905)
!12919 = !DILocation(line: 3412, column: 71, scope: !12905)
!12920 = !DILocation(line: 3412, column: 79, scope: !12905)
!12921 = !DILocation(line: 3412, column: 101, scope: !12905)
!12922 = !DILocation(line: 3410, column: 8, scope: !12906)
!12923 = !DILocation(line: 3419, column: 11, scope: !12924)
!12924 = distinct !DILexicalBlock(scope: !12925, file: !11948, line: 3419, column: 10)
!12925 = distinct !DILexicalBlock(scope: !12905, file: !11948, line: 3417, column: 5)
!12926 = !DILocation(line: 3419, column: 57, scope: !12924)
!12927 = !DILocation(line: 3419, column: 80, scope: !12924)
!12928 = !DILocation(line: 3419, column: 89, scope: !12924)
!12929 = !DILocation(line: 3419, column: 10, scope: !12925)
!12930 = !DILocation(line: 3433, column: 30, scope: !12931)
!12931 = distinct !DILexicalBlock(scope: !12932, file: !11948, line: 3433, column: 10)
!12932 = distinct !DILexicalBlock(scope: !12905, file: !11948, line: 3431, column: 5)
!12933 = !DILocation(line: 3433, column: 39, scope: !12931)
!12934 = !DILocation(line: 3433, column: 10, scope: !12932)
!12935 = !DILocation(line: 3436, column: 9, scope: !12936)
!12936 = distinct !DILexicalBlock(scope: !12931, file: !11948, line: 3434, column: 7)
!12937 = !DILocation(line: 3439, column: 21, scope: !12936)
!12938 = !DILocation(line: 3442, column: 9, scope: !12936)
!12939 = !DILocation(line: 3442, column: 15, scope: !12936)
!12940 = !DILocation(line: 3442, column: 51, scope: !12936)
!12941 = !DILocation(line: 3444, column: 15, scope: !12942)
!12942 = distinct !DILexicalBlock(scope: !12943, file: !11948, line: 3444, column: 14)
!12943 = distinct !DILexicalBlock(scope: !12936, file: !11948, line: 3443, column: 9)
!12944 = !DILocation(line: 3444, column: 29, scope: !12942)
!12945 = !DILocation(line: 3444, column: 43, scope: !12942)
!12946 = !DILocation(line: 3444, column: 14, scope: !12943)
!12947 = distinct !{!12947, !12938, !12948}
!12948 = !DILocation(line: 3448, column: 9, scope: !12936)
!12949 = !DILocation(line: 3456, column: 9, scope: !12950)
!12950 = distinct !DILexicalBlock(scope: !12931, file: !11948, line: 3454, column: 7)
!12951 = !DILocation(line: 3459, column: 21, scope: !12950)
!12952 = !DILocation(line: 3462, column: 9, scope: !12950)
!12953 = !DILocation(line: 3462, column: 15, scope: !12950)
!12954 = !DILocation(line: 3464, column: 15, scope: !12955)
!12955 = distinct !DILexicalBlock(scope: !12956, file: !11948, line: 3464, column: 14)
!12956 = distinct !DILexicalBlock(scope: !12950, file: !11948, line: 3463, column: 9)
!12957 = !DILocation(line: 3464, column: 29, scope: !12955)
!12958 = !DILocation(line: 3464, column: 43, scope: !12955)
!12959 = !DILocation(line: 3464, column: 14, scope: !12956)
!12960 = distinct !{!12960, !12952, !12961}
!12961 = !DILocation(line: 3468, column: 9, scope: !12950)
!12962 = !DILocation(line: 0, scope: !12905)
!12963 = !DILocation(line: 3473, column: 27, scope: !12964)
!12964 = distinct !DILexicalBlock(scope: !12786, file: !11948, line: 3473, column: 6)
!12965 = !DILocation(line: 3473, column: 43, scope: !12964)
!12966 = !DILocation(line: 3473, column: 69, scope: !12964)
!12967 = !DILocation(line: 3473, column: 6, scope: !12786)
!12968 = !DILocation(line: 3479, column: 28, scope: !12969)
!12969 = distinct !DILexicalBlock(scope: !12970, file: !11948, line: 3479, column: 8)
!12970 = distinct !DILexicalBlock(scope: !12964, file: !11948, line: 3474, column: 3)
!12971 = !DILocation(line: 3479, column: 37, scope: !12969)
!12972 = !DILocation(line: 3479, column: 8, scope: !12970)
!12973 = !DILocation(line: 3482, column: 7, scope: !12974)
!12974 = distinct !DILexicalBlock(scope: !12969, file: !11948, line: 3480, column: 5)
!12975 = !DILocation(line: 3485, column: 19, scope: !12974)
!12976 = !DILocation(line: 3488, column: 7, scope: !12974)
!12977 = !DILocation(line: 3488, column: 13, scope: !12974)
!12978 = !DILocation(line: 3488, column: 49, scope: !12974)
!12979 = !DILocation(line: 3490, column: 13, scope: !12980)
!12980 = distinct !DILexicalBlock(scope: !12981, file: !11948, line: 3490, column: 12)
!12981 = distinct !DILexicalBlock(scope: !12974, file: !11948, line: 3489, column: 7)
!12982 = !DILocation(line: 3490, column: 27, scope: !12980)
!12983 = !DILocation(line: 3490, column: 41, scope: !12980)
!12984 = !DILocation(line: 3490, column: 12, scope: !12981)
!12985 = distinct !{!12985, !12976, !12986}
!12986 = !DILocation(line: 3494, column: 7, scope: !12974)
!12987 = !DILocation(line: 3499, column: 7, scope: !12988)
!12988 = distinct !DILexicalBlock(scope: !12969, file: !11948, line: 3497, column: 5)
!12989 = !DILocation(line: 3502, column: 19, scope: !12988)
!12990 = !DILocation(line: 3505, column: 7, scope: !12988)
!12991 = !DILocation(line: 3505, column: 13, scope: !12988)
!12992 = !DILocation(line: 3507, column: 13, scope: !12993)
!12993 = distinct !DILexicalBlock(scope: !12994, file: !11948, line: 3507, column: 12)
!12994 = distinct !DILexicalBlock(scope: !12988, file: !11948, line: 3506, column: 7)
!12995 = !DILocation(line: 3507, column: 27, scope: !12993)
!12996 = !DILocation(line: 3507, column: 41, scope: !12993)
!12997 = !DILocation(line: 3507, column: 12, scope: !12994)
!12998 = distinct !{!12998, !12990, !12999}
!12999 = !DILocation(line: 3511, column: 7, scope: !12988)
!13000 = !DILocation(line: 3515, column: 27, scope: !12817)
!13001 = !DILocation(line: 3515, column: 43, scope: !12817)
!13002 = !DILocation(line: 3515, column: 69, scope: !12817)
!13003 = !DILocation(line: 3515, column: 6, scope: !12786)
!13004 = !DILocation(line: 0, scope: !12816)
!13005 = !DILocation(line: 3524, column: 8, scope: !12822)
!13006 = !DILocation(line: 3524, column: 8, scope: !12816)
!13007 = !DILocation(line: 3526, column: 7, scope: !12820)
!13008 = !DILocation(line: 3526, column: 7, scope: !12821)
!13009 = !DILocation(line: 3528, column: 5, scope: !12821)
!13010 = !DILocation(line: 3530, column: 8, scope: !13011)
!13011 = distinct !DILexicalBlock(scope: !12816, file: !11948, line: 3530, column: 8)
!13012 = !DILocation(line: 3530, column: 8, scope: !12816)
!13013 = !DILocation(line: 3533, column: 7, scope: !13014)
!13014 = distinct !DILexicalBlock(scope: !13011, file: !11948, line: 3531, column: 5)
!13015 = !DILocation(line: 3536, column: 19, scope: !13014)
!13016 = !DILocation(line: 3538, column: 7, scope: !13014)
!13017 = !DILocation(line: 3538, column: 13, scope: !13014)
!13018 = !DILocation(line: 3540, column: 13, scope: !13019)
!13019 = distinct !DILexicalBlock(scope: !13020, file: !11948, line: 3540, column: 12)
!13020 = distinct !DILexicalBlock(scope: !13014, file: !11948, line: 3539, column: 7)
!13021 = !DILocation(line: 3540, column: 27, scope: !13019)
!13022 = !DILocation(line: 3540, column: 40, scope: !13019)
!13023 = !DILocation(line: 3540, column: 12, scope: !13020)
!13024 = distinct !{!13024, !13016, !13025}
!13025 = !DILocation(line: 3544, column: 7, scope: !13014)
!13026 = !DILocation(line: 3548, column: 5, scope: !13027)
!13027 = distinct !DILexicalBlock(scope: !13028, file: !11948, line: 3548, column: 5)
!13028 = distinct !DILexicalBlock(scope: !12816, file: !11948, line: 3548, column: 5)
!13029 = !DILocation(line: 3548, column: 5, scope: !13028)
!13030 = !DILocation(line: 3548, column: 5, scope: !13031)
!13031 = distinct !DILexicalBlock(scope: !13027, file: !11948, line: 3548, column: 5)
!13032 = !DILocation(line: 3548, column: 5, scope: !13033)
!13033 = distinct !DILexicalBlock(scope: !13034, file: !11948, line: 3548, column: 5)
!13034 = distinct !DILexicalBlock(scope: !13027, file: !11948, line: 3548, column: 5)
!13035 = !DILocation(line: 3548, column: 5, scope: !13036)
!13036 = distinct !DILexicalBlock(scope: !13034, file: !11948, line: 3548, column: 5)
!13037 = !DILocation(line: 0, scope: !13027)
!13038 = !DILocation(line: 3550, column: 28, scope: !13039)
!13039 = distinct !DILexicalBlock(scope: !12816, file: !11948, line: 3550, column: 8)
!13040 = !DILocation(line: 3550, column: 38, scope: !13039)
!13041 = !DILocation(line: 0, scope: !13039)
!13042 = !DILocation(line: 3550, column: 8, scope: !12816)
!13043 = !DILocation(line: 3556, column: 13, scope: !13044)
!13044 = distinct !DILexicalBlock(scope: !13039, file: !11948, line: 3551, column: 5)
!13045 = !DILocation(line: 3556, column: 49, scope: !13044)
!13046 = !DILocation(line: 3556, column: 7, scope: !13044)
!13047 = !DILocation(line: 3558, column: 13, scope: !13048)
!13048 = distinct !DILexicalBlock(scope: !13049, file: !11948, line: 3558, column: 12)
!13049 = distinct !DILexicalBlock(scope: !13044, file: !11948, line: 3557, column: 7)
!13050 = !DILocation(line: 3558, column: 27, scope: !13048)
!13051 = !DILocation(line: 3558, column: 41, scope: !13048)
!13052 = !DILocation(line: 3558, column: 12, scope: !13049)
!13053 = distinct !{!13053, !13046, !13054}
!13054 = !DILocation(line: 3562, column: 7, scope: !13044)
!13055 = !DILocation(line: 3570, column: 13, scope: !13056)
!13056 = distinct !DILexicalBlock(scope: !13039, file: !11948, line: 3565, column: 5)
!13057 = !DILocation(line: 3570, column: 7, scope: !13056)
!13058 = !DILocation(line: 3572, column: 13, scope: !13059)
!13059 = distinct !DILexicalBlock(scope: !13060, file: !11948, line: 3572, column: 12)
!13060 = distinct !DILexicalBlock(scope: !13056, file: !11948, line: 3571, column: 7)
!13061 = !DILocation(line: 3572, column: 27, scope: !13059)
!13062 = !DILocation(line: 3572, column: 41, scope: !13059)
!13063 = !DILocation(line: 3572, column: 12, scope: !13060)
!13064 = distinct !{!13064, !13057, !13065}
!13065 = !DILocation(line: 3576, column: 7, scope: !13056)
!13066 = !DILocation(line: 3580, column: 8, scope: !12816)
!13067 = !DILocation(line: 3582, column: 7, scope: !13068)
!13068 = distinct !DILexicalBlock(scope: !13069, file: !11948, line: 3581, column: 5)
!13069 = distinct !DILexicalBlock(scope: !12816, file: !11948, line: 3580, column: 8)
!13070 = !DILocation(line: 3583, column: 5, scope: !13068)
!13071 = !DILocation(line: 3588, column: 31, scope: !13072)
!13072 = distinct !DILexicalBlock(scope: !12786, file: !11948, line: 3588, column: 7)
!13073 = !DILocation(line: 3588, column: 41, scope: !13072)
!13074 = !DILocation(line: 3588, column: 7, scope: !12786)
!13075 = !DILocation(line: 3591, column: 8, scope: !13076)
!13076 = distinct !DILexicalBlock(scope: !13077, file: !11948, line: 3591, column: 8)
!13077 = distinct !DILexicalBlock(scope: !13072, file: !11948, line: 3589, column: 3)
!13078 = !DILocation(line: 3591, column: 38, scope: !13076)
!13079 = !DILocation(line: 3591, column: 8, scope: !13077)
!13080 = !DILocation(line: 3593, column: 44, scope: !13081)
!13081 = distinct !DILexicalBlock(scope: !13082, file: !11948, line: 3593, column: 10)
!13082 = distinct !DILexicalBlock(scope: !13076, file: !11948, line: 3592, column: 5)
!13083 = !DILocation(line: 0, scope: !13081)
!13084 = !DILocation(line: 3593, column: 10, scope: !13082)
!13085 = !DILocation(line: 3610, column: 15, scope: !13086)
!13086 = distinct !DILexicalBlock(scope: !13081, file: !11948, line: 3594, column: 7)
!13087 = !DILocation(line: 3610, column: 9, scope: !13086)
!13088 = !DILocation(line: 3612, column: 15, scope: !13089)
!13089 = distinct !DILexicalBlock(scope: !13090, file: !11948, line: 3612, column: 14)
!13090 = distinct !DILexicalBlock(scope: !13086, file: !11948, line: 3611, column: 9)
!13091 = !DILocation(line: 3612, column: 29, scope: !13089)
!13092 = !DILocation(line: 3612, column: 43, scope: !13089)
!13093 = !DILocation(line: 3612, column: 14, scope: !13090)
!13094 = distinct !{!13094, !13087, !13095}
!13095 = !DILocation(line: 3616, column: 9, scope: !13086)
!13096 = !DILocation(line: 3619, column: 9, scope: !13086)
!13097 = !DILocation(line: 3626, column: 9, scope: !13086)
!13098 = !DILocation(line: 3629, column: 21, scope: !13086)
!13099 = !DILocation(line: 3632, column: 9, scope: !13086)
!13100 = !DILocation(line: 3632, column: 15, scope: !13086)
!13101 = !DILocation(line: 3632, column: 51, scope: !13086)
!13102 = !DILocation(line: 3634, column: 15, scope: !13103)
!13103 = distinct !DILexicalBlock(scope: !13104, file: !11948, line: 3634, column: 14)
!13104 = distinct !DILexicalBlock(scope: !13086, file: !11948, line: 3633, column: 9)
!13105 = !DILocation(line: 3634, column: 29, scope: !13103)
!13106 = !DILocation(line: 3634, column: 43, scope: !13103)
!13107 = !DILocation(line: 3634, column: 14, scope: !13104)
!13108 = distinct !{!13108, !13099, !13109}
!13109 = !DILocation(line: 3638, column: 9, scope: !13086)
!13110 = !DILocation(line: 3649, column: 15, scope: !13111)
!13111 = distinct !DILexicalBlock(scope: !13081, file: !11948, line: 3641, column: 7)
!13112 = !DILocation(line: 3649, column: 9, scope: !13111)
!13113 = !DILocation(line: 3651, column: 15, scope: !13114)
!13114 = distinct !DILexicalBlock(scope: !13115, file: !11948, line: 3651, column: 14)
!13115 = distinct !DILexicalBlock(scope: !13111, file: !11948, line: 3650, column: 9)
!13116 = !DILocation(line: 3651, column: 29, scope: !13114)
!13117 = !DILocation(line: 3651, column: 43, scope: !13114)
!13118 = !DILocation(line: 3651, column: 14, scope: !13115)
!13119 = distinct !{!13119, !13112, !13120}
!13120 = !DILocation(line: 3655, column: 9, scope: !13111)
!13121 = !DILocation(line: 3661, column: 44, scope: !13122)
!13122 = distinct !DILexicalBlock(scope: !13123, file: !11948, line: 3661, column: 10)
!13123 = distinct !DILexicalBlock(scope: !13076, file: !11948, line: 3659, column: 5)
!13124 = !DILocation(line: 3661, column: 10, scope: !13123)
!13125 = !DILocation(line: 3668, column: 27, scope: !13126)
!13126 = distinct !DILexicalBlock(scope: !13122, file: !11948, line: 3666, column: 7)
!13127 = !DILocation(line: 3671, column: 14, scope: !13128)
!13128 = distinct !DILexicalBlock(scope: !13126, file: !11948, line: 3670, column: 13)
!13129 = !DILocation(line: 3671, column: 81, scope: !13128)
!13130 = !DILocation(line: 3671, column: 55, scope: !13128)
!13131 = !DILocation(line: 3671, column: 92, scope: !13128)
!13132 = !DILocation(line: 3672, column: 14, scope: !13128)
!13133 = !DILocation(line: 3672, column: 80, scope: !13128)
!13134 = !DILocation(line: 3672, column: 53, scope: !13128)
!13135 = !DILocation(line: 3672, column: 111, scope: !13128)
!13136 = !DILocation(line: 3673, column: 14, scope: !13128)
!13137 = !DILocation(line: 3673, column: 80, scope: !13128)
!13138 = !DILocation(line: 3673, column: 86, scope: !13128)
!13139 = !DILocation(line: 3673, column: 53, scope: !13128)
!13140 = !DILocation(line: 3673, column: 111, scope: !13128)
!13141 = !DILocation(line: 3674, column: 14, scope: !13128)
!13142 = !DILocation(line: 3674, column: 82, scope: !13128)
!13143 = !DILocation(line: 3674, column: 101, scope: !13128)
!13144 = !DILocation(line: 3674, column: 53, scope: !13128)
!13145 = !DILocation(line: 3674, column: 126, scope: !13128)
!13146 = !DILocation(line: 3675, column: 14, scope: !13128)
!13147 = !DILocation(line: 3675, column: 80, scope: !13128)
!13148 = !DILocation(line: 3675, column: 85, scope: !13128)
!13149 = !DILocation(line: 3675, column: 53, scope: !13128)
!13150 = !DILocation(line: 3675, column: 111, scope: !13128)
!13151 = !DILocation(line: 3676, column: 14, scope: !13128)
!13152 = !DILocation(line: 3676, column: 80, scope: !13128)
!13153 = !DILocation(line: 3676, column: 85, scope: !13128)
!13154 = !DILocation(line: 3676, column: 53, scope: !13128)
!13155 = !DILocation(line: 3670, column: 13, scope: !13126)
!13156 = !DILocation(line: 3691, column: 3, scope: !12786)
!13157 = !DILocation(line: 3692, column: 1, scope: !12786)
!13158 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !11948, file: !11948, line: 3703, type: !13159, scopeLine: 3704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !13161)
!13159 = !DISubroutineType(types: !13160)
!13160 = !{null, !12789}
!13161 = !{!13162}
!13162 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !13158, file: !11948, line: 3703, type: !12789)
!13163 = !DILocation(line: 0, scope: !13158)
!13164 = !DILocation(line: 3706, column: 22, scope: !13158)
!13165 = !DILocation(line: 3706, column: 37, scope: !13158)
!13166 = !DILocation(line: 3709, column: 12, scope: !13167)
!13167 = distinct !DILexicalBlock(scope: !13158, file: !11948, line: 3709, column: 6)
!13168 = !DILocation(line: 3709, column: 15, scope: !13167)
!13169 = !DILocation(line: 3709, column: 31, scope: !13167)
!13170 = !DILocation(line: 3709, column: 6, scope: !13158)
!13171 = !DILocation(line: 3711, column: 24, scope: !13172)
!13172 = distinct !DILexicalBlock(scope: !13167, file: !11948, line: 3710, column: 3)
!13173 = !DILocation(line: 3711, column: 33, scope: !13172)
!13174 = !DILocation(line: 3712, column: 3, scope: !13172)
!13175 = !DILocation(line: 3713, column: 17, scope: !13176)
!13176 = distinct !DILexicalBlock(scope: !13167, file: !11948, line: 3713, column: 11)
!13177 = !DILocation(line: 3713, column: 20, scope: !13176)
!13178 = !DILocation(line: 3713, column: 35, scope: !13176)
!13179 = !DILocation(line: 0, scope: !13176)
!13180 = !DILocation(line: 3713, column: 11, scope: !13167)
!13181 = !DILocation(line: 3715, column: 33, scope: !13182)
!13182 = distinct !DILexicalBlock(scope: !13176, file: !11948, line: 3714, column: 3)
!13183 = !DILocation(line: 3716, column: 3, scope: !13182)
!13184 = !DILocation(line: 3719, column: 33, scope: !13185)
!13185 = distinct !DILexicalBlock(scope: !13176, file: !11948, line: 3718, column: 3)
!13186 = !DILocation(line: 3723, column: 12, scope: !13187)
!13187 = distinct !DILexicalBlock(scope: !13158, file: !11948, line: 3723, column: 6)
!13188 = !DILocation(line: 3723, column: 15, scope: !13187)
!13189 = !DILocation(line: 3729, column: 24, scope: !13190)
!13190 = distinct !DILexicalBlock(scope: !13187, file: !11948, line: 3728, column: 3)
!13191 = !DILocation(line: 3729, column: 33, scope: !13190)
!13192 = !DILocation(line: 3732, column: 61, scope: !13158)
!13193 = !DILocation(line: 3732, column: 81, scope: !13158)
!13194 = !DILocation(line: 3732, column: 22, scope: !13158)
!13195 = !DILocation(line: 3732, column: 42, scope: !13158)
!13196 = !DILocation(line: 3735, column: 12, scope: !13197)
!13197 = distinct !DILexicalBlock(scope: !13158, file: !11948, line: 3735, column: 6)
!13198 = !DILocation(line: 3735, column: 17, scope: !13197)
!13199 = !DILocation(line: 3735, column: 35, scope: !13197)
!13200 = !DILocation(line: 3735, column: 6, scope: !13158)
!13201 = !DILocation(line: 3737, column: 24, scope: !13202)
!13202 = distinct !DILexicalBlock(scope: !13197, file: !11948, line: 3736, column: 3)
!13203 = !DILocation(line: 3737, column: 33, scope: !13202)
!13204 = !DILocation(line: 3738, column: 3, scope: !13202)
!13205 = !DILocation(line: 3739, column: 17, scope: !13206)
!13206 = distinct !DILexicalBlock(scope: !13197, file: !11948, line: 3739, column: 11)
!13207 = !DILocation(line: 3739, column: 22, scope: !13206)
!13208 = !DILocation(line: 3739, column: 39, scope: !13206)
!13209 = !DILocation(line: 0, scope: !13206)
!13210 = !DILocation(line: 3739, column: 11, scope: !13197)
!13211 = !DILocation(line: 3741, column: 33, scope: !13212)
!13212 = distinct !DILexicalBlock(scope: !13206, file: !11948, line: 3740, column: 3)
!13213 = !DILocation(line: 3742, column: 3, scope: !13212)
!13214 = !DILocation(line: 3745, column: 33, scope: !13215)
!13215 = distinct !DILexicalBlock(scope: !13206, file: !11948, line: 3744, column: 3)
!13216 = !DILocation(line: 3749, column: 12, scope: !13217)
!13217 = distinct !DILexicalBlock(scope: !13158, file: !11948, line: 3749, column: 6)
!13218 = !DILocation(line: 3749, column: 16, scope: !13217)
!13219 = !DILocation(line: 3755, column: 24, scope: !13220)
!13220 = distinct !DILexicalBlock(scope: !13217, file: !11948, line: 3754, column: 3)
!13221 = !DILocation(line: 3755, column: 33, scope: !13220)
!13222 = !DILocation(line: 3759, column: 12, scope: !13223)
!13223 = distinct !DILexicalBlock(scope: !13158, file: !11948, line: 3759, column: 6)
!13224 = !DILocation(line: 3759, column: 15, scope: !13223)
!13225 = !DILocation(line: 3759, column: 30, scope: !13223)
!13226 = !DILocation(line: 3759, column: 6, scope: !13158)
!13227 = !DILocation(line: 3765, column: 28, scope: !13228)
!13228 = distinct !DILexicalBlock(scope: !13223, file: !11948, line: 3764, column: 3)
!13229 = !DILocation(line: 3765, column: 37, scope: !13228)
!13230 = !DILocation(line: 3767, column: 54, scope: !13158)
!13231 = !DILocation(line: 3767, column: 62, scope: !13158)
!13232 = !DILocation(line: 3767, column: 26, scope: !13158)
!13233 = !DILocation(line: 3767, column: 36, scope: !13158)
!13234 = !DILocation(line: 3768, column: 49, scope: !13158)
!13235 = !DILocation(line: 3768, column: 57, scope: !13158)
!13236 = !DILocation(line: 3768, column: 26, scope: !13158)
!13237 = !DILocation(line: 3768, column: 31, scope: !13158)
!13238 = !DILocation(line: 3769, column: 50, scope: !13158)
!13239 = !DILocation(line: 3769, column: 78, scope: !13158)
!13240 = !DILocation(line: 3769, column: 26, scope: !13158)
!13241 = !DILocation(line: 3769, column: 31, scope: !13158)
!13242 = !DILocation(line: 3770, column: 52, scope: !13158)
!13243 = !DILocation(line: 3770, column: 102, scope: !13158)
!13244 = !DILocation(line: 3770, column: 109, scope: !13158)
!13245 = !DILocation(line: 3770, column: 26, scope: !13158)
!13246 = !DILocation(line: 3770, column: 31, scope: !13158)
!13247 = !DILocation(line: 3771, column: 50, scope: !13158)
!13248 = !DILocation(line: 3771, column: 78, scope: !13158)
!13249 = !DILocation(line: 3771, column: 26, scope: !13158)
!13250 = !DILocation(line: 3771, column: 31, scope: !13158)
!13251 = !DILocation(line: 3772, column: 50, scope: !13158)
!13252 = !DILocation(line: 3772, column: 78, scope: !13158)
!13253 = !DILocation(line: 3772, column: 26, scope: !13158)
!13254 = !DILocation(line: 3772, column: 31, scope: !13158)
!13255 = !DILocation(line: 3773, column: 1, scope: !13158)
!13256 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !13257, file: !13257, line: 257, type: !6415, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !13258)
!13257 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13258 = !{!13259}
!13259 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !13256, file: !13257, line: 257, type: !152)
!13260 = !DILocation(line: 0, scope: !13256)
!13261 = !DILocation(line: 260, column: 3, scope: !13256)
!13262 = !DILocation(line: 261, column: 1, scope: !13256)
!13263 = distinct !DISubprogram(name: "LL_InitTick", scope: !13264, file: !13264, line: 260, type: !10307, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !13265)
!13264 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13265 = !{!13266, !13267}
!13266 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !13263, file: !13264, line: 260, type: !152)
!13267 = !DILocalVariable(name: "Ticks", arg: 2, scope: !13263, file: !13264, line: 260, type: !152)
!13268 = !DILocation(line: 0, scope: !13263)
!13269 = !DILocation(line: 263, column: 46, scope: !13263)
!13270 = !DILocation(line: 263, column: 55, scope: !13263)
!13271 = !DILocation(line: 263, column: 18, scope: !13263)
!13272 = !DILocation(line: 264, column: 18, scope: !13263)
!13273 = !DILocation(line: 265, column: 18, scope: !13263)
!13274 = !DILocation(line: 267, column: 1, scope: !13263)
!13275 = distinct !DISubprogram(name: "LL_mDelay", scope: !13257, file: !13257, line: 273, type: !6415, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !13276)
!13276 = !{!13277, !13278}
!13277 = !DILocalVariable(name: "Delay", arg: 1, scope: !13275, file: !13257, line: 273, type: !152)
!13278 = !DILocalVariable(name: "tmp", scope: !13275, file: !13257, line: 275, type: !227)
!13279 = !DILocation(line: 0, scope: !13275)
!13280 = !DILocation(line: 275, column: 3, scope: !13275)
!13281 = !DILocation(line: 275, column: 18, scope: !13275)
!13282 = !DILocation(line: 275, column: 33, scope: !13275)
!13283 = !DILocation(line: 277, column: 10, scope: !13275)
!13284 = !DILocation(line: 280, column: 12, scope: !13285)
!13285 = distinct !DILexicalBlock(scope: !13275, file: !13257, line: 280, column: 6)
!13286 = !DILocation(line: 285, column: 3, scope: !13275)
!13287 = !DILocation(line: 287, column: 18, scope: !13288)
!13288 = distinct !DILexicalBlock(scope: !13289, file: !13257, line: 287, column: 8)
!13289 = distinct !DILexicalBlock(scope: !13275, file: !13257, line: 286, column: 3)
!13290 = !DILocation(line: 292, column: 1, scope: !13275)
!13291 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !13257, file: !13257, line: 323, type: !6415, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !13292)
!13292 = !{!13293}
!13293 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !13291, file: !13257, line: 323, type: !152)
!13294 = !DILocation(line: 0, scope: !13291)
!13295 = !DILocation(line: 326, column: 19, scope: !13291)
!13296 = !DILocation(line: 327, column: 1, scope: !13291)
!13297 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !13257, file: !13257, line: 338, type: !13298, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !13301)
!13298 = !DISubroutineType(types: !13299)
!13299 = !{!13300, !152}
!13300 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !975, line: 201, baseType: !974)
!13301 = !{!13302, !13303, !13304, !13305, !13306}
!13302 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !13297, file: !13257, line: 338, type: !152)
!13303 = !DILocalVariable(name: "timeout", scope: !13297, file: !13257, line: 340, type: !152)
!13304 = !DILocalVariable(name: "getlatency", scope: !13297, file: !13257, line: 341, type: !152)
!13305 = !DILocalVariable(name: "latency", scope: !13297, file: !13257, line: 342, type: !152)
!13306 = !DILocalVariable(name: "status", scope: !13297, file: !13257, line: 343, type: !13300)
!13307 = !DILocation(line: 0, scope: !13297)
!13308 = !DILocation(line: 347, column: 21, scope: !13309)
!13309 = distinct !DILexicalBlock(scope: !13297, file: !13257, line: 347, column: 6)
!13310 = !DILocation(line: 347, column: 6, scope: !13297)
!13311 = !DILocation(line: 353, column: 8, scope: !13312)
!13312 = distinct !DILexicalBlock(scope: !13313, file: !13257, line: 353, column: 8)
!13313 = distinct !DILexicalBlock(scope: !13309, file: !13257, line: 352, column: 3)
!13314 = !DILocation(line: 353, column: 40, scope: !13312)
!13315 = !DILocation(line: 353, column: 8, scope: !13313)
!13316 = !DILocation(line: 356, column: 26, scope: !13317)
!13317 = distinct !DILexicalBlock(scope: !13318, file: !13257, line: 356, column: 10)
!13318 = distinct !DILexicalBlock(scope: !13312, file: !13257, line: 354, column: 5)
!13319 = !DILocation(line: 356, column: 55, scope: !13317)
!13320 = !DILocation(line: 362, column: 55, scope: !13321)
!13321 = distinct !DILexicalBlock(scope: !13318, file: !13257, line: 362, column: 10)
!13322 = !DILocation(line: 368, column: 55, scope: !13323)
!13323 = distinct !DILexicalBlock(scope: !13318, file: !13257, line: 368, column: 10)
!13324 = !DILocation(line: 374, column: 26, scope: !13325)
!13325 = distinct !DILexicalBlock(scope: !13318, file: !13257, line: 374, column: 10)
!13326 = !DILocation(line: 374, column: 55, scope: !13325)
!13327 = !DILocation(line: 380, column: 28, scope: !13328)
!13328 = distinct !DILexicalBlock(scope: !13329, file: !13257, line: 380, column: 12)
!13329 = distinct !DILexicalBlock(scope: !13325, file: !13257, line: 379, column: 7)
!13330 = !DILocation(line: 380, column: 57, scope: !13328)
!13331 = !DILocation(line: 387, column: 8, scope: !13332)
!13332 = distinct !DILexicalBlock(scope: !13313, file: !13257, line: 387, column: 8)
!13333 = !DILocation(line: 387, column: 40, scope: !13332)
!13334 = !DILocation(line: 387, column: 8, scope: !13313)
!13335 = !DILocation(line: 390, column: 26, scope: !13336)
!13336 = distinct !DILexicalBlock(scope: !13337, file: !13257, line: 390, column: 10)
!13337 = distinct !DILexicalBlock(scope: !13332, file: !13257, line: 388, column: 5)
!13338 = !DILocation(line: 390, column: 55, scope: !13336)
!13339 = !DILocation(line: 396, column: 26, scope: !13340)
!13340 = distinct !DILexicalBlock(scope: !13337, file: !13257, line: 396, column: 10)
!13341 = !DILocation(line: 396, column: 55, scope: !13340)
!13342 = !DILocation(line: 402, column: 26, scope: !13343)
!13343 = distinct !DILexicalBlock(scope: !13337, file: !13257, line: 402, column: 10)
!13344 = !DILocation(line: 402, column: 55, scope: !13343)
!13345 = !DILocation(line: 407, column: 26, scope: !13346)
!13346 = distinct !DILexicalBlock(scope: !13337, file: !13257, line: 407, column: 10)
!13347 = !DILocation(line: 407, column: 55, scope: !13346)
!13348 = !DILocation(line: 413, column: 28, scope: !13349)
!13349 = distinct !DILexicalBlock(scope: !13350, file: !13257, line: 413, column: 12)
!13350 = distinct !DILexicalBlock(scope: !13346, file: !13257, line: 412, column: 7)
!13351 = !DILocation(line: 413, column: 57, scope: !13349)
!13352 = !DILocation(line: 0, scope: !13313)
!13353 = !DILocation(line: 420, column: 8, scope: !13354)
!13354 = distinct !DILexicalBlock(scope: !13313, file: !13257, line: 420, column: 8)
!13355 = !DILocation(line: 420, column: 40, scope: !13354)
!13356 = !DILocation(line: 420, column: 8, scope: !13313)
!13357 = !DILocation(line: 423, column: 26, scope: !13358)
!13358 = distinct !DILexicalBlock(scope: !13359, file: !13257, line: 423, column: 10)
!13359 = distinct !DILexicalBlock(scope: !13354, file: !13257, line: 421, column: 5)
!13360 = !DILocation(line: 423, column: 55, scope: !13358)
!13361 = !DILocation(line: 429, column: 26, scope: !13362)
!13362 = distinct !DILexicalBlock(scope: !13359, file: !13257, line: 429, column: 10)
!13363 = !DILocation(line: 429, column: 55, scope: !13362)
!13364 = !DILocation(line: 435, column: 28, scope: !13365)
!13365 = distinct !DILexicalBlock(scope: !13366, file: !13257, line: 435, column: 12)
!13366 = distinct !DILexicalBlock(scope: !13362, file: !13257, line: 434, column: 7)
!13367 = !DILocation(line: 435, column: 57, scope: !13365)
!13368 = !DILocation(line: 444, column: 5, scope: !13313)
!13369 = !DILocation(line: 448, column: 5, scope: !13313)
!13370 = !DILocation(line: 451, column: 18, scope: !13371)
!13371 = distinct !DILexicalBlock(scope: !13313, file: !13257, line: 449, column: 5)
!13372 = !DILocation(line: 452, column: 12, scope: !13371)
!13373 = !DILocation(line: 453, column: 26, scope: !13313)
!13374 = !DILocation(line: 453, column: 38, scope: !13313)
!13375 = !DILocation(line: 453, column: 5, scope: !13371)
!13376 = distinct !{!13376, !13369, !13377}
!13377 = !DILocation(line: 453, column: 54, scope: !13313)
!13378 = !DILocation(line: 0, scope: !13309)
!13379 = !DILocation(line: 464, column: 3, scope: !13297)
!13380 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !13381, file: !13381, line: 519, type: !6405, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !2236)
!13381 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13382 = !DILocation(line: 521, column: 21, scope: !13380)
!13383 = !DILocation(line: 521, column: 3, scope: !13380)
!13384 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !6020, file: !6020, line: 1543, type: !6415, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !13385)
!13385 = !{!13386}
!13386 = !DILocalVariable(name: "Latency", arg: 1, scope: !13384, file: !6020, line: 1543, type: !152)
!13387 = !DILocation(line: 0, scope: !13384)
!13388 = !DILocation(line: 1545, column: 3, scope: !13384)
!13389 = !DILocation(line: 1546, column: 1, scope: !13384)
!13390 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !6020, file: !6020, line: 1569, type: !6405, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !2236)
!13391 = !DILocation(line: 1571, column: 21, scope: !13390)
!13392 = !DILocation(line: 1571, column: 3, scope: !13390)
!13393 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !13257, file: !13257, line: 483, type: !13394, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !13410)
!13394 = !DISubroutineType(types: !13395)
!13395 = !{!13300, !13396, !13403}
!13396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13397, size: 32)
!13397 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !13264, line: 114, baseType: !13398)
!13398 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13264, line: 94, size: 96, elements: !13399)
!13399 = !{!13400, !13401, !13402}
!13400 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !13398, file: !13264, line: 96, baseType: !152, size: 32)
!13401 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !13398, file: !13264, line: 102, baseType: !152, size: 32, offset: 32)
!13402 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !13398, file: !13264, line: 109, baseType: !152, size: 32, offset: 64)
!13403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13404, size: 32)
!13404 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !13264, line: 139, baseType: !13405)
!13405 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13264, line: 119, size: 96, elements: !13406)
!13406 = !{!13407, !13408, !13409}
!13407 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !13405, file: !13264, line: 121, baseType: !152, size: 32)
!13408 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !13405, file: !13264, line: 127, baseType: !152, size: 32, offset: 32)
!13409 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !13405, file: !13264, line: 133, baseType: !152, size: 32, offset: 64)
!13410 = !{!13411, !13412, !13413, !13414}
!13411 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !13393, file: !13257, line: 483, type: !13396)
!13412 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !13393, file: !13257, line: 484, type: !13403)
!13413 = !DILocalVariable(name: "status", scope: !13393, file: !13257, line: 486, type: !13300)
!13414 = !DILocalVariable(name: "pllfreq", scope: !13393, file: !13257, line: 487, type: !152)
!13415 = !DILocation(line: 0, scope: !13393)
!13416 = !DILocation(line: 490, column: 6, scope: !13417)
!13417 = distinct !DILexicalBlock(scope: !13393, file: !13257, line: 490, column: 6)
!13418 = !DILocation(line: 490, column: 25, scope: !13417)
!13419 = !DILocation(line: 490, column: 6, scope: !13393)
!13420 = !DILocation(line: 493, column: 15, scope: !13421)
!13421 = distinct !DILexicalBlock(scope: !13417, file: !13257, line: 491, column: 3)
!13422 = !DILocation(line: 496, column: 8, scope: !13423)
!13423 = distinct !DILexicalBlock(scope: !13421, file: !13257, line: 496, column: 8)
!13424 = !DILocation(line: 496, column: 29, scope: !13423)
!13425 = !DILocation(line: 496, column: 8, scope: !13421)
!13426 = !DILocation(line: 498, column: 7, scope: !13427)
!13427 = distinct !DILexicalBlock(scope: !13423, file: !13257, line: 497, column: 5)
!13428 = !DILocation(line: 499, column: 7, scope: !13427)
!13429 = !DILocation(line: 499, column: 14, scope: !13427)
!13430 = !DILocation(line: 499, column: 35, scope: !13427)
!13431 = distinct !{!13431, !13428, !13432}
!13432 = !DILocation(line: 502, column: 7, scope: !13427)
!13433 = !DILocation(line: 506, column: 76, scope: !13421)
!13434 = !DILocation(line: 506, column: 103, scope: !13421)
!13435 = !DILocation(line: 507, column: 54, scope: !13421)
!13436 = !DILocation(line: 506, column: 5, scope: !13421)
!13437 = !DILocation(line: 510, column: 14, scope: !13421)
!13438 = !DILocation(line: 511, column: 3, scope: !13421)
!13439 = !DILocation(line: 0, scope: !13417)
!13440 = !DILocation(line: 518, column: 3, scope: !13393)
!13441 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !13257, file: !13257, line: 642, type: !13442, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !13444)
!13442 = !DISubroutineType(types: !13443)
!13443 = !{!13300}
!13444 = !{!13445}
!13445 = !DILocalVariable(name: "status", scope: !13441, file: !13257, line: 644, type: !13300)
!13446 = !DILocation(line: 0, scope: !13441)
!13447 = !DILocation(line: 647, column: 6, scope: !13448)
!13448 = distinct !DILexicalBlock(scope: !13441, file: !13257, line: 647, column: 6)
!13449 = !DILocation(line: 647, column: 27, scope: !13448)
!13450 = !DILocation(line: 655, column: 6, scope: !13451)
!13451 = distinct !DILexicalBlock(scope: !13441, file: !13257, line: 655, column: 6)
!13452 = !DILocation(line: 655, column: 30, scope: !13451)
!13453 = !DILocation(line: 663, column: 6, scope: !13454)
!13454 = distinct !DILexicalBlock(scope: !13441, file: !13257, line: 663, column: 6)
!13455 = !DILocation(line: 663, column: 30, scope: !13454)
!13456 = !DILocation(line: 663, column: 6, scope: !13441)
!13457 = !DILocation(line: 669, column: 3, scope: !13441)
!13458 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !13257, file: !13257, line: 611, type: !13459, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !13461)
!13459 = !DISubroutineType(types: !13460)
!13460 = !{!152, !152, !13396}
!13461 = !{!13462, !13463, !13464}
!13462 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !13458, file: !13257, line: 611, type: !152)
!13463 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !13458, file: !13257, line: 611, type: !13396)
!13464 = !DILocalVariable(name: "pllfreq", scope: !13458, file: !13257, line: 613, type: !152)
!13465 = !DILocation(line: 0, scope: !13458)
!13466 = !DILocation(line: 622, column: 56, scope: !13458)
!13467 = !DILocation(line: 622, column: 61, scope: !13458)
!13468 = !DILocation(line: 622, column: 32, scope: !13458)
!13469 = !DILocation(line: 626, column: 45, scope: !13458)
!13470 = !DILocation(line: 626, column: 50, scope: !13458)
!13471 = !DILocation(line: 626, column: 21, scope: !13458)
!13472 = !DILocation(line: 630, column: 47, scope: !13458)
!13473 = !DILocation(line: 630, column: 82, scope: !13458)
!13474 = !DILocation(line: 630, column: 21, scope: !13458)
!13475 = !DILocation(line: 633, column: 3, scope: !13458)
!13476 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !9632, file: !9632, line: 3007, type: !6405, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !2236)
!13477 = !DILocation(line: 3009, column: 11, scope: !13476)
!13478 = !DILocation(line: 3009, column: 44, scope: !13476)
!13479 = !DILocation(line: 3009, column: 3, scope: !13476)
!13480 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !9632, file: !9632, line: 2987, type: !3148, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !2236)
!13481 = !DILocation(line: 2989, column: 3, scope: !13480)
!13482 = !DILocation(line: 2990, column: 1, scope: !13480)
!13483 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !9632, file: !9632, line: 4304, type: !9766, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !13484)
!13484 = !{!13485, !13486, !13487, !13488}
!13485 = !DILocalVariable(name: "Source", arg: 1, scope: !13483, file: !9632, line: 4304, type: !152)
!13486 = !DILocalVariable(name: "PLLM", arg: 2, scope: !13483, file: !9632, line: 4304, type: !152)
!13487 = !DILocalVariable(name: "PLLN", arg: 3, scope: !13483, file: !9632, line: 4304, type: !152)
!13488 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !13483, file: !9632, line: 4304, type: !152)
!13489 = !DILocation(line: 0, scope: !13483)
!13490 = !DILocation(line: 4306, column: 3, scope: !13483)
!13491 = !DILocation(line: 4308, column: 3, scope: !13483)
!13492 = !DILocation(line: 4310, column: 3, scope: !13483)
!13493 = !DILocation(line: 4312, column: 1, scope: !13483)
!13494 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !13257, file: !13257, line: 681, type: !13495, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !13497)
!13495 = !DISubroutineType(types: !13496)
!13496 = !{!13300, !152, !13403}
!13497 = !{!13498, !13499, !13500, !13501}
!13498 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !13494, file: !13257, line: 681, type: !152)
!13499 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !13494, file: !13257, line: 681, type: !13403)
!13500 = !DILocalVariable(name: "status", scope: !13494, file: !13257, line: 683, type: !13300)
!13501 = !DILocalVariable(name: "hclk_frequency", scope: !13494, file: !13257, line: 684, type: !152)
!13502 = !DILocation(line: 0, scope: !13494)
!13503 = !DILocation(line: 691, column: 20, scope: !13494)
!13504 = !DILocation(line: 694, column: 6, scope: !13505)
!13505 = distinct !DILexicalBlock(scope: !13494, file: !13257, line: 694, column: 6)
!13506 = !DILocation(line: 694, column: 22, scope: !13505)
!13507 = !DILocation(line: 694, column: 6, scope: !13494)
!13508 = !DILocation(line: 697, column: 14, scope: !13509)
!13509 = distinct !DILexicalBlock(scope: !13505, file: !13257, line: 695, column: 3)
!13510 = !DILocation(line: 701, column: 13, scope: !13511)
!13511 = distinct !DILexicalBlock(scope: !13494, file: !13257, line: 701, column: 6)
!13512 = !DILocation(line: 701, column: 6, scope: !13494)
!13513 = !DILocation(line: 704, column: 5, scope: !13514)
!13514 = distinct !DILexicalBlock(scope: !13511, file: !13257, line: 702, column: 3)
!13515 = !DILocation(line: 705, column: 5, scope: !13514)
!13516 = !DILocation(line: 705, column: 12, scope: !13514)
!13517 = !DILocation(line: 705, column: 33, scope: !13514)
!13518 = distinct !{!13518, !13515, !13519}
!13519 = !DILocation(line: 708, column: 5, scope: !13514)
!13520 = !DILocation(line: 711, column: 49, scope: !13514)
!13521 = !DILocation(line: 711, column: 5, scope: !13514)
!13522 = !DILocation(line: 712, column: 5, scope: !13514)
!13523 = !DILocation(line: 713, column: 5, scope: !13514)
!13524 = !DILocation(line: 713, column: 12, scope: !13514)
!13525 = !DILocation(line: 713, column: 37, scope: !13514)
!13526 = distinct !{!13526, !13523, !13527}
!13527 = !DILocation(line: 716, column: 5, scope: !13514)
!13528 = !DILocation(line: 719, column: 50, scope: !13514)
!13529 = !DILocation(line: 719, column: 5, scope: !13514)
!13530 = !DILocation(line: 720, column: 50, scope: !13514)
!13531 = !DILocation(line: 720, column: 5, scope: !13514)
!13532 = !DILocation(line: 721, column: 3, scope: !13514)
!13533 = !DILocation(line: 724, column: 6, scope: !13534)
!13534 = distinct !DILexicalBlock(scope: !13494, file: !13257, line: 724, column: 6)
!13535 = !DILocation(line: 724, column: 22, scope: !13534)
!13536 = !DILocation(line: 724, column: 6, scope: !13494)
!13537 = !DILocation(line: 727, column: 14, scope: !13538)
!13538 = distinct !DILexicalBlock(scope: !13534, file: !13257, line: 725, column: 3)
!13539 = !DILocation(line: 728, column: 3, scope: !13538)
!13540 = !DILocation(line: 731, column: 13, scope: !13541)
!13541 = distinct !DILexicalBlock(scope: !13494, file: !13257, line: 731, column: 6)
!13542 = !DILocation(line: 731, column: 6, scope: !13494)
!13543 = !DILocation(line: 733, column: 5, scope: !13544)
!13544 = distinct !DILexicalBlock(scope: !13541, file: !13257, line: 732, column: 3)
!13545 = !DILocation(line: 734, column: 3, scope: !13544)
!13546 = !DILocation(line: 736, column: 3, scope: !13494)
!13547 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !9632, file: !9632, line: 4184, type: !3148, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !2236)
!13548 = !DILocation(line: 4186, column: 3, scope: !13547)
!13549 = !DILocation(line: 4187, column: 1, scope: !13547)
!13550 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !9632, file: !9632, line: 4205, type: !6405, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !2236)
!13551 = !DILocation(line: 4207, column: 11, scope: !13550)
!13552 = !DILocation(line: 4207, column: 44, scope: !13550)
!13553 = !DILocation(line: 4207, column: 3, scope: !13550)
!13554 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !9632, file: !9632, line: 3224, type: !6415, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !13555)
!13555 = !{!13556}
!13556 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13554, file: !9632, line: 3224, type: !152)
!13557 = !DILocation(line: 0, scope: !13554)
!13558 = !DILocation(line: 3226, column: 3, scope: !13554)
!13559 = !DILocation(line: 3227, column: 1, scope: !13554)
!13560 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !9632, file: !9632, line: 3188, type: !6415, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !13561)
!13561 = !{!13562}
!13562 = !DILocalVariable(name: "Source", arg: 1, scope: !13560, file: !9632, line: 3188, type: !152)
!13563 = !DILocation(line: 0, scope: !13560)
!13564 = !DILocation(line: 3190, column: 3, scope: !13560)
!13565 = !DILocation(line: 3191, column: 1, scope: !13560)
!13566 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !9632, file: !9632, line: 3204, type: !6405, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !2236)
!13567 = !DILocation(line: 3206, column: 21, scope: !13566)
!13568 = !DILocation(line: 3206, column: 3, scope: !13566)
!13569 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !9632, file: !9632, line: 3240, type: !6415, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !13570)
!13570 = !{!13571}
!13571 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13569, file: !9632, line: 3240, type: !152)
!13572 = !DILocation(line: 0, scope: !13569)
!13573 = !DILocation(line: 3242, column: 3, scope: !13569)
!13574 = !DILocation(line: 3243, column: 1, scope: !13569)
!13575 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !9632, file: !9632, line: 3256, type: !6415, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !13576)
!13576 = !{!13577}
!13577 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13575, file: !9632, line: 3256, type: !152)
!13578 = !DILocation(line: 0, scope: !13575)
!13579 = !DILocation(line: 3258, column: 3, scope: !13575)
!13580 = !DILocation(line: 3259, column: 1, scope: !13575)
!13581 = distinct !DISubprogram(name: "LL_RCC_PLLSAI_IsReady", scope: !9632, file: !9632, line: 5969, type: !6405, scopeLine: 5970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !2236)
!13582 = !DILocation(line: 5971, column: 11, scope: !13581)
!13583 = !DILocation(line: 5971, column: 47, scope: !13581)
!13584 = !DILocation(line: 5971, column: 3, scope: !13581)
!13585 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !9632, file: !9632, line: 5153, type: !6405, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !2236)
!13586 = !DILocation(line: 5155, column: 11, scope: !13585)
!13587 = !DILocation(line: 5155, column: 47, scope: !13585)
!13588 = !DILocation(line: 5155, column: 3, scope: !13585)
!13589 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !13257, file: !13257, line: 540, type: !13590, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !13592)
!13590 = !DISubroutineType(types: !13591)
!13591 = !{!13300, !152, !152, !13396, !13403}
!13592 = !{!13593, !13594, !13595, !13596, !13597, !13598}
!13593 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !13589, file: !13257, line: 540, type: !152)
!13594 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !13589, file: !13257, line: 540, type: !152)
!13595 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !13589, file: !13257, line: 541, type: !13396)
!13596 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !13589, file: !13257, line: 541, type: !13403)
!13597 = !DILocalVariable(name: "status", scope: !13589, file: !13257, line: 543, type: !13300)
!13598 = !DILocalVariable(name: "pllfreq", scope: !13589, file: !13257, line: 544, type: !152)
!13599 = !DILocation(line: 0, scope: !13589)
!13600 = !DILocation(line: 551, column: 6, scope: !13601)
!13601 = distinct !DILexicalBlock(scope: !13589, file: !13257, line: 551, column: 6)
!13602 = !DILocation(line: 551, column: 25, scope: !13601)
!13603 = !DILocation(line: 551, column: 6, scope: !13589)
!13604 = !DILocation(line: 554, column: 15, scope: !13605)
!13605 = distinct !DILexicalBlock(scope: !13601, file: !13257, line: 552, column: 3)
!13606 = !DILocation(line: 557, column: 8, scope: !13607)
!13607 = distinct !DILexicalBlock(scope: !13605, file: !13257, line: 557, column: 8)
!13608 = !DILocation(line: 557, column: 29, scope: !13607)
!13609 = !DILocation(line: 557, column: 8, scope: !13605)
!13610 = !DILocation(line: 560, column: 20, scope: !13611)
!13611 = distinct !DILexicalBlock(scope: !13612, file: !13257, line: 560, column: 10)
!13612 = distinct !DILexicalBlock(scope: !13607, file: !13257, line: 558, column: 5)
!13613 = !DILocation(line: 560, column: 10, scope: !13612)
!13614 = !DILocation(line: 562, column: 9, scope: !13615)
!13615 = distinct !DILexicalBlock(scope: !13611, file: !13257, line: 561, column: 7)
!13616 = !DILocation(line: 563, column: 7, scope: !13615)
!13617 = !DILocation(line: 566, column: 9, scope: !13618)
!13618 = distinct !DILexicalBlock(scope: !13611, file: !13257, line: 565, column: 7)
!13619 = !DILocation(line: 570, column: 7, scope: !13612)
!13620 = !DILocation(line: 571, column: 7, scope: !13612)
!13621 = !DILocation(line: 571, column: 14, scope: !13612)
!13622 = !DILocation(line: 571, column: 35, scope: !13612)
!13623 = distinct !{!13623, !13620, !13624}
!13624 = !DILocation(line: 574, column: 7, scope: !13612)
!13625 = !DILocation(line: 578, column: 76, scope: !13605)
!13626 = !DILocation(line: 578, column: 103, scope: !13605)
!13627 = !DILocation(line: 579, column: 54, scope: !13605)
!13628 = !DILocation(line: 578, column: 5, scope: !13605)
!13629 = !DILocation(line: 582, column: 14, scope: !13605)
!13630 = !DILocation(line: 583, column: 3, scope: !13605)
!13631 = !DILocation(line: 0, scope: !13601)
!13632 = !DILocation(line: 590, column: 3, scope: !13589)
!13633 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !9632, file: !9632, line: 2969, type: !6405, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !2236)
!13634 = !DILocation(line: 2971, column: 11, scope: !13633)
!13635 = !DILocation(line: 2971, column: 44, scope: !13633)
!13636 = !DILocation(line: 2971, column: 3, scope: !13633)
!13637 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !9632, file: !9632, line: 2929, type: !3148, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !2236)
!13638 = !DILocation(line: 2931, column: 3, scope: !13637)
!13639 = !DILocation(line: 2932, column: 1, scope: !13637)
!13640 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !9632, file: !9632, line: 2939, type: !3148, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !2236)
!13641 = !DILocation(line: 2941, column: 3, scope: !13640)
!13642 = !DILocation(line: 2942, column: 1, scope: !13640)
!13643 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !9632, file: !9632, line: 2949, type: !3148, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !2236)
!13644 = !DILocation(line: 2951, column: 3, scope: !13643)
!13645 = !DILocation(line: 2952, column: 1, scope: !13643)
!13646 = distinct !DISubprogram(name: "z_device_state_init", scope: !13647, file: !13647, line: 23, type: !3148, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3108, retainedNodes: !13648)
!13647 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13648 = !{!13649}
!13649 = !DILocalVariable(name: "dev", scope: !13646, file: !13647, line: 25, type: !13650)
!13650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13651, size: 32)
!13651 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13652)
!13652 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !13653)
!13653 = !{!13654, !13655, !13656, !13657, !13663, !13664}
!13654 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !13652, file: !247, line: 380, baseType: !118, size: 32)
!13655 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !13652, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!13656 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !13652, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!13657 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !13652, file: !247, line: 386, baseType: !13658, size: 32, offset: 96)
!13658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13659, size: 32)
!13659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !13660)
!13660 = !{!13661, !13662}
!13661 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !13659, file: !247, line: 359, baseType: !195, size: 8)
!13662 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !13659, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!13663 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13652, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!13664 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !13652, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!13665 = !DILocation(line: 0, scope: !13646)
!13666 = !DILocation(line: 31, column: 1, scope: !13646)
!13667 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !13647, file: !13647, line: 33, type: !13668, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3108, retainedNodes: !13670)
!13668 = !DISubroutineType(types: !13669)
!13669 = !{!13650, !118}
!13670 = !{!13671, !13672}
!13671 = !DILocalVariable(name: "name", arg: 1, scope: !13667, file: !13647, line: 33, type: !118)
!13672 = !DILocalVariable(name: "dev", scope: !13667, file: !13647, line: 35, type: !13650)
!13673 = !DILocation(line: 0, scope: !13667)
!13674 = !DILocation(line: 40, column: 12, scope: !13675)
!13675 = distinct !DILexicalBlock(scope: !13667, file: !13647, line: 40, column: 6)
!13676 = !DILocation(line: 40, column: 21, scope: !13675)
!13677 = !DILocation(line: 40, column: 25, scope: !13675)
!13678 = !DILocation(line: 40, column: 33, scope: !13675)
!13679 = !DILocation(line: 40, column: 6, scope: !13667)
!13680 = !DILocation(line: 55, column: 2, scope: !13681)
!13681 = distinct !DILexicalBlock(scope: !13667, file: !13647, line: 55, column: 2)
!13682 = !DILocation(line: 50, column: 7, scope: !13683)
!13683 = distinct !DILexicalBlock(scope: !13684, file: !13647, line: 50, column: 7)
!13684 = distinct !DILexicalBlock(scope: !13685, file: !13647, line: 49, column: 57)
!13685 = distinct !DILexicalBlock(scope: !13686, file: !13647, line: 49, column: 2)
!13686 = distinct !DILexicalBlock(scope: !13667, file: !13647, line: 49, column: 2)
!13687 = !DILocation(line: 50, column: 30, scope: !13683)
!13688 = !DILocation(line: 50, column: 39, scope: !13683)
!13689 = !DILocation(line: 50, column: 44, scope: !13683)
!13690 = !DILocation(line: 50, column: 7, scope: !13684)
!13691 = !DILocation(line: 49, column: 53, scope: !13685)
!13692 = !DILocation(line: 49, column: 33, scope: !13685)
!13693 = !DILocation(line: 49, column: 2, scope: !13686)
!13694 = distinct !{!13694, !13693, !13695}
!13695 = !DILocation(line: 53, column: 2, scope: !13686)
!13696 = !DILocation(line: 56, column: 7, scope: !13697)
!13697 = distinct !DILexicalBlock(scope: !13698, file: !13647, line: 56, column: 7)
!13698 = distinct !DILexicalBlock(scope: !13699, file: !13647, line: 55, column: 57)
!13699 = distinct !DILexicalBlock(scope: !13681, file: !13647, line: 55, column: 2)
!13700 = !DILocation(line: 56, column: 30, scope: !13697)
!13701 = !DILocation(line: 56, column: 52, scope: !13697)
!13702 = !DILocation(line: 56, column: 34, scope: !13697)
!13703 = !DILocation(line: 56, column: 58, scope: !13697)
!13704 = !DILocation(line: 56, column: 7, scope: !13698)
!13705 = !DILocation(line: 55, column: 53, scope: !13699)
!13706 = !DILocation(line: 55, column: 33, scope: !13699)
!13707 = distinct !{!13707, !13680, !13708}
!13708 = !DILocation(line: 59, column: 2, scope: !13681)
!13709 = !DILocation(line: 62, column: 1, scope: !13667)
!13710 = distinct !DISubprogram(name: "z_device_is_ready", scope: !13647, file: !13647, line: 93, type: !13711, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3108, retainedNodes: !13713)
!13711 = !DISubroutineType(types: !13712)
!13712 = !{!145, !13650}
!13713 = !{!13714}
!13714 = !DILocalVariable(name: "dev", arg: 1, scope: !13710, file: !13647, line: 93, type: !13650)
!13715 = !DILocation(line: 0, scope: !13710)
!13716 = !DILocation(line: 99, column: 10, scope: !13717)
!13717 = distinct !DILexicalBlock(scope: !13710, file: !13647, line: 99, column: 6)
!13718 = !DILocation(line: 99, column: 6, scope: !13710)
!13719 = !DILocation(line: 103, column: 14, scope: !13710)
!13720 = !DILocation(line: 103, column: 21, scope: !13710)
!13721 = !DILocation(line: 103, column: 33, scope: !13710)
!13722 = !DILocation(line: 103, column: 49, scope: !13710)
!13723 = !DILocation(line: 103, column: 58, scope: !13710)
!13724 = !DILocation(line: 104, column: 1, scope: !13710)
!13725 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !13647, file: !13647, line: 87, type: !13726, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3108, retainedNodes: !13729)
!13726 = !DISubroutineType(types: !13727)
!13727 = !{!185, !13728}
!13728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13650, size: 32)
!13729 = !{!13730}
!13730 = !DILocalVariable(name: "devices", arg: 1, scope: !13725, file: !13647, line: 87, type: !13728)
!13731 = !DILocation(line: 0, scope: !13725)
!13732 = !DILocation(line: 89, column: 11, scope: !13725)
!13733 = !DILocation(line: 90, column: 2, scope: !13725)
!13734 = distinct !DISubprogram(name: "device_required_foreach", scope: !13647, file: !13647, line: 125, type: !13735, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3108, retainedNodes: !13741)
!13735 = !DISubroutineType(types: !13736)
!13736 = !{!107, !13650, !13737, !106}
!13737 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !247, line: 471, baseType: !13738)
!13738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13739, size: 32)
!13739 = !DISubroutineType(types: !13740)
!13740 = !{!107, !13650, !106}
!13741 = !{!13742, !13743, !13744, !13745, !13746}
!13742 = !DILocalVariable(name: "dev", arg: 1, scope: !13734, file: !13647, line: 125, type: !13650)
!13743 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13734, file: !13647, line: 126, type: !13737)
!13744 = !DILocalVariable(name: "context", arg: 3, scope: !13734, file: !13647, line: 127, type: !106)
!13745 = !DILocalVariable(name: "handle_count", scope: !13734, file: !13647, line: 129, type: !185)
!13746 = !DILocalVariable(name: "handles", scope: !13734, file: !13647, line: 130, type: !260)
!13747 = !DILocation(line: 0, scope: !13734)
!13748 = !DILocation(line: 129, column: 2, scope: !13734)
!13749 = !DILocation(line: 129, column: 9, scope: !13734)
!13750 = !DILocation(line: 130, column: 35, scope: !13734)
!13751 = !DILocation(line: 132, column: 33, scope: !13734)
!13752 = !DILocation(line: 132, column: 9, scope: !13734)
!13753 = !DILocation(line: 133, column: 1, scope: !13734)
!13754 = !DILocation(line: 132, column: 2, scope: !13734)
!13755 = distinct !DISubprogram(name: "device_required_handles_get", scope: !247, file: !247, line: 493, type: !13756, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3108, retainedNodes: !13758)
!13756 = !DISubroutineType(types: !13757)
!13757 = !{!260, !13650, !2617}
!13758 = !{!13759, !13760, !13761, !13762}
!13759 = !DILocalVariable(name: "dev", arg: 1, scope: !13755, file: !247, line: 493, type: !13650)
!13760 = !DILocalVariable(name: "count", arg: 2, scope: !13755, file: !247, line: 493, type: !2617)
!13761 = !DILocalVariable(name: "rv", scope: !13755, file: !247, line: 495, type: !260)
!13762 = !DILocalVariable(name: "i", scope: !13763, file: !247, line: 498, type: !185)
!13763 = distinct !DILexicalBlock(scope: !13764, file: !247, line: 497, column: 18)
!13764 = distinct !DILexicalBlock(scope: !13755, file: !247, line: 497, column: 6)
!13765 = !DILocation(line: 0, scope: !13755)
!13766 = !DILocation(line: 495, column: 35, scope: !13755)
!13767 = !DILocation(line: 497, column: 9, scope: !13764)
!13768 = !DILocation(line: 497, column: 6, scope: !13755)
!13769 = !DILocation(line: 0, scope: !13763)
!13770 = !DILocation(line: 500, column: 11, scope: !13763)
!13771 = !DILocation(line: 500, column: 40, scope: !13763)
!13772 = !DILocation(line: 502, column: 4, scope: !13773)
!13773 = distinct !DILexicalBlock(scope: !13763, file: !247, line: 501, column: 40)
!13774 = distinct !{!13774, !13775, !13776}
!13775 = !DILocation(line: 500, column: 3, scope: !13763)
!13776 = !DILocation(line: 503, column: 3, scope: !13763)
!13777 = !DILocation(line: 504, column: 10, scope: !13763)
!13778 = !DILocation(line: 505, column: 2, scope: !13763)
!13779 = !DILocation(line: 507, column: 2, scope: !13755)
!13780 = distinct !DISubprogram(name: "device_visitor", scope: !13647, file: !13647, line: 106, type: !13781, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3108, retainedNodes: !13783)
!13781 = !DISubroutineType(types: !13782)
!13782 = !{!107, !260, !185, !13737, !106}
!13783 = !{!13784, !13785, !13786, !13787, !13788, !13790, !13793, !13794}
!13784 = !DILocalVariable(name: "handles", arg: 1, scope: !13780, file: !13647, line: 106, type: !260)
!13785 = !DILocalVariable(name: "handle_count", arg: 2, scope: !13780, file: !13647, line: 107, type: !185)
!13786 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !13780, file: !13647, line: 108, type: !13737)
!13787 = !DILocalVariable(name: "context", arg: 4, scope: !13780, file: !13647, line: 109, type: !106)
!13788 = !DILocalVariable(name: "i", scope: !13789, file: !13647, line: 112, type: !185)
!13789 = distinct !DILexicalBlock(scope: !13780, file: !13647, line: 112, column: 2)
!13790 = !DILocalVariable(name: "dh", scope: !13791, file: !13647, line: 113, type: !262)
!13791 = distinct !DILexicalBlock(scope: !13792, file: !13647, line: 112, column: 44)
!13792 = distinct !DILexicalBlock(scope: !13789, file: !13647, line: 112, column: 2)
!13793 = !DILocalVariable(name: "rdev", scope: !13791, file: !13647, line: 114, type: !13650)
!13794 = !DILocalVariable(name: "rc", scope: !13791, file: !13647, line: 115, type: !107)
!13795 = !DILocation(line: 0, scope: !13780)
!13796 = !DILocation(line: 0, scope: !13789)
!13797 = !DILocation(line: 112, column: 23, scope: !13792)
!13798 = !DILocation(line: 112, column: 2, scope: !13789)
!13799 = distinct !{!13799, !13798, !13800}
!13800 = !DILocation(line: 120, column: 2, scope: !13789)
!13801 = !DILocation(line: 113, column: 24, scope: !13791)
!13802 = !DILocation(line: 0, scope: !13791)
!13803 = !DILocation(line: 114, column: 31, scope: !13791)
!13804 = !DILocation(line: 115, column: 12, scope: !13791)
!13805 = !DILocation(line: 117, column: 10, scope: !13806)
!13806 = distinct !DILexicalBlock(scope: !13791, file: !13647, line: 117, column: 7)
!13807 = !DILocation(line: 112, column: 39, scope: !13792)
!13808 = !DILocation(line: 123, column: 1, scope: !13780)
!13809 = distinct !DISubprogram(name: "device_from_handle", scope: !247, file: !247, line: 439, type: !13810, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3108, retainedNodes: !13812)
!13810 = !DISubroutineType(types: !13811)
!13811 = !{!13650, !262}
!13812 = !{!13813, !13814, !13815}
!13813 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !13809, file: !247, line: 439, type: !262)
!13814 = !DILocalVariable(name: "dev", scope: !13809, file: !247, line: 443, type: !13650)
!13815 = !DILocalVariable(name: "numdev", scope: !13809, file: !247, line: 444, type: !185)
!13816 = !DILocation(line: 0, scope: !13809)
!13817 = !DILocation(line: 446, column: 7, scope: !13818)
!13818 = distinct !DILexicalBlock(scope: !13809, file: !247, line: 446, column: 6)
!13819 = !DILocation(line: 446, column: 18, scope: !13818)
!13820 = !DILocation(line: 446, column: 23, scope: !13818)
!13821 = !DILocation(line: 450, column: 2, scope: !13809)
!13822 = distinct !DISubprogram(name: "device_supported_foreach", scope: !13647, file: !13647, line: 135, type: !13735, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3108, retainedNodes: !13823)
!13823 = !{!13824, !13825, !13826, !13827, !13828}
!13824 = !DILocalVariable(name: "dev", arg: 1, scope: !13822, file: !13647, line: 135, type: !13650)
!13825 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13822, file: !13647, line: 136, type: !13737)
!13826 = !DILocalVariable(name: "context", arg: 3, scope: !13822, file: !13647, line: 137, type: !106)
!13827 = !DILocalVariable(name: "handle_count", scope: !13822, file: !13647, line: 139, type: !185)
!13828 = !DILocalVariable(name: "handles", scope: !13822, file: !13647, line: 140, type: !260)
!13829 = !DILocation(line: 0, scope: !13822)
!13830 = !DILocation(line: 139, column: 2, scope: !13822)
!13831 = !DILocation(line: 139, column: 9, scope: !13822)
!13832 = !DILocation(line: 140, column: 35, scope: !13822)
!13833 = !DILocation(line: 142, column: 33, scope: !13822)
!13834 = !DILocation(line: 142, column: 9, scope: !13822)
!13835 = !DILocation(line: 143, column: 1, scope: !13822)
!13836 = !DILocation(line: 142, column: 2, scope: !13822)
!13837 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !247, file: !247, line: 573, type: !13756, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3108, retainedNodes: !13838)
!13838 = !{!13839, !13840, !13841, !13842, !13843}
!13839 = !DILocalVariable(name: "dev", arg: 1, scope: !13837, file: !247, line: 573, type: !13650)
!13840 = !DILocalVariable(name: "count", arg: 2, scope: !13837, file: !247, line: 573, type: !2617)
!13841 = !DILocalVariable(name: "rv", scope: !13837, file: !247, line: 575, type: !260)
!13842 = !DILocalVariable(name: "region", scope: !13837, file: !247, line: 576, type: !185)
!13843 = !DILocalVariable(name: "i", scope: !13837, file: !247, line: 577, type: !185)
!13844 = !DILocation(line: 0, scope: !13837)
!13845 = !DILocation(line: 575, column: 35, scope: !13837)
!13846 = !DILocation(line: 579, column: 9, scope: !13847)
!13847 = distinct !DILexicalBlock(scope: !13837, file: !247, line: 579, column: 6)
!13848 = !DILocation(line: 579, column: 6, scope: !13837)
!13849 = !DILocation(line: 582, column: 8, scope: !13850)
!13850 = distinct !DILexicalBlock(scope: !13851, file: !247, line: 582, column: 8)
!13851 = distinct !DILexicalBlock(scope: !13852, file: !247, line: 581, column: 23)
!13852 = distinct !DILexicalBlock(scope: !13847, file: !247, line: 579, column: 18)
!13853 = !DILocation(line: 582, column: 12, scope: !13850)
!13854 = !DILocation(line: 585, column: 6, scope: !13851)
!13855 = !DILocation(line: 0, scope: !13852)
!13856 = !DILocation(line: 581, column: 17, scope: !13852)
!13857 = !DILocation(line: 581, column: 3, scope: !13852)
!13858 = !DILocation(line: 588, column: 10, scope: !13852)
!13859 = !DILocation(line: 588, column: 16, scope: !13852)
!13860 = !DILocation(line: 589, column: 4, scope: !13861)
!13861 = distinct !DILexicalBlock(scope: !13852, file: !247, line: 588, column: 39)
!13862 = !DILocation(line: 588, column: 3, scope: !13852)
!13863 = distinct !{!13863, !13862, !13864}
!13864 = !DILocation(line: 590, column: 3, scope: !13852)
!13865 = !DILocation(line: 591, column: 10, scope: !13852)
!13866 = !DILocation(line: 592, column: 2, scope: !13852)
!13867 = !DILocation(line: 575, column: 25, scope: !13837)
!13868 = !DILocation(line: 594, column: 2, scope: !13837)
!13869 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !2027, file: !2027, line: 49, type: !13870, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2024, retainedNodes: !2236)
!13870 = !DISubroutineType(types: !13871)
!13871 = !{!187}
!13872 = !DILocation(line: 51, column: 10, scope: !13869)
!13873 = !DILocation(line: 51, column: 20, scope: !13869)
!13874 = !DILocation(line: 51, column: 2, scope: !13869)
!13875 = distinct !DISubprogram(name: "coredump", scope: !3115, file: !3115, line: 209, type: !13876, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3111, retainedNodes: !14025)
!13876 = !DISubroutineType(types: !13877)
!13877 = !{null, !32, !13878, !13922}
!13878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13879, size: 32)
!13879 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13880)
!13880 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2747, line: 141, baseType: !13881)
!13881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2747, line: 97, size: 256, elements: !13882)
!13882 = !{!13883}
!13883 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !13881, file: !2747, line: 107, baseType: !13884, size: 256)
!13884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2747, line: 98, size: 256, elements: !13885)
!13885 = !{!13886, !13891, !13896, !13901, !13906, !13911, !13916, !13921}
!13886 = !DIDerivedType(tag: DW_TAG_member, scope: !13884, file: !2747, line: 99, baseType: !13887, size: 32)
!13887 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13884, file: !2747, line: 99, size: 32, elements: !13888)
!13888 = !{!13889, !13890}
!13889 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !13887, file: !2747, line: 99, baseType: !152, size: 32)
!13890 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !13887, file: !2747, line: 99, baseType: !152, size: 32)
!13891 = !DIDerivedType(tag: DW_TAG_member, scope: !13884, file: !2747, line: 100, baseType: !13892, size: 32, offset: 32)
!13892 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13884, file: !2747, line: 100, size: 32, elements: !13893)
!13893 = !{!13894, !13895}
!13894 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !13892, file: !2747, line: 100, baseType: !152, size: 32)
!13895 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !13892, file: !2747, line: 100, baseType: !152, size: 32)
!13896 = !DIDerivedType(tag: DW_TAG_member, scope: !13884, file: !2747, line: 101, baseType: !13897, size: 32, offset: 64)
!13897 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13884, file: !2747, line: 101, size: 32, elements: !13898)
!13898 = !{!13899, !13900}
!13899 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !13897, file: !2747, line: 101, baseType: !152, size: 32)
!13900 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !13897, file: !2747, line: 101, baseType: !152, size: 32)
!13901 = !DIDerivedType(tag: DW_TAG_member, scope: !13884, file: !2747, line: 102, baseType: !13902, size: 32, offset: 96)
!13902 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13884, file: !2747, line: 102, size: 32, elements: !13903)
!13903 = !{!13904, !13905}
!13904 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !13902, file: !2747, line: 102, baseType: !152, size: 32)
!13905 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !13902, file: !2747, line: 102, baseType: !152, size: 32)
!13906 = !DIDerivedType(tag: DW_TAG_member, scope: !13884, file: !2747, line: 103, baseType: !13907, size: 32, offset: 128)
!13907 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13884, file: !2747, line: 103, size: 32, elements: !13908)
!13908 = !{!13909, !13910}
!13909 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !13907, file: !2747, line: 103, baseType: !152, size: 32)
!13910 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !13907, file: !2747, line: 103, baseType: !152, size: 32)
!13911 = !DIDerivedType(tag: DW_TAG_member, scope: !13884, file: !2747, line: 104, baseType: !13912, size: 32, offset: 160)
!13912 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13884, file: !2747, line: 104, size: 32, elements: !13913)
!13913 = !{!13914, !13915}
!13914 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !13912, file: !2747, line: 104, baseType: !152, size: 32)
!13915 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !13912, file: !2747, line: 104, baseType: !152, size: 32)
!13916 = !DIDerivedType(tag: DW_TAG_member, scope: !13884, file: !2747, line: 105, baseType: !13917, size: 32, offset: 192)
!13917 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13884, file: !2747, line: 105, size: 32, elements: !13918)
!13918 = !{!13919, !13920}
!13919 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !13917, file: !2747, line: 105, baseType: !152, size: 32)
!13920 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !13917, file: !2747, line: 105, baseType: !152, size: 32)
!13921 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !13884, file: !2747, line: 106, baseType: !152, size: 32, offset: 224)
!13922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13923, size: 32)
!13923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !13924)
!13924 = !{!13925, !13983, !13995, !13996, !13997, !13998, !13999, !14005, !14020}
!13925 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !13923, file: !309, line: 247, baseType: !13926, size: 384)
!13926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !13927)
!13927 = !{!13928, !13952, !13959, !13960, !13961, !13970, !13971, !13972}
!13928 = !DIDerivedType(tag: DW_TAG_member, scope: !13926, file: !309, line: 60, baseType: !13929, size: 64)
!13929 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13926, file: !309, line: 60, size: 64, elements: !13930)
!13930 = !{!13931, !13946}
!13931 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !13929, file: !309, line: 61, baseType: !13932, size: 64)
!13932 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !13933)
!13933 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !13934)
!13934 = !{!13935, !13941}
!13935 = !DIDerivedType(tag: DW_TAG_member, scope: !13933, file: !319, line: 38, baseType: !13936, size: 32)
!13936 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13933, file: !319, line: 38, size: 32, elements: !13937)
!13937 = !{!13938, !13940}
!13938 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !13936, file: !319, line: 39, baseType: !13939, size: 32)
!13939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13933, size: 32)
!13940 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !13936, file: !319, line: 40, baseType: !13939, size: 32)
!13941 = !DIDerivedType(tag: DW_TAG_member, scope: !13933, file: !319, line: 42, baseType: !13942, size: 32, offset: 32)
!13942 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13933, file: !319, line: 42, size: 32, elements: !13943)
!13943 = !{!13944, !13945}
!13944 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !13942, file: !319, line: 43, baseType: !13939, size: 32)
!13945 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !13942, file: !319, line: 44, baseType: !13939, size: 32)
!13946 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !13929, file: !309, line: 62, baseType: !13947, size: 64)
!13947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !13948)
!13948 = !{!13949}
!13949 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !13947, file: !335, line: 50, baseType: !13950, size: 64)
!13950 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13951, size: 64, elements: !340)
!13951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13947, size: 32)
!13952 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !13926, file: !309, line: 68, baseType: !13953, size: 32, offset: 64)
!13953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13954, size: 32)
!13954 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !13955)
!13955 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !13956)
!13956 = !{!13957}
!13957 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !13955, file: !345, line: 232, baseType: !13958, size: 64)
!13958 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !13933)
!13959 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !13926, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!13960 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !13926, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!13961 = !DIDerivedType(tag: DW_TAG_member, scope: !13926, file: !309, line: 90, baseType: !13962, size: 16, offset: 112)
!13962 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13926, file: !309, line: 90, size: 16, elements: !13963)
!13963 = !{!13964, !13969}
!13964 = !DIDerivedType(tag: DW_TAG_member, scope: !13962, file: !309, line: 91, baseType: !13965, size: 16)
!13965 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !13962, file: !309, line: 91, size: 16, elements: !13966)
!13966 = !{!13967, !13968}
!13967 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !13965, file: !309, line: 96, baseType: !359, size: 8)
!13968 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !13965, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!13969 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !13962, file: !309, line: 100, baseType: !197, size: 16)
!13970 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !13926, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!13971 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !13926, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!13972 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !13926, file: !309, line: 131, baseType: !13973, size: 192, offset: 192)
!13973 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !13974)
!13974 = !{!13975, !13976, !13982}
!13975 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !13973, file: !345, line: 245, baseType: !13932, size: 64)
!13976 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !13973, file: !345, line: 246, baseType: !13977, size: 32, offset: 64)
!13977 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !13978)
!13978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13979, size: 32)
!13979 = !DISubroutineType(types: !13980)
!13980 = !{null, !13981}
!13981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13973, size: 32)
!13982 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !13973, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!13983 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !13923, file: !309, line: 250, baseType: !13984, size: 288, offset: 384)
!13984 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !13985)
!13985 = !{!13986, !13987, !13988, !13989, !13990, !13991, !13992, !13993, !13994}
!13986 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !13984, file: !379, line: 26, baseType: !152, size: 32)
!13987 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !13984, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!13988 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !13984, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!13989 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !13984, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!13990 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !13984, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!13991 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !13984, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!13992 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !13984, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!13993 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !13984, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!13994 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !13984, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!13995 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !13923, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!13996 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !13923, file: !309, line: 256, baseType: !13954, size: 64, offset: 704)
!13997 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !13923, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!13998 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !13923, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!13999 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !13923, file: !309, line: 300, baseType: !14000, size: 96, offset: 1056)
!14000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !14001)
!14001 = !{!14002, !14003, !14004}
!14002 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !14000, file: !309, line: 153, baseType: !22, size: 32)
!14003 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !14000, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!14004 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !14000, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!14005 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !13923, file: !309, line: 325, baseType: !14006, size: 32, offset: 1152)
!14006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14007, size: 32)
!14007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !14008)
!14008 = !{!14009, !14015, !14016}
!14009 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !14007, file: !406, line: 5074, baseType: !14010, size: 96)
!14010 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !14011)
!14011 = !{!14012, !14013, !14014}
!14012 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !14010, file: !410, line: 57, baseType: !413, size: 32)
!14013 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !14010, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!14014 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !14010, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!14015 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !14007, file: !406, line: 5075, baseType: !13954, size: 64, offset: 96)
!14016 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !14007, file: !406, line: 5076, baseType: !14017, size: 32, offset: 160)
!14017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !14018)
!14018 = !{!14019}
!14019 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !14017, file: !420, line: 52, baseType: !22, size: 32)
!14020 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !13923, file: !309, line: 343, baseType: !14021, size: 64, offset: 1184)
!14021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !14022)
!14022 = !{!14023, !14024}
!14023 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !14021, file: !379, line: 63, baseType: !152, size: 32)
!14024 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !14021, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!14025 = !{!14026, !14027, !14028}
!14026 = !DILocalVariable(name: "reason", arg: 1, scope: !13875, file: !3115, line: 209, type: !32)
!14027 = !DILocalVariable(name: "esf", arg: 2, scope: !13875, file: !3115, line: 209, type: !13878)
!14028 = !DILocalVariable(name: "thread", arg: 3, scope: !13875, file: !3115, line: 210, type: !13922)
!14029 = !DILocation(line: 0, scope: !13875)
!14030 = !DILocation(line: 212, column: 1, scope: !13875)
!14031 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3115, file: !3115, line: 214, type: !14032, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3111, retainedNodes: !14034)
!14032 = !DISubroutineType(types: !14033)
!14033 = !{null, !22, !22}
!14034 = !{!14035, !14036}
!14035 = !DILocalVariable(name: "start_addr", arg: 1, scope: !14031, file: !3115, line: 214, type: !22)
!14036 = !DILocalVariable(name: "end_addr", arg: 2, scope: !14031, file: !3115, line: 214, type: !22)
!14037 = !DILocation(line: 0, scope: !14031)
!14038 = !DILocation(line: 216, column: 1, scope: !14031)
!14039 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3115, file: !3115, line: 218, type: !14040, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3111, retainedNodes: !14042)
!14040 = !DISubroutineType(types: !14041)
!14041 = !{null, !194, !185}
!14042 = !{!14043, !14044}
!14043 = !DILocalVariable(name: "buf", arg: 1, scope: !14039, file: !3115, line: 218, type: !194)
!14044 = !DILocalVariable(name: "buflen", arg: 2, scope: !14039, file: !3115, line: 218, type: !185)
!14045 = !DILocation(line: 0, scope: !14039)
!14046 = !DILocation(line: 220, column: 1, scope: !14039)
!14047 = distinct !DISubprogram(name: "coredump_query", scope: !3115, file: !3115, line: 222, type: !14048, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3111, retainedNodes: !14050)
!14048 = !DISubroutineType(types: !14049)
!14049 = !{!107, !3114, !106}
!14050 = !{!14051, !14052}
!14051 = !DILocalVariable(name: "query_id", arg: 1, scope: !14047, file: !3115, line: 222, type: !3114)
!14052 = !DILocalVariable(name: "arg", arg: 2, scope: !14047, file: !3115, line: 222, type: !106)
!14053 = !DILocation(line: 0, scope: !14047)
!14054 = !DILocation(line: 224, column: 2, scope: !14047)
!14055 = distinct !DISubprogram(name: "coredump_cmd", scope: !3115, file: !3115, line: 227, type: !14056, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3111, retainedNodes: !14058)
!14056 = !DISubroutineType(types: !14057)
!14057 = !{!107, !3121, !106}
!14058 = !{!14059, !14060}
!14059 = !DILocalVariable(name: "query_id", arg: 1, scope: !14055, file: !3115, line: 227, type: !3121)
!14060 = !DILocalVariable(name: "arg", arg: 2, scope: !14055, file: !3115, line: 227, type: !106)
!14061 = !DILocation(line: 0, scope: !14055)
!14062 = !DILocation(line: 229, column: 2, scope: !14055)
!14063 = distinct !DISubprogram(name: "arch_system_halt", scope: !14064, file: !14064, line: 23, type: !6010, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3111, retainedNodes: !14065)
!14064 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14065 = !{!14066}
!14066 = !DILocalVariable(name: "reason", arg: 1, scope: !14063, file: !14064, line: 23, type: !32)
!14067 = !DILocation(line: 0, scope: !14063)
!14068 = !DILocation(line: 55, column: 2, scope: !14069, inlinedAt: !14073)
!14069 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5999, file: !5999, line: 42, type: !6000, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3111, retainedNodes: !14070)
!14070 = !{!14071, !14072}
!14071 = !DILocalVariable(name: "key", scope: !14069, file: !5999, line: 44, type: !32)
!14072 = !DILocalVariable(name: "tmp", scope: !14069, file: !5999, line: 53, type: !32)
!14073 = distinct !DILocation(line: 31, column: 8, scope: !14063)
!14074 = !{i64 2284527}
!14075 = !DILocation(line: 0, scope: !14069, inlinedAt: !14073)
!14076 = !DILocation(line: 32, column: 2, scope: !14063)
!14077 = !DILocation(line: 32, column: 2, scope: !14078)
!14078 = distinct !DILexicalBlock(scope: !14079, file: !14064, line: 32, column: 2)
!14079 = distinct !DILexicalBlock(scope: !14063, file: !14064, line: 32, column: 2)
!14080 = distinct !{!14080, !14081, !14082}
!14081 = !DILocation(line: 32, column: 2, scope: !14079)
!14082 = !DILocation(line: 34, column: 2, scope: !14079)
!14083 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !14064, file: !14064, line: 39, type: !14084, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3111, retainedNodes: !14086)
!14084 = !DISubroutineType(types: !14085)
!14085 = !{null, !32, !13878}
!14086 = !{!14087, !14088}
!14087 = !DILocalVariable(name: "reason", arg: 1, scope: !14083, file: !14064, line: 39, type: !32)
!14088 = !DILocalVariable(name: "esf", arg: 2, scope: !14083, file: !14064, line: 40, type: !13878)
!14089 = !DILocation(line: 0, scope: !14083)
!14090 = !DILocation(line: 45, column: 2, scope: !14091)
!14091 = distinct !DILexicalBlock(scope: !14092, file: !14064, line: 45, column: 2)
!14092 = distinct !DILexicalBlock(scope: !14093, file: !14064, line: 45, column: 2)
!14093 = distinct !DILexicalBlock(scope: !14094, file: !14064, line: 45, column: 2)
!14094 = distinct !DILexicalBlock(scope: !14083, file: !14064, line: 45, column: 2)
!14095 = !DILocation(line: 46, column: 2, scope: !14083)
!14096 = distinct !DISubprogram(name: "k_fatal_halt", scope: !14064, file: !14064, line: 81, type: !6010, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3111, retainedNodes: !14097)
!14097 = !{!14098}
!14098 = !DILocalVariable(name: "reason", arg: 1, scope: !14096, file: !14064, line: 81, type: !32)
!14099 = !DILocation(line: 0, scope: !14096)
!14100 = !DILocation(line: 83, column: 2, scope: !14096)
!14101 = distinct !DISubprogram(name: "z_fatal_error", scope: !14064, file: !14064, line: 96, type: !14084, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3111, retainedNodes: !14102)
!14102 = !{!14103, !14104, !14105, !14106}
!14103 = !DILocalVariable(name: "reason", arg: 1, scope: !14101, file: !14064, line: 96, type: !32)
!14104 = !DILocalVariable(name: "esf", arg: 2, scope: !14101, file: !14064, line: 96, type: !13878)
!14105 = !DILocalVariable(name: "key", scope: !14101, file: !14064, line: 102, type: !32)
!14106 = !DILocalVariable(name: "thread", scope: !14101, file: !14064, line: 103, type: !13922)
!14107 = !DILocation(line: 0, scope: !14101)
!14108 = !DILocation(line: 55, column: 2, scope: !14069, inlinedAt: !14109)
!14109 = distinct !DILocation(line: 102, column: 21, scope: !14101)
!14110 = !DILocation(line: 0, scope: !14069, inlinedAt: !14109)
!14111 = !DILocation(line: 104, column: 4, scope: !14101)
!14112 = !DILocation(line: 109, column: 2, scope: !14113)
!14113 = distinct !DILexicalBlock(scope: !14114, file: !14064, line: 109, column: 2)
!14114 = distinct !DILexicalBlock(scope: !14115, file: !14064, line: 109, column: 2)
!14115 = distinct !DILexicalBlock(scope: !14116, file: !14064, line: 109, column: 2)
!14116 = distinct !DILexicalBlock(scope: !14101, file: !14064, line: 109, column: 2)
!14117 = !DILocation(line: 119, column: 11, scope: !14118)
!14118 = distinct !DILexicalBlock(scope: !14101, file: !14064, line: 119, column: 6)
!14119 = !DILocation(line: 119, column: 20, scope: !14118)
!14120 = !DILocalVariable(name: "esf", arg: 1, scope: !14121, file: !7370, line: 71, type: !13878)
!14121 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !7370, file: !7370, line: 71, type: !14122, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3111, retainedNodes: !14124)
!14122 = !DISubroutineType(types: !14123)
!14123 = !{!145, !13878}
!14124 = !{!14120}
!14125 = !DILocation(line: 0, scope: !14121, inlinedAt: !14126)
!14126 = distinct !DILocation(line: 119, column: 23, scope: !14118)
!14127 = !DILocation(line: 73, column: 21, scope: !14121, inlinedAt: !14126)
!14128 = !DILocation(line: 73, column: 26, scope: !14121, inlinedAt: !14126)
!14129 = !DILocation(line: 73, column: 9, scope: !14121, inlinedAt: !14126)
!14130 = !DILocation(line: 119, column: 6, scope: !14101)
!14131 = !DILocation(line: 120, column: 3, scope: !14132)
!14132 = distinct !DILexicalBlock(scope: !14133, file: !14064, line: 120, column: 3)
!14133 = distinct !DILexicalBlock(scope: !14134, file: !14064, line: 120, column: 3)
!14134 = distinct !DILexicalBlock(scope: !14135, file: !14064, line: 120, column: 3)
!14135 = distinct !DILexicalBlock(scope: !14136, file: !14064, line: 120, column: 3)
!14136 = distinct !DILexicalBlock(scope: !14118, file: !14064, line: 119, column: 57)
!14137 = !DILocation(line: 121, column: 2, scope: !14136)
!14138 = !DILocation(line: 124, column: 2, scope: !14139)
!14139 = distinct !DILexicalBlock(scope: !14140, file: !14064, line: 124, column: 2)
!14140 = distinct !DILexicalBlock(scope: !14141, file: !14064, line: 124, column: 2)
!14141 = distinct !DILexicalBlock(scope: !14142, file: !14064, line: 124, column: 2)
!14142 = distinct !DILexicalBlock(scope: !14101, file: !14064, line: 124, column: 2)
!14143 = !DILocation(line: 131, column: 2, scope: !14101)
!14144 = !DILocation(line: 0, scope: !14121, inlinedAt: !14145)
!14145 = distinct !DILocation(line: 163, column: 24, scope: !14146)
!14146 = distinct !DILexicalBlock(scope: !14147, file: !14064, line: 163, column: 7)
!14147 = distinct !DILexicalBlock(scope: !14148, file: !14064, line: 160, column: 9)
!14148 = distinct !DILexicalBlock(scope: !14101, file: !14064, line: 146, column: 6)
!14149 = !DILocation(line: 73, column: 21, scope: !14121, inlinedAt: !14145)
!14150 = !DILocation(line: 73, column: 26, scope: !14121, inlinedAt: !14145)
!14151 = !DILocation(line: 73, column: 9, scope: !14121, inlinedAt: !14145)
!14152 = !DILocation(line: 163, column: 7, scope: !14147)
!14153 = !DILocalVariable(name: "key", arg: 1, scope: !14154, file: !5999, line: 84, type: !32)
!14154 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5999, file: !5999, line: 84, type: !6010, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3111, retainedNodes: !14155)
!14155 = !{!14153}
!14156 = !DILocation(line: 0, scope: !14154, inlinedAt: !14157)
!14157 = distinct !DILocation(line: 171, column: 4, scope: !14158)
!14158 = distinct !DILexicalBlock(scope: !14146, file: !14064, line: 163, column: 58)
!14159 = !DILocation(line: 95, column: 2, scope: !14154, inlinedAt: !14157)
!14160 = !{i64 2285344}
!14161 = !DILocation(line: 172, column: 4, scope: !14158)
!14162 = !DILocation(line: 163, column: 21, scope: !14146)
!14163 = !DILocation(line: 178, column: 15, scope: !14164)
!14164 = distinct !DILexicalBlock(scope: !14165, file: !14064, line: 178, column: 8)
!14165 = distinct !DILexicalBlock(scope: !14146, file: !14064, line: 174, column: 10)
!14166 = !DILocation(line: 0, scope: !14154, inlinedAt: !14167)
!14167 = distinct !DILocation(line: 179, column: 5, scope: !14168)
!14168 = distinct !DILexicalBlock(scope: !14164, file: !14064, line: 178, column: 38)
!14169 = !DILocation(line: 0, scope: !14154, inlinedAt: !14170)
!14170 = distinct !DILocation(line: 186, column: 2, scope: !14101)
!14171 = !DILocation(line: 178, column: 8, scope: !14165)
!14172 = !DILocation(line: 189, column: 3, scope: !14173)
!14173 = distinct !DILexicalBlock(scope: !14174, file: !14064, line: 188, column: 41)
!14174 = distinct !DILexicalBlock(scope: !14101, file: !14064, line: 188, column: 6)
!14175 = !DILocation(line: 191, column: 1, scope: !14101)
!14176 = distinct !DISubprogram(name: "k_current_get", scope: !406, file: !406, line: 530, type: !14177, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3111, retainedNodes: !2236)
!14177 = !DISubroutineType(types: !14178)
!14178 = !{!14179}
!14179 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !309, line: 347, baseType: !13922)
!14180 = !DILocation(line: 535, column: 9, scope: !14176)
!14181 = !DILocation(line: 535, column: 2, scope: !14176)
!14182 = distinct !DISubprogram(name: "reason_to_str", scope: !14064, file: !14064, line: 62, type: !14183, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3111, retainedNodes: !14185)
!14183 = !DISubroutineType(types: !14184)
!14184 = !{!118, !32}
!14185 = !{!14186}
!14186 = !DILocalVariable(name: "reason", arg: 1, scope: !14182, file: !14064, line: 62, type: !32)
!14187 = !DILocation(line: 0, scope: !14182)
!14188 = !DILocation(line: 64, column: 2, scope: !14182)
!14189 = !DILocation(line: 0, scope: !14190)
!14190 = distinct !DILexicalBlock(scope: !14182, file: !14064, line: 64, column: 18)
!14191 = !DILocation(line: 78, column: 1, scope: !14182)
!14192 = distinct !DISubprogram(name: "thread_name_get", scope: !14064, file: !14064, line: 51, type: !14193, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3111, retainedNodes: !14195)
!14193 = !DISubroutineType(types: !14194)
!14194 = !{!118, !13922}
!14195 = !{!14196, !14197}
!14196 = !DILocalVariable(name: "thread", arg: 1, scope: !14192, file: !14064, line: 51, type: !13922)
!14197 = !DILocalVariable(name: "thread_name", scope: !14192, file: !14064, line: 53, type: !118)
!14198 = !DILocation(line: 0, scope: !14192)
!14199 = !DILocation(line: 53, column: 36, scope: !14192)
!14200 = !DILocation(line: 53, column: 28, scope: !14192)
!14201 = !DILocation(line: 53, column: 47, scope: !14192)
!14202 = !DILocation(line: 55, column: 19, scope: !14203)
!14203 = distinct !DILexicalBlock(scope: !14192, file: !14064, line: 55, column: 6)
!14204 = !DILocation(line: 55, column: 28, scope: !14203)
!14205 = !DILocation(line: 55, column: 32, scope: !14203)
!14206 = !DILocation(line: 55, column: 47, scope: !14203)
!14207 = !DILocation(line: 55, column: 6, scope: !14192)
!14208 = !DILocation(line: 57, column: 2, scope: !14209)
!14209 = distinct !DILexicalBlock(scope: !14203, file: !14064, line: 55, column: 57)
!14210 = !DILocation(line: 59, column: 2, scope: !14192)
!14211 = distinct !DISubprogram(name: "k_thread_abort", scope: !4476, file: !4476, line: 188, type: !14212, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3111, retainedNodes: !14214)
!14212 = !DISubroutineType(types: !14213)
!14213 = !{null, !14179}
!14214 = !{!14215}
!14215 = !DILocalVariable(name: "thread", arg: 1, scope: !14211, file: !4476, line: 188, type: !14179)
!14216 = !DILocation(line: 0, scope: !14211)
!14217 = !DILocation(line: 197, column: 2, scope: !14218)
!14218 = distinct !DILexicalBlock(scope: !14211, file: !4476, line: 197, column: 2)
!14219 = !{i64 2155070691}
!14220 = !DILocation(line: 198, column: 2, scope: !14211)
!14221 = !DILocation(line: 199, column: 1, scope: !14211)
!14222 = distinct !DISubprogram(name: "z_current_get", scope: !4476, file: !4476, line: 173, type: !14177, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3111, retainedNodes: !2236)
!14223 = !DILocation(line: 180, column: 2, scope: !14224)
!14224 = distinct !DILexicalBlock(scope: !14222, file: !4476, line: 180, column: 2)
!14225 = !{i64 2155070623}
!14226 = !DILocation(line: 181, column: 9, scope: !14222)
!14227 = !DILocation(line: 181, column: 2, scope: !14222)
!14228 = distinct !DISubprogram(name: "z_early_memset", scope: !2035, file: !2035, line: 108, type: !14229, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2031, retainedNodes: !14231)
!14229 = !DISubroutineType(types: !14230)
!14230 = !{null, !106, !107, !185}
!14231 = !{!14232, !14233, !14234}
!14232 = !DILocalVariable(name: "dst", arg: 1, scope: !14228, file: !2035, line: 108, type: !106)
!14233 = !DILocalVariable(name: "c", arg: 2, scope: !14228, file: !2035, line: 108, type: !107)
!14234 = !DILocalVariable(name: "n", arg: 3, scope: !14228, file: !2035, line: 108, type: !185)
!14235 = !DILocation(line: 0, scope: !14228)
!14236 = !DILocation(line: 110, column: 9, scope: !14228)
!14237 = !DILocation(line: 111, column: 1, scope: !14228)
!14238 = distinct !DISubprogram(name: "z_early_memcpy", scope: !2035, file: !2035, line: 121, type: !14239, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2031, retainedNodes: !14241)
!14239 = !DISubroutineType(types: !14240)
!14240 = !{null, !106, !13, !185}
!14241 = !{!14242, !14243, !14244}
!14242 = !DILocalVariable(name: "dst", arg: 1, scope: !14238, file: !2035, line: 121, type: !106)
!14243 = !DILocalVariable(name: "src", arg: 2, scope: !14238, file: !2035, line: 121, type: !13)
!14244 = !DILocalVariable(name: "n", arg: 3, scope: !14238, file: !2035, line: 121, type: !185)
!14245 = !DILocation(line: 0, scope: !14238)
!14246 = !DILocation(line: 123, column: 9, scope: !14238)
!14247 = !DILocation(line: 124, column: 1, scope: !14238)
!14248 = distinct !DISubprogram(name: "z_bss_zero", scope: !2035, file: !2035, line: 132, type: !3148, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2031, retainedNodes: !2236)
!14249 = !DILocation(line: 143, column: 2, scope: !14248)
!14250 = !DILocation(line: 168, column: 1, scope: !14248)
!14251 = distinct !DISubprogram(name: "z_init_cpu", scope: !2035, file: !2035, line: 372, type: !9232, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2031, retainedNodes: !14252)
!14252 = !{!14253}
!14253 = !DILocalVariable(name: "id", arg: 1, scope: !14251, file: !2035, line: 372, type: !107)
!14254 = !DILocation(line: 0, scope: !14251)
!14255 = !DILocation(line: 374, column: 2, scope: !14251)
!14256 = !DILocation(line: 375, column: 34, scope: !14251)
!14257 = !DILocation(line: 375, column: 19, scope: !14251)
!14258 = !DILocation(line: 375, column: 31, scope: !14251)
!14259 = !DILocation(line: 376, column: 24, scope: !14251)
!14260 = !DILocation(line: 376, column: 19, scope: !14251)
!14261 = !DILocation(line: 376, column: 22, scope: !14251)
!14262 = !DILocation(line: 378, column: 26, scope: !14251)
!14263 = !DILocation(line: 378, column: 4, scope: !14251)
!14264 = !DILocation(line: 378, column: 50, scope: !14251)
!14265 = !DILocation(line: 377, column: 19, scope: !14251)
!14266 = !DILocation(line: 377, column: 29, scope: !14251)
!14267 = !DILocation(line: 384, column: 1, scope: !14251)
!14268 = distinct !DISubprogram(name: "init_idle_thread", scope: !2035, file: !2035, line: 343, type: !9232, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2031, retainedNodes: !14269)
!14269 = !{!14270, !14271, !14272, !14275}
!14270 = !DILocalVariable(name: "i", arg: 1, scope: !14268, file: !2035, line: 343, type: !107)
!14271 = !DILocalVariable(name: "thread", scope: !14268, file: !2035, line: 345, type: !2127)
!14272 = !DILocalVariable(name: "stack", scope: !14268, file: !2035, line: 346, type: !14273)
!14273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14274, size: 32)
!14274 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !560, line: 44, baseType: !2245)
!14275 = !DILocalVariable(name: "tname", scope: !14268, file: !2035, line: 354, type: !193)
!14276 = !DILocation(line: 0, scope: !14268)
!14277 = !DILocation(line: 345, column: 29, scope: !14268)
!14278 = !DILocation(line: 346, column: 28, scope: !14268)
!14279 = !DILocation(line: 362, column: 37, scope: !14268)
!14280 = !DILocation(line: 362, column: 36, scope: !14268)
!14281 = !DILocation(line: 361, column: 2, scope: !14268)
!14282 = !DILocation(line: 365, column: 2, scope: !14268)
!14283 = !DILocation(line: 370, column: 1, scope: !14268)
!14284 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !577, file: !577, line: 331, type: !14285, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2031, retainedNodes: !14287)
!14285 = !DISubroutineType(types: !14286)
!14286 = !{!193, !14273}
!14287 = !{!14288}
!14288 = !DILocalVariable(name: "sym", arg: 1, scope: !14284, file: !577, line: 331, type: !14273)
!14289 = !DILocation(line: 0, scope: !14284)
!14290 = !DILocation(line: 333, column: 21, scope: !14284)
!14291 = !DILocation(line: 333, column: 2, scope: !14284)
!14292 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !14293, file: !14293, line: 155, type: !14294, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2031, retainedNodes: !14296)
!14293 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14294 = !DISubroutineType(types: !14295)
!14295 = !{null, !2127}
!14296 = !{!14297}
!14297 = !DILocalVariable(name: "thread", arg: 1, scope: !14292, file: !14293, line: 155, type: !2127)
!14298 = !DILocation(line: 0, scope: !14292)
!14299 = !DILocation(line: 157, column: 15, scope: !14292)
!14300 = !DILocation(line: 157, column: 28, scope: !14292)
!14301 = !DILocation(line: 158, column: 1, scope: !14292)
!14302 = distinct !DISubprogram(name: "z_cstart", scope: !2035, file: !2035, line: 501, type: !3148, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2031, retainedNodes: !14303)
!14303 = !{!14304}
!14304 = !DILocalVariable(name: "dummy_thread", scope: !14302, file: !2035, line: 518, type: !2128)
!14305 = !DILocation(line: 507, column: 2, scope: !14302)
!14306 = !DILocation(line: 43, column: 14, scope: !14307, inlinedAt: !14311)
!14307 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !14308, file: !14308, line: 40, type: !3148, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2031, retainedNodes: !14309)
!14308 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14309 = !{!14310}
!14310 = !DILocalVariable(name: "msp", scope: !14307, file: !14308, line: 42, type: !152)
!14311 = distinct !DILocation(line: 44, column: 2, scope: !14312, inlinedAt: !14314)
!14312 = distinct !DISubprogram(name: "arch_kernel_init", scope: !14313, file: !14313, line: 42, type: !3148, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2031, retainedNodes: !2236)
!14313 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14314 = distinct !DILocation(line: 510, column: 2, scope: !14302)
!14315 = !DILocation(line: 43, column: 3, scope: !14307, inlinedAt: !14311)
!14316 = !DILocation(line: 43, column: 60, scope: !14307, inlinedAt: !14311)
!14317 = !DILocation(line: 0, scope: !14307, inlinedAt: !14311)
!14318 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !14319, file: !6318, line: 1153, type: !152)
!14319 = distinct !DISubprogram(name: "__set_MSP", scope: !6318, file: !6318, line: 1153, type: !6415, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2031, retainedNodes: !14320)
!14320 = !{!14318}
!14321 = !DILocation(line: 0, scope: !14319, inlinedAt: !14322)
!14322 = distinct !DILocation(line: 46, column: 2, scope: !14307, inlinedAt: !14311)
!14323 = !DILocation(line: 1155, column: 3, scope: !14319, inlinedAt: !14322)
!14324 = !{i64 3750466}
!14325 = !DILocation(line: 62, column: 11, scope: !14307, inlinedAt: !14311)
!14326 = !DILocation(line: 102, column: 2, scope: !14327, inlinedAt: !14328)
!14327 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !7370, file: !7370, line: 97, type: !3148, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2031, retainedNodes: !2236)
!14328 = distinct !DILocation(line: 45, column: 2, scope: !14312, inlinedAt: !14314)
!14329 = !DILocation(line: 108, column: 2, scope: !14327, inlinedAt: !14328)
!14330 = !DILocation(line: 112, column: 2, scope: !14327, inlinedAt: !14328)
!14331 = !DILocation(line: 113, column: 2, scope: !14327, inlinedAt: !14328)
!14332 = !DILocation(line: 114, column: 2, scope: !14327, inlinedAt: !14328)
!14333 = !DILocation(line: 116, column: 2, scope: !14327, inlinedAt: !14328)
!14334 = !DILocation(line: 123, column: 13, scope: !14327, inlinedAt: !14328)
!14335 = !DILocation(line: 46, column: 2, scope: !14312, inlinedAt: !14314)
!14336 = !DILocation(line: 47, column: 2, scope: !14312, inlinedAt: !14314)
!14337 = !DILocation(line: 174, column: 12, scope: !14338, inlinedAt: !14339)
!14338 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !7370, file: !7370, line: 169, type: !3148, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2031, retainedNodes: !2236)
!14339 = distinct !DILocation(line: 48, column: 2, scope: !14312, inlinedAt: !14314)
!14340 = !DILocation(line: 179, column: 12, scope: !14338, inlinedAt: !14339)
!14341 = !DILocation(line: 50, column: 2, scope: !14312, inlinedAt: !14314)
!14342 = !DILocation(line: 57, column: 2, scope: !14312, inlinedAt: !14314)
!14343 = !DILocation(line: 518, column: 2, scope: !14302)
!14344 = !DILocation(line: 518, column: 18, scope: !14302)
!14345 = !DILocation(line: 520, column: 2, scope: !14302)
!14346 = !DILocation(line: 523, column: 2, scope: !14302)
!14347 = !DILocation(line: 526, column: 2, scope: !14302)
!14348 = !DILocation(line: 527, column: 2, scope: !14302)
!14349 = !DILocation(line: 543, column: 24, scope: !14302)
!14350 = !DILocation(line: 543, column: 2, scope: !14302)
!14351 = !DILocation(line: 0, scope: !2267)
!14352 = !DILocation(line: 246, column: 15, scope: !2285)
!14353 = !DILocation(line: 246, column: 36, scope: !2284)
!14354 = !DILocation(line: 246, column: 2, scope: !2285)
!14355 = !DILocation(line: 247, column: 37, scope: !2283)
!14356 = !DILocation(line: 0, scope: !2283)
!14357 = !DILocation(line: 248, column: 19, scope: !2283)
!14358 = !DILocation(line: 248, column: 12, scope: !2283)
!14359 = !DILocation(line: 250, column: 11, scope: !14360)
!14360 = distinct !DILexicalBlock(scope: !2283, file: !2035, line: 250, column: 7)
!14361 = !DILocation(line: 250, column: 7, scope: !2283)
!14362 = !DILocation(line: 254, column: 11, scope: !14363)
!14363 = distinct !DILexicalBlock(scope: !14364, file: !2035, line: 254, column: 8)
!14364 = distinct !DILexicalBlock(scope: !14360, file: !2035, line: 250, column: 20)
!14365 = !DILocation(line: 254, column: 8, scope: !14364)
!14366 = !DILocation(line: 255, column: 9, scope: !14367)
!14367 = distinct !DILexicalBlock(scope: !14363, file: !2035, line: 254, column: 17)
!14368 = !DILocation(line: 258, column: 9, scope: !14367)
!14369 = !DILocation(line: 261, column: 28, scope: !14367)
!14370 = !DILocation(line: 261, column: 10, scope: !14367)
!14371 = !DILocation(line: 261, column: 17, scope: !14367)
!14372 = !DILocation(line: 261, column: 26, scope: !14367)
!14373 = !DILocation(line: 262, column: 4, scope: !14367)
!14374 = !DILocation(line: 263, column: 9, scope: !14364)
!14375 = !DILocation(line: 263, column: 16, scope: !14364)
!14376 = !DILocation(line: 263, column: 28, scope: !14364)
!14377 = !DILocation(line: 264, column: 3, scope: !14364)
!14378 = !DILocation(line: 246, column: 60, scope: !2284)
!14379 = distinct !{!14379, !14354, !14380}
!14380 = !DILocation(line: 265, column: 2, scope: !2285)
!14381 = !DILocation(line: 266, column: 1, scope: !2267)
!14382 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !463, file: !463, line: 1814, type: !6358, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2031, retainedNodes: !14383)
!14383 = !{!14384, !14385}
!14384 = !DILocalVariable(name: "IRQn", arg: 1, scope: !14382, file: !463, line: 1814, type: !930)
!14385 = !DILocalVariable(name: "priority", arg: 2, scope: !14382, file: !463, line: 1814, type: !152)
!14386 = !DILocation(line: 0, scope: !14382)
!14387 = !DILocation(line: 1822, column: 48, scope: !14388)
!14388 = distinct !DILexicalBlock(scope: !14389, file: !463, line: 1821, column: 3)
!14389 = distinct !DILexicalBlock(scope: !14382, file: !463, line: 1816, column: 7)
!14390 = !DILocation(line: 1822, column: 32, scope: !14388)
!14391 = !DILocation(line: 1822, column: 40, scope: !14388)
!14392 = !DILocation(line: 1822, column: 5, scope: !14388)
!14393 = !DILocation(line: 1822, column: 46, scope: !14388)
!14394 = !DILocation(line: 1824, column: 1, scope: !14382)
!14395 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !14313, file: !14313, line: 32, type: !3148, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2236)
!14396 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !14397, file: !14397, line: 215, type: !14294, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2031, retainedNodes: !14398)
!14397 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14398 = !{!14399}
!14399 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !14396, file: !14397, line: 215, type: !2127)
!14400 = !DILocation(line: 0, scope: !14396)
!14401 = !DILocation(line: 217, column: 21, scope: !14396)
!14402 = !DILocation(line: 217, column: 34, scope: !14396)
!14403 = !DILocation(line: 221, column: 21, scope: !14396)
!14404 = !DILocation(line: 221, column: 34, scope: !14396)
!14405 = !DILocation(line: 223, column: 27, scope: !14396)
!14406 = !DILocation(line: 223, column: 33, scope: !14396)
!14407 = !DILocation(line: 224, column: 27, scope: !14396)
!14408 = !DILocation(line: 224, column: 32, scope: !14396)
!14409 = !DILocation(line: 232, column: 16, scope: !14396)
!14410 = !DILocation(line: 232, column: 30, scope: !14396)
!14411 = !DILocation(line: 239, column: 24, scope: !14396)
!14412 = !DILocation(line: 240, column: 1, scope: !14396)
!14413 = distinct !DISubprogram(name: "prepare_multithreading", scope: !2035, file: !2035, line: 399, type: !14414, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2031, retainedNodes: !14416)
!14414 = !DISubroutineType(types: !14415)
!14415 = !{!193}
!14416 = !{!14417}
!14417 = !DILocalVariable(name: "stack_ptr", scope: !14413, file: !2035, line: 401, type: !193)
!14418 = !DILocation(line: 404, column: 2, scope: !14413)
!14419 = !DILocation(line: 416, column: 24, scope: !14413)
!14420 = !DILocation(line: 418, column: 14, scope: !14413)
!14421 = !DILocation(line: 0, scope: !14413)
!14422 = !DILocation(line: 423, column: 2, scope: !14413)
!14423 = !DILocation(line: 424, column: 2, scope: !14413)
!14424 = !DILocation(line: 426, column: 2, scope: !14413)
!14425 = !DILocation(line: 428, column: 2, scope: !14413)
!14426 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !2035, file: !2035, line: 432, type: !14427, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2031, retainedNodes: !14429)
!14427 = !DISubroutineType(types: !14428)
!14428 = !{null, !193}
!14429 = !{!14430}
!14430 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !14426, file: !2035, line: 432, type: !193)
!14431 = !DILocation(line: 0, scope: !14426)
!14432 = !DILocation(line: 435, column: 2, scope: !14426)
!14433 = !DILocation(line: 445, column: 2, scope: !14426)
!14434 = distinct !DISubprogram(name: "bg_thread_main", scope: !2035, file: !2035, line: 277, type: !562, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2031, retainedNodes: !14435)
!14435 = !{!14436, !14437, !14438}
!14436 = !DILocalVariable(name: "unused1", arg: 1, scope: !14434, file: !2035, line: 277, type: !106)
!14437 = !DILocalVariable(name: "unused2", arg: 2, scope: !14434, file: !2035, line: 277, type: !106)
!14438 = !DILocalVariable(name: "unused3", arg: 3, scope: !14434, file: !2035, line: 277, type: !106)
!14439 = !DILocation(line: 0, scope: !14434)
!14440 = !DILocation(line: 291, column: 20, scope: !14434)
!14441 = !DILocation(line: 293, column: 2, scope: !14434)
!14442 = !DILocation(line: 297, column: 2, scope: !14434)
!14443 = !DILocation(line: 305, column: 2, scope: !14434)
!14444 = !DILocation(line: 307, column: 2, scope: !14434)
!14445 = !DILocation(line: 330, column: 8, scope: !14434)
!14446 = !DILocation(line: 333, column: 34, scope: !14434)
!14447 = !DILocation(line: 339, column: 1, scope: !14434)
!14448 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2298, file: !2298, line: 45, type: !14449, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14457)
!14449 = !DISubroutineType(types: !14450)
!14450 = !{null, !14451, !106}
!14451 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !406, line: 103, baseType: !14452)
!14452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14453, size: 32)
!14453 = !DISubroutineType(types: !14454)
!14454 = !{null, !14455, !106}
!14455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14456, size: 32)
!14456 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2303)
!14457 = !{!14458, !14459}
!14458 = !DILocalVariable(name: "user_cb", arg: 1, scope: !14448, file: !2298, line: 45, type: !14451)
!14459 = !DILocalVariable(name: "user_data", arg: 2, scope: !14448, file: !2298, line: 45, type: !106)
!14460 = !DILocation(line: 0, scope: !14448)
!14461 = !DILocation(line: 71, column: 1, scope: !14448)
!14462 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2298, file: !2298, line: 73, type: !14449, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14463)
!14463 = !{!14464, !14465}
!14464 = !DILocalVariable(name: "user_cb", arg: 1, scope: !14462, file: !2298, line: 73, type: !14451)
!14465 = !DILocalVariable(name: "user_data", arg: 2, scope: !14462, file: !2298, line: 73, type: !106)
!14466 = !DILocation(line: 0, scope: !14462)
!14467 = !DILocation(line: 95, column: 1, scope: !14462)
!14468 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2298, file: !2298, line: 97, type: !7371, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !2236)
!14469 = !DILocation(line: 1031, column: 3, scope: !14470, inlinedAt: !14473)
!14470 = distinct !DISubprogram(name: "__get_IPSR", scope: !6318, file: !6318, line: 1027, type: !6405, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14471)
!14471 = !{!14472}
!14472 = !DILocalVariable(name: "result", scope: !14470, file: !6318, line: 1029, type: !152)
!14473 = distinct !DILocation(line: 48, column: 10, scope: !14474, inlinedAt: !14475)
!14474 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7370, file: !7370, line: 46, type: !7371, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !2236)
!14475 = distinct !DILocation(line: 99, column: 9, scope: !14468)
!14476 = !{i64 3756117}
!14477 = !DILocation(line: 0, scope: !14470, inlinedAt: !14473)
!14478 = !DILocation(line: 48, column: 9, scope: !14474, inlinedAt: !14475)
!14479 = !DILocation(line: 99, column: 2, scope: !14468)
!14480 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2298, file: !2298, line: 106, type: !3148, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !2236)
!14481 = !DILocation(line: 108, column: 2, scope: !14480)
!14482 = !DILocation(line: 108, column: 17, scope: !14480)
!14483 = !DILocation(line: 108, column: 30, scope: !14480)
!14484 = !DILocation(line: 109, column: 1, scope: !14480)
!14485 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2298, file: !2298, line: 116, type: !3148, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !2236)
!14486 = !DILocation(line: 118, column: 2, scope: !14485)
!14487 = !DILocation(line: 118, column: 17, scope: !14485)
!14488 = !DILocation(line: 118, column: 30, scope: !14485)
!14489 = !DILocation(line: 119, column: 1, scope: !14485)
!14490 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2298, file: !2298, line: 126, type: !7371, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !2236)
!14491 = !DILocation(line: 128, column: 10, scope: !14490)
!14492 = !DILocation(line: 128, column: 25, scope: !14490)
!14493 = !DILocation(line: 128, column: 38, scope: !14490)
!14494 = !DILocation(line: 128, column: 53, scope: !14490)
!14495 = !DILocation(line: 128, column: 2, scope: !14490)
!14496 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2298, file: !2298, line: 187, type: !14497, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14499)
!14497 = !DISubroutineType(types: !14498)
!14498 = !{!107, !2302, !118}
!14499 = !{!14500, !14501}
!14500 = !DILocalVariable(name: "thread", arg: 1, scope: !14496, file: !2298, line: 187, type: !2302)
!14501 = !DILocalVariable(name: "value", arg: 2, scope: !14496, file: !2298, line: 187, type: !118)
!14502 = !DILocation(line: 0, scope: !14496)
!14503 = !DILocation(line: 190, column: 13, scope: !14504)
!14504 = distinct !DILexicalBlock(scope: !14496, file: !2298, line: 190, column: 6)
!14505 = !DILocation(line: 190, column: 6, scope: !14496)
!14506 = !DILocation(line: 194, column: 10, scope: !14496)
!14507 = !DILocation(line: 194, column: 2, scope: !14496)
!14508 = !DILocation(line: 195, column: 2, scope: !14496)
!14509 = !DILocation(line: 195, column: 47, scope: !14496)
!14510 = !DILocation(line: 199, column: 2, scope: !14496)
!14511 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2298, file: !2298, line: 238, type: !14512, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14514)
!14512 = !DISubroutineType(types: !14513)
!14513 = !{!118, !2302}
!14514 = !{!14515}
!14515 = !DILocalVariable(name: "thread", arg: 1, scope: !14511, file: !2298, line: 238, type: !2302)
!14516 = !DILocation(line: 0, scope: !14511)
!14517 = !DILocation(line: 241, column: 23, scope: !14511)
!14518 = !DILocation(line: 241, column: 2, scope: !14511)
!14519 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2298, file: !2298, line: 248, type: !14520, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14522)
!14520 = !DISubroutineType(types: !14521)
!14521 = !{!107, !2301, !193, !185}
!14522 = !{!14523, !14524, !14525}
!14523 = !DILocalVariable(name: "thread", arg: 1, scope: !14519, file: !2298, line: 248, type: !2301)
!14524 = !DILocalVariable(name: "buf", arg: 2, scope: !14519, file: !2298, line: 248, type: !193)
!14525 = !DILocalVariable(name: "size", arg: 3, scope: !14519, file: !2298, line: 248, type: !185)
!14526 = !DILocation(line: 0, scope: !14519)
!14527 = !DILocation(line: 251, column: 15, scope: !14519)
!14528 = !DILocation(line: 251, column: 2, scope: !14519)
!14529 = !DILocation(line: 252, column: 2, scope: !14519)
!14530 = !DILocation(line: 0, scope: !2297)
!14531 = !DILocation(line: 281, column: 11, scope: !14532)
!14532 = distinct !DILexicalBlock(scope: !2297, file: !2298, line: 281, column: 6)
!14533 = !DILocation(line: 281, column: 20, scope: !14532)
!14534 = !DILocation(line: 275, column: 45, scope: !2297)
!14535 = !DILocation(line: 285, column: 10, scope: !2297)
!14536 = !DILocation(line: 0, scope: !2421)
!14537 = !DILocation(line: 293, column: 39, scope: !14538)
!14538 = distinct !DILexicalBlock(scope: !2421, file: !2298, line: 293, column: 2)
!14539 = !DILocation(line: 293, column: 2, scope: !2421)
!14540 = !DILocation(line: 273, column: 14, scope: !2297)
!14541 = !DILocation(line: 309, column: 2, scope: !2297)
!14542 = !DILocation(line: 309, column: 11, scope: !2297)
!14543 = !DILocation(line: 311, column: 2, scope: !2297)
!14544 = !DILocation(line: 293, column: 26, scope: !14538)
!14545 = !DILocation(line: 294, column: 9, scope: !14546)
!14546 = distinct !DILexicalBlock(scope: !14538, file: !2298, line: 293, column: 54)
!14547 = !DILocation(line: 295, column: 21, scope: !14548)
!14548 = distinct !DILexicalBlock(scope: !14546, file: !2298, line: 295, column: 7)
!14549 = !DILocation(line: 295, column: 28, scope: !14548)
!14550 = !DILocation(line: 295, column: 7, scope: !14546)
!14551 = !DILocation(line: 299, column: 25, scope: !14546)
!14552 = !DILocation(line: 299, column: 41, scope: !14546)
!14553 = !DILocation(line: 300, column: 7, scope: !14546)
!14554 = !DILocation(line: 300, column: 26, scope: !14546)
!14555 = !DILocation(line: 299, column: 10, scope: !14546)
!14556 = !DILocation(line: 299, column: 7, scope: !14546)
!14557 = !DILocation(line: 302, column: 16, scope: !14546)
!14558 = !DILocation(line: 304, column: 20, scope: !14559)
!14559 = distinct !DILexicalBlock(scope: !14546, file: !2298, line: 304, column: 7)
!14560 = !DILocation(line: 304, column: 7, scope: !14546)
!14561 = !DILocation(line: 305, column: 26, scope: !14562)
!14562 = distinct !DILexicalBlock(scope: !14559, file: !2298, line: 304, column: 26)
!14563 = !DILocation(line: 305, column: 42, scope: !14562)
!14564 = !DILocation(line: 305, column: 11, scope: !14562)
!14565 = !DILocation(line: 305, column: 8, scope: !14562)
!14566 = !DILocation(line: 306, column: 3, scope: !14562)
!14567 = !DILocation(line: 293, column: 50, scope: !14538)
!14568 = !DILocation(line: 312, column: 1, scope: !2297)
!14569 = distinct !DISubprogram(name: "copy_bytes", scope: !2298, file: !2298, line: 261, type: !14570, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14572)
!14570 = !DISubroutineType(types: !14571)
!14571 = !{!185, !193, !185, !118, !185}
!14572 = !{!14573, !14574, !14575, !14576, !14577}
!14573 = !DILocalVariable(name: "dest", arg: 1, scope: !14569, file: !2298, line: 261, type: !193)
!14574 = !DILocalVariable(name: "dest_size", arg: 2, scope: !14569, file: !2298, line: 261, type: !185)
!14575 = !DILocalVariable(name: "src", arg: 3, scope: !14569, file: !2298, line: 261, type: !118)
!14576 = !DILocalVariable(name: "src_size", arg: 4, scope: !14569, file: !2298, line: 261, type: !185)
!14577 = !DILocalVariable(name: "bytes_to_copy", scope: !14569, file: !2298, line: 263, type: !185)
!14578 = !DILocation(line: 0, scope: !14569)
!14579 = !DILocation(line: 265, column: 18, scope: !14569)
!14580 = !DILocation(line: 266, column: 2, scope: !14569)
!14581 = !DILocation(line: 268, column: 2, scope: !14569)
!14582 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2298, file: !2298, line: 383, type: !14583, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14585)
!14583 = !DISubroutineType(types: !14584)
!14584 = !{null, !2302}
!14585 = !{!14586}
!14586 = !DILocalVariable(name: "thread", arg: 1, scope: !14582, file: !2298, line: 383, type: !2302)
!14587 = !DILocation(line: 0, scope: !14582)
!14588 = !DILocation(line: 387, column: 2, scope: !14582)
!14589 = !DILocation(line: 388, column: 1, scope: !14582)
!14590 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2298, file: !2298, line: 528, type: !14591, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14598)
!14591 = !DISubroutineType(types: !14592)
!14592 = !{!193, !2302, !14593, !185, !559, !106, !106, !106, !107, !152, !118}
!14593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14594, size: 32)
!14594 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !560, line: 44, baseType: !14595)
!14595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !577, line: 47, size: 8, elements: !14596)
!14596 = !{!14597}
!14597 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !14595, file: !577, line: 48, baseType: !120, size: 8)
!14598 = !{!14599, !14600, !14601, !14602, !14603, !14604, !14605, !14606, !14607, !14608, !14609}
!14599 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14590, file: !2298, line: 528, type: !2302)
!14600 = !DILocalVariable(name: "stack", arg: 2, scope: !14590, file: !2298, line: 529, type: !14593)
!14601 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14590, file: !2298, line: 529, type: !185)
!14602 = !DILocalVariable(name: "entry", arg: 4, scope: !14590, file: !2298, line: 530, type: !559)
!14603 = !DILocalVariable(name: "p1", arg: 5, scope: !14590, file: !2298, line: 531, type: !106)
!14604 = !DILocalVariable(name: "p2", arg: 6, scope: !14590, file: !2298, line: 531, type: !106)
!14605 = !DILocalVariable(name: "p3", arg: 7, scope: !14590, file: !2298, line: 531, type: !106)
!14606 = !DILocalVariable(name: "prio", arg: 8, scope: !14590, file: !2298, line: 532, type: !107)
!14607 = !DILocalVariable(name: "options", arg: 9, scope: !14590, file: !2298, line: 532, type: !152)
!14608 = !DILocalVariable(name: "name", arg: 10, scope: !14590, file: !2298, line: 532, type: !118)
!14609 = !DILocalVariable(name: "stack_ptr", scope: !14590, file: !2298, line: 534, type: !193)
!14610 = !DILocation(line: 0, scope: !14590)
!14611 = !DILocation(line: 536, column: 2, scope: !14612)
!14612 = distinct !DILexicalBlock(scope: !14613, file: !2298, line: 536, column: 2)
!14613 = distinct !DILexicalBlock(scope: !14614, file: !2298, line: 536, column: 2)
!14614 = distinct !DILexicalBlock(scope: !14590, file: !2298, line: 536, column: 2)
!14615 = !DILocation(line: 536, column: 2, scope: !14616)
!14616 = distinct !DILexicalBlock(scope: !14612, file: !2298, line: 536, column: 2)
!14617 = !DILocation(line: 550, column: 28, scope: !14590)
!14618 = !DILocation(line: 550, column: 2, scope: !14590)
!14619 = !DILocation(line: 553, column: 34, scope: !14590)
!14620 = !DILocation(line: 553, column: 2, scope: !14590)
!14621 = !DILocation(line: 554, column: 14, scope: !14590)
!14622 = !DILocation(line: 564, column: 2, scope: !14590)
!14623 = !DILocation(line: 567, column: 14, scope: !14590)
!14624 = !DILocation(line: 567, column: 24, scope: !14590)
!14625 = !DILocation(line: 594, column: 11, scope: !14626)
!14626 = distinct !DILexicalBlock(scope: !14590, file: !2298, line: 594, column: 6)
!14627 = !DILocation(line: 0, scope: !14626)
!14628 = !DILocation(line: 594, column: 6, scope: !14590)
!14629 = !DILocation(line: 595, column: 3, scope: !14630)
!14630 = distinct !DILexicalBlock(scope: !14626, file: !2298, line: 594, column: 20)
!14631 = !DILocation(line: 598, column: 3, scope: !14630)
!14632 = !DILocation(line: 598, column: 52, scope: !14630)
!14633 = !DILocation(line: 599, column: 2, scope: !14630)
!14634 = !DILocation(line: 600, column: 23, scope: !14635)
!14635 = distinct !DILexicalBlock(scope: !14626, file: !2298, line: 599, column: 9)
!14636 = !DILocation(line: 612, column: 7, scope: !14637)
!14637 = distinct !DILexicalBlock(scope: !14590, file: !2298, line: 612, column: 6)
!14638 = !DILocation(line: 612, column: 6, scope: !14590)
!14639 = !DILocation(line: 627, column: 40, scope: !14590)
!14640 = !DILocation(line: 637, column: 2, scope: !14590)
!14641 = !DILocation(line: 613, column: 15, scope: !14642)
!14642 = distinct !DILexicalBlock(scope: !14637, file: !2298, line: 612, column: 17)
!14643 = !DILocation(line: 613, column: 29, scope: !14642)
!14644 = !DILocation(line: 638, column: 1, scope: !14590)
!14645 = distinct !DISubprogram(name: "z_is_idle_thread_entry", scope: !14293, file: !14293, line: 78, type: !14646, scopeLine: 79, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14648)
!14646 = !DISubroutineType(types: !14647)
!14647 = !{!145, !106}
!14648 = !{!14649}
!14649 = !DILocalVariable(name: "entry_point", arg: 1, scope: !14645, file: !14293, line: 78, type: !106)
!14650 = !DILocation(line: 0, scope: !14645)
!14651 = !DILocation(line: 80, column: 21, scope: !14645)
!14652 = !DILocation(line: 80, column: 2, scope: !14645)
!14653 = distinct !DISubprogram(name: "z_waitq_init", scope: !14654, file: !14654, line: 47, type: !14655, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14657)
!14654 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14655 = !DISubroutineType(types: !14656)
!14656 = !{null, !2333}
!14657 = !{!14658}
!14658 = !DILocalVariable(name: "w", arg: 1, scope: !14653, file: !14654, line: 47, type: !2333)
!14659 = !DILocation(line: 0, scope: !14653)
!14660 = !DILocation(line: 49, column: 21, scope: !14653)
!14661 = !DILocation(line: 49, column: 2, scope: !14653)
!14662 = !DILocation(line: 50, column: 1, scope: !14653)
!14663 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2298, file: !2298, line: 791, type: !14664, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14667)
!14664 = !DISubroutineType(types: !14665)
!14665 = !{null, !14666, !107, !152, !32}
!14666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2306, size: 32)
!14667 = !{!14668, !14669, !14670, !14671}
!14668 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14663, file: !2298, line: 791, type: !14666)
!14669 = !DILocalVariable(name: "priority", arg: 2, scope: !14663, file: !2298, line: 791, type: !107)
!14670 = !DILocalVariable(name: "initial_state", arg: 3, scope: !14663, file: !2298, line: 792, type: !152)
!14671 = !DILocalVariable(name: "options", arg: 4, scope: !14663, file: !2298, line: 792, type: !32)
!14672 = !DILocation(line: 0, scope: !14663)
!14673 = !DILocation(line: 795, column: 15, scope: !14663)
!14674 = !DILocation(line: 795, column: 25, scope: !14663)
!14675 = !DILocation(line: 796, column: 30, scope: !14663)
!14676 = !DILocation(line: 796, column: 15, scope: !14663)
!14677 = !DILocation(line: 796, column: 28, scope: !14663)
!14678 = !DILocation(line: 797, column: 30, scope: !14663)
!14679 = !DILocation(line: 797, column: 15, scope: !14663)
!14680 = !DILocation(line: 797, column: 28, scope: !14663)
!14681 = !DILocation(line: 799, column: 22, scope: !14663)
!14682 = !DILocation(line: 799, column: 15, scope: !14663)
!14683 = !DILocation(line: 799, column: 20, scope: !14663)
!14684 = !DILocation(line: 801, column: 15, scope: !14663)
!14685 = !DILocation(line: 801, column: 28, scope: !14663)
!14686 = !DILocation(line: 814, column: 2, scope: !14663)
!14687 = !DILocation(line: 815, column: 1, scope: !14663)
!14688 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2298, file: !2298, line: 449, type: !14689, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14691)
!14689 = !DISubroutineType(types: !14690)
!14690 = !{!193, !2302, !14593, !185}
!14691 = !{!14692, !14693, !14694, !14695, !14696, !14697, !14698, !14699}
!14692 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14688, file: !2298, line: 449, type: !2302)
!14693 = !DILocalVariable(name: "stack", arg: 2, scope: !14688, file: !2298, line: 450, type: !14593)
!14694 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14688, file: !2298, line: 450, type: !185)
!14695 = !DILocalVariable(name: "stack_obj_size", scope: !14688, file: !2298, line: 452, type: !185)
!14696 = !DILocalVariable(name: "stack_buf_size", scope: !14688, file: !2298, line: 452, type: !185)
!14697 = !DILocalVariable(name: "stack_ptr", scope: !14688, file: !2298, line: 453, type: !193)
!14698 = !DILocalVariable(name: "stack_buf_start", scope: !14688, file: !2298, line: 453, type: !193)
!14699 = !DILocalVariable(name: "delta", scope: !14688, file: !2298, line: 454, type: !185)
!14700 = !DILocation(line: 0, scope: !14688)
!14701 = !DILocation(line: 465, column: 20, scope: !14702)
!14702 = distinct !DILexicalBlock(scope: !14688, file: !2298, line: 463, column: 2)
!14703 = !DILocation(line: 466, column: 21, scope: !14702)
!14704 = !DILocation(line: 473, column: 28, scope: !14688)
!14705 = !DILocation(line: 514, column: 33, scope: !14688)
!14706 = !DILocation(line: 514, column: 25, scope: !14688)
!14707 = !DILocation(line: 514, column: 31, scope: !14688)
!14708 = !DILocation(line: 515, column: 25, scope: !14688)
!14709 = !DILocation(line: 515, column: 30, scope: !14688)
!14710 = !DILocation(line: 516, column: 25, scope: !14688)
!14711 = !DILocation(line: 516, column: 31, scope: !14688)
!14712 = !DILocation(line: 520, column: 2, scope: !14688)
!14713 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !577, file: !577, line: 331, type: !14714, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14716)
!14714 = !DISubroutineType(types: !14715)
!14715 = !{!193, !14593}
!14716 = !{!14717}
!14717 = !DILocalVariable(name: "sym", arg: 1, scope: !14713, file: !577, line: 331, type: !14593)
!14718 = !DILocation(line: 0, scope: !14713)
!14719 = !DILocation(line: 333, column: 21, scope: !14713)
!14720 = !DILocation(line: 333, column: 2, scope: !14713)
!14721 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !14722, file: !14722, line: 40, type: !14723, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14725)
!14722 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14723 = !DISubroutineType(types: !14724)
!14724 = !{null, !14666}
!14725 = !{!14726}
!14726 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14721, file: !14722, line: 40, type: !14666)
!14727 = !DILocation(line: 0, scope: !14721)
!14728 = !DILocation(line: 42, column: 31, scope: !14721)
!14729 = !DILocation(line: 42, column: 2, scope: !14721)
!14730 = !DILocation(line: 43, column: 1, scope: !14721)
!14731 = distinct !DISubprogram(name: "z_init_timeout", scope: !14722, file: !14722, line: 25, type: !2359, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14732)
!14732 = !{!14733}
!14733 = !DILocalVariable(name: "to", arg: 1, scope: !14731, file: !14722, line: 25, type: !2361)
!14734 = !DILocation(line: 0, scope: !14731)
!14735 = !DILocation(line: 27, column: 22, scope: !14731)
!14736 = !DILocation(line: 27, column: 2, scope: !14731)
!14737 = !DILocation(line: 28, column: 1, scope: !14731)
!14738 = distinct !DISubprogram(name: "sys_dnode_init", scope: !319, file: !319, line: 211, type: !14739, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14741)
!14739 = !DISubroutineType(types: !14740)
!14740 = !{null, !2408}
!14741 = !{!14742}
!14742 = !DILocalVariable(name: "node", arg: 1, scope: !14738, file: !319, line: 211, type: !2408)
!14743 = !DILocation(line: 0, scope: !14738)
!14744 = !DILocation(line: 213, column: 8, scope: !14738)
!14745 = !DILocation(line: 213, column: 13, scope: !14738)
!14746 = !DILocation(line: 214, column: 8, scope: !14738)
!14747 = !DILocation(line: 214, column: 13, scope: !14738)
!14748 = !DILocation(line: 215, column: 1, scope: !14738)
!14749 = distinct !DISubprogram(name: "sys_dlist_init", scope: !319, file: !319, line: 197, type: !14750, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14753)
!14750 = !DISubroutineType(types: !14751)
!14751 = !{null, !14752}
!14752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2338, size: 32)
!14753 = !{!14754}
!14754 = !DILocalVariable(name: "list", arg: 1, scope: !14749, file: !319, line: 197, type: !14752)
!14755 = !DILocation(line: 0, scope: !14749)
!14756 = !DILocation(line: 199, column: 8, scope: !14749)
!14757 = !DILocation(line: 199, column: 13, scope: !14749)
!14758 = !DILocation(line: 200, column: 8, scope: !14749)
!14759 = !DILocation(line: 200, column: 13, scope: !14749)
!14760 = !DILocation(line: 201, column: 1, scope: !14749)
!14761 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2298, file: !2298, line: 641, type: !14762, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14768)
!14762 = !DISubroutineType(types: !14763)
!14763 = !{!2301, !2302, !14593, !185, !559, !106, !106, !106, !107, !152, !14764}
!14764 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !565, line: 67, baseType: !14765)
!14765 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !565, line: 65, size: 64, elements: !14766)
!14766 = !{!14767}
!14767 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14765, file: !565, line: 66, baseType: !564, size: 64)
!14768 = !{!14769, !14770, !14771, !14772, !14773, !14774, !14775, !14776, !14777, !14778}
!14769 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14761, file: !2298, line: 641, type: !2302)
!14770 = !DILocalVariable(name: "stack", arg: 2, scope: !14761, file: !2298, line: 642, type: !14593)
!14771 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14761, file: !2298, line: 643, type: !185)
!14772 = !DILocalVariable(name: "entry", arg: 4, scope: !14761, file: !2298, line: 643, type: !559)
!14773 = !DILocalVariable(name: "p1", arg: 5, scope: !14761, file: !2298, line: 644, type: !106)
!14774 = !DILocalVariable(name: "p2", arg: 6, scope: !14761, file: !2298, line: 644, type: !106)
!14775 = !DILocalVariable(name: "p3", arg: 7, scope: !14761, file: !2298, line: 644, type: !106)
!14776 = !DILocalVariable(name: "prio", arg: 8, scope: !14761, file: !2298, line: 645, type: !107)
!14777 = !DILocalVariable(name: "options", arg: 9, scope: !14761, file: !2298, line: 645, type: !152)
!14778 = !DILocalVariable(name: "delay", arg: 10, scope: !14761, file: !2298, line: 645, type: !14764)
!14779 = !DILocation(line: 0, scope: !14761)
!14780 = !DILocation(line: 1031, column: 3, scope: !14470, inlinedAt: !14781)
!14781 = distinct !DILocation(line: 48, column: 10, scope: !14474, inlinedAt: !14782)
!14782 = distinct !DILocation(line: 647, column: 2, scope: !14783)
!14783 = distinct !DILexicalBlock(scope: !14784, file: !2298, line: 647, column: 2)
!14784 = distinct !DILexicalBlock(scope: !14761, file: !2298, line: 647, column: 2)
!14785 = !DILocation(line: 0, scope: !14470, inlinedAt: !14781)
!14786 = !DILocation(line: 48, column: 9, scope: !14474, inlinedAt: !14782)
!14787 = !DILocation(line: 647, column: 2, scope: !14784)
!14788 = !DILocation(line: 647, column: 2, scope: !14789)
!14789 = distinct !DILexicalBlock(scope: !14783, file: !2298, line: 647, column: 2)
!14790 = !DILocation(line: 649, column: 2, scope: !14761)
!14791 = !DILocation(line: 652, column: 7, scope: !14792)
!14792 = distinct !DILexicalBlock(scope: !14761, file: !2298, line: 652, column: 6)
!14793 = !DILocation(line: 652, column: 6, scope: !14761)
!14794 = !DILocation(line: 653, column: 3, scope: !14795)
!14795 = distinct !DILexicalBlock(scope: !14792, file: !2298, line: 652, column: 39)
!14796 = !DILocation(line: 654, column: 2, scope: !14795)
!14797 = !DILocation(line: 656, column: 2, scope: !14761)
!14798 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2298, file: !2298, line: 401, type: !14799, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14801)
!14799 = !DISubroutineType(types: !14800)
!14800 = !{null, !2302, !14764}
!14801 = !{!14802, !14803}
!14802 = !DILocalVariable(name: "thread", arg: 1, scope: !14798, file: !2298, line: 401, type: !2302)
!14803 = !DILocalVariable(name: "delay", arg: 2, scope: !14798, file: !2298, line: 401, type: !14764)
!14804 = !DILocation(line: 0, scope: !14798)
!14805 = !DILocation(line: 404, column: 6, scope: !14806)
!14806 = distinct !DILexicalBlock(scope: !14798, file: !2298, line: 404, column: 6)
!14807 = !DILocation(line: 404, column: 6, scope: !14798)
!14808 = !DILocation(line: 405, column: 3, scope: !14809)
!14809 = distinct !DILexicalBlock(scope: !14806, file: !2298, line: 404, column: 38)
!14810 = !DILocation(line: 406, column: 2, scope: !14809)
!14811 = !DILocation(line: 407, column: 3, scope: !14812)
!14812 = distinct !DILexicalBlock(scope: !14806, file: !2298, line: 406, column: 9)
!14813 = !DILocation(line: 413, column: 1, scope: !14798)
!14814 = distinct !DISubprogram(name: "k_thread_start", scope: !4476, file: !4476, line: 205, type: !14815, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14817)
!14815 = !DISubroutineType(types: !14816)
!14816 = !{null, !2301}
!14817 = !{!14818}
!14818 = !DILocalVariable(name: "thread", arg: 1, scope: !14814, file: !4476, line: 205, type: !2301)
!14819 = !DILocation(line: 0, scope: !14814)
!14820 = !DILocation(line: 214, column: 2, scope: !14821)
!14821 = distinct !DILexicalBlock(scope: !14814, file: !4476, line: 214, column: 2)
!14822 = !{i64 2155095915}
!14823 = !DILocation(line: 215, column: 2, scope: !14814)
!14824 = !DILocation(line: 216, column: 1, scope: !14814)
!14825 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14722, file: !14722, line: 47, type: !14799, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14826)
!14826 = !{!14827, !14828}
!14827 = !DILocalVariable(name: "thread", arg: 1, scope: !14825, file: !14722, line: 47, type: !2302)
!14828 = !DILocalVariable(name: "ticks", arg: 2, scope: !14825, file: !14722, line: 47, type: !14764)
!14829 = !DILocation(line: 0, scope: !14825)
!14830 = !DILocation(line: 49, column: 30, scope: !14825)
!14831 = !DILocation(line: 49, column: 2, scope: !14825)
!14832 = !DILocation(line: 50, column: 1, scope: !14825)
!14833 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2298, file: !2298, line: 748, type: !3148, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14834)
!14834 = !{!14835, !14853}
!14835 = !DILocalVariable(name: "thread_data", scope: !14836, file: !2298, line: 750, type: !14837)
!14836 = distinct !DILexicalBlock(scope: !14833, file: !2298, line: 750, column: 2)
!14837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14838, size: 32)
!14838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !406, line: 620, size: 384, elements: !14839)
!14839 = !{!14840, !14841, !14842, !14843, !14844, !14845, !14846, !14847, !14848, !14849, !14850, !14852}
!14840 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !14838, file: !406, line: 621, baseType: !2302, size: 32)
!14841 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !14838, file: !406, line: 622, baseType: !14593, size: 32, offset: 32)
!14842 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !14838, file: !406, line: 623, baseType: !32, size: 32, offset: 64)
!14843 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !14838, file: !406, line: 624, baseType: !559, size: 32, offset: 96)
!14844 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !14838, file: !406, line: 625, baseType: !106, size: 32, offset: 128)
!14845 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !14838, file: !406, line: 626, baseType: !106, size: 32, offset: 160)
!14846 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !14838, file: !406, line: 627, baseType: !106, size: 32, offset: 192)
!14847 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !14838, file: !406, line: 628, baseType: !107, size: 32, offset: 224)
!14848 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !14838, file: !406, line: 629, baseType: !152, size: 32, offset: 256)
!14849 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !14838, file: !406, line: 630, baseType: !904, size: 32, offset: 288)
!14850 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !14838, file: !406, line: 631, baseType: !14851, size: 32, offset: 320)
!14851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3148, size: 32)
!14852 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !14838, file: !406, line: 632, baseType: !118, size: 32, offset: 352)
!14853 = !DILocalVariable(name: "thread_data", scope: !14854, file: !2298, line: 781, type: !14837)
!14854 = distinct !DILexicalBlock(scope: !14833, file: !2298, line: 781, column: 2)
!14855 = !DILocation(line: 0, scope: !14836)
!14856 = !DILocation(line: 750, column: 2, scope: !14857)
!14857 = distinct !DILexicalBlock(scope: !14858, file: !2298, line: 750, column: 2)
!14858 = distinct !DILexicalBlock(scope: !14859, file: !2298, line: 750, column: 2)
!14859 = distinct !DILexicalBlock(scope: !14836, file: !2298, line: 750, column: 2)
!14860 = !DILocation(line: 750, column: 2, scope: !14861)
!14861 = distinct !DILexicalBlock(scope: !14862, file: !2298, line: 750, column: 2)
!14862 = distinct !DILexicalBlock(scope: !14857, file: !2298, line: 750, column: 2)
!14863 = !DILocation(line: 750, column: 2, scope: !14858)
!14864 = !DILocation(line: 750, column: 2, scope: !14836)
!14865 = !DILocation(line: 780, column: 2, scope: !14833)
!14866 = !DILocation(line: 0, scope: !14854)
!14867 = !DILocation(line: 781, column: 2, scope: !14868)
!14868 = distinct !DILexicalBlock(scope: !14869, file: !2298, line: 781, column: 2)
!14869 = distinct !DILexicalBlock(scope: !14870, file: !2298, line: 781, column: 2)
!14870 = distinct !DILexicalBlock(scope: !14854, file: !2298, line: 781, column: 2)
!14871 = !DILocation(line: 752, column: 17, scope: !14872)
!14872 = distinct !DILexicalBlock(scope: !14859, file: !2298, line: 750, column: 38)
!14873 = !DILocation(line: 753, column: 17, scope: !14872)
!14874 = !DILocation(line: 754, column: 17, scope: !14872)
!14875 = !DILocation(line: 755, column: 17, scope: !14872)
!14876 = !DILocation(line: 756, column: 17, scope: !14872)
!14877 = !DILocation(line: 757, column: 17, scope: !14872)
!14878 = !DILocation(line: 758, column: 17, scope: !14872)
!14879 = !DILocation(line: 759, column: 17, scope: !14872)
!14880 = !DILocation(line: 760, column: 17, scope: !14872)
!14881 = !DILocation(line: 761, column: 17, scope: !14872)
!14882 = !DILocation(line: 751, column: 3, scope: !14872)
!14883 = !DILocation(line: 763, column: 16, scope: !14872)
!14884 = !DILocation(line: 763, column: 29, scope: !14872)
!14885 = !DILocation(line: 763, column: 39, scope: !14872)
!14886 = !DILocation(line: 750, column: 2, scope: !14859)
!14887 = !DILocation(line: 750, column: 2, scope: !14862)
!14888 = distinct !{!14888, !14864, !14889}
!14889 = !DILocation(line: 764, column: 2, scope: !14836)
!14890 = !DILocation(line: 781, column: 2, scope: !14891)
!14891 = distinct !DILexicalBlock(scope: !14892, file: !2298, line: 781, column: 2)
!14892 = distinct !DILexicalBlock(scope: !14868, file: !2298, line: 781, column: 2)
!14893 = !DILocation(line: 781, column: 2, scope: !14869)
!14894 = !DILocation(line: 781, column: 2, scope: !14854)
!14895 = !DILocation(line: 787, column: 2, scope: !14833)
!14896 = !DILocation(line: 788, column: 1, scope: !14833)
!14897 = !DILocation(line: 782, column: 20, scope: !14898)
!14898 = distinct !DILexicalBlock(scope: !14899, file: !2298, line: 782, column: 7)
!14899 = distinct !DILexicalBlock(scope: !14870, file: !2298, line: 781, column: 38)
!14900 = !DILocation(line: 782, column: 31, scope: !14898)
!14901 = !DILocation(line: 782, column: 7, scope: !14899)
!14902 = !DILocation(line: 783, column: 37, scope: !14903)
!14903 = distinct !DILexicalBlock(scope: !14898, file: !2298, line: 782, column: 51)
!14904 = !DILocation(line: 784, column: 10, scope: !14903)
!14905 = !DILocation(line: 783, column: 4, scope: !14903)
!14906 = !DILocation(line: 785, column: 3, scope: !14903)
!14907 = !DILocation(line: 781, column: 2, scope: !14870)
!14908 = !DILocation(line: 781, column: 2, scope: !14892)
!14909 = distinct !{!14909, !14894, !14910}
!14910 = !DILocation(line: 786, column: 2, scope: !14854)
!14911 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !8786, file: !8786, line: 403, type: !14912, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14914)
!14912 = !DISubroutineType(types: !14913)
!14913 = !{!566, !566}
!14914 = !{!14915}
!14915 = !DILocalVariable(name: "t", arg: 1, scope: !14911, file: !8786, line: 403, type: !566)
!14916 = !DILocation(line: 0, scope: !14911)
!14917 = !DILocalVariable(name: "t", arg: 1, scope: !14918, file: !8786, line: 102, type: !566)
!14918 = distinct !DISubprogram(name: "z_tmcvt", scope: !8786, file: !8786, line: 102, type: !8793, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14919)
!14919 = !{!14917, !14920, !14921, !14922, !14923, !14924, !14925, !14926, !14927, !14928, !14929}
!14920 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14918, file: !8786, line: 102, type: !152)
!14921 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14918, file: !8786, line: 103, type: !152)
!14922 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14918, file: !8786, line: 103, type: !145)
!14923 = !DILocalVariable(name: "result32", arg: 5, scope: !14918, file: !8786, line: 104, type: !145)
!14924 = !DILocalVariable(name: "round_up", arg: 6, scope: !14918, file: !8786, line: 104, type: !145)
!14925 = !DILocalVariable(name: "round_off", arg: 7, scope: !14918, file: !8786, line: 105, type: !145)
!14926 = !DILocalVariable(name: "mul_ratio", scope: !14918, file: !8786, line: 107, type: !145)
!14927 = !DILocalVariable(name: "div_ratio", scope: !14918, file: !8786, line: 109, type: !145)
!14928 = !DILocalVariable(name: "off", scope: !14918, file: !8786, line: 116, type: !566)
!14929 = !DILocalVariable(name: "rdivisor", scope: !14930, file: !8786, line: 119, type: !152)
!14930 = distinct !DILexicalBlock(scope: !14931, file: !8786, line: 118, column: 18)
!14931 = distinct !DILexicalBlock(scope: !14918, file: !8786, line: 118, column: 6)
!14932 = !DILocation(line: 0, scope: !14918, inlinedAt: !14933)
!14933 = distinct !DILocation(line: 406, column: 9, scope: !14911)
!14934 = !DILocation(line: 145, column: 13, scope: !14935, inlinedAt: !14933)
!14935 = distinct !DILexicalBlock(scope: !14936, file: !8786, line: 144, column: 10)
!14936 = distinct !DILexicalBlock(scope: !14937, file: !8786, line: 142, column: 7)
!14937 = distinct !DILexicalBlock(scope: !14938, file: !8786, line: 141, column: 24)
!14938 = distinct !DILexicalBlock(scope: !14939, file: !8786, line: 141, column: 13)
!14939 = distinct !DILexicalBlock(scope: !14918, file: !8786, line: 134, column: 6)
!14940 = !DILocation(line: 406, column: 2, scope: !14911)
!14941 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2298, file: !2298, line: 817, type: !4354, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14942)
!14942 = !{!14943, !14944, !14945, !14946}
!14943 = !DILocalVariable(name: "entry", arg: 1, scope: !14941, file: !2298, line: 817, type: !559)
!14944 = !DILocalVariable(name: "p1", arg: 2, scope: !14941, file: !2298, line: 818, type: !106)
!14945 = !DILocalVariable(name: "p2", arg: 3, scope: !14941, file: !2298, line: 818, type: !106)
!14946 = !DILocalVariable(name: "p3", arg: 4, scope: !14941, file: !2298, line: 818, type: !106)
!14947 = !DILocation(line: 0, scope: !14941)
!14948 = !DILocation(line: 822, column: 2, scope: !14941)
!14949 = !DILocation(line: 822, column: 17, scope: !14941)
!14950 = !DILocation(line: 822, column: 30, scope: !14941)
!14951 = !DILocation(line: 823, column: 2, scope: !14941)
!14952 = !DILocation(line: 845, column: 2, scope: !14941)
!14953 = distinct !DISubprogram(name: "z_spin_lock_valid", scope: !2298, file: !2298, line: 853, type: !14954, scopeLine: 854, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14957)
!14954 = !DISubroutineType(types: !14955)
!14955 = !{!145, !14956}
!14956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2397, size: 32)
!14957 = !{!14958, !14959}
!14958 = !DILocalVariable(name: "l", arg: 1, scope: !14953, file: !2298, line: 853, type: !14956)
!14959 = !DILocalVariable(name: "thread_cpu", scope: !14953, file: !2298, line: 855, type: !22)
!14960 = !DILocation(line: 0, scope: !14953)
!14961 = !DILocation(line: 855, column: 28, scope: !14953)
!14962 = !DILocation(line: 857, column: 17, scope: !14963)
!14963 = distinct !DILexicalBlock(scope: !14953, file: !2298, line: 857, column: 6)
!14964 = !DILocation(line: 857, column: 6, scope: !14953)
!14965 = !DILocation(line: 858, column: 19, scope: !14966)
!14966 = distinct !DILexicalBlock(scope: !14967, file: !2298, line: 858, column: 7)
!14967 = distinct !DILexicalBlock(scope: !14963, file: !2298, line: 857, column: 24)
!14968 = !DILocation(line: 858, column: 42, scope: !14966)
!14969 = !DILocation(line: 858, column: 28, scope: !14966)
!14970 = !DILocation(line: 858, column: 25, scope: !14966)
!14971 = !DILocation(line: 858, column: 7, scope: !14967)
!14972 = !DILocation(line: 862, column: 2, scope: !14953)
!14973 = !DILocation(line: 863, column: 1, scope: !14953)
!14974 = distinct !DISubprogram(name: "z_spin_unlock_valid", scope: !2298, file: !2298, line: 865, type: !14954, scopeLine: 866, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14975)
!14975 = !{!14976}
!14976 = !DILocalVariable(name: "l", arg: 1, scope: !14974, file: !2298, line: 865, type: !14956)
!14977 = !DILocation(line: 0, scope: !14974)
!14978 = !DILocation(line: 867, column: 9, scope: !14979)
!14979 = distinct !DILexicalBlock(scope: !14974, file: !2298, line: 867, column: 6)
!14980 = !DILocation(line: 867, column: 38, scope: !14979)
!14981 = !DILocation(line: 867, column: 24, scope: !14979)
!14982 = !DILocation(line: 867, column: 54, scope: !14979)
!14983 = !DILocation(line: 867, column: 43, scope: !14979)
!14984 = !DILocation(line: 867, column: 41, scope: !14979)
!14985 = !DILocation(line: 867, column: 20, scope: !14979)
!14986 = !DILocation(line: 867, column: 6, scope: !14974)
!14987 = !DILocation(line: 870, column: 16, scope: !14974)
!14988 = !DILocation(line: 871, column: 2, scope: !14974)
!14989 = !DILocation(line: 872, column: 1, scope: !14974)
!14990 = distinct !DISubprogram(name: "z_spin_lock_set_owner", scope: !2298, file: !2298, line: 874, type: !14991, scopeLine: 875, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14993)
!14991 = !DISubroutineType(types: !14992)
!14992 = !{null, !14956}
!14993 = !{!14994}
!14994 = !DILocalVariable(name: "l", arg: 1, scope: !14990, file: !2298, line: 874, type: !14956)
!14995 = !DILocation(line: 0, scope: !14990)
!14996 = !DILocation(line: 876, column: 32, scope: !14990)
!14997 = !DILocation(line: 876, column: 18, scope: !14990)
!14998 = !DILocation(line: 876, column: 48, scope: !14990)
!14999 = !DILocation(line: 876, column: 37, scope: !14990)
!15000 = !DILocation(line: 876, column: 35, scope: !14990)
!15001 = !DILocation(line: 876, column: 5, scope: !14990)
!15002 = !DILocation(line: 876, column: 16, scope: !14990)
!15003 = !DILocation(line: 877, column: 1, scope: !14990)
!15004 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2298, file: !2298, line: 888, type: !15005, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !15007)
!15005 = !DISubroutineType(types: !15006)
!15006 = !{!107, !2302}
!15007 = !{!15008}
!15008 = !DILocalVariable(name: "thread", arg: 1, scope: !15004, file: !2298, line: 888, type: !2302)
!15009 = !DILocation(line: 0, scope: !15004)
!15010 = !DILocation(line: 893, column: 2, scope: !15004)
!15011 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2298, file: !2298, line: 897, type: !15012, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !15014)
!15012 = !DISubroutineType(types: !15013)
!15013 = !{!107, !2302, !32}
!15014 = !{!15015, !15016}
!15015 = !DILocalVariable(name: "thread", arg: 1, scope: !15011, file: !2298, line: 897, type: !2302)
!15016 = !DILocalVariable(name: "options", arg: 2, scope: !15011, file: !2298, line: 897, type: !32)
!15017 = !DILocation(line: 0, scope: !15011)
!15018 = !DILocation(line: 902, column: 2, scope: !15011)
!15019 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2298, file: !2298, line: 1072, type: !15020, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !15025)
!15020 = !DISubroutineType(types: !15021)
!15021 = !{!107, !2301, !15022}
!15022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15023, size: 32)
!15023 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !309, line: 234, baseType: !15024)
!15024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !309, line: 192, elements: !2236)
!15025 = !{!15026, !15027}
!15026 = !DILocalVariable(name: "thread", arg: 1, scope: !15019, file: !2298, line: 1072, type: !2301)
!15027 = !DILocalVariable(name: "stats", arg: 2, scope: !15019, file: !2298, line: 1073, type: !15022)
!15028 = !DILocation(line: 0, scope: !15019)
!15029 = !DILocation(line: 1075, column: 14, scope: !15030)
!15030 = distinct !DILexicalBlock(scope: !15019, file: !2298, line: 1075, column: 6)
!15031 = !DILocation(line: 1075, column: 23, scope: !15030)
!15032 = !DILocation(line: 1086, column: 1, scope: !15019)
!15033 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2298, file: !2298, line: 1088, type: !15034, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !15036)
!15034 = !DISubroutineType(types: !15035)
!15035 = !{!107, !15022}
!15036 = !{!15037}
!15037 = !DILocalVariable(name: "stats", arg: 1, scope: !15033, file: !2298, line: 1088, type: !15022)
!15038 = !DILocation(line: 0, scope: !15033)
!15039 = !DILocation(line: 1094, column: 12, scope: !15040)
!15040 = distinct !DILexicalBlock(scope: !15033, file: !2298, line: 1094, column: 6)
!15041 = !DILocation(line: 1120, column: 1, scope: !15033)
!15042 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !15043, file: !15043, line: 20, type: !3148, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3129, retainedNodes: !2236)
!15043 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15044 = !DILocation(line: 30, column: 2, scope: !15042)
!15045 = !DILocation(line: 31, column: 1, scope: !15042)
!15046 = distinct !DISubprogram(name: "idle", scope: !15043, file: !15043, line: 33, type: !562, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3129, retainedNodes: !15047)
!15047 = !{!15048, !15049, !15050}
!15048 = !DILocalVariable(name: "unused1", arg: 1, scope: !15046, file: !15043, line: 33, type: !106)
!15049 = !DILocalVariable(name: "unused2", arg: 2, scope: !15046, file: !15043, line: 33, type: !106)
!15050 = !DILocalVariable(name: "unused3", arg: 3, scope: !15046, file: !15043, line: 33, type: !106)
!15051 = !DILocation(line: 0, scope: !15046)
!15052 = !DILocation(line: 39, column: 2, scope: !15053)
!15053 = distinct !DILexicalBlock(scope: !15054, file: !15043, line: 39, column: 2)
!15054 = distinct !DILexicalBlock(scope: !15046, file: !15043, line: 39, column: 2)
!15055 = !DILocation(line: 39, column: 2, scope: !15054)
!15056 = !DILocation(line: 39, column: 2, scope: !15057)
!15057 = distinct !DILexicalBlock(scope: !15053, file: !15043, line: 39, column: 2)
!15058 = !DILocation(line: 55, column: 2, scope: !15059, inlinedAt: !15063)
!15059 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5999, file: !5999, line: 42, type: !6000, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3129, retainedNodes: !15060)
!15060 = !{!15061, !15062}
!15061 = !DILocalVariable(name: "key", scope: !15059, file: !5999, line: 44, type: !32)
!15062 = !DILocalVariable(name: "tmp", scope: !15059, file: !5999, line: 53, type: !32)
!15063 = distinct !DILocation(line: 62, column: 10, scope: !15064)
!15064 = distinct !DILexicalBlock(scope: !15046, file: !15043, line: 41, column: 15)
!15065 = !{i64 2282869}
!15066 = !DILocation(line: 0, scope: !15059, inlinedAt: !15063)
!15067 = !DILocation(line: 86, column: 3, scope: !15064)
!15068 = !DILocation(line: 41, column: 2, scope: !15046)
!15069 = distinct !{!15069, !15068, !15070}
!15070 = !DILocation(line: 105, column: 2, scope: !15046)
!15071 = distinct !DISubprogram(name: "k_cpu_idle", scope: !406, file: !406, line: 5627, type: !3148, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3129, retainedNodes: !2236)
!15072 = !DILocation(line: 5629, column: 2, scope: !15071)
!15073 = !DILocation(line: 5630, column: 1, scope: !15071)
!15074 = !DISubprogram(name: "arch_cpu_idle", scope: !560, file: !560, line: 167, type: !3148, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2236)
!15075 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2536, file: !2536, line: 93, type: !15076, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15078)
!15076 = !DISubroutineType(types: !15077)
!15077 = !{!904, !2428, !2428}
!15078 = !{!15079, !15080, !15081, !15082}
!15079 = !DILocalVariable(name: "thread_1", arg: 1, scope: !15075, file: !2536, line: 93, type: !2428)
!15080 = !DILocalVariable(name: "thread_2", arg: 2, scope: !15075, file: !2536, line: 94, type: !2428)
!15081 = !DILocalVariable(name: "b1", scope: !15075, file: !2536, line: 97, type: !904)
!15082 = !DILocalVariable(name: "b2", scope: !15075, file: !2536, line: 98, type: !904)
!15083 = !DILocation(line: 0, scope: !15075)
!15084 = !DILocation(line: 97, column: 30, scope: !15075)
!15085 = !DILocation(line: 98, column: 30, scope: !15075)
!15086 = !DILocation(line: 100, column: 9, scope: !15087)
!15087 = distinct !DILexicalBlock(scope: !15075, file: !2536, line: 100, column: 6)
!15088 = !DILocation(line: 100, column: 6, scope: !15075)
!15089 = !DILocation(line: 125, column: 1, scope: !15075)
!15090 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2536, file: !2536, line: 428, type: !15091, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15093)
!15091 = !DISubroutineType(types: !15092)
!15092 = !{null, !2428}
!15093 = !{!15094}
!15094 = !DILocalVariable(name: "curr", arg: 1, scope: !15090, file: !2536, line: 428, type: !2428)
!15095 = !DILocation(line: 0, scope: !15090)
!15096 = !DILocation(line: 434, column: 6, scope: !15097)
!15097 = distinct !DILexicalBlock(scope: !15090, file: !2536, line: 434, column: 6)
!15098 = !DILocation(line: 434, column: 23, scope: !15097)
!15099 = !DILocation(line: 434, column: 6, scope: !15090)
!15100 = !DILocation(line: 435, column: 50, scope: !15101)
!15101 = distinct !DILexicalBlock(scope: !15097, file: !2536, line: 434, column: 29)
!15102 = !DILocation(line: 435, column: 48, scope: !15101)
!15103 = !DILocation(line: 435, column: 29, scope: !15101)
!15104 = !DILocation(line: 436, column: 24, scope: !15101)
!15105 = !DILocation(line: 436, column: 3, scope: !15101)
!15106 = !DILocation(line: 437, column: 2, scope: !15101)
!15107 = !DILocation(line: 438, column: 1, scope: !15090)
!15108 = distinct !DISubprogram(name: "slice_time", scope: !2536, file: !2536, line: 407, type: !15109, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15111)
!15109 = !DISubroutineType(types: !15110)
!15110 = !{!107, !2428}
!15111 = !{!15112, !15113}
!15112 = !DILocalVariable(name: "curr", arg: 1, scope: !15108, file: !2536, line: 407, type: !2428)
!15113 = !DILocalVariable(name: "ret", scope: !15108, file: !2536, line: 409, type: !107)
!15114 = !DILocation(line: 0, scope: !15108)
!15115 = !DILocation(line: 409, column: 12, scope: !15108)
!15116 = !DILocation(line: 416, column: 2, scope: !15108)
!15117 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2536, file: !2536, line: 440, type: !15118, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15120)
!15118 = !DISubroutineType(types: !15119)
!15119 = !{null, !904, !107}
!15120 = !{!15121, !15122, !15123, !15129}
!15121 = !DILocalVariable(name: "slice", arg: 1, scope: !15117, file: !2536, line: 440, type: !904)
!15122 = !DILocalVariable(name: "prio", arg: 2, scope: !15117, file: !2536, line: 440, type: !107)
!15123 = !DILocalVariable(name: "__i", scope: !15124, file: !2536, line: 442, type: !15125)
!15124 = distinct !DILexicalBlock(scope: !15117, file: !2536, line: 442, column: 2)
!15125 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !420, line: 106, baseType: !15126)
!15126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !420, line: 32, size: 32, elements: !15127)
!15127 = !{!15128}
!15128 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !15126, file: !420, line: 33, baseType: !107, size: 32)
!15129 = !DILocalVariable(name: "__key", scope: !15124, file: !2536, line: 442, type: !15125)
!15130 = !DILocation(line: 0, scope: !15117)
!15131 = !DILocation(line: 0, scope: !15124)
!15132 = !DILocalVariable(name: "l", arg: 1, scope: !15133, file: !420, line: 136, type: !15136)
!15133 = distinct !DISubprogram(name: "k_spin_lock", scope: !420, file: !420, line: 136, type: !15134, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15137)
!15134 = !DISubroutineType(types: !15135)
!15135 = !{!15125, !15136}
!15136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2523, size: 32)
!15137 = !{!15132, !15138}
!15138 = !DILocalVariable(name: "k", scope: !15133, file: !420, line: 139, type: !15125)
!15139 = !DILocation(line: 0, scope: !15133, inlinedAt: !15140)
!15140 = distinct !DILocation(line: 442, column: 2, scope: !15124)
!15141 = !DILocation(line: 55, column: 2, scope: !15142, inlinedAt: !15146)
!15142 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5999, file: !5999, line: 42, type: !6000, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15143)
!15143 = !{!15144, !15145}
!15144 = !DILocalVariable(name: "key", scope: !15142, file: !5999, line: 44, type: !32)
!15145 = !DILocalVariable(name: "tmp", scope: !15142, file: !5999, line: 53, type: !32)
!15146 = distinct !DILocation(line: 145, column: 10, scope: !15133, inlinedAt: !15140)
!15147 = !{i64 2326840}
!15148 = !DILocation(line: 0, scope: !15142, inlinedAt: !15146)
!15149 = !DILocation(line: 148, column: 2, scope: !15150, inlinedAt: !15140)
!15150 = distinct !DILexicalBlock(scope: !15151, file: !420, line: 148, column: 2)
!15151 = distinct !DILexicalBlock(scope: !15133, file: !420, line: 148, column: 2)
!15152 = !DILocation(line: 148, column: 2, scope: !15151, inlinedAt: !15140)
!15153 = !DILocation(line: 148, column: 2, scope: !15154, inlinedAt: !15140)
!15154 = distinct !DILexicalBlock(scope: !15150, file: !420, line: 148, column: 2)
!15155 = !DILocation(line: 160, column: 2, scope: !15133, inlinedAt: !15140)
!15156 = !DILocation(line: 443, column: 29, scope: !15157)
!15157 = distinct !DILexicalBlock(scope: !15158, file: !2536, line: 442, column: 26)
!15158 = distinct !DILexicalBlock(scope: !15124, file: !2536, line: 442, column: 2)
!15159 = !DILocation(line: 444, column: 17, scope: !15157)
!15160 = !DILocation(line: 445, column: 51, scope: !15161)
!15161 = distinct !DILexicalBlock(scope: !15157, file: !2536, line: 445, column: 7)
!15162 = !DILocation(line: 445, column: 7, scope: !15157)
!15163 = !DILocation(line: 0, scope: !15157)
!15164 = !DILocation(line: 451, column: 18, scope: !15157)
!15165 = !DILocation(line: 452, column: 3, scope: !15157)
!15166 = !DILocalVariable(name: "key", arg: 2, scope: !15167, file: !420, line: 190, type: !15125)
!15167 = distinct !DISubprogram(name: "k_spin_unlock", scope: !420, file: !420, line: 189, type: !15168, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15170)
!15168 = !DISubroutineType(types: !15169)
!15169 = !{null, !15136, !15125}
!15170 = !{!15171, !15166}
!15171 = !DILocalVariable(name: "l", arg: 1, scope: !15167, file: !420, line: 189, type: !15136)
!15172 = !DILocation(line: 0, scope: !15167, inlinedAt: !15173)
!15173 = distinct !DILocation(line: 442, column: 2, scope: !15158)
!15174 = !DILocation(line: 194, column: 2, scope: !15175, inlinedAt: !15173)
!15175 = distinct !DILexicalBlock(scope: !15176, file: !420, line: 194, column: 2)
!15176 = distinct !DILexicalBlock(scope: !15167, file: !420, line: 194, column: 2)
!15177 = !DILocation(line: 194, column: 2, scope: !15176, inlinedAt: !15173)
!15178 = !DILocation(line: 194, column: 2, scope: !15179, inlinedAt: !15173)
!15179 = distinct !DILexicalBlock(scope: !15175, file: !420, line: 194, column: 2)
!15180 = !DILocalVariable(name: "key", arg: 1, scope: !15181, file: !5999, line: 84, type: !32)
!15181 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5999, file: !5999, line: 84, type: !6010, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15182)
!15182 = !{!15180}
!15183 = !DILocation(line: 0, scope: !15181, inlinedAt: !15184)
!15184 = distinct !DILocation(line: 215, column: 2, scope: !15167, inlinedAt: !15173)
!15185 = !DILocation(line: 95, column: 2, scope: !15181, inlinedAt: !15184)
!15186 = !{i64 2327657}
!15187 = !DILocation(line: 454, column: 1, scope: !15117)
!15188 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !8786, file: !8786, line: 389, type: !7605, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15189)
!15189 = !{!15190}
!15190 = !DILocalVariable(name: "t", arg: 1, scope: !15188, file: !8786, line: 389, type: !152)
!15191 = !DILocation(line: 0, scope: !15188)
!15192 = !DILocalVariable(name: "t", arg: 1, scope: !15193, file: !8786, line: 102, type: !566)
!15193 = distinct !DISubprogram(name: "z_tmcvt", scope: !8786, file: !8786, line: 102, type: !8793, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15194)
!15194 = !{!15192, !15195, !15196, !15197, !15198, !15199, !15200, !15201, !15202, !15203, !15204}
!15195 = !DILocalVariable(name: "from_hz", arg: 2, scope: !15193, file: !8786, line: 102, type: !152)
!15196 = !DILocalVariable(name: "to_hz", arg: 3, scope: !15193, file: !8786, line: 103, type: !152)
!15197 = !DILocalVariable(name: "const_hz", arg: 4, scope: !15193, file: !8786, line: 103, type: !145)
!15198 = !DILocalVariable(name: "result32", arg: 5, scope: !15193, file: !8786, line: 104, type: !145)
!15199 = !DILocalVariable(name: "round_up", arg: 6, scope: !15193, file: !8786, line: 104, type: !145)
!15200 = !DILocalVariable(name: "round_off", arg: 7, scope: !15193, file: !8786, line: 105, type: !145)
!15201 = !DILocalVariable(name: "mul_ratio", scope: !15193, file: !8786, line: 107, type: !145)
!15202 = !DILocalVariable(name: "div_ratio", scope: !15193, file: !8786, line: 109, type: !145)
!15203 = !DILocalVariable(name: "off", scope: !15193, file: !8786, line: 116, type: !566)
!15204 = !DILocalVariable(name: "rdivisor", scope: !15205, file: !8786, line: 119, type: !152)
!15205 = distinct !DILexicalBlock(scope: !15206, file: !8786, line: 118, column: 18)
!15206 = distinct !DILexicalBlock(scope: !15193, file: !8786, line: 118, column: 6)
!15207 = !DILocation(line: 0, scope: !15193, inlinedAt: !15208)
!15208 = distinct !DILocation(line: 392, column: 9, scope: !15188)
!15209 = !DILocation(line: 143, column: 25, scope: !15210, inlinedAt: !15208)
!15210 = distinct !DILexicalBlock(scope: !15211, file: !8786, line: 142, column: 17)
!15211 = distinct !DILexicalBlock(scope: !15212, file: !8786, line: 142, column: 7)
!15212 = distinct !DILexicalBlock(scope: !15213, file: !8786, line: 141, column: 24)
!15213 = distinct !DILexicalBlock(scope: !15214, file: !8786, line: 141, column: 13)
!15214 = distinct !DILexicalBlock(scope: !15193, file: !8786, line: 134, column: 6)
!15215 = !DILocation(line: 392, column: 2, scope: !15188)
!15216 = distinct !DISubprogram(name: "z_time_slice", scope: !2536, file: !2536, line: 502, type: !9232, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15217)
!15217 = !{!15218, !15219}
!15218 = !DILocalVariable(name: "ticks", arg: 1, scope: !15216, file: !2536, line: 502, type: !107)
!15219 = !DILocalVariable(name: "key", scope: !15216, file: !2536, line: 511, type: !15125)
!15220 = !DILocation(line: 0, scope: !15216)
!15221 = !DILocation(line: 0, scope: !15133, inlinedAt: !15222)
!15222 = distinct !DILocation(line: 511, column: 25, scope: !15216)
!15223 = !DILocation(line: 55, column: 2, scope: !15142, inlinedAt: !15224)
!15224 = distinct !DILocation(line: 145, column: 10, scope: !15133, inlinedAt: !15222)
!15225 = !DILocation(line: 0, scope: !15142, inlinedAt: !15224)
!15226 = !DILocation(line: 148, column: 2, scope: !15150, inlinedAt: !15222)
!15227 = !DILocation(line: 148, column: 2, scope: !15151, inlinedAt: !15222)
!15228 = !DILocation(line: 148, column: 2, scope: !15154, inlinedAt: !15222)
!15229 = !DILocation(line: 160, column: 2, scope: !15133, inlinedAt: !15222)
!15230 = !DILocation(line: 514, column: 6, scope: !15231)
!15231 = distinct !DILexicalBlock(scope: !15216, file: !2536, line: 514, column: 6)
!15232 = !DILocation(line: 514, column: 25, scope: !15231)
!15233 = !DILocation(line: 514, column: 22, scope: !15231)
!15234 = !DILocation(line: 514, column: 6, scope: !15216)
!15235 = !DILocation(line: 515, column: 3, scope: !15236)
!15236 = distinct !DILexicalBlock(scope: !15231, file: !2536, line: 514, column: 35)
!15237 = !DILocation(line: 0, scope: !15167, inlinedAt: !15238)
!15238 = distinct !DILocation(line: 516, column: 3, scope: !15236)
!15239 = !DILocation(line: 194, column: 2, scope: !15175, inlinedAt: !15238)
!15240 = !DILocation(line: 194, column: 2, scope: !15176, inlinedAt: !15238)
!15241 = !DILocation(line: 194, column: 2, scope: !15179, inlinedAt: !15238)
!15242 = !DILocation(line: 0, scope: !15181, inlinedAt: !15243)
!15243 = distinct !DILocation(line: 215, column: 2, scope: !15167, inlinedAt: !15238)
!15244 = !DILocation(line: 95, column: 2, scope: !15181, inlinedAt: !15243)
!15245 = !DILocation(line: 517, column: 3, scope: !15236)
!15246 = !DILocation(line: 519, column: 18, scope: !15216)
!15247 = !DILocation(line: 522, column: 6, scope: !15248)
!15248 = distinct !DILexicalBlock(scope: !15216, file: !2536, line: 522, column: 6)
!15249 = !DILocation(line: 522, column: 27, scope: !15248)
!15250 = !DILocation(line: 522, column: 30, scope: !15248)
!15251 = !DILocation(line: 522, column: 6, scope: !15216)
!15252 = !DILocation(line: 523, column: 30, scope: !15253)
!15253 = distinct !DILexicalBlock(scope: !15254, file: !2536, line: 523, column: 7)
!15254 = distinct !DILexicalBlock(scope: !15248, file: !2536, line: 522, column: 51)
!15255 = !DILocation(line: 523, column: 13, scope: !15253)
!15256 = !DILocation(line: 523, column: 7, scope: !15254)
!15257 = !DILocation(line: 530, column: 10, scope: !15258)
!15258 = distinct !DILexicalBlock(scope: !15253, file: !2536, line: 523, column: 43)
!15259 = !DILocation(line: 531, column: 3, scope: !15258)
!15260 = !DILocation(line: 532, column: 30, scope: !15261)
!15261 = distinct !DILexicalBlock(scope: !15253, file: !2536, line: 531, column: 10)
!15262 = !DILocation(line: 535, column: 29, scope: !15263)
!15263 = distinct !DILexicalBlock(scope: !15248, file: !2536, line: 534, column: 9)
!15264 = !DILocation(line: 0, scope: !15167, inlinedAt: !15265)
!15265 = distinct !DILocation(line: 537, column: 2, scope: !15216)
!15266 = !DILocation(line: 194, column: 2, scope: !15175, inlinedAt: !15265)
!15267 = !DILocation(line: 194, column: 2, scope: !15176, inlinedAt: !15265)
!15268 = !DILocation(line: 194, column: 2, scope: !15179, inlinedAt: !15265)
!15269 = !DILocation(line: 0, scope: !15181, inlinedAt: !15270)
!15270 = distinct !DILocation(line: 215, column: 2, scope: !15167, inlinedAt: !15265)
!15271 = !DILocation(line: 95, column: 2, scope: !15181, inlinedAt: !15270)
!15272 = !DILocation(line: 538, column: 1, scope: !15216)
!15273 = distinct !DISubprogram(name: "sliceable", scope: !2536, file: !2536, line: 468, type: !15274, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15276)
!15274 = !DISubroutineType(types: !15275)
!15275 = !{!145, !2428}
!15276 = !{!15277, !15278}
!15277 = !DILocalVariable(name: "thread", arg: 1, scope: !15273, file: !2536, line: 468, type: !2428)
!15278 = !DILocalVariable(name: "ret", scope: !15273, file: !2536, line: 470, type: !145)
!15279 = !DILocation(line: 0, scope: !15273)
!15280 = !DILocation(line: 470, column: 13, scope: !15273)
!15281 = !DILocation(line: 471, column: 3, scope: !15273)
!15282 = !DILocation(line: 471, column: 7, scope: !15273)
!15283 = !DILocation(line: 472, column: 3, scope: !15273)
!15284 = !DILocation(line: 472, column: 37, scope: !15273)
!15285 = !DILocation(line: 472, column: 24, scope: !15273)
!15286 = !DILocation(line: 472, column: 43, scope: !15273)
!15287 = !DILocation(line: 472, column: 7, scope: !15273)
!15288 = !DILocation(line: 473, column: 3, scope: !15273)
!15289 = !DILocation(line: 473, column: 7, scope: !15273)
!15290 = !DILocation(line: 473, column: 6, scope: !15273)
!15291 = !DILocation(line: 479, column: 2, scope: !15273)
!15292 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2536, file: !2536, line: 482, type: !15293, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15295)
!15293 = !DISubroutineType(types: !15294)
!15294 = !{!15125, !15125}
!15295 = !{!15296, !15297}
!15296 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !15292, file: !2536, line: 482, type: !15125)
!15297 = !DILocalVariable(name: "curr", scope: !15292, file: !2536, line: 484, type: !2428)
!15298 = !DILocation(line: 0, scope: !15292)
!15299 = !DILocation(line: 484, column: 26, scope: !15292)
!15300 = !DILocation(line: 493, column: 7, scope: !15301)
!15301 = distinct !DILexicalBlock(scope: !15292, file: !2536, line: 493, column: 6)
!15302 = !DILocation(line: 493, column: 6, scope: !15292)
!15303 = !DILocation(line: 494, column: 3, scope: !15304)
!15304 = distinct !DILexicalBlock(scope: !15301, file: !2536, line: 493, column: 49)
!15305 = !DILocation(line: 495, column: 2, scope: !15304)
!15306 = !DILocation(line: 496, column: 2, scope: !15292)
!15307 = !DILocation(line: 499, column: 1, scope: !15292)
!15308 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !14293, file: !14293, line: 106, type: !15274, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15309)
!15309 = !{!15310, !15311}
!15310 = !DILocalVariable(name: "thread", arg: 1, scope: !15308, file: !14293, line: 106, type: !2428)
!15311 = !DILocalVariable(name: "state", scope: !15308, file: !14293, line: 108, type: !195)
!15312 = !DILocation(line: 0, scope: !15308)
!15313 = !DILocation(line: 108, column: 31, scope: !15308)
!15314 = !DILocation(line: 110, column: 16, scope: !15308)
!15315 = !DILocation(line: 111, column: 41, scope: !15308)
!15316 = !DILocation(line: 110, column: 2, scope: !15308)
!15317 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2536, file: !2536, line: 393, type: !15091, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15318)
!15318 = !{!15319}
!15319 = !DILocalVariable(name: "thread", arg: 1, scope: !15317, file: !2536, line: 393, type: !2428)
!15320 = !DILocation(line: 0, scope: !15317)
!15321 = !DILocation(line: 395, column: 6, scope: !15322)
!15322 = distinct !DILexicalBlock(scope: !15317, file: !2536, line: 395, column: 6)
!15323 = !DILocation(line: 395, column: 6, scope: !15317)
!15324 = !DILocalVariable(name: "thread", arg: 1, scope: !15325, file: !2536, line: 264, type: !2428)
!15325 = distinct !DISubprogram(name: "dequeue_thread", scope: !2536, file: !2536, line: 264, type: !15091, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15326)
!15326 = !{!15324}
!15327 = !DILocation(line: 0, scope: !15325, inlinedAt: !15328)
!15328 = distinct !DILocation(line: 396, column: 3, scope: !15329)
!15329 = distinct !DILexicalBlock(scope: !15322, file: !2536, line: 395, column: 34)
!15330 = !DILocation(line: 266, column: 15, scope: !15325, inlinedAt: !15328)
!15331 = !DILocation(line: 266, column: 28, scope: !15325, inlinedAt: !15328)
!15332 = !DILocalVariable(name: "thread", arg: 1, scope: !15333, file: !2536, line: 232, type: !2428)
!15333 = distinct !DISubprogram(name: "runq_remove", scope: !2536, file: !2536, line: 232, type: !15091, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15334)
!15334 = !{!15332}
!15335 = !DILocation(line: 0, scope: !15333, inlinedAt: !15336)
!15336 = distinct !DILocation(line: 268, column: 3, scope: !15337, inlinedAt: !15328)
!15337 = distinct !DILexicalBlock(scope: !15338, file: !2536, line: 267, column: 35)
!15338 = distinct !DILexicalBlock(scope: !15325, file: !2536, line: 267, column: 6)
!15339 = !DILocation(line: 234, column: 2, scope: !15333, inlinedAt: !15336)
!15340 = !DILocation(line: 397, column: 2, scope: !15329)
!15341 = !DILocalVariable(name: "thread", arg: 1, scope: !15342, file: !2536, line: 250, type: !2428)
!15342 = distinct !DISubprogram(name: "queue_thread", scope: !2536, file: !2536, line: 250, type: !15091, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15343)
!15343 = !{!15341}
!15344 = !DILocation(line: 0, scope: !15342, inlinedAt: !15345)
!15345 = distinct !DILocation(line: 398, column: 2, scope: !15317)
!15346 = !DILocation(line: 252, column: 15, scope: !15342, inlinedAt: !15345)
!15347 = !DILocation(line: 252, column: 28, scope: !15342, inlinedAt: !15345)
!15348 = !DILocalVariable(name: "thread", arg: 1, scope: !15349, file: !2536, line: 227, type: !2428)
!15349 = distinct !DISubprogram(name: "runq_add", scope: !2536, file: !2536, line: 227, type: !15091, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15350)
!15350 = !{!15348}
!15351 = !DILocation(line: 0, scope: !15349, inlinedAt: !15352)
!15352 = distinct !DILocation(line: 254, column: 3, scope: !15353, inlinedAt: !15345)
!15353 = distinct !DILexicalBlock(scope: !15354, file: !2536, line: 253, column: 35)
!15354 = distinct !DILexicalBlock(scope: !15342, file: !2536, line: 253, column: 6)
!15355 = !DILocalVariable(name: "pq", arg: 1, scope: !15356, file: !2536, line: 181, type: !15359)
!15356 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2536, file: !2536, line: 181, type: !15357, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15360)
!15357 = !DISubroutineType(types: !15358)
!15358 = !{null, !15359, !2428}
!15359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2464, size: 32)
!15360 = !{!15355, !15361, !15362}
!15361 = !DILocalVariable(name: "thread", arg: 2, scope: !15356, file: !2536, line: 182, type: !2428)
!15362 = !DILocalVariable(name: "t", scope: !15356, file: !2536, line: 184, type: !2428)
!15363 = !DILocation(line: 0, scope: !15356, inlinedAt: !15364)
!15364 = distinct !DILocation(line: 229, column: 2, scope: !15349, inlinedAt: !15352)
!15365 = !DILocation(line: 186, column: 2, scope: !15366, inlinedAt: !15364)
!15366 = distinct !DILexicalBlock(scope: !15367, file: !2536, line: 186, column: 2)
!15367 = distinct !DILexicalBlock(scope: !15356, file: !2536, line: 186, column: 2)
!15368 = !DILocation(line: 186, column: 2, scope: !15367, inlinedAt: !15364)
!15369 = !DILocation(line: 186, column: 2, scope: !15370, inlinedAt: !15364)
!15370 = distinct !DILexicalBlock(scope: !15366, file: !2536, line: 186, column: 2)
!15371 = !DILocation(line: 188, column: 2, scope: !15372, inlinedAt: !15364)
!15372 = distinct !DILexicalBlock(scope: !15356, file: !2536, line: 188, column: 2)
!15373 = !DILocation(line: 188, column: 2, scope: !15374, inlinedAt: !15364)
!15374 = distinct !DILexicalBlock(scope: !15372, file: !2536, line: 188, column: 2)
!15375 = !DILocation(line: 0, scope: !15372, inlinedAt: !15364)
!15376 = !DILocation(line: 189, column: 7, scope: !15377, inlinedAt: !15364)
!15377 = distinct !DILexicalBlock(scope: !15378, file: !2536, line: 189, column: 7)
!15378 = distinct !DILexicalBlock(scope: !15374, file: !2536, line: 188, column: 56)
!15379 = !DILocation(line: 189, column: 35, scope: !15377, inlinedAt: !15364)
!15380 = !DILocation(line: 189, column: 7, scope: !15378, inlinedAt: !15364)
!15381 = !DILocation(line: 191, column: 21, scope: !15382, inlinedAt: !15364)
!15382 = distinct !DILexicalBlock(scope: !15377, file: !2536, line: 189, column: 40)
!15383 = !DILocation(line: 190, column: 4, scope: !15382, inlinedAt: !15364)
!15384 = !DILocation(line: 192, column: 4, scope: !15382, inlinedAt: !15364)
!15385 = distinct !{!15385, !15371, !15386}
!15386 = !DILocation(line: 194, column: 2, scope: !15372, inlinedAt: !15364)
!15387 = !DILocation(line: 196, column: 37, scope: !15356, inlinedAt: !15364)
!15388 = !DILocation(line: 196, column: 2, scope: !15356, inlinedAt: !15364)
!15389 = !DILocation(line: 197, column: 1, scope: !15356, inlinedAt: !15364)
!15390 = !DILocation(line: 399, column: 25, scope: !15317)
!15391 = !DILocation(line: 399, column: 22, scope: !15317)
!15392 = !DILocation(line: 399, column: 2, scope: !15317)
!15393 = !DILocation(line: 400, column: 1, scope: !15317)
!15394 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !14293, file: !14293, line: 136, type: !15274, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15395)
!15395 = !{!15396}
!15396 = !DILocalVariable(name: "thread", arg: 1, scope: !15394, file: !14293, line: 136, type: !2428)
!15397 = !DILocation(line: 0, scope: !15394)
!15398 = !DILocation(line: 138, column: 9, scope: !15394)
!15399 = !DILocation(line: 138, column: 2, scope: !15394)
!15400 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2536, file: !2536, line: 1137, type: !15357, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15401)
!15401 = !{!15402, !15403}
!15402 = !DILocalVariable(name: "pq", arg: 1, scope: !15400, file: !2536, line: 1137, type: !15359)
!15403 = !DILocalVariable(name: "thread", arg: 2, scope: !15400, file: !2536, line: 1137, type: !2428)
!15404 = !DILocation(line: 0, scope: !15400)
!15405 = !DILocation(line: 1139, column: 2, scope: !15406)
!15406 = distinct !DILexicalBlock(scope: !15407, file: !2536, line: 1139, column: 2)
!15407 = distinct !DILexicalBlock(scope: !15400, file: !2536, line: 1139, column: 2)
!15408 = !DILocation(line: 1139, column: 2, scope: !15407)
!15409 = !DILocation(line: 1139, column: 2, scope: !15410)
!15410 = distinct !DILexicalBlock(scope: !15406, file: !2536, line: 1139, column: 2)
!15411 = !DILocation(line: 1141, column: 33, scope: !15400)
!15412 = !DILocation(line: 1141, column: 2, scope: !15400)
!15413 = !DILocation(line: 1142, column: 1, scope: !15400)
!15414 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !14293, file: !14293, line: 83, type: !15274, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15415)
!15415 = !{!15416}
!15416 = !DILocalVariable(name: "thread", arg: 1, scope: !15414, file: !14293, line: 83, type: !2428)
!15417 = !DILocation(line: 0, scope: !15414)
!15418 = !DILocation(line: 89, column: 16, scope: !15414)
!15419 = !DILocation(line: 89, column: 2, scope: !15414)
!15420 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !319, file: !319, line: 294, type: !15421, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15423)
!15421 = !DISubroutineType(types: !15422)
!15422 = !{!2532, !15359}
!15423 = !{!15424}
!15424 = !DILocalVariable(name: "list", arg: 1, scope: !15420, file: !319, line: 294, type: !15359)
!15425 = !DILocation(line: 0, scope: !15420)
!15426 = !DILocation(line: 296, column: 9, scope: !15420)
!15427 = !DILocation(line: 296, column: 49, scope: !15420)
!15428 = !DILocation(line: 296, column: 2, scope: !15420)
!15429 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !319, file: !319, line: 443, type: !15430, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15432)
!15430 = !DISubroutineType(types: !15431)
!15431 = !{null, !2532, !2532}
!15432 = !{!15433, !15434, !15435}
!15433 = !DILocalVariable(name: "successor", arg: 1, scope: !15429, file: !319, line: 443, type: !2532)
!15434 = !DILocalVariable(name: "node", arg: 2, scope: !15429, file: !319, line: 443, type: !2532)
!15435 = !DILocalVariable(name: "prev", scope: !15429, file: !319, line: 445, type: !15436)
!15436 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2532)
!15437 = !DILocation(line: 0, scope: !15429)
!15438 = !DILocation(line: 445, column: 39, scope: !15429)
!15439 = !DILocation(line: 447, column: 8, scope: !15429)
!15440 = !DILocation(line: 447, column: 13, scope: !15429)
!15441 = !DILocation(line: 448, column: 8, scope: !15429)
!15442 = !DILocation(line: 448, column: 13, scope: !15429)
!15443 = !DILocation(line: 449, column: 8, scope: !15429)
!15444 = !DILocation(line: 449, column: 13, scope: !15429)
!15445 = !DILocation(line: 450, column: 18, scope: !15429)
!15446 = !DILocation(line: 451, column: 1, scope: !15429)
!15447 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !319, file: !319, line: 341, type: !15448, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15450)
!15448 = !DISubroutineType(types: !15449)
!15449 = !{!2532, !15359, !2532}
!15450 = !{!15451, !15452}
!15451 = !DILocalVariable(name: "list", arg: 1, scope: !15447, file: !319, line: 341, type: !15359)
!15452 = !DILocalVariable(name: "node", arg: 2, scope: !15447, file: !319, line: 342, type: !2532)
!15453 = !DILocation(line: 0, scope: !15447)
!15454 = !DILocation(line: 344, column: 15, scope: !15447)
!15455 = !DILocation(line: 344, column: 9, scope: !15447)
!15456 = !DILocation(line: 344, column: 26, scope: !15447)
!15457 = !DILocation(line: 344, column: 2, scope: !15447)
!15458 = distinct !DISubprogram(name: "sys_dlist_append", scope: !319, file: !319, line: 404, type: !15459, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15461)
!15459 = !DISubroutineType(types: !15460)
!15460 = !{null, !15359, !2532}
!15461 = !{!15462, !15463, !15464}
!15462 = !DILocalVariable(name: "list", arg: 1, scope: !15458, file: !319, line: 404, type: !15359)
!15463 = !DILocalVariable(name: "node", arg: 2, scope: !15458, file: !319, line: 404, type: !2532)
!15464 = !DILocalVariable(name: "tail", scope: !15458, file: !319, line: 406, type: !15436)
!15465 = !DILocation(line: 0, scope: !15458)
!15466 = !DILocation(line: 406, column: 34, scope: !15458)
!15467 = !DILocation(line: 408, column: 8, scope: !15458)
!15468 = !DILocation(line: 408, column: 13, scope: !15458)
!15469 = !DILocation(line: 409, column: 8, scope: !15458)
!15470 = !DILocation(line: 409, column: 13, scope: !15458)
!15471 = !DILocation(line: 411, column: 8, scope: !15458)
!15472 = !DILocation(line: 411, column: 13, scope: !15458)
!15473 = !DILocation(line: 412, column: 13, scope: !15458)
!15474 = !DILocation(line: 413, column: 1, scope: !15458)
!15475 = distinct !DISubprogram(name: "update_cache", scope: !2536, file: !2536, line: 559, type: !9232, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15476)
!15476 = !{!15477, !15478}
!15477 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !15475, file: !2536, line: 559, type: !107)
!15478 = !DILocalVariable(name: "thread", scope: !15475, file: !2536, line: 562, type: !2428)
!15479 = !DILocation(line: 0, scope: !15475)
!15480 = !DILocation(line: 239, column: 9, scope: !15481, inlinedAt: !15484)
!15481 = distinct !DISubprogram(name: "runq_best", scope: !2536, file: !2536, line: 237, type: !15482, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !2236)
!15482 = !DISubroutineType(types: !15483)
!15483 = !{!2428}
!15484 = distinct !DILocation(line: 314, column: 28, scope: !15485, inlinedAt: !15488)
!15485 = distinct !DISubprogram(name: "next_up", scope: !2536, file: !2536, line: 312, type: !15482, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15486)
!15486 = !{!15487}
!15487 = !DILocalVariable(name: "thread", scope: !15485, file: !2536, line: 314, type: !2428)
!15488 = distinct !DILocation(line: 562, column: 28, scope: !15475)
!15489 = !DILocation(line: 0, scope: !15485, inlinedAt: !15488)
!15490 = !DILocation(line: 340, column: 17, scope: !15485, inlinedAt: !15488)
!15491 = !DILocation(line: 340, column: 9, scope: !15485, inlinedAt: !15488)
!15492 = !DILocalVariable(name: "thread", arg: 1, scope: !15493, file: !2536, line: 127, type: !2428)
!15493 = distinct !DISubprogram(name: "should_preempt", scope: !2536, file: !2536, line: 127, type: !15494, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15496)
!15494 = !DISubroutineType(types: !15495)
!15495 = !{!145, !2428, !107}
!15496 = !{!15492, !15497}
!15497 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !15493, file: !2536, line: 128, type: !107)
!15498 = !DILocation(line: 0, scope: !15493, inlinedAt: !15499)
!15499 = distinct !DILocation(line: 564, column: 6, scope: !15500)
!15500 = distinct !DILexicalBlock(scope: !15475, file: !2536, line: 564, column: 6)
!15501 = !DILocation(line: 133, column: 17, scope: !15502, inlinedAt: !15499)
!15502 = distinct !DILexicalBlock(scope: !15493, file: !2536, line: 133, column: 6)
!15503 = !DILocation(line: 0, scope: !15500)
!15504 = !DILocation(line: 133, column: 6, scope: !15493, inlinedAt: !15499)
!15505 = !DILocation(line: 137, column: 2, scope: !15506, inlinedAt: !15499)
!15506 = distinct !DILexicalBlock(scope: !15507, file: !2536, line: 137, column: 2)
!15507 = distinct !DILexicalBlock(scope: !15493, file: !2536, line: 137, column: 2)
!15508 = !DILocation(line: 137, column: 2, scope: !15507, inlinedAt: !15499)
!15509 = !DILocation(line: 137, column: 2, scope: !15510, inlinedAt: !15499)
!15510 = distinct !DILexicalBlock(scope: !15506, file: !2536, line: 137, column: 2)
!15511 = !DILocation(line: 140, column: 6, scope: !15512, inlinedAt: !15499)
!15512 = distinct !DILexicalBlock(scope: !15493, file: !2536, line: 140, column: 6)
!15513 = !DILocation(line: 140, column: 6, scope: !15493, inlinedAt: !15499)
!15514 = !DILocation(line: 150, column: 9, scope: !15515, inlinedAt: !15499)
!15515 = distinct !DILexicalBlock(scope: !15493, file: !2536, line: 149, column: 6)
!15516 = !DILocation(line: 149, column: 6, scope: !15493, inlinedAt: !15499)
!15517 = !DILocation(line: 157, column: 6, scope: !15518, inlinedAt: !15499)
!15518 = distinct !DILexicalBlock(scope: !15493, file: !2536, line: 157, column: 6)
!15519 = !DILocation(line: 564, column: 6, scope: !15475)
!15520 = !DILocation(line: 566, column: 14, scope: !15521)
!15521 = distinct !DILexicalBlock(scope: !15522, file: !2536, line: 566, column: 7)
!15522 = distinct !DILexicalBlock(scope: !15500, file: !2536, line: 564, column: 42)
!15523 = !DILocation(line: 566, column: 7, scope: !15522)
!15524 = !DILocation(line: 567, column: 4, scope: !15525)
!15525 = distinct !DILexicalBlock(scope: !15521, file: !2536, line: 566, column: 27)
!15526 = !DILocation(line: 568, column: 3, scope: !15525)
!15527 = !DILocation(line: 585, column: 1, scope: !15475)
!15528 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2536, file: !2536, line: 1144, type: !15529, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15531)
!15529 = !DISubroutineType(types: !15530)
!15530 = !{!2428, !15359}
!15531 = !{!15532, !15533, !15534}
!15532 = !DILocalVariable(name: "pq", arg: 1, scope: !15528, file: !2536, line: 1144, type: !15359)
!15533 = !DILocalVariable(name: "thread", scope: !15528, file: !2536, line: 1146, type: !2428)
!15534 = !DILocalVariable(name: "n", scope: !15528, file: !2536, line: 1147, type: !2532)
!15535 = !DILocation(line: 0, scope: !15528)
!15536 = !DILocation(line: 1147, column: 19, scope: !15528)
!15537 = !DILocation(line: 1152, column: 2, scope: !15528)
!15538 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !14293, file: !14293, line: 115, type: !15274, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15539)
!15539 = !{!15540}
!15540 = !DILocalVariable(name: "thread", arg: 1, scope: !15538, file: !14293, line: 115, type: !2428)
!15541 = !DILocation(line: 0, scope: !15538)
!15542 = !DILocation(line: 117, column: 46, scope: !15538)
!15543 = !DILocation(line: 117, column: 10, scope: !15538)
!15544 = !DILocation(line: 117, column: 9, scope: !15538)
!15545 = !DILocation(line: 117, column: 2, scope: !15538)
!15546 = distinct !DISubprogram(name: "is_preempt", scope: !2536, file: !2536, line: 62, type: !15109, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15547)
!15547 = !{!15548}
!15548 = !DILocalVariable(name: "thread", arg: 1, scope: !15546, file: !2536, line: 62, type: !2428)
!15549 = !DILocation(line: 0, scope: !15546)
!15550 = !DILocation(line: 65, column: 22, scope: !15546)
!15551 = !DILocation(line: 65, column: 30, scope: !15546)
!15552 = !DILocation(line: 65, column: 2, scope: !15546)
!15553 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14722, file: !14722, line: 35, type: !15554, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15558)
!15554 = !DISubroutineType(types: !15555)
!15555 = !{!145, !15556}
!15556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15557, size: 32)
!15557 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2479)
!15558 = !{!15559}
!15559 = !DILocalVariable(name: "to", arg: 1, scope: !15553, file: !14722, line: 35, type: !15556)
!15560 = !DILocation(line: 0, scope: !15553)
!15561 = !DILocation(line: 37, column: 35, scope: !15553)
!15562 = !DILocation(line: 37, column: 10, scope: !15553)
!15563 = !DILocation(line: 37, column: 9, scope: !15553)
!15564 = !DILocation(line: 37, column: 2, scope: !15553)
!15565 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !319, file: !319, line: 225, type: !15566, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15570)
!15566 = !DISubroutineType(types: !15567)
!15567 = !{!145, !15568}
!15568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15569, size: 32)
!15569 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2438)
!15570 = !{!15571}
!15571 = !DILocalVariable(name: "node", arg: 1, scope: !15565, file: !319, line: 225, type: !15568)
!15572 = !DILocation(line: 0, scope: !15565)
!15573 = !DILocation(line: 227, column: 15, scope: !15565)
!15574 = !DILocation(line: 227, column: 20, scope: !15565)
!15575 = !DILocation(line: 227, column: 2, scope: !15565)
!15576 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !319, file: !319, line: 325, type: !15448, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15577)
!15577 = !{!15578, !15579}
!15578 = !DILocalVariable(name: "list", arg: 1, scope: !15576, file: !319, line: 325, type: !15359)
!15579 = !DILocalVariable(name: "node", arg: 2, scope: !15576, file: !319, line: 326, type: !2532)
!15580 = !DILocation(line: 0, scope: !15576)
!15581 = !DILocation(line: 328, column: 24, scope: !15576)
!15582 = !DILocation(line: 328, column: 15, scope: !15576)
!15583 = !DILocation(line: 328, column: 9, scope: !15576)
!15584 = !DILocation(line: 328, column: 45, scope: !15576)
!15585 = !DILocation(line: 328, column: 2, scope: !15576)
!15586 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !319, file: !319, line: 266, type: !15587, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15589)
!15587 = !DISubroutineType(types: !15588)
!15588 = !{!145, !15359}
!15589 = !{!15590}
!15590 = !DILocalVariable(name: "list", arg: 1, scope: !15586, file: !319, line: 266, type: !15359)
!15591 = !DILocation(line: 0, scope: !15586)
!15592 = !DILocation(line: 268, column: 15, scope: !15586)
!15593 = !DILocation(line: 268, column: 20, scope: !15586)
!15594 = !DILocation(line: 268, column: 2, scope: !15586)
!15595 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !319, file: !319, line: 496, type: !15596, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15598)
!15596 = !DISubroutineType(types: !15597)
!15597 = !{null, !2532}
!15598 = !{!15599, !15600, !15601}
!15599 = !DILocalVariable(name: "node", arg: 1, scope: !15595, file: !319, line: 496, type: !2532)
!15600 = !DILocalVariable(name: "prev", scope: !15595, file: !319, line: 498, type: !15436)
!15601 = !DILocalVariable(name: "next", scope: !15595, file: !319, line: 499, type: !15436)
!15602 = !DILocation(line: 0, scope: !15595)
!15603 = !DILocation(line: 498, column: 34, scope: !15595)
!15604 = !DILocation(line: 499, column: 34, scope: !15595)
!15605 = !DILocation(line: 501, column: 8, scope: !15595)
!15606 = !DILocation(line: 501, column: 13, scope: !15595)
!15607 = !DILocation(line: 502, column: 8, scope: !15595)
!15608 = !DILocation(line: 502, column: 13, scope: !15595)
!15609 = !DILocation(line: 503, column: 2, scope: !15595)
!15610 = !DILocation(line: 504, column: 1, scope: !15595)
!15611 = distinct !DISubprogram(name: "sys_dnode_init", scope: !319, file: !319, line: 211, type: !15596, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15612)
!15612 = !{!15613}
!15613 = !DILocalVariable(name: "node", arg: 1, scope: !15611, file: !319, line: 211, type: !2532)
!15614 = !DILocation(line: 0, scope: !15611)
!15615 = !DILocation(line: 213, column: 8, scope: !15611)
!15616 = !DILocation(line: 213, column: 13, scope: !15611)
!15617 = !DILocation(line: 214, column: 8, scope: !15611)
!15618 = !DILocation(line: 214, column: 13, scope: !15611)
!15619 = !DILocation(line: 215, column: 1, scope: !15611)
!15620 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !14293, file: !14293, line: 131, type: !15621, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15623)
!15621 = !DISubroutineType(types: !15622)
!15622 = !{!145, !2428, !152}
!15623 = !{!15624, !15625}
!15624 = !DILocalVariable(name: "thread", arg: 1, scope: !15620, file: !14293, line: 131, type: !2428)
!15625 = !DILocalVariable(name: "state", arg: 2, scope: !15620, file: !14293, line: 131, type: !152)
!15626 = !DILocation(line: 0, scope: !15620)
!15627 = !DILocation(line: 133, column: 23, scope: !15620)
!15628 = !DILocation(line: 133, column: 10, scope: !15620)
!15629 = !DILocation(line: 133, column: 36, scope: !15620)
!15630 = !DILocation(line: 133, column: 45, scope: !15620)
!15631 = !DILocation(line: 133, column: 2, scope: !15620)
!15632 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !14293, file: !14293, line: 211, type: !15633, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15635)
!15633 = !DISubroutineType(types: !15634)
!15634 = !{!145, !107, !107}
!15635 = !{!15636, !15637}
!15636 = !DILocalVariable(name: "prio", arg: 1, scope: !15632, file: !14293, line: 211, type: !107)
!15637 = !DILocalVariable(name: "test_prio", arg: 2, scope: !15632, file: !14293, line: 211, type: !107)
!15638 = !DILocation(line: 0, scope: !15632)
!15639 = !DILocation(line: 213, column: 9, scope: !15632)
!15640 = !DILocation(line: 213, column: 2, scope: !15632)
!15641 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !14293, file: !14293, line: 206, type: !15633, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15642)
!15642 = !{!15643, !15644}
!15643 = !DILocalVariable(name: "prio1", arg: 1, scope: !15641, file: !14293, line: 206, type: !107)
!15644 = !DILocalVariable(name: "prio2", arg: 2, scope: !15641, file: !14293, line: 206, type: !107)
!15645 = !DILocation(line: 0, scope: !15641)
!15646 = !DILocation(line: 208, column: 15, scope: !15641)
!15647 = !DILocation(line: 208, column: 2, scope: !15641)
!15648 = distinct !DISubprogram(name: "z_ready_thread", scope: !2536, file: !2536, line: 635, type: !15091, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15649)
!15649 = !{!15650, !15651, !15653}
!15650 = !DILocalVariable(name: "thread", arg: 1, scope: !15648, file: !2536, line: 635, type: !2428)
!15651 = !DILocalVariable(name: "__i", scope: !15652, file: !2536, line: 637, type: !15125)
!15652 = distinct !DILexicalBlock(scope: !15648, file: !2536, line: 637, column: 2)
!15653 = !DILocalVariable(name: "__key", scope: !15652, file: !2536, line: 637, type: !15125)
!15654 = !DILocation(line: 0, scope: !15648)
!15655 = !DILocation(line: 0, scope: !15652)
!15656 = !DILocation(line: 0, scope: !15133, inlinedAt: !15657)
!15657 = distinct !DILocation(line: 637, column: 2, scope: !15652)
!15658 = !DILocation(line: 55, column: 2, scope: !15142, inlinedAt: !15659)
!15659 = distinct !DILocation(line: 145, column: 10, scope: !15133, inlinedAt: !15657)
!15660 = !DILocation(line: 0, scope: !15142, inlinedAt: !15659)
!15661 = !DILocation(line: 148, column: 2, scope: !15150, inlinedAt: !15657)
!15662 = !DILocation(line: 148, column: 2, scope: !15151, inlinedAt: !15657)
!15663 = !DILocation(line: 148, column: 2, scope: !15154, inlinedAt: !15657)
!15664 = !DILocation(line: 160, column: 2, scope: !15133, inlinedAt: !15657)
!15665 = !DILocation(line: 639, column: 4, scope: !15666)
!15666 = distinct !DILexicalBlock(scope: !15667, file: !2536, line: 638, column: 41)
!15667 = distinct !DILexicalBlock(scope: !15668, file: !2536, line: 638, column: 7)
!15668 = distinct !DILexicalBlock(scope: !15669, file: !2536, line: 637, column: 26)
!15669 = distinct !DILexicalBlock(scope: !15652, file: !2536, line: 637, column: 2)
!15670 = !DILocation(line: 0, scope: !15167, inlinedAt: !15671)
!15671 = distinct !DILocation(line: 637, column: 2, scope: !15669)
!15672 = !DILocation(line: 194, column: 2, scope: !15175, inlinedAt: !15671)
!15673 = !DILocation(line: 194, column: 2, scope: !15176, inlinedAt: !15671)
!15674 = !DILocation(line: 194, column: 2, scope: !15179, inlinedAt: !15671)
!15675 = !DILocation(line: 0, scope: !15181, inlinedAt: !15676)
!15676 = distinct !DILocation(line: 215, column: 2, scope: !15167, inlinedAt: !15671)
!15677 = !DILocation(line: 95, column: 2, scope: !15181, inlinedAt: !15676)
!15678 = !DILocation(line: 642, column: 1, scope: !15648)
!15679 = distinct !DISubprogram(name: "ready_thread", scope: !2536, file: !2536, line: 617, type: !15091, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15680)
!15680 = !{!15681}
!15681 = !DILocalVariable(name: "thread", arg: 1, scope: !15679, file: !2536, line: 617, type: !2428)
!15682 = !DILocation(line: 0, scope: !15679)
!15683 = !DILocation(line: 626, column: 7, scope: !15684)
!15684 = distinct !DILexicalBlock(scope: !15679, file: !2536, line: 626, column: 6)
!15685 = !DILocation(line: 626, column: 34, scope: !15684)
!15686 = !DILocation(line: 626, column: 37, scope: !15684)
!15687 = !DILocation(line: 626, column: 6, scope: !15679)
!15688 = !DILocation(line: 0, scope: !15342, inlinedAt: !15689)
!15689 = distinct !DILocation(line: 629, column: 3, scope: !15690)
!15690 = distinct !DILexicalBlock(scope: !15684, file: !2536, line: 626, column: 64)
!15691 = !DILocation(line: 252, column: 15, scope: !15342, inlinedAt: !15689)
!15692 = !DILocation(line: 252, column: 28, scope: !15342, inlinedAt: !15689)
!15693 = !DILocation(line: 0, scope: !15349, inlinedAt: !15694)
!15694 = distinct !DILocation(line: 254, column: 3, scope: !15353, inlinedAt: !15689)
!15695 = !DILocation(line: 0, scope: !15356, inlinedAt: !15696)
!15696 = distinct !DILocation(line: 229, column: 2, scope: !15349, inlinedAt: !15694)
!15697 = !DILocation(line: 186, column: 2, scope: !15366, inlinedAt: !15696)
!15698 = !DILocation(line: 186, column: 2, scope: !15367, inlinedAt: !15696)
!15699 = !DILocation(line: 186, column: 2, scope: !15370, inlinedAt: !15696)
!15700 = !DILocation(line: 188, column: 2, scope: !15372, inlinedAt: !15696)
!15701 = !DILocation(line: 188, column: 2, scope: !15374, inlinedAt: !15696)
!15702 = !DILocation(line: 0, scope: !15372, inlinedAt: !15696)
!15703 = !DILocation(line: 189, column: 7, scope: !15377, inlinedAt: !15696)
!15704 = !DILocation(line: 189, column: 35, scope: !15377, inlinedAt: !15696)
!15705 = !DILocation(line: 189, column: 7, scope: !15378, inlinedAt: !15696)
!15706 = !DILocation(line: 191, column: 21, scope: !15382, inlinedAt: !15696)
!15707 = !DILocation(line: 190, column: 4, scope: !15382, inlinedAt: !15696)
!15708 = !DILocation(line: 192, column: 4, scope: !15382, inlinedAt: !15696)
!15709 = distinct !{!15709, !15700, !15710}
!15710 = !DILocation(line: 194, column: 2, scope: !15372, inlinedAt: !15696)
!15711 = !DILocation(line: 196, column: 37, scope: !15356, inlinedAt: !15696)
!15712 = !DILocation(line: 196, column: 2, scope: !15356, inlinedAt: !15696)
!15713 = !DILocation(line: 197, column: 1, scope: !15356, inlinedAt: !15696)
!15714 = !DILocation(line: 630, column: 3, scope: !15690)
!15715 = !DILocation(line: 632, column: 2, scope: !15690)
!15716 = !DILocation(line: 633, column: 1, scope: !15679)
!15717 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !14293, file: !14293, line: 120, type: !15274, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15718)
!15718 = !{!15719}
!15719 = !DILocalVariable(name: "thread", arg: 1, scope: !15717, file: !14293, line: 120, type: !2428)
!15720 = !DILocation(line: 0, scope: !15717)
!15721 = !DILocation(line: 122, column: 12, scope: !15717)
!15722 = !DILocation(line: 122, column: 62, scope: !15717)
!15723 = !DILocation(line: 123, column: 4, scope: !15717)
!15724 = !DILocation(line: 122, column: 2, scope: !15717)
!15725 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2536, file: !2536, line: 644, type: !15091, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15726)
!15726 = !{!15727, !15728, !15730}
!15727 = !DILocalVariable(name: "thread", arg: 1, scope: !15725, file: !2536, line: 644, type: !2428)
!15728 = !DILocalVariable(name: "__i", scope: !15729, file: !2536, line: 646, type: !15125)
!15729 = distinct !DILexicalBlock(scope: !15725, file: !2536, line: 646, column: 2)
!15730 = !DILocalVariable(name: "__key", scope: !15729, file: !2536, line: 646, type: !15125)
!15731 = !DILocation(line: 0, scope: !15725)
!15732 = !DILocation(line: 0, scope: !15729)
!15733 = !DILocation(line: 0, scope: !15133, inlinedAt: !15734)
!15734 = distinct !DILocation(line: 646, column: 2, scope: !15729)
!15735 = !DILocation(line: 55, column: 2, scope: !15142, inlinedAt: !15736)
!15736 = distinct !DILocation(line: 145, column: 10, scope: !15133, inlinedAt: !15734)
!15737 = !DILocation(line: 0, scope: !15142, inlinedAt: !15736)
!15738 = !DILocation(line: 148, column: 2, scope: !15150, inlinedAt: !15734)
!15739 = !DILocation(line: 148, column: 2, scope: !15151, inlinedAt: !15734)
!15740 = !DILocation(line: 148, column: 2, scope: !15154, inlinedAt: !15734)
!15741 = !DILocation(line: 160, column: 2, scope: !15133, inlinedAt: !15734)
!15742 = !DILocation(line: 647, column: 3, scope: !15743)
!15743 = distinct !DILexicalBlock(scope: !15744, file: !2536, line: 646, column: 26)
!15744 = distinct !DILexicalBlock(scope: !15729, file: !2536, line: 646, column: 2)
!15745 = !DILocation(line: 0, scope: !15167, inlinedAt: !15746)
!15746 = distinct !DILocation(line: 646, column: 2, scope: !15744)
!15747 = !DILocation(line: 194, column: 2, scope: !15175, inlinedAt: !15746)
!15748 = !DILocation(line: 194, column: 2, scope: !15176, inlinedAt: !15746)
!15749 = !DILocation(line: 194, column: 2, scope: !15179, inlinedAt: !15746)
!15750 = !DILocation(line: 0, scope: !15181, inlinedAt: !15751)
!15751 = distinct !DILocation(line: 215, column: 2, scope: !15167, inlinedAt: !15746)
!15752 = !DILocation(line: 95, column: 2, scope: !15181, inlinedAt: !15751)
!15753 = !DILocation(line: 649, column: 1, scope: !15725)
!15754 = distinct !DISubprogram(name: "z_sched_start", scope: !2536, file: !2536, line: 651, type: !15091, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15755)
!15755 = !{!15756, !15757}
!15756 = !DILocalVariable(name: "thread", arg: 1, scope: !15754, file: !2536, line: 651, type: !2428)
!15757 = !DILocalVariable(name: "key", scope: !15754, file: !2536, line: 653, type: !15125)
!15758 = !DILocation(line: 0, scope: !15754)
!15759 = !DILocation(line: 0, scope: !15133, inlinedAt: !15760)
!15760 = distinct !DILocation(line: 653, column: 25, scope: !15754)
!15761 = !DILocation(line: 55, column: 2, scope: !15142, inlinedAt: !15762)
!15762 = distinct !DILocation(line: 145, column: 10, scope: !15133, inlinedAt: !15760)
!15763 = !DILocation(line: 0, scope: !15142, inlinedAt: !15762)
!15764 = !DILocation(line: 148, column: 2, scope: !15150, inlinedAt: !15760)
!15765 = !DILocation(line: 148, column: 2, scope: !15151, inlinedAt: !15760)
!15766 = !DILocation(line: 148, column: 2, scope: !15154, inlinedAt: !15760)
!15767 = !DILocation(line: 160, column: 2, scope: !15133, inlinedAt: !15760)
!15768 = !DILocation(line: 655, column: 6, scope: !15769)
!15769 = distinct !DILexicalBlock(scope: !15754, file: !2536, line: 655, column: 6)
!15770 = !DILocation(line: 655, column: 6, scope: !15754)
!15771 = !DILocation(line: 0, scope: !15167, inlinedAt: !15772)
!15772 = distinct !DILocation(line: 656, column: 3, scope: !15773)
!15773 = distinct !DILexicalBlock(scope: !15769, file: !2536, line: 655, column: 36)
!15774 = !DILocation(line: 194, column: 2, scope: !15175, inlinedAt: !15772)
!15775 = !DILocation(line: 194, column: 2, scope: !15176, inlinedAt: !15772)
!15776 = !DILocation(line: 194, column: 2, scope: !15179, inlinedAt: !15772)
!15777 = !DILocation(line: 0, scope: !15181, inlinedAt: !15778)
!15778 = distinct !DILocation(line: 215, column: 2, scope: !15167, inlinedAt: !15772)
!15779 = !DILocation(line: 95, column: 2, scope: !15181, inlinedAt: !15778)
!15780 = !DILocation(line: 657, column: 3, scope: !15773)
!15781 = !DILocation(line: 660, column: 2, scope: !15754)
!15782 = !DILocation(line: 661, column: 2, scope: !15754)
!15783 = !DILocation(line: 662, column: 2, scope: !15754)
!15784 = !DILocation(line: 663, column: 1, scope: !15754)
!15785 = distinct !DISubprogram(name: "z_has_thread_started", scope: !14293, file: !14293, line: 126, type: !15274, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15786)
!15786 = !{!15787}
!15787 = !DILocalVariable(name: "thread", arg: 1, scope: !15785, file: !14293, line: 126, type: !2428)
!15788 = !DILocation(line: 0, scope: !15785)
!15789 = !DILocation(line: 128, column: 23, scope: !15785)
!15790 = !DILocation(line: 128, column: 36, scope: !15785)
!15791 = !DILocation(line: 128, column: 56, scope: !15785)
!15792 = !DILocation(line: 128, column: 2, scope: !15785)
!15793 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !14293, file: !14293, line: 155, type: !15091, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15794)
!15794 = !{!15795}
!15795 = !DILocalVariable(name: "thread", arg: 1, scope: !15793, file: !14293, line: 155, type: !2428)
!15796 = !DILocation(line: 0, scope: !15793)
!15797 = !DILocation(line: 157, column: 15, scope: !15793)
!15798 = !DILocation(line: 157, column: 28, scope: !15793)
!15799 = !DILocation(line: 158, column: 1, scope: !15793)
!15800 = distinct !DISubprogram(name: "z_reschedule", scope: !2536, file: !2536, line: 967, type: !15168, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15801)
!15801 = !{!15802, !15803}
!15802 = !DILocalVariable(name: "lock", arg: 1, scope: !15800, file: !2536, line: 967, type: !15136)
!15803 = !DILocalVariable(name: "key", arg: 2, scope: !15800, file: !2536, line: 967, type: !15125)
!15804 = !DILocation(line: 0, scope: !15800)
!15805 = !DILocation(line: 969, column: 6, scope: !15806)
!15806 = distinct !DILexicalBlock(scope: !15800, file: !2536, line: 969, column: 6)
!15807 = !DILocation(line: 969, column: 23, scope: !15806)
!15808 = !DILocation(line: 969, column: 26, scope: !15806)
!15809 = !DILocation(line: 969, column: 6, scope: !15800)
!15810 = !DILocalVariable(name: "key", arg: 2, scope: !15811, file: !14397, line: 193, type: !15125)
!15811 = distinct !DISubprogram(name: "z_swap", scope: !14397, file: !14397, line: 193, type: !15812, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15814)
!15812 = !DISubroutineType(types: !15813)
!15813 = !{!107, !15136, !15125}
!15814 = !{!15815, !15810}
!15815 = !DILocalVariable(name: "lock", arg: 1, scope: !15811, file: !14397, line: 193, type: !15136)
!15816 = !DILocation(line: 0, scope: !15811, inlinedAt: !15817)
!15817 = distinct !DILocation(line: 970, column: 3, scope: !15818)
!15818 = distinct !DILexicalBlock(scope: !15806, file: !2536, line: 969, column: 39)
!15819 = !DILocalVariable(name: "l", arg: 1, scope: !15820, file: !420, line: 221, type: !15136)
!15820 = distinct !DISubprogram(name: "k_spin_release", scope: !420, file: !420, line: 221, type: !15821, scopeLine: 222, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15823)
!15821 = !DISubroutineType(types: !15822)
!15822 = !{null, !15136}
!15823 = !{!15819}
!15824 = !DILocation(line: 0, scope: !15820, inlinedAt: !15825)
!15825 = distinct !DILocation(line: 195, column: 2, scope: !15811, inlinedAt: !15817)
!15826 = !DILocation(line: 225, column: 2, scope: !15827, inlinedAt: !15825)
!15827 = distinct !DILexicalBlock(scope: !15828, file: !420, line: 225, column: 2)
!15828 = distinct !DILexicalBlock(scope: !15820, file: !420, line: 225, column: 2)
!15829 = !DILocation(line: 225, column: 2, scope: !15828, inlinedAt: !15825)
!15830 = !DILocation(line: 225, column: 2, scope: !15831, inlinedAt: !15825)
!15831 = distinct !DILexicalBlock(scope: !15827, file: !420, line: 225, column: 2)
!15832 = !DILocation(line: 196, column: 9, scope: !15811, inlinedAt: !15817)
!15833 = !DILocation(line: 971, column: 2, scope: !15818)
!15834 = !DILocation(line: 0, scope: !15167, inlinedAt: !15835)
!15835 = distinct !DILocation(line: 972, column: 3, scope: !15836)
!15836 = distinct !DILexicalBlock(scope: !15806, file: !2536, line: 971, column: 9)
!15837 = !DILocation(line: 194, column: 2, scope: !15175, inlinedAt: !15835)
!15838 = !DILocation(line: 194, column: 2, scope: !15176, inlinedAt: !15835)
!15839 = !DILocation(line: 194, column: 2, scope: !15179, inlinedAt: !15835)
!15840 = !DILocation(line: 0, scope: !15181, inlinedAt: !15841)
!15841 = distinct !DILocation(line: 215, column: 2, scope: !15167, inlinedAt: !15835)
!15842 = !DILocation(line: 95, column: 2, scope: !15181, inlinedAt: !15841)
!15843 = !DILocation(line: 975, column: 1, scope: !15800)
!15844 = distinct !DISubprogram(name: "resched", scope: !2536, file: !2536, line: 940, type: !15845, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15847)
!15845 = !DISubroutineType(types: !15846)
!15846 = !{!145, !152}
!15847 = !{!15848}
!15848 = !DILocalVariable(name: "key", arg: 1, scope: !15844, file: !2536, line: 940, type: !152)
!15849 = !DILocation(line: 0, scope: !15844)
!15850 = !DILocalVariable(name: "key", arg: 1, scope: !15851, file: !5999, line: 112, type: !32)
!15851 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !5999, file: !5999, line: 112, type: !15852, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15854)
!15852 = !DISubroutineType(types: !15853)
!15853 = !{!145, !32}
!15854 = !{!15850}
!15855 = !DILocation(line: 0, scope: !15851, inlinedAt: !15856)
!15856 = distinct !DILocation(line: 946, column: 9, scope: !15844)
!15857 = !DILocation(line: 115, column: 13, scope: !15851, inlinedAt: !15856)
!15858 = !DILocation(line: 946, column: 32, scope: !15844)
!15859 = !DILocation(line: 1031, column: 3, scope: !15860, inlinedAt: !15863)
!15860 = distinct !DISubprogram(name: "__get_IPSR", scope: !6318, file: !6318, line: 1027, type: !6405, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15861)
!15861 = !{!15862}
!15862 = !DILocalVariable(name: "result", scope: !15860, file: !6318, line: 1029, type: !152)
!15863 = distinct !DILocation(line: 48, column: 10, scope: !15864, inlinedAt: !15865)
!15864 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7370, file: !7370, line: 46, type: !7371, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !2236)
!15865 = distinct !DILocation(line: 946, column: 36, scope: !15844)
!15866 = !{i64 3773274}
!15867 = !DILocation(line: 0, scope: !15860, inlinedAt: !15863)
!15868 = !DILocation(line: 48, column: 9, scope: !15864, inlinedAt: !15865)
!15869 = !DILocation(line: 946, column: 2, scope: !15844)
!15870 = distinct !DISubprogram(name: "need_swap", scope: !2536, file: !2536, line: 953, type: !7371, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15871)
!15871 = !{!15872}
!15872 = !DILocalVariable(name: "new_thread", scope: !15870, file: !2536, line: 959, type: !2428)
!15873 = !DILocation(line: 962, column: 31, scope: !15870)
!15874 = !DILocation(line: 0, scope: !15870)
!15875 = !DILocation(line: 963, column: 23, scope: !15870)
!15876 = !DILocation(line: 963, column: 20, scope: !15870)
!15877 = !DILocation(line: 963, column: 2, scope: !15870)
!15878 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !14397, file: !14397, line: 181, type: !6328, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15879)
!15879 = !{!15880, !15881}
!15880 = !DILocalVariable(name: "key", arg: 1, scope: !15878, file: !14397, line: 181, type: !32)
!15881 = !DILocalVariable(name: "ret", scope: !15878, file: !14397, line: 183, type: !107)
!15882 = !DILocation(line: 0, scope: !15878)
!15883 = !DILocation(line: 185, column: 8, scope: !15878)
!15884 = !DILocation(line: 186, column: 2, scope: !15878)
!15885 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2536, file: !2536, line: 665, type: !15091, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15886)
!15886 = !{!15887, !15888, !15890}
!15887 = !DILocalVariable(name: "thread", arg: 1, scope: !15885, file: !2536, line: 665, type: !2428)
!15888 = !DILocalVariable(name: "__i", scope: !15889, file: !2536, line: 671, type: !15125)
!15889 = distinct !DILexicalBlock(scope: !15885, file: !2536, line: 671, column: 2)
!15890 = !DILocalVariable(name: "__key", scope: !15889, file: !2536, line: 671, type: !15125)
!15891 = !DILocation(line: 0, scope: !15885)
!15892 = !DILocation(line: 669, column: 8, scope: !15885)
!15893 = !DILocation(line: 0, scope: !15889)
!15894 = !DILocation(line: 0, scope: !15133, inlinedAt: !15895)
!15895 = distinct !DILocation(line: 671, column: 2, scope: !15889)
!15896 = !DILocation(line: 55, column: 2, scope: !15142, inlinedAt: !15897)
!15897 = distinct !DILocation(line: 145, column: 10, scope: !15133, inlinedAt: !15895)
!15898 = !DILocation(line: 0, scope: !15142, inlinedAt: !15897)
!15899 = !DILocation(line: 148, column: 2, scope: !15150, inlinedAt: !15895)
!15900 = !DILocation(line: 148, column: 2, scope: !15151, inlinedAt: !15895)
!15901 = !DILocation(line: 148, column: 2, scope: !15154, inlinedAt: !15895)
!15902 = !DILocation(line: 160, column: 2, scope: !15133, inlinedAt: !15895)
!15903 = !DILocation(line: 672, column: 7, scope: !15904)
!15904 = distinct !DILexicalBlock(scope: !15905, file: !2536, line: 672, column: 7)
!15905 = distinct !DILexicalBlock(scope: !15906, file: !2536, line: 671, column: 26)
!15906 = distinct !DILexicalBlock(scope: !15889, file: !2536, line: 671, column: 2)
!15907 = !DILocation(line: 672, column: 7, scope: !15905)
!15908 = !DILocation(line: 0, scope: !15325, inlinedAt: !15909)
!15909 = distinct !DILocation(line: 673, column: 4, scope: !15910)
!15910 = distinct !DILexicalBlock(scope: !15904, file: !2536, line: 672, column: 35)
!15911 = !DILocation(line: 266, column: 15, scope: !15325, inlinedAt: !15909)
!15912 = !DILocation(line: 266, column: 28, scope: !15325, inlinedAt: !15909)
!15913 = !DILocation(line: 0, scope: !15333, inlinedAt: !15914)
!15914 = distinct !DILocation(line: 268, column: 3, scope: !15337, inlinedAt: !15909)
!15915 = !DILocation(line: 234, column: 2, scope: !15333, inlinedAt: !15914)
!15916 = !DILocation(line: 674, column: 3, scope: !15910)
!15917 = !DILocation(line: 675, column: 3, scope: !15905)
!15918 = !DILocation(line: 676, column: 26, scope: !15905)
!15919 = !DILocation(line: 676, column: 23, scope: !15905)
!15920 = !DILocation(line: 676, column: 3, scope: !15905)
!15921 = !DILocation(line: 0, scope: !15167, inlinedAt: !15922)
!15922 = distinct !DILocation(line: 671, column: 2, scope: !15906)
!15923 = !DILocation(line: 194, column: 2, scope: !15175, inlinedAt: !15922)
!15924 = !DILocation(line: 194, column: 2, scope: !15176, inlinedAt: !15922)
!15925 = !DILocation(line: 194, column: 2, scope: !15179, inlinedAt: !15922)
!15926 = !DILocation(line: 0, scope: !15181, inlinedAt: !15927)
!15927 = distinct !DILocation(line: 215, column: 2, scope: !15167, inlinedAt: !15922)
!15928 = !DILocation(line: 95, column: 2, scope: !15181, inlinedAt: !15927)
!15929 = !DILocation(line: 679, column: 16, scope: !15930)
!15930 = distinct !DILexicalBlock(scope: !15885, file: !2536, line: 679, column: 6)
!15931 = !DILocation(line: 679, column: 13, scope: !15930)
!15932 = !DILocation(line: 679, column: 6, scope: !15885)
!15933 = !DILocation(line: 680, column: 3, scope: !15934)
!15934 = distinct !DILexicalBlock(scope: !15930, file: !2536, line: 679, column: 26)
!15935 = !DILocation(line: 681, column: 2, scope: !15934)
!15936 = !DILocation(line: 684, column: 1, scope: !15885)
!15937 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !14722, file: !14722, line: 52, type: !15109, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15938)
!15938 = !{!15939}
!15939 = !DILocalVariable(name: "thread", arg: 1, scope: !15937, file: !14722, line: 52, type: !2428)
!15940 = !DILocation(line: 0, scope: !15937)
!15941 = !DILocation(line: 54, column: 39, scope: !15937)
!15942 = !DILocation(line: 54, column: 9, scope: !15937)
!15943 = !DILocation(line: 54, column: 2, scope: !15937)
!15944 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !14293, file: !14293, line: 141, type: !15091, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15945)
!15945 = !{!15946}
!15946 = !DILocalVariable(name: "thread", arg: 1, scope: !15944, file: !14293, line: 141, type: !2428)
!15947 = !DILocation(line: 0, scope: !15944)
!15948 = !DILocation(line: 143, column: 15, scope: !15944)
!15949 = !DILocation(line: 143, column: 28, scope: !15944)
!15950 = !DILocation(line: 146, column: 1, scope: !15944)
!15951 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !14293, file: !14293, line: 73, type: !3148, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !2236)
!15952 = !DILocation(line: 55, column: 2, scope: !15142, inlinedAt: !15953)
!15953 = distinct !DILocation(line: 75, column: 30, scope: !15951)
!15954 = !DILocation(line: 0, scope: !15142, inlinedAt: !15953)
!15955 = !DILocation(line: 75, column: 9, scope: !15951)
!15956 = !DILocation(line: 76, column: 1, scope: !15951)
!15957 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2536, file: !2536, line: 977, type: !6415, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15958)
!15958 = !{!15959}
!15959 = !DILocalVariable(name: "key", arg: 1, scope: !15957, file: !2536, line: 977, type: !152)
!15960 = !DILocation(line: 0, scope: !15957)
!15961 = !DILocation(line: 979, column: 6, scope: !15962)
!15962 = distinct !DILexicalBlock(scope: !15957, file: !2536, line: 979, column: 6)
!15963 = !DILocation(line: 979, column: 6, scope: !15957)
!15964 = !DILocation(line: 980, column: 3, scope: !15965)
!15965 = distinct !DILexicalBlock(scope: !15962, file: !2536, line: 979, column: 20)
!15966 = !DILocation(line: 981, column: 2, scope: !15965)
!15967 = !DILocation(line: 0, scope: !15181, inlinedAt: !15968)
!15968 = distinct !DILocation(line: 982, column: 3, scope: !15969)
!15969 = distinct !DILexicalBlock(scope: !15962, file: !2536, line: 981, column: 9)
!15970 = !DILocation(line: 95, column: 2, scope: !15181, inlinedAt: !15968)
!15971 = !DILocation(line: 985, column: 1, scope: !15957)
!15972 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2536, file: !2536, line: 695, type: !15091, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15973)
!15973 = !{!15974, !15975}
!15974 = !DILocalVariable(name: "thread", arg: 1, scope: !15972, file: !2536, line: 695, type: !2428)
!15975 = !DILocalVariable(name: "key", scope: !15972, file: !2536, line: 699, type: !15125)
!15976 = !DILocation(line: 0, scope: !15972)
!15977 = !DILocation(line: 0, scope: !15133, inlinedAt: !15978)
!15978 = distinct !DILocation(line: 699, column: 25, scope: !15972)
!15979 = !DILocation(line: 55, column: 2, scope: !15142, inlinedAt: !15980)
!15980 = distinct !DILocation(line: 145, column: 10, scope: !15133, inlinedAt: !15978)
!15981 = !DILocation(line: 0, scope: !15142, inlinedAt: !15980)
!15982 = !DILocation(line: 148, column: 2, scope: !15150, inlinedAt: !15978)
!15983 = !DILocation(line: 148, column: 2, scope: !15151, inlinedAt: !15978)
!15984 = !DILocation(line: 148, column: 2, scope: !15154, inlinedAt: !15978)
!15985 = !DILocation(line: 160, column: 2, scope: !15133, inlinedAt: !15978)
!15986 = !DILocation(line: 702, column: 7, scope: !15987)
!15987 = distinct !DILexicalBlock(scope: !15972, file: !2536, line: 702, column: 6)
!15988 = !DILocation(line: 702, column: 6, scope: !15972)
!15989 = !DILocation(line: 0, scope: !15167, inlinedAt: !15990)
!15990 = distinct !DILocation(line: 703, column: 3, scope: !15991)
!15991 = distinct !DILexicalBlock(scope: !15987, file: !2536, line: 702, column: 38)
!15992 = !DILocation(line: 194, column: 2, scope: !15175, inlinedAt: !15990)
!15993 = !DILocation(line: 194, column: 2, scope: !15176, inlinedAt: !15990)
!15994 = !DILocation(line: 194, column: 2, scope: !15179, inlinedAt: !15990)
!15995 = !DILocation(line: 0, scope: !15181, inlinedAt: !15996)
!15996 = distinct !DILocation(line: 215, column: 2, scope: !15167, inlinedAt: !15990)
!15997 = !DILocation(line: 95, column: 2, scope: !15181, inlinedAt: !15996)
!15998 = !DILocation(line: 704, column: 3, scope: !15991)
!15999 = !DILocation(line: 707, column: 2, scope: !15972)
!16000 = !DILocation(line: 708, column: 2, scope: !15972)
!16001 = !DILocation(line: 710, column: 2, scope: !15972)
!16002 = !DILocation(line: 713, column: 1, scope: !15972)
!16003 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !14293, file: !14293, line: 96, type: !15274, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16004)
!16004 = !{!16005}
!16005 = !DILocalVariable(name: "thread", arg: 1, scope: !16003, file: !14293, line: 96, type: !2428)
!16006 = !DILocation(line: 0, scope: !16003)
!16007 = !DILocation(line: 98, column: 23, scope: !16003)
!16008 = !DILocation(line: 98, column: 36, scope: !16003)
!16009 = !DILocation(line: 98, column: 57, scope: !16003)
!16010 = !DILocation(line: 98, column: 2, scope: !16003)
!16011 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !14293, file: !14293, line: 148, type: !15091, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16012)
!16012 = !{!16013}
!16013 = !DILocalVariable(name: "thread", arg: 1, scope: !16011, file: !14293, line: 148, type: !2428)
!16014 = !DILocation(line: 0, scope: !16011)
!16015 = !DILocation(line: 150, column: 15, scope: !16011)
!16016 = !DILocation(line: 150, column: 28, scope: !16011)
!16017 = !DILocation(line: 153, column: 1, scope: !16011)
!16018 = distinct !DISubprogram(name: "z_pend_thread", scope: !2536, file: !2536, line: 770, type: !16019, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16025)
!16019 = !DISubroutineType(types: !16020)
!16020 = !{null, !2428, !2459, !16021}
!16021 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !565, line: 67, baseType: !16022)
!16022 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !565, line: 65, size: 64, elements: !16023)
!16023 = !{!16024}
!16024 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16022, file: !565, line: 66, baseType: !564, size: 64)
!16025 = !{!16026, !16027, !16028, !16029, !16031}
!16026 = !DILocalVariable(name: "thread", arg: 1, scope: !16018, file: !2536, line: 770, type: !2428)
!16027 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16018, file: !2536, line: 770, type: !2459)
!16028 = !DILocalVariable(name: "timeout", arg: 3, scope: !16018, file: !2536, line: 771, type: !16021)
!16029 = !DILocalVariable(name: "__i", scope: !16030, file: !2536, line: 774, type: !15125)
!16030 = distinct !DILexicalBlock(scope: !16018, file: !2536, line: 774, column: 2)
!16031 = !DILocalVariable(name: "__key", scope: !16030, file: !2536, line: 774, type: !15125)
!16032 = !DILocation(line: 0, scope: !16018)
!16033 = !DILocation(line: 773, column: 2, scope: !16034)
!16034 = distinct !DILexicalBlock(scope: !16035, file: !2536, line: 773, column: 2)
!16035 = distinct !DILexicalBlock(scope: !16018, file: !2536, line: 773, column: 2)
!16036 = !DILocation(line: 773, column: 2, scope: !16035)
!16037 = !DILocation(line: 773, column: 2, scope: !16038)
!16038 = distinct !DILexicalBlock(scope: !16034, file: !2536, line: 773, column: 2)
!16039 = !DILocation(line: 0, scope: !16030)
!16040 = !DILocation(line: 0, scope: !15133, inlinedAt: !16041)
!16041 = distinct !DILocation(line: 774, column: 2, scope: !16030)
!16042 = !DILocation(line: 55, column: 2, scope: !15142, inlinedAt: !16043)
!16043 = distinct !DILocation(line: 145, column: 10, scope: !15133, inlinedAt: !16041)
!16044 = !DILocation(line: 0, scope: !15142, inlinedAt: !16043)
!16045 = !DILocation(line: 148, column: 2, scope: !15150, inlinedAt: !16041)
!16046 = !DILocation(line: 148, column: 2, scope: !15151, inlinedAt: !16041)
!16047 = !DILocation(line: 148, column: 2, scope: !15154, inlinedAt: !16041)
!16048 = !DILocation(line: 160, column: 2, scope: !15133, inlinedAt: !16041)
!16049 = !DILocation(line: 775, column: 3, scope: !16050)
!16050 = distinct !DILexicalBlock(scope: !16051, file: !2536, line: 774, column: 26)
!16051 = distinct !DILexicalBlock(scope: !16030, file: !2536, line: 774, column: 2)
!16052 = !DILocation(line: 0, scope: !15167, inlinedAt: !16053)
!16053 = distinct !DILocation(line: 774, column: 2, scope: !16051)
!16054 = !DILocation(line: 194, column: 2, scope: !15175, inlinedAt: !16053)
!16055 = !DILocation(line: 194, column: 2, scope: !15176, inlinedAt: !16053)
!16056 = !DILocation(line: 194, column: 2, scope: !15179, inlinedAt: !16053)
!16057 = !DILocation(line: 0, scope: !15181, inlinedAt: !16058)
!16058 = distinct !DILocation(line: 215, column: 2, scope: !15167, inlinedAt: !16053)
!16059 = !DILocation(line: 95, column: 2, scope: !15181, inlinedAt: !16058)
!16060 = !DILocation(line: 777, column: 1, scope: !16018)
!16061 = distinct !DISubprogram(name: "is_thread_dummy", scope: !2536, file: !2536, line: 79, type: !15274, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16062)
!16062 = !{!16063}
!16063 = !DILocalVariable(name: "thread", arg: 1, scope: !16061, file: !2536, line: 79, type: !2428)
!16064 = !DILocation(line: 0, scope: !16061)
!16065 = !DILocation(line: 81, column: 23, scope: !16061)
!16066 = !DILocation(line: 81, column: 36, scope: !16061)
!16067 = !DILocation(line: 81, column: 53, scope: !16061)
!16068 = !DILocation(line: 81, column: 2, scope: !16061)
!16069 = distinct !DISubprogram(name: "pend_locked", scope: !2536, file: !2536, line: 760, type: !16019, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16070)
!16070 = !{!16071, !16072, !16073}
!16071 = !DILocalVariable(name: "thread", arg: 1, scope: !16069, file: !2536, line: 760, type: !2428)
!16072 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16069, file: !2536, line: 760, type: !2459)
!16073 = !DILocalVariable(name: "timeout", arg: 3, scope: !16069, file: !2536, line: 761, type: !16021)
!16074 = !DILocation(line: 0, scope: !16069)
!16075 = !DILocation(line: 766, column: 2, scope: !16069)
!16076 = !DILocation(line: 767, column: 2, scope: !16069)
!16077 = !DILocation(line: 768, column: 1, scope: !16069)
!16078 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2536, file: !2536, line: 740, type: !16079, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16081)
!16079 = !DISubroutineType(types: !16080)
!16080 = !{null, !2428, !2459}
!16081 = !{!16082, !16083}
!16082 = !DILocalVariable(name: "thread", arg: 1, scope: !16078, file: !2536, line: 740, type: !2428)
!16083 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16078, file: !2536, line: 740, type: !2459)
!16084 = !DILocation(line: 0, scope: !16078)
!16085 = !DILocation(line: 742, column: 2, scope: !16078)
!16086 = !DILocation(line: 743, column: 2, scope: !16078)
!16087 = !DILocation(line: 747, column: 13, scope: !16088)
!16088 = distinct !DILexicalBlock(scope: !16078, file: !2536, line: 747, column: 6)
!16089 = !DILocation(line: 747, column: 6, scope: !16078)
!16090 = !DILocation(line: 748, column: 16, scope: !16091)
!16091 = distinct !DILexicalBlock(scope: !16088, file: !2536, line: 747, column: 22)
!16092 = !DILocation(line: 748, column: 26, scope: !16091)
!16093 = !DILocation(line: 749, column: 28, scope: !16091)
!16094 = !DILocation(line: 0, scope: !15356, inlinedAt: !16095)
!16095 = distinct !DILocation(line: 749, column: 3, scope: !16091)
!16096 = !DILocation(line: 186, column: 2, scope: !15366, inlinedAt: !16095)
!16097 = !DILocation(line: 186, column: 2, scope: !15367, inlinedAt: !16095)
!16098 = !DILocation(line: 186, column: 2, scope: !15370, inlinedAt: !16095)
!16099 = !DILocation(line: 188, column: 2, scope: !15372, inlinedAt: !16095)
!16100 = !DILocation(line: 188, column: 2, scope: !15374, inlinedAt: !16095)
!16101 = !DILocation(line: 0, scope: !15372, inlinedAt: !16095)
!16102 = !DILocation(line: 189, column: 7, scope: !15377, inlinedAt: !16095)
!16103 = !DILocation(line: 189, column: 35, scope: !15377, inlinedAt: !16095)
!16104 = !DILocation(line: 189, column: 7, scope: !15378, inlinedAt: !16095)
!16105 = !DILocation(line: 191, column: 21, scope: !15382, inlinedAt: !16095)
!16106 = !DILocation(line: 190, column: 4, scope: !15382, inlinedAt: !16095)
!16107 = !DILocation(line: 192, column: 4, scope: !15382, inlinedAt: !16095)
!16108 = distinct !{!16108, !16099, !16109}
!16109 = !DILocation(line: 194, column: 2, scope: !15372, inlinedAt: !16095)
!16110 = !DILocation(line: 196, column: 37, scope: !15356, inlinedAt: !16095)
!16111 = !DILocation(line: 196, column: 2, scope: !15356, inlinedAt: !16095)
!16112 = !DILocation(line: 197, column: 1, scope: !15356, inlinedAt: !16095)
!16113 = !DILocation(line: 751, column: 1, scope: !16078)
!16114 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2536, file: !2536, line: 753, type: !16115, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16117)
!16115 = !DISubroutineType(types: !16116)
!16116 = !{null, !2428, !16021}
!16117 = !{!16118, !16119}
!16118 = !DILocalVariable(name: "thread", arg: 1, scope: !16114, file: !2536, line: 753, type: !2428)
!16119 = !DILocalVariable(name: "timeout", arg: 2, scope: !16114, file: !2536, line: 753, type: !16021)
!16120 = !DILocation(line: 0, scope: !16114)
!16121 = !DILocation(line: 755, column: 7, scope: !16122)
!16122 = distinct !DILexicalBlock(scope: !16114, file: !2536, line: 755, column: 6)
!16123 = !DILocation(line: 755, column: 6, scope: !16114)
!16124 = !DILocation(line: 756, column: 3, scope: !16125)
!16125 = distinct !DILexicalBlock(scope: !16122, file: !2536, line: 755, column: 41)
!16126 = !DILocation(line: 757, column: 2, scope: !16125)
!16127 = !DILocation(line: 758, column: 1, scope: !16114)
!16128 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14722, file: !14722, line: 47, type: !16115, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16129)
!16129 = !{!16130, !16131}
!16130 = !DILocalVariable(name: "thread", arg: 1, scope: !16128, file: !14722, line: 47, type: !2428)
!16131 = !DILocalVariable(name: "ticks", arg: 2, scope: !16128, file: !14722, line: 47, type: !16021)
!16132 = !DILocation(line: 0, scope: !16128)
!16133 = !DILocation(line: 49, column: 30, scope: !16128)
!16134 = !DILocation(line: 49, column: 2, scope: !16128)
!16135 = !DILocation(line: 50, column: 1, scope: !16128)
!16136 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2536, file: !2536, line: 795, type: !2485, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16137)
!16137 = !{!16138, !16139, !16140, !16142, !16143}
!16138 = !DILocalVariable(name: "timeout", arg: 1, scope: !16136, file: !2536, line: 795, type: !2487)
!16139 = !DILocalVariable(name: "thread", scope: !16136, file: !2536, line: 797, type: !2428)
!16140 = !DILocalVariable(name: "__i", scope: !16141, file: !2536, line: 800, type: !15125)
!16141 = distinct !DILexicalBlock(scope: !16136, file: !2536, line: 800, column: 2)
!16142 = !DILocalVariable(name: "__key", scope: !16141, file: !2536, line: 800, type: !15125)
!16143 = !DILocalVariable(name: "killed", scope: !16144, file: !2536, line: 801, type: !145)
!16144 = distinct !DILexicalBlock(scope: !16145, file: !2536, line: 800, column: 26)
!16145 = distinct !DILexicalBlock(scope: !16141, file: !2536, line: 800, column: 2)
!16146 = !DILocation(line: 0, scope: !16136)
!16147 = !DILocation(line: 797, column: 28, scope: !16136)
!16148 = !DILocation(line: 0, scope: !16141)
!16149 = !DILocation(line: 0, scope: !15133, inlinedAt: !16150)
!16150 = distinct !DILocation(line: 800, column: 2, scope: !16141)
!16151 = !DILocation(line: 55, column: 2, scope: !15142, inlinedAt: !16152)
!16152 = distinct !DILocation(line: 145, column: 10, scope: !15133, inlinedAt: !16150)
!16153 = !DILocation(line: 0, scope: !15142, inlinedAt: !16152)
!16154 = !DILocation(line: 148, column: 2, scope: !15150, inlinedAt: !16150)
!16155 = !DILocation(line: 148, column: 2, scope: !15151, inlinedAt: !16150)
!16156 = !DILocation(line: 148, column: 2, scope: !15154, inlinedAt: !16150)
!16157 = !DILocation(line: 160, column: 2, scope: !15133, inlinedAt: !16150)
!16158 = !DILocation(line: 801, column: 27, scope: !16144)
!16159 = !DILocation(line: 801, column: 32, scope: !16144)
!16160 = !DILocation(line: 801, column: 61, scope: !16144)
!16161 = !DILocation(line: 0, scope: !16144)
!16162 = !DILocation(line: 804, column: 7, scope: !16144)
!16163 = !DILocation(line: 805, column: 21, scope: !16164)
!16164 = distinct !DILexicalBlock(scope: !16165, file: !2536, line: 805, column: 8)
!16165 = distinct !DILexicalBlock(scope: !16166, file: !2536, line: 804, column: 16)
!16166 = distinct !DILexicalBlock(scope: !16144, file: !2536, line: 804, column: 7)
!16167 = !DILocation(line: 805, column: 31, scope: !16164)
!16168 = !DILocation(line: 805, column: 8, scope: !16165)
!16169 = !DILocation(line: 806, column: 5, scope: !16170)
!16170 = distinct !DILexicalBlock(scope: !16164, file: !2536, line: 805, column: 40)
!16171 = !DILocation(line: 807, column: 4, scope: !16170)
!16172 = !DILocation(line: 808, column: 4, scope: !16165)
!16173 = !DILocation(line: 809, column: 4, scope: !16165)
!16174 = !DILocation(line: 810, column: 4, scope: !16165)
!16175 = !DILocation(line: 811, column: 3, scope: !16165)
!16176 = !DILocation(line: 0, scope: !15167, inlinedAt: !16177)
!16177 = distinct !DILocation(line: 800, column: 2, scope: !16145)
!16178 = !DILocation(line: 194, column: 2, scope: !15175, inlinedAt: !16177)
!16179 = !DILocation(line: 194, column: 2, scope: !15176, inlinedAt: !16177)
!16180 = !DILocation(line: 194, column: 2, scope: !15179, inlinedAt: !16177)
!16181 = !DILocation(line: 0, scope: !15181, inlinedAt: !16182)
!16182 = distinct !DILocation(line: 215, column: 2, scope: !15167, inlinedAt: !16177)
!16183 = !DILocation(line: 95, column: 2, scope: !15181, inlinedAt: !16182)
!16184 = !DILocation(line: 813, column: 1, scope: !16136)
!16185 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2536, file: !2536, line: 779, type: !15091, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16186)
!16186 = !{!16187}
!16187 = !DILocalVariable(name: "thread", arg: 1, scope: !16185, file: !2536, line: 779, type: !2428)
!16188 = !DILocation(line: 0, scope: !16185)
!16189 = !DILocation(line: 781, column: 21, scope: !16185)
!16190 = !DILocation(line: 781, column: 2, scope: !16185)
!16191 = !DILocation(line: 782, column: 2, scope: !16185)
!16192 = !DILocation(line: 783, column: 15, scope: !16185)
!16193 = !DILocation(line: 783, column: 25, scope: !16185)
!16194 = !DILocation(line: 784, column: 1, scope: !16185)
!16195 = distinct !DISubprogram(name: "pended_on_thread", scope: !2536, file: !2536, line: 724, type: !16196, scopeLine: 725, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16198)
!16196 = !DISubroutineType(types: !16197)
!16197 = !{!2459, !2428}
!16198 = !{!16199}
!16199 = !DILocalVariable(name: "thread", arg: 1, scope: !16195, file: !2536, line: 724, type: !2428)
!16200 = !DILocation(line: 0, scope: !16195)
!16201 = !DILocation(line: 726, column: 2, scope: !16202)
!16202 = distinct !DILexicalBlock(scope: !16203, file: !2536, line: 726, column: 2)
!16203 = distinct !DILexicalBlock(scope: !16195, file: !2536, line: 726, column: 2)
!16204 = !DILocation(line: 726, column: 2, scope: !16203)
!16205 = !DILocation(line: 726, column: 2, scope: !16206)
!16206 = distinct !DILexicalBlock(scope: !16202, file: !2536, line: 726, column: 2)
!16207 = !DILocation(line: 728, column: 2, scope: !16195)
!16208 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !14293, file: !14293, line: 165, type: !15091, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16209)
!16209 = !{!16210}
!16210 = !DILocalVariable(name: "thread", arg: 1, scope: !16208, file: !14293, line: 165, type: !2428)
!16211 = !DILocation(line: 0, scope: !16208)
!16212 = !DILocation(line: 167, column: 15, scope: !16208)
!16213 = !DILocation(line: 167, column: 28, scope: !16208)
!16214 = !DILocation(line: 168, column: 1, scope: !16208)
!16215 = distinct !DISubprogram(name: "unready_thread", scope: !2536, file: !2536, line: 731, type: !15091, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16216)
!16216 = !{!16217}
!16217 = !DILocalVariable(name: "thread", arg: 1, scope: !16215, file: !2536, line: 731, type: !2428)
!16218 = !DILocation(line: 0, scope: !16215)
!16219 = !DILocation(line: 733, column: 6, scope: !16220)
!16220 = distinct !DILexicalBlock(scope: !16215, file: !2536, line: 733, column: 6)
!16221 = !DILocation(line: 733, column: 6, scope: !16215)
!16222 = !DILocation(line: 0, scope: !15325, inlinedAt: !16223)
!16223 = distinct !DILocation(line: 734, column: 3, scope: !16224)
!16224 = distinct !DILexicalBlock(scope: !16220, file: !2536, line: 733, column: 34)
!16225 = !DILocation(line: 266, column: 15, scope: !15325, inlinedAt: !16223)
!16226 = !DILocation(line: 266, column: 28, scope: !15325, inlinedAt: !16223)
!16227 = !DILocation(line: 0, scope: !15333, inlinedAt: !16228)
!16228 = distinct !DILocation(line: 268, column: 3, scope: !15337, inlinedAt: !16223)
!16229 = !DILocation(line: 234, column: 2, scope: !15333, inlinedAt: !16228)
!16230 = !DILocation(line: 735, column: 2, scope: !16224)
!16231 = !DILocation(line: 736, column: 25, scope: !16215)
!16232 = !DILocation(line: 736, column: 22, scope: !16215)
!16233 = !DILocation(line: 736, column: 2, scope: !16215)
!16234 = !DILocation(line: 737, column: 1, scope: !16215)
!16235 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !14293, file: !14293, line: 160, type: !15091, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16236)
!16236 = !{!16237}
!16237 = !DILocalVariable(name: "thread", arg: 1, scope: !16235, file: !14293, line: 160, type: !2428)
!16238 = !DILocation(line: 0, scope: !16235)
!16239 = !DILocation(line: 162, column: 15, scope: !16235)
!16240 = !DILocation(line: 162, column: 28, scope: !16235)
!16241 = !DILocation(line: 163, column: 1, scope: !16235)
!16242 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2536, file: !2536, line: 786, type: !15091, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16243)
!16243 = !{!16244, !16245, !16247}
!16244 = !DILocalVariable(name: "thread", arg: 1, scope: !16242, file: !2536, line: 786, type: !2428)
!16245 = !DILocalVariable(name: "__i", scope: !16246, file: !2536, line: 788, type: !15125)
!16246 = distinct !DILexicalBlock(scope: !16242, file: !2536, line: 788, column: 2)
!16247 = !DILocalVariable(name: "__key", scope: !16246, file: !2536, line: 788, type: !15125)
!16248 = !DILocation(line: 0, scope: !16242)
!16249 = !DILocation(line: 0, scope: !16246)
!16250 = !DILocation(line: 0, scope: !15133, inlinedAt: !16251)
!16251 = distinct !DILocation(line: 788, column: 2, scope: !16246)
!16252 = !DILocation(line: 55, column: 2, scope: !15142, inlinedAt: !16253)
!16253 = distinct !DILocation(line: 145, column: 10, scope: !15133, inlinedAt: !16251)
!16254 = !DILocation(line: 0, scope: !15142, inlinedAt: !16253)
!16255 = !DILocation(line: 148, column: 2, scope: !15150, inlinedAt: !16251)
!16256 = !DILocation(line: 148, column: 2, scope: !15151, inlinedAt: !16251)
!16257 = !DILocation(line: 148, column: 2, scope: !15154, inlinedAt: !16251)
!16258 = !DILocation(line: 160, column: 2, scope: !15133, inlinedAt: !16251)
!16259 = !DILocation(line: 789, column: 3, scope: !16260)
!16260 = distinct !DILexicalBlock(scope: !16261, file: !2536, line: 788, column: 26)
!16261 = distinct !DILexicalBlock(scope: !16246, file: !2536, line: 788, column: 2)
!16262 = !DILocation(line: 0, scope: !15167, inlinedAt: !16263)
!16263 = distinct !DILocation(line: 788, column: 2, scope: !16261)
!16264 = !DILocation(line: 194, column: 2, scope: !15175, inlinedAt: !16263)
!16265 = !DILocation(line: 194, column: 2, scope: !15176, inlinedAt: !16263)
!16266 = !DILocation(line: 194, column: 2, scope: !15179, inlinedAt: !16263)
!16267 = !DILocation(line: 0, scope: !15181, inlinedAt: !16268)
!16268 = distinct !DILocation(line: 215, column: 2, scope: !15167, inlinedAt: !16263)
!16269 = !DILocation(line: 95, column: 2, scope: !15181, inlinedAt: !16268)
!16270 = !DILocation(line: 791, column: 1, scope: !16242)
!16271 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2536, file: !2536, line: 816, type: !16272, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16274)
!16272 = !DISubroutineType(types: !16273)
!16273 = !{!107, !152, !2459, !16021}
!16274 = !{!16275, !16276, !16277, !16278, !16279, !16281}
!16275 = !DILocalVariable(name: "key", arg: 1, scope: !16271, file: !2536, line: 816, type: !152)
!16276 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16271, file: !2536, line: 816, type: !2459)
!16277 = !DILocalVariable(name: "timeout", arg: 3, scope: !16271, file: !2536, line: 816, type: !16021)
!16278 = !DILocalVariable(name: "ret", scope: !16271, file: !2536, line: 828, type: !107)
!16279 = !DILocalVariable(name: "__i", scope: !16280, file: !2536, line: 829, type: !15125)
!16280 = distinct !DILexicalBlock(scope: !16271, file: !2536, line: 829, column: 2)
!16281 = !DILocalVariable(name: "__key", scope: !16280, file: !2536, line: 829, type: !15125)
!16282 = !DILocation(line: 0, scope: !16271)
!16283 = !DILocation(line: 823, column: 14, scope: !16271)
!16284 = !DILocation(line: 823, column: 2, scope: !16271)
!16285 = !DILocation(line: 826, column: 20, scope: !16271)
!16286 = !DILocation(line: 826, column: 18, scope: !16271)
!16287 = !DILocation(line: 828, column: 12, scope: !16271)
!16288 = !DILocation(line: 0, scope: !16280)
!16289 = !DILocation(line: 0, scope: !15133, inlinedAt: !16290)
!16290 = distinct !DILocation(line: 829, column: 2, scope: !16280)
!16291 = !DILocation(line: 55, column: 2, scope: !15142, inlinedAt: !16292)
!16292 = distinct !DILocation(line: 145, column: 10, scope: !15133, inlinedAt: !16290)
!16293 = !DILocation(line: 0, scope: !15142, inlinedAt: !16292)
!16294 = !DILocation(line: 148, column: 2, scope: !15150, inlinedAt: !16290)
!16295 = !DILocation(line: 148, column: 2, scope: !15151, inlinedAt: !16290)
!16296 = !DILocation(line: 148, column: 2, scope: !15154, inlinedAt: !16290)
!16297 = !DILocation(line: 160, column: 2, scope: !15133, inlinedAt: !16290)
!16298 = !DILocation(line: 830, column: 7, scope: !16299)
!16299 = distinct !DILexicalBlock(scope: !16300, file: !2536, line: 830, column: 7)
!16300 = distinct !DILexicalBlock(scope: !16301, file: !2536, line: 829, column: 26)
!16301 = distinct !DILexicalBlock(scope: !16280, file: !2536, line: 829, column: 2)
!16302 = !DILocation(line: 830, column: 26, scope: !16299)
!16303 = !DILocation(line: 830, column: 23, scope: !16299)
!16304 = !DILocation(line: 830, column: 7, scope: !16300)
!16305 = !DILocation(line: 831, column: 20, scope: !16306)
!16306 = distinct !DILexicalBlock(scope: !16299, file: !2536, line: 830, column: 36)
!16307 = !DILocation(line: 832, column: 3, scope: !16306)
!16308 = !DILocation(line: 0, scope: !15167, inlinedAt: !16309)
!16309 = distinct !DILocation(line: 829, column: 2, scope: !16301)
!16310 = !DILocation(line: 194, column: 2, scope: !15175, inlinedAt: !16309)
!16311 = !DILocation(line: 194, column: 2, scope: !15176, inlinedAt: !16309)
!16312 = !DILocation(line: 194, column: 2, scope: !15179, inlinedAt: !16309)
!16313 = !DILocation(line: 0, scope: !15181, inlinedAt: !16314)
!16314 = distinct !DILocation(line: 215, column: 2, scope: !15167, inlinedAt: !16309)
!16315 = !DILocation(line: 95, column: 2, scope: !15181, inlinedAt: !16314)
!16316 = !DILocation(line: 834, column: 2, scope: !16271)
!16317 = distinct !DISubprogram(name: "z_pend_curr", scope: !2536, file: !2536, line: 840, type: !16318, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16320)
!16318 = !DISubroutineType(types: !16319)
!16319 = !{!107, !15136, !15125, !2459, !16021}
!16320 = !{!16321, !16322, !16323, !16324}
!16321 = !DILocalVariable(name: "lock", arg: 1, scope: !16317, file: !2536, line: 840, type: !15136)
!16322 = !DILocalVariable(name: "key", arg: 2, scope: !16317, file: !2536, line: 840, type: !15125)
!16323 = !DILocalVariable(name: "wait_q", arg: 3, scope: !16317, file: !2536, line: 841, type: !2459)
!16324 = !DILocalVariable(name: "timeout", arg: 4, scope: !16317, file: !2536, line: 841, type: !16021)
!16325 = !DILocation(line: 0, scope: !16317)
!16326 = !DILocation(line: 844, column: 20, scope: !16317)
!16327 = !DILocation(line: 844, column: 18, scope: !16317)
!16328 = !DILocation(line: 846, column: 2, scope: !16329)
!16329 = distinct !DILexicalBlock(scope: !16330, file: !2536, line: 846, column: 2)
!16330 = distinct !DILexicalBlock(scope: !16317, file: !2536, line: 846, column: 2)
!16331 = !DILocation(line: 846, column: 2, scope: !16330)
!16332 = !DILocation(line: 846, column: 2, scope: !16333)
!16333 = distinct !DILexicalBlock(scope: !16329, file: !2536, line: 846, column: 2)
!16334 = !DILocation(line: 0, scope: !15133, inlinedAt: !16335)
!16335 = distinct !DILocation(line: 856, column: 9, scope: !16317)
!16336 = !DILocation(line: 55, column: 2, scope: !15142, inlinedAt: !16337)
!16337 = distinct !DILocation(line: 145, column: 10, scope: !15133, inlinedAt: !16335)
!16338 = !DILocation(line: 0, scope: !15142, inlinedAt: !16337)
!16339 = !DILocation(line: 148, column: 2, scope: !15150, inlinedAt: !16335)
!16340 = !DILocation(line: 148, column: 2, scope: !15151, inlinedAt: !16335)
!16341 = !DILocation(line: 148, column: 2, scope: !15154, inlinedAt: !16335)
!16342 = !DILocation(line: 160, column: 2, scope: !15133, inlinedAt: !16335)
!16343 = !DILocation(line: 857, column: 14, scope: !16317)
!16344 = !DILocation(line: 857, column: 2, scope: !16317)
!16345 = !DILocation(line: 0, scope: !15820, inlinedAt: !16346)
!16346 = distinct !DILocation(line: 858, column: 2, scope: !16317)
!16347 = !DILocation(line: 225, column: 2, scope: !15827, inlinedAt: !16346)
!16348 = !DILocation(line: 225, column: 2, scope: !15828, inlinedAt: !16346)
!16349 = !DILocation(line: 225, column: 2, scope: !15831, inlinedAt: !16346)
!16350 = !DILocation(line: 0, scope: !15811, inlinedAt: !16351)
!16351 = distinct !DILocation(line: 859, column: 9, scope: !16317)
!16352 = !DILocation(line: 0, scope: !15820, inlinedAt: !16353)
!16353 = distinct !DILocation(line: 195, column: 2, scope: !15811, inlinedAt: !16351)
!16354 = !DILocation(line: 225, column: 2, scope: !15827, inlinedAt: !16353)
!16355 = !DILocation(line: 225, column: 2, scope: !15828, inlinedAt: !16353)
!16356 = !DILocation(line: 225, column: 2, scope: !15831, inlinedAt: !16353)
!16357 = !DILocation(line: 196, column: 9, scope: !15811, inlinedAt: !16351)
!16358 = !DILocation(line: 859, column: 2, scope: !16317)
!16359 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2536, file: !2536, line: 862, type: !16360, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16362)
!16360 = !DISubroutineType(types: !16361)
!16361 = !{!2428, !2459}
!16362 = !{!16363, !16364, !16365, !16367}
!16363 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16359, file: !2536, line: 862, type: !2459)
!16364 = !DILocalVariable(name: "thread", scope: !16359, file: !2536, line: 864, type: !2428)
!16365 = !DILocalVariable(name: "__i", scope: !16366, file: !2536, line: 866, type: !15125)
!16366 = distinct !DILexicalBlock(scope: !16359, file: !2536, line: 866, column: 2)
!16367 = !DILocalVariable(name: "__key", scope: !16366, file: !2536, line: 866, type: !15125)
!16368 = !DILocation(line: 0, scope: !16359)
!16369 = !DILocation(line: 0, scope: !16366)
!16370 = !DILocation(line: 0, scope: !15133, inlinedAt: !16371)
!16371 = distinct !DILocation(line: 866, column: 2, scope: !16366)
!16372 = !DILocation(line: 55, column: 2, scope: !15142, inlinedAt: !16373)
!16373 = distinct !DILocation(line: 145, column: 10, scope: !15133, inlinedAt: !16371)
!16374 = !DILocation(line: 0, scope: !15142, inlinedAt: !16373)
!16375 = !DILocation(line: 148, column: 2, scope: !15150, inlinedAt: !16371)
!16376 = !DILocation(line: 148, column: 2, scope: !15151, inlinedAt: !16371)
!16377 = !DILocation(line: 148, column: 2, scope: !15154, inlinedAt: !16371)
!16378 = !DILocation(line: 160, column: 2, scope: !15133, inlinedAt: !16371)
!16379 = !DILocation(line: 867, column: 12, scope: !16380)
!16380 = distinct !DILexicalBlock(scope: !16381, file: !2536, line: 866, column: 26)
!16381 = distinct !DILexicalBlock(scope: !16366, file: !2536, line: 866, column: 2)
!16382 = !DILocation(line: 869, column: 14, scope: !16383)
!16383 = distinct !DILexicalBlock(scope: !16380, file: !2536, line: 869, column: 7)
!16384 = !DILocation(line: 869, column: 7, scope: !16380)
!16385 = !DILocation(line: 870, column: 4, scope: !16386)
!16386 = distinct !DILexicalBlock(scope: !16383, file: !2536, line: 869, column: 23)
!16387 = !DILocation(line: 871, column: 3, scope: !16386)
!16388 = !DILocation(line: 0, scope: !15167, inlinedAt: !16389)
!16389 = distinct !DILocation(line: 866, column: 2, scope: !16381)
!16390 = !DILocation(line: 194, column: 2, scope: !15175, inlinedAt: !16389)
!16391 = !DILocation(line: 194, column: 2, scope: !15176, inlinedAt: !16389)
!16392 = !DILocation(line: 194, column: 2, scope: !15179, inlinedAt: !16389)
!16393 = !DILocation(line: 0, scope: !15181, inlinedAt: !16394)
!16394 = distinct !DILocation(line: 215, column: 2, scope: !15167, inlinedAt: !16389)
!16395 = !DILocation(line: 95, column: 2, scope: !15181, inlinedAt: !16394)
!16396 = !DILocation(line: 874, column: 2, scope: !16359)
!16397 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2536, file: !2536, line: 877, type: !16360, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16398)
!16398 = !{!16399, !16400, !16401, !16403}
!16399 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16397, file: !2536, line: 877, type: !2459)
!16400 = !DILocalVariable(name: "thread", scope: !16397, file: !2536, line: 879, type: !2428)
!16401 = !DILocalVariable(name: "__i", scope: !16402, file: !2536, line: 881, type: !15125)
!16402 = distinct !DILexicalBlock(scope: !16397, file: !2536, line: 881, column: 2)
!16403 = !DILocalVariable(name: "__key", scope: !16402, file: !2536, line: 881, type: !15125)
!16404 = !DILocation(line: 0, scope: !16397)
!16405 = !DILocation(line: 0, scope: !16402)
!16406 = !DILocation(line: 0, scope: !15133, inlinedAt: !16407)
!16407 = distinct !DILocation(line: 881, column: 2, scope: !16402)
!16408 = !DILocation(line: 55, column: 2, scope: !15142, inlinedAt: !16409)
!16409 = distinct !DILocation(line: 145, column: 10, scope: !15133, inlinedAt: !16407)
!16410 = !DILocation(line: 0, scope: !15142, inlinedAt: !16409)
!16411 = !DILocation(line: 148, column: 2, scope: !15150, inlinedAt: !16407)
!16412 = !DILocation(line: 148, column: 2, scope: !15151, inlinedAt: !16407)
!16413 = !DILocation(line: 148, column: 2, scope: !15154, inlinedAt: !16407)
!16414 = !DILocation(line: 160, column: 2, scope: !15133, inlinedAt: !16407)
!16415 = !DILocation(line: 882, column: 12, scope: !16416)
!16416 = distinct !DILexicalBlock(scope: !16417, file: !2536, line: 881, column: 26)
!16417 = distinct !DILexicalBlock(scope: !16402, file: !2536, line: 881, column: 2)
!16418 = !DILocation(line: 884, column: 14, scope: !16419)
!16419 = distinct !DILexicalBlock(scope: !16416, file: !2536, line: 884, column: 7)
!16420 = !DILocation(line: 884, column: 7, scope: !16416)
!16421 = !DILocation(line: 885, column: 4, scope: !16422)
!16422 = distinct !DILexicalBlock(scope: !16419, file: !2536, line: 884, column: 23)
!16423 = !DILocation(line: 886, column: 10, scope: !16422)
!16424 = !DILocation(line: 887, column: 3, scope: !16422)
!16425 = !DILocation(line: 0, scope: !15167, inlinedAt: !16426)
!16426 = distinct !DILocation(line: 881, column: 2, scope: !16417)
!16427 = !DILocation(line: 194, column: 2, scope: !15175, inlinedAt: !16426)
!16428 = !DILocation(line: 194, column: 2, scope: !15176, inlinedAt: !16426)
!16429 = !DILocation(line: 194, column: 2, scope: !15179, inlinedAt: !16426)
!16430 = !DILocation(line: 0, scope: !15181, inlinedAt: !16431)
!16431 = distinct !DILocation(line: 215, column: 2, scope: !15167, inlinedAt: !16426)
!16432 = !DILocation(line: 95, column: 2, scope: !15181, inlinedAt: !16431)
!16433 = !DILocation(line: 890, column: 2, scope: !16397)
!16434 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2536, file: !2536, line: 893, type: !15091, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16435)
!16435 = !{!16436}
!16436 = !DILocalVariable(name: "thread", arg: 1, scope: !16434, file: !2536, line: 893, type: !2428)
!16437 = !DILocation(line: 0, scope: !16434)
!16438 = !DILocation(line: 0, scope: !16242, inlinedAt: !16439)
!16439 = distinct !DILocation(line: 895, column: 2, scope: !16434)
!16440 = !DILocation(line: 0, scope: !16246, inlinedAt: !16439)
!16441 = !DILocation(line: 0, scope: !15133, inlinedAt: !16442)
!16442 = distinct !DILocation(line: 788, column: 2, scope: !16246, inlinedAt: !16439)
!16443 = !DILocation(line: 55, column: 2, scope: !15142, inlinedAt: !16444)
!16444 = distinct !DILocation(line: 145, column: 10, scope: !15133, inlinedAt: !16442)
!16445 = !DILocation(line: 0, scope: !15142, inlinedAt: !16444)
!16446 = !DILocation(line: 148, column: 2, scope: !15150, inlinedAt: !16442)
!16447 = !DILocation(line: 148, column: 2, scope: !15151, inlinedAt: !16442)
!16448 = !DILocation(line: 148, column: 2, scope: !15154, inlinedAt: !16442)
!16449 = !DILocation(line: 160, column: 2, scope: !15133, inlinedAt: !16442)
!16450 = !DILocation(line: 789, column: 3, scope: !16260, inlinedAt: !16439)
!16451 = !DILocation(line: 0, scope: !15167, inlinedAt: !16452)
!16452 = distinct !DILocation(line: 788, column: 2, scope: !16261, inlinedAt: !16439)
!16453 = !DILocation(line: 194, column: 2, scope: !15175, inlinedAt: !16452)
!16454 = !DILocation(line: 194, column: 2, scope: !15176, inlinedAt: !16452)
!16455 = !DILocation(line: 194, column: 2, scope: !15179, inlinedAt: !16452)
!16456 = !DILocation(line: 0, scope: !15181, inlinedAt: !16457)
!16457 = distinct !DILocation(line: 215, column: 2, scope: !15167, inlinedAt: !16452)
!16458 = !DILocation(line: 95, column: 2, scope: !15181, inlinedAt: !16457)
!16459 = !DILocation(line: 896, column: 8, scope: !16434)
!16460 = !DILocation(line: 897, column: 1, scope: !16434)
!16461 = distinct !DISubprogram(name: "z_set_prio", scope: !2536, file: !2536, line: 902, type: !15494, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16462)
!16462 = !{!16463, !16464, !16465, !16466, !16468}
!16463 = !DILocalVariable(name: "thread", arg: 1, scope: !16461, file: !2536, line: 902, type: !2428)
!16464 = !DILocalVariable(name: "prio", arg: 2, scope: !16461, file: !2536, line: 902, type: !107)
!16465 = !DILocalVariable(name: "need_sched", scope: !16461, file: !2536, line: 904, type: !145)
!16466 = !DILocalVariable(name: "__i", scope: !16467, file: !2536, line: 906, type: !15125)
!16467 = distinct !DILexicalBlock(scope: !16461, file: !2536, line: 906, column: 2)
!16468 = !DILocalVariable(name: "__key", scope: !16467, file: !2536, line: 906, type: !15125)
!16469 = !DILocation(line: 0, scope: !16461)
!16470 = !DILocation(line: 0, scope: !16467)
!16471 = !DILocation(line: 0, scope: !15133, inlinedAt: !16472)
!16472 = distinct !DILocation(line: 906, column: 2, scope: !16467)
!16473 = !DILocation(line: 55, column: 2, scope: !15142, inlinedAt: !16474)
!16474 = distinct !DILocation(line: 145, column: 10, scope: !15133, inlinedAt: !16472)
!16475 = !DILocation(line: 0, scope: !15142, inlinedAt: !16474)
!16476 = !DILocation(line: 148, column: 2, scope: !15150, inlinedAt: !16472)
!16477 = !DILocation(line: 148, column: 2, scope: !15151, inlinedAt: !16472)
!16478 = !DILocation(line: 148, column: 2, scope: !15154, inlinedAt: !16472)
!16479 = !DILocation(line: 160, column: 2, scope: !15133, inlinedAt: !16472)
!16480 = !DILocation(line: 907, column: 16, scope: !16481)
!16481 = distinct !DILexicalBlock(scope: !16482, file: !2536, line: 906, column: 26)
!16482 = distinct !DILexicalBlock(scope: !16467, file: !2536, line: 906, column: 2)
!16483 = !DILocation(line: 909, column: 7, scope: !16481)
!16484 = !DILocation(line: 0, scope: !15325, inlinedAt: !16485)
!16485 = distinct !DILocation(line: 912, column: 5, scope: !16486)
!16486 = distinct !DILexicalBlock(scope: !16487, file: !2536, line: 911, column: 63)
!16487 = distinct !DILexicalBlock(scope: !16488, file: !2536, line: 911, column: 8)
!16488 = distinct !DILexicalBlock(scope: !16489, file: !2536, line: 909, column: 19)
!16489 = distinct !DILexicalBlock(scope: !16481, file: !2536, line: 909, column: 7)
!16490 = !DILocation(line: 266, column: 28, scope: !15325, inlinedAt: !16485)
!16491 = !DILocation(line: 0, scope: !15333, inlinedAt: !16492)
!16492 = distinct !DILocation(line: 268, column: 3, scope: !15337, inlinedAt: !16485)
!16493 = !DILocation(line: 234, column: 2, scope: !15333, inlinedAt: !16492)
!16494 = !DILocation(line: 913, column: 23, scope: !16486)
!16495 = !DILocation(line: 0, scope: !15342, inlinedAt: !16496)
!16496 = distinct !DILocation(line: 914, column: 5, scope: !16486)
!16497 = !DILocation(line: 252, column: 28, scope: !15342, inlinedAt: !16496)
!16498 = !DILocation(line: 0, scope: !15349, inlinedAt: !16499)
!16499 = distinct !DILocation(line: 254, column: 3, scope: !15353, inlinedAt: !16496)
!16500 = !DILocation(line: 0, scope: !15356, inlinedAt: !16501)
!16501 = distinct !DILocation(line: 229, column: 2, scope: !15349, inlinedAt: !16499)
!16502 = !DILocation(line: 186, column: 2, scope: !15366, inlinedAt: !16501)
!16503 = !DILocation(line: 186, column: 2, scope: !15367, inlinedAt: !16501)
!16504 = !DILocation(line: 186, column: 2, scope: !15370, inlinedAt: !16501)
!16505 = !DILocation(line: 188, column: 2, scope: !15372, inlinedAt: !16501)
!16506 = !DILocation(line: 188, column: 2, scope: !15374, inlinedAt: !16501)
!16507 = !DILocation(line: 0, scope: !15372, inlinedAt: !16501)
!16508 = !DILocation(line: 189, column: 7, scope: !15377, inlinedAt: !16501)
!16509 = !DILocation(line: 189, column: 35, scope: !15377, inlinedAt: !16501)
!16510 = !DILocation(line: 189, column: 7, scope: !15378, inlinedAt: !16501)
!16511 = !DILocation(line: 190, column: 4, scope: !15382, inlinedAt: !16501)
!16512 = !DILocation(line: 192, column: 4, scope: !15382, inlinedAt: !16501)
!16513 = distinct !{!16513, !16505, !16514}
!16514 = !DILocation(line: 194, column: 2, scope: !15372, inlinedAt: !16501)
!16515 = !DILocation(line: 196, column: 2, scope: !15356, inlinedAt: !16501)
!16516 = !DILocation(line: 197, column: 1, scope: !15356, inlinedAt: !16501)
!16517 = !DILocation(line: 918, column: 4, scope: !16488)
!16518 = !DILocation(line: 919, column: 3, scope: !16488)
!16519 = !DILocation(line: 920, column: 22, scope: !16520)
!16520 = distinct !DILexicalBlock(scope: !16489, file: !2536, line: 919, column: 10)
!16521 = !DILocation(line: 0, scope: !15167, inlinedAt: !16522)
!16522 = distinct !DILocation(line: 906, column: 2, scope: !16482)
!16523 = !DILocation(line: 194, column: 2, scope: !15175, inlinedAt: !16522)
!16524 = !DILocation(line: 194, column: 2, scope: !15176, inlinedAt: !16522)
!16525 = !DILocation(line: 194, column: 2, scope: !15179, inlinedAt: !16522)
!16526 = !DILocation(line: 0, scope: !15181, inlinedAt: !16527)
!16527 = distinct !DILocation(line: 215, column: 2, scope: !15167, inlinedAt: !16522)
!16528 = !DILocation(line: 95, column: 2, scope: !15181, inlinedAt: !16527)
!16529 = !DILocation(line: 926, column: 2, scope: !16461)
!16530 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2536, file: !2536, line: 929, type: !16531, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16533)
!16531 = !DISubroutineType(types: !16532)
!16532 = !{null, !2428, !107}
!16533 = !{!16534, !16535, !16536}
!16534 = !DILocalVariable(name: "thread", arg: 1, scope: !16530, file: !2536, line: 929, type: !2428)
!16535 = !DILocalVariable(name: "prio", arg: 2, scope: !16530, file: !2536, line: 929, type: !107)
!16536 = !DILocalVariable(name: "need_sched", scope: !16530, file: !2536, line: 931, type: !145)
!16537 = !DILocation(line: 0, scope: !16530)
!16538 = !DILocation(line: 931, column: 20, scope: !16530)
!16539 = !DILocation(line: 935, column: 17, scope: !16540)
!16540 = distinct !DILexicalBlock(scope: !16530, file: !2536, line: 935, column: 6)
!16541 = !DILocation(line: 935, column: 20, scope: !16540)
!16542 = !DILocation(line: 935, column: 35, scope: !16540)
!16543 = !DILocation(line: 935, column: 48, scope: !16540)
!16544 = !DILocation(line: 935, column: 6, scope: !16530)
!16545 = !DILocation(line: 936, column: 3, scope: !16546)
!16546 = distinct !DILexicalBlock(scope: !16540, file: !2536, line: 935, column: 55)
!16547 = !DILocation(line: 937, column: 2, scope: !16546)
!16548 = !DILocation(line: 938, column: 1, scope: !16530)
!16549 = distinct !DISubprogram(name: "k_sched_lock", scope: !2536, file: !2536, line: 987, type: !3148, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16550)
!16550 = !{!16551, !16553}
!16551 = !DILocalVariable(name: "__i", scope: !16552, file: !2536, line: 989, type: !15125)
!16552 = distinct !DILexicalBlock(scope: !16549, file: !2536, line: 989, column: 2)
!16553 = !DILocalVariable(name: "__key", scope: !16552, file: !2536, line: 989, type: !15125)
!16554 = !DILocation(line: 0, scope: !16552)
!16555 = !DILocation(line: 0, scope: !15133, inlinedAt: !16556)
!16556 = distinct !DILocation(line: 989, column: 2, scope: !16552)
!16557 = !DILocation(line: 55, column: 2, scope: !15142, inlinedAt: !16558)
!16558 = distinct !DILocation(line: 145, column: 10, scope: !15133, inlinedAt: !16556)
!16559 = !DILocation(line: 0, scope: !15142, inlinedAt: !16558)
!16560 = !DILocation(line: 148, column: 2, scope: !15150, inlinedAt: !16556)
!16561 = !DILocation(line: 148, column: 2, scope: !15151, inlinedAt: !16556)
!16562 = !DILocation(line: 148, column: 2, scope: !15154, inlinedAt: !16556)
!16563 = !DILocation(line: 160, column: 2, scope: !15133, inlinedAt: !16556)
!16564 = !DILocation(line: 992, column: 3, scope: !16565)
!16565 = distinct !DILexicalBlock(scope: !16566, file: !2536, line: 989, column: 26)
!16566 = distinct !DILexicalBlock(scope: !16552, file: !2536, line: 989, column: 2)
!16567 = !DILocation(line: 0, scope: !15167, inlinedAt: !16568)
!16568 = distinct !DILocation(line: 989, column: 2, scope: !16566)
!16569 = !DILocation(line: 194, column: 2, scope: !15175, inlinedAt: !16568)
!16570 = !DILocation(line: 194, column: 2, scope: !15176, inlinedAt: !16568)
!16571 = !DILocation(line: 194, column: 2, scope: !15179, inlinedAt: !16568)
!16572 = !DILocation(line: 0, scope: !15181, inlinedAt: !16573)
!16573 = distinct !DILocation(line: 215, column: 2, scope: !15167, inlinedAt: !16568)
!16574 = !DILocation(line: 95, column: 2, scope: !15181, inlinedAt: !16573)
!16575 = !DILocation(line: 994, column: 1, scope: !16549)
!16576 = distinct !DISubprogram(name: "z_sched_lock", scope: !14293, file: !14293, line: 251, type: !3148, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !2236)
!16577 = !DILocation(line: 1031, column: 3, scope: !15860, inlinedAt: !16578)
!16578 = distinct !DILocation(line: 48, column: 10, scope: !15864, inlinedAt: !16579)
!16579 = distinct !DILocation(line: 253, column: 2, scope: !16580)
!16580 = distinct !DILexicalBlock(scope: !16581, file: !14293, line: 253, column: 2)
!16581 = distinct !DILexicalBlock(scope: !16576, file: !14293, line: 253, column: 2)
!16582 = !DILocation(line: 0, scope: !15860, inlinedAt: !16578)
!16583 = !DILocation(line: 48, column: 9, scope: !15864, inlinedAt: !16579)
!16584 = !DILocation(line: 253, column: 2, scope: !16581)
!16585 = !DILocation(line: 253, column: 2, scope: !16586)
!16586 = distinct !DILexicalBlock(scope: !16580, file: !14293, line: 253, column: 2)
!16587 = !DILocation(line: 254, column: 2, scope: !16588)
!16588 = distinct !DILexicalBlock(scope: !16589, file: !14293, line: 254, column: 2)
!16589 = distinct !DILexicalBlock(scope: !16576, file: !14293, line: 254, column: 2)
!16590 = !DILocation(line: 254, column: 2, scope: !16589)
!16591 = !DILocation(line: 254, column: 2, scope: !16592)
!16592 = distinct !DILexicalBlock(scope: !16588, file: !14293, line: 254, column: 2)
!16593 = !DILocation(line: 256, column: 2, scope: !16576)
!16594 = !DILocation(line: 258, column: 2, scope: !16595)
!16595 = distinct !DILexicalBlock(scope: !16576, file: !14293, line: 258, column: 2)
!16596 = !{i64 2155197322}
!16597 = !DILocation(line: 259, column: 1, scope: !16576)
!16598 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2536, file: !2536, line: 996, type: !3148, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16599)
!16599 = !{!16600, !16602}
!16600 = !DILocalVariable(name: "__i", scope: !16601, file: !2536, line: 998, type: !15125)
!16601 = distinct !DILexicalBlock(scope: !16598, file: !2536, line: 998, column: 2)
!16602 = !DILocalVariable(name: "__key", scope: !16601, file: !2536, line: 998, type: !15125)
!16603 = !DILocation(line: 0, scope: !16601)
!16604 = !DILocation(line: 0, scope: !15133, inlinedAt: !16605)
!16605 = distinct !DILocation(line: 998, column: 2, scope: !16601)
!16606 = !DILocation(line: 55, column: 2, scope: !15142, inlinedAt: !16607)
!16607 = distinct !DILocation(line: 145, column: 10, scope: !15133, inlinedAt: !16605)
!16608 = !DILocation(line: 0, scope: !15142, inlinedAt: !16607)
!16609 = !DILocation(line: 148, column: 2, scope: !15150, inlinedAt: !16605)
!16610 = !DILocation(line: 148, column: 2, scope: !15151, inlinedAt: !16605)
!16611 = !DILocation(line: 148, column: 2, scope: !15154, inlinedAt: !16605)
!16612 = !DILocation(line: 160, column: 2, scope: !15133, inlinedAt: !16605)
!16613 = !DILocation(line: 999, column: 3, scope: !16614)
!16614 = distinct !DILexicalBlock(scope: !16615, file: !2536, line: 999, column: 3)
!16615 = distinct !DILexicalBlock(scope: !16616, file: !2536, line: 999, column: 3)
!16616 = distinct !DILexicalBlock(scope: !16617, file: !2536, line: 998, column: 26)
!16617 = distinct !DILexicalBlock(scope: !16601, file: !2536, line: 998, column: 2)
!16618 = !DILocation(line: 999, column: 3, scope: !16615)
!16619 = !DILocation(line: 999, column: 3, scope: !16620)
!16620 = distinct !DILexicalBlock(scope: !16614, file: !2536, line: 999, column: 3)
!16621 = !DILocation(line: 1031, column: 3, scope: !15860, inlinedAt: !16622)
!16622 = distinct !DILocation(line: 48, column: 10, scope: !15864, inlinedAt: !16623)
!16623 = distinct !DILocation(line: 1000, column: 3, scope: !16624)
!16624 = distinct !DILexicalBlock(scope: !16625, file: !2536, line: 1000, column: 3)
!16625 = distinct !DILexicalBlock(scope: !16616, file: !2536, line: 1000, column: 3)
!16626 = !DILocation(line: 0, scope: !15860, inlinedAt: !16622)
!16627 = !DILocation(line: 48, column: 9, scope: !15864, inlinedAt: !16623)
!16628 = !DILocation(line: 1000, column: 3, scope: !16625)
!16629 = !DILocation(line: 1000, column: 3, scope: !16630)
!16630 = distinct !DILexicalBlock(scope: !16624, file: !2536, line: 1000, column: 3)
!16631 = !DILocation(line: 1002, column: 5, scope: !16616)
!16632 = !DILocation(line: 1002, column: 20, scope: !16616)
!16633 = !DILocation(line: 1002, column: 3, scope: !16616)
!16634 = !DILocation(line: 1003, column: 3, scope: !16616)
!16635 = !DILocation(line: 0, scope: !15167, inlinedAt: !16636)
!16636 = distinct !DILocation(line: 998, column: 2, scope: !16617)
!16637 = !DILocation(line: 194, column: 2, scope: !15175, inlinedAt: !16636)
!16638 = !DILocation(line: 194, column: 2, scope: !15176, inlinedAt: !16636)
!16639 = !DILocation(line: 194, column: 2, scope: !15179, inlinedAt: !16636)
!16640 = !DILocation(line: 0, scope: !15181, inlinedAt: !16641)
!16641 = distinct !DILocation(line: 215, column: 2, scope: !15167, inlinedAt: !16636)
!16642 = !DILocation(line: 95, column: 2, scope: !15181, inlinedAt: !16641)
!16643 = !DILocation(line: 1011, column: 2, scope: !16598)
!16644 = !DILocation(line: 1012, column: 1, scope: !16598)
!16645 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2536, file: !2536, line: 1014, type: !15482, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !2236)
!16646 = !DILocation(line: 1028, column: 25, scope: !16645)
!16647 = !DILocation(line: 1028, column: 2, scope: !16645)
!16648 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2536, file: !2536, line: 1155, type: !16649, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16651)
!16649 = !DISubroutineType(types: !16650)
!16650 = !{!145, !2457, !2457}
!16651 = !{!16652, !16653, !16654, !16655, !16656}
!16652 = !DILocalVariable(name: "a", arg: 1, scope: !16648, file: !2536, line: 1155, type: !2457)
!16653 = !DILocalVariable(name: "b", arg: 2, scope: !16648, file: !2536, line: 1155, type: !2457)
!16654 = !DILocalVariable(name: "thread_a", scope: !16648, file: !2536, line: 1157, type: !2428)
!16655 = !DILocalVariable(name: "thread_b", scope: !16648, file: !2536, line: 1157, type: !2428)
!16656 = !DILocalVariable(name: "cmp", scope: !16648, file: !2536, line: 1158, type: !904)
!16657 = !DILocation(line: 0, scope: !16648)
!16658 = !DILocation(line: 1160, column: 13, scope: !16648)
!16659 = !DILocation(line: 1161, column: 13, scope: !16648)
!16660 = !DILocation(line: 1163, column: 8, scope: !16648)
!16661 = !DILocation(line: 1165, column: 10, scope: !16662)
!16662 = distinct !DILexicalBlock(scope: !16648, file: !2536, line: 1165, column: 6)
!16663 = !DILocation(line: 1165, column: 6, scope: !16648)
!16664 = !DILocation(line: 1167, column: 17, scope: !16665)
!16665 = distinct !DILexicalBlock(scope: !16662, file: !2536, line: 1167, column: 13)
!16666 = !DILocation(line: 1167, column: 13, scope: !16662)
!16667 = !DILocation(line: 1170, column: 25, scope: !16668)
!16668 = distinct !DILexicalBlock(scope: !16665, file: !2536, line: 1169, column: 9)
!16669 = !DILocation(line: 1170, column: 52, scope: !16668)
!16670 = !DILocation(line: 1170, column: 35, scope: !16668)
!16671 = !DILocation(line: 1170, column: 3, scope: !16668)
!16672 = !DILocation(line: 0, scope: !16662)
!16673 = !DILocation(line: 1173, column: 1, scope: !16648)
!16674 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2536, file: !2536, line: 1175, type: !16675, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16690)
!16675 = !DISubroutineType(types: !16676)
!16676 = !{null, !16677, !2428}
!16677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16678, size: 32)
!16678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !16679, line: 37, size: 128, elements: !16680)
!16679 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16680 = !{!16681, !16689}
!16681 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !16678, file: !16679, line: 38, baseType: !16682, size: 96)
!16682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !335, line: 83, size: 96, elements: !16683)
!16683 = !{!16684, !16685, !16688}
!16684 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !16682, file: !335, line: 84, baseType: !2457, size: 32)
!16685 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !16682, file: !335, line: 85, baseType: !16686, size: 32, offset: 32)
!16686 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !335, line: 81, baseType: !16687)
!16687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16649, size: 32)
!16688 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !16682, file: !335, line: 86, baseType: !107, size: 32, offset: 64)
!16689 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !16678, file: !16679, line: 39, baseType: !107, size: 32, offset: 96)
!16690 = !{!16691, !16692, !16693, !16694, !16703}
!16691 = !DILocalVariable(name: "pq", arg: 1, scope: !16674, file: !2536, line: 1175, type: !16677)
!16692 = !DILocalVariable(name: "thread", arg: 2, scope: !16674, file: !2536, line: 1175, type: !2428)
!16693 = !DILocalVariable(name: "t", scope: !16674, file: !2536, line: 1177, type: !2428)
!16694 = !DILocalVariable(name: "__f", scope: !16695, file: !2536, line: 1190, type: !16698)
!16695 = distinct !DILexicalBlock(scope: !16696, file: !2536, line: 1190, column: 3)
!16696 = distinct !DILexicalBlock(scope: !16697, file: !2536, line: 1189, column: 27)
!16697 = distinct !DILexicalBlock(scope: !16674, file: !2536, line: 1189, column: 6)
!16698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !335, line: 155, size: 96, elements: !16699)
!16699 = !{!16700, !16701, !16702}
!16700 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !16698, file: !335, line: 156, baseType: !2531, size: 32)
!16701 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !16698, file: !335, line: 157, baseType: !194, size: 32, offset: 32)
!16702 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !16698, file: !335, line: 158, baseType: !904, size: 32, offset: 64)
!16703 = !DILocalVariable(name: "n", scope: !16704, file: !2536, line: 1190, type: !2457)
!16704 = distinct !DILexicalBlock(scope: !16705, file: !2536, line: 1190, column: 3)
!16705 = distinct !DILexicalBlock(scope: !16695, file: !2536, line: 1190, column: 3)
!16706 = !DILocation(line: 0, scope: !16674)
!16707 = !DILocation(line: 1179, column: 2, scope: !16708)
!16708 = distinct !DILexicalBlock(scope: !16709, file: !2536, line: 1179, column: 2)
!16709 = distinct !DILexicalBlock(scope: !16674, file: !2536, line: 1179, column: 2)
!16710 = !DILocation(line: 1179, column: 2, scope: !16709)
!16711 = !DILocation(line: 1179, column: 2, scope: !16712)
!16712 = distinct !DILexicalBlock(scope: !16708, file: !2536, line: 1179, column: 2)
!16713 = !DILocation(line: 1181, column: 31, scope: !16674)
!16714 = !DILocation(line: 1181, column: 45, scope: !16674)
!16715 = !DILocation(line: 1181, column: 15, scope: !16674)
!16716 = !DILocation(line: 1181, column: 25, scope: !16674)
!16717 = !DILocation(line: 1189, column: 11, scope: !16697)
!16718 = !DILocation(line: 1189, column: 7, scope: !16697)
!16719 = !DILocation(line: 1189, column: 6, scope: !16674)
!16720 = !DILocation(line: 1190, column: 3, scope: !16695)
!16721 = !DILocation(line: 1190, column: 3, scope: !16704)
!16722 = !DILocation(line: 0, scope: !16704)
!16723 = !DILocation(line: 1190, column: 3, scope: !16705)
!16724 = !DILocation(line: 1193, column: 2, scope: !16696)
!16725 = !DILocation(line: 1191, column: 42, scope: !16726)
!16726 = distinct !DILexicalBlock(scope: !16705, file: !2536, line: 1190, column: 54)
!16727 = !DILocation(line: 1191, column: 12, scope: !16726)
!16728 = !DILocation(line: 1191, column: 22, scope: !16726)
!16729 = distinct !{!16729, !16720, !16730}
!16730 = !DILocation(line: 1192, column: 3, scope: !16695)
!16731 = !DILocation(line: 1195, column: 17, scope: !16674)
!16732 = !DILocation(line: 1195, column: 37, scope: !16674)
!16733 = !DILocation(line: 1195, column: 2, scope: !16674)
!16734 = !DILocation(line: 1196, column: 1, scope: !16674)
!16735 = !DISubprogram(name: "z_rb_foreach_next", scope: !335, file: !335, line: 176, type: !16736, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2236)
!16736 = !DISubroutineType(types: !16737)
!16737 = !{!2457, !16738, !16739}
!16738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16682, size: 32)
!16739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16698, size: 32)
!16740 = !DISubprogram(name: "rb_insert", scope: !335, file: !335, line: 105, type: !16741, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2236)
!16741 = !DISubroutineType(types: !16742)
!16742 = !{null, !16738, !2457}
!16743 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2536, file: !2536, line: 1198, type: !16675, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16744)
!16744 = !{!16745, !16746}
!16745 = !DILocalVariable(name: "pq", arg: 1, scope: !16743, file: !2536, line: 1198, type: !16677)
!16746 = !DILocalVariable(name: "thread", arg: 2, scope: !16743, file: !2536, line: 1198, type: !2428)
!16747 = !DILocation(line: 0, scope: !16743)
!16748 = !DILocation(line: 1200, column: 2, scope: !16749)
!16749 = distinct !DILexicalBlock(scope: !16750, file: !2536, line: 1200, column: 2)
!16750 = distinct !DILexicalBlock(scope: !16743, file: !2536, line: 1200, column: 2)
!16751 = !DILocation(line: 1200, column: 2, scope: !16750)
!16752 = !DILocation(line: 1200, column: 2, scope: !16753)
!16753 = distinct !DILexicalBlock(scope: !16749, file: !2536, line: 1200, column: 2)
!16754 = !DILocation(line: 1202, column: 17, scope: !16743)
!16755 = !DILocation(line: 1202, column: 37, scope: !16743)
!16756 = !DILocation(line: 1202, column: 2, scope: !16743)
!16757 = !DILocation(line: 1204, column: 16, scope: !16758)
!16758 = distinct !DILexicalBlock(scope: !16743, file: !2536, line: 1204, column: 6)
!16759 = !DILocation(line: 1204, column: 7, scope: !16758)
!16760 = !DILocation(line: 1204, column: 6, scope: !16743)
!16761 = !DILocation(line: 1205, column: 7, scope: !16762)
!16762 = distinct !DILexicalBlock(scope: !16758, file: !2536, line: 1204, column: 22)
!16763 = !DILocation(line: 1205, column: 22, scope: !16762)
!16764 = !DILocation(line: 1206, column: 2, scope: !16762)
!16765 = !DILocation(line: 1207, column: 1, scope: !16743)
!16766 = !DISubprogram(name: "rb_remove", scope: !335, file: !335, line: 110, type: !16741, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2236)
!16767 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2536, file: !2536, line: 1209, type: !16768, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16770)
!16768 = !DISubroutineType(types: !16769)
!16769 = !{!2428, !16677}
!16770 = !{!16771, !16772, !16773}
!16771 = !DILocalVariable(name: "pq", arg: 1, scope: !16767, file: !2536, line: 1209, type: !16677)
!16772 = !DILocalVariable(name: "thread", scope: !16767, file: !2536, line: 1211, type: !2428)
!16773 = !DILocalVariable(name: "n", scope: !16767, file: !2536, line: 1212, type: !2457)
!16774 = !DILocation(line: 0, scope: !16767)
!16775 = !DILocation(line: 1212, column: 37, scope: !16767)
!16776 = !DILocation(line: 1212, column: 21, scope: !16767)
!16777 = !DILocation(line: 1217, column: 2, scope: !16767)
!16778 = distinct !DISubprogram(name: "rb_get_min", scope: !335, file: !335, line: 115, type: !16779, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16781)
!16779 = !DISubroutineType(types: !16780)
!16780 = !{!2457, !16738}
!16781 = !{!16782}
!16782 = !DILocalVariable(name: "tree", arg: 1, scope: !16778, file: !335, line: 115, type: !16738)
!16783 = !DILocation(line: 0, scope: !16778)
!16784 = !DILocation(line: 117, column: 9, scope: !16778)
!16785 = !DILocation(line: 117, column: 2, scope: !16778)
!16786 = !DISubprogram(name: "z_rb_get_minmax", scope: !335, file: !335, line: 100, type: !16787, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2236)
!16787 = !DISubroutineType(types: !16788)
!16788 = !{!2457, !16738, !195}
!16789 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2536, file: !2536, line: 1246, type: !16790, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16798)
!16790 = !DISubroutineType(types: !16791)
!16791 = !{!2428, !16792}
!16792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16793, size: 32)
!16793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !16679, line: 53, size: 2080, elements: !16794)
!16794 = !{!16795, !16797}
!16795 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !16793, file: !16679, line: 54, baseType: !16796, size: 2048)
!16796 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2464, size: 2048, elements: !394)
!16797 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !16793, file: !16679, line: 55, baseType: !32, size: 32, offset: 2048)
!16798 = !{!16799, !16800, !16801, !16802}
!16799 = !DILocalVariable(name: "pq", arg: 1, scope: !16789, file: !2536, line: 1246, type: !16792)
!16800 = !DILocalVariable(name: "thread", scope: !16789, file: !2536, line: 1252, type: !2428)
!16801 = !DILocalVariable(name: "l", scope: !16789, file: !2536, line: 1253, type: !15359)
!16802 = !DILocalVariable(name: "n", scope: !16789, file: !2536, line: 1254, type: !2532)
!16803 = !DILocation(line: 0, scope: !16789)
!16804 = !DILocation(line: 1248, column: 11, scope: !16805)
!16805 = distinct !DILexicalBlock(scope: !16789, file: !2536, line: 1248, column: 6)
!16806 = !DILocation(line: 1248, column: 7, scope: !16805)
!16807 = !DILocation(line: 1248, column: 6, scope: !16789)
!16808 = !DILocation(line: 1253, column: 31, scope: !16789)
!16809 = !DILocation(line: 1253, column: 20, scope: !16789)
!16810 = !DILocation(line: 1254, column: 19, scope: !16789)
!16811 = !DILocation(line: 1260, column: 1, scope: !16789)
!16812 = distinct !DISubprogram(name: "z_unpend_all", scope: !2536, file: !2536, line: 1262, type: !16813, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16815)
!16813 = !DISubroutineType(types: !16814)
!16814 = !{!107, !2459}
!16815 = !{!16816, !16817, !16818}
!16816 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16812, file: !2536, line: 1262, type: !2459)
!16817 = !DILocalVariable(name: "need_sched", scope: !16812, file: !2536, line: 1264, type: !107)
!16818 = !DILocalVariable(name: "thread", scope: !16812, file: !2536, line: 1265, type: !2428)
!16819 = !DILocation(line: 0, scope: !16812)
!16820 = !DILocation(line: 1267, column: 19, scope: !16812)
!16821 = !DILocation(line: 1267, column: 41, scope: !16812)
!16822 = !DILocation(line: 1267, column: 2, scope: !16812)
!16823 = !DILocation(line: 1268, column: 3, scope: !16824)
!16824 = distinct !DILexicalBlock(scope: !16812, file: !2536, line: 1267, column: 50)
!16825 = !DILocation(line: 1269, column: 3, scope: !16824)
!16826 = distinct !{!16826, !16822, !16827}
!16827 = !DILocation(line: 1271, column: 2, scope: !16812)
!16828 = !DILocation(line: 1273, column: 2, scope: !16812)
!16829 = distinct !DISubprogram(name: "z_waitq_head", scope: !14654, file: !14654, line: 52, type: !16360, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16830)
!16830 = !{!16831}
!16831 = !DILocalVariable(name: "w", arg: 1, scope: !16829, file: !14654, line: 52, type: !2459)
!16832 = !DILocation(line: 0, scope: !16829)
!16833 = !DILocation(line: 54, column: 52, scope: !16829)
!16834 = !DILocation(line: 54, column: 28, scope: !16829)
!16835 = !DILocation(line: 54, column: 9, scope: !16829)
!16836 = !DILocation(line: 54, column: 2, scope: !16829)
!16837 = distinct !DISubprogram(name: "init_ready_q", scope: !2536, file: !2536, line: 1276, type: !16838, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16845)
!16838 = !DISubroutineType(types: !16839)
!16839 = !{null, !16840}
!16840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16841, size: 32)
!16841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !345, line: 83, size: 96, elements: !16842)
!16842 = !{!16843, !16844}
!16843 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !16841, file: !345, line: 86, baseType: !2428, size: 32)
!16844 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !16841, file: !345, line: 90, baseType: !2464, size: 64, offset: 32)
!16845 = !{!16846}
!16846 = !DILocalVariable(name: "rq", arg: 1, scope: !16837, file: !2536, line: 1276, type: !16840)
!16847 = !DILocation(line: 0, scope: !16837)
!16848 = !DILocation(line: 1289, column: 22, scope: !16837)
!16849 = !DILocation(line: 1289, column: 2, scope: !16837)
!16850 = !DILocation(line: 1291, column: 1, scope: !16837)
!16851 = distinct !DISubprogram(name: "sys_dlist_init", scope: !319, file: !319, line: 197, type: !16852, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16854)
!16852 = !DISubroutineType(types: !16853)
!16853 = !{null, !15359}
!16854 = !{!16855}
!16855 = !DILocalVariable(name: "list", arg: 1, scope: !16851, file: !319, line: 197, type: !15359)
!16856 = !DILocation(line: 0, scope: !16851)
!16857 = !DILocation(line: 199, column: 8, scope: !16851)
!16858 = !DILocation(line: 199, column: 13, scope: !16851)
!16859 = !DILocation(line: 200, column: 8, scope: !16851)
!16860 = !DILocation(line: 200, column: 13, scope: !16851)
!16861 = !DILocation(line: 201, column: 1, scope: !16851)
!16862 = distinct !DISubprogram(name: "z_sched_init", scope: !2536, file: !2536, line: 1293, type: !3148, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !2236)
!16863 = !DILocation(line: 1302, column: 2, scope: !16862)
!16864 = !DILocation(line: 1306, column: 2, scope: !16862)
!16865 = !DILocation(line: 1309, column: 1, scope: !16862)
!16866 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2536, file: !2536, line: 1311, type: !16867, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16870)
!16867 = !DISubroutineType(types: !16868)
!16868 = !{!107, !16869}
!16869 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !309, line: 347, baseType: !2428)
!16870 = !{!16871}
!16871 = !DILocalVariable(name: "thread", arg: 1, scope: !16866, file: !2536, line: 1311, type: !16869)
!16872 = !DILocation(line: 0, scope: !16866)
!16873 = !DILocation(line: 1313, column: 22, scope: !16866)
!16874 = !DILocation(line: 1313, column: 9, scope: !16866)
!16875 = !DILocation(line: 1313, column: 2, scope: !16866)
!16876 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2536, file: !2536, line: 1325, type: !16877, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16879)
!16877 = !DISubroutineType(types: !16878)
!16878 = !{null, !16869, !107}
!16879 = !{!16880, !16881, !16882}
!16880 = !DILocalVariable(name: "thread", arg: 1, scope: !16876, file: !2536, line: 1325, type: !16869)
!16881 = !DILocalVariable(name: "prio", arg: 2, scope: !16876, file: !2536, line: 1325, type: !107)
!16882 = !DILocalVariable(name: "th", scope: !16876, file: !2536, line: 1334, type: !2428)
!16883 = !DILocation(line: 0, scope: !16876)
!16884 = !DILocation(line: 1331, column: 2, scope: !16885)
!16885 = distinct !DILexicalBlock(scope: !16886, file: !2536, line: 1331, column: 2)
!16886 = distinct !DILexicalBlock(scope: !16887, file: !2536, line: 1331, column: 2)
!16887 = distinct !DILexicalBlock(scope: !16876, file: !2536, line: 1331, column: 2)
!16888 = !DILocation(line: 1331, column: 2, scope: !16889)
!16889 = distinct !DILexicalBlock(scope: !16885, file: !2536, line: 1331, column: 2)
!16890 = !DILocation(line: 1031, column: 3, scope: !15860, inlinedAt: !16891)
!16891 = distinct !DILocation(line: 48, column: 10, scope: !15864, inlinedAt: !16892)
!16892 = distinct !DILocation(line: 1332, column: 2, scope: !16893)
!16893 = distinct !DILexicalBlock(scope: !16894, file: !2536, line: 1332, column: 2)
!16894 = distinct !DILexicalBlock(scope: !16876, file: !2536, line: 1332, column: 2)
!16895 = !DILocation(line: 0, scope: !15860, inlinedAt: !16891)
!16896 = !DILocation(line: 48, column: 9, scope: !15864, inlinedAt: !16892)
!16897 = !DILocation(line: 1332, column: 2, scope: !16894)
!16898 = !DILocation(line: 1332, column: 2, scope: !16899)
!16899 = distinct !DILexicalBlock(scope: !16893, file: !2536, line: 1332, column: 2)
!16900 = !DILocation(line: 1336, column: 2, scope: !16876)
!16901 = !DILocation(line: 1337, column: 1, scope: !16876)
!16902 = distinct !DISubprogram(name: "k_can_yield", scope: !2536, file: !2536, line: 1384, type: !7371, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !2236)
!16903 = !DILocation(line: 1386, column: 11, scope: !16902)
!16904 = !DILocation(line: 1386, column: 29, scope: !16902)
!16905 = !DILocation(line: 1386, column: 32, scope: !16902)
!16906 = !DILocation(line: 1386, column: 46, scope: !16902)
!16907 = !DILocation(line: 1387, column: 28, scope: !16902)
!16908 = !DILocation(line: 1387, column: 4, scope: !16902)
!16909 = !DILocation(line: 1386, column: 2, scope: !16902)
!16910 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !406, file: !406, line: 989, type: !7371, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !2236)
!16911 = !DILocation(line: 993, column: 10, scope: !16910)
!16912 = !DILocation(line: 993, column: 2, scope: !16910)
!16913 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2536, file: !2536, line: 1390, type: !3148, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16914)
!16914 = !{!16915}
!16915 = !DILocalVariable(name: "key", scope: !16913, file: !2536, line: 1396, type: !15125)
!16916 = !DILocation(line: 1031, column: 3, scope: !15860, inlinedAt: !16917)
!16917 = distinct !DILocation(line: 48, column: 10, scope: !15864, inlinedAt: !16918)
!16918 = distinct !DILocation(line: 1392, column: 2, scope: !16919)
!16919 = distinct !DILexicalBlock(scope: !16920, file: !2536, line: 1392, column: 2)
!16920 = distinct !DILexicalBlock(scope: !16913, file: !2536, line: 1392, column: 2)
!16921 = !DILocation(line: 0, scope: !15860, inlinedAt: !16917)
!16922 = !DILocation(line: 48, column: 9, scope: !15864, inlinedAt: !16918)
!16923 = !DILocation(line: 1392, column: 2, scope: !16920)
!16924 = !DILocation(line: 1392, column: 2, scope: !16925)
!16925 = distinct !DILexicalBlock(scope: !16919, file: !2536, line: 1392, column: 2)
!16926 = !DILocation(line: 0, scope: !15133, inlinedAt: !16927)
!16927 = distinct !DILocation(line: 1396, column: 25, scope: !16913)
!16928 = !DILocation(line: 55, column: 2, scope: !15142, inlinedAt: !16929)
!16929 = distinct !DILocation(line: 145, column: 10, scope: !15133, inlinedAt: !16927)
!16930 = !DILocation(line: 0, scope: !15142, inlinedAt: !16929)
!16931 = !DILocation(line: 148, column: 2, scope: !15150, inlinedAt: !16927)
!16932 = !DILocation(line: 148, column: 2, scope: !15151, inlinedAt: !16927)
!16933 = !DILocation(line: 148, column: 2, scope: !15154, inlinedAt: !16927)
!16934 = !DILocation(line: 160, column: 2, scope: !15133, inlinedAt: !16927)
!16935 = !DILocation(line: 0, scope: !16913)
!16936 = !DILocation(line: 1400, column: 18, scope: !16937)
!16937 = distinct !DILexicalBlock(scope: !16938, file: !2536, line: 1399, column: 36)
!16938 = distinct !DILexicalBlock(scope: !16913, file: !2536, line: 1398, column: 6)
!16939 = !DILocation(line: 0, scope: !15325, inlinedAt: !16940)
!16940 = distinct !DILocation(line: 1400, column: 3, scope: !16937)
!16941 = !DILocation(line: 266, column: 15, scope: !15325, inlinedAt: !16940)
!16942 = !DILocation(line: 266, column: 28, scope: !15325, inlinedAt: !16940)
!16943 = !DILocation(line: 0, scope: !15333, inlinedAt: !16944)
!16944 = distinct !DILocation(line: 268, column: 3, scope: !15337, inlinedAt: !16940)
!16945 = !DILocation(line: 234, column: 2, scope: !15333, inlinedAt: !16944)
!16946 = !DILocation(line: 1402, column: 15, scope: !16913)
!16947 = !DILocation(line: 0, scope: !15342, inlinedAt: !16948)
!16948 = distinct !DILocation(line: 1402, column: 2, scope: !16913)
!16949 = !DILocation(line: 252, column: 15, scope: !15342, inlinedAt: !16948)
!16950 = !DILocation(line: 252, column: 28, scope: !15342, inlinedAt: !16948)
!16951 = !DILocation(line: 0, scope: !15349, inlinedAt: !16952)
!16952 = distinct !DILocation(line: 254, column: 3, scope: !15353, inlinedAt: !16948)
!16953 = !DILocation(line: 0, scope: !15356, inlinedAt: !16954)
!16954 = distinct !DILocation(line: 229, column: 2, scope: !15349, inlinedAt: !16952)
!16955 = !DILocation(line: 186, column: 2, scope: !15366, inlinedAt: !16954)
!16956 = !DILocation(line: 186, column: 2, scope: !15367, inlinedAt: !16954)
!16957 = !DILocation(line: 186, column: 2, scope: !15370, inlinedAt: !16954)
!16958 = !DILocation(line: 188, column: 2, scope: !15372, inlinedAt: !16954)
!16959 = !DILocation(line: 188, column: 2, scope: !15374, inlinedAt: !16954)
!16960 = !DILocation(line: 0, scope: !15372, inlinedAt: !16954)
!16961 = !DILocation(line: 189, column: 7, scope: !15377, inlinedAt: !16954)
!16962 = !DILocation(line: 189, column: 35, scope: !15377, inlinedAt: !16954)
!16963 = !DILocation(line: 189, column: 7, scope: !15378, inlinedAt: !16954)
!16964 = !DILocation(line: 191, column: 21, scope: !15382, inlinedAt: !16954)
!16965 = !DILocation(line: 190, column: 4, scope: !15382, inlinedAt: !16954)
!16966 = !DILocation(line: 192, column: 4, scope: !15382, inlinedAt: !16954)
!16967 = distinct !{!16967, !16958, !16968}
!16968 = !DILocation(line: 194, column: 2, scope: !15372, inlinedAt: !16954)
!16969 = !DILocation(line: 196, column: 37, scope: !15356, inlinedAt: !16954)
!16970 = !DILocation(line: 196, column: 2, scope: !15356, inlinedAt: !16954)
!16971 = !DILocation(line: 197, column: 1, scope: !15356, inlinedAt: !16954)
!16972 = !DILocation(line: 1403, column: 2, scope: !16913)
!16973 = !DILocation(line: 0, scope: !15811, inlinedAt: !16974)
!16974 = distinct !DILocation(line: 1404, column: 2, scope: !16913)
!16975 = !DILocation(line: 0, scope: !15820, inlinedAt: !16976)
!16976 = distinct !DILocation(line: 195, column: 2, scope: !15811, inlinedAt: !16974)
!16977 = !DILocation(line: 225, column: 2, scope: !15827, inlinedAt: !16976)
!16978 = !DILocation(line: 225, column: 2, scope: !15828, inlinedAt: !16976)
!16979 = !DILocation(line: 225, column: 2, scope: !15831, inlinedAt: !16976)
!16980 = !DILocation(line: 196, column: 9, scope: !15811, inlinedAt: !16974)
!16981 = !DILocation(line: 1405, column: 1, scope: !16913)
!16982 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2536, file: !2536, line: 1459, type: !16983, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16985)
!16983 = !DISubroutineType(types: !16984)
!16984 = !{!904, !16021}
!16985 = !{!16986, !16987, !16988}
!16986 = !DILocalVariable(name: "timeout", arg: 1, scope: !16982, file: !2536, line: 1459, type: !16021)
!16987 = !DILocalVariable(name: "ticks", scope: !16982, file: !2536, line: 1461, type: !564)
!16988 = !DILocalVariable(name: "ret", scope: !16982, file: !2536, line: 1480, type: !904)
!16989 = !DILocation(line: 0, scope: !16982)
!16990 = !DILocation(line: 1031, column: 3, scope: !15860, inlinedAt: !16991)
!16991 = distinct !DILocation(line: 48, column: 10, scope: !15864, inlinedAt: !16992)
!16992 = distinct !DILocation(line: 1463, column: 2, scope: !16993)
!16993 = distinct !DILexicalBlock(scope: !16994, file: !2536, line: 1463, column: 2)
!16994 = distinct !DILexicalBlock(scope: !16982, file: !2536, line: 1463, column: 2)
!16995 = !DILocation(line: 0, scope: !15860, inlinedAt: !16991)
!16996 = !DILocation(line: 48, column: 9, scope: !15864, inlinedAt: !16992)
!16997 = !DILocation(line: 1463, column: 2, scope: !16994)
!16998 = !DILocation(line: 1463, column: 2, scope: !16999)
!16999 = distinct !DILexicalBlock(scope: !16993, file: !2536, line: 1463, column: 2)
!17000 = !DILocation(line: 1468, column: 6, scope: !17001)
!17001 = distinct !DILexicalBlock(scope: !16982, file: !2536, line: 1468, column: 6)
!17002 = !DILocation(line: 1468, column: 6, scope: !16982)
!17003 = !DILocation(line: 1469, column: 20, scope: !17004)
!17004 = distinct !DILexicalBlock(scope: !17001, file: !2536, line: 1468, column: 40)
!17005 = !DILocation(line: 1469, column: 3, scope: !17004)
!17006 = !DILocation(line: 1473, column: 3, scope: !17004)
!17007 = !DILocation(line: 1478, column: 10, scope: !16982)
!17008 = !DILocation(line: 1480, column: 16, scope: !16982)
!17009 = !DILocation(line: 1485, column: 1, scope: !16982)
!17010 = distinct !DISubprogram(name: "k_thread_suspend", scope: !4476, file: !4476, line: 310, type: !17011, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !17013)
!17011 = !DISubroutineType(types: !17012)
!17012 = !{null, !16869}
!17013 = !{!17014}
!17014 = !DILocalVariable(name: "thread", arg: 1, scope: !17010, file: !4476, line: 310, type: !16869)
!17015 = !DILocation(line: 0, scope: !17010)
!17016 = !DILocation(line: 319, column: 2, scope: !17017)
!17017 = distinct !DILexicalBlock(scope: !17010, file: !4476, line: 319, column: 2)
!17018 = !{i64 2155113480}
!17019 = !DILocation(line: 320, column: 2, scope: !17010)
!17020 = !DILocation(line: 321, column: 1, scope: !17010)
!17021 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2536, file: !2536, line: 1415, type: !17022, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !17024)
!17022 = !DISubroutineType(types: !17023)
!17023 = !{!904, !564}
!17024 = !{!17025, !17026, !17027, !17028}
!17025 = !DILocalVariable(name: "ticks", arg: 1, scope: !17021, file: !2536, line: 1415, type: !564)
!17026 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !17021, file: !2536, line: 1418, type: !152)
!17027 = !DILocalVariable(name: "timeout", scope: !17021, file: !2536, line: 1430, type: !16021)
!17028 = !DILocalVariable(name: "key", scope: !17021, file: !2536, line: 1437, type: !15125)
!17029 = !DILocation(line: 0, scope: !17021)
!17030 = !DILocation(line: 1031, column: 3, scope: !15860, inlinedAt: !17031)
!17031 = distinct !DILocation(line: 48, column: 10, scope: !15864, inlinedAt: !17032)
!17032 = distinct !DILocation(line: 1420, column: 2, scope: !17033)
!17033 = distinct !DILexicalBlock(scope: !17034, file: !2536, line: 1420, column: 2)
!17034 = distinct !DILexicalBlock(scope: !17021, file: !2536, line: 1420, column: 2)
!17035 = !DILocation(line: 0, scope: !15860, inlinedAt: !17031)
!17036 = !DILocation(line: 48, column: 9, scope: !15864, inlinedAt: !17032)
!17037 = !DILocation(line: 1420, column: 2, scope: !17034)
!17038 = !DILocation(line: 1420, column: 2, scope: !17039)
!17039 = distinct !DILexicalBlock(scope: !17033, file: !2536, line: 1420, column: 2)
!17040 = !DILocation(line: 1425, column: 12, scope: !17041)
!17041 = distinct !DILexicalBlock(scope: !17021, file: !2536, line: 1425, column: 6)
!17042 = !DILocation(line: 1425, column: 6, scope: !17021)
!17043 = !DILocation(line: 1426, column: 3, scope: !17044)
!17044 = distinct !DILexicalBlock(scope: !17041, file: !2536, line: 1425, column: 18)
!17045 = !DILocation(line: 1427, column: 3, scope: !17044)
!17046 = !DILocation(line: 1431, column: 24, scope: !17047)
!17047 = distinct !DILexicalBlock(scope: !17021, file: !2536, line: 1431, column: 6)
!17048 = !DILocation(line: 1431, column: 6, scope: !17021)
!17049 = !DILocation(line: 1432, column: 35, scope: !17050)
!17050 = distinct !DILexicalBlock(scope: !17047, file: !2536, line: 1431, column: 30)
!17051 = !DILocation(line: 1432, column: 27, scope: !17050)
!17052 = !DILocation(line: 1433, column: 2, scope: !17050)
!17053 = !DILocation(line: 1434, column: 27, scope: !17054)
!17054 = distinct !DILexicalBlock(scope: !17047, file: !2536, line: 1433, column: 9)
!17055 = !DILocation(line: 0, scope: !17047)
!17056 = !DILocation(line: 0, scope: !15133, inlinedAt: !17057)
!17057 = distinct !DILocation(line: 1437, column: 25, scope: !17021)
!17058 = !DILocation(line: 55, column: 2, scope: !15142, inlinedAt: !17059)
!17059 = distinct !DILocation(line: 145, column: 10, scope: !15133, inlinedAt: !17057)
!17060 = !DILocation(line: 0, scope: !15142, inlinedAt: !17059)
!17061 = !DILocation(line: 148, column: 2, scope: !15150, inlinedAt: !17057)
!17062 = !DILocation(line: 148, column: 2, scope: !15151, inlinedAt: !17057)
!17063 = !DILocation(line: 148, column: 2, scope: !15154, inlinedAt: !17057)
!17064 = !DILocation(line: 160, column: 2, scope: !15133, inlinedAt: !17057)
!17065 = !DILocation(line: 1440, column: 20, scope: !17021)
!17066 = !DILocation(line: 1440, column: 18, scope: !17021)
!17067 = !DILocation(line: 1442, column: 2, scope: !17021)
!17068 = !DILocation(line: 1443, column: 23, scope: !17021)
!17069 = !DILocation(line: 1443, column: 2, scope: !17021)
!17070 = !DILocation(line: 1444, column: 29, scope: !17021)
!17071 = !DILocation(line: 1444, column: 2, scope: !17021)
!17072 = !DILocation(line: 0, scope: !15811, inlinedAt: !17073)
!17073 = distinct !DILocation(line: 1446, column: 8, scope: !17021)
!17074 = !DILocation(line: 0, scope: !15820, inlinedAt: !17075)
!17075 = distinct !DILocation(line: 195, column: 2, scope: !15811, inlinedAt: !17073)
!17076 = !DILocation(line: 225, column: 2, scope: !15827, inlinedAt: !17075)
!17077 = !DILocation(line: 225, column: 2, scope: !15828, inlinedAt: !17075)
!17078 = !DILocation(line: 225, column: 2, scope: !15831, inlinedAt: !17075)
!17079 = !DILocation(line: 196, column: 9, scope: !15811, inlinedAt: !17073)
!17080 = !DILocation(line: 1448, column: 2, scope: !17081)
!17081 = distinct !DILexicalBlock(scope: !17082, file: !2536, line: 1448, column: 2)
!17082 = distinct !DILexicalBlock(scope: !17021, file: !2536, line: 1448, column: 2)
!17083 = !DILocation(line: 1448, column: 2, scope: !17082)
!17084 = !DILocation(line: 1448, column: 2, scope: !17085)
!17085 = distinct !DILexicalBlock(scope: !17081, file: !2536, line: 1448, column: 2)
!17086 = !DILocation(line: 1450, column: 10, scope: !17021)
!17087 = !DILocation(line: 1450, column: 45, scope: !17021)
!17088 = !DILocation(line: 1450, column: 43, scope: !17021)
!17089 = !DILocation(line: 1451, column: 6, scope: !17021)
!17090 = !DILocation(line: 1457, column: 1, scope: !17021)
!17091 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !8786, file: !8786, line: 1103, type: !14912, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !17092)
!17092 = !{!17093}
!17093 = !DILocalVariable(name: "t", arg: 1, scope: !17091, file: !8786, line: 1103, type: !566)
!17094 = !DILocation(line: 0, scope: !17091)
!17095 = !DILocation(line: 0, scope: !15193, inlinedAt: !17096)
!17096 = distinct !DILocation(line: 1106, column: 9, scope: !17091)
!17097 = !DILocation(line: 139, column: 13, scope: !17098, inlinedAt: !17096)
!17098 = distinct !DILexicalBlock(scope: !17099, file: !8786, line: 138, column: 10)
!17099 = distinct !DILexicalBlock(scope: !17100, file: !8786, line: 136, column: 7)
!17100 = distinct !DILexicalBlock(scope: !15214, file: !8786, line: 134, column: 17)
!17101 = !DILocation(line: 1106, column: 2, scope: !17091)
!17102 = distinct !DISubprogram(name: "k_yield", scope: !4476, file: !4476, line: 140, type: !3148, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !2236)
!17103 = !DILocation(line: 148, column: 2, scope: !17104)
!17104 = distinct !DILexicalBlock(scope: !17102, file: !4476, line: 148, column: 2)
!17105 = !{i64 2155112800}
!17106 = !DILocation(line: 149, column: 2, scope: !17102)
!17107 = !DILocation(line: 150, column: 1, scope: !17102)
!17108 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2536, file: !2536, line: 1495, type: !17109, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !17111)
!17109 = !DISubroutineType(types: !17110)
!17110 = !{!904, !107}
!17111 = !{!17112, !17113}
!17112 = !DILocalVariable(name: "us", arg: 1, scope: !17108, file: !2536, line: 1495, type: !107)
!17113 = !DILocalVariable(name: "ticks", scope: !17108, file: !2536, line: 1497, type: !904)
!17114 = !DILocation(line: 0, scope: !17108)
!17115 = !DILocation(line: 1501, column: 31, scope: !17108)
!17116 = !DILocation(line: 1501, column: 10, scope: !17108)
!17117 = !DILocation(line: 1502, column: 23, scope: !17108)
!17118 = !DILocation(line: 1502, column: 10, scope: !17108)
!17119 = !DILocation(line: 1506, column: 31, scope: !17108)
!17120 = !DILocation(line: 1506, column: 9, scope: !17108)
!17121 = !DILocation(line: 1506, column: 2, scope: !17108)
!17122 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !8786, file: !8786, line: 571, type: !14912, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !17123)
!17123 = !{!17124}
!17124 = !DILocalVariable(name: "t", arg: 1, scope: !17122, file: !8786, line: 571, type: !566)
!17125 = !DILocation(line: 0, scope: !17122)
!17126 = !DILocation(line: 0, scope: !15193, inlinedAt: !17127)
!17127 = distinct !DILocation(line: 574, column: 9, scope: !17122)
!17128 = !DILocation(line: 135, column: 5, scope: !17100, inlinedAt: !17127)
!17129 = !DILocation(line: 139, column: 13, scope: !17098, inlinedAt: !17127)
!17130 = !DILocation(line: 574, column: 2, scope: !17122)
!17131 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !8786, file: !8786, line: 1187, type: !14912, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !17132)
!17132 = !{!17133}
!17133 = !DILocalVariable(name: "t", arg: 1, scope: !17131, file: !8786, line: 1187, type: !566)
!17134 = !DILocation(line: 0, scope: !17131)
!17135 = !DILocation(line: 0, scope: !15193, inlinedAt: !17136)
!17136 = distinct !DILocation(line: 1190, column: 9, scope: !17131)
!17137 = !DILocation(line: 145, column: 13, scope: !17138, inlinedAt: !17136)
!17138 = distinct !DILexicalBlock(scope: !15211, file: !8786, line: 144, column: 10)
!17139 = !DILocation(line: 1190, column: 2, scope: !17131)
!17140 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2536, file: !2536, line: 1517, type: !17011, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !17141)
!17141 = !{!17142}
!17142 = !DILocalVariable(name: "thread", arg: 1, scope: !17140, file: !2536, line: 1517, type: !16869)
!17143 = !DILocation(line: 0, scope: !17140)
!17144 = !DILocation(line: 1521, column: 6, scope: !17145)
!17145 = distinct !DILexicalBlock(scope: !17140, file: !2536, line: 1521, column: 6)
!17146 = !DILocation(line: 1521, column: 6, scope: !17140)
!17147 = !DILocation(line: 1525, column: 6, scope: !17148)
!17148 = distinct !DILexicalBlock(scope: !17140, file: !2536, line: 1525, column: 6)
!17149 = !DILocation(line: 1525, column: 37, scope: !17148)
!17150 = !DILocation(line: 1525, column: 6, scope: !17140)
!17151 = !DILocation(line: 1527, column: 20, scope: !17152)
!17152 = distinct !DILexicalBlock(scope: !17153, file: !2536, line: 1527, column: 7)
!17153 = distinct !DILexicalBlock(scope: !17148, file: !2536, line: 1525, column: 42)
!17154 = !DILocation(line: 1527, column: 33, scope: !17152)
!17155 = !DILocation(line: 1527, column: 7, scope: !17153)
!17156 = !DILocation(line: 1532, column: 2, scope: !17140)
!17157 = !DILocation(line: 1533, column: 2, scope: !17140)
!17158 = !DILocation(line: 1031, column: 3, scope: !15860, inlinedAt: !17159)
!17159 = distinct !DILocation(line: 48, column: 10, scope: !15864, inlinedAt: !17160)
!17160 = distinct !DILocation(line: 1537, column: 7, scope: !17161)
!17161 = distinct !DILexicalBlock(scope: !17140, file: !2536, line: 1537, column: 6)
!17162 = !DILocation(line: 0, scope: !15860, inlinedAt: !17159)
!17163 = !DILocation(line: 48, column: 9, scope: !15864, inlinedAt: !17160)
!17164 = !DILocation(line: 1537, column: 6, scope: !17140)
!17165 = !DILocation(line: 1538, column: 3, scope: !17166)
!17166 = distinct !DILexicalBlock(scope: !17161, file: !2536, line: 1537, column: 25)
!17167 = !DILocation(line: 1539, column: 2, scope: !17166)
!17168 = !DILocation(line: 1540, column: 1, scope: !17140)
!17169 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !14293, file: !14293, line: 101, type: !15274, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !17170)
!17170 = !{!17171}
!17171 = !DILocalVariable(name: "thread", arg: 1, scope: !17169, file: !14293, line: 101, type: !2428)
!17172 = !DILocation(line: 0, scope: !17169)
!17173 = !DILocation(line: 103, column: 23, scope: !17169)
!17174 = !DILocation(line: 103, column: 36, scope: !17169)
!17175 = !DILocation(line: 103, column: 55, scope: !17169)
!17176 = !DILocation(line: 103, column: 2, scope: !17169)
!17177 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2536, file: !2536, line: 1567, type: !17178, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !17180)
!17178 = !DISubroutineType(types: !17179)
!17179 = !{!16869}
!17180 = !{!17181}
!17181 = !DILocalVariable(name: "ret", scope: !17177, file: !2536, line: 1577, type: !16869)
!17182 = !DILocation(line: 1577, column: 30, scope: !17177)
!17183 = !DILocation(line: 0, scope: !17177)
!17184 = !DILocation(line: 1582, column: 2, scope: !17177)
!17185 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2536, file: !2536, line: 1593, type: !7674, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !2236)
!17186 = !DILocation(line: 1031, column: 3, scope: !15860, inlinedAt: !17187)
!17187 = distinct !DILocation(line: 48, column: 10, scope: !15864, inlinedAt: !17188)
!17188 = distinct !DILocation(line: 1595, column: 10, scope: !17185)
!17189 = !DILocation(line: 0, scope: !15860, inlinedAt: !17187)
!17190 = !DILocation(line: 48, column: 9, scope: !15864, inlinedAt: !17188)
!17191 = !DILocation(line: 1595, column: 27, scope: !17185)
!17192 = !DILocation(line: 1595, column: 41, scope: !17185)
!17193 = !DILocation(line: 1595, column: 30, scope: !17185)
!17194 = !DILocation(line: 1595, column: 2, scope: !17185)
!17195 = distinct !DISubprogram(name: "z_thread_abort", scope: !2536, file: !2536, line: 1725, type: !15091, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !17196)
!17196 = !{!17197, !17198}
!17197 = !DILocalVariable(name: "thread", arg: 1, scope: !17195, file: !2536, line: 1725, type: !2428)
!17198 = !DILocalVariable(name: "key", scope: !17195, file: !2536, line: 1727, type: !15125)
!17199 = !DILocation(line: 0, scope: !17195)
!17200 = !DILocation(line: 0, scope: !15133, inlinedAt: !17201)
!17201 = distinct !DILocation(line: 1727, column: 25, scope: !17195)
!17202 = !DILocation(line: 55, column: 2, scope: !15142, inlinedAt: !17203)
!17203 = distinct !DILocation(line: 145, column: 10, scope: !15133, inlinedAt: !17201)
!17204 = !DILocation(line: 0, scope: !15142, inlinedAt: !17203)
!17205 = !DILocation(line: 148, column: 2, scope: !15150, inlinedAt: !17201)
!17206 = !DILocation(line: 148, column: 2, scope: !15151, inlinedAt: !17201)
!17207 = !DILocation(line: 148, column: 2, scope: !15154, inlinedAt: !17201)
!17208 = !DILocation(line: 160, column: 2, scope: !15133, inlinedAt: !17201)
!17209 = !DILocation(line: 1729, column: 20, scope: !17210)
!17210 = distinct !DILexicalBlock(scope: !17195, file: !2536, line: 1729, column: 6)
!17211 = !DILocation(line: 1729, column: 33, scope: !17210)
!17212 = !DILocation(line: 1729, column: 48, scope: !17210)
!17213 = !DILocation(line: 1729, column: 6, scope: !17195)
!17214 = !DILocation(line: 0, scope: !15167, inlinedAt: !17215)
!17215 = distinct !DILocation(line: 1730, column: 3, scope: !17216)
!17216 = distinct !DILexicalBlock(scope: !17210, file: !2536, line: 1729, column: 54)
!17217 = !DILocation(line: 194, column: 2, scope: !15175, inlinedAt: !17215)
!17218 = !DILocation(line: 194, column: 2, scope: !15176, inlinedAt: !17215)
!17219 = !DILocation(line: 194, column: 2, scope: !15179, inlinedAt: !17215)
!17220 = !DILocation(line: 0, scope: !15181, inlinedAt: !17221)
!17221 = distinct !DILocation(line: 215, column: 2, scope: !15167, inlinedAt: !17215)
!17222 = !DILocation(line: 95, column: 2, scope: !15181, inlinedAt: !17221)
!17223 = !DILocation(line: 1731, column: 3, scope: !17224)
!17224 = distinct !DILexicalBlock(scope: !17225, file: !2536, line: 1731, column: 3)
!17225 = distinct !DILexicalBlock(scope: !17226, file: !2536, line: 1731, column: 3)
!17226 = distinct !DILexicalBlock(scope: !17216, file: !2536, line: 1731, column: 3)
!17227 = !DILocation(line: 1736, column: 20, scope: !17228)
!17228 = distinct !DILexicalBlock(scope: !17195, file: !2536, line: 1736, column: 6)
!17229 = !DILocation(line: 1736, column: 33, scope: !17228)
!17230 = !DILocation(line: 1736, column: 49, scope: !17228)
!17231 = !DILocation(line: 1736, column: 6, scope: !17195)
!17232 = !DILocation(line: 0, scope: !15167, inlinedAt: !17233)
!17233 = distinct !DILocation(line: 1737, column: 3, scope: !17234)
!17234 = distinct !DILexicalBlock(scope: !17228, file: !2536, line: 1736, column: 56)
!17235 = !DILocation(line: 194, column: 2, scope: !15175, inlinedAt: !17233)
!17236 = !DILocation(line: 194, column: 2, scope: !15176, inlinedAt: !17233)
!17237 = !DILocation(line: 194, column: 2, scope: !15179, inlinedAt: !17233)
!17238 = !DILocation(line: 0, scope: !15181, inlinedAt: !17239)
!17239 = distinct !DILocation(line: 215, column: 2, scope: !15167, inlinedAt: !17233)
!17240 = !DILocation(line: 95, column: 2, scope: !15181, inlinedAt: !17239)
!17241 = !DILocation(line: 1738, column: 3, scope: !17234)
!17242 = !DILocation(line: 1775, column: 2, scope: !17195)
!17243 = !DILocation(line: 1776, column: 16, scope: !17244)
!17244 = distinct !DILexicalBlock(scope: !17195, file: !2536, line: 1776, column: 6)
!17245 = !DILocation(line: 1776, column: 13, scope: !17244)
!17246 = !DILocation(line: 1776, column: 25, scope: !17244)
!17247 = !DILocation(line: 1031, column: 3, scope: !15860, inlinedAt: !17248)
!17248 = distinct !DILocation(line: 48, column: 10, scope: !15864, inlinedAt: !17249)
!17249 = distinct !DILocation(line: 1776, column: 29, scope: !17244)
!17250 = !DILocation(line: 0, scope: !15860, inlinedAt: !17248)
!17251 = !DILocation(line: 48, column: 9, scope: !15864, inlinedAt: !17249)
!17252 = !DILocation(line: 1776, column: 6, scope: !17195)
!17253 = !DILocation(line: 0, scope: !15811, inlinedAt: !17254)
!17254 = distinct !DILocation(line: 1777, column: 3, scope: !17255)
!17255 = distinct !DILexicalBlock(scope: !17244, file: !2536, line: 1776, column: 47)
!17256 = !DILocation(line: 0, scope: !15820, inlinedAt: !17257)
!17257 = distinct !DILocation(line: 195, column: 2, scope: !15811, inlinedAt: !17254)
!17258 = !DILocation(line: 225, column: 2, scope: !15827, inlinedAt: !17257)
!17259 = !DILocation(line: 225, column: 2, scope: !15828, inlinedAt: !17257)
!17260 = !DILocation(line: 225, column: 2, scope: !15831, inlinedAt: !17257)
!17261 = !DILocation(line: 196, column: 9, scope: !15811, inlinedAt: !17254)
!17262 = !DILocation(line: 1778, column: 3, scope: !17263)
!17263 = distinct !DILexicalBlock(scope: !17264, file: !2536, line: 1778, column: 3)
!17264 = distinct !DILexicalBlock(scope: !17265, file: !2536, line: 1778, column: 3)
!17265 = distinct !DILexicalBlock(scope: !17255, file: !2536, line: 1778, column: 3)
!17266 = !DILocation(line: 0, scope: !15167, inlinedAt: !17267)
!17267 = distinct !DILocation(line: 1780, column: 2, scope: !17195)
!17268 = !DILocation(line: 194, column: 2, scope: !15175, inlinedAt: !17267)
!17269 = !DILocation(line: 194, column: 2, scope: !15176, inlinedAt: !17267)
!17270 = !DILocation(line: 194, column: 2, scope: !15179, inlinedAt: !17267)
!17271 = !DILocation(line: 0, scope: !15181, inlinedAt: !17272)
!17272 = distinct !DILocation(line: 215, column: 2, scope: !15167, inlinedAt: !17267)
!17273 = !DILocation(line: 95, column: 2, scope: !15181, inlinedAt: !17272)
!17274 = !DILocation(line: 1781, column: 1, scope: !17195)
!17275 = distinct !DISubprogram(name: "end_thread", scope: !2536, file: !2536, line: 1690, type: !15091, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !17276)
!17276 = !{!17277}
!17277 = !DILocalVariable(name: "thread", arg: 1, scope: !17275, file: !2536, line: 1690, type: !2428)
!17278 = !DILocation(line: 0, scope: !17275)
!17279 = !DILocation(line: 1695, column: 20, scope: !17280)
!17280 = distinct !DILexicalBlock(scope: !17275, file: !2536, line: 1695, column: 6)
!17281 = !DILocation(line: 1695, column: 33, scope: !17280)
!17282 = !DILocation(line: 1695, column: 49, scope: !17280)
!17283 = !DILocation(line: 1695, column: 6, scope: !17275)
!17284 = !DILocation(line: 1697, column: 29, scope: !17285)
!17285 = distinct !DILexicalBlock(scope: !17280, file: !2536, line: 1695, column: 56)
!17286 = !DILocation(line: 1698, column: 7, scope: !17287)
!17287 = distinct !DILexicalBlock(scope: !17285, file: !2536, line: 1698, column: 7)
!17288 = !DILocation(line: 1698, column: 7, scope: !17285)
!17289 = !DILocation(line: 0, scope: !15325, inlinedAt: !17290)
!17290 = distinct !DILocation(line: 1699, column: 4, scope: !17291)
!17291 = distinct !DILexicalBlock(scope: !17287, file: !2536, line: 1698, column: 35)
!17292 = !DILocation(line: 266, column: 28, scope: !15325, inlinedAt: !17290)
!17293 = !DILocation(line: 0, scope: !15333, inlinedAt: !17294)
!17294 = distinct !DILocation(line: 268, column: 3, scope: !15337, inlinedAt: !17290)
!17295 = !DILocation(line: 234, column: 2, scope: !15333, inlinedAt: !17294)
!17296 = !DILocation(line: 1700, column: 3, scope: !17291)
!17297 = !DILocation(line: 1701, column: 20, scope: !17298)
!17298 = distinct !DILexicalBlock(scope: !17285, file: !2536, line: 1701, column: 7)
!17299 = !DILocation(line: 1701, column: 30, scope: !17298)
!17300 = !DILocation(line: 1701, column: 7, scope: !17285)
!17301 = !DILocation(line: 1702, column: 4, scope: !17302)
!17302 = distinct !DILexicalBlock(scope: !17298, file: !2536, line: 1701, column: 39)
!17303 = !DILocation(line: 1703, column: 3, scope: !17302)
!17304 = !DILocation(line: 1704, column: 9, scope: !17285)
!17305 = !DILocation(line: 1705, column: 23, scope: !17285)
!17306 = !DILocation(line: 1705, column: 3, scope: !17285)
!17307 = !DILocation(line: 1706, column: 3, scope: !17285)
!17308 = !DILocation(line: 1722, column: 2, scope: !17285)
!17309 = !DILocation(line: 1723, column: 1, scope: !17275)
!17310 = distinct !DISubprogram(name: "unpend_all", scope: !2536, file: !2536, line: 1674, type: !17311, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !17313)
!17311 = !DISubroutineType(types: !17312)
!17312 = !{null, !2459}
!17313 = !{!17314, !17315}
!17314 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17310, file: !2536, line: 1674, type: !2459)
!17315 = !DILocalVariable(name: "thread", scope: !17310, file: !2536, line: 1676, type: !2428)
!17316 = !DILocation(line: 0, scope: !17310)
!17317 = !DILocation(line: 1678, column: 19, scope: !17310)
!17318 = !DILocation(line: 1678, column: 41, scope: !17310)
!17319 = !DILocation(line: 1678, column: 2, scope: !17310)
!17320 = !DILocation(line: 1679, column: 3, scope: !17321)
!17321 = distinct !DILexicalBlock(scope: !17310, file: !2536, line: 1678, column: 50)
!17322 = !DILocation(line: 1680, column: 9, scope: !17321)
!17323 = !DILocalVariable(name: "thread", arg: 1, scope: !17324, file: !14313, line: 65, type: !2428)
!17324 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !14313, file: !14313, line: 65, type: !17325, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !17327)
!17325 = !DISubroutineType(types: !17326)
!17326 = !{null, !2428, !32}
!17327 = !{!17323, !17328}
!17328 = !DILocalVariable(name: "value", arg: 2, scope: !17324, file: !14313, line: 65, type: !32)
!17329 = !DILocation(line: 0, scope: !17324, inlinedAt: !17330)
!17330 = distinct !DILocation(line: 1681, column: 3, scope: !17321)
!17331 = !DILocation(line: 67, column: 15, scope: !17324, inlinedAt: !17330)
!17332 = !DILocation(line: 67, column: 33, scope: !17324, inlinedAt: !17330)
!17333 = !DILocation(line: 1682, column: 3, scope: !17321)
!17334 = distinct !{!17334, !17319, !17335}
!17335 = !DILocation(line: 1683, column: 2, scope: !17310)
!17336 = !DILocation(line: 1684, column: 1, scope: !17310)
!17337 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2536, file: !2536, line: 1794, type: !17338, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !17340)
!17338 = !DISubroutineType(types: !17339)
!17339 = !{!107, !2428, !16021}
!17340 = !{!17341, !17342, !17343, !17344}
!17341 = !DILocalVariable(name: "thread", arg: 1, scope: !17337, file: !2536, line: 1794, type: !2428)
!17342 = !DILocalVariable(name: "timeout", arg: 2, scope: !17337, file: !2536, line: 1794, type: !16021)
!17343 = !DILocalVariable(name: "key", scope: !17337, file: !2536, line: 1796, type: !15125)
!17344 = !DILocalVariable(name: "ret", scope: !17337, file: !2536, line: 1797, type: !107)
!17345 = !DILocation(line: 0, scope: !17337)
!17346 = !DILocation(line: 0, scope: !15133, inlinedAt: !17347)
!17347 = distinct !DILocation(line: 1796, column: 25, scope: !17337)
!17348 = !DILocation(line: 55, column: 2, scope: !15142, inlinedAt: !17349)
!17349 = distinct !DILocation(line: 145, column: 10, scope: !15133, inlinedAt: !17347)
!17350 = !DILocation(line: 0, scope: !15142, inlinedAt: !17349)
!17351 = !DILocation(line: 148, column: 2, scope: !15150, inlinedAt: !17347)
!17352 = !DILocation(line: 148, column: 2, scope: !15151, inlinedAt: !17347)
!17353 = !DILocation(line: 148, column: 2, scope: !15154, inlinedAt: !17347)
!17354 = !DILocation(line: 160, column: 2, scope: !15133, inlinedAt: !17347)
!17355 = !DILocation(line: 1801, column: 20, scope: !17356)
!17356 = distinct !DILexicalBlock(scope: !17337, file: !2536, line: 1801, column: 6)
!17357 = !DILocation(line: 1801, column: 33, scope: !17356)
!17358 = !DILocation(line: 1801, column: 49, scope: !17356)
!17359 = !DILocation(line: 1801, column: 6, scope: !17337)
!17360 = !DILocation(line: 1803, column: 13, scope: !17361)
!17361 = distinct !DILexicalBlock(scope: !17356, file: !2536, line: 1803, column: 13)
!17362 = !DILocation(line: 1803, column: 13, scope: !17356)
!17363 = !DILocation(line: 1805, column: 24, scope: !17364)
!17364 = distinct !DILexicalBlock(scope: !17361, file: !2536, line: 1805, column: 13)
!17365 = !DILocation(line: 1805, column: 21, scope: !17364)
!17366 = !DILocation(line: 1805, column: 34, scope: !17364)
!17367 = !DILocation(line: 1806, column: 20, scope: !17364)
!17368 = !DILocation(line: 1806, column: 44, scope: !17364)
!17369 = !DILocation(line: 1806, column: 30, scope: !17364)
!17370 = !DILocation(line: 1805, column: 13, scope: !17361)
!17371 = !DILocation(line: 1031, column: 3, scope: !15860, inlinedAt: !17372)
!17372 = distinct !DILocation(line: 48, column: 10, scope: !15864, inlinedAt: !17373)
!17373 = distinct !DILocation(line: 1809, column: 3, scope: !17374)
!17374 = distinct !DILexicalBlock(scope: !17375, file: !2536, line: 1809, column: 3)
!17375 = distinct !DILexicalBlock(scope: !17376, file: !2536, line: 1809, column: 3)
!17376 = distinct !DILexicalBlock(scope: !17364, file: !2536, line: 1808, column: 9)
!17377 = !DILocation(line: 0, scope: !15860, inlinedAt: !17372)
!17378 = !DILocation(line: 48, column: 9, scope: !15864, inlinedAt: !17373)
!17379 = !DILocation(line: 1809, column: 3, scope: !17375)
!17380 = !DILocation(line: 1809, column: 3, scope: !17381)
!17381 = distinct !DILexicalBlock(scope: !17374, file: !2536, line: 1809, column: 3)
!17382 = !DILocation(line: 1810, column: 23, scope: !17376)
!17383 = !DILocation(line: 1810, column: 42, scope: !17376)
!17384 = !DILocation(line: 1810, column: 3, scope: !17376)
!17385 = !DILocation(line: 1811, column: 22, scope: !17376)
!17386 = !DILocation(line: 1811, column: 3, scope: !17376)
!17387 = !DILocation(line: 0, scope: !15811, inlinedAt: !17388)
!17388 = distinct !DILocation(line: 1814, column: 9, scope: !17376)
!17389 = !DILocation(line: 0, scope: !15820, inlinedAt: !17390)
!17390 = distinct !DILocation(line: 195, column: 2, scope: !15811, inlinedAt: !17388)
!17391 = !DILocation(line: 225, column: 2, scope: !15827, inlinedAt: !17390)
!17392 = !DILocation(line: 225, column: 2, scope: !15828, inlinedAt: !17390)
!17393 = !DILocation(line: 225, column: 2, scope: !15831, inlinedAt: !17390)
!17394 = !DILocation(line: 196, column: 9, scope: !15811, inlinedAt: !17388)
!17395 = !DILocation(line: 1817, column: 3, scope: !17376)
!17396 = !DILocation(line: 0, scope: !17356)
!17397 = !DILocation(line: 0, scope: !15167, inlinedAt: !17398)
!17398 = distinct !DILocation(line: 1822, column: 2, scope: !17337)
!17399 = !DILocation(line: 194, column: 2, scope: !15175, inlinedAt: !17398)
!17400 = !DILocation(line: 194, column: 2, scope: !15176, inlinedAt: !17398)
!17401 = !DILocation(line: 194, column: 2, scope: !15179, inlinedAt: !17398)
!17402 = !DILocation(line: 0, scope: !15181, inlinedAt: !17403)
!17403 = distinct !DILocation(line: 215, column: 2, scope: !15167, inlinedAt: !17398)
!17404 = !DILocation(line: 95, column: 2, scope: !15181, inlinedAt: !17403)
!17405 = !DILocation(line: 1823, column: 2, scope: !17337)
!17406 = !DILocation(line: 1824, column: 1, scope: !17337)
!17407 = distinct !DISubprogram(name: "z_sched_wake", scope: !2536, file: !2536, line: 1882, type: !17408, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !17410)
!17408 = !DISubroutineType(types: !17409)
!17409 = !{!145, !2459, !107, !106}
!17410 = !{!17411, !17412, !17413, !17414, !17415, !17416, !17418}
!17411 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17407, file: !2536, line: 1882, type: !2459)
!17412 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !17407, file: !2536, line: 1882, type: !107)
!17413 = !DILocalVariable(name: "swap_data", arg: 3, scope: !17407, file: !2536, line: 1882, type: !106)
!17414 = !DILocalVariable(name: "thread", scope: !17407, file: !2536, line: 1884, type: !2428)
!17415 = !DILocalVariable(name: "ret", scope: !17407, file: !2536, line: 1885, type: !145)
!17416 = !DILocalVariable(name: "__i", scope: !17417, file: !2536, line: 1887, type: !15125)
!17417 = distinct !DILexicalBlock(scope: !17407, file: !2536, line: 1887, column: 2)
!17418 = !DILocalVariable(name: "__key", scope: !17417, file: !2536, line: 1887, type: !15125)
!17419 = !DILocation(line: 0, scope: !17407)
!17420 = !DILocation(line: 0, scope: !17417)
!17421 = !DILocation(line: 0, scope: !15133, inlinedAt: !17422)
!17422 = distinct !DILocation(line: 1887, column: 2, scope: !17417)
!17423 = !DILocation(line: 55, column: 2, scope: !15142, inlinedAt: !17424)
!17424 = distinct !DILocation(line: 145, column: 10, scope: !15133, inlinedAt: !17422)
!17425 = !DILocation(line: 0, scope: !15142, inlinedAt: !17424)
!17426 = !DILocation(line: 148, column: 2, scope: !15150, inlinedAt: !17422)
!17427 = !DILocation(line: 148, column: 2, scope: !15151, inlinedAt: !17422)
!17428 = !DILocation(line: 148, column: 2, scope: !15154, inlinedAt: !17422)
!17429 = !DILocation(line: 160, column: 2, scope: !15133, inlinedAt: !17422)
!17430 = !DILocation(line: 1888, column: 12, scope: !17431)
!17431 = distinct !DILexicalBlock(scope: !17432, file: !2536, line: 1887, column: 26)
!17432 = distinct !DILexicalBlock(scope: !17417, file: !2536, line: 1887, column: 2)
!17433 = !DILocation(line: 1890, column: 14, scope: !17434)
!17434 = distinct !DILexicalBlock(scope: !17431, file: !2536, line: 1890, column: 7)
!17435 = !DILocation(line: 1890, column: 7, scope: !17431)
!17436 = !DILocalVariable(name: "thread", arg: 1, scope: !17437, file: !17438, line: 134, type: !2428)
!17437 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !17438, file: !17438, line: 134, type: !17439, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !17441)
!17438 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17439 = !DISubroutineType(types: !17440)
!17440 = !{null, !2428, !32, !106}
!17441 = !{!17436, !17442, !17443}
!17442 = !DILocalVariable(name: "value", arg: 2, scope: !17437, file: !17438, line: 135, type: !32)
!17443 = !DILocalVariable(name: "data", arg: 3, scope: !17437, file: !17438, line: 136, type: !106)
!17444 = !DILocation(line: 0, scope: !17437, inlinedAt: !17445)
!17445 = distinct !DILocation(line: 1891, column: 4, scope: !17446)
!17446 = distinct !DILexicalBlock(scope: !17434, file: !2536, line: 1890, column: 23)
!17447 = !DILocation(line: 0, scope: !17324, inlinedAt: !17448)
!17448 = distinct !DILocation(line: 138, column: 2, scope: !17437, inlinedAt: !17445)
!17449 = !DILocation(line: 67, column: 15, scope: !17324, inlinedAt: !17448)
!17450 = !DILocation(line: 67, column: 33, scope: !17324, inlinedAt: !17448)
!17451 = !DILocation(line: 139, column: 15, scope: !17437, inlinedAt: !17445)
!17452 = !DILocation(line: 139, column: 25, scope: !17437, inlinedAt: !17445)
!17453 = !DILocation(line: 1894, column: 4, scope: !17446)
!17454 = !DILocation(line: 1895, column: 10, scope: !17446)
!17455 = !DILocation(line: 1896, column: 4, scope: !17446)
!17456 = !DILocation(line: 1898, column: 3, scope: !17446)
!17457 = !DILocation(line: 0, scope: !15167, inlinedAt: !17458)
!17458 = distinct !DILocation(line: 1887, column: 2, scope: !17432)
!17459 = !DILocation(line: 194, column: 2, scope: !15175, inlinedAt: !17458)
!17460 = !DILocation(line: 194, column: 2, scope: !15176, inlinedAt: !17458)
!17461 = !DILocation(line: 194, column: 2, scope: !15179, inlinedAt: !17458)
!17462 = !DILocation(line: 0, scope: !15181, inlinedAt: !17463)
!17463 = distinct !DILocation(line: 215, column: 2, scope: !15167, inlinedAt: !17458)
!17464 = !DILocation(line: 95, column: 2, scope: !15181, inlinedAt: !17463)
!17465 = !DILocation(line: 1901, column: 2, scope: !17407)
!17466 = distinct !DISubprogram(name: "z_sched_wait", scope: !2536, file: !2536, line: 1904, type: !17467, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !17470)
!17467 = !DISubroutineType(types: !17468)
!17468 = !{!107, !15136, !15125, !2459, !16021, !17469}
!17469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !106, size: 32)
!17470 = !{!17471, !17472, !17473, !17474, !17475, !17476}
!17471 = !DILocalVariable(name: "lock", arg: 1, scope: !17466, file: !2536, line: 1904, type: !15136)
!17472 = !DILocalVariable(name: "key", arg: 2, scope: !17466, file: !2536, line: 1904, type: !15125)
!17473 = !DILocalVariable(name: "wait_q", arg: 3, scope: !17466, file: !2536, line: 1905, type: !2459)
!17474 = !DILocalVariable(name: "timeout", arg: 4, scope: !17466, file: !2536, line: 1905, type: !16021)
!17475 = !DILocalVariable(name: "data", arg: 5, scope: !17466, file: !2536, line: 1905, type: !17469)
!17476 = !DILocalVariable(name: "ret", scope: !17466, file: !2536, line: 1907, type: !107)
!17477 = !DILocation(line: 0, scope: !17466)
!17478 = !DILocation(line: 1907, column: 12, scope: !17466)
!17479 = !DILocation(line: 1909, column: 11, scope: !17480)
!17480 = distinct !DILexicalBlock(scope: !17466, file: !2536, line: 1909, column: 6)
!17481 = !DILocation(line: 1909, column: 6, scope: !17466)
!17482 = !DILocation(line: 1910, column: 11, scope: !17483)
!17483 = distinct !DILexicalBlock(scope: !17480, file: !2536, line: 1909, column: 20)
!17484 = !DILocation(line: 1910, column: 26, scope: !17483)
!17485 = !DILocation(line: 1910, column: 9, scope: !17483)
!17486 = !DILocation(line: 1911, column: 2, scope: !17483)
!17487 = !DILocation(line: 1912, column: 2, scope: !17466)
!17488 = distinct !DISubprogram(name: "z_data_copy", scope: !17489, file: !17489, line: 22, type: !3148, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3131, retainedNodes: !2236)
!17489 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17490 = !DILocation(line: 24, column: 2, scope: !17488)
!17491 = !DILocation(line: 27, column: 2, scope: !17488)
!17492 = !DILocation(line: 71, column: 1, scope: !17488)
!17493 = distinct !DISubprogram(name: "z_add_timeout", scope: !2573, file: !2573, line: 88, type: !17494, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !17500)
!17494 = !DISubroutineType(types: !17495)
!17495 = !{null, !2546, !2565, !17496}
!17496 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !565, line: 67, baseType: !17497)
!17497 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !565, line: 65, size: 64, elements: !17498)
!17498 = !{!17499}
!17499 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !17497, file: !565, line: 66, baseType: !564, size: 64)
!17500 = !{!17501, !17502, !17503, !17504, !17510, !17511, !17514, !17517}
!17501 = !DILocalVariable(name: "to", arg: 1, scope: !17493, file: !2573, line: 88, type: !2546)
!17502 = !DILocalVariable(name: "fn", arg: 2, scope: !17493, file: !2573, line: 88, type: !2565)
!17503 = !DILocalVariable(name: "timeout", arg: 3, scope: !17493, file: !2573, line: 89, type: !17496)
!17504 = !DILocalVariable(name: "__i", scope: !17505, file: !2573, line: 102, type: !17506)
!17505 = distinct !DILexicalBlock(scope: !17493, file: !2573, line: 102, column: 2)
!17506 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !420, line: 106, baseType: !17507)
!17507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !420, line: 32, size: 32, elements: !17508)
!17508 = !{!17509}
!17509 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !17507, file: !420, line: 33, baseType: !107, size: 32)
!17510 = !DILocalVariable(name: "__key", scope: !17505, file: !2573, line: 102, type: !17506)
!17511 = !DILocalVariable(name: "t", scope: !17512, file: !2573, line: 103, type: !2546)
!17512 = distinct !DILexicalBlock(scope: !17513, file: !2573, line: 102, column: 24)
!17513 = distinct !DILexicalBlock(scope: !17505, file: !2573, line: 102, column: 2)
!17514 = !DILocalVariable(name: "ticks", scope: !17515, file: !2573, line: 107, type: !564)
!17515 = distinct !DILexicalBlock(scope: !17516, file: !2573, line: 106, column: 39)
!17516 = distinct !DILexicalBlock(scope: !17512, file: !2573, line: 105, column: 7)
!17517 = !DILocalVariable(name: "next_time", scope: !17518, file: !2573, line: 137, type: !904)
!17518 = distinct !DILexicalBlock(scope: !17519, file: !2573, line: 127, column: 22)
!17519 = distinct !DILexicalBlock(scope: !17512, file: !2573, line: 127, column: 7)
!17520 = !DILocation(line: 0, scope: !17493)
!17521 = !DILocation(line: 91, column: 6, scope: !17522)
!17522 = distinct !DILexicalBlock(scope: !17493, file: !2573, line: 91, column: 6)
!17523 = !DILocation(line: 91, column: 6, scope: !17493)
!17524 = !DILocation(line: 99, column: 2, scope: !17525)
!17525 = distinct !DILexicalBlock(scope: !17526, file: !2573, line: 99, column: 2)
!17526 = distinct !DILexicalBlock(scope: !17493, file: !2573, line: 99, column: 2)
!17527 = !DILocation(line: 99, column: 2, scope: !17526)
!17528 = !DILocation(line: 99, column: 2, scope: !17529)
!17529 = distinct !DILexicalBlock(scope: !17525, file: !2573, line: 99, column: 2)
!17530 = !DILocation(line: 100, column: 6, scope: !17493)
!17531 = !DILocation(line: 100, column: 9, scope: !17493)
!17532 = !DILocation(line: 0, scope: !17505)
!17533 = !DILocalVariable(name: "l", arg: 1, scope: !17534, file: !420, line: 136, type: !17537)
!17534 = distinct !DISubprogram(name: "k_spin_lock", scope: !420, file: !420, line: 136, type: !17535, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !17538)
!17535 = !DISubroutineType(types: !17536)
!17536 = !{!17506, !17537}
!17537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2579, size: 32)
!17538 = !{!17533, !17539}
!17539 = !DILocalVariable(name: "k", scope: !17534, file: !420, line: 139, type: !17506)
!17540 = !DILocation(line: 0, scope: !17534, inlinedAt: !17541)
!17541 = distinct !DILocation(line: 102, column: 2, scope: !17505)
!17542 = !DILocation(line: 55, column: 2, scope: !17543, inlinedAt: !17547)
!17543 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5999, file: !5999, line: 42, type: !6000, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !17544)
!17544 = !{!17545, !17546}
!17545 = !DILocalVariable(name: "key", scope: !17543, file: !5999, line: 44, type: !32)
!17546 = !DILocalVariable(name: "tmp", scope: !17543, file: !5999, line: 53, type: !32)
!17547 = distinct !DILocation(line: 145, column: 10, scope: !17534, inlinedAt: !17541)
!17548 = !{i64 2288382}
!17549 = !DILocation(line: 0, scope: !17543, inlinedAt: !17547)
!17550 = !DILocation(line: 148, column: 2, scope: !17551, inlinedAt: !17541)
!17551 = distinct !DILexicalBlock(scope: !17552, file: !420, line: 148, column: 2)
!17552 = distinct !DILexicalBlock(scope: !17534, file: !420, line: 148, column: 2)
!17553 = !DILocation(line: 148, column: 2, scope: !17552, inlinedAt: !17541)
!17554 = !DILocation(line: 148, column: 2, scope: !17555, inlinedAt: !17541)
!17555 = distinct !DILexicalBlock(scope: !17551, file: !420, line: 148, column: 2)
!17556 = !DILocation(line: 160, column: 2, scope: !17534, inlinedAt: !17541)
!17557 = !DILocation(line: 106, column: 33, scope: !17516)
!17558 = !DILocation(line: 105, column: 7, scope: !17512)
!17559 = !DILocation(line: 107, column: 50, scope: !17515)
!17560 = !DILocation(line: 107, column: 48, scope: !17515)
!17561 = !DILocation(line: 0, scope: !17515)
!17562 = !DILocation(line: 109, column: 17, scope: !17515)
!17563 = !DILocation(line: 110, column: 3, scope: !17515)
!17564 = !DILocation(line: 111, column: 31, scope: !17565)
!17565 = distinct !DILexicalBlock(scope: !17516, file: !2573, line: 110, column: 10)
!17566 = !DILocation(line: 111, column: 37, scope: !17565)
!17567 = !DILocation(line: 111, column: 35, scope: !17565)
!17568 = !DILocation(line: 0, scope: !17516)
!17569 = !DILocation(line: 109, column: 8, scope: !17515)
!17570 = !DILocation(line: 109, column: 15, scope: !17515)
!17571 = !DILocation(line: 114, column: 12, scope: !17572)
!17572 = distinct !DILexicalBlock(scope: !17512, file: !2573, line: 114, column: 3)
!17573 = !DILocation(line: 0, scope: !17512)
!17574 = !DILocation(line: 114, column: 3, scope: !17572)
!17575 = !DILocation(line: 115, column: 24, scope: !17576)
!17576 = distinct !DILexicalBlock(scope: !17577, file: !2573, line: 115, column: 8)
!17577 = distinct !DILexicalBlock(scope: !17578, file: !2573, line: 114, column: 45)
!17578 = distinct !DILexicalBlock(scope: !17572, file: !2573, line: 114, column: 3)
!17579 = !DILocation(line: 115, column: 11, scope: !17576)
!17580 = !DILocation(line: 115, column: 18, scope: !17576)
!17581 = !DILocation(line: 115, column: 8, scope: !17577)
!17582 = !DILocation(line: 116, column: 15, scope: !17583)
!17583 = distinct !DILexicalBlock(scope: !17576, file: !2573, line: 115, column: 32)
!17584 = !DILocation(line: 117, column: 26, scope: !17583)
!17585 = !DILocation(line: 117, column: 5, scope: !17583)
!17586 = !DILocation(line: 123, column: 7, scope: !17512)
!17587 = !DILocation(line: 120, column: 15, scope: !17577)
!17588 = !DILocation(line: 114, column: 36, scope: !17578)
!17589 = distinct !{!17589, !17574, !17590}
!17590 = !DILocation(line: 121, column: 3, scope: !17572)
!17591 = !DILocation(line: 124, column: 4, scope: !17592)
!17592 = distinct !DILexicalBlock(scope: !17593, file: !2573, line: 123, column: 18)
!17593 = distinct !DILexicalBlock(scope: !17512, file: !2573, line: 123, column: 7)
!17594 = !DILocation(line: 125, column: 3, scope: !17592)
!17595 = !DILocation(line: 127, column: 13, scope: !17519)
!17596 = !DILocation(line: 127, column: 10, scope: !17519)
!17597 = !DILocation(line: 127, column: 7, scope: !17512)
!17598 = !DILocation(line: 137, column: 24, scope: !17518)
!17599 = !DILocation(line: 0, scope: !17518)
!17600 = !DILocation(line: 139, column: 18, scope: !17601)
!17601 = distinct !DILexicalBlock(scope: !17518, file: !2573, line: 139, column: 8)
!17602 = !DILocation(line: 139, column: 23, scope: !17601)
!17603 = !DILocation(line: 141, column: 5, scope: !17604)
!17604 = distinct !DILexicalBlock(scope: !17601, file: !2573, line: 140, column: 48)
!17605 = !DILocation(line: 142, column: 4, scope: !17604)
!17606 = !DILocalVariable(name: "key", arg: 2, scope: !17607, file: !420, line: 190, type: !17506)
!17607 = distinct !DISubprogram(name: "k_spin_unlock", scope: !420, file: !420, line: 189, type: !17608, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !17610)
!17608 = !DISubroutineType(types: !17609)
!17609 = !{null, !17537, !17506}
!17610 = !{!17611, !17606}
!17611 = !DILocalVariable(name: "l", arg: 1, scope: !17607, file: !420, line: 189, type: !17537)
!17612 = !DILocation(line: 0, scope: !17607, inlinedAt: !17613)
!17613 = distinct !DILocation(line: 102, column: 2, scope: !17513)
!17614 = !DILocation(line: 194, column: 2, scope: !17615, inlinedAt: !17613)
!17615 = distinct !DILexicalBlock(scope: !17616, file: !420, line: 194, column: 2)
!17616 = distinct !DILexicalBlock(scope: !17607, file: !420, line: 194, column: 2)
!17617 = !DILocation(line: 194, column: 2, scope: !17616, inlinedAt: !17613)
!17618 = !DILocation(line: 194, column: 2, scope: !17619, inlinedAt: !17613)
!17619 = distinct !DILexicalBlock(scope: !17615, file: !420, line: 194, column: 2)
!17620 = !DILocalVariable(name: "key", arg: 1, scope: !17621, file: !5999, line: 84, type: !32)
!17621 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5999, file: !5999, line: 84, type: !6010, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !17622)
!17622 = !{!17620}
!17623 = !DILocation(line: 0, scope: !17621, inlinedAt: !17624)
!17624 = distinct !DILocation(line: 215, column: 2, scope: !17607, inlinedAt: !17613)
!17625 = !DILocation(line: 95, column: 2, scope: !17621, inlinedAt: !17624)
!17626 = !{i64 2289199}
!17627 = !DILocation(line: 148, column: 1, scope: !17493)
!17628 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !319, file: !319, line: 225, type: !17629, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !17633)
!17629 = !DISubroutineType(types: !17630)
!17630 = !{!145, !17631}
!17631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17632, size: 32)
!17632 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2550)
!17633 = !{!17634}
!17634 = !DILocalVariable(name: "node", arg: 1, scope: !17628, file: !319, line: 225, type: !17631)
!17635 = !DILocation(line: 0, scope: !17628)
!17636 = !DILocation(line: 227, column: 15, scope: !17628)
!17637 = !DILocation(line: 227, column: 20, scope: !17628)
!17638 = !DILocation(line: 227, column: 2, scope: !17628)
!17639 = distinct !DISubprogram(name: "elapsed", scope: !2573, file: !2573, line: 62, type: !17640, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !2236)
!17640 = !DISubroutineType(types: !17641)
!17641 = !{!904}
!17642 = !DILocation(line: 64, column: 9, scope: !17639)
!17643 = !DILocation(line: 64, column: 28, scope: !17639)
!17644 = !DILocation(line: 64, column: 35, scope: !17639)
!17645 = !DILocation(line: 64, column: 2, scope: !17639)
!17646 = distinct !DISubprogram(name: "first", scope: !2573, file: !2573, line: 39, type: !17647, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !17649)
!17647 = !DISubroutineType(types: !17648)
!17648 = !{!2546}
!17649 = !{!17650}
!17650 = !DILocalVariable(name: "t", scope: !17646, file: !2573, line: 41, type: !17651)
!17651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2550, size: 32)
!17652 = !DILocation(line: 41, column: 19, scope: !17646)
!17653 = !DILocation(line: 0, scope: !17646)
!17654 = !DILocation(line: 43, column: 9, scope: !17646)
!17655 = !DILocation(line: 43, column: 2, scope: !17646)
!17656 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !319, file: !319, line: 443, type: !17657, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !17659)
!17657 = !DISubroutineType(types: !17658)
!17658 = !{null, !17651, !17651}
!17659 = !{!17660, !17661, !17662}
!17660 = !DILocalVariable(name: "successor", arg: 1, scope: !17656, file: !319, line: 443, type: !17651)
!17661 = !DILocalVariable(name: "node", arg: 2, scope: !17656, file: !319, line: 443, type: !17651)
!17662 = !DILocalVariable(name: "prev", scope: !17656, file: !319, line: 445, type: !17663)
!17663 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !17651)
!17664 = !DILocation(line: 0, scope: !17656)
!17665 = !DILocation(line: 445, column: 39, scope: !17656)
!17666 = !DILocation(line: 447, column: 8, scope: !17656)
!17667 = !DILocation(line: 447, column: 13, scope: !17656)
!17668 = !DILocation(line: 448, column: 8, scope: !17656)
!17669 = !DILocation(line: 448, column: 13, scope: !17656)
!17670 = !DILocation(line: 449, column: 8, scope: !17656)
!17671 = !DILocation(line: 449, column: 13, scope: !17656)
!17672 = !DILocation(line: 450, column: 18, scope: !17656)
!17673 = !DILocation(line: 451, column: 1, scope: !17656)
!17674 = distinct !DISubprogram(name: "next", scope: !2573, file: !2573, line: 46, type: !17675, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !17677)
!17675 = !DISubroutineType(types: !17676)
!17676 = !{!2546, !2546}
!17677 = !{!17678, !17679}
!17678 = !DILocalVariable(name: "t", arg: 1, scope: !17674, file: !2573, line: 46, type: !2546)
!17679 = !DILocalVariable(name: "n", scope: !17674, file: !2573, line: 48, type: !17651)
!17680 = !DILocation(line: 0, scope: !17674)
!17681 = !DILocation(line: 48, column: 58, scope: !17674)
!17682 = !DILocation(line: 48, column: 19, scope: !17674)
!17683 = !DILocation(line: 50, column: 9, scope: !17674)
!17684 = !DILocation(line: 50, column: 2, scope: !17674)
!17685 = distinct !DISubprogram(name: "sys_dlist_append", scope: !319, file: !319, line: 404, type: !17686, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !17689)
!17686 = !DISubroutineType(types: !17687)
!17687 = !{null, !17688, !17651}
!17688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2578, size: 32)
!17689 = !{!17690, !17691, !17692}
!17690 = !DILocalVariable(name: "list", arg: 1, scope: !17685, file: !319, line: 404, type: !17688)
!17691 = !DILocalVariable(name: "node", arg: 2, scope: !17685, file: !319, line: 404, type: !17651)
!17692 = !DILocalVariable(name: "tail", scope: !17685, file: !319, line: 406, type: !17663)
!17693 = !DILocation(line: 0, scope: !17685)
!17694 = !DILocation(line: 406, column: 34, scope: !17685)
!17695 = !DILocation(line: 408, column: 8, scope: !17685)
!17696 = !DILocation(line: 408, column: 13, scope: !17685)
!17697 = !DILocation(line: 409, column: 8, scope: !17685)
!17698 = !DILocation(line: 409, column: 13, scope: !17685)
!17699 = !DILocation(line: 411, column: 8, scope: !17685)
!17700 = !DILocation(line: 411, column: 13, scope: !17685)
!17701 = !DILocation(line: 412, column: 13, scope: !17685)
!17702 = !DILocation(line: 413, column: 1, scope: !17685)
!17703 = distinct !DISubprogram(name: "next_timeout", scope: !2573, file: !2573, line: 67, type: !17640, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !17704)
!17704 = !{!17705, !17706, !17707}
!17705 = !DILocalVariable(name: "to", scope: !17703, file: !2573, line: 69, type: !2546)
!17706 = !DILocalVariable(name: "ticks_elapsed", scope: !17703, file: !2573, line: 70, type: !904)
!17707 = !DILocalVariable(name: "ret", scope: !17703, file: !2573, line: 71, type: !904)
!17708 = !DILocation(line: 69, column: 24, scope: !17703)
!17709 = !DILocation(line: 0, scope: !17703)
!17710 = !DILocation(line: 70, column: 26, scope: !17703)
!17711 = !DILocation(line: 73, column: 10, scope: !17712)
!17712 = distinct !DILexicalBlock(scope: !17703, file: !2573, line: 73, column: 6)
!17713 = !DILocation(line: 73, column: 19, scope: !17712)
!17714 = !DILocation(line: 74, column: 21, scope: !17712)
!17715 = !DILocation(line: 74, column: 30, scope: !17712)
!17716 = !DILocation(line: 74, column: 28, scope: !17712)
!17717 = !DILocation(line: 74, column: 45, scope: !17712)
!17718 = !DILocation(line: 73, column: 6, scope: !17703)
!17719 = !DILocation(line: 77, column: 9, scope: !17720)
!17720 = distinct !DILexicalBlock(scope: !17712, file: !2573, line: 76, column: 9)
!17721 = !DILocation(line: 0, scope: !17712)
!17722 = !DILocation(line: 81, column: 20, scope: !17723)
!17723 = distinct !DILexicalBlock(scope: !17703, file: !2573, line: 81, column: 6)
!17724 = !DILocation(line: 81, column: 6, scope: !17723)
!17725 = !DILocation(line: 81, column: 32, scope: !17723)
!17726 = !DILocation(line: 85, column: 2, scope: !17703)
!17727 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !319, file: !319, line: 341, type: !17728, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !17730)
!17728 = !DISubroutineType(types: !17729)
!17729 = !{!17651, !17688, !17651}
!17730 = !{!17731, !17732}
!17731 = !DILocalVariable(name: "list", arg: 1, scope: !17727, file: !319, line: 341, type: !17688)
!17732 = !DILocalVariable(name: "node", arg: 2, scope: !17727, file: !319, line: 342, type: !17651)
!17733 = !DILocation(line: 0, scope: !17727)
!17734 = !DILocation(line: 344, column: 15, scope: !17727)
!17735 = !DILocation(line: 344, column: 9, scope: !17727)
!17736 = !DILocation(line: 344, column: 26, scope: !17727)
!17737 = !DILocation(line: 344, column: 2, scope: !17727)
!17738 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !319, file: !319, line: 325, type: !17728, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !17739)
!17739 = !{!17740, !17741}
!17740 = !DILocalVariable(name: "list", arg: 1, scope: !17738, file: !319, line: 325, type: !17688)
!17741 = !DILocalVariable(name: "node", arg: 2, scope: !17738, file: !319, line: 326, type: !17651)
!17742 = !DILocation(line: 0, scope: !17738)
!17743 = !DILocation(line: 328, column: 24, scope: !17738)
!17744 = !DILocation(line: 328, column: 15, scope: !17738)
!17745 = !DILocation(line: 328, column: 9, scope: !17738)
!17746 = !DILocation(line: 328, column: 45, scope: !17738)
!17747 = !DILocation(line: 328, column: 2, scope: !17738)
!17748 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !319, file: !319, line: 294, type: !17749, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !17751)
!17749 = !DISubroutineType(types: !17750)
!17750 = !{!17651, !17688}
!17751 = !{!17752}
!17752 = !DILocalVariable(name: "list", arg: 1, scope: !17748, file: !319, line: 294, type: !17688)
!17753 = !DILocation(line: 0, scope: !17748)
!17754 = !DILocation(line: 296, column: 9, scope: !17748)
!17755 = !DILocation(line: 296, column: 2, scope: !17748)
!17756 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !319, file: !319, line: 266, type: !17757, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !17759)
!17757 = !DISubroutineType(types: !17758)
!17758 = !{!145, !17688}
!17759 = !{!17760}
!17760 = !DILocalVariable(name: "list", arg: 1, scope: !17756, file: !319, line: 266, type: !17688)
!17761 = !DILocation(line: 0, scope: !17756)
!17762 = !DILocation(line: 268, column: 15, scope: !17756)
!17763 = !DILocation(line: 268, column: 20, scope: !17756)
!17764 = !DILocation(line: 268, column: 2, scope: !17756)
!17765 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2573, file: !2573, line: 150, type: !17766, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !17768)
!17766 = !DISubroutineType(types: !17767)
!17767 = !{!107, !2546}
!17768 = !{!17769, !17770, !17771, !17773}
!17769 = !DILocalVariable(name: "to", arg: 1, scope: !17765, file: !2573, line: 150, type: !2546)
!17770 = !DILocalVariable(name: "ret", scope: !17765, file: !2573, line: 152, type: !107)
!17771 = !DILocalVariable(name: "__i", scope: !17772, file: !2573, line: 154, type: !17506)
!17772 = distinct !DILexicalBlock(scope: !17765, file: !2573, line: 154, column: 2)
!17773 = !DILocalVariable(name: "__key", scope: !17772, file: !2573, line: 154, type: !17506)
!17774 = !DILocation(line: 0, scope: !17765)
!17775 = !DILocation(line: 0, scope: !17772)
!17776 = !DILocation(line: 0, scope: !17534, inlinedAt: !17777)
!17777 = distinct !DILocation(line: 154, column: 2, scope: !17772)
!17778 = !DILocation(line: 55, column: 2, scope: !17543, inlinedAt: !17779)
!17779 = distinct !DILocation(line: 145, column: 10, scope: !17534, inlinedAt: !17777)
!17780 = !DILocation(line: 0, scope: !17543, inlinedAt: !17779)
!17781 = !DILocation(line: 148, column: 2, scope: !17551, inlinedAt: !17777)
!17782 = !DILocation(line: 148, column: 2, scope: !17552, inlinedAt: !17777)
!17783 = !DILocation(line: 148, column: 2, scope: !17555, inlinedAt: !17777)
!17784 = !DILocation(line: 160, column: 2, scope: !17534, inlinedAt: !17777)
!17785 = !DILocation(line: 155, column: 7, scope: !17786)
!17786 = distinct !DILexicalBlock(scope: !17787, file: !2573, line: 155, column: 7)
!17787 = distinct !DILexicalBlock(scope: !17788, file: !2573, line: 154, column: 24)
!17788 = distinct !DILexicalBlock(scope: !17772, file: !2573, line: 154, column: 2)
!17789 = !DILocation(line: 155, column: 7, scope: !17787)
!17790 = !DILocation(line: 156, column: 4, scope: !17791)
!17791 = distinct !DILexicalBlock(scope: !17786, file: !2573, line: 155, column: 39)
!17792 = !DILocation(line: 158, column: 3, scope: !17791)
!17793 = !DILocation(line: 0, scope: !17607, inlinedAt: !17794)
!17794 = distinct !DILocation(line: 154, column: 2, scope: !17788)
!17795 = !DILocation(line: 194, column: 2, scope: !17615, inlinedAt: !17794)
!17796 = !DILocation(line: 194, column: 2, scope: !17616, inlinedAt: !17794)
!17797 = !DILocation(line: 194, column: 2, scope: !17619, inlinedAt: !17794)
!17798 = !DILocation(line: 0, scope: !17621, inlinedAt: !17799)
!17799 = distinct !DILocation(line: 215, column: 2, scope: !17607, inlinedAt: !17794)
!17800 = !DILocation(line: 95, column: 2, scope: !17621, inlinedAt: !17799)
!17801 = !DILocation(line: 161, column: 2, scope: !17765)
!17802 = distinct !DISubprogram(name: "remove_timeout", scope: !2573, file: !2573, line: 53, type: !2567, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !17803)
!17803 = !{!17804}
!17804 = !DILocalVariable(name: "t", arg: 1, scope: !17802, file: !2573, line: 53, type: !2546)
!17805 = !DILocation(line: 0, scope: !17802)
!17806 = !DILocation(line: 55, column: 6, scope: !17807)
!17807 = distinct !DILexicalBlock(scope: !17802, file: !2573, line: 55, column: 6)
!17808 = !DILocation(line: 55, column: 14, scope: !17807)
!17809 = !DILocation(line: 55, column: 6, scope: !17802)
!17810 = !DILocation(line: 56, column: 25, scope: !17811)
!17811 = distinct !DILexicalBlock(scope: !17807, file: !2573, line: 55, column: 23)
!17812 = !DILocation(line: 56, column: 12, scope: !17811)
!17813 = !DILocation(line: 56, column: 19, scope: !17811)
!17814 = !DILocation(line: 57, column: 2, scope: !17811)
!17815 = !DILocation(line: 59, column: 23, scope: !17802)
!17816 = !DILocation(line: 59, column: 2, scope: !17802)
!17817 = !DILocation(line: 60, column: 1, scope: !17802)
!17818 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !319, file: !319, line: 496, type: !17819, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !17821)
!17819 = !DISubroutineType(types: !17820)
!17820 = !{null, !17651}
!17821 = !{!17822, !17823, !17824}
!17822 = !DILocalVariable(name: "node", arg: 1, scope: !17818, file: !319, line: 496, type: !17651)
!17823 = !DILocalVariable(name: "prev", scope: !17818, file: !319, line: 498, type: !17663)
!17824 = !DILocalVariable(name: "next", scope: !17818, file: !319, line: 499, type: !17663)
!17825 = !DILocation(line: 0, scope: !17818)
!17826 = !DILocation(line: 498, column: 34, scope: !17818)
!17827 = !DILocation(line: 499, column: 34, scope: !17818)
!17828 = !DILocation(line: 501, column: 8, scope: !17818)
!17829 = !DILocation(line: 501, column: 13, scope: !17818)
!17830 = !DILocation(line: 502, column: 8, scope: !17818)
!17831 = !DILocation(line: 502, column: 13, scope: !17818)
!17832 = !DILocation(line: 503, column: 2, scope: !17818)
!17833 = !DILocation(line: 504, column: 1, scope: !17818)
!17834 = distinct !DISubprogram(name: "sys_dnode_init", scope: !319, file: !319, line: 211, type: !17819, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !17835)
!17835 = !{!17836}
!17836 = !DILocalVariable(name: "node", arg: 1, scope: !17834, file: !319, line: 211, type: !17651)
!17837 = !DILocation(line: 0, scope: !17834)
!17838 = !DILocation(line: 213, column: 8, scope: !17834)
!17839 = !DILocation(line: 213, column: 13, scope: !17834)
!17840 = !DILocation(line: 214, column: 8, scope: !17834)
!17841 = !DILocation(line: 214, column: 13, scope: !17834)
!17842 = !DILocation(line: 215, column: 1, scope: !17834)
!17843 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2573, file: !2573, line: 183, type: !17844, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !17848)
!17844 = !DISubroutineType(types: !17845)
!17845 = !{!564, !17846}
!17846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17847, size: 32)
!17847 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2547)
!17848 = !{!17849, !17850, !17851, !17853}
!17849 = !DILocalVariable(name: "timeout", arg: 1, scope: !17843, file: !2573, line: 183, type: !17846)
!17850 = !DILocalVariable(name: "ticks", scope: !17843, file: !2573, line: 185, type: !564)
!17851 = !DILocalVariable(name: "__i", scope: !17852, file: !2573, line: 187, type: !17506)
!17852 = distinct !DILexicalBlock(scope: !17843, file: !2573, line: 187, column: 2)
!17853 = !DILocalVariable(name: "__key", scope: !17852, file: !2573, line: 187, type: !17506)
!17854 = !DILocation(line: 0, scope: !17843)
!17855 = !DILocation(line: 0, scope: !17852)
!17856 = !DILocation(line: 0, scope: !17534, inlinedAt: !17857)
!17857 = distinct !DILocation(line: 187, column: 2, scope: !17852)
!17858 = !DILocation(line: 55, column: 2, scope: !17543, inlinedAt: !17859)
!17859 = distinct !DILocation(line: 145, column: 10, scope: !17534, inlinedAt: !17857)
!17860 = !DILocation(line: 0, scope: !17543, inlinedAt: !17859)
!17861 = !DILocation(line: 148, column: 2, scope: !17551, inlinedAt: !17857)
!17862 = !DILocation(line: 148, column: 2, scope: !17552, inlinedAt: !17857)
!17863 = !DILocation(line: 148, column: 2, scope: !17555, inlinedAt: !17857)
!17864 = !DILocation(line: 160, column: 2, scope: !17534, inlinedAt: !17857)
!17865 = !DILocation(line: 188, column: 11, scope: !17866)
!17866 = distinct !DILexicalBlock(scope: !17867, file: !2573, line: 187, column: 24)
!17867 = distinct !DILexicalBlock(scope: !17852, file: !2573, line: 187, column: 2)
!17868 = !DILocation(line: 0, scope: !17607, inlinedAt: !17869)
!17869 = distinct !DILocation(line: 187, column: 2, scope: !17867)
!17870 = !DILocation(line: 194, column: 2, scope: !17615, inlinedAt: !17869)
!17871 = !DILocation(line: 194, column: 2, scope: !17616, inlinedAt: !17869)
!17872 = !DILocation(line: 194, column: 2, scope: !17619, inlinedAt: !17869)
!17873 = !DILocation(line: 0, scope: !17621, inlinedAt: !17874)
!17874 = distinct !DILocation(line: 215, column: 2, scope: !17607, inlinedAt: !17869)
!17875 = !DILocation(line: 95, column: 2, scope: !17621, inlinedAt: !17874)
!17876 = !DILocation(line: 191, column: 2, scope: !17843)
!17877 = distinct !DISubprogram(name: "timeout_rem", scope: !2573, file: !2573, line: 165, type: !17844, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !17878)
!17878 = !{!17879, !17880, !17881}
!17879 = !DILocalVariable(name: "timeout", arg: 1, scope: !17877, file: !2573, line: 165, type: !17846)
!17880 = !DILocalVariable(name: "ticks", scope: !17877, file: !2573, line: 167, type: !564)
!17881 = !DILocalVariable(name: "t", scope: !17882, file: !2573, line: 173, type: !2546)
!17882 = distinct !DILexicalBlock(scope: !17877, file: !2573, line: 173, column: 2)
!17883 = !DILocation(line: 0, scope: !17877)
!17884 = !DILocation(line: 169, column: 6, scope: !17885)
!17885 = distinct !DILexicalBlock(scope: !17877, file: !2573, line: 169, column: 6)
!17886 = !DILocation(line: 169, column: 6, scope: !17877)
!17887 = !DILocation(line: 173, column: 28, scope: !17882)
!17888 = !DILocation(line: 0, scope: !17882)
!17889 = !DILocation(line: 173, column: 39, scope: !17890)
!17890 = distinct !DILexicalBlock(scope: !17882, file: !2573, line: 173, column: 2)
!17891 = !DILocation(line: 173, column: 2, scope: !17882)
!17892 = !DILocation(line: 174, column: 15, scope: !17893)
!17893 = distinct !DILexicalBlock(scope: !17890, file: !2573, line: 173, column: 61)
!17894 = !DILocation(line: 174, column: 9, scope: !17893)
!17895 = !DILocation(line: 175, column: 15, scope: !17896)
!17896 = distinct !DILexicalBlock(scope: !17893, file: !2573, line: 175, column: 7)
!17897 = !DILocation(line: 175, column: 7, scope: !17893)
!17898 = !DILocation(line: 173, column: 52, scope: !17890)
!17899 = distinct !{!17899, !17891, !17900}
!17900 = !DILocation(line: 178, column: 2, scope: !17882)
!17901 = !DILocation(line: 180, column: 17, scope: !17877)
!17902 = !DILocation(line: 180, column: 15, scope: !17877)
!17903 = !DILocation(line: 180, column: 2, scope: !17877)
!17904 = !DILocation(line: 181, column: 1, scope: !17877)
!17905 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14722, file: !14722, line: 35, type: !17906, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !17908)
!17906 = !DISubroutineType(types: !17907)
!17907 = !{!145, !17846}
!17908 = !{!17909}
!17909 = !DILocalVariable(name: "to", arg: 1, scope: !17905, file: !14722, line: 35, type: !17846)
!17910 = !DILocation(line: 0, scope: !17905)
!17911 = !DILocation(line: 37, column: 35, scope: !17905)
!17912 = !DILocation(line: 37, column: 10, scope: !17905)
!17913 = !DILocation(line: 37, column: 9, scope: !17905)
!17914 = !DILocation(line: 37, column: 2, scope: !17905)
!17915 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2573, file: !2573, line: 194, type: !17844, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !17916)
!17916 = !{!17917, !17918, !17919, !17921}
!17917 = !DILocalVariable(name: "timeout", arg: 1, scope: !17915, file: !2573, line: 194, type: !17846)
!17918 = !DILocalVariable(name: "ticks", scope: !17915, file: !2573, line: 196, type: !564)
!17919 = !DILocalVariable(name: "__i", scope: !17920, file: !2573, line: 198, type: !17506)
!17920 = distinct !DILexicalBlock(scope: !17915, file: !2573, line: 198, column: 2)
!17921 = !DILocalVariable(name: "__key", scope: !17920, file: !2573, line: 198, type: !17506)
!17922 = !DILocation(line: 0, scope: !17915)
!17923 = !DILocation(line: 0, scope: !17920)
!17924 = !DILocation(line: 0, scope: !17534, inlinedAt: !17925)
!17925 = distinct !DILocation(line: 198, column: 2, scope: !17920)
!17926 = !DILocation(line: 55, column: 2, scope: !17543, inlinedAt: !17927)
!17927 = distinct !DILocation(line: 145, column: 10, scope: !17534, inlinedAt: !17925)
!17928 = !DILocation(line: 0, scope: !17543, inlinedAt: !17927)
!17929 = !DILocation(line: 148, column: 2, scope: !17551, inlinedAt: !17925)
!17930 = !DILocation(line: 148, column: 2, scope: !17552, inlinedAt: !17925)
!17931 = !DILocation(line: 148, column: 2, scope: !17555, inlinedAt: !17925)
!17932 = !DILocation(line: 160, column: 2, scope: !17534, inlinedAt: !17925)
!17933 = !DILocation(line: 199, column: 11, scope: !17934)
!17934 = distinct !DILexicalBlock(scope: !17935, file: !2573, line: 198, column: 24)
!17935 = distinct !DILexicalBlock(scope: !17920, file: !2573, line: 198, column: 2)
!17936 = !DILocation(line: 199, column: 23, scope: !17934)
!17937 = !DILocation(line: 0, scope: !17607, inlinedAt: !17938)
!17938 = distinct !DILocation(line: 198, column: 2, scope: !17935)
!17939 = !DILocation(line: 194, column: 2, scope: !17615, inlinedAt: !17938)
!17940 = !DILocation(line: 194, column: 2, scope: !17616, inlinedAt: !17938)
!17941 = !DILocation(line: 194, column: 2, scope: !17619, inlinedAt: !17938)
!17942 = !DILocation(line: 0, scope: !17621, inlinedAt: !17943)
!17943 = distinct !DILocation(line: 215, column: 2, scope: !17607, inlinedAt: !17938)
!17944 = !DILocation(line: 95, column: 2, scope: !17621, inlinedAt: !17943)
!17945 = !DILocation(line: 199, column: 21, scope: !17934)
!17946 = !DILocation(line: 202, column: 2, scope: !17915)
!17947 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2573, file: !2573, line: 205, type: !17640, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !17948)
!17948 = !{!17949, !17950, !17952}
!17949 = !DILocalVariable(name: "ret", scope: !17947, file: !2573, line: 207, type: !904)
!17950 = !DILocalVariable(name: "__i", scope: !17951, file: !2573, line: 209, type: !17506)
!17951 = distinct !DILexicalBlock(scope: !17947, file: !2573, line: 209, column: 2)
!17952 = !DILocalVariable(name: "__key", scope: !17951, file: !2573, line: 209, type: !17506)
!17953 = !DILocation(line: 0, scope: !17947)
!17954 = !DILocation(line: 0, scope: !17951)
!17955 = !DILocation(line: 0, scope: !17534, inlinedAt: !17956)
!17956 = distinct !DILocation(line: 209, column: 2, scope: !17951)
!17957 = !DILocation(line: 55, column: 2, scope: !17543, inlinedAt: !17958)
!17958 = distinct !DILocation(line: 145, column: 10, scope: !17534, inlinedAt: !17956)
!17959 = !DILocation(line: 0, scope: !17543, inlinedAt: !17958)
!17960 = !DILocation(line: 148, column: 2, scope: !17551, inlinedAt: !17956)
!17961 = !DILocation(line: 148, column: 2, scope: !17552, inlinedAt: !17956)
!17962 = !DILocation(line: 148, column: 2, scope: !17555, inlinedAt: !17956)
!17963 = !DILocation(line: 160, column: 2, scope: !17534, inlinedAt: !17956)
!17964 = !DILocation(line: 210, column: 9, scope: !17965)
!17965 = distinct !DILexicalBlock(scope: !17966, file: !2573, line: 209, column: 24)
!17966 = distinct !DILexicalBlock(scope: !17951, file: !2573, line: 209, column: 2)
!17967 = !DILocation(line: 0, scope: !17607, inlinedAt: !17968)
!17968 = distinct !DILocation(line: 209, column: 2, scope: !17966)
!17969 = !DILocation(line: 194, column: 2, scope: !17615, inlinedAt: !17968)
!17970 = !DILocation(line: 194, column: 2, scope: !17616, inlinedAt: !17968)
!17971 = !DILocation(line: 194, column: 2, scope: !17619, inlinedAt: !17968)
!17972 = !DILocation(line: 0, scope: !17621, inlinedAt: !17973)
!17973 = distinct !DILocation(line: 215, column: 2, scope: !17607, inlinedAt: !17968)
!17974 = !DILocation(line: 95, column: 2, scope: !17621, inlinedAt: !17973)
!17975 = !DILocation(line: 212, column: 2, scope: !17947)
!17976 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2573, file: !2573, line: 215, type: !11607, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !17977)
!17977 = !{!17978, !17979, !17980, !17982, !17983, !17986, !17987}
!17978 = !DILocalVariable(name: "ticks", arg: 1, scope: !17976, file: !2573, line: 215, type: !904)
!17979 = !DILocalVariable(name: "is_idle", arg: 2, scope: !17976, file: !2573, line: 215, type: !145)
!17980 = !DILocalVariable(name: "__i", scope: !17981, file: !2573, line: 217, type: !17506)
!17981 = distinct !DILexicalBlock(scope: !17976, file: !2573, line: 217, column: 2)
!17982 = !DILocalVariable(name: "__key", scope: !17981, file: !2573, line: 217, type: !17506)
!17983 = !DILocalVariable(name: "next_to", scope: !17984, file: !2573, line: 218, type: !107)
!17984 = distinct !DILexicalBlock(scope: !17985, file: !2573, line: 217, column: 24)
!17985 = distinct !DILexicalBlock(scope: !17981, file: !2573, line: 217, column: 2)
!17986 = !DILocalVariable(name: "sooner", scope: !17984, file: !2573, line: 219, type: !145)
!17987 = !DILocalVariable(name: "imminent", scope: !17984, file: !2573, line: 221, type: !145)
!17988 = !DILocation(line: 0, scope: !17976)
!17989 = !DILocation(line: 0, scope: !17981)
!17990 = !DILocation(line: 0, scope: !17534, inlinedAt: !17991)
!17991 = distinct !DILocation(line: 217, column: 2, scope: !17981)
!17992 = !DILocation(line: 55, column: 2, scope: !17543, inlinedAt: !17993)
!17993 = distinct !DILocation(line: 145, column: 10, scope: !17534, inlinedAt: !17991)
!17994 = !DILocation(line: 0, scope: !17543, inlinedAt: !17993)
!17995 = !DILocation(line: 148, column: 2, scope: !17551, inlinedAt: !17991)
!17996 = !DILocation(line: 148, column: 2, scope: !17552, inlinedAt: !17991)
!17997 = !DILocation(line: 148, column: 2, scope: !17555, inlinedAt: !17991)
!17998 = !DILocation(line: 160, column: 2, scope: !17534, inlinedAt: !17991)
!17999 = !DILocation(line: 218, column: 17, scope: !17984)
!18000 = !DILocation(line: 0, scope: !17984)
!18001 = !DILocation(line: 221, column: 27, scope: !17984)
!18002 = !DILocation(line: 233, column: 17, scope: !18003)
!18003 = distinct !DILexicalBlock(scope: !17984, file: !2573, line: 233, column: 7)
!18004 = !DILocation(line: 234, column: 26, scope: !18005)
!18005 = distinct !DILexicalBlock(scope: !18003, file: !2573, line: 233, column: 56)
!18006 = !DILocation(line: 234, column: 4, scope: !18005)
!18007 = !DILocation(line: 235, column: 3, scope: !18005)
!18008 = !DILocation(line: 0, scope: !17607, inlinedAt: !18009)
!18009 = distinct !DILocation(line: 217, column: 2, scope: !17985)
!18010 = !DILocation(line: 194, column: 2, scope: !17615, inlinedAt: !18009)
!18011 = !DILocation(line: 194, column: 2, scope: !17616, inlinedAt: !18009)
!18012 = !DILocation(line: 194, column: 2, scope: !17619, inlinedAt: !18009)
!18013 = !DILocation(line: 0, scope: !17621, inlinedAt: !18014)
!18014 = distinct !DILocation(line: 215, column: 2, scope: !17607, inlinedAt: !18009)
!18015 = !DILocation(line: 95, column: 2, scope: !17621, inlinedAt: !18014)
!18016 = !DILocation(line: 237, column: 1, scope: !17976)
!18017 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2573, file: !2573, line: 239, type: !18018, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !18020)
!18018 = !DISubroutineType(types: !18019)
!18019 = !{null, !904}
!18020 = !{!18021, !18022, !18023, !18025}
!18021 = !DILocalVariable(name: "ticks", arg: 1, scope: !18017, file: !2573, line: 239, type: !904)
!18022 = !DILocalVariable(name: "key", scope: !18017, file: !2573, line: 245, type: !17506)
!18023 = !DILocalVariable(name: "t", scope: !18024, file: !2573, line: 262, type: !2546)
!18024 = distinct !DILexicalBlock(scope: !18017, file: !2573, line: 261, column: 67)
!18025 = !DILocalVariable(name: "dt", scope: !18024, file: !2573, line: 263, type: !107)
!18026 = !DILocation(line: 0, scope: !18017)
!18027 = !DILocation(line: 242, column: 2, scope: !18017)
!18028 = !DILocation(line: 0, scope: !17534, inlinedAt: !18029)
!18029 = distinct !DILocation(line: 245, column: 25, scope: !18017)
!18030 = !DILocation(line: 55, column: 2, scope: !17543, inlinedAt: !18031)
!18031 = distinct !DILocation(line: 145, column: 10, scope: !17534, inlinedAt: !18029)
!18032 = !DILocation(line: 0, scope: !17543, inlinedAt: !18031)
!18033 = !DILocation(line: 148, column: 2, scope: !17551, inlinedAt: !18029)
!18034 = !DILocation(line: 148, column: 2, scope: !17552, inlinedAt: !18029)
!18035 = !DILocation(line: 148, column: 2, scope: !17555, inlinedAt: !18029)
!18036 = !DILocation(line: 160, column: 2, scope: !17534, inlinedAt: !18029)
!18037 = !DILocation(line: 261, column: 9, scope: !18017)
!18038 = !DILocation(line: 261, column: 17, scope: !18017)
!18039 = !DILocation(line: 261, column: 25, scope: !18017)
!18040 = !DILocation(line: 261, column: 37, scope: !18017)
!18041 = !DILocation(line: 261, column: 47, scope: !18017)
!18042 = !DILocation(line: 261, column: 44, scope: !18017)
!18043 = !DILocation(line: 261, column: 2, scope: !18017)
!18044 = !DILocation(line: 0, scope: !18024)
!18045 = !DILocation(line: 263, column: 12, scope: !18024)
!18046 = !DILocation(line: 265, column: 16, scope: !18024)
!18047 = !DILocation(line: 265, column: 13, scope: !18024)
!18048 = !DILocation(line: 266, column: 13, scope: !18024)
!18049 = !DILocation(line: 267, column: 3, scope: !18024)
!18050 = !DILocation(line: 0, scope: !17607, inlinedAt: !18051)
!18051 = distinct !DILocation(line: 269, column: 3, scope: !18024)
!18052 = !DILocation(line: 194, column: 2, scope: !17615, inlinedAt: !18051)
!18053 = !DILocation(line: 194, column: 2, scope: !17616, inlinedAt: !18051)
!18054 = !DILocation(line: 194, column: 2, scope: !17619, inlinedAt: !18051)
!18055 = !DILocation(line: 0, scope: !17621, inlinedAt: !18056)
!18056 = distinct !DILocation(line: 215, column: 2, scope: !17607, inlinedAt: !18051)
!18057 = !DILocation(line: 95, column: 2, scope: !17621, inlinedAt: !18056)
!18058 = !DILocation(line: 270, column: 6, scope: !18024)
!18059 = !DILocation(line: 270, column: 3, scope: !18024)
!18060 = !DILocation(line: 0, scope: !17534, inlinedAt: !18061)
!18061 = distinct !DILocation(line: 271, column: 9, scope: !18024)
!18062 = !DILocation(line: 55, column: 2, scope: !17543, inlinedAt: !18063)
!18063 = distinct !DILocation(line: 145, column: 10, scope: !17534, inlinedAt: !18061)
!18064 = !DILocation(line: 0, scope: !17543, inlinedAt: !18063)
!18065 = !DILocation(line: 148, column: 2, scope: !17551, inlinedAt: !18061)
!18066 = !DILocation(line: 148, column: 2, scope: !17552, inlinedAt: !18061)
!18067 = !DILocation(line: 148, column: 2, scope: !17555, inlinedAt: !18061)
!18068 = !DILocation(line: 160, column: 2, scope: !17534, inlinedAt: !18061)
!18069 = !DILocation(line: 272, column: 22, scope: !18024)
!18070 = distinct !{!18070, !18043, !18071}
!18071 = !DILocation(line: 273, column: 2, scope: !18017)
!18072 = !DILocation(line: 276, column: 19, scope: !18073)
!18073 = distinct !DILexicalBlock(scope: !18074, file: !2573, line: 275, column: 23)
!18074 = distinct !DILexicalBlock(scope: !18017, file: !2573, line: 275, column: 6)
!18075 = !DILocation(line: 277, column: 2, scope: !18073)
!18076 = !DILocation(line: 279, column: 15, scope: !18017)
!18077 = !DILocation(line: 279, column: 12, scope: !18017)
!18078 = !DILocation(line: 280, column: 21, scope: !18017)
!18079 = !DILocation(line: 282, column: 24, scope: !18017)
!18080 = !DILocation(line: 282, column: 2, scope: !18017)
!18081 = !DILocation(line: 0, scope: !17607, inlinedAt: !18082)
!18082 = distinct !DILocation(line: 284, column: 2, scope: !18017)
!18083 = !DILocation(line: 194, column: 2, scope: !17615, inlinedAt: !18082)
!18084 = !DILocation(line: 194, column: 2, scope: !17616, inlinedAt: !18082)
!18085 = !DILocation(line: 194, column: 2, scope: !17619, inlinedAt: !18082)
!18086 = !DILocation(line: 0, scope: !17621, inlinedAt: !18087)
!18087 = distinct !DILocation(line: 215, column: 2, scope: !17607, inlinedAt: !18082)
!18088 = !DILocation(line: 95, column: 2, scope: !17621, inlinedAt: !18087)
!18089 = !DILocation(line: 285, column: 1, scope: !18017)
!18090 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2573, file: !2573, line: 287, type: !18091, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !18093)
!18091 = !DISubroutineType(types: !18092)
!18092 = !{!376}
!18093 = !{!18094, !18095, !18097}
!18094 = !DILocalVariable(name: "t", scope: !18090, file: !2573, line: 289, type: !566)
!18095 = !DILocalVariable(name: "__i", scope: !18096, file: !2573, line: 291, type: !17506)
!18096 = distinct !DILexicalBlock(scope: !18090, file: !2573, line: 291, column: 2)
!18097 = !DILocalVariable(name: "__key", scope: !18096, file: !2573, line: 291, type: !17506)
!18098 = !DILocation(line: 0, scope: !18090)
!18099 = !DILocation(line: 0, scope: !18096)
!18100 = !DILocation(line: 0, scope: !17534, inlinedAt: !18101)
!18101 = distinct !DILocation(line: 291, column: 2, scope: !18096)
!18102 = !DILocation(line: 55, column: 2, scope: !17543, inlinedAt: !18103)
!18103 = distinct !DILocation(line: 145, column: 10, scope: !17534, inlinedAt: !18101)
!18104 = !DILocation(line: 0, scope: !17543, inlinedAt: !18103)
!18105 = !DILocation(line: 148, column: 2, scope: !17551, inlinedAt: !18101)
!18106 = !DILocation(line: 148, column: 2, scope: !17552, inlinedAt: !18101)
!18107 = !DILocation(line: 148, column: 2, scope: !17555, inlinedAt: !18101)
!18108 = !DILocation(line: 160, column: 2, scope: !17534, inlinedAt: !18101)
!18109 = !DILocation(line: 292, column: 7, scope: !18110)
!18110 = distinct !DILexicalBlock(scope: !18111, file: !2573, line: 291, column: 24)
!18111 = distinct !DILexicalBlock(scope: !18096, file: !2573, line: 291, column: 2)
!18112 = !DILocation(line: 292, column: 19, scope: !18110)
!18113 = !DILocation(line: 0, scope: !17607, inlinedAt: !18114)
!18114 = distinct !DILocation(line: 291, column: 2, scope: !18111)
!18115 = !DILocation(line: 194, column: 2, scope: !17615, inlinedAt: !18114)
!18116 = !DILocation(line: 194, column: 2, scope: !17616, inlinedAt: !18114)
!18117 = !DILocation(line: 194, column: 2, scope: !17619, inlinedAt: !18114)
!18118 = !DILocation(line: 0, scope: !17621, inlinedAt: !18119)
!18119 = distinct !DILocation(line: 215, column: 2, scope: !17607, inlinedAt: !18114)
!18120 = !DILocation(line: 95, column: 2, scope: !17621, inlinedAt: !18119)
!18121 = !DILocation(line: 292, column: 17, scope: !18110)
!18122 = !DILocation(line: 294, column: 2, scope: !18090)
!18123 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2573, file: !2573, line: 297, type: !6405, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !2236)
!18124 = !DILocation(line: 300, column: 19, scope: !18123)
!18125 = !DILocation(line: 300, column: 9, scope: !18123)
!18126 = !DILocation(line: 300, column: 2, scope: !18123)
!18127 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2573, file: !2573, line: 306, type: !18091, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !2236)
!18128 = !DILocation(line: 308, column: 9, scope: !18127)
!18129 = !DILocation(line: 308, column: 2, scope: !18127)
!18130 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2573, file: !2573, line: 319, type: !6415, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !18131)
!18131 = !{!18132, !18133, !18134, !18135}
!18132 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !18130, file: !2573, line: 319, type: !152)
!18133 = !DILocalVariable(name: "start_cycles", scope: !18130, file: !2573, line: 328, type: !152)
!18134 = !DILocalVariable(name: "cycles_to_wait", scope: !18130, file: !2573, line: 331, type: !152)
!18135 = !DILocalVariable(name: "current_cycles", scope: !18136, file: !2573, line: 338, type: !152)
!18136 = distinct !DILexicalBlock(scope: !18137, file: !2573, line: 337, column: 11)
!18137 = distinct !DILexicalBlock(scope: !18138, file: !2573, line: 337, column: 2)
!18138 = distinct !DILexicalBlock(scope: !18130, file: !2573, line: 337, column: 2)
!18139 = !DILocation(line: 0, scope: !18130)
!18140 = !DILocation(line: 322, column: 19, scope: !18141)
!18141 = distinct !DILexicalBlock(scope: !18130, file: !2573, line: 322, column: 6)
!18142 = !DILocation(line: 322, column: 6, scope: !18130)
!18143 = !DILocation(line: 328, column: 26, scope: !18130)
!18144 = !DILocation(line: 333, column: 43, scope: !18130)
!18145 = !DILocation(line: 337, column: 2, scope: !18130)
!18146 = !DILocation(line: 338, column: 29, scope: !18136)
!18147 = !DILocation(line: 0, scope: !18136)
!18148 = !DILocation(line: 341, column: 23, scope: !18149)
!18149 = distinct !DILexicalBlock(scope: !18136, file: !2573, line: 341, column: 7)
!18150 = !DILocation(line: 341, column: 39, scope: !18149)
!18151 = !DILocation(line: 349, column: 1, scope: !18130)
!18152 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !406, file: !406, line: 1675, type: !6405, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !2236)
!18153 = !DILocation(line: 1677, column: 9, scope: !18152)
!18154 = !DILocation(line: 1677, column: 2, scope: !18152)
!18155 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !8818, file: !8818, line: 24, type: !6405, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !2236)
!18156 = !DILocation(line: 26, column: 9, scope: !18155)
!18157 = !DILocation(line: 26, column: 2, scope: !18155)
!18158 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2573, file: !2573, line: 364, type: !18159, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !18161)
!18159 = !DISubroutineType(types: !18160)
!18160 = !{!566, !17496}
!18161 = !{!18162, !18163}
!18162 = !DILocalVariable(name: "timeout", arg: 1, scope: !18158, file: !2573, line: 364, type: !17496)
!18163 = !DILocalVariable(name: "dt", scope: !18158, file: !2573, line: 366, type: !564)
!18164 = !DILocation(line: 0, scope: !18158)
!18165 = !DILocation(line: 368, column: 6, scope: !18158)
!18166 = !DILocation(line: 371, column: 10, scope: !18167)
!18167 = distinct !DILexicalBlock(scope: !18168, file: !2573, line: 370, column: 47)
!18168 = distinct !DILexicalBlock(scope: !18169, file: !2573, line: 370, column: 13)
!18169 = distinct !DILexicalBlock(scope: !18158, file: !2573, line: 368, column: 6)
!18170 = !DILocation(line: 371, column: 3, scope: !18167)
!18171 = !DILocation(line: 376, column: 58, scope: !18172)
!18172 = distinct !DILexicalBlock(scope: !18173, file: !2573, line: 376, column: 7)
!18173 = distinct !DILexicalBlock(scope: !18168, file: !2573, line: 372, column: 9)
!18174 = !DILocation(line: 376, column: 7, scope: !18173)
!18175 = !DILocation(line: 376, column: 43, scope: !18172)
!18176 = !DILocation(line: 377, column: 4, scope: !18177)
!18177 = distinct !DILexicalBlock(scope: !18172, file: !2573, line: 376, column: 64)
!18178 = !DILocation(line: 379, column: 10, scope: !18173)
!18179 = !DILocation(line: 379, column: 33, scope: !18173)
!18180 = !DILocation(line: 379, column: 31, scope: !18173)
!18181 = !DILocation(line: 379, column: 3, scope: !18173)
!18182 = !DILocation(line: 0, scope: !18169)
!18183 = !DILocation(line: 381, column: 1, scope: !18158)
!18184 = distinct !DISubprogram(name: "boot_banner", scope: !18185, file: !18185, line: 26, type: !3148, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3134, retainedNodes: !2236)
!18185 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!18186 = !DILocation(line: 34, column: 2, scope: !18184)
!18187 = !DILocation(line: 36, column: 1, scope: !18184)
