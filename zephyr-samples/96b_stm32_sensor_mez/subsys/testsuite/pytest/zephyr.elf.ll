; ModuleID = 'build/96b_stm32_sensor_mez/pytest/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.ztest_suite_stats = type { i32, i32, i32 }
%struct.ztest_suite_node = type { i8*, i8* ()*, void (i8*)*, void (i8*)*, void (i8*)*, i1 (i8*)*, %struct.ztest_suite_stats* }
%struct.ztest_unit_test_stats = type { i32, i32, i32, i32, i32 }
%struct.ztest_unit_test = type { i8*, i8*, void (i8*)*, i32, %struct.ztest_unit_test_stats* }
%struct.log_source_const_data = type { i8*, i8 }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.k_spinlock }
%struct.k_spinlock = type { i32 }
%struct.arm_mpu_region = type { i32, i8*, %struct.k_spinlock }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.z_thread_stack_element = type { i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, [32 x i8], i32, %struct.ztest_suite_stats, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.anon = type { %struct._dnode }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type opaque
%struct._thread_arch = type { i32, i32 }
%struct.ztest_test_rule = type { void (%struct.ztest_unit_test*, i8*)*, void (%struct.ztest_unit_test*, i8*)* }
%struct.ztest_expected_result_entry = type { i8*, i8*, i32 }
%struct.ztest_arch_api = type { void (i8*)*, i1 (i8*, %struct.ztest_suite_node*)*, i1 (i8*, i8*)* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct.k_spinlock, i32*, i32, %struct._thread_arch }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.k_spinlock, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct._cpu_arch }
%struct._cpu_arch = type {}
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.cbprintf_package_desc = type { i8, i8, i8, i8 }
%struct.str_context = type { i8*, i32, i32 }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.k_spinlock, %struct.k_spinlock }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %struct.k_spinlock*, %struct.k_spinlock* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_PeriphCLKInitTypeDef = type { i32, %struct.ztest_unit_test_stats, %struct.RCC_PLLSAIInitTypeDef, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }
%struct.RCC_PLLSAIInitTypeDef = type { i32, i32, i32, i32 }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.USART_TypeDef }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [97 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [97 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236644 to i8*), void (i8*)* inttoptr (i32 134235297 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236644 to i8*), void (i8*)* inttoptr (i32 134235277 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236644 to i8*), void (i8*)* inttoptr (i32 134235267 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236644 to i8*), void (i8*)* inttoptr (i32 134235367 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236644 to i8*), void (i8*)* inttoptr (i32 134235357 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236644 to i8*), void (i8*)* inttoptr (i32 134235347 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236644 to i8*), void (i8*)* inttoptr (i32 134235337 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236644 to i8*), void (i8*)* inttoptr (i32 134235327 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236644 to i8*), void (i8*)* inttoptr (i32 134235317 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236644 to i8*), void (i8*)* inttoptr (i32 134235307 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236644 to i8*), void (i8*)* inttoptr (i32 134235287 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [49 x i8*] [i8* bitcast (%struct.ztest_suite_node* @z_ztest_test_node_test_pytest to i8*), i8* bitcast (%struct.ztest_unit_test* @z_ztest_unit_test__test_pytest__test_pytest to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_cbprintf_package to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_mpu to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_36 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_19 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_90 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_91 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_92 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_93 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_94 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_95 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_96 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_19 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_90 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_91 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_92 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_93 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_94 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_95 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_96 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_48 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_52 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_42 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_45 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_48 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_52 to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_uart_stm32 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_os to i8*)], section "llvm.metadata"
@.str = private unnamed_addr constant [12 x i8] c"test_pytest\00", align 1
@z_ztest_suite_node_stats_test_pytest = dso_local global %struct.ztest_suite_stats zeroinitializer, align 4, !dbg !25
@z_ztest_test_node_test_pytest = internal constant %struct.ztest_suite_node { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0), i8* ()* null, void (i8*)* null, void (i8*)* null, void (i8*)* null, i1 (i8*)* null, %struct.ztest_suite_stats* @z_ztest_suite_node_stats_test_pytest }, section "._ztest_suite_node.static.z_ztest_test_node_test_pytest", align 4, !dbg !109
@z_ztest_unit_test_stats_test_pytest_test_pytest = dso_local global %struct.ztest_unit_test_stats zeroinitializer, align 4, !dbg !173
@z_ztest_unit_test__test_pytest__test_pytest = internal global %struct.ztest_unit_test { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0), void (i8*)* @_test_pytest_test_pytest_wrapper, i32 0, %struct.ztest_unit_test_stats* @z_ztest_unit_test_stats_test_pytest_test_pytest }, section "._ztest_unit_test.static.z_ztest_unit_test__test_pytest__test_pytest", align 4, !dbg !155
@.str.1 = private unnamed_addr constant [13 x i8] c"Hello world\0A\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"cbprintf_package\00", align 1
@log_const_cbprintf_package = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i32 0, i32 0), i8 3 }, section ".log_const_cbprintf_package", align 4, !dbg !175
@.str.1.4 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.2.5 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.3 = private unnamed_addr constant [39 x i8] c"ZEPHYR_BASE/lib/os/cbprintf_packaged.c\00", align 1
@.str.4 = private unnamed_addr constant [33 x i8] c"\09String with too many arguments\0A\00", align 1
@.str.5 = private unnamed_addr constant [26 x i8] c"\09str_ptr_pos[] too small\0A\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"\09unexpected size %u\0A\00", align 1
@.str.7 = private unnamed_addr constant [23 x i8] c"\09too many format args\0A\00", align 1
@.str.8 = private unnamed_addr constant [27 x i8] c"in_packaged != ((void *)0)\00", align 1
@.str.9 = private unnamed_addr constant [168 x i8] c"%c: (unsigned) char * used for %%p argument. It's recommended to cast it to void * because it may cause misbehavior in certain configurations. String:\22%s\22 argument:%d\0A\00", align 1
@.str.10 = private unnamed_addr constant [31 x i8] c"scpy_cnt < sizeof(cpy_str_pos)\00", align 1
@.str.11 = private unnamed_addr constant [32 x i8] c"keep_cnt < sizeof(keep_str_pos)\00", align 1
@__rodata_region_start = external dso_local global [0 x i8], align 1
@__rodata_region_end = external dso_local global [0 x i8], align 1
@.str.12 = private unnamed_addr constant [24 x i8] c"packaged != ((void *)0)\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !207
@.str.13 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !216
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !266
@.str.22 = private unnamed_addr constant [5 x i8] c"%c: \00", align 1
@.str.1.24 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.2.25 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.3.23 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.4.27 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.5.28 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.6.26 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.29 = private unnamed_addr constant [52 x i8] c"%c: r0/a1:  0x%08x  r1/a2:  0x%08x  r2/a3:  0x%08x\0A\00", align 1
@.str.1.30 = private unnamed_addr constant [52 x i8] c"%c: r3/a4:  0x%08x r12/ip:  0x%08x r14/lr:  0x%08x\0A\00", align 1
@.str.2.31 = private unnamed_addr constant [20 x i8] c"%c:  xpsr:  0x%08x\0A\00", align 1
@.str.3.32 = private unnamed_addr constant [51 x i8] c"%c: Faulting instruction address (r15/pc): 0x%08x\0A\00", align 1
@.str.33 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.34 = private unnamed_addr constant [27 x i8] c"prio <= ((1UL << (4)) - 1)\00", align 1
@.str.2.35 = private unnamed_addr constant [47 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/irq_manage.c\00", align 1
@.str.3.36 = private unnamed_addr constant [64 x i8] c"\09invalid priority %d for %d irq! values must be less than %lu\0A\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.39 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.40 = private unnamed_addr constant [19 x i8] c"esf != ((void *)0)\00", align 1
@.str.2.41 = private unnamed_addr constant [51 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/cortex_m/fault.c\00", align 1
@.str.3.42 = private unnamed_addr constant [62 x i8] c"\09ESF could not be retrieved successfully. Shall never occur.\0A\00", align 1
@.str.4.55 = private unnamed_addr constant [48 x i8] c"%c: SPSEL in thread mode does not indicate PSP\0A\00", align 1
@.str.5.47 = private unnamed_addr constant [28 x i8] c"%c: ***** HARD FAULT *****\0A\00", align 1
@.str.6.48 = private unnamed_addr constant [38 x i8] c"%c:   Bus fault on vector table read\0A\00", align 1
@.str.7.49 = private unnamed_addr constant [19 x i8] c"%c:   Debug event\0A\00", align 1
@.str.8.50 = private unnamed_addr constant [36 x i8] c"%c:   Fault escalation (see below)\0A\00", align 1
@.str.9.51 = private unnamed_addr constant [33 x i8] c"%c: ARCH_EXCEPT with reason %x\0A\0A\00", align 1
@.str.10.52 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.53 = private unnamed_addr constant [36 x i8] c"\09Fault escalation without FSR info\0A\00", align 1
@.str.12.54 = private unnamed_addr constant [48 x i8] c"\09HardFault without HFSR info Shall never occur\0A\00", align 1
@.str.13.46 = private unnamed_addr constant [27 x i8] c"%c: ***** MPU FAULT *****\0A\00", align 1
@.str.14 = private unnamed_addr constant [56 x i8] c"%c:   Stacking error (context area might be not valid)\0A\00", align 1
@.str.15 = private unnamed_addr constant [24 x i8] c"%c:   Unstacking error\0A\00", align 1
@.str.16 = private unnamed_addr constant [29 x i8] c"%c:   Data Access Violation\0A\00", align 1
@.str.17 = private unnamed_addr constant [27 x i8] c"%c:   MMFAR Address: 0x%x\0A\00", align 1
@.str.18 = private unnamed_addr constant [36 x i8] c"%c:   Instruction Access Violation\0A\00", align 1
@.str.19 = private unnamed_addr constant [52 x i8] c"%c:   Floating-point lazy state preservation error\0A\00", align 1
@.str.20 = private unnamed_addr constant [74 x i8] c"!(((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->CFSR & (1UL << (0U + 4U)))\00", align 1
@.str.21 = private unnamed_addr constant [35 x i8] c"\09Stacking error not a stack fail\0A\0A\00", align 1
@.str.22.45 = private unnamed_addr constant [27 x i8] c"%c: ***** BUS FAULT *****\0A\00", align 1
@.str.23 = private unnamed_addr constant [22 x i8] c"%c:   Stacking error\0A\00", align 1
@.str.24 = private unnamed_addr constant [30 x i8] c"%c:   Precise data bus error\0A\00", align 1
@.str.25 = private unnamed_addr constant [26 x i8] c"%c:   BFAR Address: 0x%x\0A\00", align 1
@.str.26 = private unnamed_addr constant [32 x i8] c"%c:   Imprecise data bus error\0A\00", align 1
@.str.27 = private unnamed_addr constant [29 x i8] c"%c:   Instruction bus error\0A\00", align 1
@.str.28 = private unnamed_addr constant [29 x i8] c"%c: ***** USAGE FAULT *****\0A\00", align 1
@.str.29.43 = private unnamed_addr constant [24 x i8] c"%c:   Division by zero\0A\00", align 1
@.str.30 = private unnamed_addr constant [31 x i8] c"%c:   Unaligned memory access\0A\00", align 1
@.str.31 = private unnamed_addr constant [35 x i8] c"%c:   No coprocessor instructions\0A\00", align 1
@.str.32 = private unnamed_addr constant [42 x i8] c"%c:   Illegal load of EXC_RETURN into PC\0A\00", align 1
@.str.33.44 = private unnamed_addr constant [31 x i8] c"%c:   Illegal use of the EPSR\0A\00", align 1
@.str.34 = private unnamed_addr constant [48 x i8] c"%c:   Attempt to execute undefined instruction\0A\00", align 1
@.str.35 = private unnamed_addr constant [41 x i8] c"%c: ***** Debug monitor exception *****\0A\00", align 1
@.str.36 = private unnamed_addr constant [24 x i8] c"%c: ***** %s %d) *****\0A\00", align 1
@.str.37 = private unnamed_addr constant [21 x i8] c"Reserved Exception (\00", align 1
@.str.38 = private unnamed_addr constant [25 x i8] c"Spurious interrupt (IRQ \00", align 1
@.str.61 = private unnamed_addr constant [4 x i8] c"mpu\00", align 1
@log_const_mpu = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.61, i32 0, i32 0), i8 3 }, section ".log_const_mpu", align 4, !dbg !295
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.k_spinlock { i32 101384192 } }], align 4, !dbg !447
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !301
@.str.67 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.68 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.2.69 = private unnamed_addr constant [48 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/mpu/arm_mpu.c\00", align 1
@.str.3.70 = private unnamed_addr constant [44 x i8] c"\09Configuring %u static MPU regions failed\0A\0A\00", align 1
@.str.4.75 = private unnamed_addr constant [45 x i8] c"\09Configuring %u dynamic MPU regions failed\0A\0A\00", align 1
@.str.5.76 = private unnamed_addr constant [52 x i8] c"\09Request to configure: %u regions (supported: %u)\0A\0A\00", align 1
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !456
@.str.6.77 = private unnamed_addr constant [80 x i8] c"(((MPU_Type *) ((0xE000E000UL) + 0x0D90UL) )->TYPE & (0xFFUL << 8U)) >> 8U == 8\00", align 1
@.str.7.78 = private unnamed_addr constant [33 x i8] c"\09Invalid number of MPU regions\0A\0A\00", align 1
@.str.8.71 = private unnamed_addr constant [40 x i8] c"%c: Partition %u: sanity check failed.\0A\00", align 1
@.str.9.72 = private unnamed_addr constant [43 x i8] c"%c: Failed to allocate new MPU region %u\0A\0A\00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !492
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.87, i32 0, i32 0), %struct.k_spinlock { i32 117571620 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.88, i32 0, i32 0), %struct.k_spinlock { i32 285933600 } }], align 4, !dbg !502
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !507
@.str.87 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.88 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@phase = dso_local local_unnamed_addr global i32 5, align 4, !dbg !527
@test_status = internal unnamed_addr global i32 0, align 4, !dbg !582
@.str.89 = private unnamed_addr constant [69 x i8] c"===================================================================\0A\00", align 1
@.str.1.92 = private unnamed_addr constant [22 x i8] c"PROJECT EXECUTION %s\0A\00", align 1
@.str.2.91 = private unnamed_addr constant [7 x i8] c"FAILED\00", align 1
@.str.3.90 = private unnamed_addr constant [11 x i8] c"SUCCESSFUL\00", align 1
@current_test_failed_assumption = internal unnamed_addr global i1 false, align 1, !dbg !693
@test_result = internal unnamed_addr global i32 0, align 4, !dbg !569
@.str.4.104 = private unnamed_addr constant [51 x i8] c" ERROR: cannot fail in test phase '%s()', bailing\0A\00", align 1
@.str.5.105 = private unnamed_addr constant [51 x i8] c" ERROR: cannot pass in test phase '%s()', bailing\0A\00", align 1
@.str.6.93 = private unnamed_addr constant [51 x i8] c" ERROR: cannot skip in test phase '%s()', bailing\0A\00", align 1
@_ztest_unit_test_list_start = external dso_local global [0 x %struct.ztest_unit_test], align 4
@_ztest_unit_test_list_end = external dso_local global [0 x %struct.ztest_unit_test], align 4
@_ztest_suite_node_list_start = external dso_local global [0 x %struct.ztest_suite_node], align 4
@_ztest_suite_node_list_end = external dso_local global [0 x %struct.ztest_suite_node], align 4
@.str.7.120 = private unnamed_addr constant [37 x i8] c"ERROR: Test suite '%s' did not run.\0A\00", align 1
@.str.8.121 = private unnamed_addr constant [66 x i8] c"ERROR: Test '%s' assigned to test suite '%s' which doesn't exist\0A\00", align 1
@.str.9.122 = private unnamed_addr constant [21 x i8] c"Bad stats for %s.%s\0A\00", align 1
@ztest_thread_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/subsys/testsuite/ztest/src/ztest_new.c\22.0", align 64, !dbg !573
@ztest_thread = internal global %struct.k_thread zeroinitializer, align 8, !dbg !584
@.str.10.95 = private unnamed_addr constant [6 x i8] c"setup\00", align 1
@.str.11.96 = private unnamed_addr constant [7 x i8] c"before\00", align 1
@.str.12.97 = private unnamed_addr constant [5 x i8] c"test\00", align 1
@.str.13.98 = private unnamed_addr constant [6 x i8] c"after\00", align 1
@.str.14.99 = private unnamed_addr constant [9 x i8] c"teardown\00", align 1
@.str.15.100 = private unnamed_addr constant [10 x i8] c"framework\00", align 1
@.str.16.94 = private unnamed_addr constant [10 x i8] c"(unknown)\00", align 1
@.str.17.106 = private unnamed_addr constant [22 x i8] c"Running TESTSUITE %s\0A\00", align 1
@.str.18.108 = private unnamed_addr constant [24 x i8] c"TESTSUITE %s succeeded\0A\00", align 1
@.str.19.107 = private unnamed_addr constant [22 x i8] c"TESTSUITE %s failed.\0A\00", align 1
@.str.20.109 = private unnamed_addr constant [12 x i8] c"START - %s\0A\00", align 1
@tc_spend_time = internal unnamed_addr global i32 0, align 4, !dbg !691
@.str.21.110 = private unnamed_addr constant [29 x i8] c" %s - %s in %u.%03u seconds\0A\00", align 1
@tc_start_time = internal unnamed_addr global i32 0, align 4, !dbg !688
@_ztest_test_rule_list_start = external dso_local global [0 x %struct.ztest_test_rule], align 4
@_ztest_test_rule_list_end = external dso_local global [0 x %struct.ztest_test_rule], align 4
@_ztest_expected_result_entry_list_start = external dso_local global [0 x %struct.ztest_expected_result_entry], align 4
@_ztest_expected_result_entry_list_end = external dso_local global [0 x %struct.ztest_expected_result_entry], align 4
@.str.24.112 = private unnamed_addr constant [5 x i8] c"PASS\00", align 1
@.str.25.113 = private unnamed_addr constant [5 x i8] c"FAIL\00", align 1
@.str.26.114 = private unnamed_addr constant [5 x i8] c"SKIP\00", align 1
@.str.27.111 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str.28.115 = private unnamed_addr constant [41 x i8] c"\0A------ TESTSUITE SUMMARY START ------\0A\0A\00", align 1
@.str.29.116 = private unnamed_addr constant [38 x i8] c"------ TESTSUITE SUMMARY END ------\0A\0A\00", align 1
@.str.30.117 = private unnamed_addr constant [44 x i8] c" - %s - [%s.%s] duration = %u.%03u seconds\0A\00", align 1
@.str.31.118 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.32.119 = private unnamed_addr constant [100 x i8] c"SUITE %s - %3d.%02d%% [%s]: pass = %d, fail = %d, skip = %d, total = %d duration = %u.%03u seconds\0A\00", align 1
@switch.table.get_friendly_phase_name = private unnamed_addr constant [6 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10.95, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11.96, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12.97, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.98, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.14.99, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.15.100, i32 0, i32 0)], align 4
@switch.table.TC_RESULT_TO_STR = private unnamed_addr constant [3 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.24.112, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.25.113, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.26.114, i32 0, i32 0)], align 4
@ztest_api = dso_local local_unnamed_addr constant %struct.ztest_arch_api { void (i8*)* @z_ztest_run_all, i1 (i8*, %struct.ztest_suite_node*)* @z_ztest_should_suite_run, i1 (i8*, i8*)* @z_ztest_should_test_run }, align 4, !dbg !694
@.str.127 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.128 = private unnamed_addr constant [5 x i8] c"line\00", align 1
@.str.2.129 = private unnamed_addr constant [59 x i8] c"ZEPHYR_BASE/drivers/interrupt_controller/intc_exti_stm32.c\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !729
@__devicehdl_dts_ord_36 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !931
@.str.4.125 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_36 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !892
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !875
@__device_dts_ord_36 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4.125, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_36, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_36, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !848
@__init___device_dts_ord_36 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_36 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !864
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !894
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !908
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !910
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !912
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !914
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !916
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !918
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !920
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !922
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !924
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !926
@__devicehdl_dts_ord_8 = dso_local constant [15 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 13, i16 14, i16 32767], section ".__device_handles_pass2", align 2, !dbg !936
@.str.130 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !969
@__devstate_dts_ord_8 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1067
@__init___device_dts_ord_8 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_8 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !1056
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !1108
@__devicehdl_dts_ord_90 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !956
@.str.139 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !1174
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1452
@__devstate_dts_ord_90 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1422
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1408
@__init___device_dts_ord_90 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_90 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1353
@__devicehdl_dts_ord_91 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !954
@.str.1.147 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1454
@__devstate_dts_ord_91 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1426
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1424
@__init___device_dts_ord_91 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_91 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1367
@__devicehdl_dts_ord_92 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !952
@.str.2.148 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1467
@__devstate_dts_ord_92 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1430
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1428
@__init___device_dts_ord_92 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_92 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1373
@__devicehdl_dts_ord_19 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !950
@.str.3.149 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1469
@__devstate_dts_ord_19 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1434
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1432
@__init___device_dts_ord_19 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_19 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1382
@__devicehdl_dts_ord_93 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !948
@.str.4.150 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1471
@__devstate_dts_ord_93 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1438
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1436
@__init___device_dts_ord_93 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_93 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1388
@__devicehdl_dts_ord_94 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !946
@.str.5.151 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1473
@__devstate_dts_ord_94 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1442
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1440
@__init___device_dts_ord_94 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_94 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1394
@__devicehdl_dts_ord_95 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !944
@.str.6.152 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1475
@__devstate_dts_ord_95 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1446
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1444
@__init___device_dts_ord_95 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_95 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1400
@__devicehdl_dts_ord_96 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !942
@.str.7.153 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1477
@__devstate_dts_ord_96 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1450
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1448
@__init___device_dts_ord_96 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_96 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1406
@.str.8.140 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.31.146 = private unnamed_addr constant [12 x i8] c"cb->handler\00", align 1
@.str.32.142 = private unnamed_addr constant [53 x i8] c"ZEPHYR_BASE/include/zephyr/drivers/gpio/gpio_utils.h\00", align 1
@.str.33.145 = private unnamed_addr constant [23 x i8] c"\09No callback handler!\0A\00", align 1
@.str.34.141 = private unnamed_addr constant [9 x i8] c"callback\00", align 1
@.str.35.143 = private unnamed_addr constant [15 x i8] c"\09No callback!\0A\00", align 1
@.str.36.144 = private unnamed_addr constant [18 x i8] c"callback->handler\00", align 1
@.str.157 = private unnamed_addr constant [11 x i8] c"uart_stm32\00", align 1
@log_const_uart_stm32 = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.157, i32 0, i32 0), i8 3 }, section ".log_const_uart_stm32", align 4, !dbg !1479
@__devicehdl_dts_ord_52 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !964
@.str.1.158 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_52 }, align 4, !dbg !1659
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1714
@__devstate_dts_ord_52 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1651
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1716
@__device_dts_ord_52 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.158, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_52, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_52, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1624
@__init___device_dts_ord_52 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_52 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1626
@__devicehdl_dts_ord_42 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !962
@.str.2.165 = private unnamed_addr constant [16 x i8] c"serial@40004400\00", align 1
@uart_stm32_cfg_1 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073759232 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_1, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_42 }, align 4, !dbg !1722
@__devstate_dts_ord_42 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1653
@uart_stm32_data_1 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1732
@__device_dts_ord_42 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2.165, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_1 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_42, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_1 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_42, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1635
@__init___device_dts_ord_42 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_42 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1637
@__devicehdl_dts_ord_45 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !960
@.str.3.166 = private unnamed_addr constant [16 x i8] c"serial@40004800\00", align 1
@uart_stm32_cfg_2 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073760256 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_2, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_45 }, align 4, !dbg !1734
@__devstate_dts_ord_45 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1655
@uart_stm32_data_2 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1744
@__device_dts_ord_45 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3.166, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_2 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_45, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_2 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_45, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1641
@__init___device_dts_ord_45 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_45 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1643
@__devicehdl_dts_ord_48 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !958
@.str.4.169 = private unnamed_addr constant [16 x i8] c"serial@40004c00\00", align 1
@uart_stm32_cfg_3 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073761280 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_3, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_48 }, align 4, !dbg !1746
@__devstate_dts_ord_48 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1657
@uart_stm32_data_3 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1756
@__device_dts_ord_48 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4.169, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_3 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_48, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_3 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_48, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1647
@__init___device_dts_ord_48 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_48 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1649
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 16 }], align 4, !dbg !1703
@__pinctrl_dev_config__device_dts_ord_52 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_52, i32 0, i32 0), i8 1 }, align 4, !dbg !1706
@__pinctrl_states__device_dts_ord_52 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_52, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1708
@__pinctrl_state_pins_0__device_dts_ord_52 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1711
@.str.5.160 = private unnamed_addr constant [51 x i8] c"%c: Failed call clock_control_get_rate(pclken[0])\0A\00", align 1
@.str.6.161 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.7.162 = private unnamed_addr constant [28 x i8] c"((config->usart->BRR)) > 16\00", align 1
@.str.8.163 = private unnamed_addr constant [40 x i8] c"ZEPHYR_BASE/drivers/serial/uart_stm32.c\00", align 1
@.str.9.164 = private unnamed_addr constant [20 x i8] c"\09BaudRateReg >= 16\0A\00", align 1
@.str.10.172 = private unnamed_addr constant [36 x i8] c"%c: clock control device not ready\0A\00", align 1
@.str.11.174 = private unnamed_addr constant [37 x i8] c"%c: Could not enable (LP)UART clock\0A\00", align 1
@.str.12.175 = private unnamed_addr constant [55 x i8] c"%c: Invalid parity setting '%d'.Defaulting to 'none'.\0A\00", align 1
@__device_dts_ord_8 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.130, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_8, i8* null, i16* getelementptr inbounds ([15 x i16], [15 x i16]* @__devicehdl_dts_ord_8, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !1040
@pclken_1 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 131072 }], align 4, !dbg !1724
@__pinctrl_dev_config__device_dts_ord_42 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_42, i32 0, i32 0), i8 1 }, align 4, !dbg !1726
@__pinctrl_states__device_dts_ord_42 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_42, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1728
@__pinctrl_state_pins_0__device_dts_ord_42 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1703, i32 512 }, %struct._thread_arch { i32 1735, i32 0 }], align 4, !dbg !1730
@pclken_2 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 262144 }], align 4, !dbg !1736
@__pinctrl_dev_config__device_dts_ord_45 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_45, i32 0, i32 0), i8 1 }, align 4, !dbg !1738
@__pinctrl_states__device_dts_ord_45 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_45, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1740
@__pinctrl_state_pins_0__device_dts_ord_45 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1799, i32 512 }, %struct._thread_arch { i32 1831, i32 0 }], align 4, !dbg !1742
@pclken_3 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 524288 }], align 4, !dbg !1748
@__pinctrl_dev_config__device_dts_ord_48 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_48, i32 0, i32 0), i8 1 }, align 4, !dbg !1750
@__pinctrl_states__device_dts_ord_48 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_48, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1752
@__pinctrl_state_pins_0__device_dts_ord_48 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1352, i32 512 }, %struct._thread_arch { i32 1384, i32 0 }], align 4, !dbg !1754
@switch.table.uart_stm32_init = private unnamed_addr constant [3 x i32] [i32 0, i32 1536, i32 1024], align 4
@switch.table.uart_stm32_init.13 = private unnamed_addr constant [3 x i32] [i32 0, i32 4096, i32 4096], align 4
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1763
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1874
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1876
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1872
@lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !1867
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1841
@.str.179 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.180 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.2.181 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.3.182 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.4.183 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.5.184 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_90, %struct.device* @__device_dts_ord_91, %struct.device* @__device_dts_ord_92, %struct.device* @__device_dts_ord_19, %struct.device* @__device_dts_ord_93, %struct.device* @__device_dts_ord_94, %struct.device* @__device_dts_ord_95, %struct.device* @__device_dts_ord_96, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1878
@__device_dts_ord_90 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.139, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_90, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_90, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1351
@__device_dts_ord_91 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.147, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_91, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_91, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1365
@__device_dts_ord_92 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.148, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_92, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_92, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1371
@__device_dts_ord_19 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.149, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_19, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_19, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1380
@__device_dts_ord_93 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.150, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_93, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_93, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1386
@__device_dts_ord_94 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.151, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_94, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_94, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1392
@__device_dts_ord_95 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.152, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_95, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_95, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1398
@__device_dts_ord_96 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7.153, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_96, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_96, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1404
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1968
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !2012
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !2015
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !2022
@.str.218 = private unnamed_addr constant [20 x i8] c"%c: Halting system\0A\00", align 1
@.str.1.222 = private unnamed_addr constant [45 x i8] c"%c: >>> ZEPHYR FATAL ERROR %d: %s on CPU %d\0A\00", align 1
@.str.2.223 = private unnamed_addr constant [38 x i8] c"%c: Fault during interrupt handling\0A\0A\00", align 1
@.str.3.224 = private unnamed_addr constant [29 x i8] c"%c: Current thread: %p (%s)\0A\00", align 1
@.str.4.228 = private unnamed_addr constant [14 x i8] c"CPU exception\00", align 1
@.str.5.229 = private unnamed_addr constant [20 x i8] c"Unhandled interrupt\00", align 1
@.str.6.230 = private unnamed_addr constant [15 x i8] c"Stack overflow\00", align 1
@.str.7.231 = private unnamed_addr constant [12 x i8] c"Kernel oops\00", align 1
@.str.8.232 = private unnamed_addr constant [13 x i8] c"Kernel panic\00", align 1
@.str.9.227 = private unnamed_addr constant [14 x i8] c"Unknown error\00", align 1
@.str.10.226 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@switch.table.reason_to_str = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.228, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.229, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6.230, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7.231, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8.232, i32 0, i32 0)], align 4
@.str.234 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@log_const_os = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.234, i32 0, i32 0), i8 3 }, section ".log_const_os", align 4, !dbg !2029
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !2253
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2242
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2248
@z_idle_stacks = internal global [1 x [4160 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2260
@.str.5.240 = private unnamed_addr constant [5 x i8] c"idle\00", align 1
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2265
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.6.244 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.251, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.252, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.253, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.254, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.255, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.256, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.250, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.257, i32 0, i32 0)], align 4, !dbg !2295
@.str.251 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.252 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.253 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.254 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.255 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.256 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.250 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.257 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2410
@.str.8.249 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.9.262 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.10.263 = private unnamed_addr constant [128 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((entry))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.11.264 = private unnamed_addr constant [28 x i8] c"ZEPHYR_BASE/kernel/thread.c\00", align 1
@.str.12.265 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.13.269 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.14.270 = private unnamed_addr constant [37 x i8] c"\09Threads may not be created in ISRs\0A\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@.str.15.274 = private unnamed_addr constant [45 x i8] c"thread_data <= __static_thread_data_list_end\00", align 1
@.str.16.275 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.284 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.285 = private unnamed_addr constant [40 x i8] c"_kernel.cpus[0].current->base.prio >= 0\00", align 1
@.str.2.286 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/kernel/idle.c\00", align 1
@sched_spinlock = dso_local global %struct.k_spinlock zeroinitializer, align 4, !dbg !2423
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2534
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2537
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2539
@.str.287 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.303 = private unnamed_addr constant [61 x i8] c"thread == _kernel.cpus[0].current || is_thread_dummy(thread)\00", align 1
@.str.2.294 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/sched.c\00", align 1
@.str.3.308 = private unnamed_addr constant [55 x i8] c"sizeof(sched_spinlock) == 0 || lock != &sched_spinlock\00", align 1
@.str.4.316 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 0U\00", align 1
@.str.5.296 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.6.311 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.7.293 = private unnamed_addr constant [33 x i8] c"!z_is_idle_thread_object(thread)\00", align 1
@.str.8.320 = private unnamed_addr constant [134 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((((void *)0)))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.9.321 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.10.327 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.328 = private unnamed_addr constant [31 x i8] c"\09aborting essential thread %p\0A\00", align 1
@.str.12.329 = private unnamed_addr constant [34 x i8] c"\09aborted _current back from dead\0A\00", align 1
@.str.13.332 = private unnamed_addr constant [21 x i8] c"\09cannot join in ISR\0A\00", align 1
@.str.14.288 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.15.289 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.16.290 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.17.291 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.18.292 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.19.295 = private unnamed_addr constant [39 x i8] c"_kernel.cpus[0].current != ((void *)0)\00", align 1
@.str.20.307 = private unnamed_addr constant [23 x i8] c"thread->base.pended_on\00", align 1
@.str.21.312 = private unnamed_addr constant [36 x i8] c"ZEPHYR_BASE/kernel/include/ksched.h\00", align 1
@.str.22.313 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 1U\00", align 1
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2250
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2258
@.str.23.322 = private unnamed_addr constant [64 x i8] c"!z_is_thread_state_set(_kernel.cpus[0].current, ((1UL << (4))))\00", align 1
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@.str.338 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.339 = private unnamed_addr constant [32 x i8] c"!sys_dnode_is_linked(&to->node)\00", align 1
@.str.2.340 = private unnamed_addr constant [29 x i8] c"ZEPHYR_BASE/kernel/timeout.c\00", align 1
@.str.3.341 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@timeout_lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2541
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2571
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2576
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !2116
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2574
@.str.4.342 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.343 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.344 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.348 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.349 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.369 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3146 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #23, !dbg !3150, !srcloc !3151
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #23, !dbg !3152, !srcloc !3153
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #23, !dbg !3154, !srcloc !3155
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #23, !dbg !3156, !srcloc !3157
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3158, !srcloc !3159
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #23, !dbg !3160, !srcloc !3161
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #23, !dbg !3162, !srcloc !3163
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #23, !dbg !3164, !srcloc !3165
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #23, !dbg !3166, !srcloc !3167
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #23, !dbg !3168, !srcloc !3169
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #23, !dbg !3170, !srcloc !3171
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #23, !dbg !3172, !srcloc !3173
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #23, !dbg !3174, !srcloc !3175
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #23, !dbg !3176, !srcloc !3177
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #23, !dbg !3178, !srcloc !3179
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #23, !dbg !3180, !srcloc !3181
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #23, !dbg !3182, !srcloc !3183
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -149) #23, !dbg !3184, !srcloc !3185
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3186, !srcloc !3187
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #23, !dbg !3188, !srcloc !3189
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -133) #23, !dbg !3190, !srcloc !3191
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -161) #23, !dbg !3192, !srcloc !3193
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #23, !dbg !3194, !srcloc !3195
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3196, !srcloc !3197
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #23, !dbg !3198, !srcloc !3199
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #23, !dbg !3200, !srcloc !3201
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #23, !dbg !3202, !srcloc !3203
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #23, !dbg !3204, !srcloc !3207
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #23, !dbg !3208, !srcloc !3209
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3210, !srcloc !3211
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3212, !srcloc !3213
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3214, !srcloc !3215
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3216, !srcloc !3217
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #23, !dbg !3218, !srcloc !3219
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #23, !dbg !3220, !srcloc !3221
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #23, !dbg !3222, !srcloc !3223
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #23, !dbg !3224, !srcloc !3225
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3226, !srcloc !3227
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3228, !srcloc !3229
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3230, !srcloc !3231
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3232, !srcloc !3233
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3234, !srcloc !3235
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3236, !srcloc !3237
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #23, !dbg !3238, !srcloc !3239
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #23, !dbg !3240, !srcloc !3241
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #23, !dbg !3242, !srcloc !3243
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #23, !dbg !3244, !srcloc !3245
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #23, !dbg !3246, !srcloc !3247
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #23, !dbg !3248, !srcloc !3249
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3250, !srcloc !3251
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #23, !dbg !3252, !srcloc !3253
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -161) #23, !dbg !3254, !srcloc !3255
  ret void, !dbg !3256
}

; Function Attrs: noinline nounwind optsize
define internal void @_test_pytest_test_pytest_wrapper(i8* nocapture noundef readnone %0) #1 !dbg !3259 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3261, metadata !DIExpression()), !dbg !3262
  tail call fastcc void @test_pytest_test_pytest() #24, !dbg !3263
  ret void, !dbg !3263
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: noinline nounwind optsize
define internal fastcc void @test_pytest_test_pytest() unnamed_addr #1 !dbg !3264 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i32 0, i32 0)) #25, !dbg !3265
  ret void, !dbg !3266
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) local_unnamed_addr #1 !dbg !3267 {
  %6 = alloca [16 x i8], align 1
  %7 = alloca [16 x i8], align 1
  %8 = extractvalue [1 x i32] %4, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !3282, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i8* %0, metadata !3278, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i32 %1, metadata !3279, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i32 %2, metadata !3280, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i8* %3, metadata !3281, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i8* %0, metadata !3283, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i8* %0, metadata !3284, metadata !DIExpression()), !dbg !3345
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !3346
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #23, !dbg !3346
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !3287, metadata !DIExpression()), !dbg !3347
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !3348
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #23, !dbg !3348
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !3289, metadata !DIExpression()), !dbg !3349
  call void @llvm.dbg.value(metadata i32 0, metadata !3290, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i32 0, metadata !3291, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i32 0, metadata !3292, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i32 -1, metadata !3293, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i8 0, metadata !3296, metadata !DIExpression()), !dbg !3345
  %12 = and i32 %2, 4, !dbg !3350
  %13 = icmp eq i32 %12, 0, !dbg !3351
  call void @llvm.dbg.value(metadata i1 %13, metadata !3297, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3345
  %14 = lshr i32 %2, 3, !dbg !3352
  %15 = and i32 %14, 7, !dbg !3352
  %16 = add nuw nsw i32 %15, 1, !dbg !3353
  call void @llvm.dbg.value(metadata i32 %16, metadata !3298, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i8 0, metadata !3299, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i8* %0, metadata !3300, metadata !DIExpression()), !dbg !3345
  %17 = ptrtoint i8* %0 to i32, !dbg !3354
  %18 = and i32 %17, 3, !dbg !3356
  %19 = icmp eq i32 %18, 0, !dbg !3356
  br i1 %19, label %20, label %320, !dbg !3357

20:                                               ; preds = %5
  %21 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !3358
  call void @llvm.dbg.value(metadata i8* %21, metadata !3284, metadata !DIExpression()), !dbg !3345
  %22 = icmp eq i8* %0, null, !dbg !3359
  %23 = and i32 %1, 7, !dbg !3361
  %24 = sub nuw nsw i32 8, %23, !dbg !3361
  %25 = select i1 %22, i32 %23, i32 0, !dbg !3361
  %26 = getelementptr i8, i8* %21, i32 %25, !dbg !3361
  %27 = select i1 %22, i32 %24, i32 %1, !dbg !3361
  call void @llvm.dbg.value(metadata i32 %27, metadata !3279, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i8* %26, metadata !3284, metadata !DIExpression()), !dbg !3345
  br i1 %22, label %33, label %28, !dbg !3362

28:                                               ; preds = %20
  %29 = ptrtoint i8* %26 to i32, !dbg !3364
  %30 = sub i32 4, %17, !dbg !3364
  %31 = add i32 %30, %29, !dbg !3365
  %32 = icmp ugt i32 %31, %27, !dbg !3366
  br i1 %32, label %320, label %33, !dbg !3367

33:                                               ; preds = %28, %20
  %34 = getelementptr inbounds i8, i8* %3, i32 -1, !dbg !3368
  call void @llvm.dbg.value(metadata i8* %34, metadata !3281, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i8* %3, metadata !3295, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i32 4, metadata !3286, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i32 4, metadata !3285, metadata !DIExpression()), !dbg !3345
  %35 = and i32 %2, 2
  %36 = icmp ne i32 %35, 0
  %37 = sub i32 8, %17
  br label %130, !dbg !3369

38:                                               ; preds = %63, %219
  %39 = phi i8 [ %224, %219 ], [ %64, %63 ]
  %40 = phi i8* [ %223, %219 ], [ %65, %63 ]
  %41 = phi i8* [ %221, %219 ], [ %66, %63 ]
  %42 = phi i8* [ %40, %219 ], [ %67, %63 ]
  %43 = phi i8* [ %222, %219 ], [ %68, %63 ]
  %44 = phi i32 [ %113, %219 ], [ %69, %63 ]
  %45 = phi i32 [ %112, %219 ], [ %70, %63 ]
  %46 = phi i1 [ %110, %219 ], [ %71, %63 ]
  call void @llvm.dbg.value(metadata i8* %41, metadata !3282, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i8* %42, metadata !3281, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i8* %43, metadata !3284, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i32 %44, metadata !3285, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i32 %45, metadata !3286, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i32 %72, metadata !3293, metadata !DIExpression()), !dbg !3345
  br i1 %46, label %73, label %47, !dbg !3370

47:                                               ; preds = %38
  %48 = icmp eq i8 %39, 37, !dbg !3371
  %49 = zext i1 %48 to i32, !dbg !3375
  %50 = add nsw i32 %72, %49, !dbg !3375
  %51 = select i1 %48, i32 4, i32 %45, !dbg !3375
  %52 = select i1 %48, i32 4, i32 %44, !dbg !3375
  call void @llvm.dbg.value(metadata i32 %52, metadata !3285, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i32 %51, metadata !3286, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i8 poison, metadata !3296, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i32 %50, metadata !3293, metadata !DIExpression()), !dbg !3345
  br label %53, !dbg !3376

53:                                               ; preds = %73, %47, %74, %76, %77, %78, %106, %104
  %54 = phi i32 [ %72, %106 ], [ %72, %104 ], [ %72, %78 ], [ %72, %77 ], [ %72, %76 ], [ %75, %74 ], [ %50, %47 ], [ %72, %73 ]
  %55 = phi i1 [ false, %106 ], [ false, %104 ], [ true, %78 ], [ true, %77 ], [ true, %76 ], [ false, %74 ], [ %48, %47 ], [ true, %73 ]
  %56 = phi i32 [ %45, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %45, %76 ], [ %45, %74 ], [ %51, %47 ], [ 8, %73 ]
  %57 = phi i32 [ %44, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %44, %76 ], [ %44, %74 ], [ %52, %47 ], [ 8, %73 ]
  %58 = phi i8* [ %43, %106 ], [ %105, %104 ], [ %43, %78 ], [ %43, %77 ], [ %43, %76 ], [ %43, %74 ], [ %43, %47 ], [ %43, %73 ]
  %59 = phi i8* [ %41, %106 ], [ %93, %104 ], [ %41, %78 ], [ %41, %77 ], [ %41, %76 ], [ %41, %74 ], [ %41, %47 ], [ %41, %73 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !3282, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i8* %40, metadata !3281, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i8* %58, metadata !3284, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i32 %57, metadata !3285, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i32 %56, metadata !3286, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i8 poison, metadata !3296, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i32 %54, metadata !3293, metadata !DIExpression()), !dbg !3345
  %60 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3377
  call void @llvm.dbg.value(metadata i8* %60, metadata !3281, metadata !DIExpression()), !dbg !3345
  %61 = load i8, i8* %60, align 1, !dbg !3379
  %62 = icmp eq i8 %61, 0, !dbg !3380
  br i1 %62, label %226, label %63, !dbg !3381, !llvm.loop !3382

63:                                               ; preds = %192, %53
  %64 = phi i8 [ %61, %53 ], [ %199, %192 ]
  %65 = phi i8* [ %60, %53 ], [ %198, %192 ]
  %66 = phi i8* [ %59, %53 ], [ %143, %192 ]
  %67 = phi i8* [ %40, %53 ], [ %141, %192 ]
  %68 = phi i8* [ %58, %53 ], [ %197, %192 ]
  %69 = phi i32 [ %57, %53 ], [ %139, %192 ]
  %70 = phi i32 [ %56, %53 ], [ %138, %192 ]
  %71 = phi i1 [ %55, %53 ], [ %134, %192 ]
  %72 = phi i32 [ %54, %53 ], [ %132, %192 ]
  br label %38, !dbg !3370

73:                                               ; preds = %38
  switch i8 %39, label %106 [
    i8 37, label %74
    i8 35, label %76
    i8 45, label %76
    i8 43, label %76
    i8 32, label %76
    i8 48, label %76
    i8 49, label %76
    i8 50, label %76
    i8 51, label %76
    i8 52, label %76
    i8 53, label %76
    i8 54, label %76
    i8 55, label %76
    i8 56, label %76
    i8 57, label %76
    i8 46, label %76
    i8 104, label %76
    i8 108, label %76
    i8 76, label %76
    i8 42, label %108
    i8 106, label %53
    i8 122, label %77
    i8 116, label %78
    i8 99, label %79
    i8 100, label %79
    i8 105, label %79
    i8 111, label %79
    i8 117, label %79
    i8 120, label %79
    i8 88, label %79
    i8 115, label %109
    i8 112, label %107
    i8 110, label %107
    i8 97, label %87
    i8 65, label %87
    i8 101, label %87
    i8 69, label %87
    i8 102, label %87
    i8 70, label %87
    i8 103, label %87
    i8 71, label %87
  ], !dbg !3385

74:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3296, metadata !DIExpression()), !dbg !3345
  %75 = add nsw i32 %72, -1, !dbg !3386
  call void @llvm.dbg.value(metadata i32 %75, metadata !3293, metadata !DIExpression()), !dbg !3345
  br label %53, !dbg !3387

76:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73
  br label %53, !dbg !3388

77:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3286, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i32 4, metadata !3285, metadata !DIExpression()), !dbg !3345
  br label %53, !dbg !3389

78:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3286, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i32 4, metadata !3285, metadata !DIExpression()), !dbg !3345
  br label %53, !dbg !3390

79:                                               ; preds = %73, %73, %73, %73, %73, %73, %73
  %80 = load i8, i8* %42, align 1, !dbg !3391
  %81 = icmp eq i8 %80, 108, !dbg !3393
  br i1 %81, label %82, label %109, !dbg !3394

82:                                               ; preds = %79
  %83 = getelementptr inbounds i8, i8* %42, i32 -1, !dbg !3395
  %84 = load i8, i8* %83, align 1, !dbg !3395
  %85 = icmp eq i8 %84, 108, !dbg !3398
  %86 = select i1 %85, i32 8, i32 4
  br label %109

87:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73
  %88 = ptrtoint i8* %41 to i32, !dbg !3399
  %89 = add i32 %88, 7, !dbg !3399
  %90 = and i32 %89, -8, !dbg !3399
  %91 = inttoptr i32 %90 to i8*, !dbg !3399
  %92 = inttoptr i32 %90 to double*, !dbg !3399
  %93 = getelementptr inbounds i8, i8* %91, i32 8, !dbg !3399
  %94 = load double, double* %92, align 8, !dbg !3399
  call void @llvm.dbg.value(metadata i8* %93, metadata !3282, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i32 8, metadata !3285, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i32 8, metadata !3286, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata double %94, metadata !3313, metadata !DIExpression()), !dbg !3401
  %95 = ptrtoint i8* %43 to i32, !dbg !3402
  %96 = add i32 %95, 7, !dbg !3402
  %97 = and i32 %96, -8, !dbg !3402
  %98 = inttoptr i32 %97 to i8*, !dbg !3403
  call void @llvm.dbg.value(metadata i8* %98, metadata !3284, metadata !DIExpression()), !dbg !3345
  br i1 %22, label %104, label %99, !dbg !3404

99:                                               ; preds = %87
  %100 = add i32 %37, %97, !dbg !3405
  %101 = icmp ugt i32 %100, %196, !dbg !3409
  br i1 %101, label %320, label %102, !dbg !3410

102:                                              ; preds = %99
  %103 = inttoptr i32 %97 to double*, !dbg !3411
  store double %94, double* %103, align 8, !dbg !3411
  br label %104

104:                                              ; preds = %102, %87
  %105 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !3414
  call void @llvm.dbg.value(metadata i8* %105, metadata !3284, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i8 poison, metadata !3296, metadata !DIExpression()), !dbg !3345
  br label %53

106:                                              ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3296, metadata !DIExpression()), !dbg !3345
  br label %53, !dbg !3415

107:                                              ; preds = %73, %73
  br label %109, !dbg !3416

108:                                              ; preds = %73
  br label %109, !dbg !3416

109:                                              ; preds = %73, %108, %107, %79, %82
  %110 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ true, %108 ], [ false, %73 ]
  %111 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ false, %108 ], [ true, %73 ]
  %112 = phi i32 [ %86, %82 ], [ %45, %79 ], [ 4, %107 ], [ %45, %108 ], [ 4, %73 ], !dbg !3345
  %113 = phi i32 [ %86, %82 ], [ %44, %79 ], [ 4, %107 ], [ %44, %108 ], [ 4, %73 ], !dbg !3345
  call void @llvm.dbg.value(metadata i32 %113, metadata !3285, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i32 %112, metadata !3286, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i8 poison, metadata !3299, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i8 poison, metadata !3296, metadata !DIExpression()), !dbg !3345
  %114 = ptrtoint i8* %43 to i32, !dbg !3416
  %115 = add i32 %114, -1, !dbg !3416
  %116 = add i32 %115, %112, !dbg !3416
  %117 = sub i32 0, %112, !dbg !3416
  %118 = and i32 %116, %117, !dbg !3416
  %119 = inttoptr i32 %118 to i8*, !dbg !3417
  call void @llvm.dbg.value(metadata i8* %119, metadata !3284, metadata !DIExpression()), !dbg !3345
  br i1 %22, label %124, label %120, !dbg !3418

120:                                              ; preds = %109
  %121 = sub i32 %113, %17, !dbg !3420
  %122 = add i32 %121, %118, !dbg !3421
  %123 = icmp ugt i32 %122, %196, !dbg !3422
  br i1 %123, label %320, label %124, !dbg !3423

124:                                              ; preds = %120, %109
  br i1 %111, label %125, label %201, !dbg !3424

125:                                              ; preds = %124
  %126 = inttoptr i32 %118 to i8*, !dbg !3417
  %127 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3425
  call void @llvm.dbg.value(metadata i8* %127, metadata !3282, metadata !DIExpression()), !dbg !3345
  %128 = bitcast i8* %41 to i8**, !dbg !3425
  %129 = load i8*, i8** %128, align 4, !dbg !3425
  call void @llvm.dbg.value(metadata i8* %129, metadata !3295, metadata !DIExpression()), !dbg !3345
  br label %130, !dbg !3426

130:                                              ; preds = %125, %33
  %131 = phi i32 [ 0, %33 ], [ %193, %125 ], !dbg !3345
  %132 = phi i32 [ -1, %33 ], [ %72, %125 ], !dbg !3427
  %133 = phi i8* [ %3, %33 ], [ %129, %125 ], !dbg !3345
  %134 = phi i1 [ false, %33 ], [ %110, %125 ]
  %135 = phi i32 [ 0, %33 ], [ %194, %125 ], !dbg !3428
  %136 = phi i32 [ %16, %33 ], [ %147, %125 ], !dbg !3345
  %137 = phi i32 [ 0, %33 ], [ %195, %125 ], !dbg !3345
  %138 = phi i32 [ 4, %33 ], [ %112, %125 ], !dbg !3345
  %139 = phi i32 [ 4, %33 ], [ %113, %125 ], !dbg !3345
  %140 = phi i8* [ %26, %33 ], [ %126, %125 ], !dbg !3345
  %141 = phi i8* [ %34, %33 ], [ %40, %125 ], !dbg !3345
  %142 = phi i32 [ %27, %33 ], [ %196, %125 ], !dbg !3429
  %143 = phi i8* [ %9, %33 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i8* %143, metadata !3282, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i32 %142, metadata !3279, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i8* %141, metadata !3281, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i8* %140, metadata !3284, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i32 %139, metadata !3285, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i32 %138, metadata !3286, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i32 %137, metadata !3290, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i32 %136, metadata !3298, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i32 %135, metadata !3291, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i8 poison, metadata !3296, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i8* %133, metadata !3295, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i32 %132, metadata !3293, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i32 %131, metadata !3292, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.label(metadata !3344), !dbg !3431
  br i1 %22, label %146, label %144, !dbg !3432

144:                                              ; preds = %130
  %145 = bitcast i8* %140 to i8**, !dbg !3433
  store i8* %133, i8** %145, align 4, !dbg !3436
  br label %146, !dbg !3437

146:                                              ; preds = %144, %130
  %147 = add nsw i32 %136, -1, !dbg !3438
  call void @llvm.dbg.value(metadata i32 %147, metadata !3298, metadata !DIExpression()), !dbg !3345
  %148 = icmp sgt i32 %136, 0, !dbg !3439
  br i1 %148, label %152, label %149, !dbg !3440

149:                                              ; preds = %146
  %150 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %133) #24, !dbg !3441
  %151 = zext i1 %150 to i32, !dbg !3441
  br label %152, !dbg !3440

152:                                              ; preds = %146, %149
  %153 = phi i32 [ %151, %149 ], [ 1, %146 ], !dbg !3440
  %154 = icmp eq i32 %153, 0, !dbg !3440
  call void @llvm.dbg.value(metadata i1 %154, metadata !3322, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3442
  call void @llvm.dbg.value(metadata i1 %36, metadata !3325, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3442
  %155 = or i1 %36, %154, !dbg !3443
  br i1 %155, label %156, label %192, !dbg !3443

156:                                              ; preds = %152
  %157 = ptrtoint i8* %140 to i32, !dbg !3444
  %158 = sub i32 %157, %17, !dbg !3444
  %159 = lshr i32 %158, 2, !dbg !3445
  call void @llvm.dbg.value(metadata i32 %159, metadata !3326, metadata !DIExpression()), !dbg !3446
  %160 = icmp ugt i32 %158, 511
  %161 = select i1 %36, i1 %160, i1 false, !dbg !3447
  br i1 %161, label %162, label %163, !dbg !3447

162:                                              ; preds = %156
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 635) #25, !dbg !3449
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4, i32 0, i32 0)) #25, !dbg !3449
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 635) #25, !dbg !3449
  unreachable, !dbg !3449

163:                                              ; preds = %156
  %164 = icmp ugt i32 %137, 15, !dbg !3454
  br i1 %164, label %165, label %166, !dbg !3456

165:                                              ; preds = %163
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 640) #25, !dbg !3457
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i32 0, i32 0)) #25, !dbg !3457
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 640) #25, !dbg !3457
  unreachable, !dbg !3457

166:                                              ; preds = %163
  br i1 %22, label %177, label %167, !dbg !3462

167:                                              ; preds = %166
  %168 = trunc i32 %159 to i8, !dbg !3463
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %137, !dbg !3466
  store i8 %168, i8* %169, align 1, !dbg !3467
  %170 = trunc i32 %132 to i8, !dbg !3468
  %171 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %137, !dbg !3469
  store i8 %170, i8* %171, align 1, !dbg !3470
  br i1 %154, label %175, label %172, !dbg !3471

172:                                              ; preds = %167
  %173 = or i8 %168, -128, !dbg !3472
  store i8 %173, i8* %169, align 1, !dbg !3472
  %174 = add i32 %131, 1, !dbg !3475
  call void @llvm.dbg.value(metadata i32 %174, metadata !3292, metadata !DIExpression()), !dbg !3345
  br label %187, !dbg !3476

175:                                              ; preds = %167
  %176 = add i32 %135, 1, !dbg !3477
  call void @llvm.dbg.value(metadata i32 %176, metadata !3291, metadata !DIExpression()), !dbg !3345
  br label %187

177:                                              ; preds = %166
  br i1 %154, label %180, label %178, !dbg !3479

178:                                              ; preds = %177
  %179 = add i32 %142, 1, !dbg !3480
  call void @llvm.dbg.value(metadata i32 %179, metadata !3279, metadata !DIExpression()), !dbg !3345
  br label %187, !dbg !3483

180:                                              ; preds = %177
  br i1 %13, label %183, label %181, !dbg !3484

181:                                              ; preds = %180
  %182 = add i32 %142, 2, !dbg !3485
  call void @llvm.dbg.value(metadata i32 %182, metadata !3279, metadata !DIExpression()), !dbg !3345
  br label %187, !dbg !3488

183:                                              ; preds = %180
  %184 = tail call i32 @strlen(i8* noundef %133) #25, !dbg !3489
  %185 = add i32 %142, 2, !dbg !3491
  %186 = add i32 %185, %184, !dbg !3492
  call void @llvm.dbg.value(metadata i32 %186, metadata !3279, metadata !DIExpression()), !dbg !3345
  br label %187

187:                                              ; preds = %178, %183, %181, %172, %175
  %188 = phi i32 [ %174, %172 ], [ %131, %175 ], [ %131, %178 ], [ %131, %181 ], [ %131, %183 ], !dbg !3345
  %189 = phi i32 [ %135, %172 ], [ %176, %175 ], [ %135, %178 ], [ %135, %181 ], [ %135, %183 ], !dbg !3345
  %190 = phi i32 [ %142, %172 ], [ %142, %175 ], [ %179, %178 ], [ %182, %181 ], [ %186, %183 ], !dbg !3345
  call void @llvm.dbg.value(metadata i32 %190, metadata !3279, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i32 %189, metadata !3291, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i32 %188, metadata !3292, metadata !DIExpression()), !dbg !3345
  %191 = add nuw nsw i32 %137, 1, !dbg !3493
  call void @llvm.dbg.value(metadata i32 %191, metadata !3290, metadata !DIExpression()), !dbg !3345
  br label %192

192:                                              ; preds = %152, %187
  %193 = phi i32 [ %188, %187 ], [ %131, %152 ], !dbg !3345
  %194 = phi i32 [ %189, %187 ], [ %135, %152 ], !dbg !3428
  %195 = phi i32 [ %191, %187 ], [ %137, %152 ], !dbg !3345
  %196 = phi i32 [ %190, %187 ], [ %142, %152 ], !dbg !3429
  call void @llvm.dbg.value(metadata i32 %196, metadata !3279, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i32 %195, metadata !3290, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i32 %194, metadata !3291, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i32 %193, metadata !3292, metadata !DIExpression()), !dbg !3345
  %197 = getelementptr inbounds i8, i8* %140, i32 4, !dbg !3494
  call void @llvm.dbg.value(metadata i8* %197, metadata !3284, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i8* %143, metadata !3282, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i8* %141, metadata !3281, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i32 %139, metadata !3285, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i32 %138, metadata !3286, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i8 poison, metadata !3299, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i8 poison, metadata !3296, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i32 %132, metadata !3293, metadata !DIExpression()), !dbg !3345
  %198 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !3377
  call void @llvm.dbg.value(metadata i8* %198, metadata !3281, metadata !DIExpression()), !dbg !3345
  %199 = load i8, i8* %198, align 1, !dbg !3379
  %200 = icmp eq i8 %199, 0, !dbg !3380
  br i1 %200, label %226, label %63, !dbg !3381

201:                                              ; preds = %124
  switch i32 %113, label %218 [
    i32 4, label %202
    i32 8, label %208
  ], !dbg !3495

202:                                              ; preds = %201
  %203 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3496
  call void @llvm.dbg.value(metadata i8* %203, metadata !3282, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i32 undef, metadata !3329, metadata !DIExpression()), !dbg !3497
  br i1 %22, label %219, label %204, !dbg !3498

204:                                              ; preds = %202
  %205 = bitcast i8* %41 to i32*, !dbg !3496
  %206 = load i32, i32* %205, align 4, !dbg !3496
  call void @llvm.dbg.value(metadata i32 %206, metadata !3329, metadata !DIExpression()), !dbg !3497
  %207 = inttoptr i32 %118 to i32*, !dbg !3499
  store i32 %206, i32* %207, align 4, !dbg !3502
  br label %219, !dbg !3503

208:                                              ; preds = %201
  %209 = ptrtoint i8* %41 to i32, !dbg !3504
  %210 = add i32 %209, 7, !dbg !3504
  %211 = and i32 %210, -8, !dbg !3504
  %212 = inttoptr i32 %211 to i8*, !dbg !3504
  %213 = getelementptr inbounds i8, i8* %212, i32 8, !dbg !3504
  call void @llvm.dbg.value(metadata i8* %213, metadata !3282, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i64 undef, metadata !3335, metadata !DIExpression()), !dbg !3505
  br i1 %22, label %219, label %214, !dbg !3506

214:                                              ; preds = %208
  %215 = inttoptr i32 %211 to i64*, !dbg !3504
  %216 = load i64, i64* %215, align 8, !dbg !3504
  call void @llvm.dbg.value(metadata i64 %216, metadata !3335, metadata !DIExpression()), !dbg !3505
  %217 = inttoptr i32 %118 to i64*, !dbg !3507
  store i64 %216, i64* %217, align 8, !dbg !3512
  br label %219, !dbg !3513

218:                                              ; preds = %201
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 709) #25, !dbg !3514
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i32 0, i32 0), i32 noundef %113) #25, !dbg !3514
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 709) #25, !dbg !3514
  unreachable, !dbg !3514

219:                                              ; preds = %208, %214, %202, %204
  %220 = phi i32 [ 4, %204 ], [ 4, %202 ], [ 8, %214 ], [ 8, %208 ]
  %221 = phi i8* [ %203, %204 ], [ %203, %202 ], [ %213, %214 ], [ %213, %208 ], !dbg !3519
  %222 = getelementptr inbounds i8, i8* %119, i32 %220, !dbg !3519
  call void @llvm.dbg.value(metadata i8* %221, metadata !3282, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i8* %40, metadata !3281, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i8* %222, metadata !3284, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i32 %113, metadata !3285, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i32 %112, metadata !3286, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i8 poison, metadata !3299, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i8 poison, metadata !3296, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i32 %72, metadata !3293, metadata !DIExpression()), !dbg !3345
  %223 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3377
  call void @llvm.dbg.value(metadata i8* %223, metadata !3281, metadata !DIExpression()), !dbg !3345
  %224 = load i8, i8* %223, align 1, !dbg !3379
  %225 = icmp eq i8 %224, 0, !dbg !3380
  br i1 %225, label %226, label %38, !dbg !3381

226:                                              ; preds = %192, %219, %53
  %227 = phi i8* [ %222, %219 ], [ %58, %53 ], [ %197, %192 ], !dbg !3520
  %228 = ptrtoint i8* %227 to i32, !dbg !3521
  %229 = sub i32 %228, %17, !dbg !3521
  %230 = lshr i32 %229, 2, !dbg !3523
  %231 = icmp ugt i32 %229, 1023, !dbg !3524
  br i1 %231, label %232, label %233, !dbg !3525

232:                                              ; preds = %226
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 721) #25, !dbg !3526
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i32 0, i32 0)) #25, !dbg !3526
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 721) #25, !dbg !3526
  unreachable, !dbg !3526

233:                                              ; preds = %226
  br i1 %22, label %234, label %237, !dbg !3531

234:                                              ; preds = %233
  %235 = add i32 %196, -8, !dbg !3532
  %236 = add i32 %235, %229, !dbg !3535
  br label %320, !dbg !3536

237:                                              ; preds = %233
  %238 = trunc i32 %230 to i8, !dbg !3537
  store i8 %238, i8* %0, align 1, !dbg !3538
  %239 = trunc i32 %194 to i8, !dbg !3539
  %240 = select i1 %13, i8 %239, i8 0
  %241 = select i1 %13, i8 0, i8 %239
  %242 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !3541
  store i8 %240, i8* %242, align 1, !dbg !3543
  %243 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !3544
  store i8 %241, i8* %243, align 1, !dbg !3545
  %244 = trunc i32 %193 to i8, !dbg !3546
  %245 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !3547
  store i8 %244, i8* %245, align 1, !dbg !3548
  %246 = icmp eq i32 %193, 0, !dbg !3549
  %247 = xor i1 %246, true, !dbg !3550
  %248 = icmp ne i32 %195, 0
  %249 = select i1 %247, i1 %248, i1 false, !dbg !3550
  call void @llvm.dbg.value(metadata i8* %227, metadata !3284, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i32 0, metadata !3294, metadata !DIExpression()), !dbg !3345
  br i1 %249, label %250, label %269, !dbg !3550

250:                                              ; preds = %237
  %251 = sub i32 1, %17
  br label %252, !dbg !3551

252:                                              ; preds = %250, %265
  %253 = phi i8* [ %227, %250 ], [ %266, %265 ]
  %254 = phi i32 [ 0, %250 ], [ %267, %265 ]
  call void @llvm.dbg.value(metadata i8* %253, metadata !3284, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i32 %254, metadata !3294, metadata !DIExpression()), !dbg !3345
  %255 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %254, !dbg !3552
  %256 = load i8, i8* %255, align 1, !dbg !3552
  %257 = icmp sgt i8 %256, -1, !dbg !3554
  br i1 %257, label %265, label %258, !dbg !3555

258:                                              ; preds = %252
  call void @llvm.dbg.value(metadata i8 %256, metadata !3338, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 127, DW_OP_and, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3556
  %259 = ptrtoint i8* %253 to i32, !dbg !3557
  %260 = add i32 %251, %259, !dbg !3559
  %261 = icmp ugt i32 %260, %196, !dbg !3560
  br i1 %261, label %320, label %262, !dbg !3561

262:                                              ; preds = %258
  %263 = and i8 %256, 127, !dbg !3562
  call void @llvm.dbg.value(metadata i8 %263, metadata !3338, metadata !DIExpression()), !dbg !3556
  %264 = getelementptr inbounds i8, i8* %253, i32 1, !dbg !3563
  call void @llvm.dbg.value(metadata i8* %264, metadata !3284, metadata !DIExpression()), !dbg !3345
  store i8 %263, i8* %253, align 1, !dbg !3564
  br label %265

265:                                              ; preds = %262, %252
  %266 = phi i8* [ %264, %262 ], [ %253, %252 ], !dbg !3494
  call void @llvm.dbg.value(metadata i8* %266, metadata !3284, metadata !DIExpression()), !dbg !3345
  %267 = add nuw i32 %254, 1, !dbg !3565
  call void @llvm.dbg.value(metadata i32 %267, metadata !3294, metadata !DIExpression()), !dbg !3345
  %268 = icmp eq i32 %267, %195, !dbg !3566
  br i1 %268, label %269, label %252, !dbg !3551, !llvm.loop !3567

269:                                              ; preds = %265, %237
  %270 = phi i8* [ %227, %237 ], [ %266, %265 ], !dbg !3494
  call void @llvm.dbg.value(metadata i8* %270, metadata !3284, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i32 0, metadata !3294, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i8* %133, metadata !3295, metadata !DIExpression()), !dbg !3345
  %271 = icmp eq i32 %195, 0, !dbg !3569
  br i1 %271, label %316, label %272, !dbg !3572

272:                                              ; preds = %269
  %273 = sub i32 1, %17
  br label %274, !dbg !3572

274:                                              ; preds = %272, %311
  %275 = phi i8* [ %270, %272 ], [ %313, %311 ]
  %276 = phi i8* [ %133, %272 ], [ %312, %311 ]
  %277 = phi i32 [ 0, %272 ], [ %314, %311 ]
  call void @llvm.dbg.value(metadata i8* %275, metadata !3284, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i8* %276, metadata !3295, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i32 %277, metadata !3294, metadata !DIExpression()), !dbg !3345
  br i1 %246, label %282, label %278, !dbg !3573

278:                                              ; preds = %274
  %279 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3576
  %280 = load i8, i8* %279, align 1, !dbg !3576
  %281 = icmp sgt i8 %280, -1, !dbg !3577
  br i1 %281, label %282, label %311, !dbg !3578

282:                                              ; preds = %278, %274
  br i1 %13, label %287, label %283, !dbg !3579

283:                                              ; preds = %282
  call void @llvm.dbg.value(metadata i32 0, metadata !3285, metadata !DIExpression()), !dbg !3345
  %284 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %277, !dbg !3580
  %285 = load i8, i8* %284, align 1, !dbg !3580
  %286 = getelementptr inbounds i8, i8* %275, i32 1, !dbg !3583
  call void @llvm.dbg.value(metadata i8* %286, metadata !3284, metadata !DIExpression()), !dbg !3345
  store i8 %285, i8* %275, align 1, !dbg !3584
  br label %297, !dbg !3585

287:                                              ; preds = %282
  %288 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3586
  %289 = load i8, i8* %288, align 1, !dbg !3586
  %290 = zext i8 %289 to i32, !dbg !3586
  %291 = shl nuw nsw i32 %290, 2, !dbg !3588
  %292 = getelementptr inbounds i8, i8* %0, i32 %291, !dbg !3589
  %293 = bitcast i8* %292 to i8**, !dbg !3590
  %294 = load i8*, i8** %293, align 4, !dbg !3590
  call void @llvm.dbg.value(metadata i8* %294, metadata !3295, metadata !DIExpression()), !dbg !3345
  store i8* null, i8** %293, align 4, !dbg !3591
  %295 = tail call i32 @strlen(i8* noundef %294) #25, !dbg !3592
  %296 = add i32 %295, 1, !dbg !3593
  call void @llvm.dbg.value(metadata i32 %296, metadata !3285, metadata !DIExpression()), !dbg !3345
  br label %297

297:                                              ; preds = %287, %283
  %298 = phi i8* [ %276, %283 ], [ %294, %287 ], !dbg !3345
  %299 = phi i32 [ 0, %283 ], [ %296, %287 ], !dbg !3594
  %300 = phi i8* [ %286, %283 ], [ %275, %287 ], !dbg !3345
  call void @llvm.dbg.value(metadata i8* %300, metadata !3284, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i32 %299, metadata !3285, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i8* %298, metadata !3295, metadata !DIExpression()), !dbg !3345
  %301 = ptrtoint i8* %300 to i32, !dbg !3595
  %302 = add i32 %273, %299, !dbg !3597
  %303 = add i32 %302, %301, !dbg !3598
  %304 = icmp ugt i32 %303, %196, !dbg !3599
  br i1 %304, label %320, label %305, !dbg !3600

305:                                              ; preds = %297
  %306 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3601
  %307 = load i8, i8* %306, align 1, !dbg !3601
  %308 = getelementptr inbounds i8, i8* %300, i32 1, !dbg !3602
  call void @llvm.dbg.value(metadata i8* %308, metadata !3284, metadata !DIExpression()), !dbg !3345
  store i8 %307, i8* %300, align 1, !dbg !3603
  %309 = tail call i8* @memcpy(i8* noundef nonnull %308, i8* noundef %298, i32 noundef %299) #25, !dbg !3604
  %310 = getelementptr inbounds i8, i8* %308, i32 %299, !dbg !3605
  call void @llvm.dbg.value(metadata i8* %310, metadata !3284, metadata !DIExpression()), !dbg !3345
  br label %311, !dbg !3606

311:                                              ; preds = %278, %305
  %312 = phi i8* [ %276, %278 ], [ %298, %305 ], !dbg !3607
  %313 = phi i8* [ %275, %278 ], [ %310, %305 ], !dbg !3345
  call void @llvm.dbg.value(metadata i8* %313, metadata !3284, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.value(metadata i8* %312, metadata !3295, metadata !DIExpression()), !dbg !3345
  %314 = add nuw i32 %277, 1, !dbg !3608
  call void @llvm.dbg.value(metadata i32 %314, metadata !3294, metadata !DIExpression()), !dbg !3345
  %315 = icmp eq i32 %314, %195, !dbg !3569
  br i1 %315, label %316, label %274, !dbg !3572, !llvm.loop !3609

316:                                              ; preds = %311, %269
  %317 = phi i8* [ %270, %269 ], [ %313, %311 ], !dbg !3494
  %318 = ptrtoint i8* %317 to i32, !dbg !3611
  %319 = sub i32 %318, %17, !dbg !3611
  br label %320, !dbg !3612

320:                                              ; preds = %120, %99, %258, %297, %28, %5, %316, %234
  %321 = phi i32 [ %236, %234 ], [ %319, %316 ], [ -14, %5 ], [ -28, %28 ], [ -28, %297 ], [ -28, %258 ], [ -28, %99 ], [ -28, %120 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #23, !dbg !3613
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #23, !dbg !3613
  ret i32 %321, !dbg !3613
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @ptr_in_rodata(i8* noundef readnone %0) unnamed_addr #4 !dbg !3614 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3618, metadata !DIExpression()), !dbg !3619
  %2 = tail call fastcc zeroext i1 @linker_is_in_rodata(i8* noundef %0) #24, !dbg !3620
  ret i1 %2, !dbg !3621
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @linker_is_in_rodata(i8* noundef readnone %0) unnamed_addr #4 !dbg !3622 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3625, metadata !DIExpression()), !dbg !3626
  %2 = icmp uge i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_start, i32 0, i32 0), !dbg !3627
  %3 = icmp ult i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_end, i32 0, i32 0), !dbg !3628
  %4 = and i1 %2, %3, !dbg !3628
  ret i1 %4, !dbg !3629
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, ...) local_unnamed_addr #1 !dbg !3630 {
  %5 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3634, metadata !DIExpression()), !dbg !3640
  call void @llvm.dbg.value(metadata i32 %1, metadata !3635, metadata !DIExpression()), !dbg !3640
  call void @llvm.dbg.value(metadata i32 %2, metadata !3636, metadata !DIExpression()), !dbg !3640
  call void @llvm.dbg.value(metadata i8* %3, metadata !3637, metadata !DIExpression()), !dbg !3640
  %6 = bitcast %struct.__va_list* %5 to i8*, !dbg !3641
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #23, !dbg !3641
  call void @llvm.dbg.declare(metadata %struct.__va_list* %5, metadata !3638, metadata !DIExpression()), !dbg !3642
  call void @llvm.va_start(i8* nonnull %6), !dbg !3643
  %7 = bitcast %struct.__va_list* %5 to i32*, !dbg !3644
  %8 = load i32, i32* %7, align 4, !dbg !3644
  %9 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !3644
  %10 = call i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %9) #24, !dbg !3644
  call void @llvm.dbg.value(metadata i32 %10, metadata !3639, metadata !DIExpression()), !dbg !3640
  call void @llvm.va_end(i8* nonnull %6), !dbg !3645
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #23, !dbg !3646
  ret i32 %10, !dbg !3647
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #5

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbpprintf_external(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #1 !dbg !3648 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3660, metadata !DIExpression()), !dbg !3679
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !3661, metadata !DIExpression()), !dbg !3679
  call void @llvm.dbg.value(metadata i8* %2, metadata !3662, metadata !DIExpression()), !dbg !3679
  call void @llvm.dbg.value(metadata i8* %3, metadata !3663, metadata !DIExpression()), !dbg !3679
  call void @llvm.dbg.value(metadata i8* %3, metadata !3664, metadata !DIExpression()), !dbg !3679
  call void @llvm.dbg.value(metadata i8* %3, metadata !3665, metadata !DIExpression()), !dbg !3679
  %5 = icmp eq i8* %3, null, !dbg !3680
  br i1 %5, label %45, label %6, !dbg !3682

6:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 undef, metadata !3674, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3679
  %7 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !3683
  %8 = load i8, i8* %7, align 1, !dbg !3683
  %9 = zext i8 %8 to i32, !dbg !3684
  call void @llvm.dbg.value(metadata i32 %9, metadata !3675, metadata !DIExpression()), !dbg !3679
  call void @llvm.dbg.value(metadata i8 undef, metadata !3676, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3679
  call void @llvm.dbg.value(metadata i8 undef, metadata !3677, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3679
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 undef), metadata !3671, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3679
  call void @llvm.dbg.value(metadata i32 0, metadata !3673, metadata !DIExpression()), !dbg !3679
  %10 = icmp eq i8 %8, 0, !dbg !3685
  br i1 %10, label %39, label %11, !dbg !3688

11:                                               ; preds = %6
  %12 = load i8, i8* %3, align 1, !dbg !3689
  call void @llvm.dbg.value(metadata i8 %12, metadata !3674, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3679
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 %12), metadata !3671, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3679
  %13 = zext i8 %12 to i32, !dbg !3690
  call void @llvm.dbg.value(metadata i32 %13, metadata !3674, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3679
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %13), metadata !3671, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3679
  %14 = shl nuw nsw i32 %13, 2, !dbg !3691
  call void @llvm.dbg.value(metadata i32 %14, metadata !3674, metadata !DIExpression()), !dbg !3679
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %14), metadata !3671, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3679
  %15 = getelementptr inbounds i8, i8* %3, i32 %14, !dbg !3692
  call void @llvm.dbg.value(metadata !DIArgList(i8* %15, i8 undef, i8 undef), metadata !3671, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3679
  %16 = getelementptr inbounds i8, i8* %3, i32 2, !dbg !3693
  %17 = load i8, i8* %16, align 1, !dbg !3693
  call void @llvm.dbg.value(metadata i8 %17, metadata !3676, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3679
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 %17, i8 undef), metadata !3671, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3679
  %18 = zext i8 %17 to i32, !dbg !3694
  call void @llvm.dbg.value(metadata i32 %18, metadata !3676, metadata !DIExpression()), !dbg !3679
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i32 %18, i8 undef), metadata !3671, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3679
  %19 = getelementptr inbounds i8, i8* %15, i32 %18, !dbg !3695
  call void @llvm.dbg.value(metadata !DIArgList(i8* %19, i8 undef), metadata !3671, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3679
  %20 = getelementptr inbounds i8, i8* %3, i32 3, !dbg !3696
  %21 = load i8, i8* %20, align 1, !dbg !3696
  call void @llvm.dbg.value(metadata i8 %21, metadata !3677, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3679
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 %21, i8 undef, i8 undef), metadata !3671, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3679
  %22 = zext i8 %21 to i32, !dbg !3697
  call void @llvm.dbg.value(metadata i32 %22, metadata !3677, metadata !DIExpression()), !dbg !3679
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %22, i8 undef, i8 undef), metadata !3671, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3679
  %23 = shl nuw nsw i32 %22, 1, !dbg !3698
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %23, i8 undef, i8 undef), metadata !3671, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3679
  %24 = getelementptr inbounds i8, i8* %19, i32 %23, !dbg !3699
  call void @llvm.dbg.value(metadata i8* %24, metadata !3671, metadata !DIExpression()), !dbg !3679
  br label %25, !dbg !3688

25:                                               ; preds = %11, %25
  %26 = phi i8* [ %36, %25 ], [ %24, %11 ]
  %27 = phi i32 [ %37, %25 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8* %26, metadata !3671, metadata !DIExpression()), !dbg !3679
  call void @llvm.dbg.value(metadata i32 %27, metadata !3673, metadata !DIExpression()), !dbg !3679
  %28 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !3700
  call void @llvm.dbg.value(metadata i8* %28, metadata !3671, metadata !DIExpression()), !dbg !3679
  %29 = load i8, i8* %26, align 1, !dbg !3702
  %30 = zext i8 %29 to i32, !dbg !3702
  call void @llvm.dbg.value(metadata i32 %30, metadata !3678, metadata !DIExpression()), !dbg !3679
  %31 = shl nuw nsw i32 %30, 2, !dbg !3703
  %32 = getelementptr inbounds i8, i8* %3, i32 %31, !dbg !3704
  %33 = bitcast i8* %32 to i8**, !dbg !3705
  call void @llvm.dbg.value(metadata i8** %33, metadata !3672, metadata !DIExpression()), !dbg !3679
  store i8* %28, i8** %33, align 4, !dbg !3706
  %34 = tail call i32 @strlen(i8* noundef nonnull %28) #25, !dbg !3707
  %35 = add i32 %34, 1, !dbg !3708
  %36 = getelementptr inbounds i8, i8* %28, i32 %35, !dbg !3709
  call void @llvm.dbg.value(metadata i8* %36, metadata !3671, metadata !DIExpression()), !dbg !3679
  %37 = add nuw nsw i32 %27, 1, !dbg !3710
  call void @llvm.dbg.value(metadata i32 %37, metadata !3673, metadata !DIExpression()), !dbg !3679
  %38 = icmp eq i32 %37, %9, !dbg !3685
  br i1 %38, label %39, label %25, !dbg !3688, !llvm.loop !3711

39:                                               ; preds = %25, %6
  %40 = getelementptr inbounds i8, i8* %3, i32 8, !dbg !3713
  call void @llvm.dbg.value(metadata i8* %40, metadata !3664, metadata !DIExpression()), !dbg !3679
  %41 = getelementptr inbounds i8, i8* %3, i32 4, !dbg !3714
  %42 = bitcast i8* %41 to i8**, !dbg !3714
  %43 = load i8*, i8** %42, align 1, !dbg !3714
  %44 = tail call fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* noundef %1, i8* noundef %2, i8* noundef %43, i8* noundef nonnull %40) #24, !dbg !3715
  br label %45, !dbg !3716

45:                                               ; preds = %4, %39
  %46 = phi i32 [ %44, %39 ], [ -22, %4 ], !dbg !3679
  ret i32 %46, !dbg !3717
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3, i8* noundef %4) unnamed_addr #1 !dbg !3718 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3722, metadata !DIExpression()), !dbg !3732
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !3723, metadata !DIExpression()), !dbg !3732
  call void @llvm.dbg.value(metadata i8* %2, metadata !3724, metadata !DIExpression()), !dbg !3732
  call void @llvm.dbg.value(metadata i8* %3, metadata !3725, metadata !DIExpression()), !dbg !3732
  call void @llvm.dbg.value(metadata i8* %4, metadata !3726, metadata !DIExpression()), !dbg !3732
  call void @llvm.dbg.value(metadata i8* %4, metadata !3727, metadata !DIExpression()), !dbg !3732
  %6 = ptrtoint i8* %4 to i32, !dbg !3733
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !3733
  %8 = tail call i32 %1(i32 (...)* noundef %0, i8* noundef %2, i8* noundef %3, [1 x i32] %7) #25, !dbg !3733
  ret i32 %8, !dbg !3734
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @is_ptr(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !3735 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3739, metadata !DIExpression()), !dbg !3744
  call void @llvm.dbg.value(metadata i32 %1, metadata !3740, metadata !DIExpression()), !dbg !3744
  call void @llvm.dbg.value(metadata i8 0, metadata !3742, metadata !DIExpression()), !dbg !3744
  call void @llvm.dbg.value(metadata i32 0, metadata !3743, metadata !DIExpression()), !dbg !3744
  call void @llvm.dbg.value(metadata i8 poison, metadata !3742, metadata !DIExpression()), !dbg !3744
  call void @llvm.dbg.value(metadata i8* %0, metadata !3739, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3744
  %3 = load i8, i8* %0, align 1, !dbg !3745
  call void @llvm.dbg.value(metadata i8 %3, metadata !3741, metadata !DIExpression()), !dbg !3744
  %4 = icmp eq i8 %3, 0, !dbg !3746
  br i1 %4, label %29, label %5, !dbg !3747

5:                                                ; preds = %2, %22
  %6 = phi i8 [ %27, %22 ], [ %3, %2 ]
  %7 = phi i8* [ %10, %22 ], [ %0, %2 ]
  %8 = phi i32 [ %24, %22 ], [ 0, %2 ]
  %9 = phi i1 [ %26, %22 ], [ false, %2 ]
  %10 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !3748
  call void @llvm.dbg.value(metadata i32 %8, metadata !3743, metadata !DIExpression()), !dbg !3744
  br i1 %9, label %11, label %22, !dbg !3749

11:                                               ; preds = %5
  %12 = icmp eq i32 %8, %1, !dbg !3751
  br i1 %12, label %13, label %17, !dbg !3755

13:                                               ; preds = %11
  %14 = icmp eq i8 %6, 112, !dbg !3756
  br i1 %14, label %29, label %15, !dbg !3759

15:                                               ; preds = %13
  %16 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #24, !dbg !3760
  br i1 %16, label %29, label %22, !dbg !3762

17:                                               ; preds = %11
  %18 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #24, !dbg !3763
  %19 = xor i1 %18, true, !dbg !3765
  %20 = zext i1 %18 to i32, !dbg !3765
  %21 = add nsw i32 %8, %20, !dbg !3765
  br label %22, !dbg !3765

22:                                               ; preds = %17, %15, %5
  %23 = phi i1 [ true, %15 ], [ false, %5 ], [ %19, %17 ]
  %24 = phi i32 [ %1, %15 ], [ %8, %5 ], [ %21, %17 ], !dbg !3744
  call void @llvm.dbg.value(metadata i32 %24, metadata !3743, metadata !DIExpression()), !dbg !3744
  call void @llvm.dbg.value(metadata i8 poison, metadata !3742, metadata !DIExpression()), !dbg !3744
  %25 = icmp eq i8 %6, 37, !dbg !3766
  %26 = xor i1 %25, %23, !dbg !3768
  call void @llvm.dbg.value(metadata i8* %10, metadata !3739, metadata !DIExpression()), !dbg !3744
  call void @llvm.dbg.value(metadata i8* %10, metadata !3739, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3744
  %27 = load i8, i8* %10, align 1, !dbg !3745
  call void @llvm.dbg.value(metadata i8 %27, metadata !3741, metadata !DIExpression()), !dbg !3744
  %28 = icmp eq i8 %27, 0, !dbg !3746
  br i1 %28, label %29, label %5, !dbg !3747, !llvm.loop !3769

29:                                               ; preds = %13, %15, %22, %2
  %30 = phi i1 [ false, %2 ], [ false, %22 ], [ false, %15 ], [ true, %13 ], !dbg !3744
  ret i1 %30, !dbg !3771
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %0) unnamed_addr #4 !dbg !3772 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !3776, metadata !DIExpression()), !dbg !3777
  %2 = add i8 %0, -64, !dbg !3778
  %3 = icmp ult i8 %2, 59, !dbg !3778
  ret i1 %3, !dbg !3779
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package_convert(i8* noundef %0, i32 noundef %1, i32 (i8*, i32, i8*)* noundef %2, i8* noundef %3, i32 noundef %4, i16* noundef %5, i32 noundef %6) local_unnamed_addr #1 !dbg !3780 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  %10 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3788, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.value(metadata i32 %1, metadata !3789, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %2, metadata !3790, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.value(metadata i8* %3, metadata !3791, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.value(metadata i32 %4, metadata !3792, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.value(metadata i16* %5, metadata !3793, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.value(metadata i32 %6, metadata !3794, metadata !DIExpression()), !dbg !3857
  %11 = icmp eq i8* %0, null, !dbg !3858
  br i1 %11, label %12, label %13, !dbg !3861

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 916) #25, !dbg !3862
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 916) #25, !dbg !3862
  unreachable, !dbg !3862

13:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i8* %0, metadata !3795, metadata !DIExpression()), !dbg !3857
  %14 = bitcast i8* %0 to i32*, !dbg !3864
  call void @llvm.dbg.value(metadata i32* %14, metadata !3796, metadata !DIExpression()), !dbg !3857
  %15 = and i32 %4, 8, !dbg !3865
  %16 = icmp eq i32 %15, 0, !dbg !3866
  call void @llvm.dbg.value(metadata i1 %16, metadata !3800, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3857
  call void @llvm.dbg.value(metadata i8* %0, metadata !3803, metadata !DIExpression()), !dbg !3857
  %17 = icmp eq i32 %1, 0, !dbg !3867
  br i1 %17, label %18, label %20, !dbg !3868

18:                                               ; preds = %13
  %19 = tail call fastcc i32 @get_package_len(i8* noundef nonnull %0) #24, !dbg !3869
  br label %20, !dbg !3868

20:                                               ; preds = %13, %18
  %21 = phi i32 [ %19, %18 ], [ %1, %13 ], !dbg !3868
  call void @llvm.dbg.value(metadata i32 %21, metadata !3789, metadata !DIExpression()), !dbg !3857
  %22 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !3870
  %23 = load i8, i8* %22, align 1, !dbg !3870
  %24 = zext i8 %23 to i32, !dbg !3871
  call void @llvm.dbg.value(metadata i32 %24, metadata !3798, metadata !DIExpression()), !dbg !3857
  %25 = icmp ne i8 %23, 0, !dbg !3872
  %26 = and i32 %4, 1, !dbg !3873
  %27 = icmp ne i32 %26, 0, !dbg !3873
  %28 = and i1 %27, %25, !dbg !3873
  call void @llvm.dbg.value(metadata i1 %28, metadata !3802, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3857
  %29 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !3874
  %30 = load i8, i8* %29, align 1, !dbg !3874
  %31 = zext i8 %30 to i32, !dbg !3875
  call void @llvm.dbg.value(metadata i32 %31, metadata !3799, metadata !DIExpression()), !dbg !3857
  %32 = icmp ne i8 %30, 0, !dbg !3876
  %33 = and i32 %4, 2, !dbg !3877
  %34 = icmp ne i32 %33, 0, !dbg !3877
  %35 = and i1 %34, %32, !dbg !3877
  call void @llvm.dbg.value(metadata i1 %35, metadata !3801, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3857
  %36 = select i1 %35, i1 true, i1 %28, !dbg !3878
  br i1 %36, label %41, label %37, !dbg !3878

37:                                               ; preds = %20
  %38 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !3880
  br i1 %38, label %287, label %39, !dbg !3883

39:                                               ; preds = %37
  %40 = tail call i32 %2(i8* noundef nonnull %0, i32 noundef %21, i8* noundef %3) #25, !dbg !3884
  br label %287, !dbg !3886

41:                                               ; preds = %20
  %42 = load i8, i8* %0, align 1, !dbg !3887
  %43 = zext i8 %42 to i32, !dbg !3888
  %44 = shl nuw nsw i32 %43, 2, !dbg !3889
  call void @llvm.dbg.value(metadata i32 %44, metadata !3797, metadata !DIExpression()), !dbg !3857
  %45 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !3890
  %46 = bitcast i8* %45 to i8**, !dbg !3891
  %47 = load i8*, i8** %46, align 4, !dbg !3891
  call void @llvm.dbg.value(metadata i8* %47, metadata !3806, metadata !DIExpression()), !dbg !3857
  %48 = getelementptr inbounds i8, i8* %0, i32 %44, !dbg !3892
  call void @llvm.dbg.value(metadata i8* %48, metadata !3807, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.value(metadata i32 0, metadata !3808, metadata !DIExpression()), !dbg !3857
  %49 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !3893
  br i1 %49, label %50, label %135, !dbg !3894

50:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 %21, metadata !3805, metadata !DIExpression()), !dbg !3857
  br i1 %28, label %51, label %76, !dbg !3895

51:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %21, metadata !3805, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.value(metadata i8* %48, metadata !3807, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.value(metadata i32 0, metadata !3808, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.value(metadata i32 0, metadata !3809, metadata !DIExpression()), !dbg !3896
  %52 = icmp ne i16* %5, null
  br label %53, !dbg !3897

53:                                               ; preds = %51, %70
  %54 = phi i32 [ %21, %51 ], [ %72, %70 ]
  %55 = phi i8* [ %48, %51 ], [ %73, %70 ]
  %56 = phi i32 [ 0, %51 ], [ %71, %70 ]
  %57 = phi i32 [ 0, %51 ], [ %74, %70 ]
  call void @llvm.dbg.value(metadata i32 %54, metadata !3805, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.value(metadata i8* %55, metadata !3807, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.value(metadata i32 %56, metadata !3808, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.value(metadata i32 %57, metadata !3809, metadata !DIExpression()), !dbg !3896
  %58 = load i8, i8* %55, align 1, !dbg !3898
  %59 = zext i8 %58 to i32, !dbg !3899
  %60 = getelementptr inbounds i32, i32* %14, i32 %59, !dbg !3899
  %61 = bitcast i32* %60 to i8**, !dbg !3900
  %62 = load i8*, i8** %61, align 4, !dbg !3900
  call void @llvm.dbg.value(metadata i8* %62, metadata !3815, metadata !DIExpression()), !dbg !3901
  %63 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %62, i16 noundef zeroext 0) #24, !dbg !3902
  call void @llvm.dbg.value(metadata i32 %63, metadata !3818, metadata !DIExpression()), !dbg !3901
  %64 = icmp ult i32 %56, %6
  %65 = select i1 %52, i1 %64, i1 false, !dbg !3903
  br i1 %65, label %66, label %70, !dbg !3903

66:                                               ; preds = %53
  %67 = trunc i32 %63 to i16, !dbg !3905
  %68 = add nuw i32 %56, 1, !dbg !3907
  call void @llvm.dbg.value(metadata i32 %68, metadata !3808, metadata !DIExpression()), !dbg !3857
  %69 = getelementptr inbounds i16, i16* %5, i32 %56, !dbg !3908
  store i16 %67, i16* %69, align 2, !dbg !3909
  br label %70, !dbg !3910

70:                                               ; preds = %66, %53
  %71 = phi i32 [ %68, %66 ], [ %56, %53 ], !dbg !3857
  call void @llvm.dbg.value(metadata i32 %71, metadata !3808, metadata !DIExpression()), !dbg !3857
  %72 = add nsw i32 %63, %54, !dbg !3911
  call void @llvm.dbg.value(metadata i32 %72, metadata !3805, metadata !DIExpression()), !dbg !3857
  %73 = getelementptr inbounds i8, i8* %55, i32 1, !dbg !3912
  call void @llvm.dbg.value(metadata i8* %73, metadata !3807, metadata !DIExpression()), !dbg !3857
  %74 = add nuw nsw i32 %57, 1, !dbg !3913
  call void @llvm.dbg.value(metadata i32 %74, metadata !3809, metadata !DIExpression()), !dbg !3896
  %75 = icmp eq i32 %74, %24, !dbg !3914
  br i1 %75, label %82, label %53, !dbg !3897, !llvm.loop !3915

76:                                               ; preds = %50
  %77 = and i32 %4, 4
  %78 = icmp ne i32 %77, 0
  %79 = and i1 %78, %25, !dbg !3917
  %80 = select i1 %79, i32 %24, i32 0, !dbg !3917
  %81 = getelementptr i8, i8* %48, i32 %80, !dbg !3917
  br label %82, !dbg !3917

82:                                               ; preds = %70, %76
  %83 = phi i32 [ 0, %76 ], [ %71, %70 ], !dbg !3920
  %84 = phi i8* [ %81, %76 ], [ %73, %70 ], !dbg !3857
  %85 = phi i32 [ %21, %76 ], [ %72, %70 ], !dbg !3921
  call void @llvm.dbg.value(metadata i1 undef, metadata !3819, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3922
  call void @llvm.dbg.value(metadata i32 0, metadata !3820, metadata !DIExpression()), !dbg !3923
  call void @llvm.dbg.value(metadata i32 %85, metadata !3805, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.value(metadata i8* %84, metadata !3807, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.value(metadata i32 %83, metadata !3808, metadata !DIExpression()), !dbg !3857
  %86 = icmp eq i8 %30, 0, !dbg !3924
  br i1 %86, label %287, label %87, !dbg !3925

87:                                               ; preds = %82
  %88 = and i32 %4, 5, !dbg !3926
  %89 = icmp eq i32 %88, 0, !dbg !3927
  call void @llvm.dbg.value(metadata i1 %89, metadata !3819, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3922
  %90 = icmp eq i32 %33, 0
  %91 = icmp eq i32 %26, 0
  %92 = icmp ne i16* %5, null
  %93 = select i1 %89, i32 -2, i32 -1
  br label %94, !dbg !3925

94:                                               ; preds = %87, %130
  %95 = phi i32 [ %85, %87 ], [ %132, %130 ]
  %96 = phi i8* [ %84, %87 ], [ %100, %130 ]
  %97 = phi i32 [ %83, %87 ], [ %131, %130 ]
  %98 = phi i32 [ 0, %87 ], [ %133, %130 ]
  call void @llvm.dbg.value(metadata i32 %95, metadata !3805, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.value(metadata i8* %96, metadata !3807, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.value(metadata i32 %97, metadata !3808, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.value(metadata i32 %98, metadata !3820, metadata !DIExpression()), !dbg !3923
  %99 = getelementptr inbounds i8, i8* %96, i32 1, !dbg !3928
  call void @llvm.dbg.value(metadata i8* %99, metadata !3807, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.value(metadata i8 undef, metadata !3822, metadata !DIExpression()), !dbg !3929
  %100 = getelementptr inbounds i8, i8* %96, i32 2, !dbg !3930
  call void @llvm.dbg.value(metadata i8* %100, metadata !3807, metadata !DIExpression()), !dbg !3857
  %101 = load i8, i8* %99, align 1, !dbg !3931
  call void @llvm.dbg.value(metadata i8 %101, metadata !3825, metadata !DIExpression()), !dbg !3929
  %102 = zext i8 %101 to i32, !dbg !3932
  %103 = getelementptr inbounds i32, i32* %14, i32 %102, !dbg !3932
  %104 = bitcast i32* %103 to i8**, !dbg !3933
  %105 = load i8*, i8** %104, align 4, !dbg !3933
  call void @llvm.dbg.value(metadata i8* %105, metadata !3826, metadata !DIExpression()), !dbg !3929
  %106 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %105) #24, !dbg !3934
  call void @llvm.dbg.value(metadata i1 %106, metadata !3827, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3929
  br i1 %16, label %113, label %107, !dbg !3935

107:                                              ; preds = %94
  %108 = load i8, i8* %96, align 1, !dbg !3937
  call void @llvm.dbg.value(metadata i8 %108, metadata !3822, metadata !DIExpression()), !dbg !3929
  %109 = zext i8 %108 to i32, !dbg !3938
  %110 = tail call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %109) #24, !dbg !3939
  br i1 %110, label %111, label %113, !dbg !3940

111:                                              ; preds = %107
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([168 x i8], [168 x i8]* @.str.9, i32 0, i32 0), i32 noundef 87, i8* noundef %47, i32 noundef %109) #25, !dbg !3941
  %112 = add nsw i32 %95, -2, !dbg !3947
  call void @llvm.dbg.value(metadata i32 %112, metadata !3805, metadata !DIExpression()), !dbg !3857
  br label %130, !dbg !3948

113:                                              ; preds = %107, %94
  br i1 %106, label %114, label %117, !dbg !3949

114:                                              ; preds = %113
  br i1 %91, label %115, label %118, !dbg !3950

115:                                              ; preds = %114
  %116 = add i32 %95, %93, !dbg !3952
  call void @llvm.dbg.value(metadata i32 %116, metadata !3805, metadata !DIExpression()), !dbg !3857
  br label %130, !dbg !3955

117:                                              ; preds = %113
  br i1 %90, label %130, label %118, !dbg !3956

118:                                              ; preds = %117, %114
  call void @llvm.dbg.label(metadata !3853), !dbg !3957
  %119 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %105, i16 noundef zeroext 0) #24, !dbg !3958
  call void @llvm.dbg.value(metadata i32 %119, metadata !3828, metadata !DIExpression()), !dbg !3929
  %120 = icmp ult i32 %97, %6
  %121 = select i1 %92, i1 %120, i1 false, !dbg !3959
  br i1 %121, label %122, label %126, !dbg !3959

122:                                              ; preds = %118
  %123 = trunc i32 %119 to i16, !dbg !3961
  %124 = add nuw i32 %97, 1, !dbg !3963
  call void @llvm.dbg.value(metadata i32 %124, metadata !3808, metadata !DIExpression()), !dbg !3857
  %125 = getelementptr inbounds i16, i16* %5, i32 %97, !dbg !3964
  store i16 %123, i16* %125, align 2, !dbg !3965
  br label %126, !dbg !3966

126:                                              ; preds = %122, %118
  %127 = phi i32 [ %124, %122 ], [ %97, %118 ], !dbg !3857
  call void @llvm.dbg.value(metadata i32 %127, metadata !3808, metadata !DIExpression()), !dbg !3857
  %128 = add i32 %95, -1, !dbg !3967
  %129 = add i32 %128, %119, !dbg !3968
  call void @llvm.dbg.value(metadata i32 %129, metadata !3805, metadata !DIExpression()), !dbg !3857
  br label %130, !dbg !3969

130:                                              ; preds = %115, %126, %117, %111
  %131 = phi i32 [ %97, %111 ], [ %127, %126 ], [ %97, %115 ], [ %97, %117 ], !dbg !3857
  %132 = phi i32 [ %112, %111 ], [ %129, %126 ], [ %116, %115 ], [ %95, %117 ], !dbg !3929
  call void @llvm.dbg.value(metadata i32 %132, metadata !3805, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.value(metadata i32 %131, metadata !3808, metadata !DIExpression()), !dbg !3857
  %133 = add nuw nsw i32 %98, 1, !dbg !3970
  call void @llvm.dbg.value(metadata i8* %100, metadata !3807, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.value(metadata i32 %133, metadata !3820, metadata !DIExpression()), !dbg !3923
  %134 = icmp eq i32 %133, %31, !dbg !3924
  br i1 %134, label %287, label %94, !dbg !3925, !llvm.loop !3971

135:                                              ; preds = %41
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !3830, metadata !DIExpression()), !dbg !3973
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !3831, metadata !DIExpression()), !dbg !3974
  br i1 %28, label %136, label %138, !dbg !3975

136:                                              ; preds = %135
  call void @llvm.dbg.value(metadata i8 %23, metadata !3832, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.value(metadata i8 0, metadata !3833, metadata !DIExpression()), !dbg !3857
  %137 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !3976
  call void @llvm.dbg.value(metadata i8* %137, metadata !3834, metadata !DIExpression()), !dbg !3857
  br label %143, !dbg !3979

138:                                              ; preds = %135
  %139 = and i32 %4, 4
  %140 = icmp ne i32 %139, 0
  %141 = and i1 %140, %25, !dbg !3980
  %142 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0
  br i1 %141, label %143, label %148, !dbg !3980

143:                                              ; preds = %136, %138
  %144 = phi i8 [ 0, %138 ], [ %23, %136 ]
  %145 = phi i8 [ %23, %138 ], [ 0, %136 ]
  %146 = phi i8* [ %142, %138 ], [ %137, %136 ]
  call void @llvm.dbg.value(metadata i8* null, metadata !3834, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.value(metadata i8 undef, metadata !3833, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.value(metadata i8 0, metadata !3832, metadata !DIExpression()), !dbg !3857
  %147 = call i8* @memcpy(i8* noundef nonnull %146, i8* noundef nonnull %48, i32 noundef %24) #25, !dbg !3982
  br label %148, !dbg !3985

148:                                              ; preds = %138, %143
  %149 = phi i8 [ %145, %143 ], [ 0, %138 ]
  %150 = phi i8 [ %144, %143 ], [ 0, %138 ]
  %151 = getelementptr inbounds i8, i8* %48, i32 %24, !dbg !3986
  call void @llvm.dbg.value(metadata i8* %151, metadata !3807, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.value(metadata i32 0, metadata !3836, metadata !DIExpression()), !dbg !3987
  call void @llvm.dbg.value(metadata i8 %149, metadata !3833, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.value(metadata i8 %150, metadata !3832, metadata !DIExpression()), !dbg !3857
  %152 = icmp eq i8 %30, 0, !dbg !3988
  br i1 %152, label %153, label %155, !dbg !3989

153:                                              ; preds = %148
  %154 = and i32 %4, 4, !dbg !3990
  br label %160, !dbg !3989

155:                                              ; preds = %148
  %156 = icmp eq i32 %33, 0
  %157 = icmp eq i32 %26, 0
  %158 = and i32 %4, 4
  %159 = icmp eq i32 %158, 0
  br label %179, !dbg !3989

160:                                              ; preds = %235, %153
  %161 = phi i32 [ %154, %153 ], [ %158, %235 ], !dbg !3990
  %162 = phi i8 [ %150, %153 ], [ %236, %235 ], !dbg !3991
  %163 = phi i8 [ %149, %153 ], [ %237, %235 ], !dbg !3992
  %164 = phi i8* [ %151, %153 ], [ %186, %235 ], !dbg !3857
  call void @llvm.dbg.value(metadata i8 undef, metadata !3829, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 8)), !dbg !3857
  %165 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !3993
  %166 = load i8, i8* %165, align 1, !dbg !3993
  %167 = zext i8 %162 to i32, !dbg !3994
  %168 = add i8 %166, %162, !dbg !3995
  call void @llvm.dbg.value(metadata i8 %168, metadata !3829, metadata !DIExpression(DW_OP_LLVM_fragment, 8, 8)), !dbg !3857
  %169 = icmp eq i32 %33, 0, !dbg !3996
  %170 = lshr i8 %163, 1, !dbg !3997
  %171 = select i1 %169, i8 %170, i8 0, !dbg !3997
  call void @llvm.dbg.value(metadata i8 %171, metadata !3829, metadata !DIExpression(DW_OP_LLVM_fragment, 24, 8)), !dbg !3857
  %172 = icmp eq i32 %26, 0, !dbg !3998
  %173 = icmp eq i32 %161, 0, !dbg !3990
  %174 = select i1 %173, i8 0, i8 %163, !dbg !3990
  %175 = select i1 %172, i8 %174, i8 0, !dbg !3990
  call void @llvm.dbg.value(metadata i8 %175, metadata !3829, metadata !DIExpression(DW_OP_LLVM_fragment, 16, 8)), !dbg !3857
  call void @llvm.dbg.declare(metadata %struct.cbprintf_package_desc* undef, metadata !3844, metadata !DIExpression()), !dbg !3999
  %176 = load i32, i32* %14, align 1, !dbg !4000
  store i8 %168, i8* %165, align 1, !dbg !4001
  store i8 %175, i8* %22, align 1, !dbg !4001
  store i8 %171, i8* %29, align 1, !dbg !4001
  %177 = call i32 %2(i8* noundef nonnull %0, i32 noundef %44, i8* noundef %3) #25, !dbg !4002
  call void @llvm.dbg.value(metadata i32 %177, metadata !3835, metadata !DIExpression()), !dbg !3857
  %178 = icmp slt i32 %177, 0, !dbg !4003
  br i1 %178, label %287, label %240, !dbg !4005

179:                                              ; preds = %155, %235
  %180 = phi i8* [ %151, %155 ], [ %186, %235 ]
  %181 = phi i32 [ 0, %155 ], [ %238, %235 ]
  %182 = phi i8 [ %149, %155 ], [ %237, %235 ]
  %183 = phi i8 [ %150, %155 ], [ %236, %235 ]
  call void @llvm.dbg.value(metadata i8* %180, metadata !3807, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.value(metadata i32 %181, metadata !3836, metadata !DIExpression()), !dbg !3987
  call void @llvm.dbg.value(metadata i8 %182, metadata !3833, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.value(metadata i8 %183, metadata !3832, metadata !DIExpression()), !dbg !3857
  %184 = getelementptr inbounds i8, i8* %180, i32 1, !dbg !4006
  call void @llvm.dbg.value(metadata i8* %184, metadata !3807, metadata !DIExpression()), !dbg !3857
  %185 = load i8, i8* %180, align 1, !dbg !4007
  call void @llvm.dbg.value(metadata i8 %185, metadata !3838, metadata !DIExpression()), !dbg !4008
  %186 = getelementptr inbounds i8, i8* %180, i32 2, !dbg !4009
  call void @llvm.dbg.value(metadata i8* %186, metadata !3807, metadata !DIExpression()), !dbg !3857
  %187 = load i8, i8* %184, align 1, !dbg !4010
  call void @llvm.dbg.value(metadata i8 %187, metadata !3841, metadata !DIExpression()), !dbg !4008
  %188 = zext i8 %187 to i32, !dbg !4011
  %189 = getelementptr inbounds i32, i32* %14, i32 %188, !dbg !4011
  %190 = bitcast i32* %189 to i8**, !dbg !4012
  %191 = load i8*, i8** %190, align 4, !dbg !4012
  call void @llvm.dbg.value(metadata i8* %191, metadata !3842, metadata !DIExpression()), !dbg !4008
  %192 = call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %191) #24, !dbg !4013
  call void @llvm.dbg.value(metadata i1 %192, metadata !3843, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4008
  br i1 %16, label %196, label %193, !dbg !4014

193:                                              ; preds = %179
  %194 = zext i8 %185 to i32, !dbg !4016
  %195 = call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %194) #24, !dbg !4017
  br i1 %195, label %235, label %196, !dbg !4018

196:                                              ; preds = %193, %179
  br i1 %192, label %197, label %213, !dbg !4019

197:                                              ; preds = %196
  br i1 %157, label %205, label %198, !dbg !4020

198:                                              ; preds = %197
  %199 = icmp ult i8 %183, 16, !dbg !4023
  br i1 %199, label %201, label %200, !dbg !4028

200:                                              ; preds = %198
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1086) #25, !dbg !4029
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1086) #25, !dbg !4029
  unreachable, !dbg !4029

201:                                              ; preds = %198
  %202 = zext i8 %183 to i32, !dbg !4023
  %203 = add nuw nsw i8 %183, 1, !dbg !4031
  call void @llvm.dbg.value(metadata i8 %203, metadata !3832, metadata !DIExpression()), !dbg !3857
  %204 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %202, !dbg !4032
  br label %231, !dbg !4033

205:                                              ; preds = %197
  br i1 %159, label %235, label %206, !dbg !4034

206:                                              ; preds = %205
  %207 = icmp ult i8 %182, 16, !dbg !4035
  br i1 %207, label %209, label %208, !dbg !4040

208:                                              ; preds = %206
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1089) #25, !dbg !4041
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1089) #25, !dbg !4041
  unreachable, !dbg !4041

209:                                              ; preds = %206
  %210 = zext i8 %182 to i32, !dbg !4035
  %211 = add nuw nsw i8 %182, 1, !dbg !4043
  call void @llvm.dbg.value(metadata i8 %211, metadata !3833, metadata !DIExpression()), !dbg !3857
  %212 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %210, !dbg !4044
  br label %231, !dbg !4045

213:                                              ; preds = %196
  br i1 %156, label %221, label %214, !dbg !4046

214:                                              ; preds = %213
  %215 = icmp ult i8 %183, 16, !dbg !4048
  br i1 %215, label %217, label %216, !dbg !4053

216:                                              ; preds = %214
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1096) #25, !dbg !4054
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1096) #25, !dbg !4054
  unreachable, !dbg !4054

217:                                              ; preds = %214
  %218 = zext i8 %183 to i32, !dbg !4048
  %219 = add nuw nsw i8 %183, 1, !dbg !4056
  call void @llvm.dbg.value(metadata i8 %219, metadata !3832, metadata !DIExpression()), !dbg !3857
  %220 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %218, !dbg !4057
  br label %231, !dbg !4058

221:                                              ; preds = %213
  %222 = icmp ult i8 %182, 16, !dbg !4059
  br i1 %222, label %224, label %223, !dbg !4063

223:                                              ; preds = %221
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1099) #25, !dbg !4064
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1099) #25, !dbg !4064
  unreachable, !dbg !4064

224:                                              ; preds = %221
  %225 = zext i8 %182 to i32, !dbg !4059
  %226 = add nuw nsw i8 %182, 1, !dbg !4066
  call void @llvm.dbg.value(metadata i8 %226, metadata !3833, metadata !DIExpression()), !dbg !3857
  %227 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %225, !dbg !4067
  store i8 %185, i8* %227, align 1, !dbg !4068
  %228 = add nuw nsw i8 %182, 2, !dbg !4069
  call void @llvm.dbg.value(metadata i8 %228, metadata !3833, metadata !DIExpression()), !dbg !3857
  %229 = zext i8 %226 to i32, !dbg !4070
  %230 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %229, !dbg !4070
  br label %231

231:                                              ; preds = %217, %224, %201, %209
  %232 = phi i8* [ %212, %209 ], [ %204, %201 ], [ %230, %224 ], [ %220, %217 ]
  %233 = phi i8 [ %183, %209 ], [ %203, %201 ], [ %183, %224 ], [ %219, %217 ]
  %234 = phi i8 [ %211, %209 ], [ %182, %201 ], [ %228, %224 ], [ %182, %217 ]
  store i8 %187, i8* %232, align 1, !dbg !4071
  br label %235, !dbg !4072

235:                                              ; preds = %231, %205, %193
  %236 = phi i8 [ %183, %193 ], [ %183, %205 ], [ %233, %231 ], !dbg !3857
  %237 = phi i8 [ %182, %193 ], [ %182, %205 ], [ %234, %231 ], !dbg !3992
  call void @llvm.dbg.value(metadata i8 %237, metadata !3833, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.value(metadata i8 %236, metadata !3832, metadata !DIExpression()), !dbg !3857
  %238 = add nuw nsw i32 %181, 1, !dbg !4072
  call void @llvm.dbg.value(metadata i8* %186, metadata !3807, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.value(metadata i32 %238, metadata !3836, metadata !DIExpression()), !dbg !3987
  %239 = icmp eq i32 %238, %31, !dbg !3988
  br i1 %239, label %160, label %179, !dbg !3989, !llvm.loop !4073

240:                                              ; preds = %160
  %241 = zext i8 %163 to i32, !dbg !3997
  call void @llvm.dbg.value(metadata i32 %177, metadata !3805, metadata !DIExpression()), !dbg !3857
  store i32 %176, i32* %14, align 1, !dbg !4075
  %242 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !4076
  %243 = call i32 %2(i8* noundef nonnull %242, i32 noundef %241, i8* noundef %3) #25, !dbg !4077
  call void @llvm.dbg.value(metadata i32 %243, metadata !3835, metadata !DIExpression()), !dbg !3857
  %244 = icmp slt i32 %243, 0, !dbg !4078
  br i1 %244, label %287, label %245, !dbg !4080

245:                                              ; preds = %240
  call void @llvm.dbg.value(metadata !DIArgList(i32 %177, i32 %243), metadata !3805, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3857
  %246 = mul nsw i32 %31, -2
  %247 = add i32 %21, %246, !dbg !4081
  %248 = add nuw nsw i32 %44, %24, !dbg !4081
  %249 = sub i32 %247, %248, !dbg !4081
  call void @llvm.dbg.value(metadata i32 %249, metadata !3845, metadata !DIExpression()), !dbg !3857
  %250 = call i32 %2(i8* noundef %164, i32 noundef %249, i8* noundef %3) #25, !dbg !4082
  call void @llvm.dbg.value(metadata i32 %250, metadata !3835, metadata !DIExpression()), !dbg !3857
  %251 = icmp slt i32 %250, 0, !dbg !4083
  br i1 %251, label %287, label %252, !dbg !4085

252:                                              ; preds = %245
  %253 = add nuw nsw i32 %243, %177, !dbg !4086
  call void @llvm.dbg.value(metadata i32 %253, metadata !3805, metadata !DIExpression()), !dbg !3857
  %254 = add nuw nsw i32 %253, %250, !dbg !4087
  call void @llvm.dbg.value(metadata i32 %254, metadata !3805, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.value(metadata i32 0, metadata !3846, metadata !DIExpression()), !dbg !4088
  %255 = icmp eq i8 %162, 0, !dbg !4089
  br i1 %255, label %284, label %256, !dbg !4090

256:                                              ; preds = %252
  %257 = icmp eq i16* %5, null
  br label %258, !dbg !4090

258:                                              ; preds = %256, %279
  %259 = phi i32 [ 0, %256 ], [ %282, %279 ]
  %260 = phi i32 [ %254, %256 ], [ %281, %279 ]
  call void @llvm.dbg.value(metadata i32 %259, metadata !3846, metadata !DIExpression()), !dbg !4088
  call void @llvm.dbg.value(metadata i32 %260, metadata !3805, metadata !DIExpression()), !dbg !3857
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4091
  %261 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %259, !dbg !4092
  %262 = load i8, i8* %261, align 1, !dbg !4092
  call void @llvm.dbg.value(metadata i8 %262, metadata !3848, metadata !DIExpression()), !dbg !4093
  store i8 %262, i8* %10, align 1, !dbg !4094
  %263 = zext i8 %262 to i32, !dbg !4095
  %264 = getelementptr inbounds i32, i32* %14, i32 %263, !dbg !4095
  %265 = bitcast i32* %264 to i8**, !dbg !4096
  %266 = load i8*, i8** %265, align 4, !dbg !4096
  call void @llvm.dbg.value(metadata i8* %266, metadata !3851, metadata !DIExpression()), !dbg !4093
  br i1 %257, label %270, label %267, !dbg !4097

267:                                              ; preds = %258
  %268 = getelementptr inbounds i16, i16* %5, i32 %259, !dbg !4098
  %269 = load i16, i16* %268, align 2, !dbg !4098
  br label %270, !dbg !4097

270:                                              ; preds = %258, %267
  %271 = phi i16 [ %269, %267 ], [ 0, %258 ], !dbg !4097
  call void @llvm.dbg.value(metadata i32 undef, metadata !3852, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4093
  call void @llvm.dbg.value(metadata i8* %10, metadata !3848, metadata !DIExpression(DW_OP_deref)), !dbg !4093
  %272 = call i32 %2(i8* noundef nonnull %10, i32 noundef 1, i8* noundef %3) #25, !dbg !4099
  call void @llvm.dbg.value(metadata i32 %272, metadata !3835, metadata !DIExpression()), !dbg !3857
  %273 = icmp slt i32 %272, 0, !dbg !4100
  br i1 %273, label %277, label %274, !dbg !4102

274:                                              ; preds = %270
  call void @llvm.dbg.value(metadata i16 %271, metadata !3852, metadata !DIExpression()), !dbg !4093
  call void @llvm.dbg.value(metadata !DIArgList(i32 %260, i32 %272), metadata !3805, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3857
  %275 = call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef nonnull %2, i8* noundef %3, i8* noundef %266, i16 noundef zeroext %271) #24, !dbg !4103
  call void @llvm.dbg.value(metadata i32 %275, metadata !3835, metadata !DIExpression()), !dbg !3857
  %276 = icmp slt i32 %275, 0, !dbg !4104
  br i1 %276, label %277, label %279, !dbg !4106

277:                                              ; preds = %274, %270
  %278 = phi i32 [ %275, %274 ], [ %272, %270 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !3805, metadata !DIExpression()), !dbg !3857
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4107
  call void @llvm.dbg.value(metadata i32 undef, metadata !3805, metadata !DIExpression()), !dbg !3857
  br label %287

279:                                              ; preds = %274
  %280 = add nsw i32 %272, %260, !dbg !4108
  call void @llvm.dbg.value(metadata i32 %280, metadata !3805, metadata !DIExpression()), !dbg !3857
  %281 = add nsw i32 %280, %275, !dbg !4109
  call void @llvm.dbg.value(metadata i32 %281, metadata !3805, metadata !DIExpression()), !dbg !3857
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4107
  %282 = add nuw nsw i32 %259, 1, !dbg !4110
  call void @llvm.dbg.value(metadata i32 %282, metadata !3846, metadata !DIExpression()), !dbg !4088
  %283 = icmp eq i32 %282, %167, !dbg !4089
  br i1 %283, label %284, label %258, !dbg !4090, !llvm.loop !4111

284:                                              ; preds = %279, %252
  %285 = phi i32 [ %254, %252 ], [ %281, %279 ], !dbg !4087
  call void @llvm.dbg.value(metadata i32 %285, metadata !3805, metadata !DIExpression()), !dbg !3857
  %286 = call i32 %2(i8* noundef null, i32 noundef 0, i8* noundef %3) #25, !dbg !4113
  br label %287, !dbg !4114

287:                                              ; preds = %130, %82, %277, %284, %160, %240, %245, %37, %39
  %288 = phi i32 [ %21, %39 ], [ %21, %37 ], [ %285, %284 ], [ %177, %160 ], [ %243, %240 ], [ %250, %245 ], [ %278, %277 ], [ %85, %82 ], [ %132, %130 ], !dbg !3857
  ret i32 %288, !dbg !4115
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_package_len(i8* noundef %0) unnamed_addr #1 !dbg !4116 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4120, metadata !DIExpression()), !dbg !4128
  %2 = icmp eq i8* %0, null, !dbg !4129
  br i1 %2, label %3, label %4, !dbg !4132

3:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 198) #25, !dbg !4133
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 198) #25, !dbg !4133
  unreachable, !dbg !4133

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4121, metadata !DIExpression()), !dbg !4128
  call void @llvm.dbg.value(metadata i8* %0, metadata !4122, metadata !DIExpression()), !dbg !4128
  %5 = load i8, i8* %0, align 1, !dbg !4135
  %6 = zext i8 %5 to i32, !dbg !4135
  %7 = shl nuw nsw i32 %6, 2, !dbg !4136
  call void @llvm.dbg.value(metadata i32 %7, metadata !4123, metadata !DIExpression()), !dbg !4128
  %8 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4137
  %9 = load i8, i8* %8, align 1, !dbg !4137
  %10 = zext i8 %9 to i32, !dbg !4137
  call void @llvm.dbg.value(metadata i32 %10, metadata !4124, metadata !DIExpression()), !dbg !4128
  %11 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4138
  %12 = load i8, i8* %11, align 1, !dbg !4138
  %13 = zext i8 %12 to i32, !dbg !4138
  call void @llvm.dbg.value(metadata i32 %13, metadata !4125, metadata !DIExpression()), !dbg !4128
  %14 = getelementptr inbounds i8, i8* %0, i32 %7, !dbg !4139
  call void @llvm.dbg.value(metadata i8* %14, metadata !4121, metadata !DIExpression()), !dbg !4128
  %15 = getelementptr inbounds i8, i8* %14, i32 %13, !dbg !4140
  call void @llvm.dbg.value(metadata i8* %15, metadata !4121, metadata !DIExpression()), !dbg !4128
  call void @llvm.dbg.value(metadata i32 0, metadata !4126, metadata !DIExpression()), !dbg !4141
  %16 = icmp eq i8 %9, 0, !dbg !4142
  br i1 %16, label %17, label %22, !dbg !4144

17:                                               ; preds = %22, %4
  %18 = phi i8* [ %15, %4 ], [ %28, %22 ], !dbg !4128
  %19 = ptrtoint i8* %18 to i32, !dbg !4145
  %20 = ptrtoint i8* %0 to i32, !dbg !4145
  %21 = sub i32 %19, %20, !dbg !4145
  ret i32 %21, !dbg !4146

22:                                               ; preds = %4, %22
  %23 = phi i32 [ %29, %22 ], [ 0, %4 ]
  %24 = phi i8* [ %28, %22 ], [ %15, %4 ]
  call void @llvm.dbg.value(metadata i32 %23, metadata !4126, metadata !DIExpression()), !dbg !4141
  call void @llvm.dbg.value(metadata i8* %24, metadata !4121, metadata !DIExpression()), !dbg !4128
  %25 = getelementptr inbounds i8, i8* %24, i32 1, !dbg !4147
  call void @llvm.dbg.value(metadata i8* %25, metadata !4121, metadata !DIExpression()), !dbg !4128
  %26 = tail call i32 @strlen(i8* noundef nonnull %25) #25, !dbg !4149
  %27 = add i32 %26, 1, !dbg !4150
  %28 = getelementptr inbounds i8, i8* %25, i32 %27, !dbg !4151
  call void @llvm.dbg.value(metadata i8* %28, metadata !4121, metadata !DIExpression()), !dbg !4128
  %29 = add nuw nsw i32 %23, 1, !dbg !4152
  call void @llvm.dbg.value(metadata i32 %29, metadata !4126, metadata !DIExpression()), !dbg !4141
  %30 = icmp eq i32 %29, %10, !dbg !4142
  br i1 %30, label %17, label %22, !dbg !4144, !llvm.loop !4153
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef readonly %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3) unnamed_addr #1 !dbg !4155 {
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %0, metadata !4159, metadata !DIExpression()), !dbg !4163
  call void @llvm.dbg.value(metadata i8* %1, metadata !4160, metadata !DIExpression()), !dbg !4163
  call void @llvm.dbg.value(metadata i8* %2, metadata !4161, metadata !DIExpression()), !dbg !4163
  call void @llvm.dbg.value(metadata i16 %3, metadata !4162, metadata !DIExpression()), !dbg !4163
  %5 = icmp eq i32 (i8*, i32, i8*)* %0, null, !dbg !4164
  br i1 %5, label %6, label %9, !dbg !4166

6:                                                ; preds = %4
  %7 = tail call i32 @strlen(i8* noundef %2) #25, !dbg !4167
  %8 = add i32 %7, 1, !dbg !4169
  br label %20, !dbg !4170

9:                                                ; preds = %4
  %10 = icmp eq i16 %3, 0, !dbg !4171
  br i1 %10, label %13, label %11, !dbg !4172

11:                                               ; preds = %9
  %12 = zext i16 %3 to i32, !dbg !4172
  br label %16, !dbg !4172

13:                                               ; preds = %9
  %14 = tail call i32 @strlen(i8* noundef %2) #25, !dbg !4173
  %15 = add i32 %14, 1, !dbg !4174
  br label %16, !dbg !4172

16:                                               ; preds = %13, %11
  %17 = phi i32 [ %12, %11 ], [ %15, %13 ], !dbg !4172
  %18 = and i32 %17, 65535, !dbg !4175
  call void @llvm.dbg.value(metadata i32 %17, metadata !4162, metadata !DIExpression()), !dbg !4163
  %19 = tail call i32 %0(i8* noundef %2, i32 noundef %18, i8* noundef %1) #25, !dbg !4176
  br label %20, !dbg !4177

20:                                               ; preds = %16, %6
  %21 = phi i32 [ %8, %6 ], [ %19, %16 ], !dbg !4163
  ret i32 %21, !dbg !4178
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !4179 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4181, metadata !DIExpression()), !dbg !4182
  ret i32 0, !dbg !4183
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #7 !dbg !4184 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !4188, metadata !DIExpression()), !dbg !4189
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !4190
  ret void, !dbg !4191
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #8 !dbg !4192 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !4193
  ret i8* %1, !dbg !4194
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !4195 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4206, metadata !DIExpression()), !dbg !4217
  call void @llvm.dbg.value(metadata i8* %0, metadata !4205, metadata !DIExpression()), !dbg !4217
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #24, !dbg !4218
  ret void, !dbg !4220
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !4221 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4225, metadata !DIExpression()), !dbg !4227
  call void @llvm.dbg.value(metadata i8* %1, metadata !4226, metadata !DIExpression()), !dbg !4227
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4228
  %4 = tail call i32 %3(i32 noundef %0) #25, !dbg !4228
  ret i32 %4, !dbg !4229
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !4230 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4237, metadata !DIExpression()), !dbg !4238
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4234, metadata !DIExpression()), !dbg !4238
  call void @llvm.dbg.value(metadata i8* %1, metadata !4235, metadata !DIExpression()), !dbg !4238
  call void @llvm.dbg.value(metadata i8* %2, metadata !4236, metadata !DIExpression()), !dbg !4238
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #25, !dbg !4239
  ret void, !dbg !4240
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !4241 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4245, metadata !DIExpression()), !dbg !4248
  call void @llvm.dbg.value(metadata i32 %1, metadata !4246, metadata !DIExpression()), !dbg !4248
  call void @llvm.dbg.value(metadata i32 0, metadata !4247, metadata !DIExpression()), !dbg !4248
  %3 = icmp eq i32 %1, 0, !dbg !4249
  br i1 %3, label %13, label %4, !dbg !4252

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !4247, metadata !DIExpression()), !dbg !4248
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4253
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !4255
  %8 = load i8, i8* %7, align 1, !dbg !4255
  %9 = zext i8 %8 to i32, !dbg !4255
  %10 = tail call i32 %6(i32 noundef %9) #25, !dbg !4253
  %11 = add nuw i32 %5, 1, !dbg !4256
  call void @llvm.dbg.value(metadata i32 %11, metadata !4247, metadata !DIExpression()), !dbg !4248
  %12 = icmp eq i32 %11, %1, !dbg !4249
  br i1 %12, label %13, label %4, !dbg !4252, !llvm.loop !4257

13:                                               ; preds = %4, %2
  ret void, !dbg !4259
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !4260 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4264, metadata !DIExpression()), !dbg !4266
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !4267
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !4267
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !4265, metadata !DIExpression()), !dbg !4268
  call void @llvm.va_start(i8* nonnull %3), !dbg !4269
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !4270
  %5 = load i32, i32* %4, align 4, !dbg !4270
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !4270
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #24, !dbg !4270
  call void @llvm.va_end(i8* nonnull %3), !dbg !4271
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !4272
  ret void, !dbg !4272
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !4273 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4277, metadata !DIExpression()), !dbg !4282
  call void @llvm.dbg.value(metadata i32 %1, metadata !4278, metadata !DIExpression()), !dbg !4282
  call void @llvm.dbg.value(metadata i8* %2, metadata !4279, metadata !DIExpression()), !dbg !4282
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !4283
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !4283
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !4280, metadata !DIExpression()), !dbg !4284
  call void @llvm.va_start(i8* nonnull %5), !dbg !4285
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !4286
  %7 = load i32, i32* %6, align 4, !dbg !4286
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !4286
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #24, !dbg !4286
  call void @llvm.dbg.value(metadata i32 %9, metadata !4281, metadata !DIExpression()), !dbg !4282
  call void @llvm.va_end(i8* nonnull %5), !dbg !4287
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !4288
  ret i32 %9, !dbg !4289
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !4290 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !4297, metadata !DIExpression()), !dbg !4304
  call void @llvm.dbg.value(metadata i8* %0, metadata !4294, metadata !DIExpression()), !dbg !4304
  call void @llvm.dbg.value(metadata i32 %1, metadata !4295, metadata !DIExpression()), !dbg !4304
  call void @llvm.dbg.value(metadata i8* %2, metadata !4296, metadata !DIExpression()), !dbg !4304
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !4305
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #23, !dbg !4305
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !4298, metadata !DIExpression()), !dbg !4306
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !4307
  store i8* %0, i8** %7, align 4, !dbg !4307
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !4307
  store i32 %1, i32* %8, align 4, !dbg !4307
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !4307
  store i32 0, i32* %9, align 4, !dbg !4307
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #24, !dbg !4308
  %10 = load i32, i32* %9, align 4, !dbg !4309
  %11 = load i32, i32* %8, align 4, !dbg !4311
  %12 = icmp slt i32 %10, %11, !dbg !4312
  br i1 %12, label %13, label %15, !dbg !4313

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !4314
  store i8 0, i8* %14, align 1, !dbg !4316
  br label %15, !dbg !4317

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #23, !dbg !4318
  ret i32 %10, !dbg !4319
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #9 !dbg !4320 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4325, metadata !DIExpression()), !dbg !4327
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !4326, metadata !DIExpression()), !dbg !4327
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !4328
  %4 = load i8*, i8** %3, align 4, !dbg !4328
  %5 = icmp eq i8* %4, null, !dbg !4330
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !4331
  br i1 %5, label %12, label %8, !dbg !4332

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !4333
  %10 = load i32, i32* %9, align 4, !dbg !4333
  %11 = icmp slt i32 %7, %10, !dbg !4334
  br i1 %11, label %15, label %12, !dbg !4335

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !4336
  %14 = add nsw i32 %7, 1, !dbg !4338
  store i32 %14, i32* %13, align 4, !dbg !4338
  br label %25, !dbg !4339

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !4340
  %17 = icmp eq i32 %7, %16, !dbg !4342
  br i1 %17, label %18, label %21, !dbg !4343

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !4344
  store i32 %19, i32* %6, align 4, !dbg !4344
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4346
  store i8 0, i8* %20, align 1, !dbg !4347
  br label %25, !dbg !4348

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !4349
  %23 = add nsw i32 %7, 1, !dbg !4351
  store i32 %23, i32* %6, align 4, !dbg !4351
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4352
  store i8 %22, i8* %24, align 1, !dbg !4353
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !4354
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #10 !dbg !4355 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !4360, metadata !DIExpression()), !dbg !4364
  call void @llvm.dbg.value(metadata i8* %1, metadata !4361, metadata !DIExpression()), !dbg !4364
  call void @llvm.dbg.value(metadata i8* %2, metadata !4362, metadata !DIExpression()), !dbg !4364
  call void @llvm.dbg.value(metadata i8* %3, metadata !4363, metadata !DIExpression()), !dbg !4364
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #25, !dbg !4365
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #26, !dbg !4366
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #24, !dbg !4367
  unreachable, !dbg !4368
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #11 !dbg !4369 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #26, !dbg !4476
  ret %struct.k_thread* %1, !dbg !4477
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !4478 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !4483, metadata !DIExpression()), !dbg !4484
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4485, !srcloc !4487
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !4488
  ret void, !dbg !4489
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #11 !dbg !4490 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4491, !srcloc !4493
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !4494
  ret %struct.k_thread* %1, !dbg !4495
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !4496 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4509, metadata !DIExpression()), !dbg !4635
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4506, metadata !DIExpression()), !dbg !4635
  call void @llvm.dbg.value(metadata i8* %1, metadata !4507, metadata !DIExpression()), !dbg !4635
  call void @llvm.dbg.value(metadata i8* %2, metadata !4508, metadata !DIExpression()), !dbg !4635
  call void @llvm.dbg.value(metadata i32 %4, metadata !4510, metadata !DIExpression()), !dbg !4635
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !4636
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #23, !dbg !4636
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !4511, metadata !DIExpression()), !dbg !4637
  call void @llvm.dbg.value(metadata i32 0, metadata !4515, metadata !DIExpression()), !dbg !4635
  call void @llvm.dbg.value(metadata i1 undef, metadata !4517, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4635
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !4638

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !4638

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !4639
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !4509, metadata !DIExpression()), !dbg !4635
  call void @llvm.dbg.value(metadata i8* %30, metadata !4508, metadata !DIExpression()), !dbg !4635
  call void @llvm.dbg.value(metadata i32 %29, metadata !4515, metadata !DIExpression()), !dbg !4635
  %31 = load i8, i8* %30, align 1, !dbg !4640
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !4638

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !4640
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4641
  call void @llvm.dbg.value(metadata i8* %34, metadata !4508, metadata !DIExpression()), !dbg !4635
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #25, !dbg !4641
  call void @llvm.dbg.value(metadata i32 %35, metadata !4519, metadata !DIExpression()), !dbg !4642
  %36 = icmp slt i32 %35, 0, !dbg !4643
  %37 = add i32 %29, 1, !dbg !4641
  call void @llvm.dbg.value(metadata i32 undef, metadata !4515, metadata !DIExpression()), !dbg !4635
  br i1 %36, label %365, label %28, !llvm.loop !4645

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4647
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !4524, metadata !DIExpression()), !dbg !4648
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !4648
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !4567, metadata !DIExpression()), !dbg !4649
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !4570, metadata !DIExpression()), !dbg !4649
  call void @llvm.dbg.value(metadata i8* %30, metadata !4573, metadata !DIExpression()), !dbg !4649
  call void @llvm.dbg.value(metadata i32 -1, metadata !4574, metadata !DIExpression()), !dbg !4649
  call void @llvm.dbg.value(metadata i32 -1, metadata !4575, metadata !DIExpression()), !dbg !4649
  call void @llvm.dbg.value(metadata i8* null, metadata !4576, metadata !DIExpression()), !dbg !4649
  call void @llvm.dbg.value(metadata i8* %14, metadata !4577, metadata !DIExpression()), !dbg !4649
  call void @llvm.dbg.value(metadata i8 0, metadata !4578, metadata !DIExpression()), !dbg !4649
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #24, !dbg !4650
  call void @llvm.dbg.value(metadata i8* %39, metadata !4508, metadata !DIExpression()), !dbg !4635
  %40 = load i24, i24* %15, align 8, !dbg !4651
  %41 = and i24 %40, 256, !dbg !4651
  %42 = icmp eq i24 %41, 0, !dbg !4651
  br i1 %42, label %51, label %43, !dbg !4653

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !4654
  call void @llvm.dbg.value(metadata i8* %44, metadata !4509, metadata !DIExpression()), !dbg !4635
  %45 = bitcast i8* %27 to i32*, !dbg !4654
  %46 = load i32, i32* %45, align 4, !dbg !4654
  call void @llvm.dbg.value(metadata i32 %46, metadata !4574, metadata !DIExpression()), !dbg !4649
  %47 = icmp slt i32 %46, 0, !dbg !4656
  br i1 %47, label %48, label %56, !dbg !4658

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !4659
  store i24 %49, i24* %15, align 8, !dbg !4659
  %50 = sub nsw i32 0, %46, !dbg !4661
  call void @llvm.dbg.value(metadata i32 %50, metadata !4574, metadata !DIExpression()), !dbg !4649
  br label %56, !dbg !4662

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !4663
  %53 = icmp eq i24 %52, 0, !dbg !4663
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !4665
  br label %56, !dbg !4665

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !4666
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !4649
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4509, metadata !DIExpression()), !dbg !4635
  call void @llvm.dbg.value(metadata i32 %58, metadata !4574, metadata !DIExpression()), !dbg !4649
  %60 = and i24 %57, 1024, !dbg !4666
  %61 = icmp eq i24 %60, 0, !dbg !4666
  br i1 %61, label %69, label %62, !dbg !4667

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !4668
  call void @llvm.dbg.value(metadata i8* %63, metadata !4509, metadata !DIExpression()), !dbg !4635
  %64 = bitcast i8* %59 to i32*, !dbg !4668
  %65 = load i32, i32* %64, align 4, !dbg !4668
  call void @llvm.dbg.value(metadata i32 %65, metadata !4579, metadata !DIExpression()), !dbg !4669
  %66 = icmp slt i32 %65, 0, !dbg !4670
  br i1 %66, label %67, label %74, !dbg !4672

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !4673
  store i24 %68, i24* %15, align 8, !dbg !4673
  br label %74, !dbg !4675

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !4676
  %71 = icmp eq i24 %70, 0, !dbg !4676
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !4678
  br label %74, !dbg !4678

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !4679
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !4649
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !4649
  call void @llvm.dbg.value(metadata i8* %77, metadata !4509, metadata !DIExpression()), !dbg !4635
  call void @llvm.dbg.value(metadata i32 %76, metadata !4575, metadata !DIExpression()), !dbg !4649
  store i32 0, i32* %16, align 4, !dbg !4680
  store i32 0, i32* %17, align 8, !dbg !4681
  %78 = lshr i24 %75, 16, !dbg !4679
  call void @llvm.dbg.value(metadata i24 %78, metadata !4582, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4649
  %79 = lshr i24 %75, 11, !dbg !4682
  %80 = and i24 %79, 15, !dbg !4682
  %81 = zext i24 %80 to i32, !dbg !4682
  call void @llvm.dbg.value(metadata i32 %81, metadata !4583, metadata !DIExpression()), !dbg !4649
  %82 = trunc i24 %78 to i3, !dbg !4683
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !4683

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !4684

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4687
  call void @llvm.dbg.value(metadata i8* %85, metadata !4509, metadata !DIExpression()), !dbg !4635
  %86 = bitcast i8* %77 to i32*, !dbg !4687
  %87 = load i32, i32* %86, align 4, !dbg !4687
  %88 = sext i32 %87 to i64, !dbg !4687
  store i64 %88, i64* %20, align 8, !dbg !4689
  br label %115, !dbg !4690

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4691
  call void @llvm.dbg.value(metadata i8* %90, metadata !4509, metadata !DIExpression()), !dbg !4635
  %91 = bitcast i8* %77 to i32*, !dbg !4691
  %92 = load i32, i32* %91, align 4, !dbg !4691
  %93 = sext i32 %92 to i64, !dbg !4691
  store i64 %93, i64* %20, align 8, !dbg !4694
  br label %115, !dbg !4695

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !4696
  %96 = add i32 %95, 7, !dbg !4696
  %97 = and i32 %96, -8, !dbg !4696
  %98 = inttoptr i32 %97 to i8*, !dbg !4696
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4696
  call void @llvm.dbg.value(metadata i8* %99, metadata !4509, metadata !DIExpression()), !dbg !4635
  %100 = inttoptr i32 %97 to i64*, !dbg !4696
  %101 = load i64, i64* %100, align 8, !dbg !4696
  store i64 %101, i64* %20, align 8, !dbg !4697
  br label %115, !dbg !4698

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !4699
  %104 = add i32 %103, 7, !dbg !4699
  %105 = and i32 %104, -8, !dbg !4699
  %106 = inttoptr i32 %105 to i8*, !dbg !4699
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !4699
  call void @llvm.dbg.value(metadata i8* %107, metadata !4509, metadata !DIExpression()), !dbg !4635
  %108 = inttoptr i32 %105 to i64*, !dbg !4699
  %109 = load i64, i64* %108, align 8, !dbg !4699
  store i64 %109, i64* %20, align 8, !dbg !4700
  br label %115, !dbg !4701

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4702
  call void @llvm.dbg.value(metadata i8* %111, metadata !4509, metadata !DIExpression()), !dbg !4635
  %112 = bitcast i8* %77 to i32*, !dbg !4702
  %113 = load i32, i32* %112, align 4, !dbg !4702
  %114 = sext i32 %113 to i64, !dbg !4703
  store i64 %114, i64* %20, align 8, !dbg !4704
  br label %115, !dbg !4705

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !4706
  call void @llvm.dbg.value(metadata i8* %117, metadata !4509, metadata !DIExpression()), !dbg !4635
  %118 = trunc i24 %79 to i4, !dbg !4707
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !4707

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !4708
  %121 = ashr exact i64 %120, 56, !dbg !4708
  store i64 %121, i64* %20, align 8, !dbg !4711
  br label %177, !dbg !4712

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !4713
  %124 = ashr exact i64 %123, 48, !dbg !4713
  store i64 %124, i64* %20, align 8, !dbg !4716
  br label %177, !dbg !4717

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !4718

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4721
  call void @llvm.dbg.value(metadata i8* %127, metadata !4509, metadata !DIExpression()), !dbg !4635
  %128 = bitcast i8* %77 to i32*, !dbg !4721
  %129 = load i32, i32* %128, align 4, !dbg !4721
  %130 = zext i32 %129 to i64, !dbg !4721
  store i64 %130, i64* %20, align 8, !dbg !4723
  br label %157, !dbg !4724

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4725
  call void @llvm.dbg.value(metadata i8* %132, metadata !4509, metadata !DIExpression()), !dbg !4635
  call void @llvm.dbg.value(metadata i8* %132, metadata !4509, metadata !DIExpression()), !dbg !4635
  %133 = bitcast i8* %77 to i32*, !dbg !4725
  %134 = load i32, i32* %133, align 4, !dbg !4725
  %135 = zext i32 %134 to i64, !dbg !4725
  store i64 %135, i64* %20, align 8, !dbg !4725
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !4727
  %138 = add i32 %137, 7, !dbg !4727
  %139 = and i32 %138, -8, !dbg !4727
  %140 = inttoptr i32 %139 to i8*, !dbg !4727
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !4727
  call void @llvm.dbg.value(metadata i8* %141, metadata !4509, metadata !DIExpression()), !dbg !4635
  %142 = inttoptr i32 %139 to i64*, !dbg !4727
  %143 = load i64, i64* %142, align 8, !dbg !4727
  store i64 %143, i64* %20, align 8, !dbg !4728
  br label %157, !dbg !4729

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !4730
  %146 = add i32 %145, 7, !dbg !4730
  %147 = and i32 %146, -8, !dbg !4730
  %148 = inttoptr i32 %147 to i8*, !dbg !4730
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !4730
  call void @llvm.dbg.value(metadata i8* %149, metadata !4509, metadata !DIExpression()), !dbg !4635
  %150 = inttoptr i32 %147 to i64*, !dbg !4730
  %151 = load i64, i64* %150, align 8, !dbg !4730
  store i64 %151, i64* %20, align 8, !dbg !4731
  br label %157, !dbg !4732

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4733
  call void @llvm.dbg.value(metadata i8* %153, metadata !4509, metadata !DIExpression()), !dbg !4635
  %154 = bitcast i8* %77 to i32*, !dbg !4733
  %155 = load i32, i32* %154, align 4, !dbg !4733
  %156 = zext i32 %155 to i64, !dbg !4734
  store i64 %156, i64* %20, align 8, !dbg !4735
  br label %157, !dbg !4736

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !4737
  call void @llvm.dbg.value(metadata i8* %159, metadata !4509, metadata !DIExpression()), !dbg !4635
  %160 = trunc i24 %79 to i4, !dbg !4738
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !4738

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !4739
  store i64 %162, i64* %20, align 8, !dbg !4742
  br label %177, !dbg !4743

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !4744
  store i64 %164, i64* %20, align 8, !dbg !4747
  br label %177, !dbg !4748

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !4749
  %167 = add i32 %166, 7, !dbg !4749
  %168 = and i32 %167, -8, !dbg !4749
  %169 = inttoptr i32 %168 to i8*, !dbg !4749
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !4749
  call void @llvm.dbg.value(metadata i8* %170, metadata !4509, metadata !DIExpression()), !dbg !4635
  call void @llvm.dbg.value(metadata i8* %170, metadata !4509, metadata !DIExpression()), !dbg !4635
  %171 = inttoptr i32 %168 to double*, !dbg !4749
  %172 = load double, double* %171, align 8, !dbg !4749
  store double %172, double* %19, align 8, !dbg !4749
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4753
  call void @llvm.dbg.value(metadata i8* %174, metadata !4509, metadata !DIExpression()), !dbg !4635
  %175 = bitcast i8* %77 to i8**, !dbg !4753
  %176 = load i8*, i8** %175, align 4, !dbg !4753
  store i8* %176, i8** %18, align 8, !dbg !4756
  br label %177, !dbg !4757

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !4649
  call void @llvm.dbg.value(metadata i8* %178, metadata !4509, metadata !DIExpression()), !dbg !4635
  %179 = and i24 %75, 3, !dbg !4758
  %180 = icmp eq i24 %179, 0, !dbg !4758
  br i1 %180, label %185, label %181, !dbg !4758

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #24, !dbg !4759
  call void @llvm.dbg.value(metadata i32 %182, metadata !4584, metadata !DIExpression()), !dbg !4760
  %183 = icmp slt i32 %182, 0, !dbg !4761
  %184 = add i32 %182, %29, !dbg !4759
  call void @llvm.dbg.value(metadata i32 undef, metadata !4515, metadata !DIExpression()), !dbg !4635
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !4763
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !4764

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #25, !dbg !4765
  call void @llvm.dbg.value(metadata i32 %188, metadata !4588, metadata !DIExpression()), !dbg !4766
  %189 = icmp slt i32 %188, 0, !dbg !4767
  %190 = add i32 %29, 1, !dbg !4765
  call void @llvm.dbg.value(metadata i32 undef, metadata !4515, metadata !DIExpression()), !dbg !4635
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !4769
  call void @llvm.dbg.value(metadata i8* %192, metadata !4576, metadata !DIExpression()), !dbg !4649
  %193 = icmp sgt i32 %76, -1, !dbg !4770
  br i1 %193, label %194, label %196, !dbg !4772

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #25, !dbg !4773
  call void @llvm.dbg.value(metadata i32 %195, metadata !4591, metadata !DIExpression()), !dbg !4775
  br label %241, !dbg !4776

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #25, !dbg !4777
  call void @llvm.dbg.value(metadata i32 %197, metadata !4591, metadata !DIExpression()), !dbg !4775
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !4576, metadata !DIExpression()), !dbg !4649
  %199 = load i64, i64* %20, align 8, !dbg !4779
  %200 = trunc i64 %199 to i8, !dbg !4780
  store i8 %200, i8* %10, align 1, !dbg !4781
  call void @llvm.dbg.value(metadata i8* %23, metadata !4577, metadata !DIExpression()), !dbg !4649
  br label %245, !dbg !4782

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !4783
  %203 = icmp eq i24 %202, 0, !dbg !4783
  %204 = trunc i24 %75 to i8, !dbg !4785
  %205 = shl i8 %204, 1, !dbg !4785
  %206 = and i8 %205, 32, !dbg !4785
  %207 = select i1 %203, i8 %206, i8 43, !dbg !4785
  call void @llvm.dbg.value(metadata i8 %207, metadata !4578, metadata !DIExpression()), !dbg !4649
  %208 = load i64, i64* %20, align 8, !dbg !4786
  call void @llvm.dbg.value(metadata i64 %208, metadata !4516, metadata !DIExpression()), !dbg !4635
  %209 = icmp slt i64 %208, 0, !dbg !4787
  br i1 %209, label %210, label %212, !dbg !4789

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !4578, metadata !DIExpression()), !dbg !4649
  %211 = sub nsw i64 0, %208, !dbg !4790
  store i64 %211, i64* %20, align 8, !dbg !4792
  br label %212, !dbg !4793

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !4649
  call void @llvm.dbg.value(metadata i8 %213, metadata !4578, metadata !DIExpression()), !dbg !4649
  %214 = load i64, i64* %20, align 8, !dbg !4794
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !4795
  call void @llvm.dbg.value(metadata i8* %215, metadata !4576, metadata !DIExpression()), !dbg !4649
  br label %216, !dbg !4796

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !4797
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !4798
  call void @llvm.dbg.value(metadata i8* %218, metadata !4576, metadata !DIExpression()), !dbg !4649
  call void @llvm.dbg.value(metadata i8 %217, metadata !4578, metadata !DIExpression()), !dbg !4649
  call void @llvm.dbg.label(metadata !4634), !dbg !4799
  %219 = icmp sgt i32 %76, -1, !dbg !4800
  br i1 %219, label %222, label %220, !dbg !4801

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !4802
  br label %245, !dbg !4801

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !4804
  %224 = sub i32 %22, %223, !dbg !4804
  call void @llvm.dbg.value(metadata i32 %224, metadata !4593, metadata !DIExpression()), !dbg !4805
  %225 = load i24, i24* %15, align 8, !dbg !4806
  %226 = and i24 %225, -65, !dbg !4806
  store i24 %226, i24* %15, align 8, !dbg !4806
  %227 = icmp ugt i32 %76, %224, !dbg !4807
  br i1 %227, label %228, label %245, !dbg !4809

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !4810
  store i32 %229, i32* %16, align 4, !dbg !4812
  br label %245, !dbg !4813

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !4814
  %232 = icmp eq i8* %231, null, !dbg !4816
  br i1 %232, label %245, label %233, !dbg !4817

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !4818
  %235 = zext i32 %234 to i64, !dbg !4818
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !4820
  call void @llvm.dbg.value(metadata i8* %236, metadata !4576, metadata !DIExpression()), !dbg !4649
  %237 = load i24, i24* %15, align 8, !dbg !4821
  %238 = or i24 %237, 1048576, !dbg !4821
  store i24 %238, i24* %15, align 8, !dbg !4821
  store i8 120, i8* %21, align 1, !dbg !4822
  br label %216, !dbg !4823

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !4824
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #24, !dbg !4827
  br label %363, !dbg !4828

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !4829
  call void @llvm.dbg.value(metadata i32 %242, metadata !4591, metadata !DIExpression()), !dbg !4775
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !4830
  call void @llvm.dbg.value(metadata i32 -1, metadata !4575, metadata !DIExpression()), !dbg !4649
  call void @llvm.dbg.value(metadata i32 %29, metadata !4515, metadata !DIExpression()), !dbg !4635
  call void @llvm.dbg.value(metadata i8* %192, metadata !4576, metadata !DIExpression()), !dbg !4649
  call void @llvm.dbg.value(metadata i8* %243, metadata !4577, metadata !DIExpression()), !dbg !4649
  call void @llvm.dbg.value(metadata i8 0, metadata !4578, metadata !DIExpression()), !dbg !4649
  %244 = icmp eq i8* %192, null, !dbg !4831
  br i1 %244, label %363, label %245, !dbg !4833, !llvm.loop !4645

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !4802
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !4596, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4649
  call void @llvm.dbg.value(metadata i32 0, metadata !4597, metadata !DIExpression()), !dbg !4649
  %250 = zext i8 %249 to i32, !dbg !4834
  %251 = icmp eq i8 %249, 0, !dbg !4836
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !4596, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4649
  call void @llvm.dbg.value(metadata i32 undef, metadata !4596, metadata !DIExpression()), !dbg !4649
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !4596, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4649
  call void @llvm.dbg.value(metadata i32 undef, metadata !4596, metadata !DIExpression()), !dbg !4649
  %252 = icmp sgt i32 %58, 0, !dbg !4837
  br i1 %252, label %253, label %302, !dbg !4838

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !4802
  %255 = icmp eq i24 %254, 0, !dbg !4802
  %256 = ptrtoint i8* %248 to i32, !dbg !4839
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !4596, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4649
  %257 = ptrtoint i8* %247 to i32, !dbg !4839
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !4596, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4649
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !4596, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4649
  %258 = xor i1 %251, true, !dbg !4840
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4596, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4649
  %259 = sext i1 %258 to i32, !dbg !4840
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4596, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4649
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !4596, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4649
  %260 = lshr i24 %246, 19, !dbg !4841
  %261 = and i24 %260, 1, !dbg !4841
  %262 = select i1 %255, i24 %261, i24 2, !dbg !4841
  %263 = zext i24 %262 to i32, !dbg !4841
  %264 = add i32 %257, %259, !dbg !4841
  %265 = add i32 %256, %263, !dbg !4841
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !4596, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4649
  %266 = and i24 %246, 4194304, !dbg !4842
  %267 = icmp eq i24 %266, 0, !dbg !4842
  %268 = load i32, i32* %16, align 4, !dbg !4844
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !4596, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4649
  call void @llvm.dbg.value(metadata i32 undef, metadata !4596, metadata !DIExpression()), !dbg !4649
  %269 = load i32, i32* %17, align 8, !dbg !4845
  %270 = select i1 %267, i32 0, i32 %269, !dbg !4845
  call void @llvm.dbg.value(metadata i32 undef, metadata !4596, metadata !DIExpression()), !dbg !4649
  %271 = add i32 %264, %58, !dbg !4845
  %272 = add i32 %265, %268, !dbg !4845
  %273 = add i32 %272, %270, !dbg !4846
  %274 = sub i32 %271, %273, !dbg !4846
  call void @llvm.dbg.value(metadata i32 %274, metadata !4574, metadata !DIExpression()), !dbg !4649
  %275 = and i24 %246, 4, !dbg !4847
  %276 = icmp eq i24 %275, 0, !dbg !4847
  br i1 %276, label %277, label %302, !dbg !4848

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !4598, metadata !DIExpression()), !dbg !4849
  %278 = and i24 %246, 64, !dbg !4850
  %279 = icmp eq i24 %278, 0, !dbg !4850
  %280 = select i1 %279, i1 true, i1 %251, !dbg !4851
  %281 = select i1 %279, i8 %249, i8 0, !dbg !4851
  %282 = select i1 %279, i32 32, i32 48, !dbg !4851
  br i1 %280, label %287, label %283, !dbg !4851

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #25, !dbg !4852
  call void @llvm.dbg.value(metadata i32 %284, metadata !4603, metadata !DIExpression()), !dbg !4853
  %285 = icmp slt i32 %284, 0, !dbg !4854
  %286 = add i32 %29, 1, !dbg !4852
  call void @llvm.dbg.value(metadata i32 undef, metadata !4515, metadata !DIExpression()), !dbg !4635
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !4649
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !4639
  call void @llvm.dbg.value(metadata i32 %290, metadata !4515, metadata !DIExpression()), !dbg !4635
  call void @llvm.dbg.value(metadata i8 undef, metadata !4598, metadata !DIExpression()), !dbg !4849
  call void @llvm.dbg.value(metadata i8 %288, metadata !4578, metadata !DIExpression()), !dbg !4649
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !4856
  %292 = add i32 %291, -1, !dbg !4856
  br label %293, !dbg !4856

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !4857
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !4639
  call void @llvm.dbg.value(metadata i32 %295, metadata !4515, metadata !DIExpression()), !dbg !4635
  call void @llvm.dbg.value(metadata i32 %294, metadata !4574, metadata !DIExpression()), !dbg !4649
  call void @llvm.dbg.value(metadata i32 %294, metadata !4574, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4649
  %296 = icmp sgt i32 %294, 0, !dbg !4858
  br i1 %296, label %297, label %302, !dbg !4856

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !4859
  call void @llvm.dbg.value(metadata i32 %298, metadata !4574, metadata !DIExpression()), !dbg !4649
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #25, !dbg !4860
  call void @llvm.dbg.value(metadata i32 %299, metadata !4609, metadata !DIExpression()), !dbg !4861
  %300 = icmp slt i32 %299, 0, !dbg !4862
  %301 = add i32 %295, 1, !dbg !4860
  call void @llvm.dbg.value(metadata i32 undef, metadata !4515, metadata !DIExpression()), !dbg !4635
  br i1 %300, label %361, label %293, !llvm.loop !4864

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !4649
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !4649
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !4639
  call void @llvm.dbg.value(metadata i32 %305, metadata !4515, metadata !DIExpression()), !dbg !4635
  call void @llvm.dbg.value(metadata i32 %304, metadata !4574, metadata !DIExpression()), !dbg !4649
  call void @llvm.dbg.value(metadata i8 %303, metadata !4578, metadata !DIExpression()), !dbg !4649
  %306 = icmp eq i8 %303, 0, !dbg !4866
  br i1 %306, label %312, label %307, !dbg !4867

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !4868
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #25, !dbg !4869
  call void @llvm.dbg.value(metadata i32 %309, metadata !4612, metadata !DIExpression()), !dbg !4870
  %310 = icmp slt i32 %309, 0, !dbg !4871
  %311 = add i32 %305, 1, !dbg !4869
  call void @llvm.dbg.value(metadata i32 undef, metadata !4515, metadata !DIExpression()), !dbg !4635
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !4639
  call void @llvm.dbg.value(metadata i32 %313, metadata !4515, metadata !DIExpression()), !dbg !4635
  %314 = lshr i24 %246, 20, !dbg !4873
  %315 = lshr i24 %246, 19, !dbg !4874
  %316 = or i24 %314, %315, !dbg !4875
  %317 = and i24 %316, 1, !dbg !4875
  %318 = icmp eq i24 %317, 0, !dbg !4875
  br i1 %318, label %323, label %319, !dbg !4876

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !4877
  call void @llvm.dbg.value(metadata i32 %320, metadata !4616, metadata !DIExpression()), !dbg !4878
  %321 = icmp slt i32 %320, 0, !dbg !4879
  %322 = add i32 %313, 1, !dbg !4877
  call void @llvm.dbg.value(metadata i32 undef, metadata !4515, metadata !DIExpression()), !dbg !4635
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !4639
  call void @llvm.dbg.value(metadata i32 %324, metadata !4515, metadata !DIExpression()), !dbg !4635
  %325 = and i24 %246, 1048576, !dbg !4881
  %326 = icmp eq i24 %325, 0, !dbg !4881
  br i1 %326, label %333, label %327, !dbg !4882

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !4883
  %329 = zext i8 %328 to i32, !dbg !4883
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #25, !dbg !4883
  call void @llvm.dbg.value(metadata i32 %330, metadata !4622, metadata !DIExpression()), !dbg !4884
  %331 = icmp slt i32 %330, 0, !dbg !4885
  %332 = add i32 %324, 1, !dbg !4883
  call void @llvm.dbg.value(metadata i32 undef, metadata !4515, metadata !DIExpression()), !dbg !4635
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !4639
  call void @llvm.dbg.value(metadata i32 %334, metadata !4515, metadata !DIExpression()), !dbg !4635
  %335 = load i32, i32* %16, align 4, !dbg !4887
  call void @llvm.dbg.value(metadata i32 %335, metadata !4597, metadata !DIExpression()), !dbg !4649
  br label %336, !dbg !4888

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !4889
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !4639
  call void @llvm.dbg.value(metadata i32 %338, metadata !4515, metadata !DIExpression()), !dbg !4635
  call void @llvm.dbg.value(metadata i32 %337, metadata !4597, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4649
  %339 = icmp sgt i32 %337, 0, !dbg !4890
  br i1 %339, label %340, label %345, !dbg !4888

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !4891
  call void @llvm.dbg.value(metadata i32 %341, metadata !4597, metadata !DIExpression()), !dbg !4649
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !4892
  call void @llvm.dbg.value(metadata i32 %342, metadata !4626, metadata !DIExpression()), !dbg !4893
  %343 = icmp slt i32 %342, 0, !dbg !4894
  %344 = add i32 %338, 1, !dbg !4892
  call void @llvm.dbg.value(metadata i32 undef, metadata !4515, metadata !DIExpression()), !dbg !4635
  br i1 %343, label %361, label %336, !llvm.loop !4896

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #24, !dbg !4898
  call void @llvm.dbg.value(metadata i32 %346, metadata !4629, metadata !DIExpression()), !dbg !4899
  %347 = icmp slt i32 %346, 0, !dbg !4900
  call void @llvm.dbg.value(metadata i32 undef, metadata !4515, metadata !DIExpression()), !dbg !4635
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !4898
  call void @llvm.dbg.value(metadata i32 %349, metadata !4515, metadata !DIExpression()), !dbg !4635
  call void @llvm.dbg.value(metadata i32 %304, metadata !4574, metadata !DIExpression()), !dbg !4649
  %350 = icmp sgt i32 %304, 0, !dbg !4902
  br i1 %350, label %351, label %363, !dbg !4903

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !4903
  %353 = add i32 %352, %338, !dbg !4903
  br label %354, !dbg !4903

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4515, metadata !DIExpression()), !dbg !4635
  call void @llvm.dbg.value(metadata i32 %355, metadata !4574, metadata !DIExpression()), !dbg !4649
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #25, !dbg !4904
  call void @llvm.dbg.value(metadata i32 %356, metadata !4631, metadata !DIExpression()), !dbg !4905
  %357 = icmp slt i32 %356, 0, !dbg !4906
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !4908
  call void @llvm.dbg.value(metadata i32 undef, metadata !4515, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4635
  call void @llvm.dbg.value(metadata i32 %359, metadata !4574, metadata !DIExpression()), !dbg !4649
  %360 = icmp sgt i32 %355, 1, !dbg !4902
  br i1 %360, label %354, label %363, !dbg !4903, !llvm.loop !4909

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !4515, metadata !DIExpression()), !dbg !4635
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4646
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !4639
  call void @llvm.dbg.value(metadata i32 %364, metadata !4515, metadata !DIExpression()), !dbg !4635
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4646
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !4635
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #23, !dbg !4911
  ret i32 %366, !dbg !4911
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #12

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !4912 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4916, metadata !DIExpression()), !dbg !4918
  call void @llvm.dbg.value(metadata i8* %1, metadata !4917, metadata !DIExpression()), !dbg !4918
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !4919
  store i24 0, i24* %3, align 4, !dbg !4919
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !4919
  store i8 0, i8* %4, align 1, !dbg !4919
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !4919
  store i32 0, i32* %5, align 4, !dbg !4919
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !4919
  store i32 0, i32* %6, align 4, !dbg !4919
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4920
  call void @llvm.dbg.value(metadata i8* %7, metadata !4917, metadata !DIExpression()), !dbg !4918
  %8 = load i8, i8* %7, align 1, !dbg !4921
  %9 = icmp eq i8 %8, 37, !dbg !4923
  br i1 %9, label %10, label %12, !dbg !4924

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4925
  call void @llvm.dbg.value(metadata i8* %11, metadata !4917, metadata !DIExpression()), !dbg !4918
  store i8 37, i8* %4, align 1, !dbg !4927
  br label %18, !dbg !4928

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #24, !dbg !4929
  call void @llvm.dbg.value(metadata i8* %13, metadata !4917, metadata !DIExpression()), !dbg !4918
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #24, !dbg !4930
  call void @llvm.dbg.value(metadata i8* %14, metadata !4917, metadata !DIExpression()), !dbg !4918
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #24, !dbg !4931
  call void @llvm.dbg.value(metadata i8* %15, metadata !4917, metadata !DIExpression()), !dbg !4918
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #24, !dbg !4932
  call void @llvm.dbg.value(metadata i8* %16, metadata !4917, metadata !DIExpression()), !dbg !4918
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #24, !dbg !4933
  call void @llvm.dbg.value(metadata i8* %17, metadata !4917, metadata !DIExpression()), !dbg !4918
  br label %18, !dbg !4934

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !4918
  ret i8* %19, !dbg !4935
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !4936 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4940, metadata !DIExpression()), !dbg !4947
  call void @llvm.dbg.value(metadata i8* %1, metadata !4941, metadata !DIExpression()), !dbg !4947
  call void @llvm.dbg.value(metadata i8* %2, metadata !4942, metadata !DIExpression()), !dbg !4947
  call void @llvm.dbg.value(metadata i8* %3, metadata !4943, metadata !DIExpression()), !dbg !4947
  call void @llvm.dbg.value(metadata i32 0, metadata !4944, metadata !DIExpression()), !dbg !4947
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !4948

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !4949
  call void @llvm.dbg.value(metadata i32 %9, metadata !4944, metadata !DIExpression()), !dbg !4947
  call void @llvm.dbg.value(metadata i8* %8, metadata !4942, metadata !DIExpression()), !dbg !4947
  %10 = icmp ult i8* %8, %3, !dbg !4950
  br i1 %10, label %11, label %13, !dbg !4951

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !4952
  br label %17, !dbg !4951

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !4953

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !4954
  %16 = icmp eq i8 %15, 0, !dbg !4953
  br i1 %16, label %24, label %17, !dbg !4948

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !4952
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !4955
  call void @llvm.dbg.value(metadata i8* %19, metadata !4942, metadata !DIExpression()), !dbg !4947
  %20 = zext i8 %18 to i32, !dbg !4956
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #25, !dbg !4957
  call void @llvm.dbg.value(metadata i32 %21, metadata !4945, metadata !DIExpression()), !dbg !4958
  %22 = icmp slt i32 %21, 0, !dbg !4959
  %23 = add i32 %9, 1, !dbg !4961
  call void @llvm.dbg.value(metadata i32 undef, metadata !4944, metadata !DIExpression()), !dbg !4947
  br i1 %22, label %24, label %7, !llvm.loop !4962

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !4947
  ret i32 %25, !dbg !4964
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #13 !dbg !4965 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !4969, metadata !DIExpression()), !dbg !4979
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !4970, metadata !DIExpression()), !dbg !4979
  call void @llvm.dbg.value(metadata i8* %2, metadata !4971, metadata !DIExpression()), !dbg !4979
  call void @llvm.dbg.value(metadata i8* %3, metadata !4972, metadata !DIExpression()), !dbg !4979
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !4980
  %6 = load i8, i8* %5, align 1, !dbg !4980
  %7 = zext i8 %6 to i32, !dbg !4981
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #24, !dbg !4982
  %9 = icmp eq i32 %8, 0, !dbg !4982
  call void @llvm.dbg.value(metadata i1 %9, metadata !4973, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4979
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #24, !dbg !4983
  call void @llvm.dbg.value(metadata i32 %10, metadata !4974, metadata !DIExpression()), !dbg !4979
  %11 = ptrtoint i8* %3 to i32, !dbg !4984
  %12 = ptrtoint i8* %2 to i32, !dbg !4984
  %13 = sub i32 %11, %12, !dbg !4984
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !4985
  call void @llvm.dbg.value(metadata i8* %14, metadata !4976, metadata !DIExpression()), !dbg !4979
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !4986

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !4979
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !4969, metadata !DIExpression()), !dbg !4979
  call void @llvm.dbg.value(metadata i8* %18, metadata !4976, metadata !DIExpression()), !dbg !4979
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !4987
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !4988
  call void @llvm.dbg.value(metadata i32 %25, metadata !4977, metadata !DIExpression()), !dbg !4989
  %26 = icmp ult i32 %25, 10, !dbg !4990
  %27 = select i1 %26, i32 48, i32 %16, !dbg !4991
  %28 = add i32 %27, %25, !dbg !4989
  %29 = trunc i32 %28 to i8, !dbg !4991
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !4992
  call void @llvm.dbg.value(metadata i8* %30, metadata !4976, metadata !DIExpression()), !dbg !4979
  store i8 %29, i8* %30, align 1, !dbg !4993
  call void @llvm.dbg.value(metadata i64 %22, metadata !4969, metadata !DIExpression()), !dbg !4979
  %31 = icmp uge i64 %19, %15, !dbg !4994
  %32 = icmp ugt i8* %30, %2, !dbg !4995
  %33 = and i1 %31, %32, !dbg !4995
  br i1 %33, label %17, label %34, !dbg !4996, !llvm.loop !4997

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !4999
  %36 = load i24, i24* %35, align 4, !dbg !4999
  %37 = and i24 %36, 32, !dbg !4999
  %38 = icmp eq i24 %37, 0, !dbg !4999
  br i1 %38, label %44, label %39, !dbg !5001

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !5002

40:                                               ; preds = %39
  br label %41, !dbg !5004

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !5008
  store i24 %43, i24* %35, align 4, !dbg !5008
  br label %44, !dbg !5009

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !5009
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #9 !dbg !5010 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5016, metadata !DIExpression()), !dbg !5019
  call void @llvm.dbg.value(metadata i8* %1, metadata !5017, metadata !DIExpression()), !dbg !5019
  call void @llvm.dbg.value(metadata i32 %2, metadata !5018, metadata !DIExpression()), !dbg !5019
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5020
  %5 = load i24, i24* %4, align 4, !dbg !5020
  %6 = lshr i24 %5, 11, !dbg !5020
  %7 = and i24 %6, 15, !dbg !5020
  %8 = zext i24 %7 to i32, !dbg !5020
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !5021

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !5022
  store i32 %2, i32* %10, align 4, !dbg !5024
  br label %28, !dbg !5025

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !5026
  store i8 %12, i8* %1, align 1, !dbg !5027
  br label %28, !dbg !5028

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !5029
  %15 = bitcast i8* %1 to i16*, !dbg !5030
  store i16 %14, i16* %15, align 2, !dbg !5031
  br label %28, !dbg !5032

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !5033
  store i32 %2, i32* %17, align 4, !dbg !5034
  br label %28, !dbg !5035

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !5036
  %20 = bitcast i8* %1 to i64*, !dbg !5037
  store i64 %19, i64* %20, align 8, !dbg !5038
  br label %28, !dbg !5039

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !5040
  %23 = bitcast i8* %1 to i64*, !dbg !5041
  store i64 %22, i64* %23, align 8, !dbg !5042
  br label %28, !dbg !5043

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !5044
  store i32 %2, i32* %25, align 4, !dbg !5045
  br label %28, !dbg !5046

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !5047
  store i32 %2, i32* %27, align 4, !dbg !5048
  br label %28, !dbg !5049

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !5050
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #4 !dbg !5051 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5054, metadata !DIExpression()), !dbg !5055
  %2 = add i32 %0, -65, !dbg !5056
  %3 = icmp ult i32 %2, 26, !dbg !5057
  %4 = zext i1 %3 to i32, !dbg !5057
  ret i32 %4, !dbg !5058
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #4 !dbg !5059 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5063, metadata !DIExpression()), !dbg !5064
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !5065

2:                                                ; preds = %1
  br label %4, !dbg !5066

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !5068

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !5069
  ret i32 %5, !dbg !5070
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #13 !dbg !5071 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5073, metadata !DIExpression()), !dbg !5076
  call void @llvm.dbg.value(metadata i8* %1, metadata !5074, metadata !DIExpression()), !dbg !5076
  call void @llvm.dbg.value(metadata i8 1, metadata !5075, metadata !DIExpression()), !dbg !5076
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !5077

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !5075, metadata !DIExpression()), !dbg !5076
  call void @llvm.dbg.value(metadata i8* %5, metadata !5074, metadata !DIExpression()), !dbg !5076
  %6 = load i8, i8* %5, align 1, !dbg !5078
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !5080

7:                                                ; preds = %4
  br label %11, !dbg !5081

8:                                                ; preds = %4
  br label %11, !dbg !5083

9:                                                ; preds = %4
  br label %11, !dbg !5084

10:                                               ; preds = %4
  br label %11, !dbg !5085

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5086
  %14 = or i24 %13, %12, !dbg !5086
  store i24 %14, i24* %3, align 4, !dbg !5086
  call void @llvm.dbg.value(metadata i8 poison, metadata !5075, metadata !DIExpression()), !dbg !5076
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !5074, metadata !DIExpression()), !dbg !5076
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !5075, metadata !DIExpression()), !dbg !5076
  call void @llvm.dbg.value(metadata i8* %15, metadata !5074, metadata !DIExpression()), !dbg !5076
  %17 = load i24, i24* %3, align 4, !dbg !5087
  %18 = and i24 %17, 68, !dbg !5089
  %19 = icmp eq i24 %18, 68, !dbg !5089
  br i1 %19, label %20, label %22, !dbg !5089

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5090
  store i24 %21, i24* %3, align 4, !dbg !5090
  br label %22, !dbg !5092

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5093
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5094 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5096, metadata !DIExpression()), !dbg !5100
  call void @llvm.dbg.value(metadata i8* %1, metadata !5097, metadata !DIExpression()), !dbg !5100
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5101
  %5 = load i24, i24* %4, align 4, !dbg !5102
  %6 = or i24 %5, 128, !dbg !5102
  store i24 %6, i24* %4, align 4, !dbg !5102
  call void @llvm.dbg.value(metadata i8* %1, metadata !5097, metadata !DIExpression()), !dbg !5100
  %7 = load i8, i8* %1, align 1, !dbg !5103
  %8 = icmp eq i8 %7, 42, !dbg !5105
  br i1 %8, label %9, label %12, !dbg !5106

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5107
  store i24 %10, i24* %4, align 4, !dbg !5107
  call void @llvm.dbg.value(metadata i8* %1, metadata !5097, metadata !DIExpression()), !dbg !5100
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5109
  call void @llvm.dbg.value(metadata i8* %11, metadata !5097, metadata !DIExpression()), !dbg !5100
  store i8* %11, i8** %3, align 4, !dbg !5109
  br label %29, !dbg !5110

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5098, metadata !DIExpression()), !dbg !5100
  call void @llvm.dbg.value(metadata i8** %3, metadata !5097, metadata !DIExpression(DW_OP_deref)), !dbg !5100
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !5111
  call void @llvm.dbg.value(metadata i32 %13, metadata !5099, metadata !DIExpression()), !dbg !5100
  %14 = load i8*, i8** %3, align 4, !dbg !5112
  call void @llvm.dbg.value(metadata i8* %14, metadata !5097, metadata !DIExpression()), !dbg !5100
  %15 = icmp eq i8* %14, %1, !dbg !5114
  br i1 %15, label %29, label %16, !dbg !5115

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5116
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5118
  store i32 %13, i32* %18, align 4, !dbg !5119
  %19 = lshr i32 %13, 31, !dbg !5120
  %20 = lshr i24 %17, 1, !dbg !5121
  %21 = and i24 %20, 1, !dbg !5121
  %22 = zext i24 %21 to i32, !dbg !5121
  %23 = or i32 %19, %22, !dbg !5121
  %24 = trunc i32 %23 to i24, !dbg !5121
  %25 = shl nuw nsw i24 %24, 1, !dbg !5121
  %26 = and i24 %17, -131, !dbg !5121
  %27 = or i24 %26, 128, !dbg !5121
  %28 = or i24 %25, %27, !dbg !5121
  store i24 %28, i24* %4, align 4, !dbg !5121
  br label %29, !dbg !5122

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5100
  ret i8* %30, !dbg !5123
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5124 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5126, metadata !DIExpression()), !dbg !5129
  call void @llvm.dbg.value(metadata i8* %1, metadata !5127, metadata !DIExpression()), !dbg !5129
  %4 = load i8, i8* %1, align 1, !dbg !5130
  %5 = icmp eq i8 %4, 46, !dbg !5131
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5132
  %7 = load i24, i24* %6, align 4, !dbg !5133
  %8 = select i1 %5, i24 512, i24 0, !dbg !5133
  %9 = and i24 %7, -513, !dbg !5133
  %10 = or i24 %9, %8, !dbg !5133
  store i24 %10, i24* %6, align 4, !dbg !5133
  br i1 %5, label %11, label %32, !dbg !5134

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5127, metadata !DIExpression()), !dbg !5129
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5135
  call void @llvm.dbg.value(metadata i8* %12, metadata !5127, metadata !DIExpression()), !dbg !5129
  store i8* %12, i8** %3, align 4, !dbg !5135
  %13 = load i8, i8* %12, align 1, !dbg !5136
  %14 = icmp eq i8 %13, 42, !dbg !5138
  br i1 %14, label %15, label %18, !dbg !5139

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !5140
  store i24 %16, i24* %6, align 4, !dbg !5140
  call void @llvm.dbg.value(metadata i8* %12, metadata !5127, metadata !DIExpression()), !dbg !5129
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5142
  call void @llvm.dbg.value(metadata i8* %17, metadata !5127, metadata !DIExpression()), !dbg !5129
  store i8* %17, i8** %3, align 4, !dbg !5142
  br label %32, !dbg !5143

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5127, metadata !DIExpression(DW_OP_deref)), !dbg !5129
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !5144
  call void @llvm.dbg.value(metadata i32 %19, metadata !5128, metadata !DIExpression()), !dbg !5129
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5145
  store i32 %19, i32* %20, align 4, !dbg !5146
  %21 = lshr i32 %19, 31, !dbg !5147
  %22 = load i24, i24* %6, align 4, !dbg !5148
  %23 = lshr i24 %22, 1, !dbg !5148
  %24 = and i24 %23, 1, !dbg !5148
  %25 = zext i24 %24 to i32, !dbg !5148
  %26 = or i32 %21, %25, !dbg !5148
  %27 = trunc i32 %26 to i24, !dbg !5148
  %28 = shl nuw nsw i24 %27, 1, !dbg !5148
  %29 = and i24 %22, -3, !dbg !5148
  %30 = or i24 %28, %29, !dbg !5148
  store i24 %30, i24* %6, align 4, !dbg !5148
  %31 = load i8*, i8** %3, align 4, !dbg !5149
  call void @llvm.dbg.value(metadata i8* %31, metadata !5127, metadata !DIExpression()), !dbg !5129
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5129
  ret i8* %33, !dbg !5150
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !5151 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5153, metadata !DIExpression()), !dbg !5155
  call void @llvm.dbg.value(metadata i8* %1, metadata !5154, metadata !DIExpression()), !dbg !5155
  %3 = load i8, i8* %1, align 1, !dbg !5156
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !5157

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5158
  call void @llvm.dbg.value(metadata i8* %5, metadata !5154, metadata !DIExpression()), !dbg !5155
  %6 = load i8, i8* %5, align 1, !dbg !5161
  %7 = icmp eq i8 %6, 104, !dbg !5162
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5163
  %9 = load i24, i24* %8, align 4, !dbg !5163
  %10 = and i24 %9, -30721, !dbg !5163
  br i1 %7, label %11, label %14, !dbg !5164

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !5165
  store i24 %12, i24* %8, align 4, !dbg !5165
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5167
  call void @llvm.dbg.value(metadata i8* %13, metadata !5154, metadata !DIExpression()), !dbg !5155
  br label %56, !dbg !5168

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !5169
  store i24 %15, i24* %8, align 4, !dbg !5169
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5171
  call void @llvm.dbg.value(metadata i8* %17, metadata !5154, metadata !DIExpression()), !dbg !5155
  %18 = load i8, i8* %17, align 1, !dbg !5173
  %19 = icmp eq i8 %18, 108, !dbg !5174
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !5175
  %21 = load i24, i24* %20, align 4, !dbg !5175
  %22 = and i24 %21, -30721, !dbg !5175
  br i1 %19, label %23, label %26, !dbg !5176

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !5177
  store i24 %24, i24* %20, align 4, !dbg !5177
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5179
  call void @llvm.dbg.value(metadata i8* %25, metadata !5154, metadata !DIExpression()), !dbg !5155
  br label %56, !dbg !5180

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !5181
  store i24 %27, i24* %20, align 4, !dbg !5181
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !5183
  %30 = load i24, i24* %29, align 4, !dbg !5184
  %31 = and i24 %30, -30721, !dbg !5184
  %32 = or i24 %31, 10240, !dbg !5184
  store i24 %32, i24* %29, align 4, !dbg !5184
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5185
  call void @llvm.dbg.value(metadata i8* %33, metadata !5154, metadata !DIExpression()), !dbg !5155
  br label %56, !dbg !5186

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !5187
  %36 = load i24, i24* %35, align 4, !dbg !5188
  %37 = and i24 %36, -30721, !dbg !5188
  %38 = or i24 %37, 12288, !dbg !5188
  store i24 %38, i24* %35, align 4, !dbg !5188
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5189
  call void @llvm.dbg.value(metadata i8* %39, metadata !5154, metadata !DIExpression()), !dbg !5155
  br label %56, !dbg !5190

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !5191
  %42 = load i24, i24* %41, align 4, !dbg !5192
  %43 = and i24 %42, -30721, !dbg !5192
  %44 = or i24 %43, 14336, !dbg !5192
  store i24 %44, i24* %41, align 4, !dbg !5192
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5193
  call void @llvm.dbg.value(metadata i8* %45, metadata !5154, metadata !DIExpression()), !dbg !5155
  br label %56, !dbg !5194

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !5195
  %48 = load i24, i24* %47, align 4, !dbg !5196
  %49 = and i24 %48, -30723, !dbg !5196
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5197
  call void @llvm.dbg.value(metadata i8* %50, metadata !5154, metadata !DIExpression()), !dbg !5155
  %51 = or i24 %49, 16386, !dbg !5198
  store i24 %51, i24* %47, align 4, !dbg !5198
  br label %56, !dbg !5199

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !5200
  %54 = load i24, i24* %53, align 4, !dbg !5201
  %55 = and i24 %54, -30721, !dbg !5201
  store i24 %55, i24* %53, align 4, !dbg !5201
  br label %56, !dbg !5202

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5154, metadata !DIExpression()), !dbg !5155
  ret i8* %57, !dbg !5203
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !5204 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5206, metadata !DIExpression()), !dbg !5211
  call void @llvm.dbg.value(metadata i8* %1, metadata !5207, metadata !DIExpression()), !dbg !5211
  call void @llvm.dbg.value(metadata i8 0, metadata !5208, metadata !DIExpression()), !dbg !5211
  call void @llvm.dbg.value(metadata i8* %1, metadata !5207, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5211
  %3 = load i8, i8* %1, align 1, !dbg !5212
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5213
  store i8 %3, i8* %4, align 1, !dbg !5214
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !5215

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !5216

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5217
  %9 = load i24, i24* %8, align 4, !dbg !5217
  %10 = and i24 %9, -458753, !dbg !5217
  %11 = or i24 %10, %7, !dbg !5217
  call void @llvm.dbg.label(metadata !5209), !dbg !5218
  %12 = and i24 %9, 30720, !dbg !5219
  %13 = icmp eq i24 %12, 16384, !dbg !5219
  %14 = zext i1 %13 to i24, !dbg !5221
  %15 = or i24 %11, %14, !dbg !5221
  %16 = icmp eq i8 %3, 99, !dbg !5222
  br i1 %16, label %17, label %43, !dbg !5224

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !5225
  %19 = icmp ne i24 %18, 0, !dbg !5225
  call void @llvm.dbg.value(metadata i1 %19, metadata !5208, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5211
  br label %43, !dbg !5227

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !5228
  %22 = load i24, i24* %21, align 4, !dbg !5229
  %23 = and i24 %22, -458753, !dbg !5229
  %24 = or i24 %23, 262144, !dbg !5229
  call void @llvm.dbg.value(metadata i8 1, metadata !5208, metadata !DIExpression()), !dbg !5211
  br label %43, !dbg !5230

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !5233
  %27 = load i24, i24* %26, align 4, !dbg !5234
  %28 = and i24 %27, -458753, !dbg !5234
  %29 = or i24 %28, 196608, !dbg !5234
  %30 = and i24 %27, 30720, !dbg !5235
  %31 = icmp eq i24 %30, 16384, !dbg !5235
  br label %43, !dbg !5237

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !5238
  %34 = load i24, i24* %33, align 4, !dbg !5239
  %35 = and i24 %34, -458753, !dbg !5239
  %36 = or i24 %35, 196608, !dbg !5239
  %37 = and i24 %34, 30720, !dbg !5240
  %38 = icmp ne i24 %37, 0, !dbg !5240
  br label %43, !dbg !5242

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !5243
  %41 = load i24, i24* %40, align 4, !dbg !5244
  %42 = or i24 %41, 1, !dbg !5244
  br label %43, !dbg !5245

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !5246
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !5247
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5248
  call void @llvm.dbg.value(metadata i8* %48, metadata !5207, metadata !DIExpression()), !dbg !5211
  call void @llvm.dbg.value(metadata i8 poison, metadata !5208, metadata !DIExpression()), !dbg !5211
  %49 = lshr i24 %44, 1, !dbg !5246
  %50 = and i24 %49, 1, !dbg !5246
  %51 = zext i24 %50 to i32, !dbg !5246
  %52 = or i32 %51, %47, !dbg !5246
  %53 = trunc i32 %52 to i24, !dbg !5246
  %54 = shl nuw nsw i24 %53, 1, !dbg !5246
  %55 = and i24 %44, -3, !dbg !5246
  %56 = or i24 %54, %55, !dbg !5246
  store i24 %56, i24* %46, align 4, !dbg !5246
  ret i8* %48, !dbg !5249
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #13 !dbg !5250 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !5254, metadata !DIExpression()), !dbg !5257
  %2 = load i8*, i8** %0, align 4, !dbg !5258
  call void @llvm.dbg.value(metadata i8* %2, metadata !5255, metadata !DIExpression()), !dbg !5257
  call void @llvm.dbg.value(metadata i32 0, metadata !5256, metadata !DIExpression()), !dbg !5257
  %3 = load i8, i8* %2, align 1, !dbg !5259
  %4 = zext i8 %3 to i32, !dbg !5260
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #24, !dbg !5261
  %6 = icmp eq i32 %5, 0, !dbg !5262
  br i1 %6, label %19, label %7, !dbg !5262

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5256, metadata !DIExpression()), !dbg !5257
  call void @llvm.dbg.value(metadata i8* %10, metadata !5255, metadata !DIExpression()), !dbg !5257
  %11 = mul i32 %9, 10, !dbg !5263
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5265
  call void @llvm.dbg.value(metadata i8* %12, metadata !5255, metadata !DIExpression()), !dbg !5257
  %13 = add i32 %11, -48, !dbg !5266
  %14 = add i32 %13, %8, !dbg !5267
  call void @llvm.dbg.value(metadata i32 %14, metadata !5256, metadata !DIExpression()), !dbg !5257
  %15 = load i8, i8* %12, align 1, !dbg !5259
  %16 = zext i8 %15 to i32, !dbg !5260
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #24, !dbg !5261
  %18 = icmp eq i32 %17, 0, !dbg !5262
  br i1 %18, label %19, label %7, !dbg !5262, !llvm.loop !5268

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !5257
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !5257
  store i8* %20, i8** %0, align 4, !dbg !5270
  ret i32 %21, !dbg !5271
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #4 !dbg !5272 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5274, metadata !DIExpression()), !dbg !5275
  %2 = add i32 %0, -48, !dbg !5276
  %3 = icmp ult i32 %2, 10, !dbg !5277
  %4 = zext i1 %3 to i32, !dbg !5277
  ret i32 %4, !dbg !5278
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @assert_post_action(i8* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !5279 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5284, metadata !DIExpression()), !dbg !5286
  call void @llvm.dbg.value(metadata i32 %1, metadata !5285, metadata !DIExpression()), !dbg !5286
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #23, !dbg !5287, !srcloc !5289
  ret void, !dbg !5290
}

; Function Attrs: noinline nounwind optsize
define dso_local void @assert_print(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5291 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5293, metadata !DIExpression()), !dbg !5301
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !5302
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5302
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !5294, metadata !DIExpression()), !dbg !5303
  call void @llvm.va_start(i8* nonnull %3), !dbg !5304
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !5305
  %5 = load i32, i32* %4, align 4, !dbg !5305
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !5305
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !5305
  call void @llvm.va_end(i8* nonnull %3), !dbg !5306
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5307
  ret void, !dbg !5307
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !5308 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #23, !dbg !5310, !srcloc !5311
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #23, !dbg !5312, !srcloc !5313
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #23, !dbg !5314, !srcloc !5315
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #23, !dbg !5316, !srcloc !5317
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #23, !dbg !5318, !srcloc !5319
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,97\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #23, !dbg !5320, !srcloc !5321
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #23, !dbg !5322, !srcloc !5323
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #23, !dbg !5324, !srcloc !5325
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,512\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #23, !dbg !5326, !srcloc !5327
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #23, !dbg !5328, !srcloc !5329
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #23, !dbg !5330, !srcloc !5331
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #23, !dbg !5332, !srcloc !5333
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #23, !dbg !5334, !srcloc !5335
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #23, !dbg !5336, !srcloc !5337
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #23, !dbg !5338, !srcloc !5339
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #23, !dbg !5340, !srcloc !5341
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #23, !dbg !5342, !srcloc !5343
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DOMAIN_NAME\0A\09.equ\09CONFIG_LOG_DOMAIN_NAME,1\0A\09.type\09CONFIG_LOG_DOMAIN_NAME,%object", ""() #23, !dbg !5344, !srcloc !5345
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #23, !dbg !5346, !srcloc !5347
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #23, !dbg !5348, !srcloc !5349
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #23, !dbg !5350, !srcloc !5351
  tail call void asm sideeffect ".globl\09CONFIG_TEST_EXTRA_STACK_SIZE\0A\09.equ\09CONFIG_TEST_EXTRA_STACK_SIZE,0\0A\09.type\09CONFIG_TEST_EXTRA_STACK_SIZE,%object", ""() #23, !dbg !5352, !srcloc !5353
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #23, !dbg !5354, !srcloc !5355
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #23, !dbg !5356, !srcloc !5357
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #23, !dbg !5358, !srcloc !5359
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #23, !dbg !5360, !srcloc !5361
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #23, !dbg !5362, !srcloc !5363
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #23, !dbg !5364, !srcloc !5365
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #23, !dbg !5366, !srcloc !5367
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #23, !dbg !5368, !srcloc !5369
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #23, !dbg !5370, !srcloc !5371
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,%object", ""() #23, !dbg !5372, !srcloc !5373
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #23, !dbg !5374, !srcloc !5375
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #23, !dbg !5376, !srcloc !5377
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #23, !dbg !5378, !srcloc !5379
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LIS3MDL_MAGN_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LIS3MDL_MAGN_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LIS3MDL_MAGN_ENABLED,%object", ""() #23, !dbg !5380, !srcloc !5381
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,%object", ""() #23, !dbg !5382, !srcloc !5383
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,%object", ""() #23, !dbg !5384, !srcloc !5385
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,%object", ""() #23, !dbg !5386, !srcloc !5387
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #23, !dbg !5388, !srcloc !5389
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !5390, !srcloc !5391
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #23, !dbg !5392, !srcloc !5393
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #23, !dbg !5394, !srcloc !5395
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #23, !dbg !5396, !srcloc !5397
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,%object", ""() #23, !dbg !5398, !srcloc !5399
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #23, !dbg !5400, !srcloc !5401
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #23, !dbg !5402, !srcloc !5403
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED,%object", ""() #23, !dbg !5404, !srcloc !5405
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #23, !dbg !5406, !srcloc !5407
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #23, !dbg !5408, !srcloc !5409
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #23, !dbg !5410, !srcloc !5411
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED,%object", ""() #23, !dbg !5412, !srcloc !5413
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #23, !dbg !5414, !srcloc !5415
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #23, !dbg !5416, !srcloc !5417
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !5418, !srcloc !5419
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #23, !dbg !5420, !srcloc !5421
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #23, !dbg !5422, !srcloc !5423
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #23, !dbg !5424, !srcloc !5425
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #23, !dbg !5426, !srcloc !5427
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #23, !dbg !5428, !srcloc !5429
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #23, !dbg !5430, !srcloc !5431
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,%object", ""() #23, !dbg !5432, !srcloc !5433
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,3\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,%object", ""() #23, !dbg !5434, !srcloc !5435
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #23, !dbg !5436, !srcloc !5437
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #23, !dbg !5438, !srcloc !5439
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #23, !dbg !5440, !srcloc !5441
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #23, !dbg !5442, !srcloc !5443
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #23, !dbg !5444, !srcloc !5445
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #23, !dbg !5446, !srcloc !5447
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #23, !dbg !5448, !srcloc !5449
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #23, !dbg !5450, !srcloc !5451
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #23, !dbg !5452, !srcloc !5453
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #23, !dbg !5454, !srcloc !5455
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #23, !dbg !5456, !srcloc !5457
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #23, !dbg !5458, !srcloc !5459
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #23, !dbg !5460, !srcloc !5461
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #23, !dbg !5462, !srcloc !5463
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #23, !dbg !5464, !srcloc !5465
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #23, !dbg !5466, !srcloc !5467
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #23, !dbg !5468, !srcloc !5469
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #23, !dbg !5470, !srcloc !5471
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #23, !dbg !5472, !srcloc !5473
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #23, !dbg !5474, !srcloc !5475
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #23, !dbg !5476, !srcloc !5477
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #23, !dbg !5478, !srcloc !5479
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #23, !dbg !5480, !srcloc !5481
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #23, !dbg !5482, !srcloc !5483
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #23, !dbg !5484, !srcloc !5485
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #23, !dbg !5486, !srcloc !5487
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #23, !dbg !5488, !srcloc !5489
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #23, !dbg !5490, !srcloc !5491
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #23, !dbg !5492, !srcloc !5493
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_STM32_SENSOR_MEZ\0A\09.equ\09CONFIG_BOARD_96B_STM32_SENSOR_MEZ,1\0A\09.type\09CONFIG_BOARD_96B_STM32_SENSOR_MEZ,%object", ""() #23, !dbg !5494, !srcloc !5495
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #23, !dbg !5496, !srcloc !5497
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #23, !dbg !5498, !srcloc !5499
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #23, !dbg !5500, !srcloc !5501
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #23, !dbg !5502, !srcloc !5503
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #23, !dbg !5504, !srcloc !5505
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F446XX\0A\09.equ\09CONFIG_SOC_STM32F446XX,1\0A\09.type\09CONFIG_SOC_STM32F446XX,%object", ""() #23, !dbg !5506, !srcloc !5507
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_SOC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_SOC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5508, !srcloc !5509
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL\0A\09.equ\09CONFIG_SOC_LOG_LEVEL,3\0A\09.type\09CONFIG_SOC_LOG_LEVEL,%object", ""() #23, !dbg !5510, !srcloc !5511
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #23, !dbg !5512, !srcloc !5513
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #23, !dbg !5514, !srcloc !5515
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #23, !dbg !5516, !srcloc !5517
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #23, !dbg !5518, !srcloc !5519
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #23, !dbg !5520, !srcloc !5521
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #23, !dbg !5522, !srcloc !5523
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #23, !dbg !5524, !srcloc !5525
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #23, !dbg !5526, !srcloc !5527
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #23, !dbg !5528, !srcloc !5529
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #23, !dbg !5530, !srcloc !5531
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #23, !dbg !5532, !srcloc !5533
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #23, !dbg !5534, !srcloc !5535
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #23, !dbg !5536, !srcloc !5537
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #23, !dbg !5538, !srcloc !5539
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #23, !dbg !5540, !srcloc !5541
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #23, !dbg !5542, !srcloc !5543
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #23, !dbg !5544, !srcloc !5545
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #23, !dbg !5546, !srcloc !5547
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #23, !dbg !5548, !srcloc !5549
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #23, !dbg !5550, !srcloc !5551
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #23, !dbg !5552, !srcloc !5553
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #23, !dbg !5554, !srcloc !5555
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #23, !dbg !5556, !srcloc !5557
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #23, !dbg !5558, !srcloc !5559
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #23, !dbg !5560, !srcloc !5561
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #23, !dbg !5562, !srcloc !5563
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #23, !dbg !5564, !srcloc !5565
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #23, !dbg !5566, !srcloc !5567
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARCH_LOG_LEVEL_INF,%object", ""() #23, !dbg !5568, !srcloc !5569
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL,3\0A\09.type\09CONFIG_ARCH_LOG_LEVEL,%object", ""() #23, !dbg !5570, !srcloc !5571
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #23, !dbg !5572, !srcloc !5573
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,128\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #23, !dbg !5574, !srcloc !5575
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #23, !dbg !5576, !srcloc !5577
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #23, !dbg !5578, !srcloc !5579
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #23, !dbg !5580, !srcloc !5581
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #23, !dbg !5582, !srcloc !5583
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #23, !dbg !5584, !srcloc !5585
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #23, !dbg !5586, !srcloc !5587
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #23, !dbg !5588, !srcloc !5589
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #23, !dbg !5590, !srcloc !5591
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #23, !dbg !5592, !srcloc !5593
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #23, !dbg !5594, !srcloc !5595
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #23, !dbg !5596, !srcloc !5597
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #23, !dbg !5598, !srcloc !5599
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #23, !dbg !5600, !srcloc !5601
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #23, !dbg !5602, !srcloc !5603
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #23, !dbg !5604, !srcloc !5605
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #23, !dbg !5606, !srcloc !5607
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #23, !dbg !5608, !srcloc !5609
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #23, !dbg !5610, !srcloc !5611
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #23, !dbg !5612, !srcloc !5613
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #23, !dbg !5614, !srcloc !5615
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #23, !dbg !5616, !srcloc !5617
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #23, !dbg !5618, !srcloc !5619
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5620, !srcloc !5621
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #23, !dbg !5622, !srcloc !5623
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #23, !dbg !5624, !srcloc !5625
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #23, !dbg !5626, !srcloc !5627
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #23, !dbg !5628, !srcloc !5629
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #23, !dbg !5630, !srcloc !5631
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #23, !dbg !5632, !srcloc !5633
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL_INF\0A\09.equ\09CONFIG_MPU_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_MPU_LOG_LEVEL_INF,%object", ""() #23, !dbg !5634, !srcloc !5635
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL\0A\09.equ\09CONFIG_MPU_LOG_LEVEL,3\0A\09.type\09CONFIG_MPU_LOG_LEVEL,%object", ""() #23, !dbg !5636, !srcloc !5637
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #23, !dbg !5638, !srcloc !5639
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #23, !dbg !5640, !srcloc !5641
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #23, !dbg !5642, !srcloc !5643
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5644, !srcloc !5645
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL,3\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL,%object", ""() #23, !dbg !5646, !srcloc !5647
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #23, !dbg !5648, !srcloc !5649
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #23, !dbg !5650, !srcloc !5651
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #23, !dbg !5652, !srcloc !5653
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #23, !dbg !5654, !srcloc !5655
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #23, !dbg !5656, !srcloc !5657
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #23, !dbg !5658, !srcloc !5659
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #23, !dbg !5660, !srcloc !5661
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #23, !dbg !5662, !srcloc !5663
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,4096\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #23, !dbg !5664, !srcloc !5665
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #23, !dbg !5666, !srcloc !5667
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #23, !dbg !5668, !srcloc !5669
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #23, !dbg !5670, !srcloc !5671
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #23, !dbg !5672, !srcloc !5673
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #23, !dbg !5674, !srcloc !5675
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #23, !dbg !5676, !srcloc !5677
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #23, !dbg !5678, !srcloc !5679
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_NAME\0A\09.equ\09CONFIG_THREAD_NAME,1\0A\09.type\09CONFIG_THREAD_NAME,%object", ""() #23, !dbg !5680, !srcloc !5681
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_MAX_NAME_LEN\0A\09.equ\09CONFIG_THREAD_MAX_NAME_LEN,32\0A\09.type\09CONFIG_THREAD_MAX_NAME_LEN,%object", ""() #23, !dbg !5682, !srcloc !5683
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #23, !dbg !5684, !srcloc !5685
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #23, !dbg !5686, !srcloc !5687
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #23, !dbg !5688, !srcloc !5689
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #23, !dbg !5690, !srcloc !5691
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #23, !dbg !5692, !srcloc !5693
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #23, !dbg !5694, !srcloc !5695
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #23, !dbg !5696, !srcloc !5697
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #23, !dbg !5698, !srcloc !5699
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #23, !dbg !5700, !srcloc !5701
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #23, !dbg !5702, !srcloc !5703
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #23, !dbg !5704, !srcloc !5705
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #23, !dbg !5706, !srcloc !5707
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #23, !dbg !5708, !srcloc !5709
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #23, !dbg !5710, !srcloc !5711
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #23, !dbg !5712, !srcloc !5713
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #23, !dbg !5714, !srcloc !5715
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #23, !dbg !5716, !srcloc !5717
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #23, !dbg !5718, !srcloc !5719
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #23, !dbg !5720, !srcloc !5721
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #23, !dbg !5722, !srcloc !5723
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5724, !srcloc !5725
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #23, !dbg !5726, !srcloc !5727
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #23, !dbg !5728, !srcloc !5729
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #23, !dbg !5730, !srcloc !5731
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #23, !dbg !5732, !srcloc !5733
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #23, !dbg !5734, !srcloc !5735
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,%object", ""() #23, !dbg !5736, !srcloc !5737
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL,%object", ""() #23, !dbg !5738, !srcloc !5739
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #23, !dbg !5740, !srcloc !5741
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #23, !dbg !5742, !srcloc !5743
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #23, !dbg !5744, !srcloc !5745
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_ASYNC\0A\09.equ\09CONFIG_SERIAL_SUPPORT_ASYNC,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_ASYNC,%object", ""() #23, !dbg !5746, !srcloc !5747
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #23, !dbg !5748, !srcloc !5749
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_LOG_LEVEL_INF,%object", ""() #23, !dbg !5750, !srcloc !5751
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL\0A\09.equ\09CONFIG_UART_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_LOG_LEVEL,%object", ""() #23, !dbg !5752, !srcloc !5753
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #23, !dbg !5754, !srcloc !5755
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #23, !dbg !5756, !srcloc !5757
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #23, !dbg !5758, !srcloc !5759
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_INTC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_INTC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5760, !srcloc !5761
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL\0A\09.equ\09CONFIG_INTC_LOG_LEVEL,3\0A\09.type\09CONFIG_INTC_LOG_LEVEL,%object", ""() #23, !dbg !5762, !srcloc !5763
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #23, !dbg !5764, !srcloc !5765
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #23, !dbg !5766, !srcloc !5767
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #23, !dbg !5768, !srcloc !5769
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #23, !dbg !5770, !srcloc !5771
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #23, !dbg !5772, !srcloc !5773
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #23, !dbg !5774, !srcloc !5775
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #23, !dbg !5776, !srcloc !5777
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #23, !dbg !5778, !srcloc !5779
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #23, !dbg !5780, !srcloc !5781
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #23, !dbg !5782, !srcloc !5783
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #23, !dbg !5784, !srcloc !5785
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #23, !dbg !5786, !srcloc !5787
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #23, !dbg !5788, !srcloc !5789
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #23, !dbg !5790, !srcloc !5791
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #23, !dbg !5792, !srcloc !5793
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #23, !dbg !5794, !srcloc !5795
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_GPIO_LOG_LEVEL_INF,%object", ""() #23, !dbg !5796, !srcloc !5797
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL,3\0A\09.type\09CONFIG_GPIO_LOG_LEVEL,%object", ""() #23, !dbg !5798, !srcloc !5799
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #23, !dbg !5800, !srcloc !5801
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL_INF\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL_INF,%object", ""() #23, !dbg !5802, !srcloc !5803
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL,3\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL,%object", ""() #23, !dbg !5804, !srcloc !5805
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5806, !srcloc !5807
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,3\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,%object", ""() #23, !dbg !5808, !srcloc !5809
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,16000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #23, !dbg !5810, !srcloc !5811
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #23, !dbg !5812, !srcloc !5813
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #23, !dbg !5814, !srcloc !5815
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5816, !srcloc !5817
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL,3\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL,%object", ""() #23, !dbg !5818, !srcloc !5819
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #23, !dbg !5820, !srcloc !5821
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #23, !dbg !5822, !srcloc !5823
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_USBC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_USBC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5824, !srcloc !5825
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL\0A\09.equ\09CONFIG_USBC_LOG_LEVEL,3\0A\09.type\09CONFIG_USBC_LOG_LEVEL,%object", ""() #23, !dbg !5826, !srcloc !5827
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #23, !dbg !5828, !srcloc !5829
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #23, !dbg !5830, !srcloc !5831
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #23, !dbg !5832, !srcloc !5833
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #23, !dbg !5834, !srcloc !5835
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #23, !dbg !5836, !srcloc !5837
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #23, !dbg !5838, !srcloc !5839
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #23, !dbg !5840, !srcloc !5841
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #23, !dbg !5842, !srcloc !5843
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #23, !dbg !5844, !srcloc !5845
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #23, !dbg !5846, !srcloc !5847
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #23, !dbg !5848, !srcloc !5849
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #23, !dbg !5850, !srcloc !5851
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #23, !dbg !5852, !srcloc !5853
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #23, !dbg !5854, !srcloc !5855
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #23, !dbg !5856, !srcloc !5857
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #23, !dbg !5858, !srcloc !5859
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #23, !dbg !5860, !srcloc !5861
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,%object", ""() #23, !dbg !5862, !srcloc !5863
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,3\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,%object", ""() #23, !dbg !5864, !srcloc !5865
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #23, !dbg !5866, !srcloc !5867
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #23, !dbg !5868, !srcloc !5869
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #23, !dbg !5870, !srcloc !5871
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #23, !dbg !5872, !srcloc !5873
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #23, !dbg !5874, !srcloc !5875
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #23, !dbg !5876, !srcloc !5877
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT\0A\09.equ\09CONFIG_ASSERT,1\0A\09.type\09CONFIG_ASSERT,%object", ""() #23, !dbg !5878, !srcloc !5879
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_LEVEL\0A\09.equ\09CONFIG_ASSERT_LEVEL,2\0A\09.type\09CONFIG_ASSERT_LEVEL,%object", ""() #23, !dbg !5880, !srcloc !5881
  tail call void asm sideeffect ".globl\09CONFIG_SPIN_VALIDATE\0A\09.equ\09CONFIG_SPIN_VALIDATE,1\0A\09.type\09CONFIG_SPIN_VALIDATE,%object", ""() #23, !dbg !5882, !srcloc !5883
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #23, !dbg !5884, !srcloc !5885
  tail call void asm sideeffect ".globl\09CONFIG_LOG\0A\09.equ\09CONFIG_LOG,1\0A\09.type\09CONFIG_LOG,%object", ""() #23, !dbg !5886, !srcloc !5887
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MODE_MINIMAL\0A\09.equ\09CONFIG_LOG_MODE_MINIMAL,1\0A\09.type\09CONFIG_LOG_MODE_MINIMAL,%object", ""() #23, !dbg !5888, !srcloc !5889
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_MINIMAL\0A\09.equ\09CONFIG_LOG_DEFAULT_MINIMAL,1\0A\09.type\09CONFIG_LOG_DEFAULT_MINIMAL,%object", ""() #23, !dbg !5890, !srcloc !5891
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_LEVEL\0A\09.equ\09CONFIG_LOG_DEFAULT_LEVEL,3\0A\09.type\09CONFIG_LOG_DEFAULT_LEVEL,%object", ""() #23, !dbg !5892, !srcloc !5893
  tail call void asm sideeffect ".globl\09CONFIG_LOG_OVERRIDE_LEVEL\0A\09.equ\09CONFIG_LOG_OVERRIDE_LEVEL,0\0A\09.type\09CONFIG_LOG_OVERRIDE_LEVEL,%object", ""() #23, !dbg !5894, !srcloc !5895
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MAX_LEVEL\0A\09.equ\09CONFIG_LOG_MAX_LEVEL,4\0A\09.type\09CONFIG_LOG_MAX_LEVEL,%object", ""() #23, !dbg !5896, !srcloc !5897
  tail call void asm sideeffect ".globl\09CONFIG_LOG_TEST_CLEAR_MESSAGE_SPACE\0A\09.equ\09CONFIG_LOG_TEST_CLEAR_MESSAGE_SPACE,1\0A\09.type\09CONFIG_LOG_TEST_CLEAR_MESSAGE_SPACE,%object", ""() #23, !dbg !5898, !srcloc !5899
  tail call void asm sideeffect ".globl\09CONFIG_LOG_USE_VLA\0A\09.equ\09CONFIG_LOG_USE_VLA,1\0A\09.type\09CONFIG_LOG_USE_VLA,%object", ""() #23, !dbg !5900, !srcloc !5901
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST\0A\09.equ\09CONFIG_ZTEST,1\0A\09.type\09CONFIG_ZTEST,%object", ""() #23, !dbg !5902, !srcloc !5903
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_NEW_API\0A\09.equ\09CONFIG_ZTEST_NEW_API,1\0A\09.type\09CONFIG_ZTEST_NEW_API,%object", ""() #23, !dbg !5904, !srcloc !5905
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_STACK_SIZE\0A\09.equ\09CONFIG_ZTEST_STACK_SIZE,1024\0A\09.type\09CONFIG_ZTEST_STACK_SIZE,%object", ""() #23, !dbg !5906, !srcloc !5907
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_TEST_DELAY_MS\0A\09.equ\09CONFIG_ZTEST_TEST_DELAY_MS,0\0A\09.type\09CONFIG_ZTEST_TEST_DELAY_MS,%object", ""() #23, !dbg !5908, !srcloc !5909
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_CPU_HOLD_TIME_MS\0A\09.equ\09CONFIG_ZTEST_CPU_HOLD_TIME_MS,3000\0A\09.type\09CONFIG_ZTEST_CPU_HOLD_TIME_MS,%object", ""() #23, !dbg !5910, !srcloc !5911
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ZTEST_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ZTEST_ASSERT_VERBOSE,%object", ""() #23, !dbg !5912, !srcloc !5913
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_THREAD_PRIORITY\0A\09.equ\09CONFIG_ZTEST_THREAD_PRIORITY,-1\0A\09.type\09CONFIG_ZTEST_THREAD_PRIORITY,%object", ""() #23, !dbg !5914, !srcloc !5915
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_VERIFY_RUN_ALL\0A\09.equ\09CONFIG_ZTEST_VERIFY_RUN_ALL,1\0A\09.type\09CONFIG_ZTEST_VERIFY_RUN_ALL,%object", ""() #23, !dbg !5916, !srcloc !5917
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_VERBOSE_OUTPUT\0A\09.equ\09CONFIG_ZTEST_VERBOSE_OUTPUT,1\0A\09.type\09CONFIG_ZTEST_VERBOSE_OUTPUT,%object", ""() #23, !dbg !5918, !srcloc !5919
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_VERBOSE_SUMMARY\0A\09.equ\09CONFIG_ZTEST_VERBOSE_SUMMARY,1\0A\09.type\09CONFIG_ZTEST_VERBOSE_SUMMARY,%object", ""() #23, !dbg !5920, !srcloc !5921
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_FAIL_ON_ASSUME\0A\09.equ\09CONFIG_ZTEST_FAIL_ON_ASSUME,1\0A\09.type\09CONFIG_ZTEST_FAIL_ON_ASSUME,%object", ""() #23, !dbg !5922, !srcloc !5923
  tail call void asm sideeffect ".globl\09CONFIG_TEST_LOGGING_FLUSH_AFTER_TEST\0A\09.equ\09CONFIG_TEST_LOGGING_FLUSH_AFTER_TEST,1\0A\09.type\09CONFIG_TEST_LOGGING_FLUSH_AFTER_TEST,%object", ""() #23, !dbg !5924, !srcloc !5925
  tail call void asm sideeffect ".globl\09CONFIG_TEST\0A\09.equ\09CONFIG_TEST,1\0A\09.type\09CONFIG_TEST,%object", ""() #23, !dbg !5926, !srcloc !5927
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #23, !dbg !5928, !srcloc !5929
  tail call void asm sideeffect ".globl\09CONFIG_TEST_LOGGING_DEFAULTS\0A\09.equ\09CONFIG_TEST_LOGGING_DEFAULTS,1\0A\09.type\09CONFIG_TEST_LOGGING_DEFAULTS,%object", ""() #23, !dbg !5930, !srcloc !5931
  tail call void asm sideeffect ".globl\09CONFIG_TEST_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_TEST_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_TEST_HW_STACK_PROTECTION,%object", ""() #23, !dbg !5932, !srcloc !5933
  tail call void asm sideeffect ".globl\09CONFIG_TEST_ARM_CORTEX_M\0A\09.equ\09CONFIG_TEST_ARM_CORTEX_M,1\0A\09.type\09CONFIG_TEST_ARM_CORTEX_M,%object", ""() #23, !dbg !5934, !srcloc !5935
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #23, !dbg !5936, !srcloc !5937
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5938, !srcloc !5939
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #23, !dbg !5940, !srcloc !5941
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !5942, !srcloc !5943
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !5944, !srcloc !5945
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #23, !dbg !5946, !srcloc !5947
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #23, !dbg !5948, !srcloc !5949
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #23, !dbg !5950, !srcloc !5951
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #23, !dbg !5952, !srcloc !5953
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #23, !dbg !5954, !srcloc !5955
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #23, !dbg !5956, !srcloc !5957
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #23, !dbg !5958, !srcloc !5959
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #23, !dbg !5960, !srcloc !5961
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #23, !dbg !5962, !srcloc !5963
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #23, !dbg !5964, !srcloc !5965
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #23, !dbg !5966, !srcloc !5967
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #23, !dbg !5968, !srcloc !5969
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #23, !dbg !5970, !srcloc !5971
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #23, !dbg !5972, !srcloc !5973
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #23, !dbg !5974, !srcloc !5975
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #23, !dbg !5976, !srcloc !5977
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_SYMBOLS\0A\09.equ\09CONFIG_OUTPUT_SYMBOLS,1\0A\09.type\09CONFIG_OUTPUT_SYMBOLS,%object", ""() #23, !dbg !5978, !srcloc !5979
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #23, !dbg !5980, !srcloc !5981
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #23, !dbg !5982, !srcloc !5983
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #23, !dbg !5984, !srcloc !5985
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #23, !dbg !5986, !srcloc !5987
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #23, !dbg !5988, !srcloc !5989
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #23, !dbg !5990, !srcloc !5991
  ret void, !dbg !5992
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !5993 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5995, metadata !DIExpression()), !dbg !5997
  tail call fastcc void @LL_FLASH_EnableInstCache() #24, !dbg !5998
  tail call fastcc void @LL_FLASH_EnableDataCache() #24, !dbg !5999
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !6000, !srcloc !6009
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !6000
  call void @llvm.dbg.value(metadata i32 %3, metadata !6006, metadata !DIExpression()) #23, !dbg !6010
  call void @llvm.dbg.value(metadata i32 undef, metadata !6007, metadata !DIExpression()) #23, !dbg !6010
  call void @llvm.dbg.value(metadata i32 %3, metadata !5996, metadata !DIExpression()), !dbg !5997
  call void @llvm.dbg.value(metadata i32 %3, metadata !6011, metadata !DIExpression()) #23, !dbg !6016
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !6018, !srcloc !6019
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !6020
  ret i32 0, !dbg !6021
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #14 !dbg !6022 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6024
  %2 = or i32 %1, 512, !dbg !6024
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6024
  ret void, !dbg !6025
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #14 !dbg !6026 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6027
  %2 = or i32 %1, 1024, !dbg !6027
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6027
  ret void, !dbg !6028
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #4 !dbg !6029 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6031, metadata !DIExpression()), !dbg !6032
  ret i32 0, !dbg !6033
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !6034 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6037, metadata !DIExpression()), !dbg !6045
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !6046
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !6046
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !6038, metadata !DIExpression()), !dbg !6047
  call void @llvm.va_start(i8* nonnull %3), !dbg !6048
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !6049
  %5 = load i32, i32* %4, align 4, !dbg !6049
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !6049
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !6049
  call void @llvm.va_end(i8* nonnull %3), !dbg !6050
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !6051
  ret void, !dbg !6051
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !6052 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !6057, metadata !DIExpression()), !dbg !6058
  call void @llvm.dbg.value(metadata i8* %0, metadata !6056, metadata !DIExpression()), !dbg !6058
  tail call void @vprintk(i8* noundef %0, [1 x i32] %1) #25, !dbg !6059
  ret void, !dbg !6060
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_hexdump_print(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6061 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6065, metadata !DIExpression()), !dbg !6069
  call void @llvm.dbg.value(metadata i8* %1, metadata !6066, metadata !DIExpression()), !dbg !6069
  call void @llvm.dbg.value(metadata i32 %2, metadata !6067, metadata !DIExpression()), !dbg !6069
  call void @llvm.dbg.value(metadata i8* %1, metadata !6068, metadata !DIExpression()), !dbg !6069
  %4 = icmp eq i32 %2, 0, !dbg !6070
  br i1 %4, label %14, label %5, !dbg !6071

5:                                                ; preds = %3
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) #24, !dbg !6069
  %7 = zext i8 %6 to i32
  br label %8, !dbg !6071

8:                                                ; preds = %8, %5
  %9 = phi i8* [ %1, %5 ], [ %12, %8 ]
  %10 = phi i32 [ %2, %5 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !6068, metadata !DIExpression()), !dbg !6069
  call void @llvm.dbg.value(metadata i32 %10, metadata !6067, metadata !DIExpression()), !dbg !6069
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22, i32 0, i32 0), i32 noundef %7) #25, !dbg !6072
  tail call fastcc void @minimal_hexdump_line_print(i8* noundef %9, i32 noundef %10) #24, !dbg !6074
  %11 = add i32 %10, -8
  %12 = getelementptr inbounds i8, i8* %9, i32 8
  %13 = icmp ult i32 %10, 9, !dbg !6075
  call void @llvm.dbg.value(metadata i32 %11, metadata !6067, metadata !DIExpression()), !dbg !6069
  call void @llvm.dbg.value(metadata i8* %12, metadata !6068, metadata !DIExpression()), !dbg !6069
  br i1 %13, label %14, label %8, !dbg !6075, !llvm.loop !6076

14:                                               ; preds = %8, %3
  ret void, !dbg !6078
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) unnamed_addr #4 !dbg !6079 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6084, metadata !DIExpression()), !dbg !6085
  %2 = add i32 %0, -1, !dbg !6086
  %3 = icmp ult i32 %2, 4, !dbg !6086
  %4 = shl i32 %2, 3, !dbg !6086
  %5 = lshr i32 1145657157, %4, !dbg !6086
  %6 = trunc i32 %5 to i8, !dbg !6086
  %7 = select i1 %3, i8 %6, i8 63, !dbg !6086
  ret i8 %7, !dbg !6087
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @minimal_hexdump_line_print(i8* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !6088 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6092, metadata !DIExpression()), !dbg !6103
  call void @llvm.dbg.value(metadata i32 %1, metadata !6093, metadata !DIExpression()), !dbg !6103
  call void @llvm.dbg.value(metadata i32 0, metadata !6094, metadata !DIExpression()), !dbg !6104
  br label %4, !dbg !6105

3:                                                ; preds = %12
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.23, i32 0, i32 0)) #25, !dbg !6106
  call void @llvm.dbg.value(metadata i32 0, metadata !6096, metadata !DIExpression()), !dbg !6107
  br label %16, !dbg !6108

4:                                                ; preds = %2, %12
  %5 = phi i32 [ 0, %2 ], [ %13, %12 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !6094, metadata !DIExpression()), !dbg !6104
  %6 = icmp ult i32 %5, %1, !dbg !6109
  br i1 %6, label %7, label %11, !dbg !6113

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !6114
  %9 = load i8, i8* %8, align 1, !dbg !6114
  %10 = zext i8 %9 to i32, !dbg !6116
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.24, i32 0, i32 0), i32 noundef %10) #25, !dbg !6117
  br label %12, !dbg !6118

11:                                               ; preds = %4
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.25, i32 0, i32 0)) #25, !dbg !6119
  br label %12

12:                                               ; preds = %7, %11
  %13 = add nuw nsw i32 %5, 1, !dbg !6121
  call void @llvm.dbg.value(metadata i32 %13, metadata !6094, metadata !DIExpression()), !dbg !6104
  %14 = icmp eq i32 %13, 8, !dbg !6122
  br i1 %14, label %3, label %4, !dbg !6105, !llvm.loop !6123

15:                                               ; preds = %27
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.26, i32 0, i32 0)) #25, !dbg !6125
  ret void, !dbg !6126

16:                                               ; preds = %3, %27
  %17 = phi i32 [ 0, %3 ], [ %28, %27 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !6096, metadata !DIExpression()), !dbg !6107
  %18 = icmp ult i32 %17, %1, !dbg !6127
  br i1 %18, label %19, label %26, !dbg !6128

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %0, i32 %17, !dbg !6129
  %21 = load i8, i8* %20, align 1, !dbg !6129
  call void @llvm.dbg.value(metadata i8 %21, metadata !6098, metadata !DIExpression()), !dbg !6130
  %22 = zext i8 %21 to i32, !dbg !6131
  %23 = tail call fastcc i32 @isprint(i32 noundef %22) #24, !dbg !6132
  %24 = icmp eq i32 %23, 0, !dbg !6133
  %25 = select i1 %24, i32 46, i32 %22, !dbg !6132
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.27, i32 0, i32 0), i32 noundef %25) #25, !dbg !6134
  br label %27, !dbg !6135

26:                                               ; preds = %16
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.28, i32 0, i32 0)) #25, !dbg !6136
  br label %27

27:                                               ; preds = %19, %26
  %28 = add nuw nsw i32 %17, 1, !dbg !6138
  call void @llvm.dbg.value(metadata i32 %28, metadata !6096, metadata !DIExpression()), !dbg !6107
  %29 = icmp eq i32 %28, 8, !dbg !6139
  br i1 %29, label %15, label %16, !dbg !6108, !llvm.loop !6140
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #4 !dbg !6142 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6144, metadata !DIExpression()), !dbg !6145
  %2 = add i32 %0, -32, !dbg !6146
  %3 = icmp ult i32 %2, 95, !dbg !6146
  %4 = zext i1 %3 to i32, !dbg !6146
  ret i32 %4, !dbg !6147
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !6148 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6197, metadata !DIExpression()), !dbg !6199
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !6198, metadata !DIExpression()), !dbg !6199
  %3 = icmp eq %struct.__esf* %1, null, !dbg !6200
  br i1 %3, label %5, label %4, !dbg !6202

4:                                                ; preds = %2
  tail call fastcc void @esf_dump(%struct.__esf* noundef nonnull %1) #24, !dbg !6203
  br label %5, !dbg !6205

5:                                                ; preds = %4, %2
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #25, !dbg !6206
  ret void, !dbg !6207
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @esf_dump(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !6208 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6212, metadata !DIExpression()), !dbg !6213
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6214
  %3 = load i32, i32* %2, align 4, !dbg !6214
  %4 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 1, i32 0, !dbg !6214
  %5 = load i32, i32* %4, align 4, !dbg !6214
  %6 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 2, i32 0, !dbg !6214
  %7 = load i32, i32* %6, align 4, !dbg !6214
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.29, i32 0, i32 0), i32 noundef 69, i32 noundef %3, i32 noundef %5, i32 noundef %7) #25, !dbg !6214
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 3, i32 0, !dbg !6219
  %9 = load i32, i32* %8, align 4, !dbg !6219
  %10 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 4, i32 0, !dbg !6219
  %11 = load i32, i32* %10, align 4, !dbg !6219
  %12 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 5, i32 0, !dbg !6219
  %13 = load i32, i32* %12, align 4, !dbg !6219
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.30, i32 0, i32 0), i32 noundef 69, i32 noundef %9, i32 noundef %11, i32 noundef %13) #25, !dbg !6219
  %14 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 7, !dbg !6224
  %15 = load i32, i32* %14, align 4, !dbg !6224
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.31, i32 0, i32 0), i32 noundef 69, i32 noundef %15) #25, !dbg !6224
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !6229
  %17 = load i32, i32* %16, align 4, !dbg !6229
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #25, !dbg !6229
  ret void, !dbg !6234
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !6235 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6252, metadata !DIExpression()), !dbg !6255
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !6253, metadata !DIExpression()), !dbg !6255
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6256
  %4 = load i32, i32* %3, align 4, !dbg !6256
  call void @llvm.dbg.value(metadata i32 %4, metadata !6254, metadata !DIExpression()), !dbg !6255
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #24, !dbg !6257
  ret void, !dbg !6258
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !6259 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6261, metadata !DIExpression()), !dbg !6264
  call void @llvm.dbg.value(metadata i8* %0, metadata !6262, metadata !DIExpression()), !dbg !6264
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !6265
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #23, !dbg !6265
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !6263, metadata !DIExpression()), !dbg !6266
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !6266
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !6267
  %5 = bitcast i8* %4 to i32*, !dbg !6267
  %6 = load i32, i32* %5, align 4, !dbg !6267
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !6268
  store i32 %6, i32* %7, align 4, !dbg !6269
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #24, !dbg !6270
  unreachable, !dbg !6271
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6272 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6275, metadata !DIExpression()), !dbg !6276
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #24, !dbg !6277
  ret void, !dbg !6278
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6279 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6283, metadata !DIExpression()), !dbg !6284
  %2 = icmp sgt i32 %0, -1, !dbg !6285
  br i1 %2, label %3, label %8, !dbg !6287

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6288, !srcloc !6290
  %4 = and i32 %0, 31, !dbg !6291
  %5 = shl nuw i32 1, %4, !dbg !6292
  %6 = lshr i32 %0, 5, !dbg !6293
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !6294
  store volatile i32 %5, i32* %7, align 4, !dbg !6295
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6296, !srcloc !6297
  br label %8, !dbg !6298

8:                                                ; preds = %3, %1
  ret void, !dbg !6299
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !6300 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6302, metadata !DIExpression()), !dbg !6303
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #24, !dbg !6304
  ret void, !dbg !6305
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6306 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6308, metadata !DIExpression()), !dbg !6309
  %2 = icmp sgt i32 %0, -1, !dbg !6310
  br i1 %2, label %3, label %8, !dbg !6312

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !6313
  %5 = shl nuw i32 1, %4, !dbg !6315
  %6 = lshr i32 %0, 5, !dbg !6316
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !6317
  store volatile i32 %5, i32* %7, align 4, !dbg !6318
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6319, !srcloc !6323
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6324, !srcloc !6327
  br label %8, !dbg !6328

8:                                                ; preds = %3, %1
  ret void, !dbg !6329
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #15 !dbg !6330 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6334, metadata !DIExpression()), !dbg !6335
  %2 = lshr i32 %0, 5, !dbg !6336
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !6337
  %4 = load volatile i32, i32* %3, align 4, !dbg !6337
  %5 = and i32 %0, 31, !dbg !6338
  %6 = shl nuw i32 1, %5, !dbg !6338
  %7 = and i32 %4, %6, !dbg !6339
  ret i32 %7, !dbg !6340
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6341 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6345, metadata !DIExpression()), !dbg !6348
  call void @llvm.dbg.value(metadata i32 %1, metadata !6346, metadata !DIExpression()), !dbg !6348
  call void @llvm.dbg.value(metadata i32 %2, metadata !6347, metadata !DIExpression()), !dbg !6348
  %4 = add i32 %1, 1, !dbg !6349
  call void @llvm.dbg.value(metadata i32 %4, metadata !6346, metadata !DIExpression()), !dbg !6348
  %5 = icmp ult i32 %4, 16, !dbg !6352
  br i1 %5, label %7, label %6, !dbg !6355

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.33, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.34, i32 0, i32 0), i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.35, i32 0, i32 0), i32 noundef 94) #25, !dbg !6356
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.3.36, i32 0, i32 0), i32 noundef %1, i32 noundef %0, i32 noundef 15) #25, !dbg !6356
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.35, i32 0, i32 0), i32 noundef 94) #25, !dbg !6356
  unreachable, !dbg !6356

7:                                                ; preds = %3
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #24, !dbg !6358
  ret void, !dbg !6359
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !6360 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6364, metadata !DIExpression()), !dbg !6366
  call void @llvm.dbg.value(metadata i32 %1, metadata !6365, metadata !DIExpression()), !dbg !6366
  %3 = trunc i32 %1 to i8, !dbg !6367
  %4 = shl i8 %3, 4, !dbg !6367
  %5 = and i32 %0, 15, !dbg !6369
  %6 = add nsw i32 %5, -4, !dbg !6369
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !6369
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6369
  %9 = icmp slt i32 %0, 0, !dbg !6369
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !6369
  store volatile i8 %4, i8* %10, align 1, !dbg !6367
  ret void, !dbg !6370
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !6371 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6373, metadata !DIExpression()), !dbg !6374
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #25, !dbg !6375
  ret void, !dbg !6376
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !6377 {
  tail call void @z_SysNmiOnReset() #25, !dbg !6379
  tail call void @z_arm_int_exit() #25, !dbg !6380
  ret void, !dbg !6381
}

; Function Attrs: optsize
declare !dbg !6382 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !6383 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #10 !dbg !6385 {
  tail call fastcc void @relocate_vector_table() #24, !dbg !6387
  tail call fastcc void @z_arm_floating_point_init() #24, !dbg !6388
  tail call void @z_bss_zero() #25, !dbg !6389
  tail call void @z_data_copy() #25, !dbg !6390
  tail call void @z_arm_interrupt_init() #25, !dbg !6391
  tail call void @z_cstart() #27, !dbg !6392
  unreachable, !dbg !6392
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !6393 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !6394
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6395, !srcloc !6398
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6399, !srcloc !6402
  ret void, !dbg !6403
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !6404 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6405
  %2 = and i32 %1, -15728641, !dbg !6405
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6405
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #23, !dbg !6406, !srcloc !6413
  call void @llvm.dbg.value(metadata i32 %3, metadata !6411, metadata !DIExpression()) #23, !dbg !6414
  %4 = and i32 %3, -5, !dbg !6415
  call void @llvm.dbg.value(metadata i32 %4, metadata !6416, metadata !DIExpression()) #23, !dbg !6421
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #23, !dbg !6423, !srcloc !6424
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6425, !srcloc !6402
  ret void, !dbg !6427
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !6428 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6431, metadata !DIExpression()), !dbg !6432
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6433
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 8, i32 0, !dbg !6434
  store i32 %0, i32* %3, align 4, !dbg !6435
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !6436
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 8, i32 1, !dbg !6437
  store i32 %4, i32* %5, align 4, !dbg !6438
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6439
  %7 = or i32 %6, 268435456, !dbg !6439
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6439
  call void @llvm.dbg.value(metadata i32 0, metadata !6440, metadata !DIExpression()) #23, !dbg !6443
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !6445, !srcloc !6446
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6447
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 8, i32 1, !dbg !6448
  %10 = load i32, i32* %9, align 4, !dbg !6448
  ret i32 %10, !dbg !6449
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #7 !dbg !6450 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6563, metadata !DIExpression()), !dbg !6571
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !6564, metadata !DIExpression()), !dbg !6571
  call void @llvm.dbg.value(metadata i8* %2, metadata !6565, metadata !DIExpression()), !dbg !6571
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !6566, metadata !DIExpression()), !dbg !6571
  call void @llvm.dbg.value(metadata i8* %4, metadata !6567, metadata !DIExpression()), !dbg !6571
  call void @llvm.dbg.value(metadata i8* %5, metadata !6568, metadata !DIExpression()), !dbg !6571
  call void @llvm.dbg.value(metadata i8* %6, metadata !6569, metadata !DIExpression()), !dbg !6571
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !6572
  call void @llvm.dbg.value(metadata i8* %8, metadata !6570, metadata !DIExpression()), !dbg !6571
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !6573
  %10 = bitcast i8* %9 to i32*, !dbg !6573
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !6574
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !6575
  %12 = bitcast i8* %8 to i32*, !dbg !6576
  store i32 %11, i32* %12, align 4, !dbg !6577
  %13 = ptrtoint i8* %4 to i32, !dbg !6578
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !6579
  %15 = bitcast i8* %14 to i32*, !dbg !6579
  store i32 %13, i32* %15, align 4, !dbg !6580
  %16 = ptrtoint i8* %5 to i32, !dbg !6581
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !6582
  %18 = bitcast i8* %17 to i32*, !dbg !6582
  store i32 %16, i32* %18, align 4, !dbg !6583
  %19 = ptrtoint i8* %6 to i32, !dbg !6584
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !6585
  %21 = bitcast i8* %20 to i32*, !dbg !6585
  store i32 %19, i32* %21, align 4, !dbg !6586
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !6587
  %23 = bitcast i8* %22 to i32*, !dbg !6587
  store i32 16777216, i32* %23, align 4, !dbg !6588
  %24 = ptrtoint i8* %8 to i32, !dbg !6589
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !6590
  store i32 %24, i32* %25, align 8, !dbg !6591
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 8, i32 0, !dbg !6592
  store i32 0, i32* %26, align 4, !dbg !6593
  ret void, !dbg !6594
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #8 !dbg !6595 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6600, metadata !DIExpression()), !dbg !6606
  call void @llvm.dbg.value(metadata i32 %1, metadata !6601, metadata !DIExpression()), !dbg !6606
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6607
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !6602, metadata !DIExpression()), !dbg !6606
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !6608
  br i1 %4, label %19, label %5, !dbg !6610

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !6605, metadata !DIExpression()), !dbg !6606
  %6 = icmp eq i32 %0, -22, !dbg !6611
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 6, i32 0, !dbg !6611
  %8 = load i32, i32* %7, align 4, !dbg !6611
  br i1 %6, label %16, label %9, !dbg !6613

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !6611
  %11 = icmp ule i32 %10, %0, !dbg !6611
  %12 = icmp ugt i32 %8, %0, !dbg !6611
  %13 = and i1 %12, %11, !dbg !6611
  %14 = icmp ugt i32 %8, %1, !dbg !6611
  %15 = and i1 %14, %13, !dbg !6611
  br i1 %15, label %18, label %19, !dbg !6611

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !6611
  br i1 %17, label %18, label %19, !dbg !6613

18:                                               ; preds = %9, %16
  br label %19, !dbg !6614

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !6606
  ret i32 %20, !dbg !6616
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #10 !dbg !6617 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6621, metadata !DIExpression()), !dbg !6624
  call void @llvm.dbg.value(metadata i8* %1, metadata !6622, metadata !DIExpression()), !dbg !6624
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !6623, metadata !DIExpression()), !dbg !6624
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6625
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #25, !dbg !6626
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #23, !dbg !6627, !srcloc !6628
  unreachable, !dbg !6629
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !6630 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6648, metadata !DIExpression()), !dbg !6658
  call void @llvm.dbg.value(metadata i32 %1, metadata !6649, metadata !DIExpression()), !dbg !6658
  call void @llvm.dbg.value(metadata i32 %2, metadata !6650, metadata !DIExpression()), !dbg !6658
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !6651, metadata !DIExpression()), !dbg !6658
  call void @llvm.dbg.value(metadata i32 0, metadata !6652, metadata !DIExpression()), !dbg !6658
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6659
  call void @llvm.dbg.value(metadata i32 %8, metadata !6653, metadata !DIExpression(DW_OP_constu, 511, DW_OP_and, DW_OP_stack_value)), !dbg !6658
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #23, !dbg !6660
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #23, !dbg !6660
  %9 = bitcast %struct.__esf* %7 to i8*, !dbg !6661
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #23, !dbg !6661
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !6657, metadata !DIExpression()), !dbg !6662
  call void @llvm.dbg.value(metadata i32 0, metadata !6663, metadata !DIExpression()) #23, !dbg !6666
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !6668, !srcloc !6669
  call void @llvm.dbg.value(metadata i8* %6, metadata !6655, metadata !DIExpression(DW_OP_deref)), !dbg !6658
  %10 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #24, !dbg !6670
  call void @llvm.dbg.value(metadata %struct.__esf* %10, metadata !6656, metadata !DIExpression()), !dbg !6658
  %11 = icmp eq %struct.__esf* %10, null, !dbg !6671
  br i1 %11, label %12, label %13, !dbg !6674

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1.40, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 1057) #25, !dbg !6675
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3.42, i32 0, i32 0)) #25, !dbg !6675
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 1057) #25, !dbg !6675
  unreachable, !dbg !6675

13:                                               ; preds = %4
  %14 = and i32 %8, 511, !dbg !6677
  call void @llvm.dbg.value(metadata i32 %14, metadata !6653, metadata !DIExpression()), !dbg !6658
  call void @llvm.dbg.value(metadata i8* %5, metadata !6654, metadata !DIExpression(DW_OP_deref)), !dbg !6658
  %15 = call fastcc i32 @fault_handle(%struct.__esf* noundef nonnull %10, i32 noundef %14, i8* noundef nonnull %5) #24, !dbg !6678
  call void @llvm.dbg.value(metadata i32 %15, metadata !6652, metadata !DIExpression()), !dbg !6658
  %16 = load i8, i8* %5, align 1, !dbg !6679, !range !6681
  call void @llvm.dbg.value(metadata i8 %16, metadata !6654, metadata !DIExpression()), !dbg !6658
  %17 = icmp eq i8 %16, 0, !dbg !6679
  br i1 %17, label %18, label %35, !dbg !6682

18:                                               ; preds = %13
  %19 = bitcast %struct.__esf* %10 to i8*, !dbg !6683
  %20 = call i8* @memcpy(i8* noundef nonnull %9, i8* noundef nonnull %19, i32 noundef 32) #25, !dbg !6684
  %21 = load i8, i8* %6, align 1, !dbg !6685, !range !6681
  call void @llvm.dbg.value(metadata i8 %21, metadata !6655, metadata !DIExpression()), !dbg !6658
  %22 = icmp eq i8 %21, 0, !dbg !6685
  %23 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !6687
  %24 = load i32, i32* %23, align 4, !dbg !6687
  br i1 %22, label %30, label %25, !dbg !6688

25:                                               ; preds = %18
  %26 = and i32 %24, 511, !dbg !6689
  %27 = icmp eq i32 %26, 0, !dbg !6692
  br i1 %27, label %28, label %34, !dbg !6693

28:                                               ; preds = %25
  %29 = or i32 %24, 511, !dbg !6694
  br label %32, !dbg !6696

30:                                               ; preds = %18
  %31 = and i32 %24, -512, !dbg !6697
  br label %32

32:                                               ; preds = %30, %28
  %33 = phi i32 [ %29, %28 ], [ %31, %30 ]
  store i32 %33, i32* %23, align 4, !dbg !6687
  br label %34, !dbg !6699

34:                                               ; preds = %32, %25
  call void @z_arm_fatal_error(i32 noundef %15, %struct.__esf* noundef nonnull %7) #25, !dbg !6699
  br label %35, !dbg !6700

35:                                               ; preds = %13, %34
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #23, !dbg !6700
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #23, !dbg !6700
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #23, !dbg !6700
  ret void, !dbg !6700
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #1 !dbg !6701 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6706, metadata !DIExpression()), !dbg !6712
  call void @llvm.dbg.value(metadata i32 %1, metadata !6707, metadata !DIExpression()), !dbg !6712
  call void @llvm.dbg.value(metadata i32 %2, metadata !6708, metadata !DIExpression()), !dbg !6712
  call void @llvm.dbg.value(metadata i8* %3, metadata !6709, metadata !DIExpression()), !dbg !6712
  call void @llvm.dbg.value(metadata i8 0, metadata !6710, metadata !DIExpression()), !dbg !6712
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !6711, metadata !DIExpression()), !dbg !6712
  store i8 0, i8* %3, align 1, !dbg !6713
  %5 = icmp ugt i32 %2, -16777217, !dbg !6714
  br i1 %5, label %6, label %17, !dbg !6716

6:                                                ; preds = %4
  %7 = and i32 %2, 12, !dbg !6717
  %8 = icmp eq i32 %7, 8, !dbg !6717
  br i1 %8, label %9, label %10, !dbg !6717

9:                                                ; preds = %6
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.4.55, i32 0, i32 0), i32 noundef 69) #25, !dbg !6719
  br label %17, !dbg !6725

10:                                               ; preds = %6
  %11 = and i32 %2, 8, !dbg !6726
  %12 = icmp eq i32 %11, 0, !dbg !6726
  br i1 %12, label %13, label %14, !dbg !6727

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %0, metadata !6711, metadata !DIExpression()), !dbg !6712
  store i8 1, i8* %3, align 1, !dbg !6730
  br label %14

14:                                               ; preds = %10, %13
  %15 = phi i32 [ %0, %13 ], [ %1, %10 ]
  %16 = inttoptr i32 %15 to %struct.__esf*, !dbg !6712
  call void @llvm.dbg.value(metadata %struct.__esf* %16, metadata !6711, metadata !DIExpression()), !dbg !6712
  br label %17, !dbg !6733

17:                                               ; preds = %4, %14, %9
  %18 = phi %struct.__esf* [ %16, %14 ], [ null, %9 ], [ null, %4 ], !dbg !6712
  ret %struct.__esf* %18, !dbg !6734
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !6735 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6739, metadata !DIExpression()), !dbg !6743
  call void @llvm.dbg.value(metadata i32 %1, metadata !6740, metadata !DIExpression()), !dbg !6743
  call void @llvm.dbg.value(metadata i8* %2, metadata !6741, metadata !DIExpression()), !dbg !6743
  call void @llvm.dbg.value(metadata i32 0, metadata !6742, metadata !DIExpression()), !dbg !6743
  store i8 0, i8* %2, align 1, !dbg !6744
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !6745

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #24, !dbg !6746
  call void @llvm.dbg.value(metadata i32 %5, metadata !6742, metadata !DIExpression()), !dbg !6743
  br label %12, !dbg !6748

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !6749
  call void @llvm.dbg.value(metadata i32 %7, metadata !6742, metadata !DIExpression()), !dbg !6743
  br label %12, !dbg !6750

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !6751
  call void @llvm.dbg.value(metadata i32 0, metadata !6742, metadata !DIExpression()), !dbg !6743
  br label %12, !dbg !6752

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #24, !dbg !6753
  call void @llvm.dbg.value(metadata i32 0, metadata !6742, metadata !DIExpression()), !dbg !6743
  br label %12, !dbg !6754

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #24, !dbg !6755
  br label %12, !dbg !6756

11:                                               ; preds = %3
  tail call fastcc void @reserved_exception(i32 noundef %1) #24, !dbg !6757
  br label %12, !dbg !6758

12:                                               ; preds = %4, %6, %8, %9, %10, %11
  %13 = phi i32 [ 0, %11 ], [ 0, %10 ], [ 0, %9 ], [ 0, %8 ], [ %7, %6 ], [ %5, %4 ], !dbg !6743
  call void @llvm.dbg.value(metadata i32 %13, metadata !6742, metadata !DIExpression()), !dbg !6743
  ret i32 %13, !dbg !6759
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6760 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6764, metadata !DIExpression()), !dbg !6767
  call void @llvm.dbg.value(metadata i8* %1, metadata !6765, metadata !DIExpression()), !dbg !6767
  call void @llvm.dbg.value(metadata i32 0, metadata !6766, metadata !DIExpression()), !dbg !6767
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.47, i32 0, i32 0), i32 noundef 69) #25, !dbg !6768
  store i8 0, i8* %1, align 1, !dbg !6773
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6774
  %4 = and i32 %3, 2, !dbg !6776
  %5 = icmp eq i32 %4, 0, !dbg !6777
  br i1 %5, label %7, label %6, !dbg !6778

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.48, i32 0, i32 0), i32 noundef 69) #25, !dbg !6779
  br label %38, !dbg !6785

7:                                                ; preds = %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6786
  %9 = icmp sgt i32 %8, -1, !dbg !6788
  br i1 %9, label %11, label %10, !dbg !6789

10:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7.49, i32 0, i32 0), i32 noundef 69) #25, !dbg !6790
  br label %38, !dbg !6796

11:                                               ; preds = %7
  %12 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6797
  %13 = and i32 %12, 1073741824, !dbg !6799
  %14 = icmp eq i32 %13, 0, !dbg !6800
  br i1 %14, label %37, label %15, !dbg !6801

15:                                               ; preds = %11
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.50, i32 0, i32 0), i32 noundef 69) #25, !dbg !6802
  %16 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #24, !dbg !6808
  br i1 %16, label %17, label %21, !dbg !6810

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6811
  %19 = load i32, i32* %18, align 4, !dbg !6811
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9.51, i32 0, i32 0), i32 noundef 69, i32 noundef %19) #25, !dbg !6811
  %20 = load i32, i32* %18, align 4, !dbg !6817
  call void @llvm.dbg.value(metadata i32 %20, metadata !6766, metadata !DIExpression()), !dbg !6767
  br label %38, !dbg !6818

21:                                               ; preds = %15
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6819
  %23 = and i32 %22, 255, !dbg !6821
  %24 = icmp eq i32 %23, 0, !dbg !6822
  br i1 %24, label %27, label %25, !dbg !6823

25:                                               ; preds = %21
  %26 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !6824
  call void @llvm.dbg.value(metadata i32 %26, metadata !6766, metadata !DIExpression()), !dbg !6767
  br label %38, !dbg !6826

27:                                               ; preds = %21
  %28 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6827
  %29 = and i32 %28, 65280, !dbg !6829
  %30 = icmp eq i32 %29, 0, !dbg !6830
  br i1 %30, label %32, label %31, !dbg !6831

31:                                               ; preds = %27
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !6832
  call void @llvm.dbg.value(metadata i32 0, metadata !6766, metadata !DIExpression()), !dbg !6767
  br label %38, !dbg !6834

32:                                               ; preds = %27
  %33 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6835
  %34 = icmp ult i32 %33, 65536, !dbg !6837
  br i1 %34, label %36, label %35, !dbg !6838

35:                                               ; preds = %32
  tail call fastcc void @usage_fault() #24, !dbg !6839
  call void @llvm.dbg.value(metadata i32 0, metadata !6766, metadata !DIExpression()), !dbg !6767
  br label %38

36:                                               ; preds = %32
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.52, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 755) #25, !dbg !6841
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11.53, i32 0, i32 0)) #25, !dbg !6841
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 755) #25, !dbg !6841
  unreachable, !dbg !6841

37:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.52, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 760) #25, !dbg !6846
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.12.54, i32 0, i32 0)) #25, !dbg !6846
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 760) #25, !dbg !6846
  unreachable, !dbg !6846

38:                                               ; preds = %10, %17, %31, %35, %25, %6
  %39 = phi i32 [ 0, %6 ], [ 0, %10 ], [ %20, %17 ], [ %26, %25 ], [ 0, %31 ], [ 0, %35 ], !dbg !6767
  call void @llvm.dbg.value(metadata i32 %39, metadata !6766, metadata !DIExpression()), !dbg !6767
  ret i32 %39, !dbg !6851
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !6852 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6854, metadata !DIExpression()), !dbg !6867
  call void @llvm.dbg.value(metadata i32 %1, metadata !6855, metadata !DIExpression()), !dbg !6867
  call void @llvm.dbg.value(metadata i8* %2, metadata !6856, metadata !DIExpression()), !dbg !6867
  call void @llvm.dbg.value(metadata i32 0, metadata !6857, metadata !DIExpression()), !dbg !6867
  call void @llvm.dbg.value(metadata i32 -22, metadata !6858, metadata !DIExpression()), !dbg !6867
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13.46, i32 0, i32 0), i32 noundef 69) #25, !dbg !6868
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6873
  %5 = and i32 %4, 16, !dbg !6875
  %6 = icmp eq i32 %5, 0, !dbg !6876
  br i1 %6, label %8, label %7, !dbg !6877

7:                                                ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.14, i32 0, i32 0), i32 noundef 69) #25, !dbg !6878
  br label %8, !dbg !6884

8:                                                ; preds = %7, %3
  %9 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6885
  %10 = and i32 %9, 8, !dbg !6887
  %11 = icmp eq i32 %10, 0, !dbg !6888
  br i1 %11, label %13, label %12, !dbg !6889

12:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #25, !dbg !6890
  br label %13, !dbg !6896

13:                                               ; preds = %12, %8
  %14 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6897
  %15 = and i32 %14, 2, !dbg !6898
  %16 = icmp eq i32 %15, 0, !dbg !6899
  br i1 %16, label %27, label %17, !dbg !6900

17:                                               ; preds = %13
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.16, i32 0, i32 0), i32 noundef 69) #25, !dbg !6901
  %18 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !6906
  call void @llvm.dbg.value(metadata i32 %18, metadata !6859, metadata !DIExpression()), !dbg !6907
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6908
  %20 = and i32 %19, 128, !dbg !6910
  %21 = icmp eq i32 %20, 0, !dbg !6911
  br i1 %21, label %27, label %22, !dbg !6912

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %18, metadata !6858, metadata !DIExpression()), !dbg !6867
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i32 0, i32 0), i32 noundef 69, i32 noundef %18) #25, !dbg !6913
  %23 = icmp eq i32 %1, 0, !dbg !6919
  br i1 %23, label %27, label %24, !dbg !6921

24:                                               ; preds = %22
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6922
  %26 = and i32 %25, -129, !dbg !6922
  store volatile i32 %26, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6922
  br label %27, !dbg !6924

27:                                               ; preds = %17, %24, %22, %13
  %28 = phi i32 [ -22, %13 ], [ %18, %24 ], [ %18, %22 ], [ -22, %17 ], !dbg !6867
  call void @llvm.dbg.value(metadata i32 %28, metadata !6858, metadata !DIExpression()), !dbg !6867
  %29 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6925
  %30 = and i32 %29, 1, !dbg !6927
  %31 = icmp eq i32 %30, 0, !dbg !6928
  br i1 %31, label %33, label %32, !dbg !6929

32:                                               ; preds = %27
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.18, i32 0, i32 0), i32 noundef 69) #25, !dbg !6930
  br label %33, !dbg !6936

33:                                               ; preds = %32, %27
  %34 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6937
  %35 = and i32 %34, 32, !dbg !6939
  %36 = icmp eq i32 %35, 0, !dbg !6940
  br i1 %36, label %38, label %37, !dbg !6941

37:                                               ; preds = %33
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), i32 noundef 69) #25, !dbg !6942
  br label %38, !dbg !6948

38:                                               ; preds = %37, %33
  %39 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6949
  %40 = and i32 %39, 16, !dbg !6950
  %41 = icmp eq i32 %40, 0, !dbg !6950
  br i1 %41, label %42, label %46, !dbg !6951

42:                                               ; preds = %38
  %43 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6952
  %44 = and i32 %43, 2, !dbg !6953
  %45 = icmp eq i32 %44, 0, !dbg !6953
  br i1 %45, label %60, label %46, !dbg !6954

46:                                               ; preds = %42, %38
  %47 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6955
  %48 = and i32 %47, 2048, !dbg !6956
  %49 = icmp eq i32 %48, 0, !dbg !6956
  br i1 %49, label %60, label %50, !dbg !6957

50:                                               ; preds = %46
  %51 = ptrtoint %struct.__esf* %0 to i32, !dbg !6958
  %52 = tail call i32 @z_check_thread_stack_fail(i32 noundef %28, i32 noundef %51) #25, !dbg !6959
  call void @llvm.dbg.value(metadata i32 %52, metadata !6862, metadata !DIExpression()), !dbg !6960
  %53 = icmp eq i32 %52, 0, !dbg !6961
  br i1 %53, label %55, label %54, !dbg !6963

54:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %52, metadata !6964, metadata !DIExpression()) #23, !dbg !6967
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %52) #23, !dbg !6970, !srcloc !6971
  call void @llvm.dbg.value(metadata i32 2, metadata !6857, metadata !DIExpression()), !dbg !6867
  br label %60, !dbg !6972

55:                                               ; preds = %50
  %56 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6973
  %57 = and i32 %56, 16, !dbg !6973
  %58 = icmp eq i32 %57, 0, !dbg !6973
  br i1 %58, label %60, label %59, !dbg !6977

59:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([74 x i8], [74 x i8]* @.str.20, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 343) #25, !dbg !6978
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.21, i32 0, i32 0)) #25, !dbg !6978
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 343) #25, !dbg !6978
  unreachable, !dbg !6978

60:                                               ; preds = %54, %55, %46, %42
  %61 = phi i32 [ 0, %46 ], [ 0, %42 ], [ 2, %54 ], [ 0, %55 ], !dbg !6867
  call void @llvm.dbg.value(metadata i32 %61, metadata !6857, metadata !DIExpression()), !dbg !6867
  %62 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6980
  %63 = and i32 %62, 32, !dbg !6982
  %64 = icmp eq i32 %63, 0, !dbg !6983
  br i1 %64, label %68, label %65, !dbg !6984

65:                                               ; preds = %60
  %66 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6985
  %67 = and i32 %66, -8193, !dbg !6985
  store volatile i32 %67, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6985
  br label %68, !dbg !6987

68:                                               ; preds = %65, %60
  %69 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6988
  %70 = or i32 %69, 255, !dbg !6988
  store volatile i32 %70, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6988
  store i8 0, i8* %2, align 1, !dbg !6989
  ret i32 %61, !dbg !6990
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6991 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6995, metadata !DIExpression()), !dbg !7002
  call void @llvm.dbg.value(metadata i32 %0, metadata !6996, metadata !DIExpression()), !dbg !7002
  call void @llvm.dbg.value(metadata i8* %1, metadata !6997, metadata !DIExpression()), !dbg !7002
  call void @llvm.dbg.value(metadata i32 0, metadata !6998, metadata !DIExpression()), !dbg !7002
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22.45, i32 0, i32 0), i32 noundef 69) #25, !dbg !7003
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7008
  %4 = and i32 %3, 4096, !dbg !7010
  %5 = icmp eq i32 %4, 0, !dbg !7010
  br i1 %5, label %7, label %6, !dbg !7011

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.23, i32 0, i32 0), i32 noundef 69) #25, !dbg !7012
  br label %7, !dbg !7018

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7019
  %9 = and i32 %8, 2048, !dbg !7021
  %10 = icmp eq i32 %9, 0, !dbg !7021
  br i1 %10, label %12, label %11, !dbg !7022

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #25, !dbg !7023
  br label %12, !dbg !7029

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7030
  %14 = and i32 %13, 512, !dbg !7031
  %15 = icmp eq i32 %14, 0, !dbg !7031
  br i1 %15, label %26, label %16, !dbg !7032

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.24, i32 0, i32 0), i32 noundef 69) #25, !dbg !7033
  %17 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !7038
  call void @llvm.dbg.value(metadata i32 %17, metadata !6999, metadata !DIExpression()), !dbg !7039
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7040
  %19 = and i32 %18, 32768, !dbg !7042
  %20 = icmp eq i32 %19, 0, !dbg !7043
  br i1 %20, label %26, label %21, !dbg !7044

21:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.25, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #25, !dbg !7045
  %22 = icmp eq i32 %0, 0, !dbg !7051
  br i1 %22, label %26, label %23, !dbg !7053

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7054
  %25 = and i32 %24, -32769, !dbg !7054
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7054
  br label %26, !dbg !7056

26:                                               ; preds = %16, %23, %21, %12
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7057
  %28 = and i32 %27, 1024, !dbg !7059
  %29 = icmp eq i32 %28, 0, !dbg !7059
  br i1 %29, label %31, label %30, !dbg !7060

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.26, i32 0, i32 0), i32 noundef 69) #25, !dbg !7061
  br label %31, !dbg !7067

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7068
  %33 = and i32 %32, 256, !dbg !7070
  %34 = icmp eq i32 %33, 0, !dbg !7071
  br i1 %34, label %35, label %39, !dbg !7072

35:                                               ; preds = %31
  %36 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7073
  %37 = and i32 %36, 8192, !dbg !7075
  %38 = icmp eq i32 %37, 0, !dbg !7075
  br i1 %38, label %41, label %39, !dbg !7076

39:                                               ; preds = %35, %31
  %40 = phi i8* [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.27, i32 0, i32 0), %31 ], [ getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), %35 ]
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef %40, i32 noundef 69) #25, !dbg !7077
  br label %41, !dbg !7078

41:                                               ; preds = %39, %35
  %42 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7078
  %43 = or i32 %42, 65280, !dbg !7078
  store volatile i32 %43, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7078
  store i8 0, i8* %1, align 1, !dbg !7079
  ret void, !dbg !7080
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #1 !dbg !7081 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7087, metadata !DIExpression()), !dbg !7089
  call void @llvm.dbg.value(metadata i32 0, metadata !7088, metadata !DIExpression()), !dbg !7089
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i32 0, i32 0), i32 noundef 69) #25, !dbg !7090
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7095
  %2 = and i32 %1, 33554432, !dbg !7097
  %3 = icmp eq i32 %2, 0, !dbg !7098
  br i1 %3, label %5, label %4, !dbg !7099

4:                                                ; preds = %0
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.29.43, i32 0, i32 0), i32 noundef 69) #25, !dbg !7100
  br label %5, !dbg !7106

5:                                                ; preds = %4, %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7107
  %7 = and i32 %6, 16777216, !dbg !7109
  %8 = icmp eq i32 %7, 0, !dbg !7110
  br i1 %8, label %10, label %9, !dbg !7111

9:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.30, i32 0, i32 0), i32 noundef 69) #25, !dbg !7112
  br label %10, !dbg !7118

10:                                               ; preds = %9, %5
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7119
  %12 = and i32 %11, 524288, !dbg !7121
  %13 = icmp eq i32 %12, 0, !dbg !7122
  br i1 %13, label %15, label %14, !dbg !7123

14:                                               ; preds = %10
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.31, i32 0, i32 0), i32 noundef 69) #25, !dbg !7124
  br label %15, !dbg !7130

15:                                               ; preds = %14, %10
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7131
  %17 = and i32 %16, 262144, !dbg !7133
  %18 = icmp eq i32 %17, 0, !dbg !7134
  br i1 %18, label %20, label %19, !dbg !7135

19:                                               ; preds = %15
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.32, i32 0, i32 0), i32 noundef 69) #25, !dbg !7136
  br label %20, !dbg !7142

20:                                               ; preds = %19, %15
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7143
  %22 = and i32 %21, 131072, !dbg !7145
  %23 = icmp eq i32 %22, 0, !dbg !7146
  br i1 %23, label %25, label %24, !dbg !7147

24:                                               ; preds = %20
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.33.44, i32 0, i32 0), i32 noundef 69) #25, !dbg !7148
  br label %25, !dbg !7154

25:                                               ; preds = %24, %20
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7155
  %27 = and i32 %26, 65536, !dbg !7157
  %28 = icmp eq i32 %27, 0, !dbg !7158
  br i1 %28, label %30, label %29, !dbg !7159

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.34, i32 0, i32 0), i32 noundef 69) #25, !dbg !7160
  br label %30, !dbg !7166

30:                                               ; preds = %29, %25
  %31 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7167
  %32 = or i32 %31, -65536, !dbg !7167
  store volatile i32 %32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7167
  ret void, !dbg !7168
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #1 !dbg !7169 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7173, metadata !DIExpression()), !dbg !7175
  call void @llvm.dbg.value(metadata i8* %0, metadata !7174, metadata !DIExpression()), !dbg !7175
  store i8 0, i8* %0, align 1, !dbg !7176
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.35, i32 0, i32 0), i32 noundef 69) #25, !dbg !7177
  ret void, !dbg !7182
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @reserved_exception(i32 noundef %0) unnamed_addr #1 !dbg !7183 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7187, metadata !DIExpression()), !dbg !7189
  call void @llvm.dbg.value(metadata i32 %0, metadata !7188, metadata !DIExpression()), !dbg !7189
  %2 = icmp slt i32 %0, 16, !dbg !7190
  %3 = select i1 %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.38, i32 0, i32 0), !dbg !7190
  %4 = add nsw i32 %0, -16, !dbg !7190
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.36, i32 0, i32 0), i32 noundef 69, i8* noundef %3, i32 noundef %4) #25, !dbg !7190
  ret void, !dbg !7195
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7196 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7200, metadata !DIExpression()), !dbg !7203
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7204
  %3 = load i32, i32* %2, align 4, !dbg !7204
  %4 = inttoptr i32 %3 to i16*, !dbg !7205
  call void @llvm.dbg.value(metadata i16* %4, metadata !7201, metadata !DIExpression()), !dbg !7203
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7206
  %6 = or i32 %5, 256, !dbg !7206
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7206
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7207, !srcloc !7210
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7211, !srcloc !7214
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !7215
  %8 = load i16, i16* %7, align 2, !dbg !7216
  call void @llvm.dbg.value(metadata i16 %8, metadata !7202, metadata !DIExpression()), !dbg !7203
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7217
  %10 = and i32 %9, -257, !dbg !7217
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7217
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7218, !srcloc !7210
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7220, !srcloc !7214
  %11 = icmp eq i16 %8, -8446, !dbg !7222
  ret i1 %11, !dbg !7224
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #14 !dbg !7225 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7226
  %2 = or i32 %1, 16, !dbg !7226
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7226
  ret void, !dbg !7227
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #14 !dbg !7228 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7231, metadata !DIExpression()), !dbg !7232
  br label %1, !dbg !7233

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !7231, metadata !DIExpression()), !dbg !7232
  tail call fastcc void @__NVIC_SetPriority.58(i32 noundef %2) #24, !dbg !7235
  %3 = add nuw nsw i32 %2, 1, !dbg !7238
  call void @llvm.dbg.value(metadata i32 %3, metadata !7231, metadata !DIExpression()), !dbg !7232
  %4 = icmp eq i32 %3, 97, !dbg !7239
  br i1 %4, label %5, label %1, !dbg !7233, !llvm.loop !7240

5:                                                ; preds = %1
  ret void, !dbg !7242
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.58(i32 noundef %0) unnamed_addr #14 !dbg !7243 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7245, metadata !DIExpression()), !dbg !7247
  call void @llvm.dbg.value(metadata i32 1, metadata !7246, metadata !DIExpression()), !dbg !7247
  %2 = and i32 %0, 15, !dbg !7248
  %3 = add nsw i32 %2, -4, !dbg !7248
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !7248
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7248
  %6 = icmp slt i32 %0, 0, !dbg !7248
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !7248
  store volatile i8 16, i8* %7, align 1, !dbg !7249
  ret void, !dbg !7251
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !7252 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7361, metadata !DIExpression()), !dbg !7362
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7363
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !7365
  br i1 %3, label %4, label %12, !dbg !7366

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !7367, !srcloc !7379
  call void @llvm.dbg.value(metadata i32 %5, metadata !7370, metadata !DIExpression()) #23, !dbg !7380
  %6 = icmp eq i32 %5, 0, !dbg !7381
  br i1 %6, label %12, label %7, !dbg !7382

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7383
  %9 = or i32 %8, 268435456, !dbg !7383
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7383
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7385
  %11 = and i32 %10, -32769, !dbg !7385
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7385
  br label %12, !dbg !7386

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !7387
  ret void, !dbg !7388
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !7389 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #25, !dbg !7390
  ret void, !dbg !7391
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !303 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !429, metadata !DIExpression()), !dbg !7392
  call void @llvm.dbg.value(metadata i8 0, metadata !430, metadata !DIExpression()), !dbg !7392
  call void @llvm.dbg.value(metadata i32 64, metadata !432, metadata !DIExpression()), !dbg !7392
  call void @llvm.dbg.value(metadata i32 undef, metadata !431, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !7392
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !7393
  %3 = load i32, i32* %2, align 4, !dbg !7393
  call void @llvm.dbg.value(metadata i32 %3, metadata !431, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !7392
  %4 = add i32 %3, -64, !dbg !7395
  call void @llvm.dbg.value(metadata i32 %4, metadata !431, metadata !DIExpression()), !dbg !7392
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !7396
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !7397
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !7398
  call void @llvm.dbg.value(metadata i8 1, metadata !430, metadata !DIExpression()), !dbg !7392
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #25, !dbg !7399
  ret void, !dbg !7400
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !7401 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7402
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7403, !srcloc !7406
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7407, !srcloc !7410
  ret void, !dbg !7411
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !7412 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #23, !dbg !7413, !srcloc !7416
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7417
  ret void, !dbg !7418
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !7419 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7434, metadata !DIExpression()), !dbg !7438
  call void @llvm.dbg.value(metadata i8 %1, metadata !7435, metadata !DIExpression()), !dbg !7438
  call void @llvm.dbg.value(metadata i32 %2, metadata !7436, metadata !DIExpression()), !dbg !7438
  call void @llvm.dbg.value(metadata i32 %3, metadata !7437, metadata !DIExpression()), !dbg !7438
  %5 = tail call fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !7439
  %6 = icmp eq i32 %5, -22, !dbg !7441
  br i1 %6, label %7, label %9, !dbg !7442

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.68, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 283) #25, !dbg !7443
  %8 = zext i8 %1 to i32, !dbg !7443
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3.70, i32 0, i32 0), i32 noundef %8) #25, !dbg !7443
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 283) #25, !dbg !7443
  unreachable, !dbg !7443

9:                                                ; preds = %4
  ret void, !dbg !7448
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !7449 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7454, metadata !DIExpression()), !dbg !7459
  call void @llvm.dbg.value(metadata i8 %1, metadata !7455, metadata !DIExpression()), !dbg !7459
  call void @llvm.dbg.value(metadata i32 undef, metadata !7456, metadata !DIExpression()), !dbg !7459
  call void @llvm.dbg.value(metadata i32 undef, metadata !7457, metadata !DIExpression()), !dbg !7459
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7460
  call void @llvm.dbg.value(metadata i8 %3, metadata !7458, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7459
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #24, !dbg !7461
  call void @llvm.dbg.value(metadata i32 %4, metadata !7458, metadata !DIExpression()), !dbg !7459
  %5 = trunc i32 %4 to i8, !dbg !7462
  store i8 %5, i8* @static_regions_num, align 1, !dbg !7463
  ret i32 %4, !dbg !7464
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #1 !dbg !7465 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7469, metadata !DIExpression()), !dbg !7475
  call void @llvm.dbg.value(metadata i8 %1, metadata !7470, metadata !DIExpression()), !dbg !7475
  call void @llvm.dbg.value(metadata i8 %2, metadata !7471, metadata !DIExpression()), !dbg !7475
  call void @llvm.dbg.value(metadata i1 %3, metadata !7472, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7475
  %5 = zext i8 %2 to i32, !dbg !7476
  call void @llvm.dbg.value(metadata i32 %5, metadata !7474, metadata !DIExpression()), !dbg !7475
  call void @llvm.dbg.value(metadata i32 0, metadata !7473, metadata !DIExpression()), !dbg !7475
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !7474, metadata !DIExpression()), !dbg !7475
  call void @llvm.dbg.value(metadata i32 0, metadata !7473, metadata !DIExpression()), !dbg !7475
  %7 = icmp eq i8 %1, 0, !dbg !7477
  br i1 %7, label %30, label %8, !dbg !7480

8:                                                ; preds = %4, %26
  %9 = phi i32 [ %27, %26 ], [ %5, %4 ]
  %10 = phi i32 [ %28, %26 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7474, metadata !DIExpression()), !dbg !7475
  call void @llvm.dbg.value(metadata i32 %10, metadata !7473, metadata !DIExpression()), !dbg !7475
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !7481
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !7484
  %13 = load i32, i32* %12, align 4, !dbg !7484
  %14 = icmp eq i32 %13, 0, !dbg !7485
  br i1 %14, label %26, label %15, !dbg !7486

15:                                               ; preds = %8
  br i1 %3, label %16, label %20, !dbg !7487

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !7489
  %18 = icmp eq i32 %17, 0, !dbg !7489
  br i1 %18, label %19, label %20, !dbg !7490

19:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8.71, i32 0, i32 0), i32 noundef 69, i32 noundef %10) #25, !dbg !7491
  br label %30, !dbg !7497

20:                                               ; preds = %16, %15
  %21 = trunc i32 %9 to i8, !dbg !7498
  %22 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %21, %struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !7499
  call void @llvm.dbg.value(metadata i32 %22, metadata !7474, metadata !DIExpression()), !dbg !7475
  %23 = icmp eq i32 %22, -22, !dbg !7500
  br i1 %23, label %30, label %24, !dbg !7502

24:                                               ; preds = %20
  %25 = add nsw i32 %22, 1, !dbg !7503
  call void @llvm.dbg.value(metadata i32 %25, metadata !7474, metadata !DIExpression()), !dbg !7475
  br label %26, !dbg !7504

26:                                               ; preds = %8, %24
  %27 = phi i32 [ %9, %8 ], [ %25, %24 ], !dbg !7475
  call void @llvm.dbg.value(metadata i32 %27, metadata !7474, metadata !DIExpression()), !dbg !7475
  %28 = add nuw nsw i32 %10, 1, !dbg !7505
  call void @llvm.dbg.value(metadata i32 %28, metadata !7473, metadata !DIExpression()), !dbg !7475
  %29 = icmp eq i32 %28, %6, !dbg !7477
  br i1 %29, label %30, label %8, !dbg !7480, !llvm.loop !7506

30:                                               ; preds = %20, %26, %4, %19
  %31 = phi i32 [ -22, %19 ], [ %5, %4 ], [ -22, %20 ], [ %27, %26 ], !dbg !7475
  ret i32 %31, !dbg !7508
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #16 !dbg !7509 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7513, metadata !DIExpression()), !dbg !7515
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !7516
  %3 = load i32, i32* %2, align 4, !dbg !7516
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !7517, !range !7518
  %5 = icmp ult i32 %4, 2, !dbg !7517
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !7519
  br i1 %7, label %8, label %15, !dbg !7519

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !7520
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !7521
  %11 = load i32, i32* %10, align 4, !dbg !7521
  %12 = and i32 %11, %9, !dbg !7522
  %13 = icmp eq i32 %12, 0, !dbg !7523
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !7514, metadata !DIExpression()), !dbg !7515
  ret i32 %16, !dbg !7524
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #1 !dbg !7525 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !7529, metadata !DIExpression()), !dbg !7532
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !7530, metadata !DIExpression()), !dbg !7532
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !7533
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #23, !dbg !7533
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !7531, metadata !DIExpression()), !dbg !7534
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !7535
  %6 = load i32, i32* %5, align 4, !dbg !7535
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !7536
  store i32 %6, i32* %7, align 4, !dbg !7537
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !7538
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !7539
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !7540
  %11 = load i32, i32* %10, align 4, !dbg !7540
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* noundef nonnull %8, %struct.k_spinlock* noundef nonnull %9, i32 noundef %11) #24, !dbg !7541
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #24, !dbg !7542
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #23, !dbg !7543
  ret i32 %12, !dbg !7544
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* nocapture noundef writeonly %0, %struct.k_spinlock* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #17 !dbg !7545 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !7552, metadata !DIExpression()), !dbg !7556
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !7553, metadata !DIExpression()), !dbg !7556
  call void @llvm.dbg.value(metadata i32 undef, metadata !7554, metadata !DIExpression()), !dbg !7556
  call void @llvm.dbg.value(metadata i32 %2, metadata !7555, metadata !DIExpression()), !dbg !7556
  %4 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %1, i32 0, i32 0, !dbg !7557
  %5 = load i32, i32* %4, align 4, !dbg !7557
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #24, !dbg !7558
  %7 = or i32 %6, %5, !dbg !7559
  %8 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !7560
  store i32 %7, i32* %8, align 4, !dbg !7561
  ret void, !dbg !7562
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #1 !dbg !7563 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !7567, metadata !DIExpression()), !dbg !7569
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7568, metadata !DIExpression()), !dbg !7569
  %3 = zext i8 %0 to i32, !dbg !7570
  %4 = icmp ugt i8 %0, 7, !dbg !7572
  br i1 %4, label %5, label %6, !dbg !7573

5:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.9.72, i32 0, i32 0), i32 noundef 69, i32 noundef %3) #25, !dbg !7574
  br label %7, !dbg !7580

6:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #24, !dbg !7581
  br label %7, !dbg !7582

7:                                                ; preds = %6, %5
  %8 = phi i32 [ -22, %5 ], [ %3, %6 ], !dbg !7569
  ret i32 %8, !dbg !7583
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #14 !dbg !7584 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7588, metadata !DIExpression()), !dbg !7590
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7589, metadata !DIExpression()), !dbg !7590
  tail call fastcc void @set_region_number(i32 noundef %0) #24, !dbg !7591
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !7592
  %4 = load i32, i32* %3, align 4, !dbg !7592
  %5 = and i32 %4, -32, !dbg !7593
  %6 = or i32 %5, %0, !dbg !7594
  %7 = or i32 %6, 16, !dbg !7594
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !7595
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !7596
  %9 = load i32, i32* %8, align 4, !dbg !7596
  %10 = or i32 %9, 1, !dbg !7597
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7598
  ret void, !dbg !7599
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #14 !dbg !7600 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7603, metadata !DIExpression()), !dbg !7604
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7605
  ret void, !dbg !7606
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #11 !dbg !7607 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7611, metadata !DIExpression()), !dbg !7612
  %2 = icmp ult i32 %0, 33, !dbg !7613
  br i1 %2, label %11, label %3, !dbg !7615

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !7616
  br i1 %4, label %11, label %5, !dbg !7618

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !7619
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !7620, !range !7518
  %8 = mul nsw i32 %7, -2, !dbg !7621
  %9 = add nsw i32 %8, 62, !dbg !7621
  %10 = and i32 %9, 62, !dbg !7622
  br label %11, !dbg !7623

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !7612
  ret i32 %12, !dbg !7624
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #1 !dbg !7625 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7629, metadata !DIExpression()), !dbg !7631
  call void @llvm.dbg.value(metadata i8 %1, metadata !7630, metadata !DIExpression()), !dbg !7631
  %3 = tail call fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !7632
  %4 = icmp eq i32 %3, -22, !dbg !7634
  br i1 %4, label %5, label %7, !dbg !7635

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.68, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 314) #25, !dbg !7636
  %6 = zext i8 %1 to i32, !dbg !7636
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4.75, i32 0, i32 0), i32 noundef %6) #25, !dbg !7636
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 314) #25, !dbg !7636
  unreachable, !dbg !7636

7:                                                ; preds = %2
  ret void, !dbg !7641
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !7642 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7646, metadata !DIExpression()), !dbg !7653
  call void @llvm.dbg.value(metadata i8 %1, metadata !7647, metadata !DIExpression()), !dbg !7653
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7654
  call void @llvm.dbg.value(metadata i8 %3, metadata !7648, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7653
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #24, !dbg !7655
  call void @llvm.dbg.value(metadata i32 %4, metadata !7648, metadata !DIExpression()), !dbg !7653
  %5 = icmp ne i32 %4, -22, !dbg !7656
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !7657
  call void @llvm.dbg.value(metadata i32 %4, metadata !7649, metadata !DIExpression()), !dbg !7658
  br i1 %7, label %8, label %12, !dbg !7657

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7649, metadata !DIExpression()), !dbg !7658
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #24, !dbg !7659
  %10 = add i32 %9, 1, !dbg !7662
  call void @llvm.dbg.value(metadata i32 %10, metadata !7649, metadata !DIExpression()), !dbg !7658
  %11 = icmp eq i32 %10, 8, !dbg !7663
  br i1 %11, label %12, label %8, !dbg !7664, !llvm.loop !7665

12:                                               ; preds = %8, %2
  ret i32 %4, !dbg !7667
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #14 !dbg !7668 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7671, metadata !DIExpression()), !dbg !7672
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7673
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7674
  ret void, !dbg !7675
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !7676 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !7681
  %2 = icmp ugt i32 %1, 8, !dbg !7683
  br i1 %2, label %3, label %4, !dbg !7684

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.68, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 341) #25, !dbg !7685
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.5.76, i32 0, i32 0), i32 noundef %1, i32 noundef 8) #25, !dbg !7685
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 341) #25, !dbg !7685
  unreachable, !dbg !7685

4:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #24, !dbg !7690
  call void @llvm.dbg.value(metadata i32 0, metadata !7680, metadata !DIExpression()), !dbg !7691
  %5 = icmp eq i32 %1, 0, !dbg !7692
  br i1 %5, label %13, label %6, !dbg !7695

6:                                                ; preds = %4
  %7 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %8, !dbg !7695

8:                                                ; preds = %6, %8
  %9 = phi i32 [ 0, %6 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7680, metadata !DIExpression()), !dbg !7691
  %10 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %7, i32 %9, !dbg !7696
  tail call fastcc void @region_init(i32 noundef %9, %struct.arm_mpu_region* noundef %10) #24, !dbg !7698
  %11 = add nuw i32 %9, 1, !dbg !7699
  call void @llvm.dbg.value(metadata i32 %11, metadata !7680, metadata !DIExpression()), !dbg !7691
  %12 = icmp eq i32 %11, %1, !dbg !7692
  br i1 %12, label %13, label %8, !dbg !7695, !llvm.loop !7700

13:                                               ; preds = %8, %4
  %14 = trunc i32 %1 to i8, !dbg !7702
  store i8 %14, i8* @static_regions_num, align 1, !dbg !7703
  tail call void @arm_core_mpu_enable() #24, !dbg !7704
  %15 = load volatile i32, i32* inttoptr (i32 -536810096 to i32*), align 16, !dbg !7705
  %16 = and i32 %15, 65280, !dbg !7705
  %17 = icmp eq i32 %16, 2048, !dbg !7705
  br i1 %17, label %19, label %18, !dbg !7708

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.6.77, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 435) #25, !dbg !7709
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.78, i32 0, i32 0)) #25, !dbg !7709
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 435) #25, !dbg !7709
  unreachable, !dbg !7709

19:                                               ; preds = %13
  ret i32 0, !dbg !7711
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !7712 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7719, metadata !DIExpression()), !dbg !7722
  call void @llvm.dbg.value(metadata i8* %1, metadata !7720, metadata !DIExpression()), !dbg !7722
  call void @llvm.dbg.value(metadata i8* %0, metadata !7721, metadata !DIExpression()), !dbg !7722
  %3 = load i8, i8* %1, align 1, !dbg !7723
  %4 = icmp eq i8 %3, 0, !dbg !7724
  br i1 %4, label %13, label %5, !dbg !7725

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !7719, metadata !DIExpression()), !dbg !7722
  call void @llvm.dbg.value(metadata i8* %8, metadata !7720, metadata !DIExpression()), !dbg !7722
  store i8 %6, i8* %7, align 1, !dbg !7726
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7728
  call void @llvm.dbg.value(metadata i8* %9, metadata !7719, metadata !DIExpression()), !dbg !7722
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7729
  call void @llvm.dbg.value(metadata i8* %10, metadata !7720, metadata !DIExpression()), !dbg !7722
  %11 = load i8, i8* %10, align 1, !dbg !7723
  %12 = icmp eq i8 %11, 0, !dbg !7724
  br i1 %12, label %13, label %5, !dbg !7725, !llvm.loop !7730

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !7732
  ret i8* %0, !dbg !7733
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7734 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7738, metadata !DIExpression()), !dbg !7742
  call void @llvm.dbg.value(metadata i8* %1, metadata !7739, metadata !DIExpression()), !dbg !7742
  call void @llvm.dbg.value(metadata i32 %2, metadata !7740, metadata !DIExpression()), !dbg !7742
  call void @llvm.dbg.value(metadata i8* %0, metadata !7741, metadata !DIExpression()), !dbg !7742
  %4 = icmp eq i32 %2, 0, !dbg !7743
  br i1 %4, label %22, label %5, !dbg !7744

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7738, metadata !DIExpression()), !dbg !7742
  call void @llvm.dbg.value(metadata i32 %7, metadata !7740, metadata !DIExpression()), !dbg !7742
  call void @llvm.dbg.value(metadata i8* %8, metadata !7739, metadata !DIExpression()), !dbg !7742
  %9 = load i8, i8* %8, align 1, !dbg !7745
  %10 = icmp eq i8 %9, 0, !dbg !7746
  br i1 %10, label %16, label %11, !dbg !7747

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !7748
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7750
  call void @llvm.dbg.value(metadata i8* %12, metadata !7739, metadata !DIExpression()), !dbg !7742
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7751
  call void @llvm.dbg.value(metadata i8* %13, metadata !7738, metadata !DIExpression()), !dbg !7742
  %14 = add i32 %7, -1, !dbg !7752
  call void @llvm.dbg.value(metadata i32 %14, metadata !7740, metadata !DIExpression()), !dbg !7742
  %15 = icmp eq i32 %14, 0, !dbg !7743
  br i1 %15, label %22, label %5, !dbg !7744, !llvm.loop !7753

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !7738, metadata !DIExpression()), !dbg !7742
  call void @llvm.dbg.value(metadata i32 %18, metadata !7740, metadata !DIExpression()), !dbg !7742
  store i8 0, i8* %17, align 1, !dbg !7755
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7757
  call void @llvm.dbg.value(metadata i8* %19, metadata !7738, metadata !DIExpression()), !dbg !7742
  %20 = add i32 %18, -1, !dbg !7758
  call void @llvm.dbg.value(metadata i32 %20, metadata !7740, metadata !DIExpression()), !dbg !7742
  %21 = icmp eq i32 %20, 0, !dbg !7759
  br i1 %21, label %22, label %16, !dbg !7760, !llvm.loop !7761

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !7763
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !7764 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7768, metadata !DIExpression()), !dbg !7771
  call void @llvm.dbg.value(metadata i32 %1, metadata !7769, metadata !DIExpression()), !dbg !7771
  call void @llvm.dbg.value(metadata i32 %1, metadata !7770, metadata !DIExpression()), !dbg !7771
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7772

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !7768, metadata !DIExpression()), !dbg !7771
  %6 = load i8, i8* %5, align 1, !dbg !7773
  %7 = icmp eq i8 %6, %3, !dbg !7774
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !7775
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7776
  call void @llvm.dbg.value(metadata i8* %10, metadata !7768, metadata !DIExpression()), !dbg !7771
  br i1 %9, label %11, label %4, !dbg !7775, !llvm.loop !7778

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !7780
  ret i8* %12, !dbg !7781
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !7782 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7784, metadata !DIExpression()), !dbg !7787
  call void @llvm.dbg.value(metadata i32 %1, metadata !7785, metadata !DIExpression()), !dbg !7787
  call void @llvm.dbg.value(metadata i8* null, metadata !7786, metadata !DIExpression()), !dbg !7787
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7788

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !7787
  call void @llvm.dbg.value(metadata i8* %6, metadata !7786, metadata !DIExpression()), !dbg !7787
  call void @llvm.dbg.value(metadata i8* %5, metadata !7784, metadata !DIExpression()), !dbg !7787
  %7 = load i8, i8* %5, align 1, !dbg !7789
  %8 = icmp eq i8 %7, %3, !dbg !7792
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !7793
  call void @llvm.dbg.value(metadata i8* %9, metadata !7786, metadata !DIExpression()), !dbg !7787
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7794
  call void @llvm.dbg.value(metadata i8* %10, metadata !7784, metadata !DIExpression()), !dbg !7787
  %11 = icmp eq i8 %7, 0, !dbg !7795
  br i1 %11, label %12, label %4, !dbg !7795, !llvm.loop !7796

12:                                               ; preds = %4
  ret i8* %9, !dbg !7798
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #6 !dbg !7799 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7803, metadata !DIExpression()), !dbg !7805
  call void @llvm.dbg.value(metadata i32 0, metadata !7804, metadata !DIExpression()), !dbg !7805
  %2 = load i8, i8* %0, align 1, !dbg !7806
  %3 = icmp eq i8 %2, 0, !dbg !7807
  br i1 %3, label %11, label %4, !dbg !7808

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7804, metadata !DIExpression()), !dbg !7805
  call void @llvm.dbg.value(metadata i8* %6, metadata !7803, metadata !DIExpression()), !dbg !7805
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7809
  call void @llvm.dbg.value(metadata i8* %7, metadata !7803, metadata !DIExpression()), !dbg !7805
  %8 = add i32 %5, 1, !dbg !7811
  call void @llvm.dbg.value(metadata i32 %8, metadata !7804, metadata !DIExpression()), !dbg !7805
  %9 = load i8, i8* %7, align 1, !dbg !7806
  %10 = icmp eq i8 %9, 0, !dbg !7807
  br i1 %10, label %11, label %4, !dbg !7808, !llvm.loop !7812

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !7805
  ret i32 %12, !dbg !7814
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !7815 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7819, metadata !DIExpression()), !dbg !7822
  call void @llvm.dbg.value(metadata i32 %1, metadata !7820, metadata !DIExpression()), !dbg !7822
  call void @llvm.dbg.value(metadata i32 0, metadata !7821, metadata !DIExpression()), !dbg !7822
  %3 = load i8, i8* %0, align 1, !dbg !7823
  %4 = icmp ne i8 %3, 0, !dbg !7824
  %5 = icmp ne i32 %1, 0, !dbg !7825
  %6 = and i1 %4, %5, !dbg !7825
  br i1 %6, label %7, label %16, !dbg !7826

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7821, metadata !DIExpression()), !dbg !7822
  call void @llvm.dbg.value(metadata i8* %9, metadata !7819, metadata !DIExpression()), !dbg !7822
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7827
  call void @llvm.dbg.value(metadata i8* %10, metadata !7819, metadata !DIExpression()), !dbg !7822
  %11 = add nuw i32 %8, 1, !dbg !7829
  call void @llvm.dbg.value(metadata i32 %11, metadata !7821, metadata !DIExpression()), !dbg !7822
  %12 = load i8, i8* %10, align 1, !dbg !7823
  %13 = icmp ne i8 %12, 0, !dbg !7824
  %14 = icmp ult i32 %11, %1, !dbg !7825
  %15 = select i1 %13, i1 %14, i1 false, !dbg !7825
  br i1 %15, label %7, label %16, !dbg !7826, !llvm.loop !7830

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !7822
  ret i32 %17, !dbg !7832
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #6 !dbg !7833 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7837, metadata !DIExpression()), !dbg !7839
  call void @llvm.dbg.value(metadata i8* %1, metadata !7838, metadata !DIExpression()), !dbg !7839
  %3 = load i8, i8* %0, align 1, !dbg !7840
  %4 = load i8, i8* %1, align 1, !dbg !7841
  %5 = icmp ne i8 %3, %4, !dbg !7842
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !7843
  br i1 %7, label %18, label %8, !dbg !7843

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7838, metadata !DIExpression()), !dbg !7839
  call void @llvm.dbg.value(metadata i8* %10, metadata !7837, metadata !DIExpression()), !dbg !7839
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7844
  call void @llvm.dbg.value(metadata i8* %11, metadata !7837, metadata !DIExpression()), !dbg !7839
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7846
  call void @llvm.dbg.value(metadata i8* %12, metadata !7838, metadata !DIExpression()), !dbg !7839
  %13 = load i8, i8* %11, align 1, !dbg !7840
  %14 = load i8, i8* %12, align 1, !dbg !7841
  %15 = icmp ne i8 %13, %14, !dbg !7842
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !7843
  br i1 %17, label %18, label %8, !dbg !7843, !llvm.loop !7847

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !7840
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !7841
  %21 = zext i8 %19 to i32, !dbg !7850
  %22 = zext i8 %20 to i32, !dbg !7851
  %23 = sub nsw i32 %21, %22, !dbg !7852
  ret i32 %23, !dbg !7853
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #6 !dbg !7854 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7858, metadata !DIExpression()), !dbg !7861
  call void @llvm.dbg.value(metadata i8* %1, metadata !7859, metadata !DIExpression()), !dbg !7861
  call void @llvm.dbg.value(metadata i32 %2, metadata !7860, metadata !DIExpression()), !dbg !7861
  %4 = icmp eq i32 %2, 0, !dbg !7862
  br i1 %4, label %23, label %5, !dbg !7862

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !7860, metadata !DIExpression()), !dbg !7861
  call void @llvm.dbg.value(metadata i8* %7, metadata !7859, metadata !DIExpression()), !dbg !7861
  call void @llvm.dbg.value(metadata i8* %8, metadata !7858, metadata !DIExpression()), !dbg !7861
  %9 = load i8, i8* %8, align 1, !dbg !7863
  %10 = load i8, i8* %7, align 1, !dbg !7864
  %11 = icmp ne i8 %9, %10, !dbg !7865
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !7866
  br i1 %13, label %19, label %14, !dbg !7866

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7867
  call void @llvm.dbg.value(metadata i8* %15, metadata !7858, metadata !DIExpression()), !dbg !7861
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7869
  call void @llvm.dbg.value(metadata i8* %16, metadata !7859, metadata !DIExpression()), !dbg !7861
  %17 = add i32 %6, -1, !dbg !7870
  call void @llvm.dbg.value(metadata i32 %17, metadata !7860, metadata !DIExpression()), !dbg !7861
  %18 = icmp eq i32 %17, 0, !dbg !7862
  br i1 %18, label %23, label %5, !dbg !7862, !llvm.loop !7871

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !7874
  %21 = zext i8 %10 to i32, !dbg !7875
  %22 = sub nsw i32 %20, %21, !dbg !7876
  br label %23, !dbg !7877

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !7877
  ret i32 %24, !dbg !7878
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #13 !dbg !7879 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7883, metadata !DIExpression()), !dbg !7888
  call void @llvm.dbg.value(metadata i8* %1, metadata !7884, metadata !DIExpression()), !dbg !7888
  call void @llvm.dbg.value(metadata i8** %2, metadata !7885, metadata !DIExpression()), !dbg !7888
  %4 = icmp eq i8* %0, null, !dbg !7889
  br i1 %4, label %5, label %7, !dbg !7889

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !7890
  br label %7, !dbg !7889

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !7889
  call void @llvm.dbg.value(metadata i8* %8, metadata !7886, metadata !DIExpression()), !dbg !7888
  %9 = load i8, i8* %8, align 1, !dbg !7891
  %10 = icmp eq i8 %9, 0, !dbg !7891
  br i1 %10, label %33, label %11, !dbg !7892

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7886, metadata !DIExpression()), !dbg !7888
  %14 = zext i8 %12 to i32, !dbg !7891
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #24, !dbg !7893
  %16 = icmp eq i8* %15, null, !dbg !7892
  br i1 %16, label %21, label %17, !dbg !7894

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7895
  call void @llvm.dbg.value(metadata i8* %18, metadata !7886, metadata !DIExpression()), !dbg !7888
  %19 = load i8, i8* %18, align 1, !dbg !7891
  %20 = icmp eq i8 %19, 0, !dbg !7891
  br i1 %20, label %33, label %11, !dbg !7892, !llvm.loop !7897

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !7887, metadata !DIExpression()), !dbg !7888
  %24 = zext i8 %22 to i32, !dbg !7899
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #24, !dbg !7900
  %26 = icmp eq i8* %25, null, !dbg !7901
  br i1 %26, label %27, label %31, !dbg !7902

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7903
  call void @llvm.dbg.value(metadata i8* %28, metadata !7887, metadata !DIExpression()), !dbg !7888
  %29 = load i8, i8* %28, align 1, !dbg !7899
  %30 = icmp eq i8 %29, 0, !dbg !7899
  br i1 %30, label %33, label %21, !dbg !7905, !llvm.loop !7906

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !7908
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7911
  br label %33, !dbg !7912

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !7888
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !7888
  store i8* %34, i8** %2, align 4, !dbg !7888
  ret i8* %35, !dbg !7913
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !7914 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7916, metadata !DIExpression()), !dbg !7918
  call void @llvm.dbg.value(metadata i8* %1, metadata !7917, metadata !DIExpression()), !dbg !7918
  %3 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !7919
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !7920
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #24, !dbg !7921
  ret i8* %0, !dbg !7922
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7923 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7925, metadata !DIExpression()), !dbg !7930
  call void @llvm.dbg.value(metadata i8* %1, metadata !7926, metadata !DIExpression()), !dbg !7930
  call void @llvm.dbg.value(metadata i32 %2, metadata !7927, metadata !DIExpression()), !dbg !7930
  call void @llvm.dbg.value(metadata i8* %0, metadata !7928, metadata !DIExpression()), !dbg !7930
  %4 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !7931
  call void @llvm.dbg.value(metadata i32 %4, metadata !7929, metadata !DIExpression()), !dbg !7930
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !7932
  call void @llvm.dbg.value(metadata i8* %5, metadata !7925, metadata !DIExpression()), !dbg !7930
  call void @llvm.dbg.value(metadata i8* %1, metadata !7926, metadata !DIExpression()), !dbg !7930
  call void @llvm.dbg.value(metadata i32 %2, metadata !7927, metadata !DIExpression()), !dbg !7930
  call void @llvm.dbg.value(metadata i32 %2, metadata !7927, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7930
  %6 = icmp eq i32 %2, 0, !dbg !7933
  br i1 %6, label %18, label %7, !dbg !7934

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !7935
  call void @llvm.dbg.value(metadata i8* %9, metadata !7925, metadata !DIExpression()), !dbg !7930
  call void @llvm.dbg.value(metadata i8* %10, metadata !7926, metadata !DIExpression()), !dbg !7930
  %12 = load i8, i8* %10, align 1, !dbg !7936
  %13 = icmp eq i8 %12, 0, !dbg !7937
  br i1 %13, label %18, label %14, !dbg !7938

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7939
  call void @llvm.dbg.value(metadata i8* %15, metadata !7926, metadata !DIExpression()), !dbg !7930
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7941
  call void @llvm.dbg.value(metadata i8* %16, metadata !7925, metadata !DIExpression()), !dbg !7930
  store i8 %12, i8* %9, align 1, !dbg !7942
  call void @llvm.dbg.value(metadata i32 %11, metadata !7927, metadata !DIExpression()), !dbg !7930
  call void @llvm.dbg.value(metadata i32 %11, metadata !7927, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7930
  %17 = icmp eq i32 %11, 0, !dbg !7933
  br i1 %17, label %18, label %7, !dbg !7934, !llvm.loop !7943

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !7930
  store i8 0, i8* %19, align 1, !dbg !7945
  ret i8* %0, !dbg !7946
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #6 !dbg !7947 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7951, metadata !DIExpression()), !dbg !7956
  call void @llvm.dbg.value(metadata i8* %1, metadata !7952, metadata !DIExpression()), !dbg !7956
  call void @llvm.dbg.value(metadata i32 %2, metadata !7953, metadata !DIExpression()), !dbg !7956
  call void @llvm.dbg.value(metadata i8* %0, metadata !7954, metadata !DIExpression()), !dbg !7956
  call void @llvm.dbg.value(metadata i8* %1, metadata !7955, metadata !DIExpression()), !dbg !7956
  %4 = icmp eq i32 %2, 0, !dbg !7957
  br i1 %4, label %31, label %5, !dbg !7959

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7955, metadata !DIExpression()), !dbg !7956
  call void @llvm.dbg.value(metadata i8* %0, metadata !7954, metadata !DIExpression()), !dbg !7956
  call void @llvm.dbg.value(metadata i32 %2, metadata !7953, metadata !DIExpression()), !dbg !7956
  %6 = add i32 %2, -1, !dbg !7960
  call void @llvm.dbg.value(metadata i32 %6, metadata !7953, metadata !DIExpression()), !dbg !7956
  %7 = icmp eq i32 %6, 0, !dbg !7961
  br i1 %7, label %23, label %8, !dbg !7962

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !7963
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !7963
  br label %11, !dbg !7963

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7955, metadata !DIExpression()), !dbg !7956
  call void @llvm.dbg.value(metadata i8* %14, metadata !7954, metadata !DIExpression()), !dbg !7956
  %15 = load i8, i8* %14, align 1, !dbg !7964
  %16 = load i8, i8* %13, align 1, !dbg !7965
  %17 = icmp eq i8 %15, %16, !dbg !7966
  br i1 %17, label %18, label %23, !dbg !7963

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !7967
  call void @llvm.dbg.value(metadata i8* %19, metadata !7954, metadata !DIExpression()), !dbg !7956
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7969
  call void @llvm.dbg.value(metadata i8* %20, metadata !7955, metadata !DIExpression()), !dbg !7956
  call void @llvm.dbg.value(metadata i32 %12, metadata !7953, metadata !DIExpression()), !dbg !7956
  %21 = add i32 %12, -1, !dbg !7960
  call void @llvm.dbg.value(metadata i32 %21, metadata !7953, metadata !DIExpression()), !dbg !7956
  %22 = icmp eq i32 %21, 0, !dbg !7961
  br i1 %22, label %23, label %11, !dbg !7962, !llvm.loop !7970

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !7956
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !7956
  %26 = load i8, i8* %24, align 1, !dbg !7972
  %27 = zext i8 %26 to i32, !dbg !7972
  %28 = load i8, i8* %25, align 1, !dbg !7973
  %29 = zext i8 %28 to i32, !dbg !7973
  %30 = sub nsw i32 %27, %29, !dbg !7974
  br label %31, !dbg !7975

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !7956
  ret i32 %32, !dbg !7976
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7977 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7981, metadata !DIExpression()), !dbg !7986
  call void @llvm.dbg.value(metadata i8* %1, metadata !7982, metadata !DIExpression()), !dbg !7986
  call void @llvm.dbg.value(metadata i32 %2, metadata !7983, metadata !DIExpression()), !dbg !7986
  call void @llvm.dbg.value(metadata i8* %0, metadata !7984, metadata !DIExpression()), !dbg !7986
  call void @llvm.dbg.value(metadata i8* %1, metadata !7985, metadata !DIExpression()), !dbg !7986
  %4 = ptrtoint i8* %0 to i32, !dbg !7987
  %5 = ptrtoint i8* %1 to i32, !dbg !7987
  %6 = sub i32 %4, %5, !dbg !7987
  %7 = icmp ult i32 %6, %2, !dbg !7989
  br i1 %7, label %10, label %8, !dbg !7990

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7985, metadata !DIExpression()), !dbg !7986
  call void @llvm.dbg.value(metadata i8* %0, metadata !7984, metadata !DIExpression()), !dbg !7986
  call void @llvm.dbg.value(metadata i32 %2, metadata !7983, metadata !DIExpression()), !dbg !7986
  %9 = icmp eq i32 %2, 0, !dbg !7991
  br i1 %9, label %26, label %17, !dbg !7993

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !7983, metadata !DIExpression()), !dbg !7986
  %12 = add i32 %11, -1, !dbg !7994
  call void @llvm.dbg.value(metadata i32 %12, metadata !7983, metadata !DIExpression()), !dbg !7986
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !7997
  %14 = load i8, i8* %13, align 1, !dbg !7997
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !7998
  store i8 %14, i8* %15, align 1, !dbg !7999
  %16 = icmp eq i32 %12, 0, !dbg !8000
  br i1 %16, label %26, label %10, !dbg !8001, !llvm.loop !8002

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !7985, metadata !DIExpression()), !dbg !7986
  call void @llvm.dbg.value(metadata i8* %19, metadata !7984, metadata !DIExpression()), !dbg !7986
  call void @llvm.dbg.value(metadata i32 %20, metadata !7983, metadata !DIExpression()), !dbg !7986
  %21 = load i8, i8* %18, align 1, !dbg !8004
  store i8 %21, i8* %19, align 1, !dbg !8006
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !8007
  call void @llvm.dbg.value(metadata i8* %22, metadata !7984, metadata !DIExpression()), !dbg !7986
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !8008
  call void @llvm.dbg.value(metadata i8* %23, metadata !7985, metadata !DIExpression()), !dbg !7986
  %24 = add i32 %20, -1, !dbg !8009
  call void @llvm.dbg.value(metadata i32 %24, metadata !7983, metadata !DIExpression()), !dbg !7986
  %25 = icmp eq i32 %24, 0, !dbg !7991
  br i1 %25, label %26, label %17, !dbg !7993, !llvm.loop !8010

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !8012
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !8013 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8019, metadata !DIExpression()), !dbg !8024
  call void @llvm.dbg.value(metadata i8* %1, metadata !8020, metadata !DIExpression()), !dbg !8024
  call void @llvm.dbg.value(metadata i32 %2, metadata !8021, metadata !DIExpression()), !dbg !8024
  call void @llvm.dbg.value(metadata i8* %0, metadata !8022, metadata !DIExpression()), !dbg !8024
  call void @llvm.dbg.value(metadata i8* %1, metadata !8023, metadata !DIExpression()), !dbg !8024
  %4 = icmp eq i32 %2, 0, !dbg !8025
  br i1 %4, label %14, label %5, !dbg !8026

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !8023, metadata !DIExpression()), !dbg !8024
  call void @llvm.dbg.value(metadata i8* %7, metadata !8022, metadata !DIExpression()), !dbg !8024
  call void @llvm.dbg.value(metadata i32 %8, metadata !8021, metadata !DIExpression()), !dbg !8024
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8027
  call void @llvm.dbg.value(metadata i8* %9, metadata !8023, metadata !DIExpression()), !dbg !8024
  %10 = load i8, i8* %6, align 1, !dbg !8029
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8030
  call void @llvm.dbg.value(metadata i8* %11, metadata !8022, metadata !DIExpression()), !dbg !8024
  store i8 %10, i8* %7, align 1, !dbg !8031
  %12 = add i32 %8, -1, !dbg !8032
  call void @llvm.dbg.value(metadata i32 %12, metadata !8021, metadata !DIExpression()), !dbg !8024
  %13 = icmp eq i32 %12, 0, !dbg !8025
  br i1 %13, label %14, label %5, !dbg !8026, !llvm.loop !8033

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !8035
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #18 !dbg !8036 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8040, metadata !DIExpression()), !dbg !8045
  call void @llvm.dbg.value(metadata i32 %1, metadata !8041, metadata !DIExpression()), !dbg !8045
  call void @llvm.dbg.value(metadata i32 %2, metadata !8042, metadata !DIExpression()), !dbg !8045
  call void @llvm.dbg.value(metadata i8* %0, metadata !8043, metadata !DIExpression()), !dbg !8045
  %4 = trunc i32 %1 to i8, !dbg !8046
  call void @llvm.dbg.value(metadata i8 %4, metadata !8044, metadata !DIExpression()), !dbg !8045
  call void @llvm.dbg.value(metadata i32 %2, metadata !8042, metadata !DIExpression()), !dbg !8045
  call void @llvm.dbg.value(metadata i8* %0, metadata !8043, metadata !DIExpression()), !dbg !8045
  %5 = icmp eq i32 %2, 0, !dbg !8047
  br i1 %5, label %12, label %6, !dbg !8048

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !8042, metadata !DIExpression()), !dbg !8045
  call void @llvm.dbg.value(metadata i8* %8, metadata !8043, metadata !DIExpression()), !dbg !8045
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8049
  call void @llvm.dbg.value(metadata i8* %9, metadata !8043, metadata !DIExpression()), !dbg !8045
  store i8 %4, i8* %8, align 1, !dbg !8051
  %10 = add i32 %7, -1, !dbg !8052
  call void @llvm.dbg.value(metadata i32 %10, metadata !8042, metadata !DIExpression()), !dbg !8045
  %11 = icmp eq i32 %10, 0, !dbg !8047
  br i1 %11, label %12, label %6, !dbg !8048, !llvm.loop !8053

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !8055
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #6 !dbg !8056 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8060, metadata !DIExpression()), !dbg !8066
  call void @llvm.dbg.value(metadata i32 %1, metadata !8061, metadata !DIExpression()), !dbg !8066
  call void @llvm.dbg.value(metadata i32 %2, metadata !8062, metadata !DIExpression()), !dbg !8066
  %4 = icmp eq i32 %2, 0, !dbg !8067
  br i1 %4, label %17, label %5, !dbg !8068

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !8069

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !8070
  call void @llvm.dbg.value(metadata i8* %9, metadata !8063, metadata !DIExpression()), !dbg !8070
  call void @llvm.dbg.value(metadata i32 %8, metadata !8062, metadata !DIExpression()), !dbg !8066
  call void @llvm.dbg.value(metadata i8* %9, metadata !8063, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8070
  %10 = load i8, i8* %9, align 1, !dbg !8071
  %11 = icmp eq i8 %10, %6, !dbg !8074
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !8075
  call void @llvm.dbg.value(metadata i8* %12, metadata !8063, metadata !DIExpression()), !dbg !8070
  call void @llvm.dbg.value(metadata i32 %13, metadata !8062, metadata !DIExpression()), !dbg !8066
  br i1 %15, label %16, label %7, !dbg !8075, !llvm.loop !8076

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !8078

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !8066
  ret i8* %19, !dbg !8079
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #7 !dbg !8080 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !8082, metadata !DIExpression()), !dbg !8083
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !8084
  ret void, !dbg !8085
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #4 !dbg !8086 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8088, metadata !DIExpression()), !dbg !8089
  ret i32 -1, !dbg !8090
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8091 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8095, metadata !DIExpression()), !dbg !8097
  call void @llvm.dbg.value(metadata i32* %1, metadata !8096, metadata !DIExpression()), !dbg !8097
  %3 = ptrtoint i32* %1 to i32, !dbg !8098
  %4 = and i32 %3, -2, !dbg !8098
  %5 = icmp eq i32 %4, 2, !dbg !8098
  br i1 %5, label %6, label %9, !dbg !8098

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8099
  %8 = tail call i32 %7(i32 noundef %0) #25, !dbg !8099
  br label %9, !dbg !8100

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !8100
  ret i32 %10, !dbg !8101
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8102 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8104, metadata !DIExpression()), !dbg !8106
  call void @llvm.dbg.value(metadata i32* %1, metadata !8105, metadata !DIExpression()), !dbg !8106
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !8107
  ret i32 %3, !dbg !8108
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !8109 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8112, metadata !DIExpression()), !dbg !8114
  call void @llvm.dbg.value(metadata i32* %1, metadata !8113, metadata !DIExpression()), !dbg !8114
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8115, !srcloc !8117
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !8118
  ret i32 %3, !dbg !8119
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !8120 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8125, metadata !DIExpression()), !dbg !8129
  call void @llvm.dbg.value(metadata i32* %1, metadata !8126, metadata !DIExpression()), !dbg !8129
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !8130
  call void @llvm.dbg.value(metadata i32 %3, metadata !8127, metadata !DIExpression()), !dbg !8129
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #24, !dbg !8131
  call void @llvm.dbg.value(metadata i32 %4, metadata !8128, metadata !DIExpression()), !dbg !8129
  %5 = icmp ne i32 %3, %4, !dbg !8132
  %6 = sext i1 %5 to i32, !dbg !8133
  ret i32 %6, !dbg !8134
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !8135 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8139, metadata !DIExpression()), !dbg !8143
  call void @llvm.dbg.value(metadata i32 %1, metadata !8140, metadata !DIExpression()), !dbg !8143
  call void @llvm.dbg.value(metadata i32 %2, metadata !8141, metadata !DIExpression()), !dbg !8143
  call void @llvm.dbg.value(metadata i32* %3, metadata !8142, metadata !DIExpression()), !dbg !8143
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !8144
  ret i32 %5, !dbg !8145
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !8146 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8148, metadata !DIExpression()), !dbg !8152
  call void @llvm.dbg.value(metadata i32 %1, metadata !8149, metadata !DIExpression()), !dbg !8152
  call void @llvm.dbg.value(metadata i32 %2, metadata !8150, metadata !DIExpression()), !dbg !8152
  call void @llvm.dbg.value(metadata i32* %3, metadata !8151, metadata !DIExpression()), !dbg !8152
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8153, !srcloc !8155
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !8156
  ret i32 %5, !dbg !8157
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !8158 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8160, metadata !DIExpression()), !dbg !8168
  call void @llvm.dbg.value(metadata i32 %1, metadata !8161, metadata !DIExpression()), !dbg !8168
  call void @llvm.dbg.value(metadata i32 %2, metadata !8162, metadata !DIExpression()), !dbg !8168
  call void @llvm.dbg.value(metadata i32* %3, metadata !8163, metadata !DIExpression()), !dbg !8168
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !8169
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !8171
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !8171
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !8171
  br i1 %11, label %33, label %12, !dbg !8171

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !8168
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !8168
  call void @llvm.dbg.value(metadata i8* %14, metadata !8166, metadata !DIExpression()), !dbg !8168
  call void @llvm.dbg.value(metadata i32 %13, metadata !8164, metadata !DIExpression()), !dbg !8168
  call void @llvm.dbg.value(metadata i32 %1, metadata !8165, metadata !DIExpression()), !dbg !8168
  br label %15, !dbg !8172

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !8174
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !8168
  call void @llvm.dbg.value(metadata i8* %17, metadata !8166, metadata !DIExpression()), !dbg !8168
  call void @llvm.dbg.value(metadata i32 %16, metadata !8165, metadata !DIExpression()), !dbg !8168
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8175
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8178
  call void @llvm.dbg.value(metadata i8* %19, metadata !8166, metadata !DIExpression()), !dbg !8168
  %20 = load i8, i8* %17, align 1, !dbg !8179
  %21 = zext i8 %20 to i32, !dbg !8180
  %22 = tail call i32 %18(i32 noundef %21) #25, !dbg !8175
  %23 = icmp eq i32 %22, -1, !dbg !8181
  br i1 %23, label %30, label %24, !dbg !8182

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !8183
  call void @llvm.dbg.value(metadata i32 %25, metadata !8165, metadata !DIExpression()), !dbg !8168
  %26 = icmp eq i32 %25, 0, !dbg !8184
  br i1 %26, label %27, label %15, !dbg !8185, !llvm.loop !8186

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !8188
  call void @llvm.dbg.value(metadata i32 %28, metadata !8164, metadata !DIExpression()), !dbg !8168
  %29 = icmp eq i32 %28, 0, !dbg !8189
  br i1 %29, label %30, label %12, !dbg !8190, !llvm.loop !8191

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !8168
  call void @llvm.dbg.value(metadata i32 %31, metadata !8164, metadata !DIExpression()), !dbg !8168
  call void @llvm.dbg.label(metadata !8167), !dbg !8194
  %32 = sub i32 %2, %31, !dbg !8195
  br label %33, !dbg !8196

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !8168
  ret i32 %34, !dbg !8197
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !8198 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8202, metadata !DIExpression()), !dbg !8203
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !8204
  %3 = icmp eq i32 %2, -1, !dbg !8206
  br i1 %3, label %8, label %4, !dbg !8207

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !8208
  %6 = icmp eq i32 %5, -1, !dbg !8209
  %7 = sext i1 %6 to i32, !dbg !8208
  br label %8, !dbg !8210

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !8203
  ret i32 %9, !dbg !8211
}

; Function Attrs: noinline nounwind optsize
define dso_local void @end_report() local_unnamed_addr #1 !dbg !8212 {
  %1 = load i32, i32* @test_status, align 4, !dbg !8213
  %2 = icmp eq i32 %1, 0, !dbg !8213
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.89, i32 0, i32 0)) #25, !dbg !8215
  %3 = select i1 %2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3.90, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2.91, i32 0, i32 0)
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1.92, i32 0, i32 0), i8* noundef %3) #25, !dbg !8215
  ret void, !dbg !8216
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @z_impl_z_test_1cpu_start() local_unnamed_addr #4 !dbg !8217 {
  ret void, !dbg !8218
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @z_impl_z_test_1cpu_stop() local_unnamed_addr #4 !dbg !8219 {
  ret void, !dbg !8220
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_skip_failed_assumption() local_unnamed_addr #1 !dbg !8221 {
  store i1 true, i1* @current_test_failed_assumption, align 1, !dbg !8222
  tail call void @ztest_test_skip() #24, !dbg !8225
  ret void, !dbg !8226
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_test_skip() local_unnamed_addr #1 !dbg !8227 {
  %1 = load i32, i32* @phase, align 4, !dbg !8228
  switch i32 %1, label %4 [
    i32 0, label %2
    i32 1, label %3
    i32 2, label %3
  ], !dbg !8229

2:                                                ; preds = %0
  store i32 4, i32* @test_result, align 4, !dbg !8230
  br label %6, !dbg !8232

3:                                                ; preds = %0, %0
  store i32 3, i32* @test_result, align 4, !dbg !8233
  tail call fastcc void @test_finalize() #24, !dbg !8234
  br label %6, !dbg !8235

4:                                                ; preds = %0
  %5 = tail call fastcc i8* @get_friendly_phase_name(i32 noundef %1) #24, !dbg !8236
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.6.93, i32 0, i32 0), i8* noundef %5) #25, !dbg !8237
  store i32 2, i32* @test_status, align 4, !dbg !8238
  br label %6, !dbg !8239

6:                                                ; preds = %4, %3, %2
  ret void, !dbg !8240
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @test_finalize() unnamed_addr #1 !dbg !8241 {
  tail call fastcc void @k_thread_abort.101(%struct.k_thread* noundef nonnull @ztest_thread) #24, !dbg !8242
  %1 = tail call fastcc %struct.k_thread* @k_current_get.102() #26, !dbg !8245
  tail call fastcc void @k_thread_abort.101(%struct.k_thread* noundef %1) #24, !dbg !8246
  ret void, !dbg !8247
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @get_friendly_phase_name(i32 noundef %0) unnamed_addr #4 !dbg !8248 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8252, metadata !DIExpression()), !dbg !8253
  %2 = icmp ult i32 %0, 6, !dbg !8254
  br i1 %2, label %3, label %6, !dbg !8254

3:                                                ; preds = %1
  %4 = getelementptr inbounds [6 x i8*], [6 x i8*]* @switch.table.get_friendly_phase_name, i32 0, i32 %0, !dbg !8254
  %5 = load i8*, i8** %4, align 4, !dbg !8254
  br label %6, !dbg !8254

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.16.94, i32 0, i32 0), %1 ], !dbg !8255
  ret i8* %7, !dbg !8257
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.101(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !8258 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8264, metadata !DIExpression()), !dbg !8265
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8266, !srcloc !8268
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !8269
  ret void, !dbg !8270
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.102() unnamed_addr #11 !dbg !8271 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.103() #26, !dbg !8274
  ret %struct.k_thread* %1, !dbg !8275
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.103() unnamed_addr #11 !dbg !8276 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8277, !srcloc !8279
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !8280
  ret %struct.k_thread* %1, !dbg !8281
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_test_fail() local_unnamed_addr #1 !dbg !8282 {
  %1 = load i32, i32* @phase, align 4, !dbg !8283
  switch i32 %1, label %4 [
    i32 0, label %2
    i32 1, label %3
    i32 2, label %3
  ], !dbg !8284

2:                                                ; preds = %0
  store i32 5, i32* @test_result, align 4, !dbg !8285
  br label %6, !dbg !8287

3:                                                ; preds = %0, %0
  store i32 2, i32* @test_result, align 4, !dbg !8288
  tail call fastcc void @test_finalize() #24, !dbg !8289
  br label %6, !dbg !8290

4:                                                ; preds = %0
  %5 = tail call fastcc i8* @get_friendly_phase_name(i32 noundef %1) #24, !dbg !8291
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.4.104, i32 0, i32 0), i8* noundef %5) #25, !dbg !8292
  store i32 2, i32* @test_status, align 4, !dbg !8293
  br label %6, !dbg !8294

6:                                                ; preds = %4, %3, %2
  ret void, !dbg !8295
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_test_pass() local_unnamed_addr #1 !dbg !8296 {
  %1 = load i32, i32* @phase, align 4, !dbg !8297
  %2 = icmp eq i32 %1, 2, !dbg !8298
  br i1 %2, label %3, label %4, !dbg !8298

3:                                                ; preds = %0
  store i32 1, i32* @test_result, align 4, !dbg !8299
  br label %8, !dbg !8301

4:                                                ; preds = %0
  %5 = tail call fastcc i8* @get_friendly_phase_name(i32 noundef %1) #24, !dbg !8302
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.5.105, i32 0, i32 0), i8* noundef %5) #25, !dbg !8303
  store i32 2, i32* @test_status, align 4, !dbg !8304
  %6 = load i32, i32* @phase, align 4, !dbg !8305
  %7 = icmp eq i32 %6, 1, !dbg !8307
  br i1 %7, label %8, label %9, !dbg !8308

8:                                                ; preds = %4, %3
  tail call fastcc void @test_finalize() #24, !dbg !8309
  br label %9, !dbg !8310

9:                                                ; preds = %8, %4
  ret void, !dbg !8310
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_simple_1cpu_before(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !8311 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8313, metadata !DIExpression()), !dbg !8314
  tail call fastcc void @z_test_1cpu_start() #24, !dbg !8315
  ret void, !dbg !8316
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_test_1cpu_start() unnamed_addr #1 !dbg !8317 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8319, !srcloc !8321
  ret void, !dbg !8322
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_simple_1cpu_after(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !8323 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8325, metadata !DIExpression()), !dbg !8326
  tail call fastcc void @z_test_1cpu_stop() #24, !dbg !8327
  ret void, !dbg !8328
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_test_1cpu_stop() unnamed_addr #1 !dbg !8329 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8330, !srcloc !8332
  ret void, !dbg !8333
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %0, %struct.ztest_unit_test* noundef readonly %1) local_unnamed_addr #1 !dbg !8334 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8355, metadata !DIExpression()), !dbg !8358
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %1, metadata !8356, metadata !DIExpression()), !dbg !8358
  %3 = icmp eq %struct.ztest_unit_test* %1, null, !dbg !8359
  %4 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %1, i32 1, !dbg !8360
  %5 = select i1 %3, %struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), %struct.ztest_unit_test* %4, !dbg !8360
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %5, metadata !8357, metadata !DIExpression()), !dbg !8358
  %6 = icmp ult %struct.ztest_unit_test* %5, getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0), !dbg !8361
  br i1 %6, label %7, label %16, !dbg !8364

7:                                                ; preds = %2, %13
  %8 = phi %struct.ztest_unit_test* [ %14, %13 ], [ %5, %2 ]
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %8, metadata !8357, metadata !DIExpression()), !dbg !8358
  %9 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %8, i32 0, i32 0, !dbg !8365
  %10 = load i8*, i8** %9, align 4, !dbg !8365
  %11 = tail call i32 @strcmp(i8* noundef %0, i8* noundef %10) #25, !dbg !8368
  %12 = icmp eq i32 %11, 0, !dbg !8369
  br i1 %12, label %16, label %13, !dbg !8370

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %8, i32 1, !dbg !8371
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %14, metadata !8357, metadata !DIExpression()), !dbg !8358
  %15 = icmp ult %struct.ztest_unit_test* %14, getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0), !dbg !8361
  br i1 %15, label %7, label %16, !dbg !8364, !llvm.loop !8372

16:                                               ; preds = %7, %13, %2
  %17 = phi %struct.ztest_unit_test* [ null, %2 ], [ null, %13 ], [ %8, %7 ], !dbg !8358
  ret %struct.ztest_unit_test* %17, !dbg !8374
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_ztest_run_test_suite(i8* noundef %0) local_unnamed_addr #1 !dbg !8375 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8377, metadata !DIExpression()), !dbg !8378
  %2 = tail call fastcc %struct.ztest_suite_node* @ztest_find_test_suite(i8* noundef %0) #24, !dbg !8379
  %3 = tail call fastcc i32 @z_ztest_run_test_suite_ptr(%struct.ztest_suite_node* noundef %2) #24, !dbg !8380
  ret i32 %3, !dbg !8381
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.ztest_suite_node* @ztest_find_test_suite(i8* noundef %0) unnamed_addr #1 !dbg !8382 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8403, metadata !DIExpression()), !dbg !8405
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), metadata !8404, metadata !DIExpression()), !dbg !8405
  br i1 icmp ult (%struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0)), label %2, label %11, !dbg !8406

2:                                                ; preds = %1, %8
  %3 = phi %struct.ztest_suite_node* [ %9, %8 ], [ getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %3, metadata !8404, metadata !DIExpression()), !dbg !8405
  %4 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %3, i32 0, i32 0, !dbg !8408
  %5 = load i8*, i8** %4, align 4, !dbg !8408
  %6 = tail call i32 @strcmp(i8* noundef %0, i8* noundef %5) #25, !dbg !8412
  %7 = icmp eq i32 %6, 0, !dbg !8413
  br i1 %7, label %11, label %8, !dbg !8414

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %3, i32 1, !dbg !8415
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %9, metadata !8404, metadata !DIExpression()), !dbg !8405
  %10 = icmp ult %struct.ztest_suite_node* %9, getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0), !dbg !8416
  br i1 %10, label %2, label %11, !dbg !8406, !llvm.loop !8417

11:                                               ; preds = %2, %8, %1
  %12 = phi %struct.ztest_suite_node* [ null, %1 ], [ null, %8 ], [ %3, %2 ], !dbg !8405
  ret %struct.ztest_suite_node* %12, !dbg !8419
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_ztest_run_test_suite_ptr(%struct.ztest_suite_node* noundef %0) unnamed_addr #1 !dbg !8420 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8424, metadata !DIExpression()), !dbg !8431
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8425, metadata !DIExpression()), !dbg !8431
  call void @llvm.dbg.value(metadata i8* null, metadata !8426, metadata !DIExpression()), !dbg !8431
  call void @llvm.dbg.value(metadata i32 0, metadata !8427, metadata !DIExpression()), !dbg !8431
  call void @llvm.dbg.value(metadata i32 0, metadata !8428, metadata !DIExpression()), !dbg !8431
  %2 = icmp eq %struct.ztest_suite_node* %0, null, !dbg !8432
  br i1 %2, label %3, label %4, !dbg !8434

3:                                                ; preds = %1
  store i32 2, i32* @test_status, align 4, !dbg !8435
  br label %68, !dbg !8437

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 0, !dbg !8438
  %6 = load i8*, i8** %5, align 4, !dbg !8438
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.17.106, i32 0, i32 0), i8* noundef %6) #25, !dbg !8438
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.89, i32 0, i32 0)) #25, !dbg !8438
  store i1 false, i1* @current_test_failed_assumption, align 1, !dbg !8440
  store i32 0, i32* @test_result, align 4, !dbg !8441
  store i32 0, i32* @phase, align 4, !dbg !8442
  %7 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 1, !dbg !8443
  %8 = load i8* ()*, i8* ()** %7, align 4, !dbg !8443
  %9 = icmp eq i8* ()* %8, null, !dbg !8445
  br i1 %9, label %12, label %10, !dbg !8446

10:                                               ; preds = %4
  %11 = tail call i8* %8() #25, !dbg !8447
  call void @llvm.dbg.value(metadata i8* %11, metadata !8426, metadata !DIExpression()), !dbg !8431
  br label %12, !dbg !8449

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ null, %4 ], !dbg !8431
  call void @llvm.dbg.value(metadata i8* %13, metadata !8426, metadata !DIExpression()), !dbg !8431
  call void @llvm.dbg.value(metadata i32 0, metadata !8429, metadata !DIExpression()), !dbg !8450
  call void @llvm.dbg.value(metadata i32 undef, metadata !8429, metadata !DIExpression()), !dbg !8450
  call void @llvm.dbg.value(metadata i32 0, metadata !8427, metadata !DIExpression()), !dbg !8431
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8425, metadata !DIExpression()), !dbg !8431
  %14 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** getelementptr inbounds (%struct.ztest_arch_api, %struct.ztest_arch_api* @ztest_api, i32 0, i32 2), align 4
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8425, metadata !DIExpression()), !dbg !8431
  br label %15, !dbg !8451

15:                                               ; preds = %12, %49
  %16 = phi %struct.ztest_unit_test* [ %19, %49 ], [ null, %12 ], !dbg !8431
  %17 = phi i32 [ %50, %49 ], [ 0, %12 ], !dbg !8454
  call void @llvm.dbg.value(metadata i32 %17, metadata !8427, metadata !DIExpression()), !dbg !8431
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %16, metadata !8425, metadata !DIExpression()), !dbg !8431
  %18 = load i8*, i8** %5, align 4, !dbg !8455
  %19 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %18, %struct.ztest_unit_test* noundef %16) #24, !dbg !8456
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %19, metadata !8425, metadata !DIExpression()), !dbg !8431
  %20 = icmp eq %struct.ztest_unit_test* %19, null, !dbg !8457
  br i1 %20, label %53, label %21, !dbg !8451

21:                                               ; preds = %15
  %22 = load i8*, i8** %5, align 4, !dbg !8458
  %23 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %19, i32 0, i32 1, !dbg !8461
  %24 = load i8*, i8** %23, align 4, !dbg !8461
  %25 = tail call zeroext i1 %14(i8* noundef %22, i8* noundef %24) #25, !dbg !8462
  br i1 %25, label %26, label %49, !dbg !8463

26:                                               ; preds = %21
  %27 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %19, i32 0, i32 4, !dbg !8464
  %28 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %27, align 4, !dbg !8464
  %29 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %28, i32 0, i32 0, !dbg !8466
  %30 = load i32, i32* %29, align 4, !dbg !8467
  %31 = add i32 %30, 1, !dbg !8467
  store i32 %31, i32* %29, align 4, !dbg !8467
  %32 = tail call fastcc i32 @run_test(%struct.ztest_suite_node* noundef nonnull %0, %struct.ztest_unit_test* noundef nonnull %19, i8* noundef %13) #24, !dbg !8468
  call void @llvm.dbg.value(metadata i32 %32, metadata !8428, metadata !DIExpression()), !dbg !8431
  switch i32 %32, label %49 [
    i32 0, label %33
    i32 2, label %36
    i32 1, label %39
  ], !dbg !8469

33:                                               ; preds = %26
  %34 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %27, align 4, !dbg !8470
  %35 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %34, i32 0, i32 3, !dbg !8473
  br label %42, !dbg !8474

36:                                               ; preds = %26
  %37 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %27, align 4, !dbg !8475
  %38 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %37, i32 0, i32 1, !dbg !8478
  br label %42, !dbg !8479

39:                                               ; preds = %26
  %40 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %27, align 4, !dbg !8480
  %41 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %40, i32 0, i32 2, !dbg !8483
  br label %42, !dbg !8484

42:                                               ; preds = %36, %39, %33
  %43 = phi i32* [ %38, %36 ], [ %41, %39 ], [ %35, %33 ]
  %44 = load i32, i32* %43, align 4, !dbg !8485
  %45 = add i32 %44, 1, !dbg !8485
  store i32 %45, i32* %43, align 4, !dbg !8485
  %46 = icmp eq i32 %32, 1, !dbg !8486
  %47 = zext i1 %46 to i32, !dbg !8488
  %48 = add nsw i32 %17, %47, !dbg !8488
  br label %49, !dbg !8488

49:                                               ; preds = %42, %26, %21
  %50 = phi i32 [ %17, %21 ], [ %17, %26 ], [ %48, %42 ], !dbg !8454
  call void @llvm.dbg.value(metadata i32 %50, metadata !8427, metadata !DIExpression()), !dbg !8431
  %51 = load i32, i32* @test_status, align 4, !dbg !8489
  %52 = icmp eq i32 %51, 2, !dbg !8491
  br i1 %52, label %59, label %15, !dbg !8492, !llvm.loop !8493

53:                                               ; preds = %15
  %54 = load i32, i32* @test_status, align 4, !dbg !8495
  %55 = icmp eq i32 %54, 0, !dbg !8451
  call void @llvm.dbg.value(metadata i32 %17, metadata !8427, metadata !DIExpression()), !dbg !8431
  %56 = icmp ne i32 %17, 0
  %57 = select i1 %55, i1 %56, i1 false, !dbg !8497
  br i1 %57, label %58, label %59, !dbg !8497

58:                                               ; preds = %53
  store i32 1, i32* @test_status, align 4, !dbg !8498
  br label %59, !dbg !8500

59:                                               ; preds = %49, %53, %58
  %60 = phi i32 [ %17, %53 ], [ %17, %58 ], [ %50, %49 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !8429, metadata !DIExpression()), !dbg !8450
  call void @llvm.dbg.value(metadata i32 %17, metadata !8427, metadata !DIExpression()), !dbg !8431
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* undef, metadata !8425, metadata !DIExpression()), !dbg !8431
  %61 = icmp sgt i32 %60, 0, !dbg !8501
  %62 = load i8*, i8** %5, align 4, !dbg !8504
  %63 = select i1 %61, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.19.107, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.18.108, i32 0, i32 0)
  tail call void (i8*, ...) @printk(i8* noundef %63, i8* noundef %62) #25, !dbg !8504
  store i32 4, i32* @phase, align 4, !dbg !8505
  %64 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 4, !dbg !8506
  %65 = load void (i8*)*, void (i8*)** %64, align 4, !dbg !8506
  %66 = icmp eq void (i8*)* %65, null, !dbg !8508
  br i1 %66, label %68, label %67, !dbg !8509

67:                                               ; preds = %59
  tail call void %65(i8* noundef %13) #25, !dbg !8510
  br label %68, !dbg !8512

68:                                               ; preds = %59, %67, %3
  %69 = phi i32 [ -1, %3 ], [ %60, %67 ], [ %60, %59 ], !dbg !8431
  ret i32 %69, !dbg !8513
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @run_test(%struct.ztest_suite_node* noundef %0, %struct.ztest_unit_test* noundef %1, i8* noundef %2) unnamed_addr #1 !dbg !8514 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8518, metadata !DIExpression()), !dbg !8522
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %1, metadata !8519, metadata !DIExpression()), !dbg !8522
  call void @llvm.dbg.value(metadata i8* %2, metadata !8520, metadata !DIExpression()), !dbg !8522
  call void @llvm.dbg.value(metadata i32 0, metadata !8521, metadata !DIExpression()), !dbg !8522
  %4 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %1, i32 0, i32 1, !dbg !8523
  %5 = load i8*, i8** %4, align 4, !dbg !8523
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.20.109, i32 0, i32 0), i8* noundef %5) #25, !dbg !8523
  store i32 1, i32* @phase, align 4, !dbg !8525
  tail call fastcc void @get_start_time_cyc() #24, !dbg !8526
  %6 = bitcast %struct.ztest_suite_node* %0 to i8*, !dbg !8529
  %7 = bitcast %struct.ztest_unit_test* %1 to i8*, !dbg !8530
  %8 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %1, i32 0, i32 3, !dbg !8531
  %9 = load i32, i32* %8, align 4, !dbg !8531
  %10 = or i32 %9, 8, !dbg !8532
  tail call fastcc void @k_thread_create(i8* noundef %6, i8* noundef %7, i8* noundef %2, i32 noundef %10) #24, !dbg !8533
  tail call fastcc void @k_object_access_grant() #24, !dbg !8534
  tail call fastcc void @k_object_access_grant() #24, !dbg !8534
  tail call fastcc void @k_object_access_grant() #24, !dbg !8534
  %11 = load i8*, i8** %4, align 4, !dbg !8535
  %12 = icmp eq i8* %11, null, !dbg !8537
  br i1 %12, label %14, label %13, !dbg !8538

13:                                               ; preds = %3
  tail call fastcc void @k_thread_name_set(i8* noundef nonnull %11) #24, !dbg !8539
  br label %14, !dbg !8541

14:                                               ; preds = %13, %3
  %15 = load i32, i32* @test_result, align 4, !dbg !8542
  %16 = and i32 %15, -2, !dbg !8544
  %17 = icmp eq i32 %16, 4, !dbg !8544
  br i1 %17, label %19, label %18, !dbg !8544

18:                                               ; preds = %14
  tail call fastcc void @k_thread_start() #24, !dbg !8545
  tail call fastcc void @k_thread_join() #24, !dbg !8547
  br label %19, !dbg !8548

19:                                               ; preds = %18, %14
  store i32 3, i32* @phase, align 4, !dbg !8549
  %20 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 3, !dbg !8550
  %21 = load void (i8*)*, void (i8*)** %20, align 4, !dbg !8550
  %22 = icmp eq void (i8*)* %21, null, !dbg !8552
  br i1 %22, label %24, label %23, !dbg !8553

23:                                               ; preds = %19
  tail call void %21(i8* noundef %2) #25, !dbg !8554
  br label %24, !dbg !8556

24:                                               ; preds = %23, %19
  tail call fastcc void @run_test_rules(i1 noundef zeroext false, %struct.ztest_unit_test* noundef nonnull %1, i8* noundef %2) #24, !dbg !8557
  tail call fastcc void @get_test_duration_ms() #24, !dbg !8558
  %25 = load i32, i32* @tc_spend_time, align 4, !dbg !8559
  %26 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %1, i32 0, i32 4, !dbg !8561
  %27 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %26, align 4, !dbg !8561
  %28 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %27, i32 0, i32 4, !dbg !8562
  %29 = load i32, i32* %28, align 4, !dbg !8562
  %30 = icmp ugt i32 %25, %29, !dbg !8563
  br i1 %30, label %31, label %32, !dbg !8564

31:                                               ; preds = %24
  store i32 %25, i32* %28, align 4, !dbg !8565
  br label %32, !dbg !8567

32:                                               ; preds = %31, %24
  store i32 5, i32* @phase, align 4, !dbg !8568
  %33 = load i32, i32* @test_result, align 4, !dbg !8569
  switch i32 %33, label %34 [
    i32 5, label %38
    i32 2, label %38
  ], !dbg !8571

34:                                               ; preds = %32
  %35 = add i32 %33, -3, !dbg !8572
  %36 = icmp ult i32 %35, 2, !dbg !8572
  %37 = select i1 %36, i32 2, i32 0, !dbg !8572
  br label %38, !dbg !8572

38:                                               ; preds = %34, %32, %32
  %39 = phi i32 [ 1, %32 ], [ 1, %32 ], [ %37, %34 ], !dbg !8522
  call void @llvm.dbg.value(metadata i32 %39, metadata !8521, metadata !DIExpression()), !dbg !8522
  tail call fastcc void @cleanup_test() #24, !dbg !8574
  call void @llvm.dbg.value(metadata i32 %39, metadata !8521, metadata !DIExpression()), !dbg !8522
  %40 = tail call fastcc i32 @get_final_test_result(%struct.ztest_unit_test* noundef nonnull %1, i32 noundef %39) #24, !dbg !8577
  call void @llvm.dbg.value(metadata i32 %40, metadata !8521, metadata !DIExpression()), !dbg !8522
  %41 = tail call fastcc i8* @TC_RESULT_TO_STR(i32 noundef %40) #24, !dbg !8578
  %42 = load i8*, i8** %4, align 4, !dbg !8578
  %43 = load i32, i32* @tc_spend_time, align 4, !dbg !8578
  %44 = freeze i32 %43
  %45 = udiv i32 %44, 1000, !dbg !8578
  %46 = mul i32 %45, 1000
  %47 = sub i32 %44, %46
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.21.110, i32 0, i32 0), i8* noundef %41, i8* noundef %42, i32 noundef %45, i32 noundef %47) #25, !dbg !8578
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.89, i32 0, i32 0)) #25, !dbg !8578
  %48 = icmp eq i32 %40, 2, !dbg !8580
  br i1 %48, label %49, label %52, !dbg !8582

49:                                               ; preds = %38
  %50 = load i1, i1* @current_test_failed_assumption, align 1, !dbg !8583
  br i1 %50, label %51, label %52, !dbg !8584

51:                                               ; preds = %49
  store i32 1, i32* @test_status, align 4, !dbg !8585
  br label %52, !dbg !8587

52:                                               ; preds = %51, %49, %38
  ret i32 %40, !dbg !8588
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @get_start_time_cyc() unnamed_addr #1 !dbg !8589 {
  %1 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !8590
  store i32 %1, i32* @tc_start_time, align 4, !dbg !8591
  ret void, !dbg !8592
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_create(i8* noundef %0, i8* noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !8593 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !8612, metadata !DIExpression()), !dbg !8613
  call void @llvm.dbg.value(metadata %struct.k_thread* @ztest_thread, metadata !8603, metadata !DIExpression()), !dbg !8613
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @ztest_thread_stack, i32 0, i32 0), metadata !8604, metadata !DIExpression()), !dbg !8613
  call void @llvm.dbg.value(metadata i32 1024, metadata !8605, metadata !DIExpression()), !dbg !8613
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* @test_cb, metadata !8606, metadata !DIExpression()), !dbg !8613
  call void @llvm.dbg.value(metadata i8* %0, metadata !8607, metadata !DIExpression()), !dbg !8613
  call void @llvm.dbg.value(metadata i8* %1, metadata !8608, metadata !DIExpression()), !dbg !8613
  call void @llvm.dbg.value(metadata i8* %2, metadata !8609, metadata !DIExpression()), !dbg !8613
  call void @llvm.dbg.value(metadata i32 -1, metadata !8610, metadata !DIExpression()), !dbg !8613
  call void @llvm.dbg.value(metadata i32 %3, metadata !8611, metadata !DIExpression()), !dbg !8613
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8614, !srcloc !8616
  %5 = tail call %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef nonnull @ztest_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @ztest_thread_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @test_cb, i8* noundef %0, i8* noundef %1, i8* noundef %2, i32 noundef -1, i32 noundef %3, [1 x i64] [i64 -1]) #25, !dbg !8617
  ret void, !dbg !8618
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_object_access_grant() unnamed_addr #1 !dbg !8619 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !8624, metadata !DIExpression()), !dbg !8626
  call void @llvm.dbg.value(metadata %struct.k_thread* @ztest_thread, metadata !8625, metadata !DIExpression()), !dbg !8626
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8627, !srcloc !8629
  ret void, !dbg !8630
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_name_set(i8* noundef %0) unnamed_addr #1 !dbg !8631 {
  call void @llvm.dbg.value(metadata %struct.k_thread* @ztest_thread, metadata !8635, metadata !DIExpression()), !dbg !8637
  call void @llvm.dbg.value(metadata i8* %0, metadata !8636, metadata !DIExpression()), !dbg !8637
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8638, !srcloc !8640
  %2 = tail call i32 @z_impl_k_thread_name_set(%struct.k_thread* noundef nonnull @ztest_thread, i8* noundef %0) #25, !dbg !8641
  ret void, !dbg !8642
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start() unnamed_addr #1 !dbg !8643 {
  call void @llvm.dbg.value(metadata %struct.k_thread* @ztest_thread, metadata !8645, metadata !DIExpression()), !dbg !8646
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8647, !srcloc !8649
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef nonnull @ztest_thread) #25, !dbg !8650
  ret void, !dbg !8651
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_join() unnamed_addr #1 !dbg !8652 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !8657, metadata !DIExpression()), !dbg !8658
  call void @llvm.dbg.value(metadata %struct.k_thread* @ztest_thread, metadata !8656, metadata !DIExpression()), !dbg !8658
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8659, !srcloc !8661
  %1 = tail call i32 @z_impl_k_thread_join(%struct.k_thread* noundef nonnull @ztest_thread, [1 x i64] [i64 -1]) #25, !dbg !8662
  ret void, !dbg !8663
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @run_test_rules(i1 noundef zeroext %0, %struct.ztest_unit_test* noundef %1, i8* noundef %2) unnamed_addr #1 !dbg !8664 {
  call void @llvm.dbg.value(metadata i1 %0, metadata !8668, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8684
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %1, metadata !8669, metadata !DIExpression()), !dbg !8684
  call void @llvm.dbg.value(metadata i8* %2, metadata !8670, metadata !DIExpression()), !dbg !8684
  call void @llvm.dbg.value(metadata %struct.ztest_test_rule* getelementptr inbounds ([0 x %struct.ztest_test_rule], [0 x %struct.ztest_test_rule]* @_ztest_test_rule_list_start, i32 0, i32 0), metadata !8671, metadata !DIExpression()), !dbg !8685
  br i1 icmp ult (%struct.ztest_test_rule* getelementptr inbounds ([0 x %struct.ztest_test_rule], [0 x %struct.ztest_test_rule]* @_ztest_test_rule_list_start, i32 0, i32 0), %struct.ztest_test_rule* getelementptr inbounds ([0 x %struct.ztest_test_rule], [0 x %struct.ztest_test_rule]* @_ztest_test_rule_list_end, i32 0, i32 0)), label %5, label %4, !dbg !8686

4:                                                ; preds = %17, %3
  ret void, !dbg !8687

5:                                                ; preds = %3, %17
  %6 = phi %struct.ztest_test_rule* [ %18, %17 ], [ getelementptr inbounds ([0 x %struct.ztest_test_rule], [0 x %struct.ztest_test_rule]* @_ztest_test_rule_list_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.ztest_test_rule* %6, metadata !8671, metadata !DIExpression()), !dbg !8685
  br i1 %0, label %7, label %11, !dbg !8688

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.ztest_test_rule, %struct.ztest_test_rule* %6, i32 0, i32 0, !dbg !8692
  %9 = load void (%struct.ztest_unit_test*, i8*)*, void (%struct.ztest_unit_test*, i8*)** %8, align 4, !dbg !8692
  %10 = icmp eq void (%struct.ztest_unit_test*, i8*)* %9, null, !dbg !8693
  br i1 %10, label %17, label %15, !dbg !8694

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct.ztest_test_rule, %struct.ztest_test_rule* %6, i32 0, i32 1, !dbg !8695
  %13 = load void (%struct.ztest_unit_test*, i8*)*, void (%struct.ztest_unit_test*, i8*)** %12, align 4, !dbg !8695
  %14 = icmp eq void (%struct.ztest_unit_test*, i8*)* %13, null, !dbg !8697
  br i1 %14, label %17, label %15, !dbg !8698

15:                                               ; preds = %11, %7
  %16 = phi void (%struct.ztest_unit_test*, i8*)* [ %9, %7 ], [ %13, %11 ]
  tail call void %16(%struct.ztest_unit_test* noundef %1, i8* noundef %2) #25, !dbg !8699
  br label %17, !dbg !8700

17:                                               ; preds = %15, %7, %11
  %18 = getelementptr inbounds %struct.ztest_test_rule, %struct.ztest_test_rule* %6, i32 1, !dbg !8700
  call void @llvm.dbg.value(metadata %struct.ztest_test_rule* %18, metadata !8671, metadata !DIExpression()), !dbg !8685
  %19 = icmp ult %struct.ztest_test_rule* %18, getelementptr inbounds ([0 x %struct.ztest_test_rule], [0 x %struct.ztest_test_rule]* @_ztest_test_rule_list_end, i32 0, i32 0), !dbg !8701
  br i1 %19, label %5, label %4, !dbg !8686, !llvm.loop !8702
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @get_test_duration_ms() unnamed_addr #1 !dbg !8704 {
  %1 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !8707
  %2 = load i32, i32* @tc_start_time, align 4, !dbg !8708
  %3 = sub i32 %1, %2, !dbg !8709
  call void @llvm.dbg.value(metadata i32 %3, metadata !8706, metadata !DIExpression()), !dbg !8710
  %4 = tail call fastcc i32 @k_cyc_to_ms_ceil32(i32 noundef %3) #24, !dbg !8711
  store i32 %4, i32* @tc_spend_time, align 4, !dbg !8712
  ret void, !dbg !8713
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cleanup_test() unnamed_addr #1 !dbg !8714 {
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* undef, metadata !8718, metadata !DIExpression()), !dbg !8721
  call void @llvm.dbg.value(metadata i32 0, metadata !8719, metadata !DIExpression()), !dbg !8721
  call void @llvm.dbg.value(metadata i32 0, metadata !8720, metadata !DIExpression()), !dbg !8721
  tail call fastcc void @k_thread_abort.101(%struct.k_thread* noundef nonnull @ztest_thread) #24, !dbg !8722
  call void @llvm.dbg.value(metadata i32 0, metadata !8719, metadata !DIExpression()), !dbg !8721
  ret void, !dbg !8725
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_final_test_result(%struct.ztest_unit_test* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !8726 {
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %0, metadata !8730, metadata !DIExpression()), !dbg !8741
  call void @llvm.dbg.value(metadata i32 %1, metadata !8731, metadata !DIExpression()), !dbg !8741
  call void @llvm.dbg.value(metadata i32 -1, metadata !8732, metadata !DIExpression()), !dbg !8741
  call void @llvm.dbg.value(metadata %struct.ztest_expected_result_entry* getelementptr inbounds ([0 x %struct.ztest_expected_result_entry], [0 x %struct.ztest_expected_result_entry]* @_ztest_expected_result_entry_list_start, i32 0, i32 0), metadata !8733, metadata !DIExpression()), !dbg !8742
  br i1 icmp ult (%struct.ztest_expected_result_entry* getelementptr inbounds ([0 x %struct.ztest_expected_result_entry], [0 x %struct.ztest_expected_result_entry]* @_ztest_expected_result_entry_list_start, i32 0, i32 0), %struct.ztest_expected_result_entry* getelementptr inbounds ([0 x %struct.ztest_expected_result_entry], [0 x %struct.ztest_expected_result_entry]* @_ztest_expected_result_entry_list_end, i32 0, i32 0)), label %3, label %31, !dbg !8743

3:                                                ; preds = %2
  %4 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %0, i32 0, i32 1
  %5 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %0, i32 0, i32 0
  br label %6, !dbg !8743

6:                                                ; preds = %3, %19
  %7 = phi %struct.ztest_expected_result_entry* [ getelementptr inbounds ([0 x %struct.ztest_expected_result_entry], [0 x %struct.ztest_expected_result_entry]* @_ztest_expected_result_entry_list_start, i32 0, i32 0), %3 ], [ %20, %19 ]
  call void @llvm.dbg.value(metadata %struct.ztest_expected_result_entry* %7, metadata !8733, metadata !DIExpression()), !dbg !8742
  %8 = getelementptr inbounds %struct.ztest_expected_result_entry, %struct.ztest_expected_result_entry* %7, i32 0, i32 1, !dbg !8744
  %9 = load i8*, i8** %8, align 4, !dbg !8744
  %10 = load i8*, i8** %4, align 4, !dbg !8748
  %11 = tail call i32 @strcmp(i8* noundef %9, i8* noundef %10) #25, !dbg !8749
  %12 = icmp eq i32 %11, 0, !dbg !8750
  br i1 %12, label %13, label %19, !dbg !8751

13:                                               ; preds = %6
  %14 = getelementptr inbounds %struct.ztest_expected_result_entry, %struct.ztest_expected_result_entry* %7, i32 0, i32 0, !dbg !8752
  %15 = load i8*, i8** %14, align 4, !dbg !8752
  %16 = load i8*, i8** %5, align 4, !dbg !8753
  %17 = tail call i32 @strcmp(i8* noundef %15, i8* noundef %16) #25, !dbg !8754
  %18 = icmp eq i32 %17, 0, !dbg !8755
  br i1 %18, label %22, label %19, !dbg !8756

19:                                               ; preds = %6, %13
  %20 = getelementptr inbounds %struct.ztest_expected_result_entry, %struct.ztest_expected_result_entry* %7, i32 1, !dbg !8757
  call void @llvm.dbg.value(metadata %struct.ztest_expected_result_entry* %20, metadata !8733, metadata !DIExpression()), !dbg !8742
  %21 = icmp ult %struct.ztest_expected_result_entry* %20, getelementptr inbounds ([0 x %struct.ztest_expected_result_entry], [0 x %struct.ztest_expected_result_entry]* @_ztest_expected_result_entry_list_end, i32 0, i32 0), !dbg !8758
  br i1 %21, label %6, label %31, !dbg !8743, !llvm.loop !8759

22:                                               ; preds = %13
  %23 = getelementptr inbounds %struct.ztest_expected_result_entry, %struct.ztest_expected_result_entry* %7, i32 0, i32 2, !dbg !8761
  %24 = load i32, i32* %23, align 4, !dbg !8761
  call void @llvm.dbg.value(metadata i32 %24, metadata !8732, metadata !DIExpression()), !dbg !8741
  switch i32 %24, label %31 [
    i32 0, label %25
    i32 1, label %28
  ], !dbg !8763

25:                                               ; preds = %22
  %26 = icmp ne i32 %1, 1, !dbg !8764
  %27 = zext i1 %26 to i32, !dbg !8767
  br label %31, !dbg !8768

28:                                               ; preds = %22
  %29 = icmp ne i32 %1, 2, !dbg !8769
  %30 = zext i1 %29 to i32, !dbg !8772
  br label %31, !dbg !8773

31:                                               ; preds = %19, %2, %22, %28, %25
  %32 = phi i32 [ %27, %25 ], [ %30, %28 ], [ %1, %22 ], [ %1, %2 ], [ %1, %19 ], !dbg !8741
  ret i32 %32, !dbg !8774
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @TC_RESULT_TO_STR(i32 noundef %0) unnamed_addr #4 !dbg !8775 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8779, metadata !DIExpression()), !dbg !8780
  %2 = icmp ult i32 %0, 3, !dbg !8781
  br i1 %2, label %3, label %6, !dbg !8781

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i8*], [3 x i8*]* @switch.table.TC_RESULT_TO_STR, i32 0, i32 %0, !dbg !8781
  %5 = load i8*, i8** %4, align 4, !dbg !8781
  br label %6, !dbg !8781

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.27.111, i32 0, i32 0), %1 ], !dbg !8782
  ret i8* %7, !dbg !8784
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !8785 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #24, !dbg !8786
  ret i32 %1, !dbg !8787
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_cyc_to_ms_ceil32(i32 noundef %0) unnamed_addr #4 !dbg !8788 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8791, metadata !DIExpression()), !dbg !8792
  %2 = zext i32 %0 to i64, !dbg !8793
  call void @llvm.dbg.value(metadata i64 %2, metadata !8794, metadata !DIExpression()), !dbg !8811
  call void @llvm.dbg.value(metadata i32 84000000, metadata !8799, metadata !DIExpression()), !dbg !8811
  call void @llvm.dbg.value(metadata i32 1000, metadata !8800, metadata !DIExpression()), !dbg !8811
  call void @llvm.dbg.value(metadata i8 1, metadata !8801, metadata !DIExpression()), !dbg !8811
  call void @llvm.dbg.value(metadata i8 1, metadata !8802, metadata !DIExpression()), !dbg !8811
  call void @llvm.dbg.value(metadata i8 1, metadata !8803, metadata !DIExpression()), !dbg !8811
  call void @llvm.dbg.value(metadata i8 0, metadata !8804, metadata !DIExpression()), !dbg !8811
  call void @llvm.dbg.value(metadata i8 0, metadata !8805, metadata !DIExpression()), !dbg !8811
  call void @llvm.dbg.value(metadata i8 1, metadata !8806, metadata !DIExpression()), !dbg !8811
  call void @llvm.dbg.value(metadata i64 0, metadata !8807, metadata !DIExpression()), !dbg !8811
  call void @llvm.dbg.value(metadata i64 83999, metadata !8807, metadata !DIExpression()), !dbg !8811
  call void @llvm.dbg.value(metadata i64 83999, metadata !8807, metadata !DIExpression()), !dbg !8811
  call void @llvm.dbg.value(metadata i64 83999, metadata !8807, metadata !DIExpression()), !dbg !8811
  call void @llvm.dbg.value(metadata i64 83999, metadata !8807, metadata !DIExpression()), !dbg !8811
  %3 = add nuw nsw i64 %2, 83999, !dbg !8813
  call void @llvm.dbg.value(metadata i64 %3, metadata !8794, metadata !DIExpression()), !dbg !8811
  %4 = icmp ult i32 %0, -83999
  %5 = trunc i64 %3 to i32, !dbg !8816
  %6 = udiv i32 %5, 84000, !dbg !8816
  %7 = zext i32 %6 to i64, !dbg !8816
  %8 = udiv i64 %3, 84000, !dbg !8816
  %9 = select i1 %4, i64 %7, i64 %8, !dbg !8816
  %10 = trunc i64 %9 to i32, !dbg !8818
  ret i32 %10, !dbg !8819
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !8820 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #25, !dbg !8822
  ret i32 %1, !dbg !8823
}

; Function Attrs: noinline nounwind optsize
define internal void @test_cb(i8* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2) #1 !dbg !8824 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8826, metadata !DIExpression()), !dbg !8831
  call void @llvm.dbg.value(metadata i8* %1, metadata !8827, metadata !DIExpression()), !dbg !8831
  call void @llvm.dbg.value(metadata i8* %2, metadata !8828, metadata !DIExpression()), !dbg !8831
  call void @llvm.dbg.value(metadata i8* %0, metadata !8829, metadata !DIExpression()), !dbg !8831
  %4 = bitcast i8* %1 to %struct.ztest_unit_test*, !dbg !8832
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %4, metadata !8830, metadata !DIExpression()), !dbg !8831
  store i32 0, i32* @test_result, align 4, !dbg !8833
  tail call fastcc void @run_test_rules(i1 noundef zeroext true, %struct.ztest_unit_test* noundef %4, i8* noundef %2) #24, !dbg !8834
  %5 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !8835
  %6 = bitcast i8* %5 to void (i8*)**, !dbg !8835
  %7 = load void (i8*)*, void (i8*)** %6, align 4, !dbg !8835
  %8 = icmp eq void (i8*)* %7, null, !dbg !8837
  br i1 %8, label %10, label %9, !dbg !8838

9:                                                ; preds = %3
  tail call void %7(i8* noundef %2) #25, !dbg !8839
  br label %10, !dbg !8841

10:                                               ; preds = %9, %3
  tail call fastcc void @run_test_functions(%struct.ztest_unit_test* noundef %4, i8* noundef %2) #24, !dbg !8842
  store i32 1, i32* @test_result, align 4, !dbg !8843
  ret void, !dbg !8844
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @run_test_functions(%struct.ztest_unit_test* nocapture noundef readonly %0, i8* noundef %1) unnamed_addr #1 !dbg !8845 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* undef, metadata !8849, metadata !DIExpression()), !dbg !8852
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %0, metadata !8850, metadata !DIExpression()), !dbg !8852
  call void @llvm.dbg.value(metadata i8* %1, metadata !8851, metadata !DIExpression()), !dbg !8852
  store i32 2, i32* @phase, align 4, !dbg !8853
  %3 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %0, i32 0, i32 2, !dbg !8854
  %4 = load void (i8*)*, void (i8*)** %3, align 4, !dbg !8854
  tail call void %4(i8* noundef %1) #25, !dbg !8855
  ret void, !dbg !8856
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_ztest_run_test_suites(i8* noundef %0) local_unnamed_addr #1 !dbg !8857 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8861, metadata !DIExpression()), !dbg !8865
  call void @llvm.dbg.value(metadata i32 0, metadata !8862, metadata !DIExpression()), !dbg !8865
  %2 = load i32, i32* @test_status, align 4, !dbg !8866
  %3 = icmp eq i32 %2, 2, !dbg !8868
  br i1 %3, label %17, label %4, !dbg !8869

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), metadata !8863, metadata !DIExpression()), !dbg !8870
  call void @llvm.dbg.value(metadata i32 0, metadata !8862, metadata !DIExpression()), !dbg !8865
  br i1 icmp ult (%struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0)), label %5, label %15, !dbg !8871

5:                                                ; preds = %4, %5
  %6 = phi %struct.ztest_suite_node* [ %12, %5 ], [ getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %4 ]
  %7 = phi i32 [ %9, %5 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %6, metadata !8863, metadata !DIExpression()), !dbg !8870
  call void @llvm.dbg.value(metadata i32 %7, metadata !8862, metadata !DIExpression()), !dbg !8865
  %8 = tail call fastcc i32 @__ztest_run_test_suite(%struct.ztest_suite_node* noundef nonnull %6, i8* noundef %0) #24, !dbg !8872
  %9 = add nsw i32 %8, %7, !dbg !8875
  call void @llvm.dbg.value(metadata i32 %9, metadata !8862, metadata !DIExpression()), !dbg !8865
  %10 = load i32, i32* @test_status, align 4, !dbg !8876
  %11 = icmp ne i32 %10, 2, !dbg !8878
  %12 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %6, i32 1, !dbg !8879
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %12, metadata !8863, metadata !DIExpression()), !dbg !8870
  %13 = icmp ult %struct.ztest_suite_node* %12, getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0)
  %14 = select i1 %11, i1 %13, i1 false, !dbg !8880
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %12, metadata !8863, metadata !DIExpression()), !dbg !8870
  call void @llvm.dbg.value(metadata i32 %9, metadata !8862, metadata !DIExpression()), !dbg !8865
  br i1 %14, label %5, label %15, !dbg !8880, !llvm.loop !8881

15:                                               ; preds = %5, %4
  %16 = phi i32 [ 0, %4 ], [ %9, %5 ], !dbg !8865
  call void @llvm.dbg.value(metadata i32 %16, metadata !8862, metadata !DIExpression()), !dbg !8865
  tail call fastcc void @__ztest_show_suite_summary() #24, !dbg !8883
  br label %17, !dbg !8884

17:                                               ; preds = %1, %15
  %18 = phi i32 [ %16, %15 ], [ 0, %1 ], !dbg !8865
  ret i32 %18, !dbg !8885
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @__ztest_run_test_suite(%struct.ztest_suite_node* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !8886 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8890, metadata !DIExpression()), !dbg !8901
  call void @llvm.dbg.value(metadata i8* %1, metadata !8891, metadata !DIExpression()), !dbg !8901
  %3 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 6, !dbg !8902
  %4 = load %struct.ztest_suite_stats*, %struct.ztest_suite_stats** %3, align 4, !dbg !8902
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %4, metadata !8892, metadata !DIExpression()), !dbg !8901
  call void @llvm.dbg.value(metadata i32 0, metadata !8893, metadata !DIExpression()), !dbg !8901
  tail call fastcc void @__ztest_init_unit_test_result_for_suite(%struct.ztest_suite_node* noundef %0) #24, !dbg !8903
  call void @llvm.dbg.value(metadata i32 0, metadata !8894, metadata !DIExpression()), !dbg !8904
  call void @llvm.dbg.value(metadata i32 0, metadata !8893, metadata !DIExpression()), !dbg !8901
  call void @llvm.dbg.value(metadata i32 undef, metadata !8894, metadata !DIExpression()), !dbg !8904
  %5 = load i1 (i8*, %struct.ztest_suite_node*)*, i1 (i8*, %struct.ztest_suite_node*)** getelementptr inbounds (%struct.ztest_arch_api, %struct.ztest_arch_api* @ztest_api, i32 0, i32 1), align 4
  %6 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %4, i32 0, i32 1
  %7 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %4, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 0, metadata !8893, metadata !DIExpression()), !dbg !8901
  %8 = tail call zeroext i1 %5(i8* noundef %1, %struct.ztest_suite_node* noundef %0) #25, !dbg !8905
  br i1 %8, label %9, label %16, !dbg !8906

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %4, i32 0, i32 2
  %11 = tail call fastcc i32 @z_ztest_run_test_suite_ptr(%struct.ztest_suite_node* noundef nonnull %0) #24, !dbg !8907
  call void @llvm.dbg.value(metadata i32 %11, metadata !8896, metadata !DIExpression()), !dbg !8908
  call void @llvm.dbg.value(metadata i32 1, metadata !8893, metadata !DIExpression()), !dbg !8901
  %12 = load i32, i32* %7, align 4, !dbg !8909
  %13 = add i32 %12, 1, !dbg !8909
  store i32 %13, i32* %7, align 4, !dbg !8909
  %14 = icmp ne i32 %11, 0, !dbg !8910
  %15 = zext i1 %14 to i32, !dbg !8911
  br label %16, !dbg !8912

16:                                               ; preds = %2, %9
  %17 = phi i32* [ %10, %9 ], [ %6, %2 ]
  %18 = phi i32 [ %15, %9 ], [ 1, %2 ]
  %19 = phi i32 [ 1, %9 ], [ 0, %2 ], !dbg !8901
  %20 = load i32, i32* %17, align 4, !dbg !8913
  %21 = add i32 %20, %18, !dbg !8913
  store i32 %21, i32* %17, align 4, !dbg !8913
  call void @llvm.dbg.value(metadata i32 %19, metadata !8893, metadata !DIExpression()), !dbg !8901
  call void @llvm.dbg.value(metadata i32 undef, metadata !8894, metadata !DIExpression()), !dbg !8904
  ret i32 %19, !dbg !8914
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__ztest_show_suite_summary() unnamed_addr #1 !dbg !8915 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.28.115, i32 0, i32 0)) #25, !dbg !8919
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), metadata !8917, metadata !DIExpression()), !dbg !8920
  br i1 icmp ult (%struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0)), label %2, label %1, !dbg !8921

1:                                                ; preds = %2, %0
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.29.116, i32 0, i32 0)) #25, !dbg !8922
  ret void, !dbg !8923

2:                                                ; preds = %0, %2
  %3 = phi %struct.ztest_suite_node* [ %4, %2 ], [ getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %3, metadata !8917, metadata !DIExpression()), !dbg !8920
  tail call fastcc void @__ztest_show_suite_summary_verbose(%struct.ztest_suite_node* noundef nonnull %3) #24, !dbg !8924
  %4 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %3, i32 1, !dbg !8927
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %4, metadata !8917, metadata !DIExpression()), !dbg !8920
  %5 = icmp ult %struct.ztest_suite_node* %4, getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0), !dbg !8928
  br i1 %5, label %2, label %1, !dbg !8921, !llvm.loop !8929
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__ztest_show_suite_summary_verbose(%struct.ztest_suite_node* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8931 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8935, metadata !DIExpression()), !dbg !8939
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8936, metadata !DIExpression()), !dbg !8939
  call void @llvm.dbg.value(metadata i32 0, metadata !8937, metadata !DIExpression()), !dbg !8939
  call void @llvm.dbg.value(metadata i32 0, metadata !8938, metadata !DIExpression()), !dbg !8939
  tail call fastcc void @__ztest_show_suite_summary_oneline(%struct.ztest_suite_node* noundef %0) #24, !dbg !8940
  %2 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 poison, metadata !8938, metadata !DIExpression()), !dbg !8939
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8936, metadata !DIExpression()), !dbg !8939
  %3 = load i8*, i8** %2, align 4, !dbg !8941
  %4 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %3, %struct.ztest_unit_test* noundef null) #24, !dbg !8942
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %4, metadata !8936, metadata !DIExpression()), !dbg !8939
  %5 = icmp eq %struct.ztest_unit_test* %4, null, !dbg !8943
  br i1 %5, label %36, label %6, !dbg !8944

6:                                                ; preds = %1, %20
  %7 = phi %struct.ztest_unit_test* [ %34, %20 ], [ %4, %1 ]
  %8 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %7, i32 0, i32 4, !dbg !8945
  %9 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !8945
  %10 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %9, i32 0, i32 1, !dbg !8948
  %11 = load i32, i32* %10, align 4, !dbg !8948
  %12 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %9, i32 0, i32 0, !dbg !8949
  %13 = load i32, i32* %12, align 4, !dbg !8949
  %14 = icmp eq i32 %11, %13, !dbg !8950
  br i1 %14, label %20, label %15, !dbg !8951

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %9, i32 0, i32 3, !dbg !8952
  %17 = load i32, i32* %16, align 4, !dbg !8952
  %18 = icmp ne i32 %17, %13, !dbg !8954
  %19 = zext i1 %18 to i32
  br label %20

20:                                               ; preds = %15, %6
  %21 = phi i32 [ 2, %6 ], [ %19, %15 ], !dbg !8955
  call void @llvm.dbg.value(metadata i32 %21, metadata !8937, metadata !DIExpression()), !dbg !8939
  %22 = tail call fastcc i8* @TC_RESULT_TO_STR(i32 noundef %21) #24, !dbg !8956
  %23 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %7, i32 0, i32 0, !dbg !8956
  %24 = load i8*, i8** %23, align 4, !dbg !8956
  %25 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %7, i32 0, i32 1, !dbg !8956
  %26 = load i8*, i8** %25, align 4, !dbg !8956
  %27 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %9, i32 0, i32 4, !dbg !8956
  %28 = load i32, i32* %27, align 4, !dbg !8956
  %29 = freeze i32 %28
  %30 = udiv i32 %29, 1000, !dbg !8956
  %31 = mul i32 %30, 1000
  %32 = sub i32 %29, %31
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30.117, i32 0, i32 0), i8* noundef %22, i8* noundef %24, i8* noundef %26, i32 noundef %30, i32 noundef %32) #25, !dbg !8956
  call void @llvm.dbg.value(metadata i32 poison, metadata !8938, metadata !DIExpression()), !dbg !8939
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %7, metadata !8936, metadata !DIExpression()), !dbg !8939
  %33 = load i8*, i8** %2, align 4, !dbg !8941
  %34 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %33, %struct.ztest_unit_test* noundef nonnull %7) #24, !dbg !8942
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %34, metadata !8936, metadata !DIExpression()), !dbg !8939
  %35 = icmp eq %struct.ztest_unit_test* %34, null, !dbg !8943
  br i1 %35, label %36, label %6, !dbg !8944, !llvm.loop !8957

36:                                               ; preds = %20, %1
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.31.118, i32 0, i32 0)) #25, !dbg !8959
  ret void, !dbg !8960
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__ztest_show_suite_summary_oneline(%struct.ztest_suite_node* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8961 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8963, metadata !DIExpression()), !dbg !8977
  call void @llvm.dbg.value(metadata i32 0, metadata !8964, metadata !DIExpression()), !dbg !8977
  call void @llvm.dbg.value(metadata i32 0, metadata !8965, metadata !DIExpression()), !dbg !8977
  call void @llvm.dbg.value(metadata i32 0, metadata !8966, metadata !DIExpression()), !dbg !8977
  call void @llvm.dbg.value(metadata i32 0, metadata !8967, metadata !DIExpression()), !dbg !8977
  call void @llvm.dbg.value(metadata i32 0, metadata !8968, metadata !DIExpression()), !dbg !8977
  call void @llvm.dbg.value(metadata i32 0, metadata !8969, metadata !DIExpression()), !dbg !8977
  call void @llvm.dbg.value(metadata i32 0, metadata !8970, metadata !DIExpression()), !dbg !8977
  call void @llvm.dbg.value(metadata i32 0, metadata !8971, metadata !DIExpression()), !dbg !8977
  call void @llvm.dbg.value(metadata i32 0, metadata !8972, metadata !DIExpression()), !dbg !8977
  call void @llvm.dbg.value(metadata i32 0, metadata !8973, metadata !DIExpression()), !dbg !8977
  call void @llvm.dbg.value(metadata i32 0, metadata !8974, metadata !DIExpression()), !dbg !8977
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8975, metadata !DIExpression()), !dbg !8977
  call void @llvm.dbg.value(metadata i32 0, metadata !8976, metadata !DIExpression()), !dbg !8977
  %2 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 0, metadata !8976, metadata !DIExpression()), !dbg !8977
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8975, metadata !DIExpression()), !dbg !8977
  call void @llvm.dbg.value(metadata i32 0, metadata !8967, metadata !DIExpression()), !dbg !8977
  call void @llvm.dbg.value(metadata i32 0, metadata !8966, metadata !DIExpression()), !dbg !8977
  call void @llvm.dbg.value(metadata i32 0, metadata !8965, metadata !DIExpression()), !dbg !8977
  call void @llvm.dbg.value(metadata i32 0, metadata !8964, metadata !DIExpression()), !dbg !8977
  %3 = load i8*, i8** %2, align 4, !dbg !8978
  %4 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %3, %struct.ztest_unit_test* noundef null) #24, !dbg !8979
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %4, metadata !8975, metadata !DIExpression()), !dbg !8977
  %5 = icmp eq %struct.ztest_unit_test* %4, null, !dbg !8980
  br i1 %5, label %58, label %6, !dbg !8981

6:                                                ; preds = %1, %34
  %7 = phi %struct.ztest_unit_test* [ %39, %34 ], [ %4, %1 ]
  %8 = phi i32 [ %18, %34 ], [ 0, %1 ]
  %9 = phi i32 [ %13, %34 ], [ 0, %1 ]
  %10 = phi i32 [ %37, %34 ], [ 0, %1 ]
  %11 = phi i32 [ %36, %34 ], [ 0, %1 ]
  %12 = phi i32 [ %35, %34 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8976, metadata !DIExpression()), !dbg !8977
  call void @llvm.dbg.value(metadata i32 %9, metadata !8967, metadata !DIExpression()), !dbg !8977
  call void @llvm.dbg.value(metadata i32 %10, metadata !8966, metadata !DIExpression()), !dbg !8977
  call void @llvm.dbg.value(metadata i32 %11, metadata !8965, metadata !DIExpression()), !dbg !8977
  call void @llvm.dbg.value(metadata i32 %12, metadata !8964, metadata !DIExpression()), !dbg !8977
  %13 = add nuw nsw i32 %9, 1, !dbg !8982
  call void @llvm.dbg.value(metadata i32 %13, metadata !8967, metadata !DIExpression()), !dbg !8977
  %14 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %7, i32 0, i32 4, !dbg !8984
  %15 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %14, align 4, !dbg !8984
  %16 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %15, i32 0, i32 4, !dbg !8985
  %17 = load i32, i32* %16, align 4, !dbg !8985
  %18 = add i32 %17, %8, !dbg !8986
  call void @llvm.dbg.value(metadata i32 %18, metadata !8976, metadata !DIExpression()), !dbg !8977
  %19 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %15, i32 0, i32 1, !dbg !8987
  %20 = load i32, i32* %19, align 4, !dbg !8987
  %21 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %15, i32 0, i32 0, !dbg !8989
  %22 = load i32, i32* %21, align 4, !dbg !8989
  %23 = icmp eq i32 %20, %22, !dbg !8990
  br i1 %23, label %24, label %26, !dbg !8991

24:                                               ; preds = %6
  %25 = add nsw i32 %10, 1, !dbg !8992
  call void @llvm.dbg.value(metadata i32 %25, metadata !8966, metadata !DIExpression()), !dbg !8977
  br label %34, !dbg !8994

26:                                               ; preds = %6
  %27 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %15, i32 0, i32 3, !dbg !8995
  %28 = load i32, i32* %27, align 4, !dbg !8995
  %29 = icmp eq i32 %28, %22, !dbg !8997
  br i1 %29, label %30, label %32, !dbg !8998

30:                                               ; preds = %26
  %31 = add nsw i32 %12, 1, !dbg !8999
  call void @llvm.dbg.value(metadata i32 %31, metadata !8964, metadata !DIExpression()), !dbg !8977
  br label %34, !dbg !9001

32:                                               ; preds = %26
  %33 = add nsw i32 %11, 1, !dbg !9002
  call void @llvm.dbg.value(metadata i32 %33, metadata !8965, metadata !DIExpression()), !dbg !8977
  br label %34

34:                                               ; preds = %30, %32, %24
  %35 = phi i32 [ %12, %24 ], [ %31, %30 ], [ %12, %32 ], !dbg !8977
  %36 = phi i32 [ %11, %24 ], [ %11, %30 ], [ %33, %32 ], !dbg !8977
  %37 = phi i32 [ %25, %24 ], [ %10, %30 ], [ %10, %32 ], !dbg !8977
  call void @llvm.dbg.value(metadata i32 %18, metadata !8976, metadata !DIExpression()), !dbg !8977
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %7, metadata !8975, metadata !DIExpression()), !dbg !8977
  call void @llvm.dbg.value(metadata i32 %13, metadata !8967, metadata !DIExpression()), !dbg !8977
  call void @llvm.dbg.value(metadata i32 %37, metadata !8966, metadata !DIExpression()), !dbg !8977
  call void @llvm.dbg.value(metadata i32 %36, metadata !8965, metadata !DIExpression()), !dbg !8977
  call void @llvm.dbg.value(metadata i32 %35, metadata !8964, metadata !DIExpression()), !dbg !8977
  %38 = load i8*, i8** %2, align 4, !dbg !8978
  %39 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %38, %struct.ztest_unit_test* noundef nonnull %7) #24, !dbg !8979
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %39, metadata !8975, metadata !DIExpression()), !dbg !8977
  %40 = icmp eq %struct.ztest_unit_test* %39, null, !dbg !8980
  br i1 %40, label %41, label %6, !dbg !8981, !llvm.loop !9004

41:                                               ; preds = %34
  %42 = icmp eq i32 %13, %37, !dbg !9006
  br i1 %42, label %58, label %43, !dbg !9008

43:                                               ; preds = %41
  %44 = icmp sgt i32 %36, 0, !dbg !9009
  %45 = zext i1 %44 to i32, !dbg !9011
  call void @llvm.dbg.value(metadata i32 %45, metadata !8974, metadata !DIExpression()), !dbg !8977
  %46 = sub nsw i32 %13, %37, !dbg !9012
  call void @llvm.dbg.value(metadata i32 %46, metadata !8968, metadata !DIExpression()), !dbg !8977
  %47 = mul nsw i32 %35, 100000, !dbg !9013
  call void @llvm.dbg.value(metadata i32 %47, metadata !8969, metadata !DIExpression()), !dbg !8977
  %48 = sdiv i32 %47, %46, !dbg !9014
  call void @llvm.dbg.value(metadata i32 %48, metadata !8970, metadata !DIExpression()), !dbg !8977
  %49 = sdiv i32 %48, 1000, !dbg !9015
  call void @llvm.dbg.value(metadata i32 %49, metadata !8971, metadata !DIExpression()), !dbg !8977
  %50 = mul nsw i32 %49, -1000, !dbg !9016
  %51 = add i32 %50, %48, !dbg !9017
  %52 = sdiv i32 %51, 10, !dbg !9018
  call void @llvm.dbg.value(metadata i32 %52, metadata !8972, metadata !DIExpression()), !dbg !8977
  %53 = mul nsw i32 %52, -10, !dbg !9019
  %54 = add i32 %53, %51, !dbg !9020
  call void @llvm.dbg.value(metadata i32 %54, metadata !8973, metadata !DIExpression()), !dbg !8977
  %55 = icmp sgt i32 %54, 4, !dbg !9021
  %56 = zext i1 %55 to i32, !dbg !9023
  %57 = add nsw i32 %52, %56, !dbg !9023
  br label %58, !dbg !9023

58:                                               ; preds = %1, %43, %41
  %59 = phi i32 [ %18, %41 ], [ %18, %43 ], [ 0, %1 ]
  %60 = phi i32 [ %13, %41 ], [ %13, %43 ], [ 0, %1 ]
  %61 = phi i32 [ %37, %41 ], [ %37, %43 ], [ 0, %1 ]
  %62 = phi i32 [ %36, %41 ], [ %36, %43 ], [ 0, %1 ]
  %63 = phi i32 [ %35, %41 ], [ %35, %43 ], [ 0, %1 ]
  %64 = phi i32 [ 0, %41 ], [ %49, %43 ], [ 0, %1 ], !dbg !9024
  %65 = phi i32 [ 0, %41 ], [ %57, %43 ], [ 0, %1 ], !dbg !9024
  %66 = phi i32 [ 2, %41 ], [ %45, %43 ], [ 2, %1 ], !dbg !9024
  call void @llvm.dbg.value(metadata i32 %66, metadata !8974, metadata !DIExpression()), !dbg !8977
  call void @llvm.dbg.value(metadata i32 %65, metadata !8972, metadata !DIExpression()), !dbg !8977
  call void @llvm.dbg.value(metadata i32 %64, metadata !8971, metadata !DIExpression()), !dbg !8977
  %67 = tail call fastcc i8* @TC_RESULT_TO_STR(i32 noundef %66) #24, !dbg !9025
  %68 = load i8*, i8** %2, align 4, !dbg !9025
  %69 = freeze i32 %59
  %70 = udiv i32 %69, 1000, !dbg !9025
  %71 = mul i32 %70, 1000
  %72 = sub i32 %69, %71
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([100 x i8], [100 x i8]* @.str.32.119, i32 0, i32 0), i8* noundef %67, i32 noundef %64, i32 noundef %65, i8* noundef %68, i32 noundef %63, i32 noundef %62, i32 noundef %61, i32 noundef %60, i32 noundef %70, i32 noundef %72) #25, !dbg !9025
  ret void, !dbg !9026
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__ztest_init_unit_test_result_for_suite(%struct.ztest_suite_node* nocapture noundef readonly %0) unnamed_addr #1 !dbg !9027 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !9029, metadata !DIExpression()), !dbg !9031
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !9030, metadata !DIExpression()), !dbg !9031
  %2 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !9030, metadata !DIExpression()), !dbg !9031
  %3 = load i8*, i8** %2, align 4, !dbg !9032
  %4 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %3, %struct.ztest_unit_test* noundef null) #24, !dbg !9033
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %4, metadata !9030, metadata !DIExpression()), !dbg !9031
  %5 = icmp eq %struct.ztest_unit_test* %4, null, !dbg !9034
  br i1 %5, label %22, label %6, !dbg !9035

6:                                                ; preds = %1, %6
  %7 = phi %struct.ztest_unit_test* [ %20, %6 ], [ %4, %1 ]
  %8 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %7, i32 0, i32 4, !dbg !9036
  %9 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !9036
  %10 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %9, i32 0, i32 0, !dbg !9038
  store i32 0, i32* %10, align 4, !dbg !9039
  %11 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !9040
  %12 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %11, i32 0, i32 1, !dbg !9041
  store i32 0, i32* %12, align 4, !dbg !9042
  %13 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !9043
  %14 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %13, i32 0, i32 2, !dbg !9044
  store i32 0, i32* %14, align 4, !dbg !9045
  %15 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !9046
  %16 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %15, i32 0, i32 3, !dbg !9047
  store i32 0, i32* %16, align 4, !dbg !9048
  %17 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !9049
  %18 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %17, i32 0, i32 4, !dbg !9050
  store i32 0, i32* %18, align 4, !dbg !9051
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %7, metadata !9030, metadata !DIExpression()), !dbg !9031
  %19 = load i8*, i8** %2, align 4, !dbg !9032
  %20 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %19, %struct.ztest_unit_test* noundef nonnull %7) #24, !dbg !9033
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %20, metadata !9030, metadata !DIExpression()), !dbg !9031
  %21 = icmp eq %struct.ztest_unit_test* %20, null, !dbg !9034
  br i1 %21, label %22, label %6, !dbg !9035, !llvm.loop !9052

22:                                               ; preds = %6, %1
  ret void, !dbg !9054
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_verify_all_test_suites_ran() local_unnamed_addr #1 !dbg !9055 {
  call void @llvm.dbg.value(metadata i8 1, metadata !9057, metadata !DIExpression()), !dbg !9060
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), metadata !9058, metadata !DIExpression()), !dbg !9060
  call void @llvm.dbg.value(metadata i8 poison, metadata !9057, metadata !DIExpression()), !dbg !9060
  br i1 icmp ult (%struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0)), label %3, label %1, !dbg !9061

1:                                                ; preds = %14, %0
  %2 = phi i1 [ true, %0 ], [ %15, %14 ]
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), metadata !9059, metadata !DIExpression()), !dbg !9060
  call void @llvm.dbg.value(metadata i8 poison, metadata !9057, metadata !DIExpression()), !dbg !9060
  br i1 icmp ult (%struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), %struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0)), label %18, label %33, !dbg !9065

3:                                                ; preds = %0, %14
  %4 = phi %struct.ztest_suite_node* [ %16, %14 ], [ getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %0 ]
  %5 = phi i1 [ %15, %14 ], [ true, %0 ]
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %4, metadata !9058, metadata !DIExpression()), !dbg !9060
  %6 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %4, i32 0, i32 6, !dbg !9067
  %7 = load %struct.ztest_suite_stats*, %struct.ztest_suite_stats** %6, align 4, !dbg !9067
  %8 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %7, i32 0, i32 0, !dbg !9071
  %9 = load i32, i32* %8, align 4, !dbg !9071
  %10 = icmp eq i32 %9, 0, !dbg !9072
  br i1 %10, label %11, label %14, !dbg !9073

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %4, i32 0, i32 0, !dbg !9074
  %13 = load i8*, i8** %12, align 4, !dbg !9074
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.7.120, i32 0, i32 0), i8* noundef %13) #25, !dbg !9076
  call void @llvm.dbg.value(metadata i8 0, metadata !9057, metadata !DIExpression()), !dbg !9060
  br label %14, !dbg !9077

14:                                               ; preds = %3, %11
  %15 = phi i1 [ false, %11 ], [ %5, %3 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !9057, metadata !DIExpression()), !dbg !9060
  %16 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %4, i32 1, !dbg !9078
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %16, metadata !9058, metadata !DIExpression()), !dbg !9060
  %17 = icmp ult %struct.ztest_suite_node* %16, getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0), !dbg !9079
  br i1 %17, label %3, label %1, !dbg !9061, !llvm.loop !9080

18:                                               ; preds = %1, %29
  %19 = phi %struct.ztest_unit_test* [ %31, %29 ], [ getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), %1 ]
  %20 = phi i1 [ %30, %29 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %19, metadata !9059, metadata !DIExpression()), !dbg !9060
  %21 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %19, i32 0, i32 0, !dbg !9082
  %22 = load i8*, i8** %21, align 4, !dbg !9082
  %23 = tail call fastcc %struct.ztest_suite_node* @ztest_find_test_suite(i8* noundef %22) #24, !dbg !9085
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %23, metadata !9058, metadata !DIExpression()), !dbg !9060
  %24 = icmp eq %struct.ztest_suite_node* %23, null, !dbg !9086
  br i1 %24, label %25, label %29, !dbg !9088

25:                                               ; preds = %18
  %26 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %19, i32 0, i32 1, !dbg !9089
  %27 = load i8*, i8** %26, align 4, !dbg !9089
  %28 = load i8*, i8** %21, align 4, !dbg !9091
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.8.121, i32 0, i32 0), i8* noundef %27, i8* noundef %28) #25, !dbg !9092
  call void @llvm.dbg.value(metadata i8 0, metadata !9057, metadata !DIExpression()), !dbg !9060
  br label %29, !dbg !9093

29:                                               ; preds = %18, %25
  %30 = phi i1 [ false, %25 ], [ %20, %18 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !9057, metadata !DIExpression()), !dbg !9060
  %31 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %19, i32 1, !dbg !9094
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %31, metadata !9059, metadata !DIExpression()), !dbg !9060
  %32 = icmp ult %struct.ztest_unit_test* %31, getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0), !dbg !9095
  br i1 %32, label %18, label %33, !dbg !9065, !llvm.loop !9096

33:                                               ; preds = %29, %1
  %34 = phi i1 [ %2, %1 ], [ %30, %29 ]
  br i1 %34, label %36, label %35, !dbg !9098

35:                                               ; preds = %33
  store i32 1, i32* @test_status, align 4, !dbg !9099
  br label %36, !dbg !9102

36:                                               ; preds = %35, %33
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), metadata !9059, metadata !DIExpression()), !dbg !9060
  br i1 icmp ult (%struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), %struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0)), label %37, label %60, !dbg !9103

37:                                               ; preds = %36, %57
  %38 = phi %struct.ztest_unit_test* [ %58, %57 ], [ getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), %36 ]
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %38, metadata !9059, metadata !DIExpression()), !dbg !9060
  %39 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %38, i32 0, i32 4, !dbg !9105
  %40 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %39, align 4, !dbg !9105
  %41 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %40, i32 0, i32 2, !dbg !9109
  %42 = load i32, i32* %41, align 4, !dbg !9109
  %43 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %40, i32 0, i32 3, !dbg !9110
  %44 = load i32, i32* %43, align 4, !dbg !9110
  %45 = add i32 %44, %42, !dbg !9111
  %46 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %40, i32 0, i32 1, !dbg !9112
  %47 = load i32, i32* %46, align 4, !dbg !9112
  %48 = add i32 %45, %47, !dbg !9113
  %49 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %40, i32 0, i32 0, !dbg !9114
  %50 = load i32, i32* %49, align 4, !dbg !9114
  %51 = icmp eq i32 %48, %50, !dbg !9115
  br i1 %51, label %57, label %52, !dbg !9116

52:                                               ; preds = %37
  %53 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %38, i32 0, i32 0, !dbg !9117
  %54 = load i8*, i8** %53, align 4, !dbg !9117
  %55 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %38, i32 0, i32 1, !dbg !9119
  %56 = load i8*, i8** %55, align 4, !dbg !9119
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.122, i32 0, i32 0), i8* noundef %54, i8* noundef %56) #25, !dbg !9120
  store i32 1, i32* @test_status, align 4, !dbg !9121
  br label %57, !dbg !9122

57:                                               ; preds = %37, %52
  %58 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %38, i32 1, !dbg !9123
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %58, metadata !9059, metadata !DIExpression()), !dbg !9060
  %59 = icmp ult %struct.ztest_unit_test* %58, getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0), !dbg !9124
  br i1 %59, label %37, label %60, !dbg !9103, !llvm.loop !9125

60:                                               ; preds = %57, %36
  ret void, !dbg !9127
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_run_all(i8* noundef %0) local_unnamed_addr #1 !dbg !9128 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9130, metadata !DIExpression()), !dbg !9131
  %2 = load void (i8*)*, void (i8*)** getelementptr inbounds (%struct.ztest_arch_api, %struct.ztest_arch_api* @ztest_api, i32 0, i32 0), align 4, !dbg !9132
  tail call void %2(i8* noundef %0) #25, !dbg !9133
  ret void, !dbg !9134
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @test_main() local_unnamed_addr #1 !dbg !9135 {
  tail call void @ztest_run_all(i8* noundef null) #24, !dbg !9136
  tail call void @ztest_verify_all_test_suites_ran() #24, !dbg !9137
  ret void, !dbg !9138
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !9139 {
  tail call void @test_main() #24, !dbg !9140
  tail call void @end_report() #24, !dbg !9141
  ret void, !dbg !9142
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ztest_run_all(i8* noundef %0) #1 !dbg !9143 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9145, metadata !DIExpression()), !dbg !9146
  tail call fastcc void @ztest_run_test_suites(i8* noundef %0) #24, !dbg !9147
  ret void, !dbg !9148
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_ztest_should_suite_run(i8* noundef %0, %struct.ztest_suite_node* nocapture noundef readonly %1) #1 !dbg !9149 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9151, metadata !DIExpression()), !dbg !9154
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %1, metadata !9152, metadata !DIExpression()), !dbg !9154
  call void @llvm.dbg.value(metadata i8 1, metadata !9153, metadata !DIExpression()), !dbg !9154
  %3 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %1, i32 0, i32 5, !dbg !9155
  %4 = load i1 (i8*)*, i1 (i8*)** %3, align 4, !dbg !9155
  %5 = icmp eq i1 (i8*)* %4, null, !dbg !9157
  br i1 %5, label %8, label %6, !dbg !9158

6:                                                ; preds = %2
  %7 = tail call zeroext i1 %4(i8* noundef %0) #25, !dbg !9159
  call void @llvm.dbg.value(metadata i1 %7, metadata !9153, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9154
  br label %8, !dbg !9161

8:                                                ; preds = %6, %2
  %9 = phi i1 [ %7, %6 ], [ true, %2 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !9153, metadata !DIExpression()), !dbg !9154
  ret i1 %9, !dbg !9162
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i1 @z_ztest_should_test_run(i8* nocapture readnone %0, i8* nocapture readnone %1) #4 !dbg !9163 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !9165, metadata !DIExpression()), !dbg !9167
  call void @llvm.dbg.value(metadata i8* undef, metadata !9166, metadata !DIExpression()), !dbg !9167
  ret i1 true, !dbg !9168
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ztest_run_test_suites(i8* noundef %0) unnamed_addr #1 !dbg !9169 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9172, metadata !DIExpression()), !dbg !9173
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9174, !srcloc !9176
  %2 = tail call i32 @z_impl_ztest_run_test_suites(i8* noundef %0) #25, !dbg !9177
  ret void, !dbg !9178
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i8* @ztest_relative_filename(i8* noundef readnone returned %0) local_unnamed_addr #4 !dbg !9179 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9183, metadata !DIExpression()), !dbg !9184
  ret i8* %0, !dbg !9185
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !9186 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9188, metadata !DIExpression()), !dbg !9189
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #24, !dbg !9190
  ret void, !dbg !9191
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !9192 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9196, metadata !DIExpression()), !dbg !9202
  call void @llvm.dbg.value(metadata i32 %1, metadata !9197, metadata !DIExpression()), !dbg !9202
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !9198, metadata !DIExpression()), !dbg !9202
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !9203
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !9203
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !9203
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !9199, metadata !DIExpression()), !dbg !9202
  call void @llvm.dbg.value(metadata i32 %0, metadata !9201, metadata !DIExpression()), !dbg !9202
  %7 = icmp slt i32 %0, %1, !dbg !9204
  br i1 %7, label %8, label %22, !dbg !9207

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9201, metadata !DIExpression()), !dbg !9202
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #24, !dbg !9208
  %11 = icmp eq i32 %10, 0, !dbg !9208
  br i1 %11, label %19, label %12, !dbg !9211

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #24, !dbg !9212
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !9214
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !9214
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !9216
  br i1 %15, label %19, label %16, !dbg !9217

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !9218
  %18 = load i8*, i8** %17, align 4, !dbg !9218
  tail call void %14(i32 noundef %9, i8* noundef %18) #25, !dbg !9219
  br label %19, !dbg !9220

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !9221
  call void @llvm.dbg.value(metadata i32 %20, metadata !9201, metadata !DIExpression()), !dbg !9202
  %21 = icmp eq i32 %20, %1, !dbg !9204
  br i1 %21, label %22, label %8, !dbg !9207, !llvm.loop !9222

22:                                               ; preds = %19, %3
  ret void, !dbg !9224
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #15 !dbg !9225 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9227, metadata !DIExpression()), !dbg !9228
  %2 = shl nuw i32 1, %0, !dbg !9229
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #24, !dbg !9232
  ret i32 %3, !dbg !9233
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #14 !dbg !9234 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9238, metadata !DIExpression()), !dbg !9239
  %2 = shl nuw i32 1, %0, !dbg !9240
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #24, !dbg !9243
  ret void, !dbg !9244
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #14 !dbg !9245 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9248, metadata !DIExpression()), !dbg !9249
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !9250
  ret void, !dbg !9251
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #15 !dbg !9252 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9254, metadata !DIExpression()), !dbg !9255
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !9256
  %3 = and i32 %2, %0, !dbg !9256
  %4 = icmp eq i32 %3, %0, !dbg !9257
  %5 = zext i1 %4 to i32, !dbg !9257
  ret i32 %5, !dbg !9258
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !9259 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9261, metadata !DIExpression()), !dbg !9262
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #24, !dbg !9263
  ret void, !dbg !9264
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !9265 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9267, metadata !DIExpression()), !dbg !9268
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #24, !dbg !9269
  ret void, !dbg !9270
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !9271 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9273, metadata !DIExpression()), !dbg !9274
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #24, !dbg !9275
  ret void, !dbg !9276
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !9277 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9279, metadata !DIExpression()), !dbg !9280
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #24, !dbg !9281
  ret void, !dbg !9282
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !9283 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9285, metadata !DIExpression()), !dbg !9286
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #24, !dbg !9287
  ret void, !dbg !9288
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !9289 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9291, metadata !DIExpression()), !dbg !9292
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #24, !dbg !9293
  ret void, !dbg !9294
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !9295 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9297, metadata !DIExpression()), !dbg !9298
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #24, !dbg !9299
  ret void, !dbg !9300
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !9301 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9303, metadata !DIExpression()), !dbg !9304
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #24, !dbg !9305
  ret void, !dbg !9306
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !9307 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9309, metadata !DIExpression()), !dbg !9310
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #24, !dbg !9311
  ret void, !dbg !9312
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !9313 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9315, metadata !DIExpression()), !dbg !9316
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #24, !dbg !9317
  ret void, !dbg !9318
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !9319 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9321, metadata !DIExpression()), !dbg !9322
  tail call fastcc void @__stm32_exti_connect_irqs() #24, !dbg !9323
  ret i32 0, !dbg !9324
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !896 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !900, metadata !DIExpression()), !dbg !9325
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #25, !dbg !9326
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #25, !dbg !9328
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #25, !dbg !9330
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #25, !dbg !9332
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #25, !dbg !9334
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #25, !dbg !9336
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #25, !dbg !9338
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #25, !dbg !9340
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #25, !dbg !9342
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #25, !dbg !9344
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #25, !dbg !9346
  ret void, !dbg !9348
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !9349 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9351, metadata !DIExpression()), !dbg !9353
  call void @llvm.dbg.value(metadata i32 0, metadata !9352, metadata !DIExpression()), !dbg !9353
  call void @llvm.dbg.value(metadata i32 undef, metadata !9352, metadata !DIExpression()), !dbg !9353
  %2 = lshr i32 6684671, %0, !dbg !9354
  %3 = and i32 %2, 1, !dbg !9354
  %4 = or i32 %3, %0, !dbg !9356
  %5 = icmp eq i32 %4, 0, !dbg !9356
  br i1 %5, label %6, label %7, !dbg !9356

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.127, i32 0, i32 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.128, i32 0, i32 0), i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.129, i32 0, i32 0), i32 noundef 123) #25, !dbg !9357
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.129, i32 0, i32 0), i32 noundef 123) #25, !dbg !9357
  unreachable, !dbg !9357

7:                                                ; preds = %1
  %8 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !9362
  %9 = load i32, i32* %8, align 4, !dbg !9362
  call void @llvm.dbg.value(metadata i32 %9, metadata !9352, metadata !DIExpression()), !dbg !9353
  %10 = shl nuw i32 1, %0, !dbg !9363
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %10) #24, !dbg !9364
  tail call void @arch_irq_enable(i32 noundef %9) #25, !dbg !9365
  ret void, !dbg !9366
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #14 !dbg !9367 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9369, metadata !DIExpression()), !dbg !9370
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9371
  %3 = or i32 %2, %0, !dbg !9371
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9371
  ret void, !dbg !9372
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #14 !dbg !9373 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9375, metadata !DIExpression()), !dbg !9376
  %2 = icmp slt i32 %0, 32, !dbg !9377
  br i1 %2, label %3, label %5, !dbg !9379

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !9380
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #24, !dbg !9382
  br label %5, !dbg !9383

5:                                                ; preds = %1, %3
  ret void, !dbg !9384
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #14 !dbg !9385 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9387, metadata !DIExpression()), !dbg !9388
  %2 = xor i32 %0, -1, !dbg !9389
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9389
  %4 = and i32 %3, %2, !dbg !9389
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9389
  ret void, !dbg !9390
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #14 !dbg !9391 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9395, metadata !DIExpression()), !dbg !9397
  call void @llvm.dbg.value(metadata i32 %1, metadata !9396, metadata !DIExpression()), !dbg !9397
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !9398

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !9399
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #24, !dbg !9401
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #24, !dbg !9402
  br label %11, !dbg !9403

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !9404
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #24, !dbg !9405
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #24, !dbg !9406
  br label %11, !dbg !9407

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !9408
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #24, !dbg !9409
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #24, !dbg !9410
  br label %11, !dbg !9411

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !9412
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #24, !dbg !9413
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #24, !dbg !9414
  br label %11, !dbg !9415

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !9416
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !9417 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9419, metadata !DIExpression()), !dbg !9420
  %2 = xor i32 %0, -1, !dbg !9421
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9421
  %4 = and i32 %3, %2, !dbg !9421
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9421
  ret void, !dbg !9422
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !9423 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9425, metadata !DIExpression()), !dbg !9426
  %2 = xor i32 %0, -1, !dbg !9427
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9427
  %4 = and i32 %3, %2, !dbg !9427
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9427
  ret void, !dbg !9428
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !9429 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9431, metadata !DIExpression()), !dbg !9432
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9433
  %3 = or i32 %2, %0, !dbg !9433
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9433
  ret void, !dbg !9434
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !9435 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9437, metadata !DIExpression()), !dbg !9438
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9439
  %3 = or i32 %2, %0, !dbg !9439
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9439
  ret void, !dbg !9440
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #9 !dbg !9441 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9445, metadata !DIExpression()), !dbg !9451
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !9446, metadata !DIExpression()), !dbg !9451
  call void @llvm.dbg.value(metadata i8* %2, metadata !9447, metadata !DIExpression()), !dbg !9451
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_36, metadata !9448, metadata !DIExpression()), !dbg !9451
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !9450, metadata !DIExpression()), !dbg !9451
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !9452
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !9452
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !9454
  br i1 %6, label %7, label %9, !dbg !9455

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !9456
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !9457
  store i8* %2, i8** %8, align 4, !dbg !9458
  br label %9, !dbg !9459

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !9451
  ret i32 %10, !dbg !9460
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #7 !dbg !9461 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9463, metadata !DIExpression()), !dbg !9466
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_36, metadata !9464, metadata !DIExpression()), !dbg !9466
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !9465, metadata !DIExpression()), !dbg !9466
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !9467
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !9468
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !9469
  store i8* null, i8** %3, align 4, !dbg !9470
  ret void, !dbg !9471
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #14 !dbg !9472 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9474, metadata !DIExpression()), !dbg !9479
  call void @llvm.dbg.value(metadata i8* %1, metadata !9475, metadata !DIExpression()), !dbg !9479
  call void @llvm.dbg.value(metadata i8* %1, metadata !9476, metadata !DIExpression()), !dbg !9479
  %3 = bitcast i8* %1 to i32*, !dbg !9480
  %4 = load i32, i32* %3, align 4, !dbg !9480
  %5 = add i32 %4, -169, !dbg !9480
  %6 = icmp ult i32 %5, -121, !dbg !9480
  br i1 %6, label %15, label %7, !dbg !9482

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !9483
  %9 = inttoptr i32 %8 to i32*, !dbg !9484
  call void @llvm.dbg.value(metadata i32* %9, metadata !9477, metadata !DIExpression()), !dbg !9479
  %10 = load volatile i32, i32* %9, align 4, !dbg !9485
  call void @llvm.dbg.value(metadata i32 %10, metadata !9478, metadata !DIExpression()), !dbg !9479
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9486
  %12 = bitcast i8* %11 to i32*, !dbg !9486
  %13 = load i32, i32* %12, align 4, !dbg !9486
  %14 = or i32 %13, %10, !dbg !9487
  call void @llvm.dbg.value(metadata i32 %14, metadata !9478, metadata !DIExpression()), !dbg !9479
  store volatile i32 %14, i32* %9, align 4, !dbg !9488
  br label %15, !dbg !9489

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !9479
  ret i32 %16, !dbg !9490
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #14 !dbg !9491 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9493, metadata !DIExpression()), !dbg !9498
  call void @llvm.dbg.value(metadata i8* %1, metadata !9494, metadata !DIExpression()), !dbg !9498
  call void @llvm.dbg.value(metadata i8* %1, metadata !9495, metadata !DIExpression()), !dbg !9498
  %3 = bitcast i8* %1 to i32*, !dbg !9499
  %4 = load i32, i32* %3, align 4, !dbg !9499
  %5 = add i32 %4, -169, !dbg !9499
  %6 = icmp ult i32 %5, -121, !dbg !9499
  br i1 %6, label %16, label %7, !dbg !9501

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !9502
  %9 = inttoptr i32 %8 to i32*, !dbg !9503
  call void @llvm.dbg.value(metadata i32* %9, metadata !9496, metadata !DIExpression()), !dbg !9498
  %10 = load volatile i32, i32* %9, align 4, !dbg !9504
  call void @llvm.dbg.value(metadata i32 %10, metadata !9497, metadata !DIExpression()), !dbg !9498
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9505
  %12 = bitcast i8* %11 to i32*, !dbg !9505
  %13 = load i32, i32* %12, align 4, !dbg !9505
  %14 = xor i32 %13, -1, !dbg !9506
  %15 = and i32 %10, %14, !dbg !9507
  call void @llvm.dbg.value(metadata i32 %15, metadata !9497, metadata !DIExpression()), !dbg !9498
  store volatile i32 %15, i32* %9, align 4, !dbg !9508
  br label %16, !dbg !9509

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !9498
  ret i32 %17, !dbg !9510
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !9511 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9513, metadata !DIExpression()), !dbg !9521
  call void @llvm.dbg.value(metadata i8* %1, metadata !9514, metadata !DIExpression()), !dbg !9521
  call void @llvm.dbg.value(metadata i32* %2, metadata !9515, metadata !DIExpression()), !dbg !9521
  call void @llvm.dbg.value(metadata i8* %1, metadata !9516, metadata !DIExpression()), !dbg !9521
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !9522
  call void @llvm.dbg.value(metadata i32 %4, metadata !9517, metadata !DIExpression()), !dbg !9521
  call void @llvm.dbg.value(metadata i32 undef, metadata !9518, metadata !DIExpression()), !dbg !9521
  call void @llvm.dbg.value(metadata i32 undef, metadata !9519, metadata !DIExpression()), !dbg !9521
  call void @llvm.dbg.value(metadata i32 %4, metadata !9520, metadata !DIExpression()), !dbg !9521
  %5 = bitcast i8* %1 to i32*, !dbg !9523
  %6 = load i32, i32* %5, align 4, !dbg !9523
  switch i32 %6, label %21 [
    i32 48, label %19
    i32 52, label %19
    i32 56, label %19
    i32 64, label %7
    i32 68, label %9
    i32 168, label %19
    i32 6, label %19
    i32 1, label %11
    i32 2, label %14
    i32 4, label %17
    i32 5, label %18
  ], !dbg !9524

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #24, !dbg !9525
  call void @llvm.dbg.value(metadata i32 %8, metadata !9518, metadata !DIExpression()), !dbg !9521
  br label %19, !dbg !9526

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 1) #24, !dbg !9528
  call void @llvm.dbg.value(metadata i32 %10, metadata !9519, metadata !DIExpression()), !dbg !9521
  br label %19, !dbg !9529

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #25, !dbg !9530
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12, i32 noundef 2) #24, !dbg !9531
  br label %19, !dbg !9532

14:                                               ; preds = %3
  %15 = tail call i32 @get_pllsrc_frequency() #25, !dbg !9533
  %16 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %15, i32 noundef 8) #24, !dbg !9534
  br label %19, !dbg !9535

17:                                               ; preds = %3
  br label %19, !dbg !9536

18:                                               ; preds = %3
  br label %19, !dbg !9537

19:                                               ; preds = %3, %3, %3, %3, %3, %18, %17, %14, %11, %9, %7
  %20 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ %16, %14 ], [ 0, %17 ], [ 32000, %18 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %20, i32* %2, align 4, !dbg !9538
  br label %21, !dbg !9539

21:                                               ; preds = %19, %3
  %22 = phi i32 [ -134, %3 ], [ 0, %19 ], !dbg !9521
  ret i32 %22, !dbg !9539
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #14 !dbg !9540 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9542, metadata !DIExpression()), !dbg !9550
  call void @llvm.dbg.value(metadata i8* %1, metadata !9543, metadata !DIExpression()), !dbg !9550
  call void @llvm.dbg.value(metadata i8* %2, metadata !9544, metadata !DIExpression()), !dbg !9550
  call void @llvm.dbg.value(metadata i8* %1, metadata !9545, metadata !DIExpression()), !dbg !9550
  %4 = bitcast i8* %1 to i32*, !dbg !9551
  %5 = load i32, i32* %4, align 4, !dbg !9551
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #24, !dbg !9552
  call void @llvm.dbg.value(metadata i32 %6, metadata !9549, metadata !DIExpression()), !dbg !9550
  %7 = icmp slt i32 %6, 0, !dbg !9553
  br i1 %7, label %22, label %8, !dbg !9555

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !9545, metadata !DIExpression()), !dbg !9550
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9556
  %10 = bitcast i8* %9 to i32*, !dbg !9556
  %11 = load i32, i32* %10, align 4, !dbg !9556
  %12 = lshr i32 %11, 16, !dbg !9556
  %13 = and i32 %12, 7, !dbg !9556
  %14 = lshr i32 %11, 8, !dbg !9557
  %15 = and i32 %14, 31, !dbg !9557
  %16 = shl i32 %13, %15, !dbg !9558
  call void @llvm.dbg.value(metadata i32 %16, metadata !9548, metadata !DIExpression()), !dbg !9550
  %17 = and i32 %11, 255, !dbg !9559
  %18 = or i32 %17, 1073887232, !dbg !9560
  %19 = inttoptr i32 %18 to i32*, !dbg !9561
  call void @llvm.dbg.value(metadata i32* %19, metadata !9546, metadata !DIExpression()), !dbg !9550
  %20 = load volatile i32, i32* %19, align 4, !dbg !9562
  call void @llvm.dbg.value(metadata i32 %20, metadata !9547, metadata !DIExpression()), !dbg !9550
  %21 = or i32 %16, %20, !dbg !9563
  call void @llvm.dbg.value(metadata i32 %21, metadata !9547, metadata !DIExpression()), !dbg !9550
  store volatile i32 %21, i32* %19, align 4, !dbg !9564
  br label %22, !dbg !9565

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !9550
  ret i32 %23, !dbg !9566
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #4 !dbg !9567 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9571, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.value(metadata i32 0, metadata !9572, metadata !DIExpression()), !dbg !9573
  %2 = add i32 %0, -1, !dbg !9574
  %3 = icmp ult i32 %2, 6, !dbg !9574
  br i1 %3, label %4, label %7, !dbg !9574

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !9574
  %6 = load i32, i32* %5, align 4, !dbg !9574
  call void @llvm.dbg.value(metadata i32 %6, metadata !9572, metadata !DIExpression()), !dbg !9573
  br label %7, !dbg !9575

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !9573
  ret i32 %8, !dbg !9576
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !9577 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9581, metadata !DIExpression()), !dbg !9583
  call void @llvm.dbg.value(metadata i32 %1, metadata !9582, metadata !DIExpression()), !dbg !9583
  %3 = udiv i32 %0, %1, !dbg !9584
  ret i32 %3, !dbg !9585
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !9586 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9590, metadata !DIExpression()), !dbg !9594
  call void @llvm.dbg.value(metadata i32 8, metadata !9591, metadata !DIExpression()), !dbg !9594
  call void @llvm.dbg.value(metadata i32 84, metadata !9592, metadata !DIExpression()), !dbg !9594
  call void @llvm.dbg.value(metadata i32 %1, metadata !9593, metadata !DIExpression()), !dbg !9594
  %3 = mul i32 %0, 84, !dbg !9595
  %4 = shl nsw i32 %1, 3, !dbg !9596
  %5 = udiv i32 %3, %4, !dbg !9597
  ret i32 %5, !dbg !9598
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !9599 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !9601, metadata !DIExpression()), !dbg !9604
  tail call void @config_enable_default_clocks() #25, !dbg !9605
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #25, !dbg !9606
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #24, !dbg !9606
  %4 = lshr i32 %3, 4, !dbg !9606
  %5 = and i32 %4, 15, !dbg !9606
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !9606
  %7 = load i8, i8* %6, align 1, !dbg !9606
  %8 = zext i8 %7 to i32, !dbg !9606
  %9 = lshr i32 %2, %8, !dbg !9606
  call void @llvm.dbg.value(metadata i32 %9, metadata !9602, metadata !DIExpression()), !dbg !9604
  call void @llvm.dbg.value(metadata !DIArgList(i32 84000000, i8 undef), metadata !9603, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !9604
  %10 = icmp ult i32 %9, 84000000, !dbg !9607
  br i1 %10, label %11, label %13, !dbg !9609

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #25, !dbg !9610
  br label %13, !dbg !9612

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #24, !dbg !9613
  tail call fastcc void @set_up_plls() #24, !dbg !9614
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !9615
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #24, !dbg !9618
  br label %14, !dbg !9619

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !9620
  %16 = icmp eq i32 %15, 8, !dbg !9621
  br i1 %16, label %17, label %14, !dbg !9619, !llvm.loop !9622

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 83999999, !dbg !9624
  br i1 %18, label %19, label %21, !dbg !9626

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #25, !dbg !9627
  br label %21, !dbg !9629

21:                                               ; preds = %19, %17
  store i32 84000000, i32* @SystemCoreClock, align 4, !dbg !9630
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #24, !dbg !9631
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #24, !dbg !9632
  ret i32 0, !dbg !9633
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #15 !dbg !9634 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9636
  %2 = and i32 %1, 240, !dbg !9636
  ret i32 %2, !dbg !9637
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #14 !dbg !9638 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #24, !dbg !9639
  tail call fastcc void @LL_RCC_HSE_Enable() #24, !dbg !9644
  br label %1, !dbg !9645

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #24, !dbg !9646
  %3 = icmp eq i32 %2, 1, !dbg !9647
  br i1 %3, label %4, label %1, !dbg !9645, !llvm.loop !9648

4:                                                ; preds = %1
  tail call fastcc void @LL_RCC_LSI_Enable() #24, !dbg !9650
  br label %5, !dbg !9653

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #24, !dbg !9654
  %7 = icmp eq i32 %6, 1, !dbg !9655
  br i1 %7, label %8, label %5, !dbg !9653, !llvm.loop !9656

8:                                                ; preds = %5
  ret void, !dbg !9658
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !9659 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !9660
  %2 = icmp eq i32 %1, 8, !dbg !9662
  br i1 %2, label %3, label %4, !dbg !9663

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !9664
  tail call fastcc void @stm32_clock_switch_to_hsi() #24, !dbg !9666
  br label %4, !dbg !9667

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #24, !dbg !9668
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9669
  %6 = and i32 %5, -196609, !dbg !9669
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9669
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9670
  %8 = and i32 %7, -251658241, !dbg !9670
  %9 = or i32 %8, 134217728, !dbg !9670
  store volatile i32 %9, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9670
  tail call void @config_pll_sysclock() #25, !dbg !9671
  tail call fastcc void @LL_RCC_PLL_Enable() #24, !dbg !9672
  br label %10, !dbg !9673

10:                                               ; preds = %10, %4
  %11 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #24, !dbg !9674
  %12 = icmp eq i32 %11, 1, !dbg !9675
  br i1 %12, label %13, label %10, !dbg !9673, !llvm.loop !9676

13:                                               ; preds = %10
  ret void, !dbg !9678
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #14 !dbg !9679 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9681, metadata !DIExpression()), !dbg !9682
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9683
  %2 = and i32 %1, -241, !dbg !9683
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9683
  ret void, !dbg !9684
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #14 !dbg !9685 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9687, metadata !DIExpression()), !dbg !9688
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9689
  %3 = and i32 %2, -4, !dbg !9689
  %4 = or i32 %3, %0, !dbg !9689
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9689
  ret void, !dbg !9690
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #15 !dbg !9691 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9692
  %2 = and i32 %1, 12, !dbg !9692
  ret i32 %2, !dbg !9693
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #14 !dbg !9694 {
  call void @llvm.dbg.value(metadata i32 4096, metadata !9696, metadata !DIExpression()), !dbg !9697
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9698
  %2 = and i32 %1, -7169, !dbg !9698
  %3 = or i32 %2, 4096, !dbg !9698
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9698
  ret void, !dbg !9699
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #14 !dbg !9700 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9702, metadata !DIExpression()), !dbg !9703
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9704
  %2 = and i32 %1, -57345, !dbg !9704
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9704
  ret void, !dbg !9705
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #14 !dbg !9706 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !9707
  %2 = icmp eq i32 %1, 1, !dbg !9709
  br i1 %2, label %7, label %3, !dbg !9710

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #24, !dbg !9711
  br label %4, !dbg !9713

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !9714
  %6 = icmp eq i32 %5, 1, !dbg !9715
  br i1 %6, label %7, label %4, !dbg !9713, !llvm.loop !9716

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #24, !dbg !9718
  br label %8, !dbg !9719

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !9720
  %10 = icmp eq i32 %9, 0, !dbg !9721
  br i1 %10, label %11, label %8, !dbg !9719, !llvm.loop !9722

11:                                               ; preds = %8
  ret void, !dbg !9724
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #14 !dbg !9725 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9726
  %2 = and i32 %1, -16777217, !dbg !9726
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9726
  ret void, !dbg !9727
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #14 !dbg !9728 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9729
  %2 = or i32 %1, 16777216, !dbg !9729
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9729
  ret void, !dbg !9730
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #15 !dbg !9731 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9732
  %2 = lshr i32 %1, 25, !dbg !9733
  %3 = and i32 %2, 1, !dbg !9733
  ret i32 %3, !dbg !9734
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #15 !dbg !9735 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9736
  %2 = lshr i32 %1, 1, !dbg !9737
  %3 = and i32 %2, 1, !dbg !9737
  ret i32 %3, !dbg !9738
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #14 !dbg !9739 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9740
  %2 = or i32 %1, 1, !dbg !9740
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9740
  ret void, !dbg !9741
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #14 !dbg !9742 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9743
  %2 = and i32 %1, -262145, !dbg !9743
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9743
  ret void, !dbg !9744
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #14 !dbg !9745 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9746
  %2 = or i32 %1, 65536, !dbg !9746
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9746
  ret void, !dbg !9747
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #15 !dbg !9748 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9749
  %2 = lshr i32 %1, 17, !dbg !9750
  %3 = and i32 %2, 1, !dbg !9750
  ret i32 %3, !dbg !9751
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #14 !dbg !9752 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !9753
  %2 = or i32 %1, 1, !dbg !9753
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !9753
  ret void, !dbg !9754
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #15 !dbg !9755 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !9756
  %2 = lshr i32 %1, 1, !dbg !9757
  %3 = and i32 %2, 1, !dbg !9757
  ret i32 %3, !dbg !9758
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #4 !dbg !9759 {
  ret i32 16000000, !dbg !9761
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #14 !dbg !9765 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #24, !dbg !9766
  ret void, !dbg !9767
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #14 !dbg !9768 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !9772, metadata !DIExpression()), !dbg !9776
  call void @llvm.dbg.value(metadata i32 8, metadata !9773, metadata !DIExpression()), !dbg !9776
  call void @llvm.dbg.value(metadata i32 84, metadata !9774, metadata !DIExpression()), !dbg !9776
  call void @llvm.dbg.value(metadata i32 0, metadata !9775, metadata !DIExpression()), !dbg !9776
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9777
  %2 = and i32 %1, -4227072, !dbg !9777
  %3 = or i32 %2, 4199688, !dbg !9777
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9777
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9778
  %5 = and i32 %4, -196609, !dbg !9778
  store volatile i32 %5, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9778
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9779
  %7 = and i32 %6, -1879048193, !dbg !9779
  store volatile i32 %7, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9779
  ret void, !dbg !9780
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #19 !dbg !9781 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #24, !dbg !9782
  ret void, !dbg !9783
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #19 !dbg !9784 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !9787, metadata !DIExpression()), !dbg !9789
  %2 = bitcast i32* %1 to i8*, !dbg !9790
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !9790
  call void @llvm.dbg.declare(metadata i32* %1, metadata !9788, metadata !DIExpression()), !dbg !9791
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9792
  %4 = or i32 %3, 268435456, !dbg !9792
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9792
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9793
  %6 = and i32 %5, 268435456, !dbg !9793
  store volatile i32 %6, i32* %1, align 4, !dbg !9794
  %7 = load volatile i32, i32* %1, align 4, !dbg !9795
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !9796
  ret void, !dbg !9796
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !9797 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9799, metadata !DIExpression()), !dbg !9800
  %2 = tail call fastcc zeroext i1 @device_is_ready() #24, !dbg !9801
  br i1 %2, label %3, label %4, !dbg !9803

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #24, !dbg !9804
  br label %4, !dbg !9805

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !9800
  ret i32 %5, !dbg !9806
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !9807 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !9812, metadata !DIExpression()), !dbg !9813
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9814, !srcloc !9816
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #24, !dbg !9817
  ret i1 %1, !dbg !9818
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !9819 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !9820
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !9821
  ret void, !dbg !9822
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !9823 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9825, metadata !DIExpression()), !dbg !9826
  %2 = icmp eq i32 %0, 10, !dbg !9827
  br i1 %2, label %3, label %4, !dbg !9829

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #24, !dbg !9830
  br label %4, !dbg !9832

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !9833
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #24, !dbg !9834
  ret i32 %0, !dbg !9835
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !9836 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !9839, metadata !DIExpression()), !dbg !9841
  call void @llvm.dbg.value(metadata i8 %0, metadata !9840, metadata !DIExpression()), !dbg !9841
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9842, !srcloc !9844
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #24, !dbg !9845
  ret void, !dbg !9846
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !9847 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !9849, metadata !DIExpression()), !dbg !9852
  call void @llvm.dbg.value(metadata i8 %0, metadata !9850, metadata !DIExpression()), !dbg !9852
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_48, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9853
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !9851, metadata !DIExpression()), !dbg !9852
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !9854
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !9854
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_48, i8 noundef zeroext %0) #25, !dbg !9855
  ret void, !dbg !9856
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !9857 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !9859, metadata !DIExpression()), !dbg !9860
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_48) #25, !dbg !9861
  ret i1 %1, !dbg !9862
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #4 !dbg !9863 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !9912, metadata !DIExpression()), !dbg !9915
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !9913, metadata !DIExpression()), !dbg !9915
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !9914, metadata !DIExpression()), !dbg !9915
  ret void, !dbg !9916
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !9917 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9919, metadata !DIExpression()), !dbg !9924
  call void @llvm.dbg.value(metadata i8 %1, metadata !9920, metadata !DIExpression()), !dbg !9924
  call void @llvm.dbg.value(metadata i32 %2, metadata !9921, metadata !DIExpression()), !dbg !9924
  %5 = bitcast i32* %4 to i8*, !dbg !9925
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9925
  call void @llvm.dbg.value(metadata i32* %4, metadata !9923, metadata !DIExpression(DW_OP_deref)), !dbg !9924
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #24, !dbg !9926
  call void @llvm.dbg.value(metadata i32 %6, metadata !9922, metadata !DIExpression()), !dbg !9924
  %7 = icmp eq i32 %6, 0, !dbg !9927
  br i1 %7, label %8, label %31, !dbg !9929

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !9922, metadata !DIExpression()), !dbg !9924
  %9 = and i32 %2, 131072, !dbg !9930
  %10 = icmp eq i32 %9, 0, !dbg !9932
  br i1 %10, label %28, label %11, !dbg !9933

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !9934
  %13 = icmp eq i32 %12, 0, !dbg !9937
  br i1 %13, label %18, label %14, !dbg !9938

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !9939
  %16 = shl nuw i32 1, %15, !dbg !9939
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #24, !dbg !9941
  br label %25, !dbg !9942

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !9943
  %20 = icmp eq i32 %19, 0, !dbg !9945
  %21 = zext i8 %1 to i32, !dbg !9924
  br i1 %20, label %25, label %22, !dbg !9946

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !9947
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #24, !dbg !9949
  br label %25, !dbg !9950

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !9951
  %27 = load i32, i32* %4, align 4, !dbg !9952
  call void @llvm.dbg.value(metadata i32 %30, metadata !9923, metadata !DIExpression()), !dbg !9924
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #24, !dbg !9953
  br label %31, !dbg !9954

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !9951
  %30 = load i32, i32* %4, align 4, !dbg !9952
  call void @llvm.dbg.value(metadata i32 %30, metadata !9923, metadata !DIExpression()), !dbg !9924
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #24, !dbg !9953
  call void @llvm.dbg.value(metadata i32 0, metadata !9922, metadata !DIExpression()), !dbg !9924
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9955
  ret i32 %6, !dbg !9955
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #15 !dbg !9956 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9960, metadata !DIExpression()), !dbg !9965
  call void @llvm.dbg.value(metadata i32* %1, metadata !9961, metadata !DIExpression()), !dbg !9965
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9966
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9966
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9966
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9962, metadata !DIExpression()), !dbg !9965
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9967
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9967
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9967
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9964, metadata !DIExpression()), !dbg !9965
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #24, !dbg !9968
  store i32 %9, i32* %1, align 4, !dbg !9969
  ret i32 0, !dbg !9970
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #14 !dbg !9971 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9973, metadata !DIExpression()), !dbg !9979
  call void @llvm.dbg.value(metadata i32 %1, metadata !9974, metadata !DIExpression()), !dbg !9979
  call void @llvm.dbg.value(metadata i32 %2, metadata !9975, metadata !DIExpression()), !dbg !9979
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9980
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !9980
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !9980
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !9976, metadata !DIExpression()), !dbg !9979
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !9981
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !9981
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !9981
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !9977, metadata !DIExpression()), !dbg !9979
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #24, !dbg !9982
  call void @llvm.dbg.value(metadata i32 %10, metadata !9978, metadata !DIExpression()), !dbg !9979
  %11 = xor i32 %1, -1, !dbg !9983
  %12 = and i32 %10, %11, !dbg !9984
  %13 = and i32 %2, %1, !dbg !9985
  %14 = or i32 %12, %13, !dbg !9986
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #24, !dbg !9987
  ret i32 0, !dbg !9988
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !9989 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9991, metadata !DIExpression()), !dbg !9995
  call void @llvm.dbg.value(metadata i32 %1, metadata !9992, metadata !DIExpression()), !dbg !9995
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9996
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9996
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9996
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9993, metadata !DIExpression()), !dbg !9995
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9997
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9997
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9997
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9994, metadata !DIExpression()), !dbg !9995
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !9998
  store volatile i32 %1, i32* %9, align 4, !dbg !9998
  ret i32 0, !dbg !9999
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !10000 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10002, metadata !DIExpression()), !dbg !10006
  call void @llvm.dbg.value(metadata i32 %1, metadata !10003, metadata !DIExpression()), !dbg !10006
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10007
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10007
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10007
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10004, metadata !DIExpression()), !dbg !10006
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10008
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10008
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10008
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10005, metadata !DIExpression()), !dbg !10006
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #24, !dbg !10009
  ret i32 0, !dbg !10010
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !10011 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10013, metadata !DIExpression()), !dbg !10017
  call void @llvm.dbg.value(metadata i32 %1, metadata !10014, metadata !DIExpression()), !dbg !10017
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10018
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10018
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10018
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10015, metadata !DIExpression()), !dbg !10017
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10019
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10019
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10019
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10016, metadata !DIExpression()), !dbg !10017
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !10020
  %10 = load volatile i32, i32* %9, align 4, !dbg !10020
  %11 = xor i32 %10, %1, !dbg !10020
  store volatile i32 %11, i32* %9, align 4, !dbg !10020
  ret i32 0, !dbg !10021
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !10022 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10024, metadata !DIExpression()), !dbg !10034
  call void @llvm.dbg.value(metadata i8 %1, metadata !10025, metadata !DIExpression()), !dbg !10034
  call void @llvm.dbg.value(metadata i32 %2, metadata !10026, metadata !DIExpression()), !dbg !10034
  call void @llvm.dbg.value(metadata i32 %3, metadata !10027, metadata !DIExpression()), !dbg !10034
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10035
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !10035
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !10035
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !10028, metadata !DIExpression()), !dbg !10034
  call void @llvm.dbg.value(metadata i8* undef, metadata !10029, metadata !DIExpression()), !dbg !10034
  call void @llvm.dbg.value(metadata i32 0, metadata !10031, metadata !DIExpression()), !dbg !10034
  call void @llvm.dbg.value(metadata i32 0, metadata !10032, metadata !DIExpression()), !dbg !10034
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !10036

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !10037
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #24, !dbg !10041
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !10042
  %12 = load i32, i32* %11, align 4, !dbg !10042
  %13 = icmp eq i32 %10, %12, !dbg !10043
  br i1 %13, label %14, label %29, !dbg !10044

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #25, !dbg !10045
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #25, !dbg !10047
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #25, !dbg !10048
  br label %29, !dbg !10049

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10050
  %17 = load i8*, i8** %16, align 4, !dbg !10050
  call void @llvm.dbg.value(metadata i8* %17, metadata !10029, metadata !DIExpression()), !dbg !10034
  %18 = zext i8 %1 to i32, !dbg !10051
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #25, !dbg !10053
  %20 = icmp eq i32 %19, 0, !dbg !10054
  br i1 %20, label %21, label %29, !dbg !10055

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !10056
  %23 = load i32, i32* %22, align 4, !dbg !10056
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #24, !dbg !10057
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !10058

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !10031, metadata !DIExpression()), !dbg !10034
  br label %27, !dbg !10059

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !10031, metadata !DIExpression()), !dbg !10034
  br label %27, !dbg !10061

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !10031, metadata !DIExpression()), !dbg !10034
  br label %27, !dbg !10062

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !10034
  call void @llvm.dbg.value(metadata i32 %28, metadata !10031, metadata !DIExpression()), !dbg !10034
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #25, !dbg !10063
  tail call void @stm32_exti_enable(i32 noundef %18) #25, !dbg !10064
  br label %29, !dbg !10064

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !10034
  call void @llvm.dbg.value(metadata i32 %30, metadata !10032, metadata !DIExpression()), !dbg !10034
  call void @llvm.dbg.label(metadata !10033), !dbg !10065
  ret i32 %30, !dbg !10066
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #1 !dbg !10067 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10069, metadata !DIExpression()), !dbg !10073
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !10070, metadata !DIExpression()), !dbg !10073
  call void @llvm.dbg.value(metadata i1 %2, metadata !10071, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10073
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10074
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !10074
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !10074
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !10072, metadata !DIExpression()), !dbg !10073
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !10075
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #24, !dbg !10076
  ret i32 %8, !dbg !10077
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #1 !dbg !10078 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10084, metadata !DIExpression()), !dbg !10087
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !10085, metadata !DIExpression()), !dbg !10087
  call void @llvm.dbg.value(metadata i1 %2, metadata !10086, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10087
  %4 = icmp eq %struct.gpio_callback* %1, null, !dbg !10088
  br i1 %4, label %5, label %6, !dbg !10091

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.140, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.34.141, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.142, i32 0, i32 0), i32 noundef 42) #25, !dbg !10092
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35.143, i32 0, i32 0)) #25, !dbg !10092
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.142, i32 0, i32 0), i32 noundef 42) #25, !dbg !10092
  unreachable, !dbg !10092

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 1, !dbg !10094
  %8 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %7, align 4, !dbg !10094
  %9 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %8, null, !dbg !10094
  br i1 %9, label %10, label %11, !dbg !10097

10:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.140, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.36.144, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.142, i32 0, i32 0), i32 noundef 43) #25, !dbg !10098
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33.145, i32 0, i32 0)) #25, !dbg !10098
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.142, i32 0, i32 0), i32 noundef 43) #25, !dbg !10098
  unreachable, !dbg !10098

11:                                               ; preds = %6
  %12 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #24, !dbg !10100
  br i1 %12, label %18, label %13, !dbg !10102

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !10103
  %15 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef nonnull %14) #24, !dbg !10106
  %16 = or i1 %15, %2, !dbg !10107
  %17 = select i1 %16, i32 0, i32 -22, !dbg !10107
  br i1 %2, label %19, label %21, !dbg !10107

18:                                               ; preds = %11
  br i1 %2, label %19, label %21, !dbg !10108

19:                                               ; preds = %18, %13
  %20 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !10109
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef nonnull %20) #24, !dbg !10112
  br label %21, !dbg !10113

21:                                               ; preds = %13, %19, %18
  %22 = phi i32 [ %17, %13 ], [ -22, %18 ], [ 0, %19 ], !dbg !10087
  ret i32 %22, !dbg !10114
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !10115 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10119, metadata !DIExpression()), !dbg !10120
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10121
  %3 = icmp eq %struct._snode* %2, null, !dbg !10121
  ret i1 %3, !dbg !10121
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #13 !dbg !10122 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10126, metadata !DIExpression()), !dbg !10130
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10127, metadata !DIExpression()), !dbg !10130
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10128, metadata !DIExpression()), !dbg !10130
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10131
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10129, metadata !DIExpression()), !dbg !10130
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10128, metadata !DIExpression()), !dbg !10130
  %4 = icmp eq %struct._snode* %3, null, !dbg !10133
  br i1 %4, label %15, label %5, !dbg !10131

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10129, metadata !DIExpression()), !dbg !10130
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10128, metadata !DIExpression()), !dbg !10130
  %6 = icmp eq %struct._snode* %3, %1, !dbg !10135
  br i1 %6, label %9, label %11, !dbg !10138

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10129, metadata !DIExpression()), !dbg !10130
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10128, metadata !DIExpression()), !dbg !10130
  %8 = icmp eq %struct._snode* %13, %1, !dbg !10135
  br i1 %8, label %9, label %11, !dbg !10138, !llvm.loop !10139

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #24, !dbg !10140
  br label %15, !dbg !10140

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10129, metadata !DIExpression()), !dbg !10130
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10128, metadata !DIExpression()), !dbg !10130
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #24, !dbg !10133
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10129, metadata !DIExpression()), !dbg !10130
  %14 = icmp eq %struct._snode* %13, null, !dbg !10133
  br i1 %14, label %15, label %7, !dbg !10131, !llvm.loop !10139

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !10142
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !10143 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10147, metadata !DIExpression()), !dbg !10149
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10148, metadata !DIExpression()), !dbg !10149
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10150
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #24, !dbg !10150
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #24, !dbg !10150
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !10151
  %5 = icmp eq %struct._snode* %4, null, !dbg !10151
  br i1 %5, label %6, label %8, !dbg !10150

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10153
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #24, !dbg !10153
  br label %8, !dbg !10153

8:                                                ; preds = %6, %2
  ret void, !dbg !10150
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !10155 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10159, metadata !DIExpression()), !dbg !10160
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10161
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10161
  ret %struct._snode* %3, !dbg !10162
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !10163 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10167, metadata !DIExpression()), !dbg !10169
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10168, metadata !DIExpression()), !dbg !10169
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10170
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10171
  ret void, !dbg !10172
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !10173 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10175, metadata !DIExpression()), !dbg !10177
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10176, metadata !DIExpression()), !dbg !10177
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10178
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10179
  ret void, !dbg !10180
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !10181 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10183, metadata !DIExpression()), !dbg !10184
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10185
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10185
  ret %struct._snode* %3, !dbg !10186
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !10187 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10189, metadata !DIExpression()), !dbg !10191
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10190, metadata !DIExpression()), !dbg !10191
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10192
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10193
  ret void, !dbg !10194
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #9 !dbg !10195 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10199, metadata !DIExpression()), !dbg !10202
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10200, metadata !DIExpression()), !dbg !10202
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !10201, metadata !DIExpression()), !dbg !10202
  %4 = icmp eq %struct._snode* %1, null, !dbg !10203
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #24, !dbg !10205
  br i1 %4, label %6, label %11, !dbg !10206

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #24, !dbg !10207
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !10209
  %8 = icmp eq %struct._snode* %7, %2, !dbg !10209
  br i1 %8, label %9, label %15, !dbg !10207

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10211
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #24, !dbg !10211
  br label %15, !dbg !10211

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #24, !dbg !10213
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !10215
  %13 = icmp eq %struct._snode* %12, %2, !dbg !10215
  br i1 %13, label %14, label %15, !dbg !10213

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #24, !dbg !10217
  br label %15, !dbg !10217

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #24, !dbg !10206
  ret void, !dbg !10206
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #8 !dbg !10219 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10223, metadata !DIExpression()), !dbg !10224
  %2 = icmp eq %struct._snode* %0, null, !dbg !10225
  br i1 %2, label %5, label %3, !dbg !10225

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #24, !dbg !10225
  br label %5, !dbg !10225

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !10225
  ret %struct._snode* %6, !dbg !10225
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !10226 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10228, metadata !DIExpression()), !dbg !10229
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #24, !dbg !10230
  ret %struct._snode* %2, !dbg !10230
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !10231 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10233, metadata !DIExpression()), !dbg !10234
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10235
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10235
  ret %struct._snode* %3, !dbg !10236
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !10237 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10239, metadata !DIExpression()), !dbg !10242
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #24, !dbg !10243, !range !10244
  call void @llvm.dbg.value(metadata i32 %2, metadata !10240, metadata !DIExpression()), !dbg !10242
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #24, !dbg !10245
  call void @llvm.dbg.value(metadata i32 %3, metadata !10241, metadata !DIExpression()), !dbg !10242
  ret i32 %3, !dbg !10246
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !10247 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10249, metadata !DIExpression()), !dbg !10252
  call void @llvm.dbg.value(metadata i8* %1, metadata !10250, metadata !DIExpression()), !dbg !10252
  call void @llvm.dbg.value(metadata i8* %1, metadata !10251, metadata !DIExpression()), !dbg !10252
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !10253
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !10253
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10254
  %6 = bitcast i8* %5 to %struct.device**, !dbg !10254
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !10254
  %8 = shl nuw i32 1, %0, !dbg !10255
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #24, !dbg !10256
  ret void, !dbg !10257
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10258 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !10262, metadata !DIExpression()), !dbg !10268
  call void @llvm.dbg.value(metadata i32 %1, metadata !10263, metadata !DIExpression()), !dbg !10268
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10264, metadata !DIExpression()), !dbg !10268
  %4 = bitcast i64* %3 to i8*, !dbg !10269
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #23, !dbg !10269
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !10266, metadata !DIExpression()), !dbg !10268
  store i64 70368744177732, i64* %3, align 8, !dbg !10270
  call void @llvm.dbg.value(metadata i64* %3, metadata !10266, metadata !DIExpression(DW_OP_deref)), !dbg !10268
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #24, !dbg !10271
  call void @llvm.dbg.value(metadata i32 %5, metadata !10267, metadata !DIExpression()), !dbg !10268
  %6 = icmp eq i32 %5, 0, !dbg !10272
  br i1 %6, label %7, label %8, !dbg !10274

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #24, !dbg !10275
  br label %8, !dbg !10276

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #23, !dbg !10277
  ret void, !dbg !10277
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !10278 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10280, metadata !DIExpression()), !dbg !10283
  call void @llvm.dbg.value(metadata i8* %0, metadata !10281, metadata !DIExpression()), !dbg !10283
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_8, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !10284
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !10282, metadata !DIExpression()), !dbg !10283
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !10285
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !10285
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_8, i8* noundef %0) #25, !dbg !10286
  ret i32 %5, !dbg !10287
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10288 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10290, metadata !DIExpression()), !dbg !10293
  call void @llvm.dbg.value(metadata i32 %1, metadata !10291, metadata !DIExpression()), !dbg !10293
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #24, !dbg !10294
  call void @llvm.dbg.value(metadata i32 %3, metadata !10292, metadata !DIExpression()), !dbg !10293
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #24, !dbg !10295
  ret void, !dbg !10296
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #4 !dbg !10297 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10301, metadata !DIExpression()), !dbg !10302
  %2 = sdiv i32 %0, 4, !dbg !10303
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !10304
  %6 = add nsw i32 %5, 16, !dbg !10305
  %7 = shl i32 15, %6, !dbg !10306
  %8 = or i32 %7, %2, !dbg !10307
  ret i32 %8, !dbg !10308
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10309 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10313, metadata !DIExpression()), !dbg !10315
  call void @llvm.dbg.value(metadata i32 %1, metadata !10314, metadata !DIExpression()), !dbg !10315
  %3 = and i32 %1, 255, !dbg !10316
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !10316
  %5 = load volatile i32, i32* %4, align 4, !dbg !10316
  %6 = lshr i32 %1, 16, !dbg !10316
  %7 = xor i32 %6, -1, !dbg !10316
  %8 = and i32 %5, %7, !dbg !10316
  call void @llvm.dbg.value(metadata i32 %6, metadata !10317, metadata !DIExpression()) #23, !dbg !10321
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !10323, !srcloc !10324
  call void @llvm.dbg.value(metadata i32 %9, metadata !10320, metadata !DIExpression()) #23, !dbg !10321
  call void @llvm.dbg.value(metadata i32 %9, metadata !10325, metadata !DIExpression()) #23, !dbg !10330
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #23, !dbg !10332, !range !7518
  %11 = shl i32 %0, %10, !dbg !10316
  %12 = or i32 %11, %8, !dbg !10316
  store volatile i32 %12, i32* %4, align 4, !dbg !10316
  ret void, !dbg !10333
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10334 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10338, metadata !DIExpression()), !dbg !10343
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !10339, metadata !DIExpression()), !dbg !10343
  call void @llvm.dbg.value(metadata i32 %2, metadata !10340, metadata !DIExpression()), !dbg !10343
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10344
  %5 = icmp eq %struct._snode* %4, null, !dbg !10344
  br i1 %5, label %24, label %6, !dbg !10344

6:                                                ; preds = %3, %22
  %7 = phi %struct._snode* [ %8, %22 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #24, !dbg !10346
  %9 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10342, metadata !DIExpression()), !dbg !10343
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %9, metadata !10341, metadata !DIExpression()), !dbg !10343
  %10 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !10347
  %11 = bitcast %struct._snode* %10 to i32*, !dbg !10347
  %12 = load i32, i32* %11, align 4, !dbg !10347
  %13 = and i32 %12, %2, !dbg !10351
  %14 = icmp eq i32 %13, 0, !dbg !10351
  br i1 %14, label %22, label %15, !dbg !10352

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !10353
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !10353
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !10353
  %19 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %18, null, !dbg !10353
  br i1 %19, label %20, label %21, !dbg !10357

20:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.140, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31.146, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.142, i32 0, i32 0), i32 noundef 77) #25, !dbg !10358
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33.145, i32 0, i32 0)) #25, !dbg !10358
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.142, i32 0, i32 0), i32 noundef 77) #25, !dbg !10358
  unreachable, !dbg !10358

21:                                               ; preds = %15
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %9, i32 noundef %13) #25, !dbg !10360
  br label %22, !dbg !10361

22:                                               ; preds = %6, %21
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10341, metadata !DIExpression()), !dbg !10343
  %23 = icmp eq %struct._snode* %8, null, !dbg !10362
  br i1 %23, label %24, label %6, !dbg !10362

24:                                               ; preds = %22, %3
  ret void, !dbg !10363
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !10364 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10366, metadata !DIExpression()), !dbg !10367
  %2 = and i32 %0, 255, !dbg !10368
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !10368
  %4 = load volatile i32, i32* %3, align 4, !dbg !10368
  %5 = lshr i32 %0, 16, !dbg !10368
  %6 = and i32 %4, %5, !dbg !10368
  call void @llvm.dbg.value(metadata i32 %5, metadata !10317, metadata !DIExpression()) #23, !dbg !10369
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #28, !dbg !10371, !srcloc !10324
  call void @llvm.dbg.value(metadata i32 %7, metadata !10320, metadata !DIExpression()) #23, !dbg !10369
  call void @llvm.dbg.value(metadata i32 %7, metadata !10325, metadata !DIExpression()) #23, !dbg !10372
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !10374, !range !7518
  %9 = lshr i32 %6, %8, !dbg !10375
  ret i32 %9, !dbg !10376
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !10377 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10382, metadata !DIExpression()), !dbg !10384
  call void @llvm.dbg.value(metadata i32 %1, metadata !10383, metadata !DIExpression()), !dbg !10384
  %3 = shl i32 %1, 16, !dbg !10385
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !10385
  store volatile i32 %3, i32* %4, align 4, !dbg !10385
  ret void, !dbg !10386
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #15 !dbg !10387 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10391, metadata !DIExpression()), !dbg !10392
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10393
  %3 = load volatile i32, i32* %2, align 4, !dbg !10393
  ret i32 %3, !dbg !10394
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !10395 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10397, metadata !DIExpression()), !dbg !10399
  call void @llvm.dbg.value(metadata i32 %1, metadata !10398, metadata !DIExpression()), !dbg !10399
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10400
  store volatile i32 %1, i32* %3, align 4, !dbg !10400
  ret void, !dbg !10401
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #15 !dbg !10402 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10404, metadata !DIExpression()), !dbg !10405
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !10406
  %3 = load volatile i32, i32* %2, align 4, !dbg !10406
  ret i32 %3, !dbg !10407
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #9 !dbg !10408 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10412, metadata !DIExpression()), !dbg !10414
  call void @llvm.dbg.value(metadata i32* %1, metadata !10413, metadata !DIExpression()), !dbg !10414
  %3 = and i32 %0, 131072, !dbg !10415
  %4 = icmp eq i32 %3, 0, !dbg !10417
  br i1 %4, label %22, label %5, !dbg !10418

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !10419
  %6 = and i32 %0, 2, !dbg !10421
  %7 = icmp eq i32 %6, 0, !dbg !10423
  br i1 %7, label %11, label %8, !dbg !10424

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !10425
  %10 = icmp eq i32 %9, 0, !dbg !10425
  br i1 %10, label %33, label %11, !dbg !10428

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !10429
  store i32 %12, i32* %1, align 4, !dbg !10429
  %13 = and i32 %0, 16, !dbg !10430
  %14 = icmp eq i32 %13, 0, !dbg !10432
  br i1 %14, label %17, label %15, !dbg !10433

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !10434
  br label %31, !dbg !10436

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !10437
  %19 = icmp eq i32 %18, 0, !dbg !10439
  br i1 %19, label %33, label %20, !dbg !10440

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !10441
  br label %31, !dbg !10443

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !10444
  %24 = icmp eq i32 %23, 0, !dbg !10446
  br i1 %24, label %31, label %25, !dbg !10447

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !10448
  %27 = icmp eq i32 %26, 0, !dbg !10451
  br i1 %27, label %28, label %31, !dbg !10452

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !10453
  br label %33, !dbg !10454

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !10414
  ret i32 %34, !dbg !10454
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !10455 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10459, metadata !DIExpression()), !dbg !10470
  call void @llvm.dbg.value(metadata i32 %1, metadata !10460, metadata !DIExpression()), !dbg !10470
  call void @llvm.dbg.value(metadata i32 %2, metadata !10461, metadata !DIExpression()), !dbg !10470
  call void @llvm.dbg.value(metadata i32 %3, metadata !10462, metadata !DIExpression()), !dbg !10470
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10471
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !10471
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !10471
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !10463, metadata !DIExpression()), !dbg !10470
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !10472
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !10472
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !10472
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !10464, metadata !DIExpression()), !dbg !10470
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #24, !dbg !10473
  call void @llvm.dbg.value(metadata i32 %11, metadata !10465, metadata !DIExpression()), !dbg !10470
  %12 = and i32 %2, 48, !dbg !10474
  call void @llvm.dbg.value(metadata i32 %12, metadata !10466, metadata !DIExpression()), !dbg !10470
  call void @llvm.dbg.value(metadata i32 %2, metadata !10467, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !10470
  call void @llvm.dbg.value(metadata i32 %2, metadata !10468, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !10470
  call void @llvm.dbg.value(metadata i32 %2, metadata !10469, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !10470
  %13 = lshr i32 %2, 6, !dbg !10475
  %14 = and i32 %13, 1, !dbg !10475
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #24, !dbg !10476
  %15 = lshr i32 %2, 7, !dbg !10477
  %16 = and i32 %15, 3, !dbg !10477
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #24, !dbg !10478
  %17 = lshr i32 %2, 9, !dbg !10479
  %18 = and i32 %17, 3, !dbg !10479
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #24, !dbg !10480
  %19 = icmp eq i32 %12, 32, !dbg !10481
  br i1 %19, label %20, label %24, !dbg !10483

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !10484
  br i1 %21, label %22, label %23, !dbg !10487

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !10488
  br label %24, !dbg !10490

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !10491
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !10493
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #24, !dbg !10494
  ret void, !dbg !10495
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #4 !dbg !10496 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10498, metadata !DIExpression()), !dbg !10500
  %2 = shl nuw i32 1, %0, !dbg !10501
  call void @llvm.dbg.value(metadata i32 %2, metadata !10499, metadata !DIExpression()), !dbg !10500
  ret i32 %2, !dbg !10502
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !10503 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10507, metadata !DIExpression()), !dbg !10510
  call void @llvm.dbg.value(metadata i32 %1, metadata !10508, metadata !DIExpression()), !dbg !10510
  call void @llvm.dbg.value(metadata i32 %2, metadata !10509, metadata !DIExpression()), !dbg !10510
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !10511
  %5 = load volatile i32, i32* %4, align 4, !dbg !10511
  %6 = xor i32 %1, -1, !dbg !10511
  %7 = and i32 %5, %6, !dbg !10511
  %8 = mul i32 %2, %1, !dbg !10511
  %9 = or i32 %7, %8, !dbg !10511
  store volatile i32 %9, i32* %4, align 4, !dbg !10511
  ret void, !dbg !10512
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10513 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10515, metadata !DIExpression()), !dbg !10518
  call void @llvm.dbg.value(metadata i32 %1, metadata !10516, metadata !DIExpression()), !dbg !10518
  call void @llvm.dbg.value(metadata i32 %2, metadata !10517, metadata !DIExpression()), !dbg !10518
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !10519
  %5 = load volatile i32, i32* %4, align 4, !dbg !10519
  call void @llvm.dbg.value(metadata i32 %1, metadata !10317, metadata !DIExpression()) #23, !dbg !10520
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !10522, !srcloc !10324
  call void @llvm.dbg.value(metadata i32 %6, metadata !10320, metadata !DIExpression()) #23, !dbg !10520
  call void @llvm.dbg.value(metadata i32 %6, metadata !10325, metadata !DIExpression()) #23, !dbg !10523
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !10525, !range !7518
  %8 = shl nuw nsw i32 %7, 1, !dbg !10519
  %9 = shl i32 3, %8, !dbg !10519
  %10 = xor i32 %9, -1, !dbg !10519
  %11 = and i32 %5, %10, !dbg !10519
  call void @llvm.dbg.value(metadata i32 %1, metadata !10317, metadata !DIExpression()) #23, !dbg !10526
  call void @llvm.dbg.value(metadata i32 %6, metadata !10320, metadata !DIExpression()) #23, !dbg !10526
  call void @llvm.dbg.value(metadata i32 %6, metadata !10325, metadata !DIExpression()) #23, !dbg !10528
  %12 = shl i32 %2, %8, !dbg !10519
  %13 = or i32 %11, %12, !dbg !10519
  store volatile i32 %13, i32* %4, align 4, !dbg !10519
  ret void, !dbg !10530
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10531 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10533, metadata !DIExpression()), !dbg !10536
  call void @llvm.dbg.value(metadata i32 %1, metadata !10534, metadata !DIExpression()), !dbg !10536
  call void @llvm.dbg.value(metadata i32 %2, metadata !10535, metadata !DIExpression()), !dbg !10536
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !10537
  %5 = load volatile i32, i32* %4, align 4, !dbg !10537
  call void @llvm.dbg.value(metadata i32 %1, metadata !10317, metadata !DIExpression()) #23, !dbg !10538
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !10540, !srcloc !10324
  call void @llvm.dbg.value(metadata i32 %6, metadata !10320, metadata !DIExpression()) #23, !dbg !10538
  call void @llvm.dbg.value(metadata i32 %6, metadata !10325, metadata !DIExpression()) #23, !dbg !10541
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !10543, !range !7518
  %8 = shl nuw nsw i32 %7, 1, !dbg !10537
  %9 = shl i32 3, %8, !dbg !10537
  %10 = xor i32 %9, -1, !dbg !10537
  %11 = and i32 %5, %10, !dbg !10537
  call void @llvm.dbg.value(metadata i32 %1, metadata !10317, metadata !DIExpression()) #23, !dbg !10544
  call void @llvm.dbg.value(metadata i32 %6, metadata !10320, metadata !DIExpression()) #23, !dbg !10544
  call void @llvm.dbg.value(metadata i32 %6, metadata !10325, metadata !DIExpression()) #23, !dbg !10546
  %12 = shl i32 %2, %8, !dbg !10537
  %13 = or i32 %11, %12, !dbg !10537
  store volatile i32 %13, i32* %4, align 4, !dbg !10537
  ret void, !dbg !10548
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10549 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10551, metadata !DIExpression()), !dbg !10554
  call void @llvm.dbg.value(metadata i32 %1, metadata !10552, metadata !DIExpression()), !dbg !10554
  call void @llvm.dbg.value(metadata i32 %2, metadata !10553, metadata !DIExpression()), !dbg !10554
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !10555
  %5 = load volatile i32, i32* %4, align 4, !dbg !10555
  call void @llvm.dbg.value(metadata i32 %1, metadata !10317, metadata !DIExpression()) #23, !dbg !10556
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !10558, !srcloc !10324
  call void @llvm.dbg.value(metadata i32 %6, metadata !10320, metadata !DIExpression()) #23, !dbg !10556
  call void @llvm.dbg.value(metadata i32 %6, metadata !10325, metadata !DIExpression()) #23, !dbg !10559
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !10561, !range !7518
  %8 = shl nuw nsw i32 %7, 2, !dbg !10555
  %9 = shl i32 15, %8, !dbg !10555
  %10 = xor i32 %9, -1, !dbg !10555
  %11 = and i32 %5, %10, !dbg !10555
  call void @llvm.dbg.value(metadata i32 %1, metadata !10317, metadata !DIExpression()) #23, !dbg !10562
  call void @llvm.dbg.value(metadata i32 %6, metadata !10320, metadata !DIExpression()) #23, !dbg !10562
  call void @llvm.dbg.value(metadata i32 %6, metadata !10325, metadata !DIExpression()) #23, !dbg !10564
  %12 = shl i32 %2, %8, !dbg !10555
  %13 = or i32 %11, %12, !dbg !10555
  store volatile i32 %13, i32* %4, align 4, !dbg !10555
  ret void, !dbg !10566
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10567 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10569, metadata !DIExpression()), !dbg !10572
  call void @llvm.dbg.value(metadata i32 %1, metadata !10570, metadata !DIExpression()), !dbg !10572
  call void @llvm.dbg.value(metadata i32 %2, metadata !10571, metadata !DIExpression()), !dbg !10572
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !10573
  %5 = load volatile i32, i32* %4, align 4, !dbg !10573
  %6 = lshr i32 %1, 8, !dbg !10573
  call void @llvm.dbg.value(metadata i32 %6, metadata !10317, metadata !DIExpression()) #23, !dbg !10574
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !10576, !srcloc !10324
  call void @llvm.dbg.value(metadata i32 %7, metadata !10320, metadata !DIExpression()) #23, !dbg !10574
  call void @llvm.dbg.value(metadata i32 %7, metadata !10325, metadata !DIExpression()) #23, !dbg !10577
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !10579, !range !7518
  %9 = shl nuw nsw i32 %8, 2, !dbg !10573
  %10 = shl i32 15, %9, !dbg !10573
  %11 = xor i32 %10, -1, !dbg !10573
  %12 = and i32 %5, %11, !dbg !10573
  call void @llvm.dbg.value(metadata i32 %6, metadata !10317, metadata !DIExpression()) #23, !dbg !10580
  call void @llvm.dbg.value(metadata i32 %7, metadata !10320, metadata !DIExpression()) #23, !dbg !10580
  call void @llvm.dbg.value(metadata i32 %7, metadata !10325, metadata !DIExpression()) #23, !dbg !10582
  %13 = shl i32 %2, %9, !dbg !10573
  %14 = or i32 %12, %13, !dbg !10573
  store volatile i32 %14, i32* %4, align 4, !dbg !10573
  ret void, !dbg !10584
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10585 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10587, metadata !DIExpression()), !dbg !10590
  call void @llvm.dbg.value(metadata i32 %1, metadata !10588, metadata !DIExpression()), !dbg !10590
  call void @llvm.dbg.value(metadata i32 %2, metadata !10589, metadata !DIExpression()), !dbg !10590
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !10591
  %5 = load volatile i32, i32* %4, align 4, !dbg !10591
  call void @llvm.dbg.value(metadata i32 %1, metadata !10317, metadata !DIExpression()) #23, !dbg !10592
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !10594, !srcloc !10324
  call void @llvm.dbg.value(metadata i32 %6, metadata !10320, metadata !DIExpression()) #23, !dbg !10592
  call void @llvm.dbg.value(metadata i32 %6, metadata !10325, metadata !DIExpression()) #23, !dbg !10595
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !10597, !range !7518
  %8 = shl nuw nsw i32 %7, 1, !dbg !10591
  %9 = shl i32 3, %8, !dbg !10591
  %10 = xor i32 %9, -1, !dbg !10591
  %11 = and i32 %5, %10, !dbg !10591
  call void @llvm.dbg.value(metadata i32 %1, metadata !10317, metadata !DIExpression()) #23, !dbg !10598
  call void @llvm.dbg.value(metadata i32 %6, metadata !10320, metadata !DIExpression()) #23, !dbg !10598
  call void @llvm.dbg.value(metadata i32 %6, metadata !10325, metadata !DIExpression()) #23, !dbg !10600
  %12 = shl i32 %2, %8, !dbg !10591
  %13 = or i32 %11, %12, !dbg !10591
  store volatile i32 %13, i32* %4, align 4, !dbg !10591
  ret void, !dbg !10602
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !10603 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10605, metadata !DIExpression()), !dbg !10608
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10609
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !10609
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !10609
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !10606, metadata !DIExpression()), !dbg !10608
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !10610
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !10611
  %6 = tail call fastcc zeroext i1 @device_is_ready.155() #24, !dbg !10612
  br i1 %6, label %7, label %11, !dbg !10614

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #24, !dbg !10615
  call void @llvm.dbg.value(metadata i32 %8, metadata !10607, metadata !DIExpression()), !dbg !10608
  %9 = icmp slt i32 %8, 0, !dbg !10616
  %10 = select i1 %9, i32 %8, i32 0, !dbg !10618
  br label %11, !dbg !10618

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !10608
  ret i32 %12, !dbg !10619
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.155() unnamed_addr #1 !dbg !10620 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10624, metadata !DIExpression()), !dbg !10625
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !10626, !srcloc !10628
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.156() #24, !dbg !10629
  ret i1 %1, !dbg !10630
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef readonly %0) unnamed_addr #1 !dbg !10631 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10635, metadata !DIExpression()), !dbg !10640
  call void @llvm.dbg.value(metadata i8 1, metadata !10636, metadata !DIExpression()), !dbg !10640
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10641
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !10641
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !10641
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !10637, metadata !DIExpression()), !dbg !10640
  call void @llvm.dbg.value(metadata i32 0, metadata !10638, metadata !DIExpression()), !dbg !10640
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10639, metadata !DIExpression()), !dbg !10640
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !10642
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !10645
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #24, !dbg !10646
  call void @llvm.dbg.value(metadata i32 %7, metadata !10638, metadata !DIExpression()), !dbg !10640
  ret i32 %7, !dbg !10647
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.156() unnamed_addr #1 !dbg !10648 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10650, metadata !DIExpression()), !dbg !10651
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_8) #25, !dbg !10652
  ret i1 %1, !dbg !10653
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !10654 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10658, metadata !DIExpression()), !dbg !10666
  call void @llvm.dbg.value(metadata i32 %1, metadata !10659, metadata !DIExpression()), !dbg !10666
  call void @llvm.dbg.value(metadata i32 %2, metadata !10660, metadata !DIExpression()), !dbg !10666
  call void @llvm.dbg.value(metadata i32 %3, metadata !10661, metadata !DIExpression()), !dbg !10666
  call void @llvm.dbg.value(metadata i32 0, metadata !10662, metadata !DIExpression()), !dbg !10666
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #24, !dbg !10667
  %5 = icmp eq i32 %3, 17, !dbg !10668
  br i1 %5, label %6, label %14, !dbg !10669

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !10670
  call void @llvm.dbg.value(metadata i32 %7, metadata !10663, metadata !DIExpression()), !dbg !10671
  %8 = icmp eq i32 %7, 0, !dbg !10672
  %9 = shl nuw i32 1, %1, !dbg !10674
  br i1 %8, label %12, label %10, !dbg !10675

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !10676
  br label %14, !dbg !10678

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !10679
  br label %14, !dbg !10682

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !10683
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #19 !dbg !10684 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10686, metadata !DIExpression()), !dbg !10690
  call void @llvm.dbg.value(metadata i8* %1, metadata !10687, metadata !DIExpression()), !dbg !10690
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10691
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10691
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10691
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10688, metadata !DIExpression()), !dbg !10690
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10692
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10692
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #24, !dbg !10694
  %9 = icmp eq i32 %8, 0, !dbg !10694
  br i1 %9, label %12, label %10, !dbg !10695

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10696
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #24, !dbg !10698
  br label %12, !dbg !10699

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10700
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #24, !dbg !10702
  %15 = icmp eq i32 %14, 0, !dbg !10702
  br i1 %15, label %19, label %16, !dbg !10703

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10704
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #24, !dbg !10705
  store i8 %18, i8* %1, align 1, !dbg !10706
  br label %19, !dbg !10707

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !10690
  ret i32 %20, !dbg !10708
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !10709 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10711, metadata !DIExpression()), !dbg !10715
  call void @llvm.dbg.value(metadata i8 %1, metadata !10712, metadata !DIExpression()), !dbg !10715
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10716
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10716
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10716
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10713, metadata !DIExpression()), !dbg !10715
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !10717

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10718
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #24, !dbg !10721
  %10 = icmp eq i32 %9, 0, !dbg !10721
  br i1 %10, label %18, label %11, !dbg !10722

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10723, !srcloc !10730
  call void @llvm.dbg.value(metadata i32 undef, metadata !10726, metadata !DIExpression()) #23, !dbg !10731
  call void @llvm.dbg.value(metadata i32 undef, metadata !10727, metadata !DIExpression()) #23, !dbg !10731
  call void @llvm.dbg.value(metadata i32 undef, metadata !10714, metadata !DIExpression()), !dbg !10715
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10732
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #24, !dbg !10734
  %15 = icmp eq i32 %14, 0, !dbg !10734
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !10723
  br i1 %15, label %17, label %19, !dbg !10735

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !10726, metadata !DIExpression()) #23, !dbg !10731
  call void @llvm.dbg.value(metadata i32 %16, metadata !10714, metadata !DIExpression()), !dbg !10715
  call void @llvm.dbg.value(metadata i32 undef, metadata !10736, metadata !DIExpression()) #23, !dbg !10739
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !10741, !srcloc !10742
  br label %18, !dbg !10743

18:                                               ; preds = %17, %7
  br label %7, !dbg !10718, !llvm.loop !10744

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !10723
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10746
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #24, !dbg !10747
  call void @llvm.dbg.value(metadata i32 %20, metadata !10736, metadata !DIExpression()) #23, !dbg !10748
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !10750, !srcloc !10742
  ret void, !dbg !10751
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #19 !dbg !10752 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10754, metadata !DIExpression()), !dbg !10757
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10758
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10758
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10758
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10755, metadata !DIExpression()), !dbg !10757
  call void @llvm.dbg.value(metadata i32 0, metadata !10756, metadata !DIExpression()), !dbg !10757
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10759
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10759
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #24, !dbg !10761
  %8 = icmp ne i32 %7, 0, !dbg !10761
  %9 = zext i1 %8 to i32, !dbg !10762
  call void @llvm.dbg.value(metadata i32 %9, metadata !10756, metadata !DIExpression()), !dbg !10757
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10763
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #24, !dbg !10765
  %12 = icmp eq i32 %11, 0, !dbg !10765
  %13 = or i32 %9, 2, !dbg !10766
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !10766
  call void @llvm.dbg.value(metadata i32 %14, metadata !10756, metadata !DIExpression()), !dbg !10757
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10767
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #24, !dbg !10769
  %17 = icmp eq i32 %16, 0, !dbg !10769
  %18 = or i32 %14, 4, !dbg !10770
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !10770
  call void @llvm.dbg.value(metadata i32 %19, metadata !10756, metadata !DIExpression()), !dbg !10757
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10771
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #24, !dbg !10773
  %22 = icmp eq i32 %21, 0, !dbg !10773
  %23 = or i32 %19, 8, !dbg !10774
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !10774
  call void @llvm.dbg.value(metadata i32 %24, metadata !10756, metadata !DIExpression()), !dbg !10757
  %25 = and i32 %24, 8, !dbg !10775
  %26 = icmp eq i32 %25, 0, !dbg !10775
  br i1 %26, label %29, label %27, !dbg !10777

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10778
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #24, !dbg !10780
  br label %29, !dbg !10781

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !10782
  %31 = icmp eq i32 %30, 0, !dbg !10782
  br i1 %31, label %34, label %32, !dbg !10784

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10785
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #24, !dbg !10787
  br label %34, !dbg !10788

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !10789
  %36 = icmp eq i32 %35, 0, !dbg !10789
  br i1 %36, label %39, label %37, !dbg !10791

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10792
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #24, !dbg !10794
  br label %39, !dbg !10795

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !10796
  %41 = icmp eq i32 %40, 0, !dbg !10796
  br i1 %41, label %44, label %42, !dbg !10798

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10799
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #24, !dbg !10801
  br label %44, !dbg !10802

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10803
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #24, !dbg !10804
  ret i32 %24, !dbg !10805
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !10806 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10808, metadata !DIExpression()), !dbg !10817
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !10809, metadata !DIExpression()), !dbg !10817
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10818
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10818
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10818
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10810, metadata !DIExpression()), !dbg !10817
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10819
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !10819
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !10819
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !10811, metadata !DIExpression()), !dbg !10817
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !10820
  %10 = load i8, i8* %9, align 4, !dbg !10820
  %11 = zext i8 %10 to i32, !dbg !10821
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #24, !dbg !10822
  call void @llvm.dbg.value(metadata i32 %12, metadata !10813, metadata !DIExpression()), !dbg !10817
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !10823
  %14 = load i8, i8* %13, align 1, !dbg !10823
  %15 = zext i8 %14 to i32, !dbg !10824
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #24, !dbg !10825
  call void @llvm.dbg.value(metadata i32 %16, metadata !10814, metadata !DIExpression()), !dbg !10817
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !10826
  %18 = load i8, i8* %17, align 2, !dbg !10826
  %19 = zext i8 %18 to i32, !dbg !10827
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #24, !dbg !10828
  call void @llvm.dbg.value(metadata i32 %20, metadata !10815, metadata !DIExpression()), !dbg !10817
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !10829
  %22 = load i8, i8* %21, align 1, !dbg !10829
  %23 = zext i8 %22 to i32, !dbg !10830
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #24, !dbg !10831
  call void @llvm.dbg.value(metadata i32 %24, metadata !10816, metadata !DIExpression()), !dbg !10817
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !10832

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !10834
  br i1 %26, label %69, label %27, !dbg !10836

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !10837

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !10838
  br i1 %29, label %65, label %30, !dbg !10838

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !10840
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !10817
  br i1 %31, label %38, label %34, !dbg !10842

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !10843
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
    i32 1073761280, label %36
    i32 1073762304, label %36
    i32 1073812480, label %36
  ], !dbg !10843

36:                                               ; preds = %34, %34, %34, %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !10846
  br i1 %37, label %38, label %69, !dbg !10847

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10848
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #24, !dbg !10849
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #24, !dbg !10850
  %41 = icmp eq i32 %12, %40, !dbg !10852
  br i1 %41, label %43, label %42, !dbg !10853

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #24, !dbg !10854
  br label %43, !dbg !10856

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #24, !dbg !10857
  %45 = icmp eq i32 %16, %44, !dbg !10859
  br i1 %45, label %47, label %46, !dbg !10860

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #24, !dbg !10861
  br label %47, !dbg !10863

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #24, !dbg !10864
  %49 = icmp eq i32 %20, %48, !dbg !10866
  br i1 %49, label %51, label %50, !dbg !10867

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #24, !dbg !10868
  br label %51, !dbg !10870

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #24, !dbg !10871
  %53 = icmp eq i32 %24, %52, !dbg !10873
  br i1 %53, label %55, label %54, !dbg !10874

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #24, !dbg !10875
  br label %55, !dbg !10877

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !10878
  %57 = load i32, i32* %56, align 4, !dbg !10878
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !10880
  %59 = load i32, i32* %58, align 4, !dbg !10880
  %60 = icmp eq i32 %57, %59, !dbg !10881
  br i1 %60, label %63, label %61, !dbg !10882

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #24, !dbg !10883
  %62 = load i32, i32* %56, align 4, !dbg !10885
  store i32 %62, i32* %58, align 4, !dbg !10886
  br label %63, !dbg !10887

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !10888
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #24, !dbg !10889
  br label %69, !dbg !10890

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !10838
  %67 = and i8 %66, 1, !dbg !10838
  %68 = icmp eq i8 %67, 0, !dbg !10838
  br i1 %68, label %30, label %69, !dbg !10838

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !10817
  ret i32 %70, !dbg !10891
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #20 !dbg !10892 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10894, metadata !DIExpression()), !dbg !10897
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !10895, metadata !DIExpression()), !dbg !10897
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10898
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !10898
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !10898
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !10896, metadata !DIExpression()), !dbg !10897
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !10899
  %7 = load i32, i32* %6, align 4, !dbg !10899
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !10900
  store i32 %7, i32* %8, align 4, !dbg !10901
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !10902, !range !10903
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #24, !dbg !10904
  %11 = trunc i32 %10 to i8, !dbg !10904
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !10905
  store i8 %11, i8* %12, align 4, !dbg !10906
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #24, !dbg !10907, !range !10908
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #24, !dbg !10909
  %15 = trunc i32 %14 to i8, !dbg !10909
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !10910
  store i8 %15, i8* %16, align 1, !dbg !10911
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #24, !dbg !10912
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !10913, !range !10903
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #24, !dbg !10914
  %20 = trunc i32 %19 to i8, !dbg !10914
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !10915
  store i8 %20, i8* %21, align 2, !dbg !10916
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #24, !dbg !10917, !range !10918
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #24, !dbg !10919
  %24 = trunc i32 %23 to i8, !dbg !10919
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !10920
  store i8 %24, i8* %25, align 1, !dbg !10921
  ret i32 0, !dbg !10922
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !10923 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10927, metadata !DIExpression()), !dbg !10929
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10930
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10930
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10930
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10928, metadata !DIExpression()), !dbg !10929
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10931
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10931
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #24, !dbg !10932
  ret i32 %7, !dbg !10933
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #4 !dbg !10934 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10938, metadata !DIExpression()), !dbg !10939
  %2 = icmp eq i32 %0, 1024, !dbg !10940
  %3 = select i1 %2, i32 2, i32 0, !dbg !10940
  %4 = icmp eq i32 %0, 1536, !dbg !10940
  %5 = select i1 %4, i32 1, i32 %3, !dbg !10940
  ret i32 %5, !dbg !10941
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !10942 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10944, metadata !DIExpression()), !dbg !10946
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10947
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10947
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10947
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10945, metadata !DIExpression()), !dbg !10946
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10948
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10948
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #24, !dbg !10949
  ret i32 %7, !dbg !10950
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #11 !dbg !10951 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10955, metadata !DIExpression()), !dbg !10956
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !10957
  %3 = icmp ult i32 %2, 4, !dbg !10957
  br i1 %3, label %4, label %7, !dbg !10957

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !10957
  %6 = load i32, i32* %5, align 4, !dbg !10957
  br label %7, !dbg !10957

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !10958
  ret i32 %8, !dbg !10960
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !10961 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10963, metadata !DIExpression()), !dbg !10965
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10966
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10966
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10966
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10964, metadata !DIExpression()), !dbg !10965
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10967
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10967
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #24, !dbg !10968
  ret i32 %7, !dbg !10969
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !10970 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10974, metadata !DIExpression()), !dbg !10976
  call void @llvm.dbg.value(metadata i32 %1, metadata !10975, metadata !DIExpression()), !dbg !10976
  %3 = icmp eq i32 %0, 4096, !dbg !10977
  %4 = icmp eq i32 %1, 0, !dbg !10977
  %5 = select i1 %4, i32 4, i32 3, !dbg !10977
  %6 = select i1 %4, i32 3, i32 2, !dbg !10977
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !10977
  ret i32 %7, !dbg !10978
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !10979 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10981, metadata !DIExpression()), !dbg !10983
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10984
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10984
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10984
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10982, metadata !DIExpression()), !dbg !10983
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10985
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10985
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #24, !dbg !10986
  ret i32 %7, !dbg !10987
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #4 !dbg !10988 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10992, metadata !DIExpression()), !dbg !10993
  %2 = icmp eq i32 %0, 768, !dbg !10994
  %3 = zext i1 %2 to i32, !dbg !10993
  ret i32 %3, !dbg !10996
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10997 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11002, metadata !DIExpression()), !dbg !11003
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11004
  %3 = load volatile i32, i32* %2, align 4, !dbg !11004
  %4 = and i32 %3, 768, !dbg !11004
  ret i32 %4, !dbg !11005
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11006 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11008, metadata !DIExpression()), !dbg !11009
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11010
  %3 = load volatile i32, i32* %2, align 4, !dbg !11010
  %4 = and i32 %3, 4096, !dbg !11010
  ret i32 %4, !dbg !11011
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11012 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11014, metadata !DIExpression()), !dbg !11015
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11016
  %3 = load volatile i32, i32* %2, align 4, !dbg !11016
  %4 = and i32 %3, 12288, !dbg !11016
  ret i32 %4, !dbg !11017
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11018 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11020, metadata !DIExpression()), !dbg !11021
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11022
  %3 = load volatile i32, i32* %2, align 4, !dbg !11022
  %4 = and i32 %3, 1536, !dbg !11022
  ret i32 %4, !dbg !11023
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #4 !dbg !11024 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11028, metadata !DIExpression()), !dbg !11029
  %2 = icmp eq i32 %0, 2, !dbg !11030
  %3 = select i1 %2, i32 1024, i32 0, !dbg !11030
  %4 = icmp eq i32 %0, 1, !dbg !11030
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !11030
  ret i32 %5, !dbg !11031
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #4 !dbg !11032 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11036, metadata !DIExpression()), !dbg !11037
  %2 = icmp ult i32 %0, 3, !dbg !11038
  br i1 %2, label %3, label %6, !dbg !11038

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !11038
  %5 = load i32, i32* %4, align 4, !dbg !11038
  br label %6, !dbg !11038

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !11039
  ret i32 %7, !dbg !11041
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !11042 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11046, metadata !DIExpression()), !dbg !11048
  call void @llvm.dbg.value(metadata i32 %1, metadata !11047, metadata !DIExpression()), !dbg !11048
  %3 = icmp eq i32 %0, 4, !dbg !11049
  %4 = icmp eq i32 %1, 0, !dbg !11049
  %5 = select i1 %4, i32 0, i32 4096, !dbg !11049
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !11049
  ret i32 %6, !dbg !11050
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #4 !dbg !11051 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11055, metadata !DIExpression()), !dbg !11056
  %2 = icmp eq i32 %0, 1, !dbg !11057
  %3 = select i1 %2, i32 768, i32 0, !dbg !11056
  ret i32 %3, !dbg !11059
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !11060 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11064, metadata !DIExpression()), !dbg !11065
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11066
  %3 = load volatile i32, i32* %2, align 4, !dbg !11066
  %4 = and i32 %3, -8193, !dbg !11066
  store volatile i32 %4, i32* %2, align 4, !dbg !11066
  ret void, !dbg !11067
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !11068 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11072, metadata !DIExpression()), !dbg !11075
  call void @llvm.dbg.value(metadata i32 %1, metadata !11073, metadata !DIExpression()), !dbg !11075
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11076
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11076
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11076
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11074, metadata !DIExpression()), !dbg !11075
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11077
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11077
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !11078
  ret void, !dbg !11079
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !11080 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11082, metadata !DIExpression()), !dbg !11085
  call void @llvm.dbg.value(metadata i32 %1, metadata !11083, metadata !DIExpression()), !dbg !11085
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11086
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11086
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11086
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11084, metadata !DIExpression()), !dbg !11085
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11087
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11087
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !11088
  ret void, !dbg !11089
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !11090 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11092, metadata !DIExpression()), !dbg !11095
  call void @llvm.dbg.value(metadata i32 %1, metadata !11093, metadata !DIExpression()), !dbg !11095
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11096
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11096
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11096
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11094, metadata !DIExpression()), !dbg !11095
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11097
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11097
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !11098
  ret void, !dbg !11099
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !11100 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11102, metadata !DIExpression()), !dbg !11105
  call void @llvm.dbg.value(metadata i32 %1, metadata !11103, metadata !DIExpression()), !dbg !11105
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11106
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11106
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11106
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11104, metadata !DIExpression()), !dbg !11105
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11107
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11107
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !11108
  ret void, !dbg !11109
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !11110 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11112, metadata !DIExpression()), !dbg !11117
  call void @llvm.dbg.value(metadata i32 %1, metadata !11113, metadata !DIExpression()), !dbg !11117
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11118
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !11118
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !11118
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !11114, metadata !DIExpression()), !dbg !11117
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11119
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !11119
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !11119
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !11115, metadata !DIExpression()), !dbg !11117
  %10 = bitcast i32* %3 to i8*, !dbg !11120
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #23, !dbg !11120
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !11121
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !11121
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !11125
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !11125
  %15 = load i8*, i8** %14, align 4, !dbg !11125
  call void @llvm.dbg.value(metadata i32* %3, metadata !11116, metadata !DIExpression(DW_OP_deref)), !dbg !11117
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #24, !dbg !11126
  %17 = icmp slt i32 %16, 0, !dbg !11127
  br i1 %17, label %18, label %21, !dbg !11128

18:                                               ; preds = %2
  %19 = call fastcc zeroext i8 @z_log_minimal_level_to_char.159(i32 noundef 1) #24, !dbg !11129
  %20 = zext i8 %19 to i32, !dbg !11129
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.5.160, i32 0, i32 0), i32 noundef %20) #25, !dbg !11129
  br label %31, !dbg !11135

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !11136
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11136
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %23) #24, !dbg !11137
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11138
  %25 = load i32, i32* %3, align 4, !dbg !11139
  call void @llvm.dbg.value(metadata i32 %25, metadata !11116, metadata !DIExpression()), !dbg !11117
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %24, i32 noundef %25, i32 noundef %1) #24, !dbg !11140
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11141
  %27 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %26, i32 0, i32 2, !dbg !11141
  %28 = load volatile i32, i32* %27, align 4, !dbg !11141
  %29 = icmp ugt i32 %28, 16, !dbg !11141
  br i1 %29, label %31, label %30, !dbg !11144

30:                                               ; preds = %21
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6.161, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.7.162, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8.163, i32 0, i32 0), i32 noundef 190) #25, !dbg !11145
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.9.164, i32 0, i32 0)) #25, !dbg !11145
  call void @assert_post_action(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8.163, i32 0, i32 0), i32 noundef 190) #25, !dbg !11145
  unreachable, !dbg !11145

31:                                               ; preds = %21, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #23, !dbg !11147
  ret void, !dbg !11147
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !11148 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11150, metadata !DIExpression()), !dbg !11151
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11152
  %3 = load volatile i32, i32* %2, align 4, !dbg !11152
  %4 = or i32 %3, 8192, !dbg !11152
  store volatile i32 %4, i32* %2, align 4, !dbg !11152
  ret void, !dbg !11153
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !11154 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11156, metadata !DIExpression()), !dbg !11160
  call void @llvm.dbg.value(metadata i8* %1, metadata !11157, metadata !DIExpression()), !dbg !11160
  call void @llvm.dbg.value(metadata i32* %2, metadata !11158, metadata !DIExpression()), !dbg !11160
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11161
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !11161
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !11161
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !11159, metadata !DIExpression()), !dbg !11160
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !11162
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !11162
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !11164
  br i1 %9, label %12, label %10, !dbg !11165

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #25, !dbg !11166
  br label %12, !dbg !11167

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !11160
  ret i32 %13, !dbg !11168
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.159(i32 noundef %0) unnamed_addr #4 !dbg !11169 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11171, metadata !DIExpression()), !dbg !11172
  %2 = icmp eq i32 %0, 2, !dbg !11173
  %3 = select i1 %2, i8 87, i8 63, !dbg !11173
  %4 = icmp eq i32 %0, 1, !dbg !11173
  %5 = select i1 %4, i8 69, i8 %3, !dbg !11173
  ret i8 %5, !dbg !11174
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !11175 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11179, metadata !DIExpression()), !dbg !11181
  call void @llvm.dbg.value(metadata i32 0, metadata !11180, metadata !DIExpression()), !dbg !11181
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11182
  %3 = load volatile i32, i32* %2, align 4, !dbg !11182
  %4 = and i32 %3, -32769, !dbg !11182
  store volatile i32 %4, i32* %2, align 4, !dbg !11182
  ret void, !dbg !11183
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !11184 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11188, metadata !DIExpression()), !dbg !11192
  call void @llvm.dbg.value(metadata i32 %1, metadata !11189, metadata !DIExpression()), !dbg !11192
  call void @llvm.dbg.value(metadata i32 0, metadata !11190, metadata !DIExpression()), !dbg !11192
  call void @llvm.dbg.value(metadata i32 %2, metadata !11191, metadata !DIExpression()), !dbg !11192
  %4 = zext i32 %1 to i64, !dbg !11193
  %5 = mul nuw nsw i64 %4, 25, !dbg !11193
  %6 = zext i32 %2 to i64, !dbg !11193
  %7 = shl nuw nsw i64 %6, 2, !dbg !11193
  %8 = udiv i64 %5, %7, !dbg !11193
  %9 = trunc i64 %8 to i32, !dbg !11193
  %10 = udiv i32 %9, 100, !dbg !11193
  %11 = shl nuw nsw i32 %10, 4, !dbg !11193
  %12 = mul i32 %10, -100, !dbg !11193
  %13 = add i32 %12, %9, !dbg !11193
  %14 = shl i32 %13, 4, !dbg !11193
  %15 = add i32 %14, 50, !dbg !11193
  %16 = udiv i32 %15, 100, !dbg !11193
  %17 = and i32 %16, 240, !dbg !11193
  %18 = add nuw nsw i32 %17, %11, !dbg !11193
  %19 = and i32 %16, 15, !dbg !11193
  %20 = and i32 %18, 65520, !dbg !11196
  %21 = or i32 %20, %19, !dbg !11196
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !11197
  store volatile i32 %21, i32* %22, align 4, !dbg !11198
  ret void, !dbg !11199
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !11200 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11202, metadata !DIExpression()), !dbg !11204
  call void @llvm.dbg.value(metadata i32 %1, metadata !11203, metadata !DIExpression()), !dbg !11204
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11205
  %4 = load volatile i32, i32* %3, align 4, !dbg !11205
  %5 = and i32 %4, -769, !dbg !11205
  %6 = or i32 %5, %1, !dbg !11205
  store volatile i32 %6, i32* %3, align 4, !dbg !11205
  ret void, !dbg !11206
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !11207 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11209, metadata !DIExpression()), !dbg !11211
  call void @llvm.dbg.value(metadata i32 %1, metadata !11210, metadata !DIExpression()), !dbg !11211
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11212
  %4 = load volatile i32, i32* %3, align 4, !dbg !11212
  %5 = and i32 %4, -4097, !dbg !11212
  %6 = or i32 %5, %1, !dbg !11212
  store volatile i32 %6, i32* %3, align 4, !dbg !11212
  ret void, !dbg !11213
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !11214 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11216, metadata !DIExpression()), !dbg !11218
  call void @llvm.dbg.value(metadata i32 %1, metadata !11217, metadata !DIExpression()), !dbg !11218
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11219
  %4 = load volatile i32, i32* %3, align 4, !dbg !11219
  %5 = and i32 %4, -12289, !dbg !11219
  %6 = or i32 %5, %1, !dbg !11219
  store volatile i32 %6, i32* %3, align 4, !dbg !11219
  ret void, !dbg !11220
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !11221 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11223, metadata !DIExpression()), !dbg !11225
  call void @llvm.dbg.value(metadata i32 %1, metadata !11224, metadata !DIExpression()), !dbg !11225
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11226
  %4 = load volatile i32, i32* %3, align 4, !dbg !11226
  %5 = and i32 %4, -1537, !dbg !11226
  %6 = or i32 %5, %1, !dbg !11226
  store volatile i32 %6, i32* %3, align 4, !dbg !11226
  ret void, !dbg !11227
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11228 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11230, metadata !DIExpression()), !dbg !11231
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11232
  %3 = load volatile i32, i32* %2, align 4, !dbg !11232
  %4 = lshr i32 %3, 3, !dbg !11233
  %5 = and i32 %4, 1, !dbg !11233
  ret i32 %5, !dbg !11234
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11235 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11237, metadata !DIExpression()), !dbg !11238
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11239
  %3 = load volatile i32, i32* %2, align 4, !dbg !11239
  %4 = and i32 %3, 1, !dbg !11239
  ret i32 %4, !dbg !11240
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11241 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11243, metadata !DIExpression()), !dbg !11244
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11245
  %3 = load volatile i32, i32* %2, align 4, !dbg !11245
  %4 = lshr i32 %3, 1, !dbg !11246
  %5 = and i32 %4, 1, !dbg !11246
  ret i32 %5, !dbg !11247
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11248 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11250, metadata !DIExpression()), !dbg !11251
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11252
  %3 = load volatile i32, i32* %2, align 4, !dbg !11252
  %4 = lshr i32 %3, 8, !dbg !11253
  %5 = and i32 %4, 1, !dbg !11253
  ret i32 %5, !dbg !11254
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !11255 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11257, metadata !DIExpression()), !dbg !11258
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11259
  store volatile i32 -257, i32* %2, align 4, !dbg !11259
  ret void, !dbg !11260
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !11261 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11263, metadata !DIExpression()), !dbg !11265
  %3 = bitcast i32* %2 to i8*, !dbg !11266
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11266
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11264, metadata !DIExpression()), !dbg !11267
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11268
  %5 = load volatile i32, i32* %4, align 4, !dbg !11268
  store volatile i32 %5, i32* %2, align 4, !dbg !11269
  %6 = load volatile i32, i32* %2, align 4, !dbg !11270
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11271
  %8 = load volatile i32, i32* %7, align 4, !dbg !11271
  store volatile i32 %8, i32* %2, align 4, !dbg !11272
  %9 = load volatile i32, i32* %2, align 4, !dbg !11273
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11274
  ret void, !dbg !11274
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !11275 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11277, metadata !DIExpression()), !dbg !11279
  %3 = bitcast i32* %2 to i8*, !dbg !11280
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11280
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11278, metadata !DIExpression()), !dbg !11281
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11282
  %5 = load volatile i32, i32* %4, align 4, !dbg !11282
  store volatile i32 %5, i32* %2, align 4, !dbg !11283
  %6 = load volatile i32, i32* %2, align 4, !dbg !11284
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11285
  %8 = load volatile i32, i32* %7, align 4, !dbg !11285
  store volatile i32 %8, i32* %2, align 4, !dbg !11286
  %9 = load volatile i32, i32* %2, align 4, !dbg !11287
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11288
  ret void, !dbg !11288
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !11289 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11291, metadata !DIExpression()), !dbg !11293
  %3 = bitcast i32* %2 to i8*, !dbg !11294
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11294
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11292, metadata !DIExpression()), !dbg !11295
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11296
  %5 = load volatile i32, i32* %4, align 4, !dbg !11296
  store volatile i32 %5, i32* %2, align 4, !dbg !11297
  %6 = load volatile i32, i32* %2, align 4, !dbg !11298
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11299
  %8 = load volatile i32, i32* %7, align 4, !dbg !11299
  store volatile i32 %8, i32* %2, align 4, !dbg !11300
  %9 = load volatile i32, i32* %2, align 4, !dbg !11301
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11302
  ret void, !dbg !11302
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !11303 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11305, metadata !DIExpression()), !dbg !11307
  %3 = bitcast i32* %2 to i8*, !dbg !11308
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11308
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11306, metadata !DIExpression()), !dbg !11309
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11310
  %5 = load volatile i32, i32* %4, align 4, !dbg !11310
  store volatile i32 %5, i32* %2, align 4, !dbg !11311
  %6 = load volatile i32, i32* %2, align 4, !dbg !11312
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11313
  %8 = load volatile i32, i32* %7, align 4, !dbg !11313
  store volatile i32 %8, i32* %2, align 4, !dbg !11314
  %9 = load volatile i32, i32* %2, align 4, !dbg !11315
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11316
  ret void, !dbg !11316
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11317 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11319, metadata !DIExpression()), !dbg !11320
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11321
  %3 = load volatile i32, i32* %2, align 4, !dbg !11321
  %4 = lshr i32 %3, 7, !dbg !11322
  %5 = and i32 %4, 1, !dbg !11322
  ret i32 %5, !dbg !11323
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #14 !dbg !11324 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11328, metadata !DIExpression()), !dbg !11330
  call void @llvm.dbg.value(metadata i8 %1, metadata !11329, metadata !DIExpression()), !dbg !11330
  %3 = zext i8 %1 to i32, !dbg !11331
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11332
  store volatile i32 %3, i32* %4, align 4, !dbg !11333
  ret void, !dbg !11334
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11335 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11337, metadata !DIExpression()), !dbg !11338
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11339
  %3 = load volatile i32, i32* %2, align 4, !dbg !11339
  %4 = lshr i32 %3, 5, !dbg !11340
  %5 = and i32 %4, 1, !dbg !11340
  ret i32 %5, !dbg !11341
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11342 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11346, metadata !DIExpression()), !dbg !11347
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11348
  %3 = load volatile i32, i32* %2, align 4, !dbg !11348
  %4 = trunc i32 %3 to i8, !dbg !11349
  ret i8 %4, !dbg !11350
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !11351 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11353, metadata !DIExpression()), !dbg !11359
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11360
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11360
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11360
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11354, metadata !DIExpression()), !dbg !11359
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11361
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !11361
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !11361
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !11355, metadata !DIExpression()), !dbg !11359
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #24, !dbg !11362
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !11363
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !11363
  %10 = tail call fastcc zeroext i1 @device_is_ready.171(%struct.device* noundef %9) #24, !dbg !11365
  br i1 %10, label %14, label %11, !dbg !11366

11:                                               ; preds = %1
  %12 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.159(i32 noundef 1) #24, !dbg !11367
  %13 = zext i8 %12 to i32, !dbg !11367
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.10.172, i32 0, i32 0), i32 noundef %13) #25, !dbg !11367
  br label %62, !dbg !11373

14:                                               ; preds = %1
  %15 = load %struct.device*, %struct.device** %8, align 4, !dbg !11374
  %16 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !11375
  %17 = bitcast %struct._thread_arch** %16 to i8**, !dbg !11375
  %18 = load i8*, i8** %17, align 4, !dbg !11375
  %19 = tail call fastcc i32 @clock_control_on.173(%struct.device* noundef %15, i8* noundef %18) #24, !dbg !11376
  call void @llvm.dbg.value(metadata i32 %19, metadata !11358, metadata !DIExpression()), !dbg !11359
  %20 = icmp eq i32 %19, 0, !dbg !11377
  br i1 %20, label %24, label %21, !dbg !11379

21:                                               ; preds = %14
  %22 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.159(i32 noundef 1) #24, !dbg !11380
  %23 = zext i8 %22 to i32, !dbg !11380
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.11.174, i32 0, i32 0), i32 noundef %23) #25, !dbg !11380
  br label %62, !dbg !11386

24:                                               ; preds = %14
  %25 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !11387
  %26 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %25, align 4, !dbg !11387
  %27 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %26) #24, !dbg !11388
  call void @llvm.dbg.value(metadata i32 %27, metadata !11358, metadata !DIExpression()), !dbg !11359
  %28 = icmp slt i32 %27, 0, !dbg !11389
  br i1 %28, label %62, label %29, !dbg !11391

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11392
  %31 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11392
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %31) #24, !dbg !11393
  %32 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11394
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %32) #24, !dbg !11395
  %33 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !11396
  %34 = load i32, i32* %33, align 4, !dbg !11396
  %35 = icmp ult i32 %34, 3, !dbg !11398
  br i1 %35, label %39, label %36, !dbg !11398

36:                                               ; preds = %29
  %37 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.159(i32 noundef 2) #24, !dbg !11399
  %38 = zext i8 %37 to i32, !dbg !11399
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.12.175, i32 0, i32 0), i32 noundef %38, i32 noundef %34) #25, !dbg !11399
  call void @llvm.dbg.value(metadata i32 0, metadata !11356, metadata !DIExpression()), !dbg !11359
  call void @llvm.dbg.value(metadata i32 0, metadata !11357, metadata !DIExpression()), !dbg !11359
  br label %44

39:                                               ; preds = %29
  %40 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init, i32 0, i32 %34, !dbg !11398
  %41 = load i32, i32* %40, align 4, !dbg !11398
  %42 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init.13, i32 0, i32 %34, !dbg !11398
  %43 = load i32, i32* %42, align 4, !dbg !11398
  br label %44, !dbg !11398

44:                                               ; preds = %39, %36
  %45 = phi i32 [ 0, %36 ], [ %41, %39 ], !dbg !11408
  %46 = phi i32 [ 0, %36 ], [ %43, %39 ], !dbg !11408
  call void @llvm.dbg.value(metadata i32 %46, metadata !11357, metadata !DIExpression()), !dbg !11359
  call void @llvm.dbg.value(metadata i32 %45, metadata !11356, metadata !DIExpression()), !dbg !11359
  %47 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11409
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %47, i32 noundef %46, i32 noundef %45) #24, !dbg !11410
  %48 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !11411
  %49 = load i8, i8* %48, align 4, !dbg !11411, !range !6681
  %50 = icmp eq i8 %49, 0, !dbg !11411
  br i1 %50, label %52, label %51, !dbg !11413

51:                                               ; preds = %44
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #24, !dbg !11414
  br label %52, !dbg !11416

52:                                               ; preds = %51, %44
  %53 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !11417
  %54 = load i32, i32* %53, align 4, !dbg !11417
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %54) #24, !dbg !11418
  %55 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !11419
  %56 = load i8, i8* %55, align 4, !dbg !11419, !range !6681
  %57 = icmp eq i8 %56, 0, !dbg !11419
  br i1 %57, label %60, label %58, !dbg !11421

58:                                               ; preds = %52
  %59 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11422
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %59) #24, !dbg !11424
  br label %60, !dbg !11425

60:                                               ; preds = %58, %52
  %61 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11426
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %61) #24, !dbg !11427
  br label %62, !dbg !11428

62:                                               ; preds = %24, %60, %21, %11
  %63 = phi i32 [ %19, %21 ], [ 0, %60 ], [ -19, %11 ], [ %27, %24 ], !dbg !11359
  ret i32 %63, !dbg !11429
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #9 !dbg !11430 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11434, metadata !DIExpression()), !dbg !11438
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11439
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !11439
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !11439
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !11435, metadata !DIExpression()), !dbg !11438
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !11436, metadata !DIExpression()), !dbg !11438
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !11440
  store %struct.device* @__device_dts_ord_8, %struct.device** %5, align 4, !dbg !11441
  ret void, !dbg !11442
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.171(%struct.device* noundef %0) unnamed_addr #1 !dbg !11443 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11447, metadata !DIExpression()), !dbg !11448
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11449, !srcloc !11451
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.176(%struct.device* noundef %0) #24, !dbg !11452
  ret i1 %2, !dbg !11453
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.173(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !11454 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11456, metadata !DIExpression()), !dbg !11459
  call void @llvm.dbg.value(metadata i8* %1, metadata !11457, metadata !DIExpression()), !dbg !11459
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11460
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !11460
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !11460
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !11458, metadata !DIExpression()), !dbg !11459
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !11461
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !11461
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #25, !dbg !11462
  ret i32 %8, !dbg !11463
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !11464 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !11468, metadata !DIExpression()), !dbg !11472
  call void @llvm.dbg.value(metadata i8 0, metadata !11469, metadata !DIExpression()), !dbg !11472
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !11473
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !11473
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !11471, metadata !DIExpression(DW_OP_deref)), !dbg !11472
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #25, !dbg !11474
  call void @llvm.dbg.value(metadata i32 %4, metadata !11470, metadata !DIExpression()), !dbg !11472
  %5 = icmp slt i32 %4, 0, !dbg !11475
  br i1 %5, label %9, label %6, !dbg !11477

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !11478
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !11471, metadata !DIExpression()), !dbg !11472
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #24, !dbg !11479
  br label %9, !dbg !11480

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !11472
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !11481
  ret i32 %10, !dbg !11481
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11482 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11484, metadata !DIExpression()), !dbg !11488
  call void @llvm.dbg.value(metadata i32 12, metadata !11485, metadata !DIExpression()), !dbg !11488
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !11489

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !11490, metadata !DIExpression()) #23, !dbg !11496
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #23, !dbg !11499, !srcloc !11500
  call void @llvm.dbg.value(metadata i32 %4, metadata !11495, metadata !DIExpression()) #23, !dbg !11496
  %5 = or i32 %4, 12, !dbg !11501
  call void @llvm.dbg.value(metadata i32 %5, metadata !11486, metadata !DIExpression()), !dbg !11502
  call void @llvm.dbg.value(metadata i32 %5, metadata !11503, metadata !DIExpression()) #23, !dbg !11510
  call void @llvm.dbg.value(metadata i32* %2, metadata !11508, metadata !DIExpression()) #23, !dbg !11510
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #23, !dbg !11512, !srcloc !11513
  call void @llvm.dbg.value(metadata i32 %6, metadata !11509, metadata !DIExpression()) #23, !dbg !11510
  %7 = icmp eq i32 %6, 0, !dbg !11489
  br i1 %7, label %8, label %3, !dbg !11501, !llvm.loop !11514

8:                                                ; preds = %3
  ret void, !dbg !11515
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !11516 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11518, metadata !DIExpression()), !dbg !11522
  call void @llvm.dbg.value(metadata i32 %1, metadata !11519, metadata !DIExpression()), !dbg !11522
  call void @llvm.dbg.value(metadata i32 %2, metadata !11520, metadata !DIExpression()), !dbg !11522
  call void @llvm.dbg.value(metadata i32 0, metadata !11521, metadata !DIExpression()), !dbg !11522
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11523
  %5 = load volatile i32, i32* %4, align 4, !dbg !11523
  %6 = and i32 %5, -5633, !dbg !11523
  %7 = or i32 %2, %1, !dbg !11523
  %8 = or i32 %7, %6, !dbg !11523
  store volatile i32 %8, i32* %4, align 4, !dbg !11523
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11524
  %10 = load volatile i32, i32* %9, align 4, !dbg !11524
  %11 = and i32 %10, -12289, !dbg !11524
  store volatile i32 %11, i32* %9, align 4, !dbg !11524
  ret void, !dbg !11525
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !11526 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11528, metadata !DIExpression()), !dbg !11529
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11530
  %3 = load volatile i32, i32* %2, align 4, !dbg !11530
  %4 = or i32 %3, 8, !dbg !11530
  store volatile i32 %4, i32* %2, align 4, !dbg !11530
  ret void, !dbg !11531
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !11532 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !11536, metadata !DIExpression()), !dbg !11539
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !11537, metadata !DIExpression()), !dbg !11539
  call void @llvm.dbg.value(metadata i32 0, metadata !11538, metadata !DIExpression()), !dbg !11539
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !11540
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !11540
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !11541
  %5 = load i8, i8* %4, align 4, !dbg !11541
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #25, !dbg !11542
  ret i32 %6, !dbg !11543
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.176(%struct.device* noundef %0) unnamed_addr #1 !dbg !11544 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11546, metadata !DIExpression()), !dbg !11547
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !11548
  ret i1 %2, !dbg !11549
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #14 !dbg !11550 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11552, metadata !DIExpression()), !dbg !11553
  tail call fastcc void @__NVIC_SetPriority.178() #24, !dbg !11554
  store i32 8399, i32* @last_load, align 4, !dbg !11555
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11556
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11557
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11558
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11559
  %3 = or i32 %2, 7, !dbg !11559
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11559
  ret i32 0, !dbg !11560
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.178() unnamed_addr #14 !dbg !11561 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !11563, metadata !DIExpression()), !dbg !11565
  call void @llvm.dbg.value(metadata i32 1, metadata !11564, metadata !DIExpression()), !dbg !11565
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !11566
  ret void, !dbg !11569
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !11570 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11572, metadata !DIExpression()), !dbg !11574
  %2 = tail call fastcc i32 @elapsed() #24, !dbg !11575
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11576
  %4 = load i32, i32* @cycle_count, align 4, !dbg !11577
  %5 = add i32 %4, %3, !dbg !11577
  store i32 %5, i32* @cycle_count, align 4, !dbg !11577
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11578
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !11579
  %7 = sub i32 %5, %6, !dbg !11582
  %8 = udiv i32 %7, 8400, !dbg !11583
  call void @llvm.dbg.value(metadata i32 %8, metadata !11573, metadata !DIExpression()), !dbg !11574
  %9 = mul nuw i32 %8, 8400, !dbg !11584
  %10 = add i32 %9, %6, !dbg !11585
  store i32 %10, i32* @announced_cycles, align 4, !dbg !11585
  tail call void @sys_clock_announce(i32 noundef %8) #25, !dbg !11586
  tail call void @z_arm_int_exit() #25, !dbg !11587
  ret void, !dbg !11588
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #14 !dbg !11589 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11594
  call void @llvm.dbg.value(metadata i32 %1, metadata !11591, metadata !DIExpression()), !dbg !11595
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11596
  call void @llvm.dbg.value(metadata i32 %2, metadata !11592, metadata !DIExpression()), !dbg !11595
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11597
  call void @llvm.dbg.value(metadata i32 %3, metadata !11593, metadata !DIExpression()), !dbg !11595
  %4 = and i32 %2, 65536, !dbg !11598
  %5 = icmp ne i32 %4, 0, !dbg !11598
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !11600
  %8 = load i32, i32* @last_load, align 4, !dbg !11595
  br i1 %7, label %9, label %13, !dbg !11600

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11601
  %11 = add i32 %10, %8, !dbg !11601
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !11601
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11603
  br label %13, !dbg !11604

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !11605
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11606
  %16 = add i32 %14, %15, !dbg !11607
  ret i32 %16, !dbg !11608
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !11609 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11613, metadata !DIExpression()), !dbg !11626
  call void @llvm.dbg.value(metadata i1 %1, metadata !11614, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11626
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !11627
  br i1 %4, label %5, label %8, !dbg !11627

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11629
  %7 = and i32 %6, -2, !dbg !11629
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11629
  store i32 -16777216, i32* @last_load, align 4, !dbg !11631
  br label %60, !dbg !11632

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !11633
  call void @llvm.dbg.value(metadata i32 %9, metadata !11618, metadata !DIExpression()), !dbg !11626
  br i1 %3, label %18, label %10, !dbg !11634

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !11634
  call void @llvm.dbg.value(metadata i32 undef, metadata !11613, metadata !DIExpression()), !dbg !11626
  %12 = icmp slt i32 %11, 1, !dbg !11635
  br i1 %12, label %18, label %13, !dbg !11635

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !11635
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !11635
  %16 = mul nuw nsw i32 %15, 8400, !dbg !11635
  %17 = add nuw nsw i32 %16, 8399, !dbg !11635
  br label %18, !dbg !11635

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !11613, metadata !DIExpression()), !dbg !11626
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11636, metadata !DIExpression()) #23, !dbg !11643
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11645, !srcloc !11651
  call void @llvm.dbg.value(metadata i32 undef, metadata !11648, metadata !DIExpression()) #23, !dbg !11652
  call void @llvm.dbg.value(metadata i32 undef, metadata !11649, metadata !DIExpression()) #23, !dbg !11652
  call void @llvm.dbg.value(metadata i32 undef, metadata !11642, metadata !DIExpression()) #23, !dbg !11643
  %21 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11653
  br i1 %21, label %23, label %22, !dbg !11656

22:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.179, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.180, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.181, i32 0, i32 0), i32 noundef 148) #25, !dbg !11657
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.182, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11657
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.181, i32 0, i32 0), i32 noundef 148) #25, !dbg !11657
  unreachable, !dbg !11657

23:                                               ; preds = %18
  %24 = extractvalue { i32, i32 } %20, 0, !dbg !11645
  call void @llvm.dbg.value(metadata i32 %24, metadata !11648, metadata !DIExpression()) #23, !dbg !11652
  call void @llvm.dbg.value(metadata i32 %24, metadata !11642, metadata !DIExpression()) #23, !dbg !11643
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11659
  call void @llvm.dbg.value(metadata i32 %24, metadata !11619, metadata !DIExpression()), !dbg !11626
  %25 = tail call fastcc i32 @elapsed() #24, !dbg !11660
  call void @llvm.dbg.value(metadata i32 %25, metadata !11624, metadata !DIExpression()), !dbg !11626
  %26 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11661
  call void @llvm.dbg.value(metadata i32 %26, metadata !11616, metadata !DIExpression()), !dbg !11626
  %27 = load i32, i32* @cycle_count, align 4, !dbg !11662
  %28 = add i32 %27, %25, !dbg !11662
  store i32 %28, i32* @cycle_count, align 4, !dbg !11662
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11663
  %29 = load i32, i32* @announced_cycles, align 4, !dbg !11664
  %30 = sub i32 %28, %29, !dbg !11665
  call void @llvm.dbg.value(metadata i32 %30, metadata !11625, metadata !DIExpression()), !dbg !11626
  %31 = icmp slt i32 %30, 0, !dbg !11666
  br i1 %31, label %41, label %32, !dbg !11668

32:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 undef, metadata !11615, metadata !DIExpression()), !dbg !11626
  call void @llvm.dbg.value(metadata i32 undef, metadata !11615, metadata !DIExpression()), !dbg !11626
  %33 = add nuw i32 %19, %30, !dbg !11669
  %34 = urem i32 %33, 8400, !dbg !11671
  call void @llvm.dbg.value(metadata !DIArgList(i32 %33, i32 %34), metadata !11615, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11626
  %35 = sub nuw nsw i32 %19, %34, !dbg !11672
  call void @llvm.dbg.value(metadata i32 %35, metadata !11615, metadata !DIExpression()), !dbg !11626
  %36 = icmp ugt i32 %35, 1024, !dbg !11673
  br i1 %36, label %37, label %39, !dbg !11673

37:                                               ; preds = %32
  call void @llvm.dbg.value(metadata i32 %35, metadata !11615, metadata !DIExpression()), !dbg !11626
  %38 = icmp ugt i32 %35, 16766400, !dbg !11674
  br i1 %38, label %41, label %39, !dbg !11676

39:                                               ; preds = %32, %37
  %40 = phi i32 [ %35, %37 ], [ 1024, %32 ]
  br label %41

41:                                               ; preds = %37, %23, %39
  %42 = phi i32 [ %40, %39 ], [ 1024, %23 ], [ 16766400, %37 ]
  store i32 %42, i32* @last_load, align 4, !dbg !11677
  %43 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11678
  call void @llvm.dbg.value(metadata i32 %43, metadata !11617, metadata !DIExpression()), !dbg !11626
  %44 = add nsw i32 %42, -1, !dbg !11679
  store volatile i32 %44, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11680
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11681
  %45 = icmp ult i32 %26, %43, !dbg !11682
  br i1 %45, label %46, label %51, !dbg !11684

46:                                               ; preds = %41
  %47 = load i32, i32* @cycle_count, align 4, !dbg !11685
  %48 = add i32 %26, %9, !dbg !11687
  %49 = sub i32 %48, %43, !dbg !11688
  %50 = add i32 %49, %47, !dbg !11685
  br label %55, !dbg !11689

51:                                               ; preds = %41
  %52 = sub i32 %26, %43, !dbg !11690
  %53 = load i32, i32* @cycle_count, align 4, !dbg !11692
  %54 = add i32 %52, %53, !dbg !11692
  br label %55

55:                                               ; preds = %51, %46
  %56 = phi i32 [ %54, %51 ], [ %50, %46 ], !dbg !11693
  store i32 %56, i32* @cycle_count, align 4, !dbg !11693
  call void @llvm.dbg.value(metadata i32 undef, metadata !11694, metadata !DIExpression()) #23, !dbg !11700
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11699, metadata !DIExpression()) #23, !dbg !11700
  %57 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11702
  br i1 %57, label %59, label %58, !dbg !11705

58:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.179, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.183, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.181, i32 0, i32 0), i32 noundef 194) #25, !dbg !11706
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.184, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11706
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.181, i32 0, i32 0), i32 noundef 194) #25, !dbg !11706
  unreachable, !dbg !11706

59:                                               ; preds = %55
  call void @llvm.dbg.value(metadata i32 %24, metadata !11694, metadata !DIExpression()) #23, !dbg !11700
  call void @llvm.dbg.value(metadata i32 %24, metadata !11708, metadata !DIExpression()) #23, !dbg !11711
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #23, !dbg !11713, !srcloc !11714
  br label %60

60:                                               ; preds = %59, %5
  ret void, !dbg !11715
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !11716 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11636, metadata !DIExpression()) #23, !dbg !11720
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11722, !srcloc !11651
  call void @llvm.dbg.value(metadata i32 undef, metadata !11648, metadata !DIExpression()) #23, !dbg !11724
  call void @llvm.dbg.value(metadata i32 undef, metadata !11649, metadata !DIExpression()) #23, !dbg !11724
  call void @llvm.dbg.value(metadata i32 undef, metadata !11642, metadata !DIExpression()) #23, !dbg !11720
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11725
  br i1 %2, label %4, label %3, !dbg !11726

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.179, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.180, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.181, i32 0, i32 0), i32 noundef 148) #25, !dbg !11727
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.182, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11727
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.181, i32 0, i32 0), i32 noundef 148) #25, !dbg !11727
  unreachable, !dbg !11727

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !11648, metadata !DIExpression()) #23, !dbg !11724
  call void @llvm.dbg.value(metadata i32 undef, metadata !11642, metadata !DIExpression()) #23, !dbg !11720
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11728
  call void @llvm.dbg.value(metadata i32 undef, metadata !11718, metadata !DIExpression()), !dbg !11729
  %5 = tail call fastcc i32 @elapsed() #24, !dbg !11730
  %6 = load i32, i32* @cycle_count, align 4, !dbg !11731
  %7 = load i32, i32* @announced_cycles, align 4, !dbg !11732
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %7, i32 %6), metadata !11719, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11729
  call void @llvm.dbg.value(metadata i32 undef, metadata !11694, metadata !DIExpression()) #23, !dbg !11733
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11699, metadata !DIExpression()) #23, !dbg !11733
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11735
  br i1 %8, label %10, label %9, !dbg !11736

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.179, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.183, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.181, i32 0, i32 0), i32 noundef 194) #25, !dbg !11737
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.184, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11737
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.181, i32 0, i32 0), i32 noundef 194) #25, !dbg !11737
  unreachable, !dbg !11737

10:                                               ; preds = %4
  %11 = add i32 %6, %5, !dbg !11738
  call void @llvm.dbg.value(metadata !DIArgList(i32 %11, i32 %7), metadata !11719, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11729
  %12 = sub i32 %11, %7, !dbg !11739
  call void @llvm.dbg.value(metadata i32 %12, metadata !11719, metadata !DIExpression()), !dbg !11729
  %13 = extractvalue { i32, i32 } %1, 0, !dbg !11722
  call void @llvm.dbg.value(metadata i32 %13, metadata !11648, metadata !DIExpression()) #23, !dbg !11724
  call void @llvm.dbg.value(metadata i32 %13, metadata !11642, metadata !DIExpression()) #23, !dbg !11720
  call void @llvm.dbg.value(metadata i32 %13, metadata !11718, metadata !DIExpression()), !dbg !11729
  call void @llvm.dbg.value(metadata i32 undef, metadata !11694, metadata !DIExpression()) #23, !dbg !11733
  call void @llvm.dbg.value(metadata i32 undef, metadata !11708, metadata !DIExpression()) #23, !dbg !11740
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #23, !dbg !11742, !srcloc !11714
  %14 = udiv i32 %12, 8400, !dbg !11743
  ret i32 %14, !dbg !11744
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !11745 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11636, metadata !DIExpression()) #23, !dbg !11749
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11751, !srcloc !11651
  call void @llvm.dbg.value(metadata i32 undef, metadata !11648, metadata !DIExpression()) #23, !dbg !11753
  call void @llvm.dbg.value(metadata i32 undef, metadata !11649, metadata !DIExpression()) #23, !dbg !11753
  call void @llvm.dbg.value(metadata i32 undef, metadata !11642, metadata !DIExpression()) #23, !dbg !11749
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11754
  br i1 %2, label %4, label %3, !dbg !11755

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.179, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.180, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.181, i32 0, i32 0), i32 noundef 148) #25, !dbg !11756
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.182, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11756
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.181, i32 0, i32 0), i32 noundef 148) #25, !dbg !11756
  unreachable, !dbg !11756

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !11648, metadata !DIExpression()) #23, !dbg !11753
  call void @llvm.dbg.value(metadata i32 undef, metadata !11642, metadata !DIExpression()) #23, !dbg !11749
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11757
  call void @llvm.dbg.value(metadata i32 undef, metadata !11747, metadata !DIExpression()), !dbg !11758
  %5 = tail call fastcc i32 @elapsed() #24, !dbg !11759
  %6 = load i32, i32* @cycle_count, align 4, !dbg !11760
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %6), metadata !11748, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !11758
  call void @llvm.dbg.value(metadata i32 undef, metadata !11694, metadata !DIExpression()) #23, !dbg !11761
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11699, metadata !DIExpression()) #23, !dbg !11761
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11763
  br i1 %7, label %9, label %8, !dbg !11764

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.179, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.183, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.181, i32 0, i32 0), i32 noundef 194) #25, !dbg !11765
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.184, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11765
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.181, i32 0, i32 0), i32 noundef 194) #25, !dbg !11765
  unreachable, !dbg !11765

9:                                                ; preds = %4
  %10 = add i32 %6, %5, !dbg !11766
  call void @llvm.dbg.value(metadata i32 %10, metadata !11748, metadata !DIExpression()), !dbg !11758
  %11 = extractvalue { i32, i32 } %1, 0, !dbg !11751
  call void @llvm.dbg.value(metadata i32 %11, metadata !11648, metadata !DIExpression()) #23, !dbg !11753
  call void @llvm.dbg.value(metadata i32 %11, metadata !11642, metadata !DIExpression()) #23, !dbg !11749
  call void @llvm.dbg.value(metadata i32 %11, metadata !11747, metadata !DIExpression()), !dbg !11758
  call void @llvm.dbg.value(metadata i32 undef, metadata !11694, metadata !DIExpression()) #23, !dbg !11761
  call void @llvm.dbg.value(metadata i32 undef, metadata !11708, metadata !DIExpression()) #23, !dbg !11767
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #23, !dbg !11769, !srcloc !11714
  ret i32 %10, !dbg !11770
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #14 !dbg !11771 {
  %1 = load i32, i32* @last_load, align 4, !dbg !11772
  %2 = icmp eq i32 %1, -16777216, !dbg !11774
  br i1 %2, label %3, label %6, !dbg !11775

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11776
  %5 = or i32 %4, 1, !dbg !11776
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11776
  br label %6, !dbg !11778

6:                                                ; preds = %3, %0
  ret void, !dbg !11779
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #14 !dbg !11780 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11781
  %2 = and i32 %1, -2, !dbg !11781
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11781
  ret void, !dbg !11782
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #13 !dbg !11783 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !11809, metadata !DIExpression()), !dbg !11812
  call void @llvm.dbg.value(metadata i8 %1, metadata !11810, metadata !DIExpression()), !dbg !11812
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !11811, metadata !DIExpression()), !dbg !11812
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !11813
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11813
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !11812
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11814
  %8 = load i8, i8* %6, align 4, !dbg !11815
  %9 = zext i8 %8 to i32, !dbg !11816
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !11816
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !11817
  br i1 %11, label %18, label %24, !dbg !11818

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !11812
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11814
  %14 = load i8, i8* %6, align 4, !dbg !11815
  %15 = zext i8 %14 to i32, !dbg !11816
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !11816
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !11817
  br i1 %17, label %18, label %24, !dbg !11818, !llvm.loop !11819

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !11821
  %21 = load i8, i8* %20, align 1, !dbg !11821
  %22 = icmp eq i8 %21, %1, !dbg !11824
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !11825
  br i1 %22, label %24, label %12, !dbg !11826

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !11812
  ret i32 %25, !dbg !11827
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11828 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !11839, metadata !DIExpression()), !dbg !11855
  call void @llvm.dbg.value(metadata i8 %1, metadata !11840, metadata !DIExpression()), !dbg !11855
  call void @llvm.dbg.value(metadata i32 %2, metadata !11841, metadata !DIExpression()), !dbg !11855
  call void @llvm.dbg.value(metadata i32 0, metadata !11844, metadata !DIExpression()), !dbg !11855
  call void @llvm.dbg.value(metadata i32 0, metadata !11845, metadata !DIExpression()), !dbg !11855
  call void @llvm.dbg.value(metadata i8 0, metadata !11846, metadata !DIExpression()), !dbg !11856
  %4 = icmp eq i8 %1, 0, !dbg !11857
  br i1 %4, label %35, label %5, !dbg !11858

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !11857
  br label %9, !dbg !11858

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !11846, metadata !DIExpression()), !dbg !11856
  call void @llvm.dbg.value(metadata i32 %29, metadata !11844, metadata !DIExpression()), !dbg !11855
  %8 = icmp eq i32 %34, %6, !dbg !11857
  br i1 %8, label %35, label %9, !dbg !11858, !llvm.loop !11859

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !11846, metadata !DIExpression()), !dbg !11856
  call void @llvm.dbg.value(metadata i32 %11, metadata !11844, metadata !DIExpression()), !dbg !11855
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !11861
  %13 = load i32, i32* %12, align 4, !dbg !11861
  call void @llvm.dbg.value(metadata i32 %13, metadata !11843, metadata !DIExpression()), !dbg !11855
  %14 = and i32 %13, 31, !dbg !11862
  %15 = icmp ult i32 %14, 16, !dbg !11863
  br i1 %15, label %16, label %20, !dbg !11864

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !11865
  %18 = load i32, i32* %17, align 4, !dbg !11865
  %19 = or i32 %18, 32, !dbg !11867
  call void @llvm.dbg.value(metadata i32 %19, metadata !11844, metadata !DIExpression()), !dbg !11855
  br label %28, !dbg !11868

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !11869

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !11870
  %23 = load i32, i32* %22, align 4, !dbg !11870
  call void @llvm.dbg.value(metadata i32 %23, metadata !11848, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !11871
  %24 = lshr i32 %23, 7, !dbg !11872
  %25 = and i32 %24, 16, !dbg !11872
  %26 = or i32 %25, %23, !dbg !11872
  call void @llvm.dbg.value(metadata i32 %26, metadata !11844, metadata !DIExpression()), !dbg !11855
  br label %28, !dbg !11873

27:                                               ; preds = %20
  br label %28

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ %11, %27 ], [ 48, %20 ], !dbg !11855
  call void @llvm.dbg.value(metadata i32 %29, metadata !11844, metadata !DIExpression()), !dbg !11855
  %30 = lshr i32 %13, 5, !dbg !11874
  %31 = and i32 %30, 255, !dbg !11874
  call void @llvm.dbg.value(metadata i32 %31, metadata !11842, metadata !DIExpression()), !dbg !11855
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #24, !dbg !11875
  call void @llvm.dbg.value(metadata i32 %32, metadata !11845, metadata !DIExpression()), !dbg !11855
  %33 = icmp slt i32 %32, 0, !dbg !11876
  %34 = add nuw nsw i32 %10, 1, !dbg !11878
  call void @llvm.dbg.value(metadata i32 %34, metadata !11846, metadata !DIExpression()), !dbg !11856
  br i1 %33, label %35, label %7, !dbg !11879

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !11880
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11881 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11885, metadata !DIExpression()), !dbg !11889
  call void @llvm.dbg.value(metadata i32 %1, metadata !11886, metadata !DIExpression()), !dbg !11889
  call void @llvm.dbg.value(metadata i32 %2, metadata !11887, metadata !DIExpression()), !dbg !11889
  %4 = icmp ugt i32 %0, 175, !dbg !11890
  br i1 %4, label %16, label %5, !dbg !11892

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !11893
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !11894
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !11894
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !11888, metadata !DIExpression()), !dbg !11889
  %9 = add nsw i32 %6, -8, !dbg !11895
  %10 = icmp ult i32 %9, 3, !dbg !11895
  br i1 %10, label %16, label %11, !dbg !11897

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.191(%struct.device* noundef %8) #24, !dbg !11898
  br i1 %12, label %13, label %16, !dbg !11899

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !11900
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #25, !dbg !11901
  br label %16, !dbg !11902

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !11889
  ret i32 %17, !dbg !11903
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.191(%struct.device* noundef %0) unnamed_addr #1 !dbg !11904 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11908, metadata !DIExpression()), !dbg !11909
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11910, !srcloc !11912
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.192(%struct.device* noundef %0) #24, !dbg !11913
  ret i1 %2, !dbg !11914
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.192(%struct.device* noundef %0) unnamed_addr #1 !dbg !11915 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11917, metadata !DIExpression()), !dbg !11918
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !11919
  ret i1 %2, !dbg !11920
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #4 !dbg !11921 {
  ret void, !dbg !11922
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #15 !dbg !11923 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11925, metadata !DIExpression()), !dbg !11930
  call void @llvm.dbg.value(metadata i32 0, metadata !11926, metadata !DIExpression()), !dbg !11930
  call void @llvm.dbg.value(metadata i32 2, metadata !11927, metadata !DIExpression()), !dbg !11930
  call void @llvm.dbg.value(metadata i32 0, metadata !11928, metadata !DIExpression()), !dbg !11930
  call void @llvm.dbg.value(metadata i32 2, metadata !11929, metadata !DIExpression()), !dbg !11930
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11931
  %2 = and i32 %1, 12, !dbg !11932
  call void @llvm.dbg.value(metadata i32 %2, metadata !11925, metadata !DIExpression()), !dbg !11930
  %3 = icmp eq i32 %2, 8, !dbg !11933
  br i1 %3, label %4, label %18, !dbg !11933

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11934
  call void @llvm.dbg.value(metadata i32 %5, metadata !11928, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !11930
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11936
  %7 = and i32 %6, 63, !dbg !11937
  call void @llvm.dbg.value(metadata i32 %7, metadata !11929, metadata !DIExpression()), !dbg !11930
  %8 = udiv i32 16000000, %7, !dbg !11938
  %9 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11938
  %10 = lshr i32 %9, 6, !dbg !11938
  %11 = and i32 %10, 511, !dbg !11938
  %12 = mul i32 %11, %8, !dbg !11938
  call void @llvm.dbg.value(metadata i32 %12, metadata !11926, metadata !DIExpression()), !dbg !11930
  call void @llvm.dbg.value(metadata i32 %12, metadata !11926, metadata !DIExpression()), !dbg !11930
  call void @llvm.dbg.value(metadata i32 %12, metadata !11926, metadata !DIExpression()), !dbg !11930
  %13 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11940
  %14 = lshr i32 %13, 15, !dbg !11941
  %15 = and i32 %14, 6, !dbg !11941
  %16 = add nuw nsw i32 %15, 2, !dbg !11941
  call void @llvm.dbg.value(metadata i32 %16, metadata !11927, metadata !DIExpression()), !dbg !11930
  %17 = udiv i32 %12, %16, !dbg !11942
  br label %18, !dbg !11943

18:                                               ; preds = %0, %4
  %19 = phi i32 [ %17, %4 ], [ 16000000, %0 ]
  store i32 %19, i32* @SystemCoreClock, align 4, !dbg !11944
  %20 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11945
  %21 = lshr i32 %20, 4, !dbg !11946
  %22 = and i32 %21, 15, !dbg !11946
  %23 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %22, !dbg !11947
  %24 = load i8, i8* %23, align 1, !dbg !11947
  %25 = zext i8 %24 to i32, !dbg !11947
  call void @llvm.dbg.value(metadata i32 %25, metadata !11925, metadata !DIExpression()), !dbg !11930
  %26 = lshr i32 %19, %25, !dbg !11948
  store i32 %26, i32* @SystemCoreClock, align 4, !dbg !11948
  ret void, !dbg !11949
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_PeriphCLKConfig(%struct.RCC_PeriphCLKInitTypeDef* noundef readonly %0) local_unnamed_addr #1 !dbg !11950 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_PeriphCLKInitTypeDef* %0, metadata !11992, metadata !DIExpression()), !dbg !12006
  call void @llvm.dbg.value(metadata i32 0, metadata !11993, metadata !DIExpression()), !dbg !12006
  call void @llvm.dbg.value(metadata i32 0, metadata !11994, metadata !DIExpression()), !dbg !12006
  call void @llvm.dbg.value(metadata i32 0, metadata !11995, metadata !DIExpression()), !dbg !12006
  call void @llvm.dbg.value(metadata i32 0, metadata !11996, metadata !DIExpression()), !dbg !12006
  call void @llvm.dbg.value(metadata i32 0, metadata !11997, metadata !DIExpression()), !dbg !12006
  call void @llvm.dbg.value(metadata i32 0, metadata !11998, metadata !DIExpression()), !dbg !12006
  call void @llvm.dbg.value(metadata i32 0, metadata !11999, metadata !DIExpression()), !dbg !12006
  call void @llvm.dbg.value(metadata i32 0, metadata !12000, metadata !DIExpression()), !dbg !12006
  call void @llvm.dbg.value(metadata i32 0, metadata !12001, metadata !DIExpression()), !dbg !12006
  %3 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 0, !dbg !12007
  %4 = load i32, i32* %3, align 4, !dbg !12007
  %5 = and i32 %4, 1, !dbg !12009
  %6 = icmp eq i32 %5, 0, !dbg !12010
  br i1 %6, label %17, label %7, !dbg !12011

7:                                                ; preds = %1
  %8 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12012
  %9 = and i32 %8, -100663297, !dbg !12012
  %10 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 7, !dbg !12012
  %11 = load i32, i32* %10, align 4, !dbg !12012
  %12 = or i32 %9, %11, !dbg !12012
  store volatile i32 %12, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12012
  %13 = load i32, i32* %10, align 4, !dbg !12014
  %14 = icmp eq i32 %13, 0, !dbg !12016
  %15 = zext i1 %14 to i32, !dbg !12017
  %16 = load i32, i32* %3, align 4, !dbg !12018
  br label %17, !dbg !12017

17:                                               ; preds = %7, %1
  %18 = phi i32 [ %4, %1 ], [ %16, %7 ], !dbg !12018
  %19 = phi i32 [ 0, %1 ], [ %15, %7 ], !dbg !12006
  call void @llvm.dbg.value(metadata i32 %19, metadata !12000, metadata !DIExpression()), !dbg !12006
  %20 = and i32 %18, 2, !dbg !12020
  %21 = icmp eq i32 %20, 0, !dbg !12021
  br i1 %21, label %32, label %22, !dbg !12022

22:                                               ; preds = %17
  %23 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12023
  %24 = and i32 %23, -402653185, !dbg !12023
  %25 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 8, !dbg !12023
  %26 = load i32, i32* %25, align 4, !dbg !12023
  %27 = or i32 %24, %26, !dbg !12023
  store volatile i32 %27, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12023
  %28 = load i32, i32* %25, align 4, !dbg !12025
  %29 = icmp eq i32 %28, 0, !dbg !12027
  %30 = select i1 %29, i32 1, i32 %19, !dbg !12028
  %31 = load i32, i32* %3, align 4, !dbg !12029
  br label %32, !dbg !12028

32:                                               ; preds = %22, %17
  %33 = phi i32 [ %18, %17 ], [ %31, %22 ], !dbg !12029
  %34 = phi i32 [ %19, %17 ], [ %30, %22 ], !dbg !12006
  call void @llvm.dbg.value(metadata i32 %34, metadata !12000, metadata !DIExpression()), !dbg !12006
  %35 = and i32 %33, 4, !dbg !12031
  %36 = icmp eq i32 %35, 0, !dbg !12032
  br i1 %36, label %49, label %37, !dbg !12033

37:                                               ; preds = %32
  %38 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12034
  %39 = and i32 %38, -3145729, !dbg !12034
  %40 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !12034
  %41 = load i32, i32* %40, align 4, !dbg !12034
  %42 = or i32 %39, %41, !dbg !12034
  store volatile i32 %42, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12034
  %43 = load i32, i32* %40, align 4, !dbg !12036
  %44 = icmp eq i32 %43, 1048576, !dbg !12038
  %45 = select i1 %44, i32 1, i32 %34, !dbg !12039
  call void @llvm.dbg.value(metadata i32 %45, metadata !12000, metadata !DIExpression()), !dbg !12006
  %46 = icmp eq i32 %43, 0, !dbg !12040
  %47 = zext i1 %46 to i32, !dbg !12042
  %48 = load i32, i32* %3, align 4, !dbg !12043
  br label %49, !dbg !12042

49:                                               ; preds = %37, %32
  %50 = phi i32 [ %33, %32 ], [ %48, %37 ], !dbg !12043
  %51 = phi i32 [ %34, %32 ], [ %45, %37 ], !dbg !12006
  %52 = phi i32 [ 0, %32 ], [ %47, %37 ], !dbg !12006
  call void @llvm.dbg.value(metadata i32 %52, metadata !12001, metadata !DIExpression()), !dbg !12006
  call void @llvm.dbg.value(metadata i32 %51, metadata !12000, metadata !DIExpression()), !dbg !12006
  %53 = and i32 %50, 8, !dbg !12045
  %54 = icmp eq i32 %53, 0, !dbg !12046
  br i1 %54, label %67, label %55, !dbg !12047

55:                                               ; preds = %49
  %56 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12048
  %57 = and i32 %56, -12582913, !dbg !12048
  %58 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !12048
  %59 = load i32, i32* %58, align 4, !dbg !12048
  %60 = or i32 %57, %59, !dbg !12048
  store volatile i32 %60, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12048
  %61 = load i32, i32* %58, align 4, !dbg !12050
  %62 = icmp eq i32 %61, 4194304, !dbg !12052
  %63 = select i1 %62, i32 1, i32 %51, !dbg !12053
  call void @llvm.dbg.value(metadata i32 %63, metadata !12000, metadata !DIExpression()), !dbg !12006
  %64 = icmp eq i32 %61, 0, !dbg !12054
  %65 = select i1 %64, i32 1, i32 %52, !dbg !12056
  %66 = load i32, i32* %3, align 4, !dbg !12057
  br label %67, !dbg !12056

67:                                               ; preds = %55, %49
  %68 = phi i32 [ %50, %49 ], [ %66, %55 ], !dbg !12057
  %69 = phi i32 [ %51, %49 ], [ %63, %55 ], !dbg !12006
  %70 = phi i32 [ %52, %49 ], [ %65, %55 ], !dbg !12006
  call void @llvm.dbg.value(metadata i32 %70, metadata !12001, metadata !DIExpression()), !dbg !12006
  call void @llvm.dbg.value(metadata i32 %69, metadata !12000, metadata !DIExpression()), !dbg !12006
  %71 = and i32 %68, 32, !dbg !12058
  %72 = icmp eq i32 %71, 0, !dbg !12059
  br i1 %72, label %131, label %73, !dbg !12060

73:                                               ; preds = %67
  %74 = bitcast i32* %2 to i8*, !dbg !12061
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %74), !dbg !12061
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12002, metadata !DIExpression()), !dbg !12061
  store volatile i32 0, i32* %2, align 4, !dbg !12061
  %75 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12061
  %76 = or i32 %75, 268435456, !dbg !12061
  store volatile i32 %76, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12061
  %77 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12061
  %78 = and i32 %77, 268435456, !dbg !12061
  store volatile i32 %78, i32* %2, align 4, !dbg !12061
  %79 = load volatile i32, i32* %2, align 4, !dbg !12061
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %74), !dbg !12062
  %80 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12063
  %81 = or i32 %80, 256, !dbg !12063
  store volatile i32 %81, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12063
  %82 = tail call i32 @HAL_GetTick() #25, !dbg !12064
  call void @llvm.dbg.value(metadata i32 %82, metadata !11993, metadata !DIExpression()), !dbg !12006
  br label %83, !dbg !12065

83:                                               ; preds = %87, %73
  %84 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12066
  %85 = and i32 %84, 256, !dbg !12067
  %86 = icmp eq i32 %85, 0, !dbg !12068
  br i1 %86, label %87, label %91, !dbg !12065

87:                                               ; preds = %83
  %88 = tail call i32 @HAL_GetTick() #25, !dbg !12069
  %89 = sub i32 %88, %82, !dbg !12072
  %90 = icmp ugt i32 %89, 2, !dbg !12073
  br i1 %90, label %439, label %83, !dbg !12074, !llvm.loop !12075

91:                                               ; preds = %83
  %92 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12077
  %93 = and i32 %92, 768, !dbg !12078
  call void @llvm.dbg.value(metadata i32 %93, metadata !11994, metadata !DIExpression()), !dbg !12006
  %94 = icmp eq i32 %93, 0, !dbg !12079
  br i1 %94, label %116, label %95, !dbg !12081

95:                                               ; preds = %91
  %96 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 9, !dbg !12082
  %97 = load i32, i32* %96, align 4, !dbg !12082
  %98 = and i32 %97, 768, !dbg !12083
  %99 = icmp eq i32 %93, %98, !dbg !12084
  br i1 %99, label %116, label %100, !dbg !12085

100:                                              ; preds = %95
  %101 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12086
  %102 = and i32 %101, -769, !dbg !12088
  call void @llvm.dbg.value(metadata i32 %102, metadata !11994, metadata !DIExpression()), !dbg !12006
  store volatile i32 1, i32* inttoptr (i32 1111952960 to i32*), align 64, !dbg !12089
  store volatile i32 0, i32* inttoptr (i32 1111952960 to i32*), align 64, !dbg !12090
  store volatile i32 %102, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12091
  %103 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12092
  %104 = and i32 %103, 1, !dbg !12092
  %105 = icmp eq i32 %104, 0, !dbg !12092
  br i1 %105, label %116, label %106, !dbg !12094

106:                                              ; preds = %100
  %107 = tail call i32 @HAL_GetTick() #25, !dbg !12095
  call void @llvm.dbg.value(metadata i32 %107, metadata !11993, metadata !DIExpression()), !dbg !12006
  br label %108, !dbg !12097

108:                                              ; preds = %112, %106
  %109 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12098
  %110 = and i32 %109, 2, !dbg !12099
  %111 = icmp eq i32 %110, 0, !dbg !12099
  br i1 %111, label %112, label %116, !dbg !12097

112:                                              ; preds = %108
  %113 = tail call i32 @HAL_GetTick() #25, !dbg !12100
  %114 = sub i32 %113, %107, !dbg !12103
  %115 = icmp ugt i32 %114, 5000, !dbg !12104
  br i1 %115, label %439, label %108, !dbg !12105, !llvm.loop !12106

116:                                              ; preds = %108, %91, %95, %100
  %117 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 9, !dbg !12108
  %118 = load i32, i32* %117, align 4, !dbg !12108
  %119 = and i32 %118, 768, !dbg !12108
  %120 = icmp eq i32 %119, 768, !dbg !12108
  %121 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12108
  %122 = and i32 %121, -2031617, !dbg !12108
  %123 = and i32 %118, 268434687, !dbg !12108
  %124 = select i1 %120, i32 %123, i32 0, !dbg !12108
  %125 = or i32 %122, %124, !dbg !12108
  store volatile i32 %125, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12108
  %126 = load i32, i32* %117, align 4, !dbg !12108
  %127 = and i32 %126, 4095, !dbg !12108
  %128 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12108
  %129 = or i32 %128, %127, !dbg !12108
  store volatile i32 %129, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12108
  %130 = load i32, i32* %3, align 4, !dbg !12110
  br label %131, !dbg !12112

131:                                              ; preds = %116, %67
  %132 = phi i32 [ %130, %116 ], [ %68, %67 ], !dbg !12110
  %133 = and i32 %132, 16, !dbg !12113
  %134 = icmp eq i32 %133, 0, !dbg !12114
  br i1 %134, label %140, label %135, !dbg !12115

135:                                              ; preds = %131
  %136 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 15, !dbg !12116
  %137 = load i8, i8* %136, align 4, !dbg !12116
  %138 = zext i8 %137 to i32, !dbg !12116
  store volatile i32 %138, i32* inttoptr (i32 1111953888 to i32*), align 32, !dbg !12116
  %139 = load i32, i32* %3, align 4, !dbg !12118
  br label %140, !dbg !12120

140:                                              ; preds = %135, %131
  %141 = phi i32 [ %139, %135 ], [ %132, %131 ], !dbg !12118
  %142 = and i32 %141, 128, !dbg !12121
  %143 = icmp eq i32 %142, 0, !dbg !12122
  br i1 %143, label %151, label %144, !dbg !12123

144:                                              ; preds = %140
  %145 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12124
  %146 = and i32 %145, -12582913, !dbg !12124
  %147 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 12, !dbg !12124
  %148 = load i32, i32* %147, align 4, !dbg !12124
  %149 = or i32 %146, %148, !dbg !12124
  store volatile i32 %149, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12124
  %150 = load i32, i32* %3, align 4, !dbg !12126
  br label %151, !dbg !12128

151:                                              ; preds = %144, %140
  %152 = phi i32 [ %150, %144 ], [ %141, %140 ], !dbg !12126
  %153 = and i32 %152, 64, !dbg !12129
  %154 = icmp eq i32 %153, 0, !dbg !12130
  br i1 %154, label %162, label %155, !dbg !12131

155:                                              ; preds = %151
  %156 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12132
  %157 = and i32 %156, -67108865, !dbg !12132
  %158 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 11, !dbg !12132
  %159 = load i32, i32* %158, align 4, !dbg !12132
  %160 = or i32 %157, %159, !dbg !12132
  store volatile i32 %160, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12132
  %161 = load i32, i32* %3, align 4, !dbg !12134
  br label %162, !dbg !12136

162:                                              ; preds = %155, %151
  %163 = phi i32 [ %161, %155 ], [ %152, %151 ], !dbg !12134
  %164 = and i32 %163, 256, !dbg !12137
  %165 = icmp eq i32 %164, 0, !dbg !12138
  br i1 %165, label %176, label %166, !dbg !12139

166:                                              ; preds = %162
  %167 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12140
  %168 = and i32 %167, -134217729, !dbg !12140
  %169 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 14, !dbg !12140
  %170 = load i32, i32* %169, align 4, !dbg !12140
  %171 = or i32 %168, %170, !dbg !12140
  store volatile i32 %171, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12140
  %172 = load i32, i32* %169, align 4, !dbg !12142
  %173 = icmp eq i32 %172, 134217728, !dbg !12144
  %174 = select i1 %173, i32 1, i32 %70, !dbg !12145
  %175 = load i32, i32* %3, align 4, !dbg !12146
  br label %176, !dbg !12145

176:                                              ; preds = %166, %162
  %177 = phi i32 [ %163, %162 ], [ %175, %166 ], !dbg !12146
  %178 = phi i32 [ %70, %162 ], [ %174, %166 ], !dbg !12006
  call void @llvm.dbg.value(metadata i32 %178, metadata !12001, metadata !DIExpression()), !dbg !12006
  %179 = and i32 %177, 512, !dbg !12148
  %180 = icmp eq i32 %179, 0, !dbg !12149
  br i1 %180, label %188, label %181, !dbg !12150

181:                                              ; preds = %176
  %182 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12151
  %183 = and i32 %182, -268435457, !dbg !12151
  %184 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 10, !dbg !12151
  %185 = load i32, i32* %184, align 4, !dbg !12151
  %186 = or i32 %183, %185, !dbg !12151
  store volatile i32 %186, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12151
  %187 = load i32, i32* %3, align 4, !dbg !12153
  br label %188, !dbg !12155

188:                                              ; preds = %181, %176
  %189 = phi i32 [ %187, %181 ], [ %177, %176 ], !dbg !12153
  %190 = and i32 %189, 1024, !dbg !12156
  %191 = icmp eq i32 %190, 0, !dbg !12157
  br i1 %191, label %204, label %192, !dbg !12158

192:                                              ; preds = %188
  %193 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12159
  %194 = and i32 %193, -536870913, !dbg !12159
  %195 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 13, !dbg !12159
  %196 = load i32, i32* %195, align 4, !dbg !12159
  %197 = or i32 %194, %196, !dbg !12159
  store volatile i32 %197, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12159
  %198 = load i32, i32* %195, align 4, !dbg !12161
  %199 = icmp eq i32 %198, 536870912, !dbg !12163
  %200 = icmp eq i32 %69, 1
  %201 = select i1 %199, i1 true, i1 %200, !dbg !12164
  call void @llvm.dbg.value(metadata i32 %69, metadata !12000, metadata !DIExpression()), !dbg !12006
  br i1 %201, label %209, label %202, !dbg !12164

202:                                              ; preds = %192
  %203 = load i32, i32* %3, align 4, !dbg !12165
  br label %206, !dbg !12164

204:                                              ; preds = %188
  call void @llvm.dbg.value(metadata i32 %69, metadata !12000, metadata !DIExpression()), !dbg !12006
  %205 = icmp eq i32 %69, 1, !dbg !12167
  br i1 %205, label %209, label %206, !dbg !12168

206:                                              ; preds = %202, %204
  %207 = phi i32 [ %203, %202 ], [ %189, %204 ], !dbg !12165
  %208 = icmp eq i32 %207, 2048, !dbg !12169
  br i1 %208, label %209, label %356, !dbg !12170

209:                                              ; preds = %192, %206, %204
  store volatile i32 0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !12171
  %210 = tail call i32 @HAL_GetTick() #25, !dbg !12173
  call void @llvm.dbg.value(metadata i32 %210, metadata !11993, metadata !DIExpression()), !dbg !12006
  br label %211, !dbg !12174

211:                                              ; preds = %215, %209
  %212 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12175
  %213 = and i32 %212, 134217728, !dbg !12175
  %214 = icmp eq i32 %213, 0, !dbg !12175
  br i1 %214, label %219, label %215, !dbg !12174

215:                                              ; preds = %211
  %216 = tail call i32 @HAL_GetTick() #25, !dbg !12176
  %217 = sub i32 %216, %210, !dbg !12179
  %218 = icmp ugt i32 %217, 2, !dbg !12180
  br i1 %218, label %439, label %211, !dbg !12181, !llvm.loop !12182

219:                                              ; preds = %211
  %220 = load i32, i32* %3, align 4, !dbg !12184
  %221 = and i32 %220, 1, !dbg !12186
  %222 = icmp eq i32 %221, 0, !dbg !12187
  br i1 %222, label %227, label %223, !dbg !12188

223:                                              ; preds = %219
  %224 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 7, !dbg !12189
  %225 = load i32, i32* %224, align 4, !dbg !12189
  %226 = icmp eq i32 %225, 0, !dbg !12190
  br i1 %226, label %234, label %227, !dbg !12191

227:                                              ; preds = %223, %219
  %228 = and i32 %220, 2, !dbg !12192
  %229 = icmp eq i32 %228, 0, !dbg !12193
  br i1 %229, label %252, label %230, !dbg !12194

230:                                              ; preds = %227
  %231 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 8, !dbg !12195
  %232 = load i32, i32* %231, align 4, !dbg !12195
  %233 = icmp eq i32 %232, 0, !dbg !12196
  br i1 %233, label %234, label %252, !dbg !12197

234:                                              ; preds = %230, %223
  %235 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12198
  %236 = and i32 %235, 196608, !dbg !12200
  call void @llvm.dbg.value(metadata i32 %236, metadata !11995, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !12006
  %237 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12201
  %238 = and i32 %237, 251658240, !dbg !12202
  call void @llvm.dbg.value(metadata i32 %238, metadata !11996, metadata !DIExpression()), !dbg !12006
  %239 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !12203
  %240 = load i32, i32* %239, align 4, !dbg !12203
  %241 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !12203
  %242 = load i32, i32* %241, align 4, !dbg !12203
  %243 = shl i32 %242, 6, !dbg !12203
  %244 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 4, !dbg !12203
  %245 = load i32, i32* %244, align 4, !dbg !12203
  %246 = shl i32 %245, 28, !dbg !12203
  %247 = or i32 %240, %236, !dbg !12203
  %248 = or i32 %247, %238, !dbg !12203
  %249 = or i32 %248, %243, !dbg !12203
  %250 = or i32 %249, %246, !dbg !12203
  store volatile i32 %250, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12203
  %251 = load i32, i32* %3, align 4, !dbg !12204
  br label %252, !dbg !12206

252:                                              ; preds = %234, %230, %227
  %253 = phi i32 [ %251, %234 ], [ %220, %230 ], [ %220, %227 ], !dbg !12204
  %254 = and i32 %253, 4, !dbg !12207
  %255 = icmp eq i32 %254, 0, !dbg !12208
  br i1 %255, label %260, label %256, !dbg !12209

256:                                              ; preds = %252
  %257 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !12210
  %258 = load i32, i32* %257, align 4, !dbg !12210
  %259 = icmp eq i32 %258, 1048576, !dbg !12211
  br i1 %259, label %267, label %260, !dbg !12212

260:                                              ; preds = %256, %252
  %261 = and i32 %253, 8, !dbg !12213
  %262 = icmp eq i32 %261, 0, !dbg !12214
  br i1 %262, label %291, label %263, !dbg !12215

263:                                              ; preds = %260
  %264 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !12216
  %265 = load i32, i32* %264, align 4, !dbg !12216
  %266 = icmp eq i32 %265, 4194304, !dbg !12217
  br i1 %266, label %267, label %291, !dbg !12218

267:                                              ; preds = %263, %256
  %268 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12219
  %269 = and i32 %268, 196608, !dbg !12221
  call void @llvm.dbg.value(metadata i32 %269, metadata !11995, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !12006
  %270 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12222
  %271 = and i32 %270, 1879048192, !dbg !12223
  call void @llvm.dbg.value(metadata i32 %271, metadata !11997, metadata !DIExpression()), !dbg !12006
  %272 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !12224
  %273 = load i32, i32* %272, align 4, !dbg !12224
  %274 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !12224
  %275 = load i32, i32* %274, align 4, !dbg !12224
  %276 = shl i32 %275, 6, !dbg !12224
  %277 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 3, !dbg !12224
  %278 = load i32, i32* %277, align 4, !dbg !12224
  %279 = shl i32 %278, 24, !dbg !12224
  %280 = or i32 %273, %269, !dbg !12224
  %281 = or i32 %280, %271, !dbg !12224
  %282 = or i32 %281, %276, !dbg !12224
  %283 = or i32 %282, %279, !dbg !12224
  store volatile i32 %283, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12224
  %284 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12225
  %285 = and i32 %284, -32, !dbg !12225
  %286 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 3, !dbg !12225
  %287 = load i32, i32* %286, align 4, !dbg !12225
  %288 = add i32 %287, -1, !dbg !12225
  %289 = or i32 %288, %285, !dbg !12225
  store volatile i32 %289, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12225
  %290 = load i32, i32* %3, align 4, !dbg !12226
  br label %291, !dbg !12228

291:                                              ; preds = %267, %263, %260
  %292 = phi i32 [ %290, %267 ], [ %253, %263 ], [ %253, %260 ], !dbg !12226
  %293 = and i32 %292, 1024, !dbg !12229
  %294 = icmp eq i32 %293, 0, !dbg !12230
  br i1 %294, label %321, label %295, !dbg !12231

295:                                              ; preds = %291
  %296 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 13, !dbg !12232
  %297 = load i32, i32* %296, align 4, !dbg !12232
  %298 = icmp eq i32 %297, 536870912, !dbg !12233
  br i1 %298, label %299, label %321, !dbg !12234

299:                                              ; preds = %295
  %300 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12235
  call void @llvm.dbg.value(metadata i32 %300, metadata !11996, metadata !DIExpression(DW_OP_constu, 15, DW_OP_shr, DW_OP_constu, 6, DW_OP_and, DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !12006
  %301 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12237
  %302 = and i32 %301, 1879048192, !dbg !12238
  call void @llvm.dbg.value(metadata i32 %302, metadata !11997, metadata !DIExpression()), !dbg !12006
  %303 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !12239
  %304 = load i32, i32* %303, align 4, !dbg !12239
  %305 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !12239
  %306 = load i32, i32* %305, align 4, !dbg !12239
  %307 = shl i32 %306, 6, !dbg !12239
  %308 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 2, !dbg !12239
  %309 = load i32, i32* %308, align 4, !dbg !12239
  %310 = shl i32 %309, 15, !dbg !12239
  %311 = add i32 %310, -65536, !dbg !12239
  %312 = and i32 %311, -65536, !dbg !12239
  %313 = shl i32 %300, 9, !dbg !12239
  %314 = and i32 %313, 100663296, !dbg !12239
  %315 = add nuw nsw i32 %314, 33554432, !dbg !12239
  %316 = or i32 %302, %304, !dbg !12239
  %317 = or i32 %316, %315, !dbg !12239
  %318 = or i32 %317, %307, !dbg !12239
  %319 = or i32 %318, %312, !dbg !12239
  store volatile i32 %319, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12239
  %320 = load i32, i32* %3, align 4, !dbg !12240
  br label %321, !dbg !12242

321:                                              ; preds = %299, %295, %291
  %322 = phi i32 [ %320, %299 ], [ %292, %295 ], [ %292, %291 ], !dbg !12240
  %323 = and i32 %322, 2048, !dbg !12243
  %324 = icmp eq i32 %323, 0, !dbg !12244
  br i1 %324, label %346, label %325, !dbg !12245

325:                                              ; preds = %321
  %326 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !12246
  %327 = load i32, i32* %326, align 4, !dbg !12246
  %328 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !12246
  %329 = load i32, i32* %328, align 4, !dbg !12246
  %330 = shl i32 %329, 6, !dbg !12246
  %331 = or i32 %330, %327, !dbg !12246
  %332 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 2, !dbg !12246
  %333 = load i32, i32* %332, align 4, !dbg !12246
  %334 = shl i32 %333, 15, !dbg !12246
  %335 = add i32 %334, -65536, !dbg !12246
  %336 = and i32 %335, -65536, !dbg !12246
  %337 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 3, !dbg !12246
  %338 = load i32, i32* %337, align 4, !dbg !12246
  %339 = shl i32 %338, 24, !dbg !12246
  %340 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 4, !dbg !12246
  %341 = load i32, i32* %340, align 4, !dbg !12246
  %342 = shl i32 %341, 28, !dbg !12246
  %343 = or i32 %331, %339, !dbg !12246
  %344 = or i32 %343, %336, !dbg !12246
  %345 = or i32 %344, %342, !dbg !12246
  store volatile i32 %345, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12246
  br label %346, !dbg !12248

346:                                              ; preds = %325, %321
  store volatile i32 1, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !12249
  %347 = tail call i32 @HAL_GetTick() #25, !dbg !12250
  call void @llvm.dbg.value(metadata i32 %347, metadata !11993, metadata !DIExpression()), !dbg !12006
  br label %348, !dbg !12251

348:                                              ; preds = %352, %346
  %349 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12252
  %350 = and i32 %349, 134217728, !dbg !12253
  %351 = icmp eq i32 %350, 0, !dbg !12253
  br i1 %351, label %352, label %356, !dbg !12251

352:                                              ; preds = %348
  %353 = tail call i32 @HAL_GetTick() #25, !dbg !12254
  %354 = sub i32 %353, %347, !dbg !12257
  %355 = icmp ugt i32 %354, 2, !dbg !12258
  br i1 %355, label %439, label %348, !dbg !12259, !llvm.loop !12260

356:                                              ; preds = %348, %206
  %357 = icmp eq i32 %178, 1, !dbg !12262
  br i1 %357, label %358, label %439, !dbg !12264

358:                                              ; preds = %356
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !12265
  %359 = tail call i32 @HAL_GetTick() #25, !dbg !12267
  call void @llvm.dbg.value(metadata i32 %359, metadata !11993, metadata !DIExpression()), !dbg !12006
  br label %360, !dbg !12268

360:                                              ; preds = %364, %358
  %361 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12269
  %362 = and i32 %361, 536870912, !dbg !12269
  %363 = icmp eq i32 %362, 0, !dbg !12269
  br i1 %363, label %368, label %364, !dbg !12268

364:                                              ; preds = %360
  %365 = tail call i32 @HAL_GetTick() #25, !dbg !12270
  %366 = sub i32 %365, %359, !dbg !12273
  %367 = icmp ugt i32 %366, 2, !dbg !12274
  br i1 %367, label %439, label %360, !dbg !12275, !llvm.loop !12276

368:                                              ; preds = %360
  %369 = load i32, i32* %3, align 4, !dbg !12278
  %370 = and i32 %369, 4, !dbg !12280
  %371 = icmp eq i32 %370, 0, !dbg !12281
  br i1 %371, label %376, label %372, !dbg !12282

372:                                              ; preds = %368
  %373 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !12283
  %374 = load i32, i32* %373, align 4, !dbg !12283
  %375 = icmp eq i32 %374, 0, !dbg !12284
  br i1 %375, label %383, label %376, !dbg !12285

376:                                              ; preds = %372, %368
  %377 = and i32 %369, 8, !dbg !12286
  %378 = icmp eq i32 %377, 0, !dbg !12287
  br i1 %378, label %405, label %379, !dbg !12288

379:                                              ; preds = %376
  %380 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !12289
  %381 = load i32, i32* %380, align 4, !dbg !12289
  %382 = icmp eq i32 %381, 0, !dbg !12290
  br i1 %382, label %383, label %405, !dbg !12291

383:                                              ; preds = %379, %372
  %384 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12292
  %385 = and i32 %384, 196608, !dbg !12294
  call void @llvm.dbg.value(metadata i32 %385, metadata !11998, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !12006
  %386 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 0, !dbg !12295
  %387 = load i32, i32* %386, align 4, !dbg !12295
  %388 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 1, !dbg !12295
  %389 = load i32, i32* %388, align 4, !dbg !12295
  %390 = shl i32 %389, 6, !dbg !12295
  %391 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 3, !dbg !12295
  %392 = load i32, i32* %391, align 4, !dbg !12295
  %393 = shl i32 %392, 24, !dbg !12295
  %394 = or i32 %385, %387, !dbg !12295
  %395 = or i32 %394, %390, !dbg !12295
  %396 = or i32 %395, %393, !dbg !12295
  store volatile i32 %396, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12295
  %397 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12296
  %398 = and i32 %397, -7937, !dbg !12296
  %399 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 4, !dbg !12296
  %400 = load i32, i32* %399, align 4, !dbg !12296
  %401 = shl i32 %400, 8, !dbg !12296
  %402 = add i32 %401, -256, !dbg !12296
  %403 = or i32 %402, %398, !dbg !12296
  store volatile i32 %403, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12296
  %404 = load i32, i32* %3, align 4, !dbg !12297
  br label %405, !dbg !12299

405:                                              ; preds = %383, %379, %376
  %406 = phi i32 [ %404, %383 ], [ %369, %379 ], [ %369, %376 ], !dbg !12297
  %407 = and i32 %406, 256, !dbg !12300
  %408 = icmp eq i32 %407, 0, !dbg !12301
  br i1 %408, label %429, label %409, !dbg !12302

409:                                              ; preds = %405
  %410 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 14, !dbg !12303
  %411 = load i32, i32* %410, align 4, !dbg !12303
  %412 = icmp eq i32 %411, 134217728, !dbg !12304
  br i1 %412, label %413, label %429, !dbg !12305

413:                                              ; preds = %409
  %414 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12306
  %415 = and i32 %414, 251658240, !dbg !12308
  call void @llvm.dbg.value(metadata i32 %415, metadata !11999, metadata !DIExpression()), !dbg !12006
  %416 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 0, !dbg !12309
  %417 = load i32, i32* %416, align 4, !dbg !12309
  %418 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 1, !dbg !12309
  %419 = load i32, i32* %418, align 4, !dbg !12309
  %420 = shl i32 %419, 6, !dbg !12309
  %421 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 2, !dbg !12309
  %422 = load i32, i32* %421, align 4, !dbg !12309
  %423 = shl i32 %422, 15, !dbg !12309
  %424 = add i32 %423, -65536, !dbg !12309
  %425 = and i32 %424, -65536, !dbg !12309
  %426 = or i32 %415, %417, !dbg !12309
  %427 = or i32 %426, %420, !dbg !12309
  %428 = or i32 %427, %425, !dbg !12309
  store volatile i32 %428, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12309
  br label %429, !dbg !12310

429:                                              ; preds = %413, %409, %405
  store volatile i32 1, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !12311
  %430 = tail call i32 @HAL_GetTick() #25, !dbg !12312
  call void @llvm.dbg.value(metadata i32 %430, metadata !11993, metadata !DIExpression()), !dbg !12006
  br label %431, !dbg !12313

431:                                              ; preds = %435, %429
  %432 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12314
  %433 = and i32 %432, 536870912, !dbg !12315
  %434 = icmp eq i32 %433, 0, !dbg !12315
  br i1 %434, label %435, label %439, !dbg !12313

435:                                              ; preds = %431
  %436 = tail call i32 @HAL_GetTick() #25, !dbg !12316
  %437 = sub i32 %436, %430, !dbg !12319
  %438 = icmp ugt i32 %437, 2, !dbg !12320
  br i1 %438, label %439, label %431, !dbg !12321, !llvm.loop !12322

439:                                              ; preds = %87, %112, %215, %352, %364, %431, %435, %356
  %440 = phi i32 [ 0, %356 ], [ 0, %431 ], [ 3, %435 ], [ 3, %364 ], [ 3, %352 ], [ 3, %215 ], [ 3, %112 ], [ 3, %87 ], !dbg !12006
  ret i32 %440, !dbg !12324
}

; Function Attrs: optsize
declare !dbg !12325 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCCEx_GetPeriphCLKConfig(%struct.RCC_PeriphCLKInitTypeDef* noundef writeonly %0) local_unnamed_addr #15 !dbg !12327 {
  call void @llvm.dbg.value(metadata %struct.RCC_PeriphCLKInitTypeDef* %0, metadata !12331, metadata !DIExpression()), !dbg !12333
  %2 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 0, !dbg !12334
  store i32 2047, i32* %2, align 4, !dbg !12335
  %3 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12336
  %4 = and i32 %3, 63, !dbg !12337
  %5 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !12338
  store i32 %4, i32* %5, align 4, !dbg !12339
  %6 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12340
  %7 = lshr i32 %6, 6, !dbg !12341
  %8 = and i32 %7, 511, !dbg !12341
  %9 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !12342
  store i32 %8, i32* %9, align 4, !dbg !12343
  %10 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12344
  %11 = lshr i32 %10, 15, !dbg !12345
  %12 = and i32 %11, 6, !dbg !12345
  %13 = add nuw nsw i32 %12, 2, !dbg !12345
  %14 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 2, !dbg !12346
  store i32 %13, i32* %14, align 4, !dbg !12347
  %15 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12348
  %16 = lshr i32 %15, 24, !dbg !12349
  %17 = and i32 %16, 15, !dbg !12349
  %18 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 3, !dbg !12350
  store i32 %17, i32* %18, align 4, !dbg !12351
  %19 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12352
  %20 = lshr i32 %19, 28, !dbg !12353
  %21 = and i32 %20, 7, !dbg !12353
  %22 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 4, !dbg !12354
  store i32 %21, i32* %22, align 4, !dbg !12355
  %23 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12356
  %24 = and i32 %23, 63, !dbg !12357
  %25 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 0, !dbg !12358
  store i32 %24, i32* %25, align 4, !dbg !12359
  %26 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12360
  %27 = lshr i32 %26, 6, !dbg !12361
  %28 = and i32 %27, 511, !dbg !12361
  %29 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 1, !dbg !12362
  store i32 %28, i32* %29, align 4, !dbg !12363
  %30 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12364
  %31 = lshr i32 %30, 15, !dbg !12365
  %32 = and i32 %31, 6, !dbg !12365
  %33 = add nuw nsw i32 %32, 2, !dbg !12365
  %34 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 2, !dbg !12366
  store i32 %33, i32* %34, align 4, !dbg !12367
  %35 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12368
  %36 = lshr i32 %35, 24, !dbg !12369
  %37 = and i32 %36, 15, !dbg !12369
  %38 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 3, !dbg !12370
  store i32 %37, i32* %38, align 4, !dbg !12371
  %39 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12372
  %40 = and i32 %39, 31, !dbg !12373
  %41 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 3, !dbg !12374
  store i32 %40, i32* %41, align 4, !dbg !12375
  %42 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12376
  %43 = lshr i32 %42, 8, !dbg !12377
  %44 = and i32 %43, 31, !dbg !12377
  %45 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 4, !dbg !12378
  store i32 %44, i32* %45, align 4, !dbg !12379
  %46 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12380
  %47 = and i32 %46, 3145728, !dbg !12380
  %48 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !12381
  store i32 %47, i32* %48, align 4, !dbg !12382
  %49 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12383
  %50 = and i32 %49, 12582912, !dbg !12383
  %51 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !12384
  store i32 %50, i32* %51, align 4, !dbg !12385
  %52 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12386
  %53 = and i32 %52, 100663296, !dbg !12386
  %54 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 7, !dbg !12387
  store i32 %53, i32* %54, align 4, !dbg !12388
  %55 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12389
  %56 = and i32 %55, 402653184, !dbg !12389
  %57 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 8, !dbg !12390
  store i32 %56, i32* %57, align 4, !dbg !12391
  %58 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12392
  %59 = and i32 %58, 2031616, !dbg !12393
  call void @llvm.dbg.value(metadata i32 %59, metadata !12332, metadata !DIExpression()), !dbg !12333
  %60 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12394
  %61 = and i32 %60, 768, !dbg !12395
  %62 = or i32 %61, %59, !dbg !12396
  %63 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 9, !dbg !12397
  store i32 %62, i32* %63, align 4, !dbg !12398
  %64 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12399
  %65 = and i32 %64, 67108864, !dbg !12399
  %66 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 11, !dbg !12400
  store i32 %65, i32* %66, align 4, !dbg !12401
  %67 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12402
  %68 = and i32 %67, 12582912, !dbg !12402
  %69 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 12, !dbg !12403
  store i32 %68, i32* %69, align 4, !dbg !12404
  %70 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12405
  %71 = and i32 %70, 134217728, !dbg !12405
  %72 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 14, !dbg !12406
  store i32 %71, i32* %72, align 4, !dbg !12407
  %73 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12408
  %74 = and i32 %73, 268435456, !dbg !12408
  %75 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 10, !dbg !12409
  store i32 %74, i32* %75, align 4, !dbg !12410
  %76 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12411
  %77 = and i32 %76, 536870912, !dbg !12411
  %78 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 13, !dbg !12412
  store i32 %77, i32* %78, align 4, !dbg !12413
  %79 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12414
  %80 = lshr i32 %79, 24, !dbg !12416
  %81 = trunc i32 %80 to i8, !dbg !12416
  %82 = and i8 %81, 1, !dbg !12416
  %83 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 15, !dbg !12417
  store i8 %82, i8* %83, align 4, !dbg !12419
  ret void, !dbg !12420
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCCEx_GetPeriphCLKFreq(i32 noundef %0) local_unnamed_addr #15 !dbg !12421 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12423, metadata !DIExpression()), !dbg !12430
  call void @llvm.dbg.value(metadata i32 0, metadata !12424, metadata !DIExpression()), !dbg !12430
  call void @llvm.dbg.value(metadata i32 0, metadata !12425, metadata !DIExpression()), !dbg !12430
  call void @llvm.dbg.value(metadata i32 0, metadata !12426, metadata !DIExpression()), !dbg !12430
  call void @llvm.dbg.value(metadata i32 0, metadata !12427, metadata !DIExpression()), !dbg !12430
  call void @llvm.dbg.value(metadata i32 0, metadata !12428, metadata !DIExpression()), !dbg !12430
  call void @llvm.dbg.value(metadata i32 0, metadata !12429, metadata !DIExpression()), !dbg !12430
  switch i32 %0, label %123 [
    i32 4, label %2
    i32 8, label %2
    i32 1, label %57
    i32 2, label %90
  ], !dbg !12431

2:                                                ; preds = %1, %1
  %3 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12432
  call void @llvm.dbg.value(metadata i32 %3, metadata !12427, metadata !DIExpression()), !dbg !12430
  call void @llvm.dbg.value(metadata i32 %3, metadata !12427, metadata !DIExpression(DW_OP_constu, 15728640, DW_OP_and, DW_OP_stack_value)), !dbg !12430
  %4 = lshr i32 %3, 20, !dbg !12435
  %5 = and i32 %4, 15, !dbg !12435
  switch i32 %5, label %123 [
    i32 0, label %6
    i32 1, label %24
    i32 4, label %24
    i32 2, label %41
    i32 8, label %41
    i32 3, label %54
    i32 12, label %55
  ], !dbg !12435

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12436
  call void @llvm.dbg.value(metadata i32 undef, metadata !12426, metadata !DIExpression()), !dbg !12430
  call void @llvm.dbg.value(metadata i32 undef, metadata !12426, metadata !DIExpression()), !dbg !12430
  %8 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12440
  %9 = and i32 %8, 63, !dbg !12440
  %10 = udiv i32 16000000, %9, !dbg !12440
  call void @llvm.dbg.value(metadata i32 %10, metadata !12426, metadata !DIExpression()), !dbg !12430
  %11 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12441
  %12 = lshr i32 %11, 24, !dbg !12442
  %13 = and i32 %12, 15, !dbg !12442
  call void @llvm.dbg.value(metadata i32 %13, metadata !12424, metadata !DIExpression()), !dbg !12430
  %14 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12443
  %15 = lshr i32 %14, 6, !dbg !12444
  %16 = and i32 %15, 511, !dbg !12444
  %17 = mul i32 %16, %10, !dbg !12445
  %18 = udiv i32 %17, %13, !dbg !12446
  call void @llvm.dbg.value(metadata i32 %18, metadata !12425, metadata !DIExpression()), !dbg !12430
  %19 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12447
  %20 = lshr i32 %19, 8, !dbg !12448
  %21 = and i32 %20, 31, !dbg !12448
  %22 = add nuw nsw i32 %21, 1, !dbg !12449
  call void @llvm.dbg.value(metadata i32 %22, metadata !12424, metadata !DIExpression()), !dbg !12430
  %23 = udiv i32 %18, %22, !dbg !12450
  call void @llvm.dbg.value(metadata i32 %23, metadata !12425, metadata !DIExpression()), !dbg !12430
  br label %123, !dbg !12451

24:                                               ; preds = %2, %2
  %25 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12452
  call void @llvm.dbg.value(metadata i32 undef, metadata !12426, metadata !DIExpression()), !dbg !12430
  call void @llvm.dbg.value(metadata i32 undef, metadata !12426, metadata !DIExpression()), !dbg !12430
  %26 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12455
  %27 = and i32 %26, 63, !dbg !12455
  %28 = udiv i32 16000000, %27, !dbg !12455
  call void @llvm.dbg.value(metadata i32 %28, metadata !12426, metadata !DIExpression()), !dbg !12430
  %29 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12456
  %30 = lshr i32 %29, 24, !dbg !12457
  %31 = and i32 %30, 15, !dbg !12457
  call void @llvm.dbg.value(metadata i32 %31, metadata !12424, metadata !DIExpression()), !dbg !12430
  %32 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12458
  %33 = lshr i32 %32, 6, !dbg !12459
  %34 = and i32 %33, 511, !dbg !12459
  %35 = mul i32 %34, %28, !dbg !12460
  %36 = udiv i32 %35, %31, !dbg !12461
  call void @llvm.dbg.value(metadata i32 %36, metadata !12425, metadata !DIExpression()), !dbg !12430
  %37 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12462
  %38 = and i32 %37, 31, !dbg !12463
  %39 = add nuw nsw i32 %38, 1, !dbg !12464
  call void @llvm.dbg.value(metadata i32 %39, metadata !12424, metadata !DIExpression()), !dbg !12430
  %40 = udiv i32 %36, %39, !dbg !12465
  call void @llvm.dbg.value(metadata i32 %40, metadata !12425, metadata !DIExpression()), !dbg !12430
  br label %123, !dbg !12466

41:                                               ; preds = %2, %2
  %42 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12467
  call void @llvm.dbg.value(metadata i32 undef, metadata !12426, metadata !DIExpression()), !dbg !12430
  call void @llvm.dbg.value(metadata i32 undef, metadata !12426, metadata !DIExpression()), !dbg !12430
  %43 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12470
  %44 = and i32 %43, 63, !dbg !12470
  %45 = udiv i32 16000000, %44, !dbg !12470
  call void @llvm.dbg.value(metadata i32 %45, metadata !12426, metadata !DIExpression()), !dbg !12430
  %46 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12471
  %47 = lshr i32 %46, 28, !dbg !12472
  %48 = and i32 %47, 7, !dbg !12472
  call void @llvm.dbg.value(metadata i32 %48, metadata !12424, metadata !DIExpression()), !dbg !12430
  %49 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12473
  %50 = lshr i32 %49, 6, !dbg !12474
  %51 = and i32 %50, 511, !dbg !12474
  %52 = mul i32 %51, %45, !dbg !12475
  %53 = udiv i32 %52, %48, !dbg !12476
  call void @llvm.dbg.value(metadata i32 %53, metadata !12425, metadata !DIExpression()), !dbg !12430
  br label %123, !dbg !12477

54:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 12288000, metadata !12425, metadata !DIExpression()), !dbg !12430
  br label %123, !dbg !12478

55:                                               ; preds = %2
  %56 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12480
  call void @llvm.dbg.value(metadata i32 16000000, metadata !12425, metadata !DIExpression()), !dbg !12430
  call void @llvm.dbg.value(metadata i32 16000000, metadata !12425, metadata !DIExpression()), !dbg !12430
  br label %123

57:                                               ; preds = %1
  %58 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12483
  call void @llvm.dbg.value(metadata i32 %58, metadata !12428, metadata !DIExpression(DW_OP_constu, 100663296, DW_OP_and, DW_OP_stack_value)), !dbg !12430
  %59 = lshr i32 %58, 25, !dbg !12485
  %60 = and i32 %59, 3, !dbg !12485
  switch i32 %60, label %89 [
    i32 1, label %123
    i32 0, label %61
    i32 2, label %74
    i32 3, label %87
  ], !dbg !12485

61:                                               ; preds = %57
  %62 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12486
  call void @llvm.dbg.value(metadata i32 undef, metadata !12426, metadata !DIExpression()), !dbg !12430
  call void @llvm.dbg.value(metadata i32 undef, metadata !12426, metadata !DIExpression()), !dbg !12430
  %63 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12490
  %64 = and i32 %63, 63, !dbg !12490
  %65 = udiv i32 16000000, %64, !dbg !12490
  call void @llvm.dbg.value(metadata i32 %65, metadata !12426, metadata !DIExpression()), !dbg !12430
  %66 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12491
  %67 = lshr i32 %66, 6, !dbg !12492
  %68 = and i32 %67, 511, !dbg !12492
  %69 = mul i32 %68, %65, !dbg !12493
  call void @llvm.dbg.value(metadata i32 %69, metadata !12429, metadata !DIExpression()), !dbg !12430
  %70 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12494
  %71 = lshr i32 %70, 28, !dbg !12495
  %72 = and i32 %71, 7, !dbg !12495
  %73 = udiv i32 %69, %72, !dbg !12496
  call void @llvm.dbg.value(metadata i32 %73, metadata !12425, metadata !DIExpression()), !dbg !12430
  br label %123, !dbg !12497

74:                                               ; preds = %57
  %75 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12498
  call void @llvm.dbg.value(metadata i32 undef, metadata !12426, metadata !DIExpression()), !dbg !12430
  call void @llvm.dbg.value(metadata i32 undef, metadata !12426, metadata !DIExpression()), !dbg !12430
  %76 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12501
  %77 = and i32 %76, 63, !dbg !12501
  %78 = udiv i32 16000000, %77, !dbg !12501
  call void @llvm.dbg.value(metadata i32 %78, metadata !12426, metadata !DIExpression()), !dbg !12430
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12502
  %80 = lshr i32 %79, 6, !dbg !12503
  %81 = and i32 %80, 511, !dbg !12503
  %82 = mul i32 %81, %78, !dbg !12504
  call void @llvm.dbg.value(metadata i32 %82, metadata !12429, metadata !DIExpression()), !dbg !12430
  %83 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12505
  %84 = lshr i32 %83, 28, !dbg !12506
  %85 = and i32 %84, 7, !dbg !12506
  %86 = udiv i32 %82, %85, !dbg !12507
  call void @llvm.dbg.value(metadata i32 %86, metadata !12425, metadata !DIExpression()), !dbg !12430
  br label %123, !dbg !12508

87:                                               ; preds = %57
  %88 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12509
  call void @llvm.dbg.value(metadata i32 16000000, metadata !12425, metadata !DIExpression()), !dbg !12430
  call void @llvm.dbg.value(metadata i32 16000000, metadata !12425, metadata !DIExpression()), !dbg !12430
  br label %123

89:                                               ; preds = %57
  unreachable

90:                                               ; preds = %1
  %91 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12512
  call void @llvm.dbg.value(metadata i32 %91, metadata !12428, metadata !DIExpression(DW_OP_constu, 402653184, DW_OP_and, DW_OP_stack_value)), !dbg !12430
  %92 = lshr i32 %91, 27, !dbg !12514
  %93 = and i32 %92, 3, !dbg !12514
  switch i32 %93, label %122 [
    i32 1, label %123
    i32 0, label %94
    i32 2, label %107
    i32 3, label %120
  ], !dbg !12514

94:                                               ; preds = %90
  %95 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12515
  call void @llvm.dbg.value(metadata i32 undef, metadata !12426, metadata !DIExpression()), !dbg !12430
  call void @llvm.dbg.value(metadata i32 undef, metadata !12426, metadata !DIExpression()), !dbg !12430
  %96 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12519
  %97 = and i32 %96, 63, !dbg !12519
  %98 = udiv i32 16000000, %97, !dbg !12519
  call void @llvm.dbg.value(metadata i32 %98, metadata !12426, metadata !DIExpression()), !dbg !12430
  %99 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12520
  %100 = lshr i32 %99, 6, !dbg !12521
  %101 = and i32 %100, 511, !dbg !12521
  %102 = mul i32 %101, %98, !dbg !12522
  call void @llvm.dbg.value(metadata i32 %102, metadata !12429, metadata !DIExpression()), !dbg !12430
  %103 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12523
  %104 = lshr i32 %103, 28, !dbg !12524
  %105 = and i32 %104, 7, !dbg !12524
  %106 = udiv i32 %102, %105, !dbg !12525
  call void @llvm.dbg.value(metadata i32 %106, metadata !12425, metadata !DIExpression()), !dbg !12430
  br label %123, !dbg !12526

107:                                              ; preds = %90
  %108 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12527
  call void @llvm.dbg.value(metadata i32 undef, metadata !12426, metadata !DIExpression()), !dbg !12430
  call void @llvm.dbg.value(metadata i32 undef, metadata !12426, metadata !DIExpression()), !dbg !12430
  %109 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12530
  %110 = and i32 %109, 63, !dbg !12530
  %111 = udiv i32 16000000, %110, !dbg !12530
  call void @llvm.dbg.value(metadata i32 %111, metadata !12426, metadata !DIExpression()), !dbg !12430
  %112 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12531
  %113 = lshr i32 %112, 6, !dbg !12532
  %114 = and i32 %113, 511, !dbg !12532
  %115 = mul i32 %114, %111, !dbg !12533
  call void @llvm.dbg.value(metadata i32 %115, metadata !12429, metadata !DIExpression()), !dbg !12430
  %116 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12534
  %117 = lshr i32 %116, 28, !dbg !12535
  %118 = and i32 %117, 7, !dbg !12535
  %119 = udiv i32 %115, %118, !dbg !12536
  call void @llvm.dbg.value(metadata i32 %119, metadata !12425, metadata !DIExpression()), !dbg !12430
  br label %123, !dbg !12537

120:                                              ; preds = %90
  %121 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12538
  call void @llvm.dbg.value(metadata i32 16000000, metadata !12425, metadata !DIExpression()), !dbg !12430
  call void @llvm.dbg.value(metadata i32 16000000, metadata !12425, metadata !DIExpression()), !dbg !12430
  br label %123

122:                                              ; preds = %90
  unreachable

123:                                              ; preds = %120, %90, %87, %57, %55, %94, %107, %61, %74, %6, %24, %41, %54, %2, %1
  %124 = phi i32 [ 0, %1 ], [ %119, %107 ], [ %106, %94 ], [ %86, %74 ], [ %73, %61 ], [ 0, %2 ], [ 12288000, %54 ], [ %53, %41 ], [ %40, %24 ], [ %23, %6 ], [ 16000000, %55 ], [ 12288000, %57 ], [ 16000000, %87 ], [ 12288000, %90 ], [ 16000000, %120 ], !dbg !12430
  call void @llvm.dbg.value(metadata i32 %124, metadata !12425, metadata !DIExpression()), !dbg !12430
  ret i32 %124, !dbg !12541
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCCEx_SelectLSEMode(i8 noundef zeroext %0) local_unnamed_addr #14 !dbg !12542 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !12546, metadata !DIExpression()), !dbg !12547
  %2 = icmp eq i8 %0, 1, !dbg !12548
  %3 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12550
  %4 = and i32 %3, -9, !dbg !12551
  %5 = select i1 %2, i32 8, i32 0, !dbg !12551
  %6 = or i32 %4, %5, !dbg !12551
  store volatile i32 %6, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12550
  ret void, !dbg !12552
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_EnablePLLI2S(%struct.ztest_unit_test_stats* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !12553 {
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test_stats* %0, metadata !12558, metadata !DIExpression()), !dbg !12560
  store volatile i32 0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !12561
  %2 = tail call i32 @HAL_GetTick() #25, !dbg !12562
  call void @llvm.dbg.value(metadata i32 %2, metadata !12559, metadata !DIExpression()), !dbg !12560
  br label %3, !dbg !12563

3:                                                ; preds = %7, %1
  %4 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12564
  %5 = and i32 %4, 134217728, !dbg !12564
  %6 = icmp eq i32 %5, 0, !dbg !12564
  br i1 %6, label %11, label %7, !dbg !12563

7:                                                ; preds = %3
  %8 = tail call i32 @HAL_GetTick() #25, !dbg !12565
  %9 = sub i32 %8, %2, !dbg !12568
  %10 = icmp ugt i32 %9, 2, !dbg !12569
  br i1 %10, label %41, label %3, !dbg !12570, !llvm.loop !12571

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 0, !dbg !12573
  %13 = load i32, i32* %12, align 4, !dbg !12573
  %14 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 1, !dbg !12573
  %15 = load i32, i32* %14, align 4, !dbg !12573
  %16 = shl i32 %15, 6, !dbg !12573
  %17 = or i32 %16, %13, !dbg !12573
  %18 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 2, !dbg !12573
  %19 = load i32, i32* %18, align 4, !dbg !12573
  %20 = shl i32 %19, 15, !dbg !12573
  %21 = add i32 %20, -65536, !dbg !12573
  %22 = and i32 %21, -65536, !dbg !12573
  %23 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 3, !dbg !12573
  %24 = load i32, i32* %23, align 4, !dbg !12573
  %25 = shl i32 %24, 24, !dbg !12573
  %26 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 4, !dbg !12573
  %27 = load i32, i32* %26, align 4, !dbg !12573
  %28 = shl i32 %27, 28, !dbg !12573
  %29 = or i32 %17, %25, !dbg !12573
  %30 = or i32 %29, %22, !dbg !12573
  %31 = or i32 %30, %28, !dbg !12573
  store volatile i32 %31, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12573
  store volatile i32 1, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !12574
  %32 = tail call i32 @HAL_GetTick() #25, !dbg !12575
  call void @llvm.dbg.value(metadata i32 %32, metadata !12559, metadata !DIExpression()), !dbg !12560
  br label %33, !dbg !12576

33:                                               ; preds = %37, %11
  %34 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12577
  %35 = and i32 %34, 134217728, !dbg !12578
  %36 = icmp eq i32 %35, 0, !dbg !12578
  br i1 %36, label %37, label %41, !dbg !12576

37:                                               ; preds = %33
  %38 = tail call i32 @HAL_GetTick() #25, !dbg !12579
  %39 = sub i32 %38, %32, !dbg !12582
  %40 = icmp ugt i32 %39, 2, !dbg !12583
  br i1 %40, label %41, label %33, !dbg !12584, !llvm.loop !12585

41:                                               ; preds = %7, %33, %37
  %42 = phi i32 [ 0, %33 ], [ 3, %37 ], [ 3, %7 ], !dbg !12560
  ret i32 %42, !dbg !12587
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_DisablePLLI2S() local_unnamed_addr #1 !dbg !12588 {
  store volatile i32 0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !12593
  %1 = tail call i32 @HAL_GetTick() #25, !dbg !12594
  call void @llvm.dbg.value(metadata i32 %1, metadata !12592, metadata !DIExpression()), !dbg !12595
  br label %2, !dbg !12596

2:                                                ; preds = %6, %0
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12597
  %4 = and i32 %3, 134217728, !dbg !12597
  %5 = icmp eq i32 %4, 0, !dbg !12598
  br i1 %5, label %10, label %6, !dbg !12596

6:                                                ; preds = %2
  %7 = tail call i32 @HAL_GetTick() #25, !dbg !12599
  %8 = sub i32 %7, %1, !dbg !12602
  %9 = icmp ugt i32 %8, 2, !dbg !12603
  br i1 %9, label %10, label %2, !dbg !12604, !llvm.loop !12605

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 3, %6 ], [ 0, %2 ], !dbg !12595
  ret i32 %11, !dbg !12607
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_EnablePLLSAI(%struct.RCC_PLLSAIInitTypeDef* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !12608 {
  call void @llvm.dbg.value(metadata %struct.RCC_PLLSAIInitTypeDef* %0, metadata !12613, metadata !DIExpression()), !dbg !12615
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !12616
  %2 = tail call i32 @HAL_GetTick() #25, !dbg !12617
  call void @llvm.dbg.value(metadata i32 %2, metadata !12614, metadata !DIExpression()), !dbg !12615
  br label %3, !dbg !12618

3:                                                ; preds = %7, %1
  %4 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12619
  %5 = and i32 %4, 536870912, !dbg !12619
  %6 = icmp eq i32 %5, 0, !dbg !12619
  br i1 %6, label %11, label %7, !dbg !12618

7:                                                ; preds = %3
  %8 = tail call i32 @HAL_GetTick() #25, !dbg !12620
  %9 = sub i32 %8, %2, !dbg !12623
  %10 = icmp ugt i32 %9, 2, !dbg !12624
  br i1 %10, label %37, label %3, !dbg !12625, !llvm.loop !12626

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 0, !dbg !12628
  %13 = load i32, i32* %12, align 4, !dbg !12628
  %14 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 1, !dbg !12628
  %15 = load i32, i32* %14, align 4, !dbg !12628
  %16 = shl i32 %15, 6, !dbg !12628
  %17 = or i32 %16, %13, !dbg !12628
  %18 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 2, !dbg !12628
  %19 = load i32, i32* %18, align 4, !dbg !12628
  %20 = shl i32 %19, 15, !dbg !12628
  %21 = add i32 %20, -65536, !dbg !12628
  %22 = and i32 %21, -65536, !dbg !12628
  %23 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 3, !dbg !12628
  %24 = load i32, i32* %23, align 4, !dbg !12628
  %25 = shl i32 %24, 24, !dbg !12628
  %26 = or i32 %17, %25, !dbg !12628
  %27 = or i32 %26, %22, !dbg !12628
  store volatile i32 %27, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12628
  store volatile i32 1, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !12629
  %28 = tail call i32 @HAL_GetTick() #25, !dbg !12630
  call void @llvm.dbg.value(metadata i32 %28, metadata !12614, metadata !DIExpression()), !dbg !12615
  br label %29, !dbg !12631

29:                                               ; preds = %33, %11
  %30 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12632
  %31 = and i32 %30, 536870912, !dbg !12633
  %32 = icmp eq i32 %31, 0, !dbg !12633
  br i1 %32, label %33, label %37, !dbg !12631

33:                                               ; preds = %29
  %34 = tail call i32 @HAL_GetTick() #25, !dbg !12634
  %35 = sub i32 %34, %28, !dbg !12637
  %36 = icmp ugt i32 %35, 2, !dbg !12638
  br i1 %36, label %37, label %29, !dbg !12639, !llvm.loop !12640

37:                                               ; preds = %7, %29, %33
  %38 = phi i32 [ 0, %29 ], [ 3, %33 ], [ 3, %7 ], !dbg !12615
  ret i32 %38, !dbg !12642
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_DisablePLLSAI() local_unnamed_addr #1 !dbg !12643 {
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !12646
  %1 = tail call i32 @HAL_GetTick() #25, !dbg !12647
  call void @llvm.dbg.value(metadata i32 %1, metadata !12645, metadata !DIExpression()), !dbg !12648
  br label %2, !dbg !12649

2:                                                ; preds = %6, %0
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12650
  %4 = and i32 %3, 536870912, !dbg !12650
  %5 = icmp eq i32 %4, 0, !dbg !12650
  br i1 %5, label %10, label %6, !dbg !12649

6:                                                ; preds = %2
  %7 = tail call i32 @HAL_GetTick() #25, !dbg !12651
  %8 = sub i32 %7, %1, !dbg !12654
  %9 = icmp ugt i32 %8, 2, !dbg !12655
  br i1 %9, label %10, label %2, !dbg !12656, !llvm.loop !12657

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 3, %6 ], [ 0, %2 ], !dbg !12648
  ret i32 %11, !dbg !12659
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #15 !dbg !12660 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12662, metadata !DIExpression()), !dbg !12667
  call void @llvm.dbg.value(metadata i32 0, metadata !12663, metadata !DIExpression()), !dbg !12667
  call void @llvm.dbg.value(metadata i32 0, metadata !12664, metadata !DIExpression()), !dbg !12667
  call void @llvm.dbg.value(metadata i32 0, metadata !12665, metadata !DIExpression()), !dbg !12667
  call void @llvm.dbg.value(metadata i32 0, metadata !12666, metadata !DIExpression()), !dbg !12667
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12668
  %2 = lshr i32 %1, 2, !dbg !12669
  %3 = and i32 %2, 3, !dbg !12669
  switch i32 %3, label %37 [
    i32 0, label %38
    i32 1, label %38
    i32 2, label %4
    i32 3, label %21
  ], !dbg !12669

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12670
  %6 = and i32 %5, 63, !dbg !12673
  call void @llvm.dbg.value(metadata i32 %6, metadata !12662, metadata !DIExpression()), !dbg !12667
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12674
  %8 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12676
  %9 = lshr i32 %8, 6, !dbg !12676
  %10 = and i32 %9, 511, !dbg !12676
  %11 = zext i32 %10 to i64, !dbg !12676
  %12 = mul nuw nsw i64 %11, 16000000, !dbg !12676
  %13 = zext i32 %6 to i64, !dbg !12676
  %14 = udiv i64 %12, %13, !dbg !12676
  %15 = trunc i64 %14 to i32, !dbg !12676
  call void @llvm.dbg.value(metadata i32 %15, metadata !12663, metadata !DIExpression()), !dbg !12667
  call void @llvm.dbg.value(metadata i32 %15, metadata !12663, metadata !DIExpression()), !dbg !12667
  call void @llvm.dbg.value(metadata i32 %15, metadata !12663, metadata !DIExpression()), !dbg !12667
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12677
  %17 = lshr i32 %16, 15, !dbg !12678
  %18 = and i32 %17, 6, !dbg !12678
  %19 = add nuw nsw i32 %18, 2, !dbg !12678
  call void @llvm.dbg.value(metadata i32 %19, metadata !12664, metadata !DIExpression()), !dbg !12667
  %20 = udiv i32 %15, %19, !dbg !12679
  call void @llvm.dbg.value(metadata i32 %20, metadata !12666, metadata !DIExpression()), !dbg !12667
  br label %38, !dbg !12680

21:                                               ; preds = %0
  %22 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12681
  %23 = and i32 %22, 63, !dbg !12683
  call void @llvm.dbg.value(metadata i32 %23, metadata !12662, metadata !DIExpression()), !dbg !12667
  %24 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12684
  %25 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12686
  %26 = lshr i32 %25, 6, !dbg !12686
  %27 = and i32 %26, 511, !dbg !12686
  %28 = zext i32 %27 to i64, !dbg !12686
  %29 = mul nuw nsw i64 %28, 16000000, !dbg !12686
  %30 = zext i32 %23 to i64, !dbg !12686
  %31 = udiv i64 %29, %30, !dbg !12686
  %32 = trunc i64 %31 to i32, !dbg !12686
  call void @llvm.dbg.value(metadata i32 %32, metadata !12663, metadata !DIExpression()), !dbg !12667
  call void @llvm.dbg.value(metadata i32 %32, metadata !12663, metadata !DIExpression()), !dbg !12667
  call void @llvm.dbg.value(metadata i32 %32, metadata !12663, metadata !DIExpression()), !dbg !12667
  %33 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12687
  %34 = lshr i32 %33, 28, !dbg !12688
  %35 = and i32 %34, 7, !dbg !12688
  call void @llvm.dbg.value(metadata i32 %35, metadata !12665, metadata !DIExpression()), !dbg !12667
  %36 = udiv i32 %32, %35, !dbg !12689
  call void @llvm.dbg.value(metadata i32 %36, metadata !12666, metadata !DIExpression()), !dbg !12667
  br label %38, !dbg !12690

37:                                               ; preds = %0
  unreachable

38:                                               ; preds = %0, %0, %21, %4
  %39 = phi i32 [ %36, %21 ], [ %20, %4 ], [ 16000000, %0 ], [ 16000000, %0 ], !dbg !12691
  call void @llvm.dbg.value(metadata i32 %39, metadata !12666, metadata !DIExpression()), !dbg !12667
  ret i32 %39, !dbg !12692
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !12693 {
  %1 = tail call i32 @HAL_GetTick() #25, !dbg !12696
  call void @llvm.dbg.value(metadata i32 %1, metadata !12695, metadata !DIExpression()), !dbg !12697
  %2 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12698
  %3 = or i32 %2, 1, !dbg !12698
  store volatile i32 %3, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12698
  br label %4, !dbg !12699

4:                                                ; preds = %8, %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12700
  %6 = and i32 %5, 2, !dbg !12700
  %7 = icmp eq i32 %6, 0, !dbg !12701
  br i1 %7, label %8, label %12, !dbg !12699

8:                                                ; preds = %4
  %9 = tail call i32 @HAL_GetTick() #25, !dbg !12702
  %10 = sub i32 %9, %1, !dbg !12705
  %11 = icmp ugt i32 %10, 2, !dbg !12706
  br i1 %11, label %89, label %4, !dbg !12707, !llvm.loop !12708

12:                                               ; preds = %4
  %13 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12710
  %14 = or i32 %13, 128, !dbg !12710
  store volatile i32 %14, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12710
  %15 = tail call i32 @HAL_GetTick() #25, !dbg !12711
  call void @llvm.dbg.value(metadata i32 %15, metadata !12695, metadata !DIExpression()), !dbg !12697
  store volatile i32 0, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12712
  br label %16, !dbg !12713

16:                                               ; preds = %21, %12
  %17 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12714
  %18 = and i32 %17, 12, !dbg !12714
  %19 = icmp eq i32 %18, 0, !dbg !12715
  %20 = tail call i32 @HAL_GetTick() #25, !dbg !12697
  br i1 %19, label %24, label %21, !dbg !12713

21:                                               ; preds = %16
  %22 = sub i32 %20, %15, !dbg !12716
  %23 = icmp ugt i32 %22, 5000, !dbg !12719
  br i1 %23, label %89, label %16, !dbg !12720, !llvm.loop !12721

24:                                               ; preds = %16
  call void @llvm.dbg.value(metadata i32 %20, metadata !12695, metadata !DIExpression()), !dbg !12697
  %25 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12723
  %26 = and i32 %25, -851969, !dbg !12723
  store volatile i32 %26, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12723
  br label %27, !dbg !12724

27:                                               ; preds = %32, %24
  %28 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12725
  %29 = and i32 %28, 131072, !dbg !12725
  %30 = icmp eq i32 %29, 0, !dbg !12726
  %31 = tail call i32 @HAL_GetTick() #25, !dbg !12697
  br i1 %30, label %35, label %32, !dbg !12724

32:                                               ; preds = %27
  %33 = sub i32 %31, %20, !dbg !12727
  %34 = icmp ugt i32 %33, 100, !dbg !12730
  br i1 %34, label %89, label %27, !dbg !12731, !llvm.loop !12732

35:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %31, metadata !12695, metadata !DIExpression()), !dbg !12697
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12734
  %37 = and i32 %36, -16777217, !dbg !12734
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12734
  br label %38, !dbg !12735

38:                                               ; preds = %43, %35
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12736
  %40 = and i32 %39, 33554432, !dbg !12736
  %41 = icmp eq i32 %40, 0, !dbg !12737
  %42 = tail call i32 @HAL_GetTick() #25, !dbg !12697
  br i1 %41, label %46, label %43, !dbg !12735

43:                                               ; preds = %38
  %44 = sub i32 %42, %31, !dbg !12738
  %45 = icmp ugt i32 %44, 2, !dbg !12741
  br i1 %45, label %89, label %38, !dbg !12742, !llvm.loop !12743

46:                                               ; preds = %38
  call void @llvm.dbg.value(metadata i32 %42, metadata !12695, metadata !DIExpression()), !dbg !12697
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12745
  %48 = and i32 %47, -67108865, !dbg !12745
  store volatile i32 %48, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12745
  br label %49, !dbg !12746

49:                                               ; preds = %54, %46
  %50 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12747
  %51 = and i32 %50, 134217728, !dbg !12747
  %52 = icmp eq i32 %51, 0, !dbg !12748
  %53 = tail call i32 @HAL_GetTick() #25, !dbg !12697
  br i1 %52, label %57, label %54, !dbg !12746

54:                                               ; preds = %49
  %55 = sub i32 %53, %42, !dbg !12749
  %56 = icmp ugt i32 %55, 2, !dbg !12752
  br i1 %56, label %89, label %49, !dbg !12753, !llvm.loop !12754

57:                                               ; preds = %49
  call void @llvm.dbg.value(metadata i32 %53, metadata !12695, metadata !DIExpression()), !dbg !12697
  %58 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12756
  %59 = and i32 %58, -268435457, !dbg !12756
  store volatile i32 %59, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12756
  br label %60, !dbg !12757

60:                                               ; preds = %64, %57
  %61 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12758
  %62 = and i32 %61, 536870912, !dbg !12758
  %63 = icmp eq i32 %62, 0, !dbg !12759
  br i1 %63, label %68, label %64, !dbg !12757

64:                                               ; preds = %60
  %65 = tail call i32 @HAL_GetTick() #25, !dbg !12760
  %66 = sub i32 %65, %53, !dbg !12763
  %67 = icmp ugt i32 %66, 2, !dbg !12764
  br i1 %67, label %89, label %60, !dbg !12765, !llvm.loop !12766

68:                                               ; preds = %60
  store volatile i32 603992080, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12768
  store volatile i32 603992080, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12769
  store volatile i32 67121168, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12770
  %69 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12771
  %70 = and i32 %69, -7937, !dbg !12771
  store volatile i32 %70, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12771
  %71 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12772
  %72 = and i32 %71, -8193, !dbg !12772
  store volatile i32 %72, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12772
  %73 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12773
  %74 = and i32 %73, -16385, !dbg !12773
  store volatile i32 %74, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12773
  %75 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12774
  %76 = or i32 %75, 10420224, !dbg !12774
  store volatile i32 %76, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12774
  %77 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12775
  %78 = or i32 %77, 2097152, !dbg !12775
  store volatile i32 %78, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12775
  %79 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12776
  %80 = or i32 %79, 4194304, !dbg !12776
  store volatile i32 %80, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12776
  %81 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12777
  %82 = and i32 %81, -2, !dbg !12777
  store volatile i32 %82, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12777
  %83 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12778
  %84 = or i32 %83, 16777216, !dbg !12778
  store volatile i32 %84, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12778
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !12779
  %85 = load i32, i32* @uwTickPrio, align 4, !dbg !12780
  %86 = tail call i32 @HAL_InitTick(i32 noundef %85) #25, !dbg !12782
  %87 = icmp ne i32 %86, 0, !dbg !12783
  %88 = zext i1 %87 to i32, !dbg !12784
  br label %89, !dbg !12784

89:                                               ; preds = %8, %21, %32, %43, %54, %64, %68
  %90 = phi i32 [ %88, %68 ], [ 3, %64 ], [ 3, %54 ], [ 3, %43 ], [ 3, %32 ], [ 3, %21 ], [ 3, %8 ], !dbg !12697
  ret i32 %90, !dbg !12785
}

; Function Attrs: optsize
declare !dbg !12786 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef readonly %0) local_unnamed_addr #1 !dbg !12789 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !12815, metadata !DIExpression()), !dbg !12826
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !12827
  br i1 %3, label %337, label %4, !dbg !12829

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !12830
  %6 = load i32, i32* %5, align 4, !dbg !12830
  %7 = and i32 %6, 1, !dbg !12832
  %8 = icmp eq i32 %7, 0, !dbg !12833
  br i1 %8, label %74, label %9, !dbg !12834

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12835
  %11 = and i32 %10, 12, !dbg !12835
  %12 = icmp eq i32 %11, 4, !dbg !12838
  br i1 %12, label %29, label %13, !dbg !12839

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12840
  %15 = and i32 %14, 12, !dbg !12840
  %16 = icmp eq i32 %15, 8, !dbg !12841
  br i1 %16, label %17, label %21, !dbg !12842

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12843
  %19 = and i32 %18, 4194304, !dbg !12844
  %20 = icmp eq i32 %19, 0, !dbg !12845
  br i1 %20, label %21, label %29, !dbg !12846

21:                                               ; preds = %17, %13
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12847
  %23 = and i32 %22, 12, !dbg !12847
  %24 = icmp eq i32 %23, 12, !dbg !12848
  br i1 %24, label %25, label %37, !dbg !12849

25:                                               ; preds = %21
  %26 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12850
  %27 = and i32 %26, 4194304, !dbg !12851
  %28 = icmp eq i32 %27, 0, !dbg !12852
  br i1 %28, label %37, label %29, !dbg !12853

29:                                               ; preds = %25, %17, %9
  %30 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12854
  %31 = and i32 %30, 131072, !dbg !12854
  %32 = icmp eq i32 %31, 0, !dbg !12854
  br i1 %32, label %74, label %33, !dbg !12857

33:                                               ; preds = %29
  %34 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12858
  %35 = load i32, i32* %34, align 4, !dbg !12858
  %36 = icmp eq i32 %35, 0, !dbg !12859
  br i1 %36, label %337, label %74, !dbg !12860

37:                                               ; preds = %21, %25
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12861
  %39 = load i32, i32* %38, align 4, !dbg !12861
  switch i32 %39, label %48 [
    i32 65536, label %40
    i32 327680, label %43
  ], !dbg !12865

40:                                               ; preds = %37
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12866
  %42 = or i32 %41, 65536, !dbg !12866
  br label %53, !dbg !12866

43:                                               ; preds = %37
  %44 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12868
  %45 = or i32 %44, 262144, !dbg !12868
  store volatile i32 %45, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12868
  %46 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12868
  %47 = or i32 %46, 65536, !dbg !12868
  br label %53, !dbg !12868

48:                                               ; preds = %37
  %49 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12871
  %50 = and i32 %49, -65537, !dbg !12871
  store volatile i32 %50, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12871
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12871
  %52 = and i32 %51, -262145, !dbg !12871
  br label %53

53:                                               ; preds = %43, %48, %40
  %54 = phi i32 [ %47, %43 ], [ %52, %48 ], [ %42, %40 ]
  store volatile i32 %54, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12873
  %55 = load i32, i32* %38, align 4, !dbg !12874
  %56 = icmp eq i32 %55, 0, !dbg !12876
  %57 = tail call i32 @HAL_GetTick() #25, !dbg !12877
  call void @llvm.dbg.value(metadata i32 %57, metadata !12816, metadata !DIExpression()), !dbg !12826
  call void @llvm.dbg.value(metadata i32 %57, metadata !12816, metadata !DIExpression()), !dbg !12826
  br i1 %56, label %66, label %58, !dbg !12878

58:                                               ; preds = %53, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12879
  %60 = and i32 %59, 131072, !dbg !12881
  %61 = icmp eq i32 %60, 0, !dbg !12881
  br i1 %61, label %62, label %74, !dbg !12882

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #25, !dbg !12883
  %64 = sub i32 %63, %57, !dbg !12886
  %65 = icmp ugt i32 %64, 100, !dbg !12887
  br i1 %65, label %337, label %58, !dbg !12888, !llvm.loop !12889

66:                                               ; preds = %53, %70
  %67 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12891
  %68 = and i32 %67, 131072, !dbg !12891
  %69 = icmp eq i32 %68, 0, !dbg !12891
  br i1 %69, label %74, label %70, !dbg !12893

70:                                               ; preds = %66
  %71 = tail call i32 @HAL_GetTick() #25, !dbg !12894
  %72 = sub i32 %71, %57, !dbg !12897
  %73 = icmp ugt i32 %72, 100, !dbg !12898
  br i1 %73, label %337, label %66, !dbg !12899, !llvm.loop !12900

74:                                               ; preds = %58, %66, %33, %29, %4
  %75 = load i32, i32* %5, align 4, !dbg !12902
  %76 = and i32 %75, 2, !dbg !12904
  %77 = icmp eq i32 %76, 0, !dbg !12905
  br i1 %77, label %137, label %78, !dbg !12906

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12907
  %80 = and i32 %79, 12, !dbg !12907
  %81 = icmp eq i32 %80, 0, !dbg !12910
  br i1 %81, label %98, label %82, !dbg !12911

82:                                               ; preds = %78
  %83 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12912
  %84 = and i32 %83, 12, !dbg !12912
  %85 = icmp eq i32 %84, 8, !dbg !12913
  br i1 %85, label %86, label %90, !dbg !12914

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12915
  %88 = and i32 %87, 4194304, !dbg !12916
  %89 = icmp eq i32 %88, 0, !dbg !12917
  br i1 %89, label %98, label %90, !dbg !12918

90:                                               ; preds = %86, %82
  %91 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12919
  %92 = and i32 %91, 12, !dbg !12919
  %93 = icmp eq i32 %92, 12, !dbg !12920
  br i1 %93, label %94, label %106, !dbg !12921

94:                                               ; preds = %90
  %95 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12922
  %96 = and i32 %95, 4194304, !dbg !12923
  %97 = icmp eq i32 %96, 0, !dbg !12924
  br i1 %97, label %98, label %106, !dbg !12925

98:                                               ; preds = %94, %86, %78
  %99 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12926
  %100 = and i32 %99, 2, !dbg !12926
  %101 = icmp eq i32 %100, 0, !dbg !12926
  br i1 %101, label %130, label %102, !dbg !12929

102:                                              ; preds = %98
  %103 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12930
  %104 = load i32, i32* %103, align 4, !dbg !12930
  %105 = icmp eq i32 %104, 1, !dbg !12931
  br i1 %105, label %130, label %337, !dbg !12932

106:                                              ; preds = %94, %90
  %107 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12933
  %108 = load i32, i32* %107, align 4, !dbg !12933
  %109 = icmp eq i32 %108, 0, !dbg !12936
  br i1 %109, label %120, label %110, !dbg !12937

110:                                              ; preds = %106
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12938
  %111 = tail call i32 @HAL_GetTick() #25, !dbg !12940
  call void @llvm.dbg.value(metadata i32 %111, metadata !12816, metadata !DIExpression()), !dbg !12826
  br label %112, !dbg !12941

112:                                              ; preds = %116, %110
  %113 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12942
  %114 = and i32 %113, 2, !dbg !12943
  %115 = icmp eq i32 %114, 0, !dbg !12943
  br i1 %115, label %116, label %130, !dbg !12941

116:                                              ; preds = %112
  %117 = tail call i32 @HAL_GetTick() #25, !dbg !12944
  %118 = sub i32 %117, %111, !dbg !12947
  %119 = icmp ugt i32 %118, 2, !dbg !12948
  br i1 %119, label %337, label %112, !dbg !12949, !llvm.loop !12950

120:                                              ; preds = %106
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12952
  %121 = tail call i32 @HAL_GetTick() #25, !dbg !12954
  call void @llvm.dbg.value(metadata i32 %121, metadata !12816, metadata !DIExpression()), !dbg !12826
  br label %122, !dbg !12955

122:                                              ; preds = %126, %120
  %123 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12956
  %124 = and i32 %123, 2, !dbg !12956
  %125 = icmp eq i32 %124, 0, !dbg !12956
  br i1 %125, label %137, label %126, !dbg !12955

126:                                              ; preds = %122
  %127 = tail call i32 @HAL_GetTick() #25, !dbg !12957
  %128 = sub i32 %127, %121, !dbg !12960
  %129 = icmp ugt i32 %128, 2, !dbg !12961
  br i1 %129, label %337, label %122, !dbg !12962, !llvm.loop !12963

130:                                              ; preds = %112, %98, %102
  %131 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12965
  %132 = and i32 %131, -249, !dbg !12965
  %133 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !12965
  %134 = load i32, i32* %133, align 4, !dbg !12965
  %135 = shl i32 %134, 3, !dbg !12965
  %136 = or i32 %135, %132, !dbg !12965
  store volatile i32 %136, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12965
  br label %137, !dbg !12966

137:                                              ; preds = %122, %130, %74
  %138 = load i32, i32* %5, align 4, !dbg !12966
  %139 = and i32 %138, 8, !dbg !12968
  %140 = icmp eq i32 %139, 0, !dbg !12969
  br i1 %140, label %165, label %141, !dbg !12970

141:                                              ; preds = %137
  %142 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !12971
  %143 = load i32, i32* %142, align 4, !dbg !12971
  %144 = icmp eq i32 %143, 0, !dbg !12974
  br i1 %144, label %155, label %145, !dbg !12975

145:                                              ; preds = %141
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !12976
  %146 = tail call i32 @HAL_GetTick() #25, !dbg !12978
  call void @llvm.dbg.value(metadata i32 %146, metadata !12816, metadata !DIExpression()), !dbg !12826
  br label %147, !dbg !12979

147:                                              ; preds = %151, %145
  %148 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12980
  %149 = and i32 %148, 2, !dbg !12981
  %150 = icmp eq i32 %149, 0, !dbg !12981
  br i1 %150, label %151, label %165, !dbg !12979

151:                                              ; preds = %147
  %152 = tail call i32 @HAL_GetTick() #25, !dbg !12982
  %153 = sub i32 %152, %146, !dbg !12985
  %154 = icmp ugt i32 %153, 2, !dbg !12986
  br i1 %154, label %337, label %147, !dbg !12987, !llvm.loop !12988

155:                                              ; preds = %141
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !12990
  %156 = tail call i32 @HAL_GetTick() #25, !dbg !12992
  call void @llvm.dbg.value(metadata i32 %156, metadata !12816, metadata !DIExpression()), !dbg !12826
  br label %157, !dbg !12993

157:                                              ; preds = %161, %155
  %158 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12994
  %159 = and i32 %158, 2, !dbg !12994
  %160 = icmp eq i32 %159, 0, !dbg !12994
  br i1 %160, label %165, label %161, !dbg !12993

161:                                              ; preds = %157
  %162 = tail call i32 @HAL_GetTick() #25, !dbg !12995
  %163 = sub i32 %162, %156, !dbg !12998
  %164 = icmp ugt i32 %163, 2, !dbg !12999
  br i1 %164, label %337, label %157, !dbg !13000, !llvm.loop !13001

165:                                              ; preds = %147, %157, %137
  %166 = load i32, i32* %5, align 4, !dbg !13003
  %167 = and i32 %166, 4, !dbg !13004
  %168 = icmp eq i32 %167, 0, !dbg !13005
  br i1 %168, label %237, label %169, !dbg !13006

169:                                              ; preds = %165
  call void @llvm.dbg.value(metadata i32 0, metadata !12818, metadata !DIExpression()), !dbg !13007
  %170 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13008
  %171 = and i32 %170, 268435456, !dbg !13008
  %172 = icmp eq i32 %171, 0, !dbg !13008
  br i1 %172, label %173, label %180, !dbg !13009

173:                                              ; preds = %169
  %174 = bitcast i32* %2 to i8*, !dbg !13010
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %174), !dbg !13010
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12822, metadata !DIExpression()), !dbg !13010
  store volatile i32 0, i32* %2, align 4, !dbg !13010
  %175 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13010
  %176 = or i32 %175, 268435456, !dbg !13010
  store volatile i32 %176, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13010
  %177 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13010
  %178 = and i32 %177, 268435456, !dbg !13010
  store volatile i32 %178, i32* %2, align 4, !dbg !13010
  %179 = load volatile i32, i32* %2, align 4, !dbg !13010
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %174), !dbg !13011
  call void @llvm.dbg.value(metadata i32 1, metadata !12818, metadata !DIExpression()), !dbg !13007
  br label %180, !dbg !13012

180:                                              ; preds = %173, %169
  call void @llvm.dbg.value(metadata i32 undef, metadata !12818, metadata !DIExpression()), !dbg !13007
  %181 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13013
  %182 = and i32 %181, 256, !dbg !13013
  %183 = icmp eq i32 %182, 0, !dbg !13013
  br i1 %183, label %184, label %196, !dbg !13015

184:                                              ; preds = %180
  %185 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13016
  %186 = or i32 %185, 256, !dbg !13016
  store volatile i32 %186, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13016
  %187 = tail call i32 @HAL_GetTick() #25, !dbg !13018
  call void @llvm.dbg.value(metadata i32 %187, metadata !12816, metadata !DIExpression()), !dbg !12826
  br label %188, !dbg !13019

188:                                              ; preds = %192, %184
  %189 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13020
  %190 = and i32 %189, 256, !dbg !13020
  %191 = icmp eq i32 %190, 0, !dbg !13020
  br i1 %191, label %192, label %196, !dbg !13019

192:                                              ; preds = %188
  %193 = tail call i32 @HAL_GetTick() #25, !dbg !13021
  %194 = sub i32 %193, %187, !dbg !13024
  %195 = icmp ugt i32 %194, 2, !dbg !13025
  br i1 %195, label %337, label %188, !dbg !13026, !llvm.loop !13027

196:                                              ; preds = %188, %180
  %197 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !13029
  %198 = load i32, i32* %197, align 4, !dbg !13029
  switch i32 %198, label %207 [
    i32 1, label %199
    i32 5, label %202
  ], !dbg !13032

199:                                              ; preds = %196
  %200 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13033
  %201 = or i32 %200, 1, !dbg !13033
  br label %212, !dbg !13033

202:                                              ; preds = %196
  %203 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13035
  %204 = or i32 %203, 4, !dbg !13035
  store volatile i32 %204, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13035
  %205 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13035
  %206 = or i32 %205, 1, !dbg !13035
  br label %212, !dbg !13035

207:                                              ; preds = %196
  %208 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13038
  %209 = and i32 %208, -2, !dbg !13038
  store volatile i32 %209, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13038
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13038
  %211 = and i32 %210, -5, !dbg !13038
  br label %212

212:                                              ; preds = %202, %207, %199
  %213 = phi i32 [ %206, %202 ], [ %211, %207 ], [ %201, %199 ]
  store volatile i32 %213, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13040
  %214 = load i32, i32* %197, align 4, !dbg !13041
  %215 = icmp eq i32 %214, 0, !dbg !13043
  %216 = tail call i32 @HAL_GetTick() #25, !dbg !13044
  call void @llvm.dbg.value(metadata i32 %216, metadata !12816, metadata !DIExpression()), !dbg !12826
  call void @llvm.dbg.value(metadata i32 %216, metadata !12816, metadata !DIExpression()), !dbg !12826
  br i1 %215, label %225, label %217, !dbg !13045

217:                                              ; preds = %212, %221
  %218 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13046
  %219 = and i32 %218, 2, !dbg !13048
  %220 = icmp eq i32 %219, 0, !dbg !13048
  br i1 %220, label %221, label %233, !dbg !13049

221:                                              ; preds = %217
  %222 = tail call i32 @HAL_GetTick() #25, !dbg !13050
  %223 = sub i32 %222, %216, !dbg !13053
  %224 = icmp ugt i32 %223, 5000, !dbg !13054
  br i1 %224, label %337, label %217, !dbg !13055, !llvm.loop !13056

225:                                              ; preds = %212, %229
  %226 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13058
  %227 = and i32 %226, 2, !dbg !13058
  %228 = icmp eq i32 %227, 0, !dbg !13058
  br i1 %228, label %233, label %229, !dbg !13060

229:                                              ; preds = %225
  %230 = tail call i32 @HAL_GetTick() #25, !dbg !13061
  %231 = sub i32 %230, %216, !dbg !13064
  %232 = icmp ugt i32 %231, 5000, !dbg !13065
  br i1 %232, label %337, label %225, !dbg !13066, !llvm.loop !13067

233:                                              ; preds = %217, %225
  br i1 %172, label %234, label %237, !dbg !13069

234:                                              ; preds = %233
  %235 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13070
  %236 = and i32 %235, -268435457, !dbg !13070
  store volatile i32 %236, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13070
  br label %237, !dbg !13073

237:                                              ; preds = %234, %233, %165
  %238 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !13074
  %239 = load i32, i32* %238, align 4, !dbg !13074
  %240 = icmp eq i32 %239, 0, !dbg !13076
  br i1 %240, label %336, label %241, !dbg !13077

241:                                              ; preds = %237
  %242 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13078
  %243 = and i32 %242, 12, !dbg !13078
  %244 = icmp eq i32 %243, 8, !dbg !13081
  br i1 %244, label %297, label %245, !dbg !13082

245:                                              ; preds = %241
  %246 = icmp eq i32 %239, 2, !dbg !13083
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !13086
  %247 = tail call i32 @HAL_GetTick() #25, !dbg !13086
  call void @llvm.dbg.value(metadata i32 %247, metadata !12816, metadata !DIExpression()), !dbg !12826
  call void @llvm.dbg.value(metadata i32 %247, metadata !12816, metadata !DIExpression()), !dbg !12826
  br i1 %246, label %248, label %289, !dbg !13087

248:                                              ; preds = %245, %252
  %249 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13088
  %250 = and i32 %249, 33554432, !dbg !13088
  %251 = icmp eq i32 %250, 0, !dbg !13088
  br i1 %251, label %256, label %252, !dbg !13090

252:                                              ; preds = %248
  %253 = tail call i32 @HAL_GetTick() #25, !dbg !13091
  %254 = sub i32 %253, %247, !dbg !13094
  %255 = icmp ugt i32 %254, 2, !dbg !13095
  br i1 %255, label %337, label %248, !dbg !13096, !llvm.loop !13097

256:                                              ; preds = %248
  %257 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !13099
  %258 = load i32, i32* %257, align 4, !dbg !13099
  %259 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !13099
  %260 = load i32, i32* %259, align 4, !dbg !13099
  %261 = or i32 %260, %258, !dbg !13099
  %262 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !13099
  %263 = load i32, i32* %262, align 4, !dbg !13099
  %264 = shl i32 %263, 6, !dbg !13099
  %265 = or i32 %261, %264, !dbg !13099
  %266 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !13099
  %267 = load i32, i32* %266, align 4, !dbg !13099
  %268 = shl i32 %267, 15, !dbg !13099
  %269 = add i32 %268, -65536, !dbg !13099
  %270 = and i32 %269, -65536, !dbg !13099
  %271 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !13099
  %272 = load i32, i32* %271, align 4, !dbg !13099
  %273 = shl i32 %272, 24, !dbg !13099
  %274 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !13099
  %275 = load i32, i32* %274, align 4, !dbg !13099
  %276 = shl i32 %275, 28, !dbg !13099
  %277 = or i32 %265, %273, !dbg !13099
  %278 = or i32 %277, %270, !dbg !13099
  %279 = or i32 %278, %276, !dbg !13099
  store volatile i32 %279, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13099
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !13100
  %280 = tail call i32 @HAL_GetTick() #25, !dbg !13101
  call void @llvm.dbg.value(metadata i32 %280, metadata !12816, metadata !DIExpression()), !dbg !12826
  br label %281, !dbg !13102

281:                                              ; preds = %285, %256
  %282 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13103
  %283 = and i32 %282, 33554432, !dbg !13104
  %284 = icmp eq i32 %283, 0, !dbg !13104
  br i1 %284, label %285, label %336, !dbg !13102

285:                                              ; preds = %281
  %286 = tail call i32 @HAL_GetTick() #25, !dbg !13105
  %287 = sub i32 %286, %280, !dbg !13108
  %288 = icmp ugt i32 %287, 2, !dbg !13109
  br i1 %288, label %337, label %281, !dbg !13110, !llvm.loop !13111

289:                                              ; preds = %245, %293
  %290 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13113
  %291 = and i32 %290, 33554432, !dbg !13113
  %292 = icmp eq i32 %291, 0, !dbg !13113
  br i1 %292, label %336, label %293, !dbg !13115

293:                                              ; preds = %289
  %294 = tail call i32 @HAL_GetTick() #25, !dbg !13116
  %295 = sub i32 %294, %247, !dbg !13119
  %296 = icmp ugt i32 %295, 2, !dbg !13120
  br i1 %296, label %337, label %289, !dbg !13121, !llvm.loop !13122

297:                                              ; preds = %241
  %298 = icmp eq i32 %239, 1, !dbg !13124
  br i1 %298, label %337, label %299, !dbg !13127

299:                                              ; preds = %297
  %300 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13128
  call void @llvm.dbg.value(metadata i32 %300, metadata !12817, metadata !DIExpression()), !dbg !12826
  %301 = and i32 %300, 4194304, !dbg !13130
  %302 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !13132
  %303 = load i32, i32* %302, align 4, !dbg !13132
  %304 = icmp eq i32 %301, %303, !dbg !13133
  br i1 %304, label %305, label %337, !dbg !13134

305:                                              ; preds = %299
  %306 = and i32 %300, 63, !dbg !13135
  %307 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !13136
  %308 = load i32, i32* %307, align 4, !dbg !13136
  %309 = icmp eq i32 %306, %308, !dbg !13137
  br i1 %309, label %310, label %337, !dbg !13138

310:                                              ; preds = %305
  %311 = and i32 %300, 32704, !dbg !13139
  %312 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !13140
  %313 = load i32, i32* %312, align 4, !dbg !13140
  %314 = shl i32 %313, 6, !dbg !13141
  %315 = icmp eq i32 %311, %314, !dbg !13142
  br i1 %315, label %316, label %337, !dbg !13143

316:                                              ; preds = %310
  %317 = and i32 %300, 196608, !dbg !13144
  %318 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !13145
  %319 = load i32, i32* %318, align 4, !dbg !13145
  %320 = shl i32 %319, 15, !dbg !13146
  %321 = add i32 %320, -65536, !dbg !13146
  %322 = and i32 %321, -65536, !dbg !13146
  %323 = icmp eq i32 %317, %322, !dbg !13147
  br i1 %323, label %324, label %337, !dbg !13148

324:                                              ; preds = %316
  %325 = and i32 %300, 251658240, !dbg !13149
  %326 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !13150
  %327 = load i32, i32* %326, align 4, !dbg !13150
  %328 = shl i32 %327, 24, !dbg !13151
  %329 = icmp eq i32 %325, %328, !dbg !13152
  br i1 %329, label %330, label %337, !dbg !13153

330:                                              ; preds = %324
  %331 = and i32 %300, 1879048192, !dbg !13154
  %332 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !13155
  %333 = load i32, i32* %332, align 4, !dbg !13155
  %334 = shl i32 %333, 28, !dbg !13156
  %335 = icmp eq i32 %331, %334, !dbg !13157
  br i1 %335, label %336, label %337, !dbg !13158

336:                                              ; preds = %289, %281, %330, %237
  br label %337, !dbg !13159

337:                                              ; preds = %62, %70, %116, %126, %151, %161, %192, %221, %229, %293, %252, %285, %299, %305, %310, %316, %324, %330, %297, %102, %33, %1, %336
  %338 = phi i32 [ 0, %336 ], [ 1, %1 ], [ 1, %33 ], [ 1, %102 ], [ 1, %297 ], [ 1, %330 ], [ 1, %324 ], [ 1, %316 ], [ 1, %310 ], [ 1, %305 ], [ 1, %299 ], [ 3, %285 ], [ 3, %252 ], [ 3, %293 ], [ 3, %229 ], [ 3, %221 ], [ 3, %192 ], [ 3, %161 ], [ 3, %151 ], [ 3, %126 ], [ 3, %116 ], [ 3, %70 ], [ 3, %62 ], !dbg !12826
  ret i32 %338, !dbg !13160
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* nocapture noundef writeonly %0) local_unnamed_addr #15 !dbg !13161 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !13165, metadata !DIExpression()), !dbg !13166
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !13167
  store i32 15, i32* %2, align 4, !dbg !13168
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13169
  %4 = and i32 %3, 262144, !dbg !13171
  %5 = icmp eq i32 %4, 0, !dbg !13172
  br i1 %5, label %8, label %6, !dbg !13173

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !13174
  store i32 327680, i32* %7, align 4, !dbg !13176
  br label %15, !dbg !13177

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13178
  %10 = and i32 %9, 65536, !dbg !13180
  %11 = icmp eq i32 %10, 0, !dbg !13181
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !13182
  br i1 %11, label %14, label %13, !dbg !13183

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !13184
  br label %15, !dbg !13186

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !13187
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13189
  %17 = and i32 %16, 1, !dbg !13191
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !13192
  store i32 %17, i32* %18, align 4, !dbg !13194
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13195
  %20 = lshr i32 %19, 3, !dbg !13196
  %21 = and i32 %20, 31, !dbg !13196
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !13197
  store i32 %21, i32* %22, align 4, !dbg !13198
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13199
  %24 = and i32 %23, 4, !dbg !13201
  %25 = icmp eq i32 %24, 0, !dbg !13202
  br i1 %25, label %28, label %26, !dbg !13203

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !13204
  store i32 5, i32* %27, align 4, !dbg !13206
  br label %35, !dbg !13207

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13208
  %30 = and i32 %29, 1, !dbg !13210
  %31 = icmp eq i32 %30, 0, !dbg !13211
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !13212
  br i1 %31, label %34, label %33, !dbg !13213

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !13214
  br label %35, !dbg !13216

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !13217
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !13219
  %37 = and i32 %36, 1, !dbg !13221
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !13222
  store i32 %37, i32* %38, align 4, !dbg !13224
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13225
  %40 = and i32 %39, 16777216, !dbg !13227
  %41 = icmp eq i32 %40, 0, !dbg !13228
  %42 = select i1 %41, i32 1, i32 2, !dbg !13229
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !13230
  store i32 %42, i32* %43, align 4, !dbg !13232
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13233
  %45 = and i32 %44, 4194304, !dbg !13234
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !13235
  store i32 %45, i32* %46, align 4, !dbg !13236
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13237
  %48 = and i32 %47, 63, !dbg !13238
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !13239
  store i32 %48, i32* %49, align 4, !dbg !13240
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13241
  %51 = lshr i32 %50, 6, !dbg !13242
  %52 = and i32 %51, 511, !dbg !13242
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !13243
  store i32 %52, i32* %53, align 4, !dbg !13244
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13245
  %55 = shl i32 %54, 1, !dbg !13246
  %56 = and i32 %55, 393216, !dbg !13246
  %57 = add nuw nsw i32 %56, 131072, !dbg !13246
  %58 = lshr exact i32 %57, 16, !dbg !13247
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !13248
  store i32 %58, i32* %59, align 4, !dbg !13249
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13250
  %61 = lshr i32 %60, 24, !dbg !13251
  %62 = and i32 %61, 15, !dbg !13251
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !13252
  store i32 %62, i32* %63, align 4, !dbg !13253
  %64 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13254
  %65 = lshr i32 %64, 28, !dbg !13255
  %66 = and i32 %65, 7, !dbg !13255
  %67 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !13256
  store i32 %66, i32* %67, align 4, !dbg !13257
  ret void, !dbg !13258
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #14 !dbg !13259 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13262, metadata !DIExpression()), !dbg !13263
  tail call fastcc void @LL_InitTick(i32 noundef %0) #24, !dbg !13264
  ret void, !dbg !13265
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #14 !dbg !13266 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13269, metadata !DIExpression()), !dbg !13271
  call void @llvm.dbg.value(metadata i32 1000, metadata !13270, metadata !DIExpression()), !dbg !13271
  %2 = udiv i32 %0, 1000, !dbg !13272
  %3 = add nsw i32 %2, -1, !dbg !13273
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !13274
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !13275
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13276
  ret void, !dbg !13277
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #19 !dbg !13278 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !13280, metadata !DIExpression()), !dbg !13282
  %3 = bitcast i32* %2 to i8*, !dbg !13283
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !13283
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13281, metadata !DIExpression()), !dbg !13284
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13285
  store volatile i32 %4, i32* %2, align 4, !dbg !13284
  %5 = load volatile i32, i32* %2, align 4, !dbg !13286
  %6 = icmp eq i32 %0, -1, !dbg !13287
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13280, metadata !DIExpression()), !dbg !13282
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !13282
  call void @llvm.dbg.value(metadata i32 %8, metadata !13280, metadata !DIExpression()), !dbg !13282
  br label %9, !dbg !13289

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !13280, metadata !DIExpression()), !dbg !13282
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13290
  call void @llvm.dbg.value(metadata i32 undef, metadata !13280, metadata !DIExpression()), !dbg !13282
  %12 = shl i32 %11, 15, !dbg !13282
  %13 = ashr i32 %12, 31, !dbg !13282
  %14 = add i32 %13, %10, !dbg !13282
  call void @llvm.dbg.value(metadata i32 %14, metadata !13280, metadata !DIExpression()), !dbg !13282
  %15 = icmp eq i32 %14, 0, !dbg !13289
  br i1 %15, label %16, label %9, !dbg !13289

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !13293
  ret void, !dbg !13293
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #7 !dbg !13294 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13296, metadata !DIExpression()), !dbg !13297
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !13298
  ret void, !dbg !13299
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #14 !dbg !13300 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13305, metadata !DIExpression()), !dbg !13310
  call void @llvm.dbg.value(metadata i32 0, metadata !13308, metadata !DIExpression()), !dbg !13310
  call void @llvm.dbg.value(metadata i32 0, metadata !13309, metadata !DIExpression()), !dbg !13310
  %2 = icmp eq i32 %0, 0, !dbg !13311
  br i1 %2, label %72, label %3, !dbg !13313

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !13314
  %5 = icmp eq i32 %4, 49152, !dbg !13317
  br i1 %5, label %6, label %21, !dbg !13318

6:                                                ; preds = %3
  %7 = icmp ult i32 %0, 150000001, !dbg !13319
  %8 = select i1 %7, i32 0, i32 5, !dbg !13322
  call void @llvm.dbg.value(metadata i32 %8, metadata !13308, metadata !DIExpression()), !dbg !13310
  %9 = add i32 %0, -120000001, !dbg !13323
  %10 = icmp ult i32 %9, 30000000, !dbg !13323
  %11 = select i1 %10, i32 4, i32 %8, !dbg !13323
  call void @llvm.dbg.value(metadata i32 %11, metadata !13308, metadata !DIExpression()), !dbg !13310
  %12 = icmp ult i32 %9, -30000000, !dbg !13325
  %13 = select i1 %12, i32 %11, i32 3, !dbg !13325
  call void @llvm.dbg.value(metadata i32 %13, metadata !13308, metadata !DIExpression()), !dbg !13310
  %14 = icmp ugt i32 %0, 60000000, !dbg !13327
  %15 = icmp eq i32 %13, 0
  %16 = and i1 %14, %15, !dbg !13329
  br i1 %16, label %21, label %17, !dbg !13329

17:                                               ; preds = %6
  %18 = icmp ugt i32 %0, 30000000, !dbg !13330
  %19 = and i1 %18, %15, !dbg !13333
  %20 = select i1 %19, i32 1, i32 %13, !dbg !13333
  br label %21, !dbg !13333

21:                                               ; preds = %17, %6, %3
  %22 = phi i32 [ 0, %3 ], [ 2, %6 ], [ %20, %17 ], !dbg !13310
  call void @llvm.dbg.value(metadata i32 %22, metadata !13308, metadata !DIExpression()), !dbg !13310
  %23 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !13334
  %24 = icmp eq i32 %23, 32768, !dbg !13336
  br i1 %24, label %25, label %45, !dbg !13337

25:                                               ; preds = %21
  %26 = icmp ugt i32 %0, 150000000, !dbg !13338
  %27 = icmp eq i32 %22, 0
  %28 = and i1 %26, %27, !dbg !13341
  %29 = select i1 %28, i32 5, i32 %22, !dbg !13341
  call void @llvm.dbg.value(metadata i32 %29, metadata !13308, metadata !DIExpression()), !dbg !13310
  %30 = icmp ugt i32 %0, 12000000, !dbg !13342
  %31 = icmp eq i32 %29, 0
  %32 = and i1 %30, %31, !dbg !13344
  %33 = select i1 %32, i32 4, i32 %29, !dbg !13344
  call void @llvm.dbg.value(metadata i32 %33, metadata !13308, metadata !DIExpression()), !dbg !13310
  %34 = icmp ugt i32 %0, 90000000, !dbg !13345
  %35 = icmp eq i32 %33, 0
  %36 = and i1 %34, %35, !dbg !13347
  %37 = select i1 %36, i32 3, i32 %33, !dbg !13347
  call void @llvm.dbg.value(metadata i32 %37, metadata !13308, metadata !DIExpression()), !dbg !13310
  %38 = icmp ugt i32 %0, 60000000, !dbg !13348
  %39 = icmp eq i32 %37, 0
  %40 = select i1 %38, i1 %39, i1 false, !dbg !13350
  br i1 %40, label %45, label %41, !dbg !13350

41:                                               ; preds = %25
  %42 = icmp ugt i32 %0, 30000000, !dbg !13351
  %43 = select i1 %42, i1 %39, i1 false, !dbg !13354
  %44 = select i1 %43, i32 1, i32 %37, !dbg !13354
  br label %45, !dbg !13354

45:                                               ; preds = %41, %25, %21
  %46 = phi i32 [ %22, %21 ], [ 2, %25 ], [ %44, %41 ], !dbg !13355
  call void @llvm.dbg.value(metadata i32 %46, metadata !13308, metadata !DIExpression()), !dbg !13310
  %47 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !13356
  %48 = icmp eq i32 %47, 16384, !dbg !13358
  br i1 %48, label %49, label %61, !dbg !13359

49:                                               ; preds = %45
  %50 = icmp ugt i32 %0, 90000000, !dbg !13360
  %51 = icmp eq i32 %46, 0
  %52 = select i1 %50, i1 %51, i1 false, !dbg !13363
  %53 = select i1 %52, i32 3, i32 %46, !dbg !13363
  call void @llvm.dbg.value(metadata i32 %53, metadata !13308, metadata !DIExpression()), !dbg !13310
  %54 = icmp ugt i32 %0, 60000000, !dbg !13364
  %55 = icmp eq i32 %53, 0
  %56 = select i1 %54, i1 %55, i1 false, !dbg !13366
  br i1 %56, label %61, label %57, !dbg !13366

57:                                               ; preds = %49
  %58 = icmp ugt i32 %0, 30000000, !dbg !13367
  %59 = select i1 %58, i1 %55, i1 false, !dbg !13370
  %60 = select i1 %59, i32 1, i32 %53, !dbg !13370
  br label %61, !dbg !13370

61:                                               ; preds = %57, %49, %45
  %62 = phi i32 [ %46, %45 ], [ 2, %49 ], [ %60, %57 ], !dbg !13355
  call void @llvm.dbg.value(metadata i32 %62, metadata !13308, metadata !DIExpression()), !dbg !13310
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %62) #24, !dbg !13371
  call void @llvm.dbg.value(metadata i32 2, metadata !13306, metadata !DIExpression()), !dbg !13310
  br label %63, !dbg !13372

63:                                               ; preds = %63, %61
  %64 = phi i32 [ 2, %61 ], [ %66, %63 ], !dbg !13355
  call void @llvm.dbg.value(metadata i32 %64, metadata !13306, metadata !DIExpression()), !dbg !13310
  %65 = tail call fastcc i32 @LL_FLASH_GetLatency() #24, !dbg !13373
  call void @llvm.dbg.value(metadata i32 %65, metadata !13307, metadata !DIExpression()), !dbg !13310
  %66 = add nsw i32 %64, -1, !dbg !13375
  call void @llvm.dbg.value(metadata i32 %66, metadata !13306, metadata !DIExpression()), !dbg !13310
  %67 = icmp ne i32 %65, %62, !dbg !13376
  %68 = icmp ne i32 %66, 0, !dbg !13377
  %69 = select i1 %67, i1 %68, i1 false, !dbg !13377
  br i1 %69, label %63, label %70, !dbg !13378, !llvm.loop !13379

70:                                               ; preds = %63
  %71 = zext i1 %67 to i32
  br label %72

72:                                               ; preds = %70, %1
  %73 = phi i32 [ 1, %1 ], [ %71, %70 ], !dbg !13381
  call void @llvm.dbg.value(metadata i32 %73, metadata !13309, metadata !DIExpression()), !dbg !13310
  ret i32 %73, !dbg !13382
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #15 !dbg !13383 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13385
  %2 = and i32 %1, 49152, !dbg !13385
  ret i32 %2, !dbg !13386
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #14 !dbg !13387 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13389, metadata !DIExpression()), !dbg !13390
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13391
  %3 = and i32 %2, -16, !dbg !13391
  %4 = or i32 %3, %0, !dbg !13391
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13391
  ret void, !dbg !13392
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #15 !dbg !13393 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13394
  %2 = and i32 %1, 15, !dbg !13394
  ret i32 %2, !dbg !13395
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct.ztest_suite_stats* nocapture noundef readonly %0, %struct.ztest_suite_stats* nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !13396 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %0, metadata !13414, metadata !DIExpression()), !dbg !13418
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %1, metadata !13415, metadata !DIExpression()), !dbg !13418
  call void @llvm.dbg.value(metadata i32 0, metadata !13416, metadata !DIExpression()), !dbg !13418
  call void @llvm.dbg.value(metadata i32 0, metadata !13417, metadata !DIExpression()), !dbg !13418
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !13419
  %4 = icmp eq i32 %3, 0, !dbg !13421
  br i1 %4, label %5, label %21, !dbg !13422

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct.ztest_suite_stats* noundef %0) #24, !dbg !13423
  call void @llvm.dbg.value(metadata i32 %6, metadata !13417, metadata !DIExpression()), !dbg !13418
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.201() #24, !dbg !13425
  %8 = icmp eq i32 %7, 1, !dbg !13427
  br i1 %8, label %13, label %9, !dbg !13428

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.202() #24, !dbg !13429
  br label %10, !dbg !13431

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.201() #24, !dbg !13432
  %12 = icmp eq i32 %11, 1, !dbg !13433
  br i1 %12, label %13, label %10, !dbg !13431, !llvm.loop !13434

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %0, i32 0, i32 0, !dbg !13436
  %15 = load i32, i32* %14, align 4, !dbg !13436
  %16 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %0, i32 0, i32 1, !dbg !13437
  %17 = load i32, i32* %16, align 4, !dbg !13437
  %18 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %0, i32 0, i32 2, !dbg !13438
  %19 = load i32, i32* %18, align 4, !dbg !13438
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.203(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #24, !dbg !13439
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct.ztest_suite_stats* noundef %1) #24, !dbg !13440
  call void @llvm.dbg.value(metadata i32 %20, metadata !13416, metadata !DIExpression()), !dbg !13418
  br label %21, !dbg !13441

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !13442
  call void @llvm.dbg.value(metadata i32 %22, metadata !13416, metadata !DIExpression()), !dbg !13418
  ret i32 %22, !dbg !13443
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #15 !dbg !13444 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13448, metadata !DIExpression()), !dbg !13449
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.205() #24, !dbg !13450
  %2 = icmp ne i32 %1, 0, !dbg !13452
  call void @llvm.dbg.value(metadata i1 %2, metadata !13448, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13449
  %3 = tail call fastcc i32 @LL_RCC_PLLSAI_IsReady() #24, !dbg !13453
  %4 = icmp ne i32 %3, 0, !dbg !13455
  call void @llvm.dbg.value(metadata i1 undef, metadata !13448, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13449
  %5 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #24, !dbg !13456
  %6 = icmp ne i32 %5, 0, !dbg !13458
  %7 = select i1 %6, i1 true, i1 %4, !dbg !13459
  %8 = select i1 %7, i1 true, i1 %2, !dbg !13459
  %9 = zext i1 %8 to i32, !dbg !13459
  call void @llvm.dbg.value(metadata i32 %9, metadata !13448, metadata !DIExpression()), !dbg !13449
  ret i32 %9, !dbg !13460
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct.ztest_suite_stats* nocapture noundef readonly %1) unnamed_addr #8 !dbg !13461 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13465, metadata !DIExpression()), !dbg !13468
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %1, metadata !13466, metadata !DIExpression()), !dbg !13468
  call void @llvm.dbg.value(metadata i32 0, metadata !13467, metadata !DIExpression()), !dbg !13468
  %3 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %1, i32 0, i32 0, !dbg !13469
  %4 = load i32, i32* %3, align 4, !dbg !13469
  %5 = and i32 %4, 63, !dbg !13470
  %6 = udiv i32 %0, %5, !dbg !13471
  call void @llvm.dbg.value(metadata i32 %6, metadata !13467, metadata !DIExpression()), !dbg !13468
  %7 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %1, i32 0, i32 1, !dbg !13472
  %8 = load i32, i32* %7, align 4, !dbg !13472
  %9 = and i32 %8, 511, !dbg !13473
  %10 = mul i32 %9, %6, !dbg !13474
  call void @llvm.dbg.value(metadata i32 %10, metadata !13467, metadata !DIExpression()), !dbg !13468
  %11 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %1, i32 0, i32 2, !dbg !13475
  %12 = load i32, i32* %11, align 4, !dbg !13475
  %13 = lshr i32 %12, 15, !dbg !13476
  %14 = and i32 %13, 131070, !dbg !13476
  %15 = add nuw nsw i32 %14, 2, !dbg !13476
  %16 = udiv i32 %10, %15, !dbg !13477
  call void @llvm.dbg.value(metadata i32 %16, metadata !13467, metadata !DIExpression()), !dbg !13468
  ret i32 %16, !dbg !13478
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.201() unnamed_addr #15 !dbg !13479 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13480
  %2 = lshr i32 %1, 1, !dbg !13481
  %3 = and i32 %2, 1, !dbg !13481
  ret i32 %3, !dbg !13482
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.202() unnamed_addr #14 !dbg !13483 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13484
  %2 = or i32 %1, 1, !dbg !13484
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13484
  ret void, !dbg !13485
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.203(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #14 !dbg !13486 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13488, metadata !DIExpression()), !dbg !13492
  call void @llvm.dbg.value(metadata i32 %1, metadata !13489, metadata !DIExpression()), !dbg !13492
  call void @llvm.dbg.value(metadata i32 %2, metadata !13490, metadata !DIExpression()), !dbg !13492
  call void @llvm.dbg.value(metadata i32 %3, metadata !13491, metadata !DIExpression()), !dbg !13492
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13493
  %6 = and i32 %5, -4227072, !dbg !13493
  %7 = or i32 %1, %0, !dbg !13493
  %8 = shl i32 %2, 6, !dbg !13493
  %9 = or i32 %7, %8, !dbg !13493
  %10 = or i32 %9, %6, !dbg !13493
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13493
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13494
  %12 = and i32 %11, -196609, !dbg !13494
  %13 = or i32 %12, %3, !dbg !13494
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13494
  %14 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13495
  %15 = and i32 %14, -1879048193, !dbg !13495
  %16 = or i32 %15, %3, !dbg !13495
  store volatile i32 %16, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13495
  ret void, !dbg !13496
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct.ztest_suite_stats* nocapture noundef readonly %1) unnamed_addr #14 !dbg !13497 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13501, metadata !DIExpression()), !dbg !13505
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %1, metadata !13502, metadata !DIExpression()), !dbg !13505
  call void @llvm.dbg.value(metadata i32 0, metadata !13503, metadata !DIExpression()), !dbg !13505
  call void @llvm.dbg.value(metadata i32 0, metadata !13504, metadata !DIExpression()), !dbg !13505
  %3 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %1, i32 0, i32 0, !dbg !13506
  %4 = load i32, i32* %3, align 4, !dbg !13506
  %5 = lshr i32 %4, 4, !dbg !13506
  %6 = and i32 %5, 15, !dbg !13506
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !13506
  %8 = load i8, i8* %7, align 1, !dbg !13506
  %9 = zext i8 %8 to i32, !dbg !13506
  %10 = lshr i32 %0, %9, !dbg !13506
  call void @llvm.dbg.value(metadata i32 %10, metadata !13504, metadata !DIExpression()), !dbg !13505
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !13507
  %12 = icmp ult i32 %11, %10, !dbg !13509
  br i1 %12, label %13, label %16, !dbg !13510

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !13511
  call void @llvm.dbg.value(metadata i32 %14, metadata !13503, metadata !DIExpression()), !dbg !13505
  %15 = icmp eq i32 %14, 0, !dbg !13513
  br i1 %15, label %16, label %30, !dbg !13515

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.204() #24, !dbg !13516
  br label %17, !dbg !13518

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.205() #24, !dbg !13519
  %19 = icmp eq i32 %18, 1, !dbg !13520
  br i1 %19, label %20, label %17, !dbg !13518, !llvm.loop !13521

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !13523
  tail call fastcc void @LL_RCC_SetAHBPrescaler.206(i32 noundef %21) #24, !dbg !13524
  tail call fastcc void @LL_RCC_SetSysClkSource.207() #24, !dbg !13525
  br label %22, !dbg !13526

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.208() #24, !dbg !13527
  %24 = icmp eq i32 %23, 8, !dbg !13528
  br i1 %24, label %25, label %22, !dbg !13526, !llvm.loop !13529

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %1, i32 0, i32 1, !dbg !13531
  %27 = load i32, i32* %26, align 4, !dbg !13531
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.209(i32 noundef %27) #24, !dbg !13532
  %28 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %1, i32 0, i32 2, !dbg !13533
  %29 = load i32, i32* %28, align 4, !dbg !13533
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.210(i32 noundef %29) #24, !dbg !13534
  br label %30, !dbg !13535

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !13536
  %33 = icmp ugt i32 %32, %10, !dbg !13538
  br i1 %33, label %34, label %36, !dbg !13539

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !13540
  call void @llvm.dbg.value(metadata i32 %35, metadata !13503, metadata !DIExpression()), !dbg !13505
  br label %36, !dbg !13542

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !13505
  call void @llvm.dbg.value(metadata i32 %37, metadata !13503, metadata !DIExpression()), !dbg !13505
  %38 = icmp eq i32 %37, 0, !dbg !13543
  br i1 %38, label %39, label %40, !dbg !13545

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #24, !dbg !13546
  br label %40, !dbg !13548

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !13549
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.204() unnamed_addr #14 !dbg !13550 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13551
  %2 = or i32 %1, 16777216, !dbg !13551
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13551
  ret void, !dbg !13552
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.205() unnamed_addr #15 !dbg !13553 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13554
  %2 = lshr i32 %1, 25, !dbg !13555
  %3 = and i32 %2, 1, !dbg !13555
  ret i32 %3, !dbg !13556
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.206(i32 noundef %0) unnamed_addr #14 !dbg !13557 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13559, metadata !DIExpression()), !dbg !13560
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13561
  %3 = and i32 %2, -241, !dbg !13561
  %4 = or i32 %3, %0, !dbg !13561
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13561
  ret void, !dbg !13562
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.207() unnamed_addr #14 !dbg !13563 {
  call void @llvm.dbg.value(metadata i32 2, metadata !13565, metadata !DIExpression()), !dbg !13566
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13567
  %2 = and i32 %1, -4, !dbg !13567
  %3 = or i32 %2, 2, !dbg !13567
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13567
  ret void, !dbg !13568
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.208() unnamed_addr #15 !dbg !13569 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13570
  %2 = and i32 %1, 12, !dbg !13570
  ret i32 %2, !dbg !13571
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.209(i32 noundef %0) unnamed_addr #14 !dbg !13572 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13574, metadata !DIExpression()), !dbg !13575
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13576
  %3 = and i32 %2, -7169, !dbg !13576
  %4 = or i32 %3, %0, !dbg !13576
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13576
  ret void, !dbg !13577
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.210(i32 noundef %0) unnamed_addr #14 !dbg !13578 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13580, metadata !DIExpression()), !dbg !13581
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13582
  %3 = and i32 %2, -57345, !dbg !13582
  %4 = or i32 %3, %0, !dbg !13582
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13582
  ret void, !dbg !13583
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLSAI_IsReady() unnamed_addr #15 !dbg !13584 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13585
  %2 = lshr i32 %1, 29, !dbg !13586
  %3 = and i32 %2, 1, !dbg !13586
  ret i32 %3, !dbg !13587
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #15 !dbg !13588 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13589
  %2 = lshr i32 %1, 27, !dbg !13590
  %3 = and i32 %2, 1, !dbg !13590
  ret i32 %3, !dbg !13591
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct.ztest_suite_stats* nocapture noundef readonly %2, %struct.ztest_suite_stats* nocapture noundef readonly %3) local_unnamed_addr #14 !dbg !13592 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13596, metadata !DIExpression()), !dbg !13602
  call void @llvm.dbg.value(metadata i32 %1, metadata !13597, metadata !DIExpression()), !dbg !13602
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %2, metadata !13598, metadata !DIExpression()), !dbg !13602
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %3, metadata !13599, metadata !DIExpression()), !dbg !13602
  call void @llvm.dbg.value(metadata i32 0, metadata !13600, metadata !DIExpression()), !dbg !13602
  call void @llvm.dbg.value(metadata i32 0, metadata !13601, metadata !DIExpression()), !dbg !13602
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !13603
  %6 = icmp eq i32 %5, 0, !dbg !13605
  br i1 %6, label %7, label %27, !dbg !13606

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct.ztest_suite_stats* noundef %2) #24, !dbg !13607
  call void @llvm.dbg.value(metadata i32 %8, metadata !13601, metadata !DIExpression()), !dbg !13602
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.211() #24, !dbg !13609
  %10 = icmp eq i32 %9, 1, !dbg !13611
  br i1 %10, label %19, label %11, !dbg !13612

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !13613
  br i1 %12, label %13, label %14, !dbg !13616

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #24, !dbg !13617
  br label %15, !dbg !13619

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.212() #24, !dbg !13620
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.213() #24, !dbg !13622
  br label %16, !dbg !13623

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.211() #24, !dbg !13624
  %18 = icmp eq i32 %17, 1, !dbg !13625
  br i1 %18, label %19, label %16, !dbg !13623, !llvm.loop !13626

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %2, i32 0, i32 0, !dbg !13628
  %21 = load i32, i32* %20, align 4, !dbg !13628
  %22 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %2, i32 0, i32 1, !dbg !13629
  %23 = load i32, i32* %22, align 4, !dbg !13629
  %24 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %2, i32 0, i32 2, !dbg !13630
  %25 = load i32, i32* %24, align 4, !dbg !13630
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.203(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #24, !dbg !13631
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct.ztest_suite_stats* noundef %3) #24, !dbg !13632
  call void @llvm.dbg.value(metadata i32 %26, metadata !13600, metadata !DIExpression()), !dbg !13602
  br label %27, !dbg !13633

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !13634
  call void @llvm.dbg.value(metadata i32 %28, metadata !13600, metadata !DIExpression()), !dbg !13602
  ret i32 %28, !dbg !13635
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.211() unnamed_addr #15 !dbg !13636 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13637
  %2 = lshr i32 %1, 17, !dbg !13638
  %3 = and i32 %2, 1, !dbg !13638
  ret i32 %3, !dbg !13639
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #14 !dbg !13640 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13641
  %2 = or i32 %1, 262144, !dbg !13641
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13641
  ret void, !dbg !13642
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.212() unnamed_addr #14 !dbg !13643 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13644
  %2 = and i32 %1, -262145, !dbg !13644
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13644
  ret void, !dbg !13645
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.213() unnamed_addr #14 !dbg !13646 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13647
  %2 = or i32 %1, 65536, !dbg !13647
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13647
  ret void, !dbg !13648
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #21 !dbg !13649 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !13652, metadata !DIExpression()), !dbg !13668
  call void @llvm.dbg.value(metadata i32 undef, metadata !13652, metadata !DIExpression()), !dbg !13668
  call void @llvm.dbg.value(metadata i32 undef, metadata !13652, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !13668
  ret void, !dbg !13669
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !13670 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13674, metadata !DIExpression()), !dbg !13676
  %2 = icmp eq i8* %0, null, !dbg !13677
  br i1 %2, label %29, label %3, !dbg !13679

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !13680
  %5 = icmp eq i8 %4, 0, !dbg !13681
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !13682
  br i1 %6, label %29, label %8, !dbg !13682

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !13675, metadata !DIExpression()), !dbg !13676
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !13683

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !13675, metadata !DIExpression()), !dbg !13676
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #24, !dbg !13685
  br i1 %10, label %11, label %15, !dbg !13690

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !13691
  %13 = load i8*, i8** %12, align 4, !dbg !13691
  %14 = icmp eq i8* %13, %0, !dbg !13692
  br i1 %14, label %29, label %15, !dbg !13693

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !13694
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !13675, metadata !DIExpression()), !dbg !13676
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13695
  br i1 %17, label %7, label %8, !dbg !13696, !llvm.loop !13697

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !13675, metadata !DIExpression()), !dbg !13676
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #24, !dbg !13699
  br i1 %20, label %21, label %26, !dbg !13703

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !13704
  %23 = load i8*, i8** %22, align 4, !dbg !13704
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #25, !dbg !13705
  %25 = icmp eq i32 %24, 0, !dbg !13706
  br i1 %25, label %29, label %26, !dbg !13707

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !13708
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !13675, metadata !DIExpression()), !dbg !13676
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13709
  br i1 %28, label %29, label %18, !dbg !13683, !llvm.loop !13710

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !13676
  ret %struct.device* %30, !dbg !13712
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #8 !dbg !13713 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13717, metadata !DIExpression()), !dbg !13718
  %2 = icmp eq %struct.device* %0, null, !dbg !13719
  br i1 %2, label %14, label %3, !dbg !13721

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !13722
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !13722
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !13723
  %7 = load i8, i8* %6, align 1, !dbg !13723
  %8 = and i8 %7, 1, !dbg !13723
  %9 = icmp eq i8 %8, 0, !dbg !13723
  br i1 %9, label %14, label %10, !dbg !13724

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !13725
  %12 = load i8, i8* %11, align 1, !dbg !13725
  %13 = icmp eq i8 %12, 0, !dbg !13726
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !13718
  ret i1 %15, !dbg !13727
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #7 !dbg !13728 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !13733, metadata !DIExpression()), !dbg !13734
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !13735
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !13736
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13737 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13745, metadata !DIExpression()), !dbg !13750
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13746, metadata !DIExpression()), !dbg !13750
  call void @llvm.dbg.value(metadata i8* %2, metadata !13747, metadata !DIExpression()), !dbg !13750
  %5 = bitcast i32* %4 to i8*, !dbg !13751
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13751
  call void @llvm.dbg.value(metadata i32 0, metadata !13748, metadata !DIExpression()), !dbg !13750
  store i32 0, i32* %4, align 4, !dbg !13752
  call void @llvm.dbg.value(metadata i32* %4, metadata !13748, metadata !DIExpression(DW_OP_deref)), !dbg !13750
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !13753
  call void @llvm.dbg.value(metadata i16* %6, metadata !13749, metadata !DIExpression()), !dbg !13750
  %7 = load i32, i32* %4, align 4, !dbg !13754
  call void @llvm.dbg.value(metadata i32 %7, metadata !13748, metadata !DIExpression()), !dbg !13750
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !13755
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13756
  ret i32 %8, !dbg !13757
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !13758 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13762, metadata !DIExpression()), !dbg !13768
  call void @llvm.dbg.value(metadata i32* %1, metadata !13763, metadata !DIExpression()), !dbg !13768
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13769
  %4 = load i16*, i16** %3, align 4, !dbg !13769
  call void @llvm.dbg.value(metadata i16* %4, metadata !13764, metadata !DIExpression()), !dbg !13768
  %5 = icmp eq i16* %4, null, !dbg !13770
  br i1 %5, label %14, label %6, !dbg !13771

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !13772
  call void @llvm.dbg.value(metadata i32 %7, metadata !13765, metadata !DIExpression()), !dbg !13772
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !13773
  %9 = load i16, i16* %8, align 2, !dbg !13773
  %10 = add i16 %9, -32767, !dbg !13774
  %11 = icmp ult i16 %10, 2, !dbg !13774
  %12 = add i32 %7, 1, !dbg !13775
  call void @llvm.dbg.value(metadata i32 %12, metadata !13765, metadata !DIExpression()), !dbg !13772
  br i1 %11, label %13, label %6, !dbg !13774, !llvm.loop !13777

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !13780
  br label %14, !dbg !13781

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !13782
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !13783 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !13787, metadata !DIExpression()), !dbg !13798
  call void @llvm.dbg.value(metadata i32 %1, metadata !13788, metadata !DIExpression()), !dbg !13798
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !13789, metadata !DIExpression()), !dbg !13798
  call void @llvm.dbg.value(metadata i8* %3, metadata !13790, metadata !DIExpression()), !dbg !13798
  call void @llvm.dbg.value(metadata i32 0, metadata !13791, metadata !DIExpression()), !dbg !13799
  %5 = icmp eq i32 %1, 0, !dbg !13800
  br i1 %5, label %16, label %8, !dbg !13801

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !13791, metadata !DIExpression()), !dbg !13799
  %7 = icmp eq i32 %15, %1, !dbg !13800
  br i1 %7, label %16, label %8, !dbg !13801, !llvm.loop !13802

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !13791, metadata !DIExpression()), !dbg !13799
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !13804
  %11 = load i16, i16* %10, align 2, !dbg !13804
  call void @llvm.dbg.value(metadata i16 %11, metadata !13793, metadata !DIExpression()), !dbg !13805
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #24, !dbg !13806
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !13796, metadata !DIExpression()), !dbg !13805
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #25, !dbg !13807
  call void @llvm.dbg.value(metadata i32 %13, metadata !13797, metadata !DIExpression()), !dbg !13805
  %14 = icmp slt i32 %13, 0, !dbg !13808
  %15 = add nuw i32 %9, 1, !dbg !13810
  call void @llvm.dbg.value(metadata i32 %15, metadata !13791, metadata !DIExpression()), !dbg !13799
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !13811
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #4 !dbg !13812 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !13816, metadata !DIExpression()), !dbg !13819
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !13817, metadata !DIExpression()), !dbg !13819
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !13818, metadata !DIExpression()), !dbg !13819
  %2 = sext i16 %0 to i32, !dbg !13820
  %3 = icmp slt i16 %0, 1, !dbg !13822
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !13823
  %6 = add nsw i32 %2, -1, !dbg !13823
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !13823
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !13823
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !13817, metadata !DIExpression()), !dbg !13819
  ret %struct.device* %8, !dbg !13824
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13825 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13827, metadata !DIExpression()), !dbg !13832
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13828, metadata !DIExpression()), !dbg !13832
  call void @llvm.dbg.value(metadata i8* %2, metadata !13829, metadata !DIExpression()), !dbg !13832
  %5 = bitcast i32* %4 to i8*, !dbg !13833
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13833
  call void @llvm.dbg.value(metadata i32 0, metadata !13830, metadata !DIExpression()), !dbg !13832
  store i32 0, i32* %4, align 4, !dbg !13834
  call void @llvm.dbg.value(metadata i32* %4, metadata !13830, metadata !DIExpression(DW_OP_deref)), !dbg !13832
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !13835
  call void @llvm.dbg.value(metadata i16* %6, metadata !13831, metadata !DIExpression()), !dbg !13832
  %7 = load i32, i32* %4, align 4, !dbg !13836
  call void @llvm.dbg.value(metadata i32 %7, metadata !13830, metadata !DIExpression()), !dbg !13832
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !13837
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13838
  ret i32 %8, !dbg !13839
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !13840 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13842, metadata !DIExpression()), !dbg !13847
  call void @llvm.dbg.value(metadata i32* %1, metadata !13843, metadata !DIExpression()), !dbg !13847
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13848
  %4 = load i16*, i16** %3, align 4, !dbg !13848
  call void @llvm.dbg.value(metadata i16* %4, metadata !13844, metadata !DIExpression()), !dbg !13847
  call void @llvm.dbg.value(metadata i32 0, metadata !13845, metadata !DIExpression()), !dbg !13847
  call void @llvm.dbg.value(metadata i32 0, metadata !13846, metadata !DIExpression()), !dbg !13847
  %5 = icmp eq i16* %4, null, !dbg !13849
  br i1 %5, label %22, label %6, !dbg !13851

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !13845, metadata !DIExpression()), !dbg !13847
  call void @llvm.dbg.value(metadata i16* %8, metadata !13844, metadata !DIExpression()), !dbg !13847
  %9 = load i16, i16* %8, align 2, !dbg !13852
  %10 = icmp eq i16 %9, -32768, !dbg !13856
  call void @llvm.dbg.value(metadata i32 undef, metadata !13845, metadata !DIExpression()), !dbg !13847
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !13857
  call void @llvm.dbg.value(metadata i16* %11, metadata !13844, metadata !DIExpression()), !dbg !13847
  %12 = zext i1 %10 to i32, !dbg !13858
  %13 = add i32 %7, %12, !dbg !13858
  call void @llvm.dbg.value(metadata i32 %13, metadata !13845, metadata !DIExpression()), !dbg !13847
  %14 = icmp eq i32 %13, 2, !dbg !13859
  br i1 %14, label %15, label %6, !dbg !13860

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !13847
  call void @llvm.dbg.value(metadata i32 %16, metadata !13846, metadata !DIExpression()), !dbg !13847
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !13861
  %18 = load i16, i16* %17, align 2, !dbg !13861
  %19 = icmp eq i16 %18, 32767, !dbg !13862
  %20 = add i32 %16, 1, !dbg !13863
  call void @llvm.dbg.value(metadata i32 %20, metadata !13846, metadata !DIExpression()), !dbg !13847
  br i1 %19, label %21, label %15, !dbg !13865, !llvm.loop !13866

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !13868
  br label %22, !dbg !13869

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !13870
  call void @llvm.dbg.value(metadata i16* %23, metadata !13844, metadata !DIExpression()), !dbg !13847
  ret i16* %23, !dbg !13871
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #8 !dbg !13872 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13875
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 5, !dbg !13876
  ret i32* %2, !dbg !13877
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #4 !dbg !13878 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14029, metadata !DIExpression()), !dbg !14032
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !14030, metadata !DIExpression()), !dbg !14032
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14031, metadata !DIExpression()), !dbg !14032
  ret void, !dbg !14033
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !14034 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14038, metadata !DIExpression()), !dbg !14040
  call void @llvm.dbg.value(metadata i32 %1, metadata !14039, metadata !DIExpression()), !dbg !14040
  ret void, !dbg !14041
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !14042 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14046, metadata !DIExpression()), !dbg !14048
  call void @llvm.dbg.value(metadata i32 %1, metadata !14047, metadata !DIExpression()), !dbg !14048
  ret void, !dbg !14049
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !14050 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14054, metadata !DIExpression()), !dbg !14056
  call void @llvm.dbg.value(metadata i8* %1, metadata !14055, metadata !DIExpression()), !dbg !14056
  ret i32 -134, !dbg !14057
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !14058 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14062, metadata !DIExpression()), !dbg !14064
  call void @llvm.dbg.value(metadata i8* %1, metadata !14063, metadata !DIExpression()), !dbg !14064
  ret i32 -134, !dbg !14065
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #10 !dbg !14066 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14069, metadata !DIExpression()), !dbg !14070
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14071, !srcloc !14077
  call void @llvm.dbg.value(metadata i32 undef, metadata !14074, metadata !DIExpression()) #23, !dbg !14078
  call void @llvm.dbg.value(metadata i32 undef, metadata !14075, metadata !DIExpression()) #23, !dbg !14078
  br label %3, !dbg !14079

3:                                                ; preds = %3, %1
  br label %3, !dbg !14080, !llvm.loop !14083
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !14086 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14090, metadata !DIExpression()), !dbg !14092
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !14091, metadata !DIExpression()), !dbg !14092
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.218, i32 0, i32 0), i32 noundef 69) #25, !dbg !14093
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !14098
  unreachable, !dbg !14098
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #10 !dbg !14099 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14101, metadata !DIExpression()), !dbg !14102
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !14103
  unreachable, !dbg !14103
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !14104 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14106, metadata !DIExpression()), !dbg !14110
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !14107, metadata !DIExpression()), !dbg !14110
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14111, !srcloc !14077
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !14111
  call void @llvm.dbg.value(metadata i32 %4, metadata !14074, metadata !DIExpression()) #23, !dbg !14113
  call void @llvm.dbg.value(metadata i32 undef, metadata !14075, metadata !DIExpression()) #23, !dbg !14113
  call void @llvm.dbg.value(metadata i32 %4, metadata !14108, metadata !DIExpression()), !dbg !14110
  %5 = tail call fastcc %struct.k_thread* @k_current_get.221() #26, !dbg !14114
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14109, metadata !DIExpression()), !dbg !14110
  %6 = tail call fastcc i8* @reason_to_str(i32 noundef %0) #24, !dbg !14115
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.222, i32 0, i32 0), i32 noundef 69, i32 noundef %0, i8* noundef %6, i32 noundef 0) #25, !dbg !14115
  %7 = icmp eq %struct.__esf* %1, null, !dbg !14120
  br i1 %7, label %20, label %8, !dbg !14122

8:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !14123, metadata !DIExpression()), !dbg !14128
  %9 = getelementptr inbounds %struct.__esf, %struct.__esf* %1, i32 0, i32 0, i32 7, !dbg !14130
  %10 = load i32, i32* %9, align 4, !dbg !14130
  %11 = and i32 %10, 511, !dbg !14131
  %12 = icmp eq i32 %11, 0, !dbg !14132
  br i1 %12, label %14, label %13, !dbg !14133

13:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.223, i32 0, i32 0), i32 noundef 69) #25, !dbg !14134
  br label %14, !dbg !14140

14:                                               ; preds = %8, %13
  %15 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %5) #24, !dbg !14141
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.224, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %5, i8* noundef %15) #25, !dbg !14141
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #24, !dbg !14146
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !14123, metadata !DIExpression()), !dbg !14147
  %16 = load i32, i32* %9, align 4, !dbg !14152
  %17 = and i32 %16, 511, !dbg !14153
  %18 = icmp eq i32 %17, 0, !dbg !14154
  br i1 %18, label %22, label %19, !dbg !14155

19:                                               ; preds = %14
  call void @llvm.dbg.value(metadata i32 %4, metadata !14156, metadata !DIExpression()) #23, !dbg !14159
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !14162, !srcloc !14163
  br label %25, !dbg !14164

20:                                               ; preds = %2
  %21 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %5) #24, !dbg !14141
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.224, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %5, i8* noundef %21) #25, !dbg !14141
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #24, !dbg !14146
  br label %22, !dbg !14165

22:                                               ; preds = %20, %14
  %23 = icmp eq i32 %0, 1, !dbg !14166
  call void @llvm.dbg.value(metadata i32 %4, metadata !14156, metadata !DIExpression()) #23, !dbg !14169
  call void @llvm.dbg.value(metadata i32 %4, metadata !14156, metadata !DIExpression()) #23, !dbg !14172
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !14110
  br i1 %23, label %25, label %24, !dbg !14174

24:                                               ; preds = %22
  tail call fastcc void @k_thread_abort.225(%struct.k_thread* noundef %5) #24, !dbg !14175
  br label %25, !dbg !14178

25:                                               ; preds = %22, %24, %19
  ret void, !dbg !14178
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.221() unnamed_addr #11 !dbg !14179 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.233() #26, !dbg !14183
  ret %struct.k_thread* %1, !dbg !14184
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @reason_to_str(i32 noundef %0) unnamed_addr #4 !dbg !14185 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14189, metadata !DIExpression()), !dbg !14190
  %2 = icmp ult i32 %0, 5, !dbg !14191
  br i1 %2, label %3, label %6, !dbg !14191

3:                                                ; preds = %1
  %4 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table.reason_to_str, i32 0, i32 %0, !dbg !14191
  %5 = load i8*, i8** %4, align 4, !dbg !14191
  br label %6, !dbg !14191

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9.227, i32 0, i32 0), %1 ], !dbg !14192
  ret i8* %7, !dbg !14194
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @thread_name_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14195 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14199, metadata !DIExpression()), !dbg !14201
  %2 = icmp eq %struct.k_thread* %0, null, !dbg !14202
  br i1 %2, label %9, label %3, !dbg !14203

3:                                                ; preds = %1
  %4 = tail call i8* @k_thread_name_get(%struct.k_thread* noundef nonnull %0) #25, !dbg !14204
  call void @llvm.dbg.value(metadata i8* %4, metadata !14200, metadata !DIExpression()), !dbg !14201
  %5 = icmp eq i8* %4, null, !dbg !14205
  br i1 %5, label %9, label %6, !dbg !14207

6:                                                ; preds = %3
  %7 = load i8, i8* %4, align 1, !dbg !14208
  %8 = icmp eq i8 %7, 0, !dbg !14209
  br i1 %8, label %9, label %10, !dbg !14210

9:                                                ; preds = %1, %6, %3
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.226, i32 0, i32 0), metadata !14200, metadata !DIExpression()), !dbg !14201
  br label %10, !dbg !14211

10:                                               ; preds = %9, %6
  %11 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.226, i32 0, i32 0), %9 ], [ %4, %6 ], !dbg !14201
  call void @llvm.dbg.value(metadata i8* %11, metadata !14200, metadata !DIExpression()), !dbg !14201
  ret i8* %11, !dbg !14213
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.225(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14214 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14218, metadata !DIExpression()), !dbg !14219
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !14220, !srcloc !14222
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !14223
  ret void, !dbg !14224
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.233() unnamed_addr #11 !dbg !14225 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !14226, !srcloc !14228
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !14229
  ret %struct.k_thread* %1, !dbg !14230
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !14231 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14235, metadata !DIExpression()), !dbg !14238
  call void @llvm.dbg.value(metadata i32 %1, metadata !14236, metadata !DIExpression()), !dbg !14238
  call void @llvm.dbg.value(metadata i32 %2, metadata !14237, metadata !DIExpression()), !dbg !14238
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #25, !dbg !14239
  ret void, !dbg !14240
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !14241 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14245, metadata !DIExpression()), !dbg !14248
  call void @llvm.dbg.value(metadata i8* %1, metadata !14246, metadata !DIExpression()), !dbg !14248
  call void @llvm.dbg.value(metadata i32 %2, metadata !14247, metadata !DIExpression()), !dbg !14248
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #25, !dbg !14249
  ret void, !dbg !14250
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !14251 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #24, !dbg !14252
  ret void, !dbg !14253
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !14254 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14256, metadata !DIExpression()), !dbg !14257
  tail call fastcc void @init_idle_thread(i32 noundef %0) #24, !dbg !14258
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !14259
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !14260
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !14261
  %4 = trunc i32 %0 to i8, !dbg !14262
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !14263
  store i8 %4, i8* %5, align 4, !dbg !14264
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !14265
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #24, !dbg !14266
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !14267
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !14268
  store i8* %8, i8** %9, align 4, !dbg !14269
  ret void, !dbg !14270
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !14271 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14273, metadata !DIExpression()), !dbg !14279
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !14280
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14274, metadata !DIExpression()), !dbg !14279
  %3 = getelementptr inbounds [1 x [4160 x %struct.z_thread_stack_element]], [1 x [4160 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !14281
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !14275, metadata !DIExpression()), !dbg !14279
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.240, i32 0, i32 0), metadata !14278, metadata !DIExpression()), !dbg !14279
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !14282
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !14283
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 4096, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.240, i32 0, i32 0)) #25, !dbg !14284
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #24, !dbg !14285
  ret void, !dbg !14286
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #4 !dbg !14287 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !14291, metadata !DIExpression()), !dbg !14292
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !14293
  ret i8* %2, !dbg !14294
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !14295 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14300, metadata !DIExpression()), !dbg !14301
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14302
  %3 = load i8, i8* %2, align 1, !dbg !14303
  %4 = and i8 %3, -5, !dbg !14303
  store i8 %4, i8* %2, align 1, !dbg !14303
  ret void, !dbg !14304
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #10 !dbg !14305 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #24, !dbg !14308
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #25, !dbg !14309
  %3 = ptrtoint i8* %2 to i32, !dbg !14318
  %4 = add i32 %3, 2048, !dbg !14319
  call void @llvm.dbg.value(metadata i32 %4, metadata !14313, metadata !DIExpression()) #23, !dbg !14320
  call void @llvm.dbg.value(metadata i32 %4, metadata !14321, metadata !DIExpression()) #23, !dbg !14324
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #23, !dbg !14326, !srcloc !14327
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !14328
  %6 = or i32 %5, 512, !dbg !14328
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !14328
  tail call fastcc void @__NVIC_SetPriority.243(i32 noundef -2, i32 noundef 255) #25, !dbg !14329
  tail call fastcc void @__NVIC_SetPriority.243(i32 noundef -5, i32 noundef 0) #25, !dbg !14332
  tail call fastcc void @__NVIC_SetPriority.243(i32 noundef -12, i32 noundef 0) #25, !dbg !14333
  tail call fastcc void @__NVIC_SetPriority.243(i32 noundef -11, i32 noundef 0) #25, !dbg !14334
  tail call fastcc void @__NVIC_SetPriority.243(i32 noundef -10, i32 noundef 0) #25, !dbg !14335
  tail call fastcc void @__NVIC_SetPriority.243(i32 noundef -4, i32 noundef 0) #25, !dbg !14336
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !14337
  %8 = or i32 %7, 458752, !dbg !14337
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !14337
  tail call void @z_arm_fault_init() #25, !dbg !14338
  tail call void @z_arm_cpu_idle_init() #25, !dbg !14339
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !14340
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !14343
  %9 = tail call i32 @z_arm_mpu_init() #25, !dbg !14344
  tail call void @z_arm_configure_static_mpu_regions() #25, !dbg !14345
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !14346
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %10) #23, !dbg !14346
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !14307, metadata !DIExpression()), !dbg !14347
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #24, !dbg !14348
  call void @z_device_state_init() #25, !dbg !14349
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #24, !dbg !14350
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #24, !dbg !14351
  %11 = call fastcc i8* @prepare_multithreading() #24, !dbg !14352
  call fastcc void @switch_to_main_thread(i8* noundef %11) #29, !dbg !14353
  unreachable, !dbg !14353
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2267 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2271, metadata !DIExpression()), !dbg !14354
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !14355
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !14355
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2272, metadata !DIExpression()), !dbg !14354
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2272, metadata !DIExpression()), !dbg !14354
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !14356
  br i1 %7, label %8, label %35, !dbg !14357

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2272, metadata !DIExpression()), !dbg !14354
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !14358
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !14358
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2282, metadata !DIExpression()), !dbg !14359
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !14360
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !14360
  %14 = tail call i32 %13(%struct.device* noundef %11) #25, !dbg !14361
  call void @llvm.dbg.value(metadata i32 %14, metadata !2286, metadata !DIExpression()), !dbg !14359
  %15 = icmp eq %struct.device* %11, null, !dbg !14362
  br i1 %15, label %32, label %16, !dbg !14364

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !14365
  br i1 %17, label %26, label %18, !dbg !14368

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !14369
  call void @llvm.dbg.value(metadata i32 %19, metadata !2286, metadata !DIExpression()), !dbg !14359
  %20 = icmp ult i32 %19, 255, !dbg !14371
  %21 = select i1 %20, i32 %19, i32 255, !dbg !14371
  call void @llvm.dbg.value(metadata i32 %21, metadata !2286, metadata !DIExpression()), !dbg !14359
  %22 = trunc i32 %21 to i8, !dbg !14372
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !14373
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !14373
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !14374
  store i8 %22, i8* %25, align 1, !dbg !14375
  br label %26, !dbg !14376

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !14377
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !14377
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !14378
  %30 = load i8, i8* %29, align 1, !dbg !14379
  %31 = or i8 %30, 1, !dbg !14379
  store i8 %31, i8* %29, align 1, !dbg !14379
  br label %32, !dbg !14380

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !14381
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2272, metadata !DIExpression()), !dbg !14354
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !14356
  br i1 %34, label %8, label %35, !dbg !14357, !llvm.loop !14382

35:                                               ; preds = %32, %1
  ret void, !dbg !14384
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.243(i32 noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !14385 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14387, metadata !DIExpression()), !dbg !14389
  call void @llvm.dbg.value(metadata i32 %1, metadata !14388, metadata !DIExpression()), !dbg !14389
  %3 = trunc i32 %1 to i8, !dbg !14390
  %4 = shl i8 %3, 4, !dbg !14390
  %5 = and i32 %0, 15, !dbg !14393
  %6 = add nsw i32 %5, -4, !dbg !14394
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !14395
  store volatile i8 %4, i8* %7, align 1, !dbg !14396
  ret void, !dbg !14397
}

; Function Attrs: optsize
declare !dbg !14398 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #7 !dbg !14399 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14402, metadata !DIExpression()), !dbg !14403
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14404
  store i8 1, i8* %2, align 1, !dbg !14405
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !14406
  store i8 1, i8* %3, align 4, !dbg !14407
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !14408
  store i32 0, i32* %4, align 4, !dbg !14409
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 1, !dbg !14410
  store i32 0, i32* %5, align 4, !dbg !14411
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, !dbg !14412
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !14413
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14414
  ret void, !dbg !14415
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !14416 {
  tail call void @z_sched_init() #25, !dbg !14421
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14422
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.244, i32 0, i32 0)) #25, !dbg !14423
  call void @llvm.dbg.value(metadata i8* %1, metadata !14420, metadata !DIExpression()), !dbg !14424
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #24, !dbg !14425
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !14426
  tail call void @z_init_cpu(i32 noundef 0) #24, !dbg !14427
  ret i8* %1, !dbg !14428
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #10 !dbg !14429 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14433, metadata !DIExpression()), !dbg !14434
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #25, !dbg !14435
  unreachable, !dbg !14436
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !14437 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14439, metadata !DIExpression()), !dbg !14442
  call void @llvm.dbg.value(metadata i8* %1, metadata !14440, metadata !DIExpression()), !dbg !14442
  call void @llvm.dbg.value(metadata i8* %2, metadata !14441, metadata !DIExpression()), !dbg !14442
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !14443
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #24, !dbg !14444
  tail call void @boot_banner() #25, !dbg !14445
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #24, !dbg !14446
  tail call void @z_init_static_threads() #25, !dbg !14447
  tail call void @main() #25, !dbg !14448
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !14449
  %5 = and i8 %4, -2, !dbg !14449
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !14449
  ret void, !dbg !14450
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #4 !dbg !14451 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !14461, metadata !DIExpression()), !dbg !14463
  call void @llvm.dbg.value(metadata i8* %1, metadata !14462, metadata !DIExpression()), !dbg !14463
  ret void, !dbg !14464
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #4 !dbg !14465 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !14467, metadata !DIExpression()), !dbg !14469
  call void @llvm.dbg.value(metadata i8* %1, metadata !14468, metadata !DIExpression()), !dbg !14469
  ret void, !dbg !14470
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !14471 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !14472, !srcloc !14479
  call void @llvm.dbg.value(metadata i32 %1, metadata !14475, metadata !DIExpression()) #23, !dbg !14480
  %2 = icmp ne i32 %1, 0, !dbg !14481
  ret i1 %2, !dbg !14482
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #9 !dbg !14483 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14484
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !14485
  %3 = load i8, i8* %2, align 4, !dbg !14486
  %4 = or i8 %3, 1, !dbg !14486
  store i8 %4, i8* %2, align 4, !dbg !14486
  ret void, !dbg !14487
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #9 !dbg !14488 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14489
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !14490
  %3 = load i8, i8* %2, align 4, !dbg !14491
  %4 = and i8 %3, -2, !dbg !14491
  store i8 %4, i8* %2, align 4, !dbg !14491
  ret void, !dbg !14492
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #8 !dbg !14493 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14494
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !14495
  %3 = load i8, i8* %2, align 4, !dbg !14495
  %4 = and i8 %3, 1, !dbg !14496
  %5 = icmp ne i8 %4, 0, !dbg !14497
  ret i1 %5, !dbg !14498
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !14499 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14503, metadata !DIExpression()), !dbg !14505
  call void @llvm.dbg.value(metadata i8* %1, metadata !14504, metadata !DIExpression()), !dbg !14505
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !14506
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %0, !dbg !14508
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14503, metadata !DIExpression()), !dbg !14505
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 4, i32 0, !dbg !14509
  %7 = tail call i8* @strncpy(i8* noundef nonnull %6, i8* noundef %1, i32 noundef 31) #25, !dbg !14510
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 4, i32 31, !dbg !14511
  store i8 0, i8* %8, align 1, !dbg !14512
  ret i32 0, !dbg !14513
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local nonnull i8* @k_thread_name_get(%struct.k_thread* noundef readnone %0) local_unnamed_addr #4 !dbg !14514 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14518, metadata !DIExpression()), !dbg !14519
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !14520
  ret i8* %2, !dbg !14521
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !14522 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14526, metadata !DIExpression()), !dbg !14529
  call void @llvm.dbg.value(metadata i8* %1, metadata !14527, metadata !DIExpression()), !dbg !14529
  call void @llvm.dbg.value(metadata i32 %2, metadata !14528, metadata !DIExpression()), !dbg !14529
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !14530
  %5 = tail call i8* @strncpy(i8* noundef %1, i8* noundef nonnull %4, i32 noundef %2) #25, !dbg !14531
  ret i32 0, !dbg !14532
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2297 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2414, metadata !DIExpression()), !dbg !14533
  call void @llvm.dbg.value(metadata i8* %1, metadata !2415, metadata !DIExpression()), !dbg !14533
  call void @llvm.dbg.value(metadata i32 %2, metadata !2416, metadata !DIExpression()), !dbg !14533
  call void @llvm.dbg.value(metadata i32 0, metadata !2417, metadata !DIExpression()), !dbg !14533
  call void @llvm.dbg.value(metadata i8 undef, metadata !2419, metadata !DIExpression()), !dbg !14533
  %4 = icmp eq i8* %1, null, !dbg !14534
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !14536
  br i1 %6, label %46, label %7, !dbg !14536

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14537
  %9 = load i8, i8* %8, align 1, !dbg !14537
  call void @llvm.dbg.value(metadata i8 %9, metadata !2419, metadata !DIExpression()), !dbg !14533
  %10 = add i32 %2, -1, !dbg !14538
  call void @llvm.dbg.value(metadata i32 %10, metadata !2416, metadata !DIExpression()), !dbg !14533
  call void @llvm.dbg.value(metadata i8 0, metadata !2420, metadata !DIExpression()), !dbg !14539
  call void @llvm.dbg.value(metadata i8 %9, metadata !2419, metadata !DIExpression()), !dbg !14533
  call void @llvm.dbg.value(metadata i32 0, metadata !2417, metadata !DIExpression()), !dbg !14533
  %11 = icmp eq i8 %9, 0, !dbg !14540
  br i1 %11, label %12, label %15, !dbg !14542

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !14543
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !14544
  store i8 0, i8* %14, align 1, !dbg !14545
  br label %46, !dbg !14546

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2420, metadata !DIExpression()), !dbg !14539
  call void @llvm.dbg.value(metadata i8 %17, metadata !2419, metadata !DIExpression()), !dbg !14533
  call void @llvm.dbg.value(metadata i32 %18, metadata !2417, metadata !DIExpression()), !dbg !14533
  %19 = zext i8 %17 to i32, !dbg !14547
  %20 = zext i8 %16 to i32, !dbg !14548
  %21 = shl nuw i32 1, %20, !dbg !14548
  call void @llvm.dbg.value(metadata i32 %21, metadata !2418, metadata !DIExpression()), !dbg !14533
  %22 = and i32 %21, %19, !dbg !14550
  %23 = icmp eq i32 %22, 0, !dbg !14552
  br i1 %23, label %42, label %24, !dbg !14553

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !14554
  %26 = sub i32 %10, %18, !dbg !14555
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !14556
  %28 = load i8*, i8** %27, align 4, !dbg !14556
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !14557
  %30 = load i32, i32* %29, align 4, !dbg !14557
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #24, !dbg !14558
  %32 = add i32 %31, %18, !dbg !14559
  call void @llvm.dbg.value(metadata i32 %32, metadata !2417, metadata !DIExpression()), !dbg !14533
  %33 = trunc i32 %21 to i8, !dbg !14560
  %34 = xor i8 %33, -1, !dbg !14560
  %35 = and i8 %17, %34, !dbg !14560
  call void @llvm.dbg.value(metadata i8 %35, metadata !2419, metadata !DIExpression()), !dbg !14533
  %36 = icmp eq i8 %35, 0, !dbg !14561
  br i1 %36, label %12, label %37, !dbg !14563

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !14564
  %39 = sub i32 %10, %32, !dbg !14566
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.249, i32 0, i32 0), i32 noundef 1) #24, !dbg !14567
  %41 = add i32 %40, %32, !dbg !14568
  call void @llvm.dbg.value(metadata i32 %41, metadata !2417, metadata !DIExpression()), !dbg !14533
  br label %42, !dbg !14569

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !14533
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !14533
  call void @llvm.dbg.value(metadata i8 %44, metadata !2419, metadata !DIExpression()), !dbg !14533
  call void @llvm.dbg.value(metadata i32 %43, metadata !2417, metadata !DIExpression()), !dbg !14533
  %45 = add i8 %16, 1, !dbg !14570
  call void @llvm.dbg.value(metadata i8 %45, metadata !2420, metadata !DIExpression()), !dbg !14539
  br label %15, !dbg !14542

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.250, i32 0, i32 0), %3 ], !dbg !14533
  ret i8* %47, !dbg !14571
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !14572 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14576, metadata !DIExpression()), !dbg !14581
  call void @llvm.dbg.value(metadata i32 %1, metadata !14577, metadata !DIExpression()), !dbg !14581
  call void @llvm.dbg.value(metadata i8* %2, metadata !14578, metadata !DIExpression()), !dbg !14581
  call void @llvm.dbg.value(metadata i32 %3, metadata !14579, metadata !DIExpression()), !dbg !14581
  %5 = icmp ult i32 %1, %3, !dbg !14582
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !14582
  call void @llvm.dbg.value(metadata i32 %6, metadata !14580, metadata !DIExpression()), !dbg !14581
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #25, !dbg !14583
  ret i32 %6, !dbg !14584
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14585 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14589, metadata !DIExpression()), !dbg !14590
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #25, !dbg !14591
  ret void, !dbg !14592
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef %9) local_unnamed_addr #1 !dbg !14593 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14602, metadata !DIExpression()), !dbg !14613
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14603, metadata !DIExpression()), !dbg !14613
  call void @llvm.dbg.value(metadata i32 %2, metadata !14604, metadata !DIExpression()), !dbg !14613
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14605, metadata !DIExpression()), !dbg !14613
  call void @llvm.dbg.value(metadata i8* %4, metadata !14606, metadata !DIExpression()), !dbg !14613
  call void @llvm.dbg.value(metadata i8* %5, metadata !14607, metadata !DIExpression()), !dbg !14613
  call void @llvm.dbg.value(metadata i8* %6, metadata !14608, metadata !DIExpression()), !dbg !14613
  call void @llvm.dbg.value(metadata i32 %7, metadata !14609, metadata !DIExpression()), !dbg !14613
  call void @llvm.dbg.value(metadata i32 %8, metadata !14610, metadata !DIExpression()), !dbg !14613
  call void @llvm.dbg.value(metadata i8* %9, metadata !14611, metadata !DIExpression()), !dbg !14613
  %11 = icmp eq i32 %7, 15, !dbg !14614
  br i1 %11, label %12, label %15, !dbg !14614

12:                                               ; preds = %10
  %13 = bitcast void (i8*, i8*, i8*)* %3 to i8*, !dbg !14614
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef %13) #24, !dbg !14614
  br i1 %14, label %19, label %18, !dbg !14614

15:                                               ; preds = %10
  %16 = add i32 %7, 16, !dbg !14614
  %17 = icmp ult i32 %16, 31, !dbg !14614
  br i1 %17, label %19, label %18, !dbg !14614

18:                                               ; preds = %12, %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([128 x i8], [128 x i8]* @.str.10.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.264, i32 0, i32 0), i32 noundef 536) #25, !dbg !14618
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.12.265, i32 0, i32 0), i32 noundef %7, i32 noundef 14, i32 noundef -16) #25, !dbg !14618
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.264, i32 0, i32 0), i32 noundef 536) #25, !dbg !14618
  unreachable, !dbg !14618

19:                                               ; preds = %15, %12
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !14620
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %20) #24, !dbg !14621
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !14622
  tail call void @z_init_thread_base(%struct._thread_base* noundef %21, i32 noundef %7, i32 noundef 4, i32 noundef %8) #24, !dbg !14623
  %22 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #24, !dbg !14624
  call void @llvm.dbg.value(metadata i8* %22, metadata !14612, metadata !DIExpression()), !dbg !14613
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %22, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #25, !dbg !14625
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !14626
  store i8* null, i8** %23, align 4, !dbg !14627
  %24 = icmp eq i8* %9, null, !dbg !14628
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !14630
  br i1 %24, label %29, label %26, !dbg !14631

26:                                               ; preds = %19
  %27 = tail call i8* @strncpy(i8* noundef nonnull %25, i8* noundef nonnull %9, i32 noundef 31) #25, !dbg !14632
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 31, !dbg !14634
  store i8 0, i8* %28, align 1, !dbg !14635
  br label %30, !dbg !14636

29:                                               ; preds = %19
  store i8 0, i8* %25, align 8, !dbg !14637
  br label %30

30:                                               ; preds = %29, %26
  %31 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14639
  %32 = icmp eq %struct.k_thread* %31, null, !dbg !14639
  br i1 %32, label %36, label %33, !dbg !14641

33:                                               ; preds = %30
  %34 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %31, i32 0, i32 7, !dbg !14642
  %35 = load %struct.k_heap*, %struct.k_heap** %34, align 8, !dbg !14642
  br label %36, !dbg !14643

36:                                               ; preds = %30, %33
  %37 = phi %struct.k_heap* [ %35, %33 ], [ null, %30 ], !dbg !14613
  %38 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, !dbg !14644
  store %struct.k_heap* %37, %struct.k_heap** %38, align 8, !dbg !14646
  ret i8* %22, !dbg !14647
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef readnone %0) unnamed_addr #4 !dbg !14648 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14652, metadata !DIExpression()), !dbg !14653
  %2 = icmp eq i8* %0, bitcast (void (i8*, i8*, i8*)* @idle to i8*), !dbg !14654
  ret i1 %2, !dbg !14655
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #7 !dbg !14656 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14661, metadata !DIExpression()), !dbg !14662
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !14663
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #24, !dbg !14664
  ret void, !dbg !14665
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #7 !dbg !14666 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14671, metadata !DIExpression()), !dbg !14675
  call void @llvm.dbg.value(metadata i32 %1, metadata !14672, metadata !DIExpression()), !dbg !14675
  call void @llvm.dbg.value(metadata i32 %2, metadata !14673, metadata !DIExpression()), !dbg !14675
  call void @llvm.dbg.value(metadata i32 %3, metadata !14674, metadata !DIExpression()), !dbg !14675
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !14676
  store %union.anon* null, %union.anon** %5, align 8, !dbg !14677
  %6 = trunc i32 %3 to i8, !dbg !14678
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !14679
  store i8 %6, i8* %7, align 4, !dbg !14680
  %8 = trunc i32 %2 to i8, !dbg !14681
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !14682
  store i8 %8, i8* %9, align 1, !dbg !14683
  %10 = trunc i32 %1 to i8, !dbg !14684
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !14685
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !14685
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !14685
  store i8 %10, i8* %13, align 2, !dbg !14686
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !14687
  store i8 0, i8* %14, align 1, !dbg !14688
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #24, !dbg !14689
  ret void, !dbg !14690
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !14691 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14695, metadata !DIExpression()), !dbg !14703
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14696, metadata !DIExpression()), !dbg !14703
  call void @llvm.dbg.value(metadata i32 %2, metadata !14697, metadata !DIExpression()), !dbg !14703
  call void @llvm.dbg.value(metadata i32 0, metadata !14702, metadata !DIExpression()), !dbg !14703
  %4 = add i32 %2, 7, !dbg !14704
  %5 = and i32 %4, -8, !dbg !14704
  %6 = add i32 %5, 64, !dbg !14704
  call void @llvm.dbg.value(metadata i32 %6, metadata !14698, metadata !DIExpression()), !dbg !14703
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.266(%struct.z_thread_stack_element* noundef %1) #24, !dbg !14706
  call void @llvm.dbg.value(metadata i8* %7, metadata !14701, metadata !DIExpression()), !dbg !14703
  call void @llvm.dbg.value(metadata i32 %5, metadata !14699, metadata !DIExpression()), !dbg !14703
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !14707
  call void @llvm.dbg.value(metadata i8* %8, metadata !14700, metadata !DIExpression()), !dbg !14703
  call void @llvm.dbg.value(metadata i32 0, metadata !14702, metadata !DIExpression()), !dbg !14703
  %9 = ptrtoint i8* %7 to i32, !dbg !14708
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !14709
  store i32 %9, i32* %10, align 4, !dbg !14710
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 1, !dbg !14711
  store i32 %5, i32* %11, align 4, !dbg !14712
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 2, !dbg !14713
  store i32 0, i32* %12, align 4, !dbg !14714
  call void @llvm.dbg.value(metadata i8* %8, metadata !14700, metadata !DIExpression()), !dbg !14703
  ret i8* %8, !dbg !14715
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.266(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #4 !dbg !14716 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !14720, metadata !DIExpression()), !dbg !14721
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !14722
  ret i8* %2, !dbg !14723
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !14724 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14729, metadata !DIExpression()), !dbg !14730
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !14731
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !14732
  ret void, !dbg !14733
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !14734 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14736, metadata !DIExpression()), !dbg !14737
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14738
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #24, !dbg !14739
  ret void, !dbg !14740
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !14741 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14745, metadata !DIExpression()), !dbg !14746
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14747
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14748
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14749
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14750
  ret void, !dbg !14751
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !14752 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14757, metadata !DIExpression()), !dbg !14758
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14759
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14760
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14761
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14762
  ret void, !dbg !14763
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !14764 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14781, metadata !DIExpression()), !dbg !14782
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14772, metadata !DIExpression()), !dbg !14782
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14773, metadata !DIExpression()), !dbg !14782
  call void @llvm.dbg.value(metadata i32 %2, metadata !14774, metadata !DIExpression()), !dbg !14782
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14775, metadata !DIExpression()), !dbg !14782
  call void @llvm.dbg.value(metadata i8* %4, metadata !14776, metadata !DIExpression()), !dbg !14782
  call void @llvm.dbg.value(metadata i8* %5, metadata !14777, metadata !DIExpression()), !dbg !14782
  call void @llvm.dbg.value(metadata i8* %6, metadata !14778, metadata !DIExpression()), !dbg !14782
  call void @llvm.dbg.value(metadata i32 %7, metadata !14779, metadata !DIExpression()), !dbg !14782
  call void @llvm.dbg.value(metadata i32 %8, metadata !14780, metadata !DIExpression()), !dbg !14782
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !14783, !srcloc !14479
  call void @llvm.dbg.value(metadata i32 %11, metadata !14475, metadata !DIExpression()) #23, !dbg !14788
  %12 = icmp eq i32 %11, 0, !dbg !14789
  br i1 %12, label %14, label %13, !dbg !14790

13:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.264, i32 0, i32 0), i32 noundef 647) #25, !dbg !14791
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.14.270, i32 0, i32 0)) #25, !dbg !14791
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.264, i32 0, i32 0), i32 noundef 647) #25, !dbg !14791
  unreachable, !dbg !14791

14:                                               ; preds = %10
  %15 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %15, metadata !14781, metadata !DIExpression()), !dbg !14782
  %16 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef null) #24, !dbg !14793
  %17 = icmp eq i64 %15, -1, !dbg !14794
  br i1 %17, label %19, label %18, !dbg !14796

18:                                               ; preds = %14
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #24, !dbg !14797
  br label %19, !dbg !14799

19:                                               ; preds = %18, %14
  ret %struct.k_thread* %0, !dbg !14800
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14801 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !14806, metadata !DIExpression()), !dbg !14807
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14805, metadata !DIExpression()), !dbg !14807
  %4 = icmp eq i64 %3, 0, !dbg !14808
  br i1 %4, label %5, label %6, !dbg !14810

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start.271(%struct.k_thread* noundef %0) #24, !dbg !14811
  br label %7, !dbg !14813

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !14814
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !14816
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start.271(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14817 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14821, metadata !DIExpression()), !dbg !14822
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !14823, !srcloc !14825
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #24, !dbg !14826
  ret void, !dbg !14827
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14828 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14831, metadata !DIExpression()), !dbg !14832
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14830, metadata !DIExpression()), !dbg !14832
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14833
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !14834
  ret void, !dbg !14835
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !14836 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14838, metadata !DIExpression()), !dbg !14858
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %1, label %2, !dbg !14859

1:                                                ; preds = %6, %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.274, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.264, i32 0, i32 0), i32 noundef 750) #25, !dbg !14863
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.275, i32 0, i32 0)) #25, !dbg !14863
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.264, i32 0, i32 0), i32 noundef 750) #25, !dbg !14863
  unreachable, !dbg !14863

2:                                                ; preds = %0, %6
  %3 = phi %struct._static_thread_data* [ %31, %6 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !14838, metadata !DIExpression()), !dbg !14858
  %4 = icmp ult %struct._static_thread_data* %3, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14866
  br i1 %4, label %6, label %5, !dbg !14867

5:                                                ; preds = %2
  tail call void @k_sched_lock() #25, !dbg !14868
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14856, metadata !DIExpression()), !dbg !14869
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %33, label %34, !dbg !14870

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !14874
  %8 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !14874
  %9 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !14876
  %10 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %9, align 4, !dbg !14876
  %11 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !14877
  %12 = load i32, i32* %11, align 4, !dbg !14877
  %13 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !14878
  %14 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %13, align 4, !dbg !14878
  %15 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !14879
  %16 = load i8*, i8** %15, align 4, !dbg !14879
  %17 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !14880
  %18 = load i8*, i8** %17, align 4, !dbg !14880
  %19 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !14881
  %20 = load i8*, i8** %19, align 4, !dbg !14881
  %21 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !14882
  %22 = load i32, i32* %21, align 4, !dbg !14882
  %23 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !14883
  %24 = load i32, i32* %23, align 4, !dbg !14883
  %25 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 11, !dbg !14884
  %26 = load i8*, i8** %25, align 4, !dbg !14884
  %27 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %8, %struct.z_thread_stack_element* noundef %10, i32 noundef %12, void (i8*, i8*, i8*)* noundef %14, i8* noundef %16, i8* noundef %18, i8* noundef %20, i32 noundef %22, i32 noundef %24, i8* noundef %26) #24, !dbg !14885
  %28 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !14886
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 2, !dbg !14887
  %30 = bitcast i8** %29 to %struct._static_thread_data**, !dbg !14888
  store %struct._static_thread_data* %3, %struct._static_thread_data** %30, align 4, !dbg !14888
  %31 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !14889
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !14838, metadata !DIExpression()), !dbg !14858
  %32 = icmp ugt %struct._static_thread_data* %31, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14890
  br i1 %32, label %1, label %2, !dbg !14859, !llvm.loop !14891

33:                                               ; preds = %50, %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.274, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.264, i32 0, i32 0), i32 noundef 781) #25, !dbg !14893
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.275, i32 0, i32 0)) #25, !dbg !14893
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.264, i32 0, i32 0), i32 noundef 781) #25, !dbg !14893
  unreachable, !dbg !14893

34:                                               ; preds = %5, %50
  %35 = phi %struct._static_thread_data* [ %51, %50 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %5 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %35, metadata !14856, metadata !DIExpression()), !dbg !14869
  %36 = icmp ult %struct._static_thread_data* %35, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14896
  br i1 %36, label %38, label %37, !dbg !14897

37:                                               ; preds = %34
  tail call void @k_sched_unlock() #25, !dbg !14898
  ret void, !dbg !14899

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 0, i32 9, !dbg !14900
  %40 = load i32, i32* %39, align 4, !dbg !14900
  %41 = icmp eq i32 %40, -1, !dbg !14903
  br i1 %41, label %50, label %42, !dbg !14904

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 0, i32 0, !dbg !14905
  %44 = load %struct.k_thread*, %struct.k_thread** %43, align 4, !dbg !14905
  %45 = icmp sgt i32 %40, 0, !dbg !14907
  %46 = select i1 %45, i32 %40, i32 0, !dbg !14907
  %47 = zext i32 %46 to i64, !dbg !14907
  %48 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %47) #24, !dbg !14907
  %49 = insertvalue [1 x i64] poison, i64 %48, 0, !dbg !14908
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %44, [1 x i64] %49) #24, !dbg !14908
  br label %50, !dbg !14909

50:                                               ; preds = %38, %42
  %51 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 1, !dbg !14910
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %51, metadata !14856, metadata !DIExpression()), !dbg !14869
  %52 = icmp ugt %struct._static_thread_data* %51, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14911
  br i1 %52, label %33, label %34, !dbg !14870, !llvm.loop !14912
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #4 !dbg !14914 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14918, metadata !DIExpression()), !dbg !14919
  call void @llvm.dbg.value(metadata i64 %0, metadata !14920, metadata !DIExpression()), !dbg !14935
  call void @llvm.dbg.value(metadata i32 1000, metadata !14923, metadata !DIExpression()), !dbg !14935
  call void @llvm.dbg.value(metadata i32 10000, metadata !14924, metadata !DIExpression()), !dbg !14935
  call void @llvm.dbg.value(metadata i8 1, metadata !14925, metadata !DIExpression()), !dbg !14935
  call void @llvm.dbg.value(metadata i8 0, metadata !14926, metadata !DIExpression()), !dbg !14935
  call void @llvm.dbg.value(metadata i8 1, metadata !14927, metadata !DIExpression()), !dbg !14935
  call void @llvm.dbg.value(metadata i8 0, metadata !14928, metadata !DIExpression()), !dbg !14935
  call void @llvm.dbg.value(metadata i8 1, metadata !14929, metadata !DIExpression()), !dbg !14935
  call void @llvm.dbg.value(metadata i8 0, metadata !14930, metadata !DIExpression()), !dbg !14935
  call void @llvm.dbg.value(metadata i64 0, metadata !14931, metadata !DIExpression()), !dbg !14935
  call void @llvm.dbg.value(metadata i64 0, metadata !14931, metadata !DIExpression()), !dbg !14935
  %2 = mul i64 %0, 10, !dbg !14937
  ret i64 %2, !dbg !14943
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #10 !dbg !14944 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !14946, metadata !DIExpression()), !dbg !14950
  call void @llvm.dbg.value(metadata i8* %1, metadata !14947, metadata !DIExpression()), !dbg !14950
  call void @llvm.dbg.value(metadata i8* %2, metadata !14948, metadata !DIExpression()), !dbg !14950
  call void @llvm.dbg.value(metadata i8* %3, metadata !14949, metadata !DIExpression()), !dbg !14950
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14951
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !14952
  %7 = load i8, i8* %6, align 4, !dbg !14953
  %8 = or i8 %7, 4, !dbg !14953
  store i8 %8, i8* %6, align 4, !dbg !14953
  tail call void @z_thread_essential_clear() #24, !dbg !14954
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !14955
  unreachable, !dbg !14955
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !14956 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14961, metadata !DIExpression()), !dbg !14963
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !14964
  %3 = load i32, i32* %2, align 4, !dbg !14964
  call void @llvm.dbg.value(metadata i32 %3, metadata !14962, metadata !DIExpression()), !dbg !14963
  %4 = icmp eq i32 %3, 0, !dbg !14965
  br i1 %4, label %10, label %5, !dbg !14967

5:                                                ; preds = %1
  %6 = and i32 %3, 3, !dbg !14968
  %7 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !14971
  %8 = zext i8 %7 to i32, !dbg !14972
  %9 = icmp eq i32 %6, %8, !dbg !14973
  br i1 %9, label %11, label %10, !dbg !14974

10:                                               ; preds = %5, %1
  br label %11, !dbg !14975

11:                                               ; preds = %5, %10
  %12 = phi i1 [ true, %10 ], [ false, %5 ], !dbg !14963
  ret i1 %12, !dbg !14976
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* nocapture noundef %0) local_unnamed_addr #9 !dbg !14977 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14979, metadata !DIExpression()), !dbg !14980
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !14981
  %3 = load i32, i32* %2, align 4, !dbg !14981
  %4 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !14983
  %5 = zext i8 %4 to i32, !dbg !14984
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14985
  %7 = ptrtoint %struct.k_thread* %6 to i32, !dbg !14986
  %8 = or i32 %7, %5, !dbg !14987
  %9 = icmp eq i32 %3, %8, !dbg !14988
  br i1 %9, label %10, label %11, !dbg !14989

10:                                               ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !14990
  br label %11, !dbg !14991

11:                                               ; preds = %1, %10
  ret i1 %9, !dbg !14992
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_spin_lock_set_owner(%struct.k_spinlock* nocapture noundef writeonly %0) local_unnamed_addr #9 !dbg !14993 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14997, metadata !DIExpression()), !dbg !14998
  %2 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !14999
  %3 = zext i8 %2 to i32, !dbg !15000
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15001
  %5 = ptrtoint %struct.k_thread* %4 to i32, !dbg !15002
  %6 = or i32 %5, %3, !dbg !15003
  %7 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !15004
  store i32 %6, i32* %7, align 4, !dbg !15005
  ret void, !dbg !15006
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #4 !dbg !15007 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15011, metadata !DIExpression()), !dbg !15012
  ret i32 -134, !dbg !15013
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #4 !dbg !15014 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15018, metadata !DIExpression()), !dbg !15020
  call void @llvm.dbg.value(metadata i32 %1, metadata !15019, metadata !DIExpression()), !dbg !15020
  ret i32 -134, !dbg !15021
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct._cpu_arch* noundef readnone %1) local_unnamed_addr #4 !dbg !15022 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15029, metadata !DIExpression()), !dbg !15031
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %1, metadata !15030, metadata !DIExpression()), !dbg !15031
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !15032
  %4 = icmp eq %struct._cpu_arch* %1, null
  %5 = or i1 %3, %4, !dbg !15034
  %6 = select i1 %5, i32 -22, i32 0, !dbg !15031
  ret i32 %6, !dbg !15035
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct._cpu_arch* noundef readnone %0) local_unnamed_addr #4 !dbg !15036 {
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %0, metadata !15040, metadata !DIExpression()), !dbg !15041
  %2 = icmp eq %struct._cpu_arch* %0, null, !dbg !15042
  %3 = select i1 %2, i32 -22, i32 0, !dbg !15041
  ret i32 %3, !dbg !15044
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !15045 {
  tail call void @sys_clock_idle_exit() #25, !dbg !15047
  ret void, !dbg !15048
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #10 !dbg !15049 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15051, metadata !DIExpression()), !dbg !15054
  call void @llvm.dbg.value(metadata i8* %1, metadata !15052, metadata !DIExpression()), !dbg !15054
  call void @llvm.dbg.value(metadata i8* %2, metadata !15053, metadata !DIExpression()), !dbg !15054
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15055
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !15055
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !15055
  %7 = load i8, i8* %6, align 2, !dbg !15055
  %8 = icmp sgt i8 %7, -1, !dbg !15055
  br i1 %8, label %10, label %9, !dbg !15058

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.286, i32 0, i32 0), i32 noundef 39) #25, !dbg !15059
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.286, i32 0, i32 0), i32 noundef 39) #25, !dbg !15059
  unreachable, !dbg !15059

10:                                               ; preds = %3, %10
  %11 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15061, !srcloc !15068
  call void @llvm.dbg.value(metadata i32 undef, metadata !15064, metadata !DIExpression()) #23, !dbg !15069
  call void @llvm.dbg.value(metadata i32 undef, metadata !15065, metadata !DIExpression()) #23, !dbg !15069
  tail call fastcc void @k_cpu_idle() #24, !dbg !15070
  br label %10, !dbg !15071, !llvm.loop !15072
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !15074 {
  tail call void @arch_cpu_idle() #25, !dbg !15075
  ret void, !dbg !15076
}

; Function Attrs: optsize
declare !dbg !15077 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !15078 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15082, metadata !DIExpression()), !dbg !15086
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15083, metadata !DIExpression()), !dbg !15086
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15087
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !15087
  %5 = load i8, i8* %4, align 2, !dbg !15087
  call void @llvm.dbg.value(metadata i8 %5, metadata !15084, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !15086
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !15088
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !15088
  %8 = load i8, i8* %7, align 2, !dbg !15088
  call void @llvm.dbg.value(metadata i8 %8, metadata !15085, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !15086
  %9 = icmp eq i8 %8, %5, !dbg !15089
  %10 = sext i8 %5 to i32, !dbg !15091
  %11 = sext i8 %8 to i32, !dbg !15091
  %12 = sub nsw i32 %11, %10, !dbg !15091
  %13 = select i1 %9, i32 0, i32 %12, !dbg !15091
  ret i32 %13, !dbg !15092
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !15093 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !15097, metadata !DIExpression()), !dbg !15098
  %2 = tail call fastcc i32 @slice_time() #24, !dbg !15099
  %3 = icmp eq i32 %2, 0, !dbg !15101
  br i1 %3, label %8, label %4, !dbg !15102

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #25, !dbg !15103
  %6 = add i32 %5, %2, !dbg !15105
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15106
  %7 = tail call fastcc i32 @slice_time() #24, !dbg !15107
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #25, !dbg !15108
  br label %8, !dbg !15109

8:                                                ; preds = %4, %1
  ret void, !dbg !15110
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #8 !dbg !15111 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !15115, metadata !DIExpression()), !dbg !15117
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !15118
  call void @llvm.dbg.value(metadata i32 %1, metadata !15116, metadata !DIExpression()), !dbg !15117
  ret i32 %1, !dbg !15119
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15120 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15124, metadata !DIExpression()), !dbg !15133
  call void @llvm.dbg.value(metadata i32 %1, metadata !15125, metadata !DIExpression()), !dbg !15133
  call void @llvm.dbg.value(metadata i32 0, metadata !15126, metadata !DIExpression()), !dbg !15134
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15135, metadata !DIExpression()) #23, !dbg !15142
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15144, !srcloc !15150
  call void @llvm.dbg.value(metadata i32 undef, metadata !15147, metadata !DIExpression()) #23, !dbg !15151
  call void @llvm.dbg.value(metadata i32 undef, metadata !15148, metadata !DIExpression()) #23, !dbg !15151
  call void @llvm.dbg.value(metadata i32 undef, metadata !15141, metadata !DIExpression()) #23, !dbg !15142
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15152
  br i1 %4, label %6, label %5, !dbg !15155

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !15156
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15156
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !15156
  unreachable, !dbg !15156

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !15147, metadata !DIExpression()) #23, !dbg !15151
  call void @llvm.dbg.value(metadata i32 undef, metadata !15141, metadata !DIExpression()) #23, !dbg !15142
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15158
  call void @llvm.dbg.value(metadata i32 undef, metadata !15132, metadata !DIExpression()), !dbg !15134
  call void @llvm.dbg.value(metadata i32 undef, metadata !15126, metadata !DIExpression()), !dbg !15134
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15159
  %7 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #24, !dbg !15162
  %8 = icmp sgt i32 %0, 0, !dbg !15163
  %9 = icmp sgt i32 %7, 2, !dbg !15165
  %10 = select i1 %9, i32 %7, i32 2, !dbg !15165
  %11 = select i1 %8, i32 %10, i32 %7, !dbg !15165
  store i32 %11, i32* @slice_ticks, align 4, !dbg !15166
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !15167
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !15168
  call void @llvm.dbg.value(metadata i32 undef, metadata !15169, metadata !DIExpression()) #23, !dbg !15175
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15174, metadata !DIExpression()) #23, !dbg !15175
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15177
  br i1 %12, label %14, label %13, !dbg !15180

13:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !15181
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.292, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15181
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !15181
  unreachable, !dbg !15181

14:                                               ; preds = %6
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !15144
  call void @llvm.dbg.value(metadata i32 %15, metadata !15147, metadata !DIExpression()) #23, !dbg !15151
  call void @llvm.dbg.value(metadata i32 %15, metadata !15141, metadata !DIExpression()) #23, !dbg !15142
  call void @llvm.dbg.value(metadata i32 %15, metadata !15132, metadata !DIExpression()), !dbg !15134
  call void @llvm.dbg.value(metadata i32 undef, metadata !15169, metadata !DIExpression()) #23, !dbg !15175
  call void @llvm.dbg.value(metadata i32 undef, metadata !15183, metadata !DIExpression()) #23, !dbg !15186
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !15188, !srcloc !15189
  call void @llvm.dbg.value(metadata i32 1, metadata !15126, metadata !DIExpression()), !dbg !15134
  call void @llvm.dbg.value(metadata i32 undef, metadata !15126, metadata !DIExpression()), !dbg !15134
  ret void, !dbg !15190
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #4 !dbg !15191 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15193, metadata !DIExpression()), !dbg !15194
  call void @llvm.dbg.value(metadata i32 %0, metadata !15195, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15210
  call void @llvm.dbg.value(metadata i32 1000, metadata !15198, metadata !DIExpression()), !dbg !15210
  call void @llvm.dbg.value(metadata i32 10000, metadata !15199, metadata !DIExpression()), !dbg !15210
  call void @llvm.dbg.value(metadata i8 1, metadata !15200, metadata !DIExpression()), !dbg !15210
  call void @llvm.dbg.value(metadata i1 true, metadata !15201, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15210
  call void @llvm.dbg.value(metadata i1 true, metadata !15202, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15210
  call void @llvm.dbg.value(metadata i8 0, metadata !15203, metadata !DIExpression()), !dbg !15210
  call void @llvm.dbg.value(metadata i1 true, metadata !15204, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15210
  call void @llvm.dbg.value(metadata i1 false, metadata !15205, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15210
  call void @llvm.dbg.value(metadata i64 0, metadata !15206, metadata !DIExpression()), !dbg !15210
  call void @llvm.dbg.value(metadata i64 0, metadata !15206, metadata !DIExpression()), !dbg !15210
  %2 = mul i32 %0, 10, !dbg !15212
  ret i32 %2, !dbg !15218
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !15219 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15221, metadata !DIExpression()), !dbg !15223
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15135, metadata !DIExpression()) #23, !dbg !15224
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15226, !srcloc !15150
  call void @llvm.dbg.value(metadata i32 undef, metadata !15147, metadata !DIExpression()) #23, !dbg !15228
  call void @llvm.dbg.value(metadata i32 undef, metadata !15148, metadata !DIExpression()) #23, !dbg !15228
  call void @llvm.dbg.value(metadata i32 undef, metadata !15141, metadata !DIExpression()) #23, !dbg !15224
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15229
  br i1 %3, label %5, label %4, !dbg !15230

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !15231
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15231
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !15231
  unreachable, !dbg !15231

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !15226
  call void @llvm.dbg.value(metadata i32 %6, metadata !15147, metadata !DIExpression()) #23, !dbg !15228
  call void @llvm.dbg.value(metadata i32 %6, metadata !15141, metadata !DIExpression()) #23, !dbg !15224
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15232
  call void @llvm.dbg.value(metadata i32 %6, metadata !15222, metadata !DIExpression()), !dbg !15223
  %7 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !15233
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15235
  %9 = icmp eq %struct.k_thread* %7, %8, !dbg !15236
  br i1 %9, label %10, label %14, !dbg !15237

10:                                               ; preds = %5
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !15238
  call void @llvm.dbg.value(metadata i32 undef, metadata !15169, metadata !DIExpression()) #23, !dbg !15240
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15174, metadata !DIExpression()) #23, !dbg !15240
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15242
  br i1 %11, label %13, label %12, !dbg !15243

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !15244
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.292, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15244
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !15244
  unreachable, !dbg !15244

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %6, metadata !15169, metadata !DIExpression()) #23, !dbg !15240
  call void @llvm.dbg.value(metadata i32 %6, metadata !15183, metadata !DIExpression()) #23, !dbg !15245
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !15247, !srcloc !15189
  br label %33, !dbg !15248

14:                                               ; preds = %5
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !15249
  %15 = tail call fastcc i32 @slice_time() #24, !dbg !15250
  %16 = icmp eq i32 %15, 0, !dbg !15250
  br i1 %16, label %27, label %17, !dbg !15252

17:                                               ; preds = %14
  %18 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %8) #24, !dbg !15253
  br i1 %18, label %19, label %27, !dbg !15254

19:                                               ; preds = %17
  %20 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15255
  %21 = icmp sgt i32 %20, %0, !dbg !15258
  br i1 %21, label %25, label %22, !dbg !15259

22:                                               ; preds = %19
  %23 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !15260
  %24 = tail call fastcc i32 @slice_expired_locked([1 x i32] %23) #24, !dbg !15260
  call void @llvm.dbg.value(metadata i32 %24, metadata !15222, metadata !DIExpression()), !dbg !15223
  br label %28, !dbg !15262

25:                                               ; preds = %19
  %26 = sub nsw i32 %20, %0, !dbg !15263
  store i32 %26, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15263
  br label %28

27:                                               ; preds = %17, %14
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15265
  br label %28

28:                                               ; preds = %22, %25, %27
  %29 = phi i32 [ %24, %22 ], [ %6, %25 ], [ %6, %27 ], !dbg !15223
  call void @llvm.dbg.value(metadata i32 %29, metadata !15222, metadata !DIExpression()), !dbg !15223
  call void @llvm.dbg.value(metadata i32 undef, metadata !15169, metadata !DIExpression()) #23, !dbg !15267
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15174, metadata !DIExpression()) #23, !dbg !15267
  %30 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15269
  br i1 %30, label %32, label %31, !dbg !15270

31:                                               ; preds = %28
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !15271
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.292, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15271
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !15271
  unreachable, !dbg !15271

32:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %29, metadata !15169, metadata !DIExpression()) #23, !dbg !15267
  call void @llvm.dbg.value(metadata i32 %29, metadata !15183, metadata !DIExpression()) #23, !dbg !15272
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %29) #23, !dbg !15274, !srcloc !15189
  br label %33, !dbg !15275

33:                                               ; preds = %32, %13
  ret void, !dbg !15275
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #8 !dbg !15276 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15280, metadata !DIExpression()), !dbg !15282
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #24, !dbg !15283
  %3 = icmp eq i32 %2, 0, !dbg !15283
  br i1 %3, label %16, label %4, !dbg !15284

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !15285
  br i1 %5, label %16, label %6, !dbg !15286

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15287
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !15287
  %9 = load i8, i8* %8, align 2, !dbg !15287
  %10 = sext i8 %9 to i32, !dbg !15288
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !15289
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #24, !dbg !15290
  br i1 %12, label %16, label %13, !dbg !15291

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #24, !dbg !15292
  %15 = xor i1 %14, true, !dbg !15293
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !15282
  call void @llvm.dbg.value(metadata i1 %17, metadata !15281, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15282
  ret i1 %17, !dbg !15294
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !15295 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15299, metadata !DIExpression()), !dbg !15301
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15302
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15300, metadata !DIExpression()), !dbg !15301
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #24, !dbg !15303
  br i1 %3, label %5, label %4, !dbg !15305

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #24, !dbg !15306
  br label %5, !dbg !15308

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !15299, metadata !DIExpression()), !dbg !15301
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !15309
  ret i32 %6, !dbg !15310
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15311 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15313, metadata !DIExpression()), !dbg !15315
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15316
  %3 = load i8, i8* %2, align 1, !dbg !15316
  call void @llvm.dbg.value(metadata i8 %3, metadata !15314, metadata !DIExpression()), !dbg !15315
  %4 = and i8 %3, 31, !dbg !15317
  %5 = icmp ne i8 %4, 0, !dbg !15318
  ret i1 %5, !dbg !15319
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15320 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15322, metadata !DIExpression()), !dbg !15323
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !15324
  br i1 %2, label %3, label %7, !dbg !15326

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15327, metadata !DIExpression()) #23, !dbg !15330
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15333
  %5 = load i8, i8* %4, align 1, !dbg !15334
  %6 = and i8 %5, 127, !dbg !15334
  store i8 %6, i8* %4, align 1, !dbg !15334
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15335, metadata !DIExpression()) #23, !dbg !15338
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15342
  br label %7, !dbg !15343

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15344, metadata !DIExpression()) #23, !dbg !15347
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15349
  %9 = load i8, i8* %8, align 1, !dbg !15350
  %10 = or i8 %9, -128, !dbg !15350
  store i8 %10, i8* %8, align 1, !dbg !15350
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15351, metadata !DIExpression()) #23, !dbg !15354
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15358, metadata !DIExpression()) #23, !dbg !15366
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15364, metadata !DIExpression()) #23, !dbg !15366
  %11 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !15368
  br i1 %11, label %12, label %13, !dbg !15371

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.293, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 186) #25, !dbg !15372
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 186) #25, !dbg !15372
  unreachable, !dbg !15372

13:                                               ; preds = %7
  %14 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15374
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !15365, metadata !DIExpression()) #23, !dbg !15366
  %15 = icmp eq %struct._dnode* %14, null, !dbg !15376
  br i1 %15, label %26, label %16, !dbg !15374

16:                                               ; preds = %13, %23
  %17 = phi %struct._dnode* [ %24, %23 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !15365, metadata !DIExpression()) #23, !dbg !15366
  %18 = bitcast %struct._dnode* %17 to %struct.k_thread*, !dbg !15378
  call void @llvm.dbg.value(metadata %struct.k_thread* %18, metadata !15365, metadata !DIExpression()) #23, !dbg !15366
  %19 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %18) #25, !dbg !15379
  %20 = icmp sgt i32 %19, 0, !dbg !15382
  br i1 %20, label %21, label %23, !dbg !15383

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15384
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %17, %struct._dnode* noundef %22) #25, !dbg !15386
  br label %28, !dbg !15387

23:                                               ; preds = %16
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %17) #25, !dbg !15376
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !15365, metadata !DIExpression()) #23, !dbg !15366
  %25 = icmp eq %struct._dnode* %24, null, !dbg !15376
  br i1 %25, label %26, label %16, !dbg !15374, !llvm.loop !15388

26:                                               ; preds = %23, %13
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15390
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %27) #25, !dbg !15391
  br label %28, !dbg !15392

28:                                               ; preds = %21, %26
  %29 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15393
  %30 = icmp eq %struct.k_thread* %29, %0, !dbg !15394
  %31 = zext i1 %30 to i32, !dbg !15394
  tail call fastcc void @update_cache(i32 noundef %31) #24, !dbg !15395
  ret void, !dbg !15396
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15397 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15399, metadata !DIExpression()), !dbg !15400
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0, i32 noundef 128) #24, !dbg !15401
  ret i1 %2, !dbg !15402
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !15403 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !15405, metadata !DIExpression()), !dbg !15407
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15406, metadata !DIExpression()), !dbg !15407
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !15408
  br i1 %3, label %4, label %5, !dbg !15411

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.293, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 1139) #25, !dbg !15412
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 1139) #25, !dbg !15412
  unreachable, !dbg !15412

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !15414
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %6) #24, !dbg !15415
  ret void, !dbg !15416
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #4 !dbg !15417 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15419, metadata !DIExpression()), !dbg !15420
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !15421
  ret i1 %2, !dbg !15422
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !15423 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15427, metadata !DIExpression()), !dbg !15428
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #24, !dbg !15429
  br i1 %2, label %6, label %3, !dbg !15429

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15430
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15430
  br label %6, !dbg !15429

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !15429
  ret %struct._dnode* %7, !dbg !15431
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !15432 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15436, metadata !DIExpression()), !dbg !15440
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15437, metadata !DIExpression()), !dbg !15440
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15441
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15441
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !15438, metadata !DIExpression()), !dbg !15440
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15442
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !15443
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15444
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !15445
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15446
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15447
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15448
  ret void, !dbg !15449
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #8 !dbg !15450 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15454, metadata !DIExpression()), !dbg !15456
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15455, metadata !DIExpression()), !dbg !15456
  %3 = icmp eq %struct._dnode* %1, null, !dbg !15457
  br i1 %3, label %6, label %4, !dbg !15458

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #24, !dbg !15459
  br label %6, !dbg !15458

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !15458
  ret %struct._dnode* %7, !dbg !15460
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !15461 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15465, metadata !DIExpression()), !dbg !15468
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15466, metadata !DIExpression()), !dbg !15468
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15469
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15469
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !15467, metadata !DIExpression()), !dbg !15468
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15470
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !15471
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15472
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !15473
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15474
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15475
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15476
  ret void, !dbg !15477
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !15478 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15480, metadata !DIExpression()), !dbg !15482
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15483
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15490, metadata !DIExpression()) #23, !dbg !15492
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15493
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !15494
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !15494
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !15481, metadata !DIExpression()), !dbg !15482
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !15495, metadata !DIExpression()) #23, !dbg !15501
  call void @llvm.dbg.value(metadata i32 %0, metadata !15500, metadata !DIExpression()) #23, !dbg !15501
  %6 = icmp eq i32 %0, 0, !dbg !15504
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15506
  br i1 %6, label %8, label %18, !dbg !15507

8:                                                ; preds = %1
  %9 = icmp eq %struct.k_thread* %7, null, !dbg !15508
  br i1 %9, label %10, label %11, !dbg !15511

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.19.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 137) #25, !dbg !15512
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.296, i32 0, i32 0)) #25, !dbg !15512
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 137) #25, !dbg !15512
  unreachable, !dbg !15512

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef nonnull %7) #25, !dbg !15514
  br i1 %12, label %18, label %13, !dbg !15516

13:                                               ; preds = %11
  %14 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #25, !dbg !15517
  br i1 %14, label %18, label %15, !dbg !15519

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef nonnull %7) #25, !dbg !15520
  %17 = icmp eq i32 %16, 0, !dbg !15520
  br i1 %17, label %21, label %18, !dbg !15522

18:                                               ; preds = %1, %13, %11, %15
  %19 = icmp eq %struct.k_thread* %5, %7, !dbg !15523
  br i1 %19, label %21, label %20, !dbg !15526

20:                                               ; preds = %18
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !15527
  br label %21, !dbg !15529

21:                                               ; preds = %15, %18, %20
  %22 = phi %struct.k_thread* [ %5, %20 ], [ %5, %18 ], [ %7, %15 ], !dbg !15506
  store %struct.k_thread* %22, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15506
  ret void, !dbg !15530
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #8 !dbg !15531 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15535, metadata !DIExpression()), !dbg !15538
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15536, metadata !DIExpression()), !dbg !15538
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #24, !dbg !15539
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !15537, metadata !DIExpression()), !dbg !15538
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15536, metadata !DIExpression()), !dbg !15538
  ret %struct.k_thread* %3, !dbg !15540
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15541 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15543, metadata !DIExpression()), !dbg !15544
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15545
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !15546
  %4 = xor i1 %3, true, !dbg !15547
  ret i1 %4, !dbg !15548
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15549 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15551, metadata !DIExpression()), !dbg !15552
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !15553
  %3 = load i16, i16* %2, align 2, !dbg !15553
  %4 = icmp ult i16 %3, 128, !dbg !15554
  %5 = zext i1 %4 to i32, !dbg !15554
  ret i32 %5, !dbg !15555
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15556 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15562, metadata !DIExpression()), !dbg !15563
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15564
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #24, !dbg !15565
  %4 = xor i1 %3, true, !dbg !15566
  ret i1 %4, !dbg !15567
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15568 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15574, metadata !DIExpression()), !dbg !15575
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15576
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15576
  %4 = icmp ne %struct._dnode* %3, null, !dbg !15577
  ret i1 %4, !dbg !15578
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #8 !dbg !15579 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15581, metadata !DIExpression()), !dbg !15583
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15582, metadata !DIExpression()), !dbg !15583
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15584
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15584
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !15585
  br i1 %5, label %9, label %6, !dbg !15586

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15587
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !15587
  br label %9, !dbg !15586

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !15586
  ret %struct._dnode* %10, !dbg !15588
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !15589 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15593, metadata !DIExpression()), !dbg !15594
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15595
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15595
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !15596
  ret i1 %4, !dbg !15597
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !15598 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15602, metadata !DIExpression()), !dbg !15605
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15606
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15606
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !15603, metadata !DIExpression()), !dbg !15605
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15607
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15607
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !15604, metadata !DIExpression()), !dbg !15605
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !15608
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !15609
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !15610
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !15611
  tail call fastcc void @sys_dnode_init.297(%struct._dnode* noundef %0) #24, !dbg !15612
  ret void, !dbg !15613
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.297(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !15614 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15616, metadata !DIExpression()), !dbg !15617
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15618
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !15619
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15620
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !15621
  ret void, !dbg !15622
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #8 !dbg !15623 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15627, metadata !DIExpression()), !dbg !15629
  call void @llvm.dbg.value(metadata i32 %1, metadata !15628, metadata !DIExpression()), !dbg !15629
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15630
  %4 = load i8, i8* %3, align 1, !dbg !15630
  %5 = zext i8 %4 to i32, !dbg !15631
  %6 = and i32 %5, %1, !dbg !15632
  %7 = icmp ne i32 %6, 0, !dbg !15633
  ret i1 %7, !dbg !15634
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !15635 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15639, metadata !DIExpression()), !dbg !15641
  call void @llvm.dbg.value(metadata i32 %1, metadata !15640, metadata !DIExpression()), !dbg !15641
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #24, !dbg !15642
  ret i1 %3, !dbg !15643
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !15644 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15646, metadata !DIExpression()), !dbg !15648
  call void @llvm.dbg.value(metadata i32 %1, metadata !15647, metadata !DIExpression()), !dbg !15648
  %3 = icmp slt i32 %0, %1, !dbg !15649
  ret i1 %3, !dbg !15650
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15651 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15653, metadata !DIExpression()), !dbg !15657
  call void @llvm.dbg.value(metadata i32 0, metadata !15654, metadata !DIExpression()), !dbg !15658
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15135, metadata !DIExpression()) #23, !dbg !15659
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15661, !srcloc !15150
  call void @llvm.dbg.value(metadata i32 undef, metadata !15147, metadata !DIExpression()) #23, !dbg !15663
  call void @llvm.dbg.value(metadata i32 undef, metadata !15148, metadata !DIExpression()) #23, !dbg !15663
  call void @llvm.dbg.value(metadata i32 undef, metadata !15141, metadata !DIExpression()) #23, !dbg !15659
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15664
  br i1 %3, label %5, label %4, !dbg !15665

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !15666
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15666
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !15666
  unreachable, !dbg !15666

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15147, metadata !DIExpression()) #23, !dbg !15663
  call void @llvm.dbg.value(metadata i32 undef, metadata !15141, metadata !DIExpression()) #23, !dbg !15659
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15667
  call void @llvm.dbg.value(metadata i32 undef, metadata !15656, metadata !DIExpression()), !dbg !15658
  call void @llvm.dbg.value(metadata i32 undef, metadata !15654, metadata !DIExpression()), !dbg !15658
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !15668
  call void @llvm.dbg.value(metadata i32 undef, metadata !15169, metadata !DIExpression()) #23, !dbg !15673
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15174, metadata !DIExpression()) #23, !dbg !15673
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15675
  br i1 %6, label %8, label %7, !dbg !15676

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !15677
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.292, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15677
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !15677
  unreachable, !dbg !15677

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15661
  call void @llvm.dbg.value(metadata i32 %9, metadata !15147, metadata !DIExpression()) #23, !dbg !15663
  call void @llvm.dbg.value(metadata i32 %9, metadata !15141, metadata !DIExpression()) #23, !dbg !15659
  call void @llvm.dbg.value(metadata i32 %9, metadata !15656, metadata !DIExpression()), !dbg !15658
  call void @llvm.dbg.value(metadata i32 undef, metadata !15169, metadata !DIExpression()) #23, !dbg !15673
  call void @llvm.dbg.value(metadata i32 undef, metadata !15183, metadata !DIExpression()) #23, !dbg !15678
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15680, !srcloc !15189
  call void @llvm.dbg.value(metadata i32 1, metadata !15654, metadata !DIExpression()), !dbg !15658
  call void @llvm.dbg.value(metadata i32 undef, metadata !15654, metadata !DIExpression()), !dbg !15658
  ret void, !dbg !15681
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15682 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15684, metadata !DIExpression()), !dbg !15685
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !15686
  br i1 %2, label %27, label %3, !dbg !15688

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !15689
  br i1 %4, label %5, label %27, !dbg !15690

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15344, metadata !DIExpression()) #23, !dbg !15691
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15694
  %7 = load i8, i8* %6, align 1, !dbg !15695
  %8 = or i8 %7, -128, !dbg !15695
  store i8 %8, i8* %6, align 1, !dbg !15695
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15351, metadata !DIExpression()) #23, !dbg !15696
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15358, metadata !DIExpression()) #23, !dbg !15698
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15364, metadata !DIExpression()) #23, !dbg !15698
  %9 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !15700
  br i1 %9, label %10, label %11, !dbg !15701

10:                                               ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.293, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 186) #25, !dbg !15702
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 186) #25, !dbg !15702
  unreachable, !dbg !15702

11:                                               ; preds = %5
  %12 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15703
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !15365, metadata !DIExpression()) #23, !dbg !15698
  %13 = icmp eq %struct._dnode* %12, null, !dbg !15704
  br i1 %13, label %24, label %14, !dbg !15703

14:                                               ; preds = %11, %21
  %15 = phi %struct._dnode* [ %22, %21 ], [ %12, %11 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !15365, metadata !DIExpression()) #23, !dbg !15698
  %16 = bitcast %struct._dnode* %15 to %struct.k_thread*, !dbg !15705
  call void @llvm.dbg.value(metadata %struct.k_thread* %16, metadata !15365, metadata !DIExpression()) #23, !dbg !15698
  %17 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %16) #25, !dbg !15706
  %18 = icmp sgt i32 %17, 0, !dbg !15707
  br i1 %18, label %19, label %21, !dbg !15708

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15709
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %15, %struct._dnode* noundef %20) #25, !dbg !15710
  br label %26, !dbg !15711

21:                                               ; preds = %14
  %22 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %15) #25, !dbg !15704
  call void @llvm.dbg.value(metadata %struct._dnode* %22, metadata !15365, metadata !DIExpression()) #23, !dbg !15698
  %23 = icmp eq %struct._dnode* %22, null, !dbg !15704
  br i1 %23, label %24, label %14, !dbg !15703, !llvm.loop !15712

24:                                               ; preds = %21, %11
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15714
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %25) #25, !dbg !15715
  br label %26, !dbg !15716

26:                                               ; preds = %19, %24
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !15717
  br label %27, !dbg !15718

27:                                               ; preds = %26, %3, %1
  ret void, !dbg !15719
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15720 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15722, metadata !DIExpression()), !dbg !15723
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !15724
  br i1 %2, label %6, label %3, !dbg !15725

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #24, !dbg !15726
  %5 = xor i1 %4, true, !dbg !15725
  br label %6, !dbg !15725

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !15727
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15728 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15730, metadata !DIExpression()), !dbg !15734
  call void @llvm.dbg.value(metadata i32 0, metadata !15731, metadata !DIExpression()), !dbg !15735
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15135, metadata !DIExpression()) #23, !dbg !15736
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15738, !srcloc !15150
  call void @llvm.dbg.value(metadata i32 undef, metadata !15147, metadata !DIExpression()) #23, !dbg !15740
  call void @llvm.dbg.value(metadata i32 undef, metadata !15148, metadata !DIExpression()) #23, !dbg !15740
  call void @llvm.dbg.value(metadata i32 undef, metadata !15141, metadata !DIExpression()) #23, !dbg !15736
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15741
  br i1 %3, label %5, label %4, !dbg !15742

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !15743
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15743
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !15743
  unreachable, !dbg !15743

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15147, metadata !DIExpression()) #23, !dbg !15740
  call void @llvm.dbg.value(metadata i32 undef, metadata !15141, metadata !DIExpression()) #23, !dbg !15736
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15744
  call void @llvm.dbg.value(metadata i32 undef, metadata !15733, metadata !DIExpression()), !dbg !15735
  call void @llvm.dbg.value(metadata i32 undef, metadata !15731, metadata !DIExpression()), !dbg !15735
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #24, !dbg !15745
  call void @llvm.dbg.value(metadata i32 undef, metadata !15169, metadata !DIExpression()) #23, !dbg !15748
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15174, metadata !DIExpression()) #23, !dbg !15748
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15750
  br i1 %6, label %8, label %7, !dbg !15751

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !15752
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.292, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15752
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !15752
  unreachable, !dbg !15752

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15738
  call void @llvm.dbg.value(metadata i32 %9, metadata !15147, metadata !DIExpression()) #23, !dbg !15740
  call void @llvm.dbg.value(metadata i32 %9, metadata !15141, metadata !DIExpression()) #23, !dbg !15736
  call void @llvm.dbg.value(metadata i32 %9, metadata !15733, metadata !DIExpression()), !dbg !15735
  call void @llvm.dbg.value(metadata i32 undef, metadata !15169, metadata !DIExpression()) #23, !dbg !15748
  call void @llvm.dbg.value(metadata i32 undef, metadata !15183, metadata !DIExpression()) #23, !dbg !15753
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15755, !srcloc !15189
  call void @llvm.dbg.value(metadata i32 1, metadata !15731, metadata !DIExpression()), !dbg !15735
  call void @llvm.dbg.value(metadata i32 undef, metadata !15731, metadata !DIExpression()), !dbg !15735
  ret void, !dbg !15756
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15757 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15759, metadata !DIExpression()), !dbg !15761
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15135, metadata !DIExpression()) #23, !dbg !15762
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15764, !srcloc !15150
  call void @llvm.dbg.value(metadata i32 undef, metadata !15147, metadata !DIExpression()) #23, !dbg !15766
  call void @llvm.dbg.value(metadata i32 undef, metadata !15148, metadata !DIExpression()) #23, !dbg !15766
  call void @llvm.dbg.value(metadata i32 undef, metadata !15141, metadata !DIExpression()) #23, !dbg !15762
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15767
  br i1 %3, label %5, label %4, !dbg !15768

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !15769
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15769
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !15769
  unreachable, !dbg !15769

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !15764
  call void @llvm.dbg.value(metadata i32 %6, metadata !15147, metadata !DIExpression()) #23, !dbg !15766
  call void @llvm.dbg.value(metadata i32 %6, metadata !15141, metadata !DIExpression()) #23, !dbg !15762
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15770
  call void @llvm.dbg.value(metadata i32 %6, metadata !15760, metadata !DIExpression()), !dbg !15761
  %7 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #24, !dbg !15771
  br i1 %7, label %8, label %12, !dbg !15773

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !15169, metadata !DIExpression()) #23, !dbg !15774
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15174, metadata !DIExpression()) #23, !dbg !15774
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15777
  br i1 %9, label %11, label %10, !dbg !15778

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !15779
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.292, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15779
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !15779
  unreachable, !dbg !15779

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !15169, metadata !DIExpression()) #23, !dbg !15774
  call void @llvm.dbg.value(metadata i32 %6, metadata !15183, metadata !DIExpression()) #23, !dbg !15780
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !15782, !srcloc !15189
  br label %14, !dbg !15783

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_started.302(%struct.k_thread* noundef %0) #24, !dbg !15784
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !15785
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !15786
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #24, !dbg !15786
  br label %14, !dbg !15787

14:                                               ; preds = %12, %11
  ret void, !dbg !15787
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15788 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15790, metadata !DIExpression()), !dbg !15791
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15792
  %3 = load i8, i8* %2, align 1, !dbg !15792
  %4 = and i8 %3, 4, !dbg !15793
  %5 = icmp eq i8 %4, 0, !dbg !15794
  ret i1 %5, !dbg !15795
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.302(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15796 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15798, metadata !DIExpression()), !dbg !15799
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15800
  %3 = load i8, i8* %2, align 1, !dbg !15801
  %4 = and i8 %3, -5, !dbg !15801
  store i8 %4, i8* %2, align 1, !dbg !15801
  ret void, !dbg !15802
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !15803 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !15806, metadata !DIExpression()), !dbg !15807
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15805, metadata !DIExpression()), !dbg !15807
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #24, !dbg !15808
  br i1 %4, label %5, label %12, !dbg !15810

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #24, !dbg !15811
  br i1 %6, label %7, label %12, !dbg !15812

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !15813, metadata !DIExpression()) #23, !dbg !15819
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15818, metadata !DIExpression()) #23, !dbg !15819
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15822, metadata !DIExpression()) #23, !dbg !15827
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #25, !dbg !15829
  br i1 %8, label %10, label %9, !dbg !15832

9:                                                ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 225) #25, !dbg !15833
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.292, i32 0, i32 0), %struct.k_spinlock* noundef %0) #25, !dbg !15833
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 225) #25, !dbg !15833
  unreachable, !dbg !15833

10:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 %3, metadata !15813, metadata !DIExpression()) #23, !dbg !15819
  %11 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !15835
  br label %16, !dbg !15836

12:                                               ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !15169, metadata !DIExpression()) #23, !dbg !15837
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15174, metadata !DIExpression()) #23, !dbg !15837
  %13 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #25, !dbg !15840
  br i1 %13, label %15, label %14, !dbg !15841

14:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !15842
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.292, i32 0, i32 0), %struct.k_spinlock* noundef %0) #25, !dbg !15842
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !15842
  unreachable, !dbg !15842

15:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 %3, metadata !15169, metadata !DIExpression()) #23, !dbg !15837
  call void @llvm.dbg.value(metadata i32 %3, metadata !15183, metadata !DIExpression()) #23, !dbg !15843
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !15845, !srcloc !15189
  br label %16

16:                                               ; preds = %15, %10
  ret void, !dbg !15846
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !15847 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15851, metadata !DIExpression()), !dbg !15852
  call void @llvm.dbg.value(metadata i32 %0, metadata !15853, metadata !DIExpression()), !dbg !15858
  %2 = icmp eq i32 %0, 0, !dbg !15860
  br i1 %2, label %3, label %6, !dbg !15861

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15862, !srcloc !15869
  call void @llvm.dbg.value(metadata i32 %4, metadata !15865, metadata !DIExpression()) #23, !dbg !15870
  %5 = icmp eq i32 %4, 0, !dbg !15871
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !15852
  ret i1 %7, !dbg !15872
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #8 !dbg !15873 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15876
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15875, metadata !DIExpression()), !dbg !15877
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15878
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !15879
  ret i1 %3, !dbg !15880
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !15881 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15883, metadata !DIExpression()), !dbg !15885
  %2 = tail call i32 @arch_swap(i32 noundef %0) #25, !dbg !15886
  call void @llvm.dbg.value(metadata i32 %2, metadata !15884, metadata !DIExpression()), !dbg !15885
  ret i32 %2, !dbg !15887
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15888 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15890, metadata !DIExpression()), !dbg !15894
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !15895
  call void @llvm.dbg.value(metadata i32 0, metadata !15891, metadata !DIExpression()), !dbg !15896
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15135, metadata !DIExpression()) #23, !dbg !15897
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15899, !srcloc !15150
  call void @llvm.dbg.value(metadata i32 undef, metadata !15147, metadata !DIExpression()) #23, !dbg !15901
  call void @llvm.dbg.value(metadata i32 undef, metadata !15148, metadata !DIExpression()) #23, !dbg !15901
  call void @llvm.dbg.value(metadata i32 undef, metadata !15141, metadata !DIExpression()) #23, !dbg !15897
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15902
  br i1 %4, label %6, label %5, !dbg !15903

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !15904
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15904
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !15904
  unreachable, !dbg !15904

6:                                                ; preds = %1
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !15899
  call void @llvm.dbg.value(metadata i32 %7, metadata !15147, metadata !DIExpression()) #23, !dbg !15901
  call void @llvm.dbg.value(metadata i32 %7, metadata !15141, metadata !DIExpression()) #23, !dbg !15897
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15905
  call void @llvm.dbg.value(metadata i32 %7, metadata !15893, metadata !DIExpression()), !dbg !15896
  call void @llvm.dbg.value(metadata i32 undef, metadata !15891, metadata !DIExpression()), !dbg !15896
  %8 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !15906
  br i1 %8, label %9, label %13, !dbg !15910

9:                                                ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15327, metadata !DIExpression()) #23, !dbg !15911
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15914
  %11 = load i8, i8* %10, align 1, !dbg !15915
  %12 = and i8 %11, 127, !dbg !15915
  store i8 %12, i8* %10, align 1, !dbg !15915
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15335, metadata !DIExpression()) #23, !dbg !15916
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15918
  br label %13, !dbg !15919

13:                                               ; preds = %9, %6
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #24, !dbg !15920
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15921
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !15922
  %16 = zext i1 %15 to i32, !dbg !15922
  tail call fastcc void @update_cache(i32 noundef %16) #24, !dbg !15923
  call void @llvm.dbg.value(metadata i32 undef, metadata !15169, metadata !DIExpression()) #23, !dbg !15924
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15174, metadata !DIExpression()) #23, !dbg !15924
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15926
  br i1 %17, label %19, label %18, !dbg !15927

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !15928
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.292, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15928
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !15928
  unreachable, !dbg !15928

19:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %7, metadata !15169, metadata !DIExpression()) #23, !dbg !15924
  call void @llvm.dbg.value(metadata i32 %7, metadata !15183, metadata !DIExpression()) #23, !dbg !15929
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !15931, !srcloc !15189
  call void @llvm.dbg.value(metadata i32 1, metadata !15891, metadata !DIExpression()), !dbg !15896
  call void @llvm.dbg.value(metadata i32 undef, metadata !15891, metadata !DIExpression()), !dbg !15896
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15932
  %21 = icmp eq %struct.k_thread* %20, %0, !dbg !15934
  br i1 %21, label %22, label %23, !dbg !15935

22:                                               ; preds = %19
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !15936
  br label %23, !dbg !15938

23:                                               ; preds = %22, %19
  ret void, !dbg !15939
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15940 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15942, metadata !DIExpression()), !dbg !15943
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15944
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !15945
  ret i32 %3, !dbg !15946
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15947 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15949, metadata !DIExpression()), !dbg !15950
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15951
  %3 = load i8, i8* %2, align 1, !dbg !15952
  %4 = or i8 %3, 16, !dbg !15952
  store i8 %4, i8* %2, align 1, !dbg !15952
  ret void, !dbg !15953
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !15954 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15955, !srcloc !15150
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15955
  call void @llvm.dbg.value(metadata i32 %2, metadata !15147, metadata !DIExpression()) #23, !dbg !15957
  call void @llvm.dbg.value(metadata i32 undef, metadata !15148, metadata !DIExpression()) #23, !dbg !15957
  tail call void @z_reschedule_irqlock(i32 noundef %2) #24, !dbg !15958
  ret void, !dbg !15959
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !15960 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15962, metadata !DIExpression()), !dbg !15963
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #24, !dbg !15964
  br i1 %2, label %3, label %5, !dbg !15966

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !15967
  br label %6, !dbg !15969

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !15183, metadata !DIExpression()) #23, !dbg !15970
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #23, !dbg !15973, !srcloc !15189
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !15974
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15975 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15977, metadata !DIExpression()), !dbg !15979
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15135, metadata !DIExpression()) #23, !dbg !15980
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15982, !srcloc !15150
  call void @llvm.dbg.value(metadata i32 undef, metadata !15147, metadata !DIExpression()) #23, !dbg !15984
  call void @llvm.dbg.value(metadata i32 undef, metadata !15148, metadata !DIExpression()) #23, !dbg !15984
  call void @llvm.dbg.value(metadata i32 undef, metadata !15141, metadata !DIExpression()) #23, !dbg !15980
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15985
  br i1 %3, label %5, label %4, !dbg !15986

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !15987
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15987
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !15987
  unreachable, !dbg !15987

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !15982
  call void @llvm.dbg.value(metadata i32 %6, metadata !15147, metadata !DIExpression()) #23, !dbg !15984
  call void @llvm.dbg.value(metadata i32 %6, metadata !15141, metadata !DIExpression()) #23, !dbg !15980
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15988
  call void @llvm.dbg.value(metadata i32 %6, metadata !15978, metadata !DIExpression()), !dbg !15979
  %7 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #24, !dbg !15989
  br i1 %7, label %12, label %8, !dbg !15991

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !15169, metadata !DIExpression()) #23, !dbg !15992
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15174, metadata !DIExpression()) #23, !dbg !15992
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15995
  br i1 %9, label %11, label %10, !dbg !15996

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !15997
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.292, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15997
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !15997
  unreachable, !dbg !15997

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !15169, metadata !DIExpression()) #23, !dbg !15992
  call void @llvm.dbg.value(metadata i32 %6, metadata !15183, metadata !DIExpression()) #23, !dbg !15998
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16000, !srcloc !15189
  br label %14, !dbg !16001

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !16002
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !16003
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !16004
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #24, !dbg !16004
  br label %14, !dbg !16005

14:                                               ; preds = %12, %11
  ret void, !dbg !16005
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !16006 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16008, metadata !DIExpression()), !dbg !16009
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16010
  %3 = load i8, i8* %2, align 1, !dbg !16010
  %4 = and i8 %3, 16, !dbg !16011
  %5 = icmp ne i8 %4, 0, !dbg !16012
  ret i1 %5, !dbg !16013
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !16014 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16016, metadata !DIExpression()), !dbg !16017
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16018
  %3 = load i8, i8* %2, align 1, !dbg !16019
  %4 = and i8 %3, -17, !dbg !16019
  store i8 %4, i8* %2, align 1, !dbg !16019
  ret void, !dbg !16020
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16021 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16031, metadata !DIExpression()), !dbg !16035
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16029, metadata !DIExpression()), !dbg !16035
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !16030, metadata !DIExpression()), !dbg !16035
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16036
  %5 = icmp eq %struct.k_thread* %4, %0, !dbg !16036
  br i1 %5, label %9, label %6, !dbg !16036

6:                                                ; preds = %3
  %7 = tail call fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* noundef %0) #24, !dbg !16036
  br i1 %7, label %9, label %8, !dbg !16039

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 773) #25, !dbg !16040
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 773) #25, !dbg !16040
  unreachable, !dbg !16040

9:                                                ; preds = %3, %6
  call void @llvm.dbg.value(metadata i32 0, metadata !16032, metadata !DIExpression()), !dbg !16042
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15135, metadata !DIExpression()) #23, !dbg !16043
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16045, !srcloc !15150
  call void @llvm.dbg.value(metadata i32 undef, metadata !15147, metadata !DIExpression()) #23, !dbg !16047
  call void @llvm.dbg.value(metadata i32 undef, metadata !15148, metadata !DIExpression()) #23, !dbg !16047
  call void @llvm.dbg.value(metadata i32 undef, metadata !15141, metadata !DIExpression()) #23, !dbg !16043
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16048
  br i1 %11, label %13, label %12, !dbg !16049

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !16050
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16050
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !16050
  unreachable, !dbg !16050

13:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !15147, metadata !DIExpression()) #23, !dbg !16047
  call void @llvm.dbg.value(metadata i32 undef, metadata !15141, metadata !DIExpression()) #23, !dbg !16043
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16051
  call void @llvm.dbg.value(metadata i32 undef, metadata !16034, metadata !DIExpression()), !dbg !16042
  call void @llvm.dbg.value(metadata i32 undef, metadata !16032, metadata !DIExpression()), !dbg !16042
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #24, !dbg !16052
  call void @llvm.dbg.value(metadata i32 undef, metadata !15169, metadata !DIExpression()) #23, !dbg !16055
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15174, metadata !DIExpression()) #23, !dbg !16055
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16057
  br i1 %14, label %16, label %15, !dbg !16058

15:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !16059
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.292, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16059
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !16059
  unreachable, !dbg !16059

16:                                               ; preds = %13
  %17 = extractvalue { i32, i32 } %10, 0, !dbg !16045
  call void @llvm.dbg.value(metadata i32 %17, metadata !15147, metadata !DIExpression()) #23, !dbg !16047
  call void @llvm.dbg.value(metadata i32 %17, metadata !15141, metadata !DIExpression()) #23, !dbg !16043
  call void @llvm.dbg.value(metadata i32 %17, metadata !16034, metadata !DIExpression()), !dbg !16042
  call void @llvm.dbg.value(metadata i32 undef, metadata !15169, metadata !DIExpression()) #23, !dbg !16055
  call void @llvm.dbg.value(metadata i32 undef, metadata !15183, metadata !DIExpression()) #23, !dbg !16060
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %17) #23, !dbg !16062, !srcloc !15189
  call void @llvm.dbg.value(metadata i32 1, metadata !16032, metadata !DIExpression()), !dbg !16042
  call void @llvm.dbg.value(metadata i32 undef, metadata !16032, metadata !DIExpression()), !dbg !16042
  ret void, !dbg !16063
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !16064 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16066, metadata !DIExpression()), !dbg !16067
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16068
  %3 = load i8, i8* %2, align 1, !dbg !16068
  %4 = and i8 %3, 1, !dbg !16069
  %5 = icmp ne i8 %4, 0, !dbg !16070
  ret i1 %5, !dbg !16071
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !16072 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16076, metadata !DIExpression()), !dbg !16077
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16074, metadata !DIExpression()), !dbg !16077
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !16075, metadata !DIExpression()), !dbg !16077
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #24, !dbg !16078
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #24, !dbg !16079
  ret void, !dbg !16080
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !16081 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16085, metadata !DIExpression()), !dbg !16087
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !16086, metadata !DIExpression()), !dbg !16087
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #24, !dbg !16088
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #24, !dbg !16089
  %3 = icmp eq %union.anon* %1, null, !dbg !16090
  br i1 %3, label %24, label %4, !dbg !16092

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16093
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !16095
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !16096
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !15358, metadata !DIExpression()) #23, !dbg !16097
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15364, metadata !DIExpression()) #23, !dbg !16097
  %7 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !16099
  br i1 %7, label %8, label %9, !dbg !16100

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.293, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 186) #25, !dbg !16101
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 186) #25, !dbg !16101
  unreachable, !dbg !16101

9:                                                ; preds = %4
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #25, !dbg !16102
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !15365, metadata !DIExpression()) #23, !dbg !16097
  %11 = icmp eq %struct._dnode* %10, null, !dbg !16103
  br i1 %11, label %22, label %12, !dbg !16102

12:                                               ; preds = %9, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !15365, metadata !DIExpression()) #23, !dbg !16097
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !16104
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !15365, metadata !DIExpression()) #23, !dbg !16097
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %14) #25, !dbg !16105
  %16 = icmp sgt i32 %15, 0, !dbg !16106
  br i1 %16, label %17, label %19, !dbg !16107

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16108
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #25, !dbg !16109
  br label %24, !dbg !16110

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %13) #25, !dbg !16103
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !15365, metadata !DIExpression()) #23, !dbg !16097
  %21 = icmp eq %struct._dnode* %20, null, !dbg !16103
  br i1 %21, label %22, label %12, !dbg !16102, !llvm.loop !16111

22:                                               ; preds = %19, %9
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16113
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %23) #25, !dbg !16114
  br label %24, !dbg !16115

24:                                               ; preds = %22, %17, %2
  ret void, !dbg !16116
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !16117 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !16122, metadata !DIExpression()), !dbg !16123
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16121, metadata !DIExpression()), !dbg !16123
  %4 = icmp eq i64 %3, -1, !dbg !16124
  br i1 %4, label %6, label %5, !dbg !16126

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.304(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !16127
  br label %6, !dbg !16129

6:                                                ; preds = %5, %2
  ret void, !dbg !16130
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.304(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !16131 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16134, metadata !DIExpression()), !dbg !16135
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16133, metadata !DIExpression()), !dbg !16135
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !16136
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !16137
  ret void, !dbg !16138
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !16139 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16141, metadata !DIExpression()), !dbg !16149
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !16150
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !16150
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16142, metadata !DIExpression()), !dbg !16149
  call void @llvm.dbg.value(metadata i32 0, metadata !16143, metadata !DIExpression()), !dbg !16151
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15135, metadata !DIExpression()) #23, !dbg !16152
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16154, !srcloc !15150
  call void @llvm.dbg.value(metadata i32 undef, metadata !15147, metadata !DIExpression()) #23, !dbg !16156
  call void @llvm.dbg.value(metadata i32 undef, metadata !15148, metadata !DIExpression()) #23, !dbg !16156
  call void @llvm.dbg.value(metadata i32 undef, metadata !15141, metadata !DIExpression()) #23, !dbg !16152
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16157
  br i1 %5, label %7, label %6, !dbg !16158

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !16159
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16159
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !16159
  unreachable, !dbg !16159

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15147, metadata !DIExpression()) #23, !dbg !16156
  call void @llvm.dbg.value(metadata i32 undef, metadata !15141, metadata !DIExpression()) #23, !dbg !16152
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16160
  call void @llvm.dbg.value(metadata i32 undef, metadata !16145, metadata !DIExpression()), !dbg !16151
  call void @llvm.dbg.value(metadata i32 undef, metadata !16143, metadata !DIExpression()), !dbg !16151
  %8 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !16161
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %8, i32 0, i32 3, !dbg !16162
  %10 = load i8, i8* %9, align 1, !dbg !16162
  %11 = and i8 %10, 40, !dbg !16163
  %12 = icmp eq i8 %11, 0, !dbg !16163
  call void @llvm.dbg.value(metadata i1 %12, metadata !16146, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16164
  br i1 %12, label %13, label %20, !dbg !16165

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !16166
  %15 = bitcast void (%struct._timeout*)** %14 to %union.anon**, !dbg !16166
  %16 = load %union.anon*, %union.anon** %15, align 8, !dbg !16166
  %17 = icmp eq %union.anon* %16, null, !dbg !16170
  br i1 %17, label %19, label %18, !dbg !16171

18:                                               ; preds = %13
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #24, !dbg !16172
  br label %19, !dbg !16174

19:                                               ; preds = %18, %13
  tail call fastcc void @z_mark_thread_as_started.302(%struct.k_thread* noundef nonnull %3) #24, !dbg !16175
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #24, !dbg !16176
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #24, !dbg !16177
  br label %20, !dbg !16178

20:                                               ; preds = %19, %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !15169, metadata !DIExpression()) #23, !dbg !16179
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15174, metadata !DIExpression()) #23, !dbg !16179
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16181
  br i1 %21, label %23, label %22, !dbg !16182

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !16183
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.292, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16183
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !16183
  unreachable, !dbg !16183

23:                                               ; preds = %20
  %24 = extractvalue { i32, i32 } %4, 0, !dbg !16154
  call void @llvm.dbg.value(metadata i32 %24, metadata !15147, metadata !DIExpression()) #23, !dbg !16156
  call void @llvm.dbg.value(metadata i32 %24, metadata !15141, metadata !DIExpression()) #23, !dbg !16152
  call void @llvm.dbg.value(metadata i32 %24, metadata !16145, metadata !DIExpression()), !dbg !16151
  call void @llvm.dbg.value(metadata i32 undef, metadata !15169, metadata !DIExpression()) #23, !dbg !16179
  call void @llvm.dbg.value(metadata i32 undef, metadata !15183, metadata !DIExpression()) #23, !dbg !16184
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #23, !dbg !16186, !srcloc !15189
  call void @llvm.dbg.value(metadata i32 1, metadata !16143, metadata !DIExpression()), !dbg !16151
  call void @llvm.dbg.value(metadata i32 undef, metadata !16143, metadata !DIExpression()), !dbg !16151
  ret void, !dbg !16187
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16188 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16190, metadata !DIExpression()), !dbg !16191
  %2 = tail call fastcc %union.anon* @pended_on_thread(%struct.k_thread* noundef %0) #24, !dbg !16192
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !16193
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #24, !dbg !16194
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16195
  store %union.anon* null, %union.anon** %3, align 8, !dbg !16196
  ret void, !dbg !16197
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %union.anon* @pended_on_thread(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #1 !dbg !16198 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16202, metadata !DIExpression()), !dbg !16203
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16204
  %3 = load %union.anon*, %union.anon** %2, align 8, !dbg !16204
  %4 = icmp eq %union.anon* %3, null, !dbg !16204
  br i1 %4, label %5, label %6, !dbg !16207

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.307, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 726) #25, !dbg !16208
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 726) #25, !dbg !16208
  unreachable, !dbg !16208

6:                                                ; preds = %1
  ret %union.anon* %3, !dbg !16210
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !16211 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16213, metadata !DIExpression()), !dbg !16214
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16215
  %3 = load i8, i8* %2, align 1, !dbg !16216
  %4 = and i8 %3, -3, !dbg !16216
  store i8 %4, i8* %2, align 1, !dbg !16216
  ret void, !dbg !16217
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16218 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16220, metadata !DIExpression()), !dbg !16221
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !16222
  br i1 %2, label %3, label %7, !dbg !16224

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15327, metadata !DIExpression()) #23, !dbg !16225
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16228
  %5 = load i8, i8* %4, align 1, !dbg !16229
  %6 = and i8 %5, 127, !dbg !16229
  store i8 %6, i8* %4, align 1, !dbg !16229
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15335, metadata !DIExpression()) #23, !dbg !16230
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !16232
  br label %7, !dbg !16233

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16234
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !16235
  %10 = zext i1 %9 to i32, !dbg !16235
  tail call fastcc void @update_cache(i32 noundef %10) #24, !dbg !16236
  ret void, !dbg !16237
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !16238 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16240, metadata !DIExpression()), !dbg !16241
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16242
  %3 = load i8, i8* %2, align 1, !dbg !16243
  %4 = or i8 %3, 2, !dbg !16243
  store i8 %4, i8* %2, align 1, !dbg !16243
  ret void, !dbg !16244
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* noundef %0) local_unnamed_addr #22 !dbg !16245 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16247, metadata !DIExpression()), !dbg !16251
  call void @llvm.dbg.value(metadata i32 0, metadata !16248, metadata !DIExpression()), !dbg !16252
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15135, metadata !DIExpression()) #23, !dbg !16253
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16255, !srcloc !15150
  call void @llvm.dbg.value(metadata i32 undef, metadata !15147, metadata !DIExpression()) #23, !dbg !16257
  call void @llvm.dbg.value(metadata i32 undef, metadata !15148, metadata !DIExpression()) #23, !dbg !16257
  call void @llvm.dbg.value(metadata i32 undef, metadata !15141, metadata !DIExpression()) #23, !dbg !16253
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16258
  br i1 %3, label %5, label %4, !dbg !16259

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !16260
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16260
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !16260
  unreachable, !dbg !16260

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15147, metadata !DIExpression()) #23, !dbg !16257
  call void @llvm.dbg.value(metadata i32 undef, metadata !15141, metadata !DIExpression()) #23, !dbg !16253
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16261
  call void @llvm.dbg.value(metadata i32 undef, metadata !16250, metadata !DIExpression()), !dbg !16252
  call void @llvm.dbg.value(metadata i32 undef, metadata !16248, metadata !DIExpression()), !dbg !16252
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #24, !dbg !16262
  call void @llvm.dbg.value(metadata i32 undef, metadata !15169, metadata !DIExpression()) #23, !dbg !16265
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15174, metadata !DIExpression()) #23, !dbg !16265
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16267
  br i1 %6, label %8, label %7, !dbg !16268

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !16269
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.292, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16269
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !16269
  unreachable, !dbg !16269

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !16255
  call void @llvm.dbg.value(metadata i32 %9, metadata !15147, metadata !DIExpression()) #23, !dbg !16257
  call void @llvm.dbg.value(metadata i32 %9, metadata !15141, metadata !DIExpression()) #23, !dbg !16253
  call void @llvm.dbg.value(metadata i32 %9, metadata !16250, metadata !DIExpression()), !dbg !16252
  call void @llvm.dbg.value(metadata i32 undef, metadata !15169, metadata !DIExpression()) #23, !dbg !16265
  call void @llvm.dbg.value(metadata i32 undef, metadata !15183, metadata !DIExpression()) #23, !dbg !16270
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !16272, !srcloc !15189
  call void @llvm.dbg.value(metadata i32 1, metadata !16248, metadata !DIExpression()), !dbg !16252
  call void @llvm.dbg.value(metadata i32 undef, metadata !16248, metadata !DIExpression()), !dbg !16252
  ret void, !dbg !16273
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16274 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16280, metadata !DIExpression()), !dbg !16285
  call void @llvm.dbg.value(metadata i32 %0, metadata !16278, metadata !DIExpression()), !dbg !16285
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !16279, metadata !DIExpression()), !dbg !16285
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16286
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #24, !dbg !16287
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16288
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !16289
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !16290
  call void @llvm.dbg.value(metadata i32 %6, metadata !16281, metadata !DIExpression()), !dbg !16285
  call void @llvm.dbg.value(metadata i32 0, metadata !16282, metadata !DIExpression()), !dbg !16291
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15135, metadata !DIExpression()) #23, !dbg !16292
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16294, !srcloc !15150
  call void @llvm.dbg.value(metadata i32 undef, metadata !15147, metadata !DIExpression()) #23, !dbg !16296
  call void @llvm.dbg.value(metadata i32 undef, metadata !15148, metadata !DIExpression()) #23, !dbg !16296
  call void @llvm.dbg.value(metadata i32 undef, metadata !15141, metadata !DIExpression()) #23, !dbg !16292
  %8 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16297
  br i1 %8, label %10, label %9, !dbg !16298

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !16299
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16299
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !16299
  unreachable, !dbg !16299

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !15147, metadata !DIExpression()) #23, !dbg !16296
  call void @llvm.dbg.value(metadata i32 undef, metadata !15141, metadata !DIExpression()) #23, !dbg !16292
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16300
  call void @llvm.dbg.value(metadata i32 undef, metadata !16284, metadata !DIExpression()), !dbg !16291
  call void @llvm.dbg.value(metadata i32 undef, metadata !16282, metadata !DIExpression()), !dbg !16291
  %11 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !16301
  %12 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16305
  %13 = icmp eq %struct.k_thread* %11, %12, !dbg !16306
  br i1 %13, label %14, label %15, !dbg !16307

14:                                               ; preds = %10
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !16308
  br label %15, !dbg !16310

15:                                               ; preds = %10, %14
  call void @llvm.dbg.value(metadata i32 undef, metadata !15169, metadata !DIExpression()) #23, !dbg !16311
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15174, metadata !DIExpression()) #23, !dbg !16311
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16313
  br i1 %16, label %18, label %17, !dbg !16314

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !16315
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.292, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16315
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !16315
  unreachable, !dbg !16315

18:                                               ; preds = %15
  %19 = extractvalue { i32, i32 } %7, 0, !dbg !16294
  call void @llvm.dbg.value(metadata i32 %19, metadata !15147, metadata !DIExpression()) #23, !dbg !16296
  call void @llvm.dbg.value(metadata i32 %19, metadata !15141, metadata !DIExpression()) #23, !dbg !16292
  call void @llvm.dbg.value(metadata i32 %19, metadata !16284, metadata !DIExpression()), !dbg !16291
  call void @llvm.dbg.value(metadata i32 undef, metadata !15169, metadata !DIExpression()) #23, !dbg !16311
  call void @llvm.dbg.value(metadata i32 undef, metadata !15183, metadata !DIExpression()) #23, !dbg !16316
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %19) #23, !dbg !16318, !srcloc !15189
  call void @llvm.dbg.value(metadata i32 1, metadata !16282, metadata !DIExpression()), !dbg !16291
  call void @llvm.dbg.value(metadata i32 undef, metadata !16282, metadata !DIExpression()), !dbg !16291
  ret i32 %6, !dbg !16319
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !16320 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16325, metadata !DIExpression()), !dbg !16328
  call void @llvm.dbg.value(metadata i64 undef, metadata !16327, metadata !DIExpression()), !dbg !16328
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16324, metadata !DIExpression()), !dbg !16328
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !16326, metadata !DIExpression()), !dbg !16328
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16329
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !16330
  %6 = icmp eq %struct.k_spinlock* %0, @sched_spinlock, !dbg !16331
  br i1 %6, label %7, label %8, !dbg !16334

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3.308, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 846) #25, !dbg !16335
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 846) #25, !dbg !16335
  unreachable, !dbg !16335

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15135, metadata !DIExpression()) #23, !dbg !16337
  %9 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16339, !srcloc !15150
  call void @llvm.dbg.value(metadata i32 undef, metadata !15147, metadata !DIExpression()) #23, !dbg !16341
  call void @llvm.dbg.value(metadata i32 undef, metadata !15148, metadata !DIExpression()) #23, !dbg !16341
  call void @llvm.dbg.value(metadata i32 undef, metadata !15141, metadata !DIExpression()) #23, !dbg !16337
  %10 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16342
  br i1 %10, label %12, label %11, !dbg !16343

11:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !16344
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16344
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !16344
  unreachable, !dbg !16344

12:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 undef, metadata !15147, metadata !DIExpression()) #23, !dbg !16341
  call void @llvm.dbg.value(metadata i32 undef, metadata !15141, metadata !DIExpression()) #23, !dbg !16337
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16345
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16346
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %13, %union.anon* noundef %2, [1 x i64] %3) #24, !dbg !16347
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15822, metadata !DIExpression()) #23, !dbg !16348
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #25, !dbg !16350
  br i1 %14, label %16, label %15, !dbg !16351

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 225) #25, !dbg !16352
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.292, i32 0, i32 0), %struct.k_spinlock* noundef %0) #25, !dbg !16352
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 225) #25, !dbg !16352
  unreachable, !dbg !16352

16:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 undef, metadata !15813, metadata !DIExpression()) #23, !dbg !16353
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15818, metadata !DIExpression()) #23, !dbg !16353
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15822, metadata !DIExpression()) #23, !dbg !16355
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16357
  br i1 %17, label %19, label %18, !dbg !16358

18:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 225) #25, !dbg !16359
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.292, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16359
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 225) #25, !dbg !16359
  unreachable, !dbg !16359

19:                                               ; preds = %16
  %20 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %20, metadata !15813, metadata !DIExpression()) #23, !dbg !16353
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %20) #25, !dbg !16360
  ret i32 %21, !dbg !16361
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !16362 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16366, metadata !DIExpression()), !dbg !16371
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16367, metadata !DIExpression()), !dbg !16371
  call void @llvm.dbg.value(metadata i32 0, metadata !16368, metadata !DIExpression()), !dbg !16372
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15135, metadata !DIExpression()) #23, !dbg !16373
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16375, !srcloc !15150
  call void @llvm.dbg.value(metadata i32 undef, metadata !15147, metadata !DIExpression()) #23, !dbg !16377
  call void @llvm.dbg.value(metadata i32 undef, metadata !15148, metadata !DIExpression()) #23, !dbg !16377
  call void @llvm.dbg.value(metadata i32 undef, metadata !15141, metadata !DIExpression()) #23, !dbg !16373
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16378
  br i1 %3, label %5, label %4, !dbg !16379

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !16380
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16380
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !16380
  unreachable, !dbg !16380

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15147, metadata !DIExpression()) #23, !dbg !16377
  call void @llvm.dbg.value(metadata i32 undef, metadata !15141, metadata !DIExpression()) #23, !dbg !16373
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16381
  call void @llvm.dbg.value(metadata i32 undef, metadata !16370, metadata !DIExpression()), !dbg !16372
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16367, metadata !DIExpression()), !dbg !16371
  call void @llvm.dbg.value(metadata i32 undef, metadata !16368, metadata !DIExpression()), !dbg !16372
  %6 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #24, !dbg !16382
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !16367, metadata !DIExpression()), !dbg !16371
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !16385
  br i1 %8, label %10, label %9, !dbg !16387

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !16388
  br label %10, !dbg !16390

10:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !15169, metadata !DIExpression()) #23, !dbg !16391
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15174, metadata !DIExpression()) #23, !dbg !16391
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16393
  br i1 %11, label %13, label %12, !dbg !16394

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !16395
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.292, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16395
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !16395
  unreachable, !dbg !16395

13:                                               ; preds = %10
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !16375
  call void @llvm.dbg.value(metadata i32 %14, metadata !15147, metadata !DIExpression()) #23, !dbg !16377
  call void @llvm.dbg.value(metadata i32 %14, metadata !15141, metadata !DIExpression()) #23, !dbg !16373
  call void @llvm.dbg.value(metadata i32 %14, metadata !16370, metadata !DIExpression()), !dbg !16372
  call void @llvm.dbg.value(metadata i32 undef, metadata !15169, metadata !DIExpression()) #23, !dbg !16391
  call void @llvm.dbg.value(metadata i32 undef, metadata !15183, metadata !DIExpression()) #23, !dbg !16396
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !16398, !srcloc !15189
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !16367, metadata !DIExpression()), !dbg !16371
  call void @llvm.dbg.value(metadata i32 undef, metadata !16368, metadata !DIExpression()), !dbg !16372
  ret %struct.k_thread* %7, !dbg !16399
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !16400 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16402, metadata !DIExpression()), !dbg !16407
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16403, metadata !DIExpression()), !dbg !16407
  call void @llvm.dbg.value(metadata i32 0, metadata !16404, metadata !DIExpression()), !dbg !16408
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15135, metadata !DIExpression()) #23, !dbg !16409
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16411, !srcloc !15150
  call void @llvm.dbg.value(metadata i32 undef, metadata !15147, metadata !DIExpression()) #23, !dbg !16413
  call void @llvm.dbg.value(metadata i32 undef, metadata !15148, metadata !DIExpression()) #23, !dbg !16413
  call void @llvm.dbg.value(metadata i32 undef, metadata !15141, metadata !DIExpression()) #23, !dbg !16409
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16414
  br i1 %3, label %5, label %4, !dbg !16415

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !16416
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16416
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !16416
  unreachable, !dbg !16416

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15147, metadata !DIExpression()) #23, !dbg !16413
  call void @llvm.dbg.value(metadata i32 undef, metadata !15141, metadata !DIExpression()) #23, !dbg !16409
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16417
  call void @llvm.dbg.value(metadata i32 undef, metadata !16406, metadata !DIExpression()), !dbg !16408
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16403, metadata !DIExpression()), !dbg !16407
  call void @llvm.dbg.value(metadata i32 undef, metadata !16404, metadata !DIExpression()), !dbg !16408
  %6 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #24, !dbg !16418
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !16403, metadata !DIExpression()), !dbg !16407
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !16421
  br i1 %8, label %11, label %9, !dbg !16423

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !16424
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !16426
  br label %11, !dbg !16427

11:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !15169, metadata !DIExpression()) #23, !dbg !16428
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15174, metadata !DIExpression()) #23, !dbg !16428
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16430
  br i1 %12, label %14, label %13, !dbg !16431

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !16432
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.292, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16432
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !16432
  unreachable, !dbg !16432

14:                                               ; preds = %11
  %15 = extractvalue { i32, i32 } %2, 0, !dbg !16411
  call void @llvm.dbg.value(metadata i32 %15, metadata !15147, metadata !DIExpression()) #23, !dbg !16413
  call void @llvm.dbg.value(metadata i32 %15, metadata !15141, metadata !DIExpression()) #23, !dbg !16409
  call void @llvm.dbg.value(metadata i32 %15, metadata !16406, metadata !DIExpression()), !dbg !16408
  call void @llvm.dbg.value(metadata i32 undef, metadata !15169, metadata !DIExpression()) #23, !dbg !16428
  call void @llvm.dbg.value(metadata i32 undef, metadata !15183, metadata !DIExpression()) #23, !dbg !16433
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !16435, !srcloc !15189
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !16403, metadata !DIExpression()), !dbg !16407
  call void @llvm.dbg.value(metadata i32 undef, metadata !16404, metadata !DIExpression()), !dbg !16408
  ret %struct.k_thread* %7, !dbg !16436
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16437 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16439, metadata !DIExpression()), !dbg !16440
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16247, metadata !DIExpression()) #23, !dbg !16441
  call void @llvm.dbg.value(metadata i32 0, metadata !16248, metadata !DIExpression()) #23, !dbg !16443
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15135, metadata !DIExpression()) #23, !dbg !16444
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16446, !srcloc !15150
  call void @llvm.dbg.value(metadata i32 undef, metadata !15147, metadata !DIExpression()) #23, !dbg !16448
  call void @llvm.dbg.value(metadata i32 undef, metadata !15148, metadata !DIExpression()) #23, !dbg !16448
  call void @llvm.dbg.value(metadata i32 undef, metadata !15141, metadata !DIExpression()) #23, !dbg !16444
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16449
  br i1 %3, label %5, label %4, !dbg !16450

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !16451
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16451
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !16451
  unreachable, !dbg !16451

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15147, metadata !DIExpression()) #23, !dbg !16448
  call void @llvm.dbg.value(metadata i32 undef, metadata !15141, metadata !DIExpression()) #23, !dbg !16444
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16452
  call void @llvm.dbg.value(metadata i32 undef, metadata !16250, metadata !DIExpression()) #23, !dbg !16443
  call void @llvm.dbg.value(metadata i32 undef, metadata !16248, metadata !DIExpression()) #23, !dbg !16443
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !16453
  call void @llvm.dbg.value(metadata i32 undef, metadata !15169, metadata !DIExpression()) #23, !dbg !16454
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15174, metadata !DIExpression()) #23, !dbg !16454
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16456
  br i1 %6, label %8, label %7, !dbg !16457

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !16458
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.292, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16458
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !16458
  unreachable, !dbg !16458

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !16446
  call void @llvm.dbg.value(metadata i32 %9, metadata !15147, metadata !DIExpression()) #23, !dbg !16448
  call void @llvm.dbg.value(metadata i32 %9, metadata !15141, metadata !DIExpression()) #23, !dbg !16444
  call void @llvm.dbg.value(metadata i32 %9, metadata !16250, metadata !DIExpression()) #23, !dbg !16443
  call void @llvm.dbg.value(metadata i32 undef, metadata !15169, metadata !DIExpression()) #23, !dbg !16454
  call void @llvm.dbg.value(metadata i32 undef, metadata !15183, metadata !DIExpression()) #23, !dbg !16459
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !16461, !srcloc !15189
  call void @llvm.dbg.value(metadata i32 1, metadata !16248, metadata !DIExpression()) #23, !dbg !16443
  call void @llvm.dbg.value(metadata i32 undef, metadata !16248, metadata !DIExpression()) #23, !dbg !16443
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !16462
  ret void, !dbg !16463
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16464 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16466, metadata !DIExpression()), !dbg !16472
  call void @llvm.dbg.value(metadata i32 %1, metadata !16467, metadata !DIExpression()), !dbg !16472
  call void @llvm.dbg.value(metadata i8 0, metadata !16468, metadata !DIExpression()), !dbg !16472
  call void @llvm.dbg.value(metadata i32 0, metadata !16469, metadata !DIExpression()), !dbg !16473
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15135, metadata !DIExpression()) #23, !dbg !16474
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16476, !srcloc !15150
  call void @llvm.dbg.value(metadata i32 undef, metadata !15147, metadata !DIExpression()) #23, !dbg !16478
  call void @llvm.dbg.value(metadata i32 undef, metadata !15148, metadata !DIExpression()) #23, !dbg !16478
  call void @llvm.dbg.value(metadata i32 undef, metadata !15141, metadata !DIExpression()) #23, !dbg !16474
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16479
  br i1 %4, label %6, label %5, !dbg !16480

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !16481
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16481
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !16481
  unreachable, !dbg !16481

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !15147, metadata !DIExpression()) #23, !dbg !16478
  call void @llvm.dbg.value(metadata i32 undef, metadata !15141, metadata !DIExpression()) #23, !dbg !16474
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16482
  call void @llvm.dbg.value(metadata i32 undef, metadata !16471, metadata !DIExpression()), !dbg !16473
  call void @llvm.dbg.value(metadata i8 poison, metadata !16468, metadata !DIExpression()), !dbg !16472
  call void @llvm.dbg.value(metadata i32 undef, metadata !16469, metadata !DIExpression()), !dbg !16473
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %9 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !16483
  call void @llvm.dbg.value(metadata i1 %9, metadata !16468, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16472
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %11 = bitcast %union.anon.2* %10 to i8*
  %12 = trunc i32 %1 to i8
  br i1 %9, label %13, label %34, !dbg !16486

13:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15327, metadata !DIExpression()) #23, !dbg !16487
  %14 = load i8, i8* %7, align 1, !dbg !16493
  %15 = and i8 %14, 127, !dbg !16493
  store i8 %15, i8* %7, align 1, !dbg !16493
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15335, metadata !DIExpression()) #23, !dbg !16494
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !16496
  store i8 %12, i8* %11, align 2, !dbg !16497
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15344, metadata !DIExpression()) #23, !dbg !16498
  %16 = load i8, i8* %7, align 1, !dbg !16500
  %17 = or i8 %16, -128, !dbg !16500
  store i8 %17, i8* %7, align 1, !dbg !16500
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15351, metadata !DIExpression()) #23, !dbg !16501
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15358, metadata !DIExpression()) #23, !dbg !16503
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15364, metadata !DIExpression()) #23, !dbg !16503
  %18 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !16505
  br i1 %18, label %19, label %20, !dbg !16506

19:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.293, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 186) #25, !dbg !16507
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 186) #25, !dbg !16507
  unreachable, !dbg !16507

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !16508
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !15365, metadata !DIExpression()) #23, !dbg !16503
  %22 = icmp eq %struct._dnode* %21, null, !dbg !16509
  br i1 %22, label %32, label %23, !dbg !16508

23:                                               ; preds = %20, %29
  %24 = phi %struct._dnode* [ %30, %29 ], [ %21, %20 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !15365, metadata !DIExpression()) #23, !dbg !16503
  %25 = bitcast %struct._dnode* %24 to %struct.k_thread*, !dbg !16510
  call void @llvm.dbg.value(metadata %struct.k_thread* %25, metadata !15365, metadata !DIExpression()) #23, !dbg !16503
  %26 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %25) #25, !dbg !16511
  %27 = icmp sgt i32 %26, 0, !dbg !16512
  br i1 %27, label %28, label %29, !dbg !16513

28:                                               ; preds = %23
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %24, %struct._dnode* noundef %8) #25, !dbg !16514
  br label %33, !dbg !16515

29:                                               ; preds = %23
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %24) #25, !dbg !16509
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !15365, metadata !DIExpression()) #23, !dbg !16503
  %31 = icmp eq %struct._dnode* %30, null, !dbg !16509
  br i1 %31, label %32, label %23, !dbg !16508, !llvm.loop !16516

32:                                               ; preds = %29, %20
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %8) #25, !dbg !16518
  br label %33, !dbg !16519

33:                                               ; preds = %28, %32
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !16520
  br label %35, !dbg !16521

34:                                               ; preds = %6
  store i8 %12, i8* %11, align 2, !dbg !16522
  br label %35

35:                                               ; preds = %33, %34
  call void @llvm.dbg.value(metadata i32 undef, metadata !15169, metadata !DIExpression()) #23, !dbg !16524
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15174, metadata !DIExpression()) #23, !dbg !16524
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16526
  br i1 %36, label %38, label %37, !dbg !16527

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !16528
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.292, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16528
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !16528
  unreachable, !dbg !16528

38:                                               ; preds = %35
  %39 = extractvalue { i32, i32 } %3, 0, !dbg !16476
  call void @llvm.dbg.value(metadata i32 %39, metadata !15147, metadata !DIExpression()) #23, !dbg !16478
  call void @llvm.dbg.value(metadata i32 %39, metadata !15141, metadata !DIExpression()) #23, !dbg !16474
  call void @llvm.dbg.value(metadata i32 %39, metadata !16471, metadata !DIExpression()), !dbg !16473
  call void @llvm.dbg.value(metadata i32 undef, metadata !15169, metadata !DIExpression()) #23, !dbg !16524
  call void @llvm.dbg.value(metadata i32 undef, metadata !15183, metadata !DIExpression()) #23, !dbg !16529
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %39) #23, !dbg !16531, !srcloc !15189
  call void @llvm.dbg.value(metadata i8 poison, metadata !16468, metadata !DIExpression()), !dbg !16472
  call void @llvm.dbg.value(metadata i32 undef, metadata !16469, metadata !DIExpression()), !dbg !16473
  ret i1 %9, !dbg !16532
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16533 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16537, metadata !DIExpression()), !dbg !16540
  call void @llvm.dbg.value(metadata i32 %1, metadata !16538, metadata !DIExpression()), !dbg !16540
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !16541
  call void @llvm.dbg.value(metadata i1 %3, metadata !16539, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16540
  br i1 %3, label %4, label %12, !dbg !16542

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16544
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !16545
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !16545
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !16545
  %9 = load i8, i8* %8, align 1, !dbg !16545
  %10 = icmp eq i8 %9, 0, !dbg !16546
  br i1 %10, label %11, label %12, !dbg !16547

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !16548
  br label %12, !dbg !16550

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !16551
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !16552 {
  call void @llvm.dbg.value(metadata i32 0, metadata !16554, metadata !DIExpression()), !dbg !16557
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15135, metadata !DIExpression()) #23, !dbg !16558
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16560, !srcloc !15150
  call void @llvm.dbg.value(metadata i32 undef, metadata !15147, metadata !DIExpression()) #23, !dbg !16562
  call void @llvm.dbg.value(metadata i32 undef, metadata !15148, metadata !DIExpression()) #23, !dbg !16562
  call void @llvm.dbg.value(metadata i32 undef, metadata !15141, metadata !DIExpression()) #23, !dbg !16558
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16563
  br i1 %2, label %4, label %3, !dbg !16564

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !16565
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16565
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !16565
  unreachable, !dbg !16565

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !15147, metadata !DIExpression()) #23, !dbg !16562
  call void @llvm.dbg.value(metadata i32 undef, metadata !15141, metadata !DIExpression()) #23, !dbg !16558
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16566
  call void @llvm.dbg.value(metadata i32 undef, metadata !16556, metadata !DIExpression()), !dbg !16557
  call void @llvm.dbg.value(metadata i32 undef, metadata !16554, metadata !DIExpression()), !dbg !16557
  tail call fastcc void @z_sched_lock() #24, !dbg !16567
  call void @llvm.dbg.value(metadata i32 undef, metadata !15169, metadata !DIExpression()) #23, !dbg !16570
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15174, metadata !DIExpression()) #23, !dbg !16570
  %5 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16572
  br i1 %5, label %7, label %6, !dbg !16573

6:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !16574
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.292, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16574
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !16574
  unreachable, !dbg !16574

7:                                                ; preds = %4
  %8 = extractvalue { i32, i32 } %1, 0, !dbg !16560
  call void @llvm.dbg.value(metadata i32 %8, metadata !15147, metadata !DIExpression()) #23, !dbg !16562
  call void @llvm.dbg.value(metadata i32 %8, metadata !15141, metadata !DIExpression()) #23, !dbg !16558
  call void @llvm.dbg.value(metadata i32 %8, metadata !16556, metadata !DIExpression()), !dbg !16557
  call void @llvm.dbg.value(metadata i32 undef, metadata !15169, metadata !DIExpression()) #23, !dbg !16570
  call void @llvm.dbg.value(metadata i32 undef, metadata !15183, metadata !DIExpression()) #23, !dbg !16575
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !16577, !srcloc !15189
  call void @llvm.dbg.value(metadata i32 1, metadata !16554, metadata !DIExpression()), !dbg !16557
  call void @llvm.dbg.value(metadata i32 undef, metadata !16554, metadata !DIExpression()), !dbg !16557
  ret void, !dbg !16578
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !16579 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16580, !srcloc !15869
  call void @llvm.dbg.value(metadata i32 %1, metadata !15865, metadata !DIExpression()) #23, !dbg !16585
  %2 = icmp eq i32 %1, 0, !dbg !16586
  br i1 %2, label %4, label %3, !dbg !16587

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.311, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.312, i32 0, i32 0), i32 noundef 253) #25, !dbg !16588
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.296, i32 0, i32 0)) #25, !dbg !16588
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.312, i32 0, i32 0), i32 noundef 253) #25, !dbg !16588
  unreachable, !dbg !16588

4:                                                ; preds = %0
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16590
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !16590
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !16590
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !16590
  %9 = load i8, i8* %8, align 1, !dbg !16590
  %10 = icmp eq i8 %9, 1, !dbg !16590
  br i1 %10, label %11, label %12, !dbg !16593

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.22.313, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.312, i32 0, i32 0), i32 noundef 254) #25, !dbg !16594
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.296, i32 0, i32 0)) #25, !dbg !16594
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.312, i32 0, i32 0), i32 noundef 254) #25, !dbg !16594
  unreachable, !dbg !16594

12:                                               ; preds = %4
  %13 = add i8 %9, -1, !dbg !16596
  store i8 %13, i8* %8, align 1, !dbg !16596
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16597, !srcloc !16599
  ret void, !dbg !16600
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !16601 {
  call void @llvm.dbg.value(metadata i32 0, metadata !16603, metadata !DIExpression()), !dbg !16606
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15135, metadata !DIExpression()) #23, !dbg !16607
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16609, !srcloc !15150
  call void @llvm.dbg.value(metadata i32 undef, metadata !15147, metadata !DIExpression()) #23, !dbg !16611
  call void @llvm.dbg.value(metadata i32 undef, metadata !15148, metadata !DIExpression()) #23, !dbg !16611
  call void @llvm.dbg.value(metadata i32 undef, metadata !15141, metadata !DIExpression()) #23, !dbg !16607
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16612
  br i1 %2, label %4, label %3, !dbg !16613

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !16614
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16614
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !16614
  unreachable, !dbg !16614

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !15147, metadata !DIExpression()) #23, !dbg !16611
  call void @llvm.dbg.value(metadata i32 undef, metadata !15141, metadata !DIExpression()) #23, !dbg !16607
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16615
  call void @llvm.dbg.value(metadata i32 undef, metadata !16605, metadata !DIExpression()), !dbg !16606
  call void @llvm.dbg.value(metadata i32 undef, metadata !16603, metadata !DIExpression()), !dbg !16606
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16616
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !16616
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !16616
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !16616
  %9 = load i8, i8* %8, align 1, !dbg !16616
  %10 = icmp eq i8 %9, 0, !dbg !16616
  br i1 %10, label %11, label %12, !dbg !16621

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4.316, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 999) #25, !dbg !16622
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.296, i32 0, i32 0)) #25, !dbg !16622
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 999) #25, !dbg !16622
  unreachable, !dbg !16622

12:                                               ; preds = %4
  %13 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16624, !srcloc !15869
  call void @llvm.dbg.value(metadata i32 %13, metadata !15865, metadata !DIExpression()) #23, !dbg !16629
  %14 = icmp eq i32 %13, 0, !dbg !16630
  br i1 %14, label %16, label %15, !dbg !16631

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.311, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 1000) #25, !dbg !16632
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.296, i32 0, i32 0)) #25, !dbg !16632
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 1000) #25, !dbg !16632
  unreachable, !dbg !16632

16:                                               ; preds = %12
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16634
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %17, i32 0, i32 0, i32 4, !dbg !16635
  %19 = bitcast %union.anon.2* %18 to %struct.device_state*, !dbg !16635
  %20 = getelementptr inbounds %struct.device_state, %struct.device_state* %19, i32 0, i32 1, !dbg !16635
  %21 = load i8, i8* %20, align 1, !dbg !16636
  %22 = add i8 %21, 1, !dbg !16636
  store i8 %22, i8* %20, align 1, !dbg !16636
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !16637
  call void @llvm.dbg.value(metadata i32 undef, metadata !15169, metadata !DIExpression()) #23, !dbg !16638
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15174, metadata !DIExpression()) #23, !dbg !16638
  %23 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16640
  br i1 %23, label %25, label %24, !dbg !16641

24:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !16642
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.292, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16642
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !16642
  unreachable, !dbg !16642

25:                                               ; preds = %16
  %26 = extractvalue { i32, i32 } %1, 0, !dbg !16609
  call void @llvm.dbg.value(metadata i32 %26, metadata !15147, metadata !DIExpression()) #23, !dbg !16611
  call void @llvm.dbg.value(metadata i32 %26, metadata !15141, metadata !DIExpression()) #23, !dbg !16607
  call void @llvm.dbg.value(metadata i32 %26, metadata !16605, metadata !DIExpression()), !dbg !16606
  call void @llvm.dbg.value(metadata i32 undef, metadata !15169, metadata !DIExpression()) #23, !dbg !16638
  call void @llvm.dbg.value(metadata i32 undef, metadata !15183, metadata !DIExpression()) #23, !dbg !16643
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %26) #23, !dbg !16645, !srcloc !15189
  call void @llvm.dbg.value(metadata i32 1, metadata !16603, metadata !DIExpression()), !dbg !16606
  call void @llvm.dbg.value(metadata i32 undef, metadata !16603, metadata !DIExpression()), !dbg !16606
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !16646
  ret void, !dbg !16647
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #8 !dbg !16648 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !16649
  ret %struct.k_thread* %1, !dbg !16650
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !16651 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !16655, metadata !DIExpression()), !dbg !16660
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !16656, metadata !DIExpression()), !dbg !16660
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !16661
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16657, metadata !DIExpression()), !dbg !16660
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !16662
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16658, metadata !DIExpression()), !dbg !16660
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #24, !dbg !16663
  call void @llvm.dbg.value(metadata i32 %5, metadata !16659, metadata !DIExpression()), !dbg !16660
  %6 = icmp sgt i32 %5, 0, !dbg !16664
  br i1 %6, label %17, label %7, !dbg !16666

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !16667
  br i1 %8, label %17, label %9, !dbg !16669

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !16670
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !16670
  %12 = load i32, i32* %11, align 8, !dbg !16670
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !16672
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !16672
  %15 = load i32, i32* %14, align 8, !dbg !16672
  %16 = icmp ult i32 %12, %15, !dbg !16673
  br label %17, !dbg !16674

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !16675
  ret i1 %18, !dbg !16676
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16677 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16694, metadata !DIExpression()), !dbg !16709
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16695, metadata !DIExpression()), !dbg !16709
  %4 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !16710
  br i1 %4, label %5, label %6, !dbg !16713

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.293, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 1179) #25, !dbg !16714
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 1179) #25, !dbg !16714
  unreachable, !dbg !16714

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16716
  %8 = load i32, i32* %7, align 4, !dbg !16717
  %9 = add nsw i32 %8, 1, !dbg !16717
  store i32 %9, i32* %7, align 4, !dbg !16717
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !16718
  store i32 %8, i32* %10, align 8, !dbg !16719
  %11 = load i32, i32* %7, align 4, !dbg !16720
  %12 = icmp eq i32 %11, 0, !dbg !16721
  br i1 %12, label %13, label %35, !dbg !16722

13:                                               ; preds = %6
  %14 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !16723
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %14) #23, !dbg !16723
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !16697, metadata !DIExpression()), !dbg !16723
  %15 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16723
  %16 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !16723
  %17 = load i32, i32* %16, align 4, !dbg !16723
  %18 = shl i32 %17, 2, !dbg !16723
  %19 = alloca i8, i32 %18, align 8, !dbg !16723
  %20 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !16723
  store i8* %19, i8** %20, align 4, !dbg !16723
  %21 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !16723
  %22 = alloca i8, i32 %17, align 8, !dbg !16723
  store i8* %22, i8** %21, align 4, !dbg !16723
  %23 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !16723
  store i32 -1, i32* %23, align 4, !dbg !16723
  %24 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !16724
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !16706, metadata !DIExpression()), !dbg !16725
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !16696, metadata !DIExpression()), !dbg !16709
  %25 = icmp eq %struct.rbnode* %24, null, !dbg !16726
  br i1 %25, label %26, label %27, !dbg !16723

26:                                               ; preds = %27, %13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %14) #23, !dbg !16726
  br label %35, !dbg !16727

27:                                               ; preds = %13, %27
  %28 = phi %struct.rbnode* [ %33, %27 ], [ %24, %13 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %28, metadata !16696, metadata !DIExpression()), !dbg !16709
  %29 = load i32, i32* %7, align 4, !dbg !16728
  %30 = add nsw i32 %29, 1, !dbg !16728
  store i32 %30, i32* %7, align 4, !dbg !16728
  %31 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %28, i32 2, !dbg !16730
  %32 = bitcast %struct.rbnode* %31 to i32*, !dbg !16730
  store i32 %29, i32* %32, align 8, !dbg !16731
  %33 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !16724
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !16706, metadata !DIExpression()), !dbg !16725
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !16696, metadata !DIExpression()), !dbg !16709
  %34 = icmp eq %struct.rbnode* %33, null, !dbg !16726
  br i1 %34, label %26, label %27, !dbg !16723, !llvm.loop !16732

35:                                               ; preds = %26, %6
  %36 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16734
  %37 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16735
  call void @rb_insert(%struct.rbtree* noundef %36, %struct.rbnode* noundef %37) #25, !dbg !16736
  ret void, !dbg !16737
}

; Function Attrs: optsize
declare !dbg !16738 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !16743 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16746 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16748, metadata !DIExpression()), !dbg !16750
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16749, metadata !DIExpression()), !dbg !16750
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !16751
  br i1 %3, label %4, label %5, !dbg !16754

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.293, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 1200) #25, !dbg !16755
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 1200) #25, !dbg !16755
  unreachable, !dbg !16755

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16757
  %7 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16758
  tail call void @rb_remove(%struct.rbtree* noundef %6, %struct.rbnode* noundef %7) #25, !dbg !16759
  %8 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !16760
  %9 = load %struct.rbnode*, %struct.rbnode** %8, align 4, !dbg !16760
  %10 = icmp eq %struct.rbnode* %9, null, !dbg !16762
  br i1 %10, label %11, label %13, !dbg !16763

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16764
  store i32 0, i32* %12, align 4, !dbg !16766
  br label %13, !dbg !16767

13:                                               ; preds = %11, %5
  ret void, !dbg !16768
}

; Function Attrs: optsize
declare !dbg !16769 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !16770 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16774, metadata !DIExpression()), !dbg !16777
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16775, metadata !DIExpression()), !dbg !16777
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16778
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #24, !dbg !16779
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !16776, metadata !DIExpression()), !dbg !16777
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16775, metadata !DIExpression()), !dbg !16777
  ret %struct.k_thread* %4, !dbg !16780
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !16781 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !16785, metadata !DIExpression()), !dbg !16786
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #25, !dbg !16787
  ret %struct.rbnode* %2, !dbg !16788
}

; Function Attrs: optsize
declare !dbg !16789 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #16 !dbg !16792 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !16802, metadata !DIExpression()), !dbg !16806
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !16807
  %3 = load i32, i32* %2, align 4, !dbg !16807
  %4 = icmp eq i32 %3, 0, !dbg !16809
  br i1 %4, label %10, label %5, !dbg !16810

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16803, metadata !DIExpression()), !dbg !16806
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !16811, !range !7518
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !16812
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !16804, metadata !DIExpression()), !dbg !16806
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #24, !dbg !16813
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !16805, metadata !DIExpression()), !dbg !16806
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16803, metadata !DIExpression()), !dbg !16806
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !16806
  ret %struct.k_thread* %11, !dbg !16814
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !16815 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16819, metadata !DIExpression()), !dbg !16822
  call void @llvm.dbg.value(metadata i32 0, metadata !16820, metadata !DIExpression()), !dbg !16822
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !16823
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16821, metadata !DIExpression()), !dbg !16822
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16824
  br i1 %3, label %8, label %4, !dbg !16825

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !16826
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !16828
  call void @llvm.dbg.value(metadata i32 1, metadata !16820, metadata !DIExpression()), !dbg !16822
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !16823
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16821, metadata !DIExpression()), !dbg !16822
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !16824
  br i1 %7, label %8, label %4, !dbg !16825, !llvm.loop !16829

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !16822
  ret i32 %9, !dbg !16831
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #8 !dbg !16832 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16834, metadata !DIExpression()), !dbg !16835
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !16836
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #24, !dbg !16837
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !16838
  ret %struct.k_thread* %4, !dbg !16839
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #7 !dbg !16840 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !16849, metadata !DIExpression()), !dbg !16850
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !16851
  tail call fastcc void @sys_dlist_init.317(%struct._dnode* noundef nonnull %2) #24, !dbg !16852
  ret void, !dbg !16853
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.317(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !16854 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16858, metadata !DIExpression()), !dbg !16859
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16860
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !16861
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16862
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !16863
  ret void, !dbg !16864
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !16865 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #24, !dbg !16866
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #24, !dbg !16867
  ret void, !dbg !16868
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !16869 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16874, metadata !DIExpression()), !dbg !16875
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !16876
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !16876
  %4 = load i8, i8* %3, align 2, !dbg !16876
  %5 = sext i8 %4 to i32, !dbg !16877
  ret i32 %5, !dbg !16878
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16879 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16883, metadata !DIExpression()), !dbg !16886
  call void @llvm.dbg.value(metadata i32 %1, metadata !16884, metadata !DIExpression()), !dbg !16886
  %3 = add i32 %1, 16, !dbg !16887
  %4 = icmp ult i32 %3, 31, !dbg !16887
  br i1 %4, label %6, label %5, !dbg !16887

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([134 x i8], [134 x i8]* @.str.8.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 1331) #25, !dbg !16891
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9.321, i32 0, i32 0), i32 noundef %1, i32 noundef 14, i32 noundef -16) #25, !dbg !16891
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 1331) #25, !dbg !16891
  unreachable, !dbg !16891

6:                                                ; preds = %2
  %7 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16893, !srcloc !15869
  call void @llvm.dbg.value(metadata i32 %7, metadata !15865, metadata !DIExpression()) #23, !dbg !16898
  %8 = icmp eq i32 %7, 0, !dbg !16899
  br i1 %8, label %10, label %9, !dbg !16900

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.311, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 1332) #25, !dbg !16901
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.296, i32 0, i32 0)) #25, !dbg !16901
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 1332) #25, !dbg !16901
  unreachable, !dbg !16901

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16885, metadata !DIExpression()), !dbg !16886
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !16903
  ret void, !dbg !16904
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !16905 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #24, !dbg !16906
  br i1 %1, label %8, label %2, !dbg !16907

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #25, !dbg !16908
  br i1 %3, label %8, label %4, !dbg !16909

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16910
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #24, !dbg !16911
  %7 = xor i1 %6, true, !dbg !16909
  br label %8, !dbg !16909

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !16912
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #8 !dbg !16913 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !16914, !range !6681
  %2 = icmp eq i8 %1, 0, !dbg !16914
  ret i1 %2, !dbg !16915
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !16916 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16919, !srcloc !15869
  call void @llvm.dbg.value(metadata i32 %1, metadata !15865, metadata !DIExpression()) #23, !dbg !16924
  %2 = icmp eq i32 %1, 0, !dbg !16925
  br i1 %2, label %4, label %3, !dbg !16926

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.311, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 1392) #25, !dbg !16927
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.296, i32 0, i32 0)) #25, !dbg !16927
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 1392) #25, !dbg !16927
  unreachable, !dbg !16927

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15135, metadata !DIExpression()) #23, !dbg !16929
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16931, !srcloc !15150
  call void @llvm.dbg.value(metadata i32 undef, metadata !15147, metadata !DIExpression()) #23, !dbg !16933
  call void @llvm.dbg.value(metadata i32 undef, metadata !15148, metadata !DIExpression()) #23, !dbg !16933
  call void @llvm.dbg.value(metadata i32 undef, metadata !15141, metadata !DIExpression()) #23, !dbg !16929
  %6 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16934
  br i1 %6, label %8, label %7, !dbg !16935

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !16936
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16936
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !16936
  unreachable, !dbg !16936

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !15147, metadata !DIExpression()) #23, !dbg !16933
  call void @llvm.dbg.value(metadata i32 undef, metadata !15141, metadata !DIExpression()) #23, !dbg !16929
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16937
  call void @llvm.dbg.value(metadata i32 undef, metadata !16918, metadata !DIExpression()), !dbg !16938
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16939
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !15327, metadata !DIExpression()) #23, !dbg !16942
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 3, !dbg !16944
  %11 = load i8, i8* %10, align 1, !dbg !16945
  %12 = and i8 %11, 127, !dbg !16945
  store i8 %12, i8* %10, align 1, !dbg !16945
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !15335, metadata !DIExpression()) #23, !dbg !16946
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %9) #25, !dbg !16948
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16949
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !15344, metadata !DIExpression()) #23, !dbg !16950
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 3, !dbg !16952
  %15 = load i8, i8* %14, align 1, !dbg !16953
  %16 = or i8 %15, -128, !dbg !16953
  store i8 %16, i8* %14, align 1, !dbg !16953
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !15351, metadata !DIExpression()) #23, !dbg !16954
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15358, metadata !DIExpression()) #23, !dbg !16956
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !15364, metadata !DIExpression()) #23, !dbg !16956
  %17 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %13) #25, !dbg !16958
  br i1 %17, label %18, label %19, !dbg !16959

18:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.293, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 186) #25, !dbg !16960
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 186) #25, !dbg !16960
  unreachable, !dbg !16960

19:                                               ; preds = %8
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !16961
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !15365, metadata !DIExpression()) #23, !dbg !16956
  %21 = icmp eq %struct._dnode* %20, null, !dbg !16962
  br i1 %21, label %32, label %22, !dbg !16961

22:                                               ; preds = %19, %29
  %23 = phi %struct._dnode* [ %30, %29 ], [ %20, %19 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %23, metadata !15365, metadata !DIExpression()) #23, !dbg !16956
  %24 = bitcast %struct._dnode* %23 to %struct.k_thread*, !dbg !16963
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !15365, metadata !DIExpression()) #23, !dbg !16956
  %25 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %13, %struct.k_thread* noundef nonnull %24) #25, !dbg !16964
  %26 = icmp sgt i32 %25, 0, !dbg !16965
  br i1 %26, label %27, label %29, !dbg !16966

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !16967
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %23, %struct._dnode* noundef %28) #25, !dbg !16968
  br label %34, !dbg !16969

29:                                               ; preds = %22
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %23) #25, !dbg !16962
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !15365, metadata !DIExpression()) #23, !dbg !16956
  %31 = icmp eq %struct._dnode* %30, null, !dbg !16962
  br i1 %31, label %32, label %22, !dbg !16961, !llvm.loop !16970

32:                                               ; preds = %29, %19
  %33 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !16972
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %33) #25, !dbg !16973
  br label %34, !dbg !16974

34:                                               ; preds = %27, %32
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !16975
  call void @llvm.dbg.value(metadata i32 undef, metadata !15813, metadata !DIExpression()) #23, !dbg !16976
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15818, metadata !DIExpression()) #23, !dbg !16976
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15822, metadata !DIExpression()) #23, !dbg !16978
  %35 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16980
  br i1 %35, label %37, label %36, !dbg !16981

36:                                               ; preds = %34
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 225) #25, !dbg !16982
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.292, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16982
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 225) #25, !dbg !16982
  unreachable, !dbg !16982

37:                                               ; preds = %34
  %38 = extractvalue { i32, i32 } %5, 0, !dbg !16931
  call void @llvm.dbg.value(metadata i32 %38, metadata !15147, metadata !DIExpression()) #23, !dbg !16933
  call void @llvm.dbg.value(metadata i32 %38, metadata !15141, metadata !DIExpression()) #23, !dbg !16929
  call void @llvm.dbg.value(metadata i32 %38, metadata !16918, metadata !DIExpression()), !dbg !16938
  call void @llvm.dbg.value(metadata i32 undef, metadata !15813, metadata !DIExpression()) #23, !dbg !16976
  %39 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %38) #25, !dbg !16983
  ret void, !dbg !16984
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !16985 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !16989, metadata !DIExpression()), !dbg !16992
  %3 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16993, !srcloc !15869
  call void @llvm.dbg.value(metadata i32 %3, metadata !15865, metadata !DIExpression()) #23, !dbg !16998
  %4 = icmp eq i32 %3, 0, !dbg !16999
  br i1 %4, label %6, label %5, !dbg !17000

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.311, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 1463) #25, !dbg !17001
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.296, i32 0, i32 0)) #25, !dbg !17001
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 1463) #25, !dbg !17001
  unreachable, !dbg !17001

6:                                                ; preds = %1
  %7 = icmp eq i64 %2, -1, !dbg !17003
  br i1 %7, label %8, label %10, !dbg !17005

8:                                                ; preds = %6
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17006
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %9) #24, !dbg !17008
  br label %15, !dbg !17009

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i64 %2, metadata !16990, metadata !DIExpression()), !dbg !16992
  %11 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #24, !dbg !17010
  %12 = sext i32 %11 to i64, !dbg !17010
  call void @llvm.dbg.value(metadata i64 %12, metadata !16990, metadata !DIExpression()), !dbg !16992
  %13 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %12) #24, !dbg !17011
  %14 = trunc i64 %13 to i32, !dbg !17011
  call void @llvm.dbg.value(metadata i32 %14, metadata !16991, metadata !DIExpression()), !dbg !16992
  br label %15

15:                                               ; preds = %10, %8
  %16 = phi i32 [ -1, %8 ], [ %14, %10 ], !dbg !16992
  ret i32 %16, !dbg !17012
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !17013 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17017, metadata !DIExpression()), !dbg !17018
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !17019, !srcloc !17021
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #24, !dbg !17022
  ret void, !dbg !17023
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !17024 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17028, metadata !DIExpression()), !dbg !17032
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !17033, !srcloc !15869
  call void @llvm.dbg.value(metadata i32 %2, metadata !15865, metadata !DIExpression()) #23, !dbg !17038
  %3 = icmp eq i32 %2, 0, !dbg !17039
  br i1 %3, label %5, label %4, !dbg !17040

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.311, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 1420) #25, !dbg !17041
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.296, i32 0, i32 0)) #25, !dbg !17041
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 1420) #25, !dbg !17041
  unreachable, !dbg !17041

5:                                                ; preds = %1
  %6 = icmp eq i64 %0, 0, !dbg !17043
  br i1 %6, label %7, label %8, !dbg !17045

7:                                                ; preds = %5
  tail call fastcc void @k_yield() #24, !dbg !17046
  br label %43, !dbg !17048

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i64 %0, metadata !17030, metadata !DIExpression()), !dbg !17032
  %9 = icmp sgt i64 %0, -3, !dbg !17049
  br i1 %9, label %10, label %14, !dbg !17051

10:                                               ; preds = %8
  %11 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !17052
  %12 = trunc i64 %0 to i32, !dbg !17054
  %13 = add i32 %11, %12, !dbg !17054
  call void @llvm.dbg.value(metadata i32 %13, metadata !17029, metadata !DIExpression()), !dbg !17032
  br label %17, !dbg !17055

14:                                               ; preds = %8
  %15 = trunc i64 %0 to i32, !dbg !17056
  %16 = sub i32 -2, %15, !dbg !17056
  call void @llvm.dbg.value(metadata i32 %16, metadata !17029, metadata !DIExpression()), !dbg !17032
  br label %17

17:                                               ; preds = %14, %10
  %18 = phi i32 [ %13, %10 ], [ %16, %14 ], !dbg !17058
  call void @llvm.dbg.value(metadata i32 %18, metadata !17029, metadata !DIExpression()), !dbg !17032
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15135, metadata !DIExpression()) #23, !dbg !17059
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17061, !srcloc !15150
  call void @llvm.dbg.value(metadata i32 undef, metadata !15147, metadata !DIExpression()) #23, !dbg !17063
  call void @llvm.dbg.value(metadata i32 undef, metadata !15148, metadata !DIExpression()) #23, !dbg !17063
  call void @llvm.dbg.value(metadata i32 undef, metadata !15141, metadata !DIExpression()) #23, !dbg !17059
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !17064
  br i1 %20, label %22, label %21, !dbg !17065

21:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !17066
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !17066
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !17066
  unreachable, !dbg !17066

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 undef, metadata !15147, metadata !DIExpression()) #23, !dbg !17063
  call void @llvm.dbg.value(metadata i32 undef, metadata !15141, metadata !DIExpression()) #23, !dbg !17059
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !17067
  call void @llvm.dbg.value(metadata i32 undef, metadata !17031, metadata !DIExpression()), !dbg !17032
  %23 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17068
  store %struct.k_thread* %23, %struct.k_thread** @pending_current, align 4, !dbg !17069
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %23) #24, !dbg !17070
  %24 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17071
  %25 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !17072
  tail call fastcc void @z_add_thread_timeout.304(%struct.k_thread* noundef %24, [1 x i64] %25) #24, !dbg !17072
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17073
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %26) #24, !dbg !17074
  call void @llvm.dbg.value(metadata i32 undef, metadata !15813, metadata !DIExpression()) #23, !dbg !17075
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15818, metadata !DIExpression()) #23, !dbg !17075
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15822, metadata !DIExpression()) #23, !dbg !17077
  %27 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !17079
  br i1 %27, label %29, label %28, !dbg !17080

28:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 225) #25, !dbg !17081
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.292, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !17081
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 225) #25, !dbg !17081
  unreachable, !dbg !17081

29:                                               ; preds = %22
  %30 = extractvalue { i32, i32 } %19, 0, !dbg !17061
  call void @llvm.dbg.value(metadata i32 %30, metadata !15147, metadata !DIExpression()) #23, !dbg !17063
  call void @llvm.dbg.value(metadata i32 %30, metadata !15141, metadata !DIExpression()) #23, !dbg !17059
  call void @llvm.dbg.value(metadata i32 %30, metadata !17031, metadata !DIExpression()), !dbg !17032
  call void @llvm.dbg.value(metadata i32 undef, metadata !15813, metadata !DIExpression()) #23, !dbg !17075
  %31 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %30) #25, !dbg !17082
  %32 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17083
  %33 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %32, i32 noundef 16) #24, !dbg !17083
  br i1 %33, label %34, label %35, !dbg !17086

34:                                               ; preds = %29
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.23.322, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 1448) #25, !dbg !17087
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.296, i32 0, i32 0)) #25, !dbg !17087
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 1448) #25, !dbg !17087
  unreachable, !dbg !17087

35:                                               ; preds = %29
  %36 = zext i32 %18 to i64, !dbg !17089
  %37 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !17090
  %38 = zext i32 %37 to i64, !dbg !17090
  %39 = sub nsw i64 %36, %38, !dbg !17091
  call void @llvm.dbg.value(metadata i64 %39, metadata !17028, metadata !DIExpression()), !dbg !17032
  %40 = icmp sgt i64 %39, 0, !dbg !17092
  %41 = select i1 %40, i64 %39, i64 0, !dbg !17092
  %42 = trunc i64 %41 to i32, !dbg !17092
  br label %43

43:                                               ; preds = %35, %7
  %44 = phi i32 [ 0, %7 ], [ %42, %35 ], !dbg !17032
  ret i32 %44, !dbg !17093
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #4 !dbg !17094 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17096, metadata !DIExpression()), !dbg !17097
  call void @llvm.dbg.value(metadata i64 %0, metadata !15195, metadata !DIExpression()), !dbg !17098
  call void @llvm.dbg.value(metadata i32 10000, metadata !15198, metadata !DIExpression()), !dbg !17098
  call void @llvm.dbg.value(metadata i32 1000, metadata !15199, metadata !DIExpression()), !dbg !17098
  call void @llvm.dbg.value(metadata i8 1, metadata !15200, metadata !DIExpression()), !dbg !17098
  call void @llvm.dbg.value(metadata i1 false, metadata !15201, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17098
  call void @llvm.dbg.value(metadata i1 false, metadata !15202, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17098
  call void @llvm.dbg.value(metadata i8 0, metadata !15203, metadata !DIExpression()), !dbg !17098
  call void @llvm.dbg.value(metadata i1 false, metadata !15204, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17098
  call void @llvm.dbg.value(metadata i1 true, metadata !15205, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17098
  call void @llvm.dbg.value(metadata i64 0, metadata !15206, metadata !DIExpression()), !dbg !17098
  call void @llvm.dbg.value(metadata i64 0, metadata !15206, metadata !DIExpression()), !dbg !17098
  call void @llvm.dbg.value(metadata i64 %0, metadata !15195, metadata !DIExpression()), !dbg !17098
  %2 = udiv i64 %0, 10, !dbg !17100
  ret i64 %2, !dbg !17104
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !17105 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !17106, !srcloc !17108
  tail call void @z_impl_k_yield() #24, !dbg !17109
  ret void, !dbg !17110
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !17111 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17115, metadata !DIExpression()), !dbg !17117
  %2 = sext i32 %0 to i64, !dbg !17118
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #24, !dbg !17119
  call void @llvm.dbg.value(metadata i64 %3, metadata !17116, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17117
  %4 = shl i64 %3, 32, !dbg !17120
  %5 = ashr exact i64 %4, 32, !dbg !17120
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #24, !dbg !17121
  call void @llvm.dbg.value(metadata i32 %6, metadata !17116, metadata !DIExpression()), !dbg !17117
  %7 = sext i32 %6 to i64, !dbg !17122
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #24, !dbg !17123
  %9 = trunc i64 %8 to i32, !dbg !17123
  ret i32 %9, !dbg !17124
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #4 !dbg !17125 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17127, metadata !DIExpression()), !dbg !17128
  call void @llvm.dbg.value(metadata i64 %0, metadata !15195, metadata !DIExpression()), !dbg !17129
  call void @llvm.dbg.value(metadata i32 1000000, metadata !15198, metadata !DIExpression()), !dbg !17129
  call void @llvm.dbg.value(metadata i32 10000, metadata !15199, metadata !DIExpression()), !dbg !17129
  call void @llvm.dbg.value(metadata i8 1, metadata !15200, metadata !DIExpression()), !dbg !17129
  call void @llvm.dbg.value(metadata i1 false, metadata !15201, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17129
  call void @llvm.dbg.value(metadata i1 true, metadata !15202, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17129
  call void @llvm.dbg.value(metadata i8 0, metadata !15203, metadata !DIExpression()), !dbg !17129
  call void @llvm.dbg.value(metadata i1 false, metadata !15204, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17129
  call void @llvm.dbg.value(metadata i1 true, metadata !15205, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17129
  call void @llvm.dbg.value(metadata i64 0, metadata !15206, metadata !DIExpression()), !dbg !17129
  call void @llvm.dbg.value(metadata i64 0, metadata !15206, metadata !DIExpression()), !dbg !17129
  %2 = add i64 %0, 99, !dbg !17131
  call void @llvm.dbg.value(metadata i64 %2, metadata !15195, metadata !DIExpression()), !dbg !17129
  %3 = udiv i64 %2, 100, !dbg !17132
  ret i64 %3, !dbg !17133
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #4 !dbg !17134 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17136, metadata !DIExpression()), !dbg !17137
  call void @llvm.dbg.value(metadata i64 %0, metadata !15195, metadata !DIExpression()), !dbg !17138
  call void @llvm.dbg.value(metadata i32 10000, metadata !15198, metadata !DIExpression()), !dbg !17138
  call void @llvm.dbg.value(metadata i32 1000000, metadata !15199, metadata !DIExpression()), !dbg !17138
  call void @llvm.dbg.value(metadata i8 1, metadata !15200, metadata !DIExpression()), !dbg !17138
  call void @llvm.dbg.value(metadata i1 false, metadata !15201, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17138
  call void @llvm.dbg.value(metadata i1 false, metadata !15202, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17138
  call void @llvm.dbg.value(metadata i8 0, metadata !15203, metadata !DIExpression()), !dbg !17138
  call void @llvm.dbg.value(metadata i1 true, metadata !15204, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17138
  call void @llvm.dbg.value(metadata i1 false, metadata !15205, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17138
  call void @llvm.dbg.value(metadata i64 0, metadata !15206, metadata !DIExpression()), !dbg !17138
  call void @llvm.dbg.value(metadata i64 0, metadata !15206, metadata !DIExpression()), !dbg !17138
  %2 = mul i64 %0, 100, !dbg !17140
  ret i64 %2, !dbg !17142
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17143 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17145, metadata !DIExpression()), !dbg !17146
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #24, !dbg !17147
  br i1 %2, label %14, label %3, !dbg !17149

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !17150
  %5 = icmp slt i32 %4, 0, !dbg !17152
  br i1 %5, label %6, label %10, !dbg !17153

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17154
  %8 = load i8, i8* %7, align 1, !dbg !17154
  %9 = icmp eq i8 %8, 16, !dbg !17157
  br i1 %9, label %10, label %14, !dbg !17158

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !17159
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #24, !dbg !17160
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !17161, !srcloc !15869
  call void @llvm.dbg.value(metadata i32 %11, metadata !15865, metadata !DIExpression()) #23, !dbg !17165
  %12 = icmp eq i32 %11, 0, !dbg !17166
  br i1 %12, label %13, label %14, !dbg !17167

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !17168
  br label %14, !dbg !17170

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !17171
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !17172 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17174, metadata !DIExpression()), !dbg !17175
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17176
  %3 = load i8, i8* %2, align 1, !dbg !17176
  %4 = and i8 %3, 2, !dbg !17177
  %5 = icmp ne i8 %4, 0, !dbg !17178
  ret i1 %5, !dbg !17179
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #8 !dbg !17180 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17185
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !17184, metadata !DIExpression()), !dbg !17186
  ret %struct.k_thread* %1, !dbg !17187
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !17188 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !17189, !srcloc !15869
  call void @llvm.dbg.value(metadata i32 %1, metadata !15865, metadata !DIExpression()) #23, !dbg !17192
  %2 = icmp eq i32 %1, 0, !dbg !17193
  br i1 %2, label %3, label %8, !dbg !17194

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17195
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #24, !dbg !17196
  %6 = icmp ne i32 %5, 0, !dbg !17194
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !17197
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17198 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17200, metadata !DIExpression()), !dbg !17202
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15135, metadata !DIExpression()) #23, !dbg !17203
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17205, !srcloc !15150
  call void @llvm.dbg.value(metadata i32 undef, metadata !15147, metadata !DIExpression()) #23, !dbg !17207
  call void @llvm.dbg.value(metadata i32 undef, metadata !15148, metadata !DIExpression()) #23, !dbg !17207
  call void @llvm.dbg.value(metadata i32 undef, metadata !15141, metadata !DIExpression()) #23, !dbg !17203
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !17208
  br i1 %3, label %5, label %4, !dbg !17209

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !17210
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !17210
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !17210
  unreachable, !dbg !17210

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !17205
  call void @llvm.dbg.value(metadata i32 %6, metadata !15147, metadata !DIExpression()) #23, !dbg !17207
  call void @llvm.dbg.value(metadata i32 %6, metadata !15141, metadata !DIExpression()) #23, !dbg !17203
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !17211
  call void @llvm.dbg.value(metadata i32 %6, metadata !17201, metadata !DIExpression()), !dbg !17202
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !17212
  %8 = load i8, i8* %7, align 4, !dbg !17212
  %9 = and i8 %8, 1, !dbg !17214
  %10 = icmp eq i8 %9, 0, !dbg !17215
  br i1 %10, label %15, label %11, !dbg !17216

11:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !15169, metadata !DIExpression()) #23, !dbg !17217
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15174, metadata !DIExpression()) #23, !dbg !17217
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !17220
  br i1 %12, label %14, label %13, !dbg !17221

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !17222
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.292, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !17222
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !17222
  unreachable, !dbg !17222

14:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %6, metadata !15169, metadata !DIExpression()) #23, !dbg !17217
  call void @llvm.dbg.value(metadata i32 %6, metadata !15183, metadata !DIExpression()) #23, !dbg !17223
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !17225, !srcloc !15189
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.327, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 1731) #25, !dbg !17226
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.11.328, i32 0, i32 0), %struct.k_thread* noundef nonnull %0) #25, !dbg !17226
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 1731) #25, !dbg !17226
  unreachable, !dbg !17226

15:                                               ; preds = %5
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17230
  %17 = load i8, i8* %16, align 1, !dbg !17230
  %18 = and i8 %17, 8, !dbg !17232
  %19 = icmp eq i8 %18, 0, !dbg !17233
  br i1 %19, label %24, label %20, !dbg !17234

20:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 undef, metadata !15169, metadata !DIExpression()) #23, !dbg !17235
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15174, metadata !DIExpression()) #23, !dbg !17235
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !17238
  br i1 %21, label %23, label %22, !dbg !17239

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !17240
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.292, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !17240
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !17240
  unreachable, !dbg !17240

23:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i32 %6, metadata !15169, metadata !DIExpression()) #23, !dbg !17235
  call void @llvm.dbg.value(metadata i32 %6, metadata !15183, metadata !DIExpression()) #23, !dbg !17241
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !17243, !srcloc !15189
  br label %39, !dbg !17244

24:                                               ; preds = %15
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #24, !dbg !17245
  %25 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17246
  %26 = icmp eq %struct.k_thread* %25, %0, !dbg !17248
  br i1 %26, label %27, label %35, !dbg !17249

27:                                               ; preds = %24
  %28 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !17250, !srcloc !15869
  call void @llvm.dbg.value(metadata i32 %28, metadata !15865, metadata !DIExpression()) #23, !dbg !17253
  %29 = icmp eq i32 %28, 0, !dbg !17254
  br i1 %29, label %30, label %35, !dbg !17255

30:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 undef, metadata !15813, metadata !DIExpression()) #23, !dbg !17256
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15818, metadata !DIExpression()) #23, !dbg !17256
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15822, metadata !DIExpression()) #23, !dbg !17259
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !17261
  br i1 %31, label %33, label %32, !dbg !17262

32:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 225) #25, !dbg !17263
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.292, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !17263
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 225) #25, !dbg !17263
  unreachable, !dbg !17263

33:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %6, metadata !15813, metadata !DIExpression()) #23, !dbg !17256
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %6) #25, !dbg !17264
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.327, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 1778) #25, !dbg !17265
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12.329, i32 0, i32 0)) #25, !dbg !17265
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 1778) #25, !dbg !17265
  unreachable, !dbg !17265

35:                                               ; preds = %27, %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !15169, metadata !DIExpression()) #23, !dbg !17269
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15174, metadata !DIExpression()) #23, !dbg !17269
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !17271
  br i1 %36, label %38, label %37, !dbg !17272

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !17273
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.292, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !17273
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !17273
  unreachable, !dbg !17273

38:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %6, metadata !15169, metadata !DIExpression()) #23, !dbg !17269
  call void @llvm.dbg.value(metadata i32 %6, metadata !15183, metadata !DIExpression()) #23, !dbg !17274
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !17276, !srcloc !15189
  br label %39, !dbg !17277

39:                                               ; preds = %38, %23
  ret void, !dbg !17277
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !17278 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17280, metadata !DIExpression()), !dbg !17281
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17282
  %3 = load i8, i8* %2, align 1, !dbg !17282
  %4 = and i8 %3, 8, !dbg !17284
  %5 = icmp eq i8 %4, 0, !dbg !17285
  br i1 %5, label %6, label %20, !dbg !17286

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !17287
  %8 = or i8 %7, 8, !dbg !17287
  store i8 %8, i8* %2, align 1, !dbg !17287
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #24, !dbg !17289
  br i1 %9, label %10, label %12, !dbg !17291

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15327, metadata !DIExpression()) #23, !dbg !17292
  %11 = and i8 %8, 95, !dbg !17295
  store i8 %11, i8* %2, align 1, !dbg !17295
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15335, metadata !DIExpression()) #23, !dbg !17296
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #25, !dbg !17298
  br label %12, !dbg !17299

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !17300
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !17300
  %15 = icmp eq %union.anon* %14, null, !dbg !17302
  br i1 %15, label %17, label %16, !dbg !17303

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !17304
  br label %17, !dbg !17306

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !17307
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !17308
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #24, !dbg !17309
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !17310
  br label %20, !dbg !17311

20:                                               ; preds = %17, %1
  ret void, !dbg !17312
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !17313 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !17317, metadata !DIExpression()), !dbg !17319
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !17320
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !17318, metadata !DIExpression()), !dbg !17319
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !17321
  br i1 %3, label %10, label %4, !dbg !17322

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !17323
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !17325
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !17326, metadata !DIExpression()), !dbg !17332
  call void @llvm.dbg.value(metadata i32 0, metadata !17331, metadata !DIExpression()), !dbg !17332
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 8, i32 1, !dbg !17334
  store i32 0, i32* %7, align 4, !dbg !17335
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !17336
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !17320
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !17318, metadata !DIExpression()), !dbg !17319
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !17321
  br i1 %9, label %10, label %4, !dbg !17322, !llvm.loop !17337

10:                                               ; preds = %4, %1
  ret void, !dbg !17339
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !17340 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !17345, metadata !DIExpression()), !dbg !17348
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17344, metadata !DIExpression()), !dbg !17348
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15135, metadata !DIExpression()) #23, !dbg !17349
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17351, !srcloc !15150
  call void @llvm.dbg.value(metadata i32 undef, metadata !15147, metadata !DIExpression()) #23, !dbg !17353
  call void @llvm.dbg.value(metadata i32 undef, metadata !15148, metadata !DIExpression()) #23, !dbg !17353
  call void @llvm.dbg.value(metadata i32 undef, metadata !15141, metadata !DIExpression()) #23, !dbg !17349
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !17354
  br i1 %4, label %6, label %5, !dbg !17355

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !17356
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !17356
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !17356
  unreachable, !dbg !17356

6:                                                ; preds = %2
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !17351
  call void @llvm.dbg.value(metadata i32 %7, metadata !15147, metadata !DIExpression()) #23, !dbg !17353
  call void @llvm.dbg.value(metadata i32 %7, metadata !15141, metadata !DIExpression()) #23, !dbg !17349
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !17357
  call void @llvm.dbg.value(metadata i32 %7, metadata !17346, metadata !DIExpression()), !dbg !17348
  call void @llvm.dbg.value(metadata i32 0, metadata !17347, metadata !DIExpression()), !dbg !17348
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17358
  %9 = load i8, i8* %8, align 1, !dbg !17358
  %10 = and i8 %9, 8, !dbg !17360
  %11 = icmp eq i8 %10, 0, !dbg !17361
  br i1 %11, label %12, label %35, !dbg !17362

12:                                               ; preds = %6
  %13 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %13, metadata !17345, metadata !DIExpression()), !dbg !17348
  %14 = icmp eq i64 %13, 0, !dbg !17363
  br i1 %14, label %35, label %15, !dbg !17365

15:                                               ; preds = %12
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17366
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !17368
  br i1 %17, label %35, label %18, !dbg !17369

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !17370
  %20 = load %union.anon*, %union.anon** %19, align 8, !dbg !17370
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %16, i32 0, i32 3, !dbg !17371
  %22 = icmp eq %union.anon* %20, %21, !dbg !17372
  br i1 %22, label %35, label %23, !dbg !17373

23:                                               ; preds = %18
  %24 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !17374, !srcloc !15869
  call void @llvm.dbg.value(metadata i32 %24, metadata !15865, metadata !DIExpression()) #23, !dbg !17380
  %25 = icmp eq i32 %24, 0, !dbg !17381
  br i1 %25, label %27, label %26, !dbg !17382

26:                                               ; preds = %23
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.311, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 1809) #25, !dbg !17383
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13.332, i32 0, i32 0)) #25, !dbg !17383
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 1809) #25, !dbg !17383
  unreachable, !dbg !17383

27:                                               ; preds = %23
  %28 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17385
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !17386
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %28, %union.anon* noundef nonnull %29) #24, !dbg !17387
  %30 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17388
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %30, [1 x i64] %1) #24, !dbg !17389
  call void @llvm.dbg.value(metadata i32 undef, metadata !15813, metadata !DIExpression()) #23, !dbg !17390
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15818, metadata !DIExpression()) #23, !dbg !17390
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15822, metadata !DIExpression()) #23, !dbg !17392
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !17394
  br i1 %31, label %33, label %32, !dbg !17395

32:                                               ; preds = %27
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 225) #25, !dbg !17396
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.292, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !17396
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 225) #25, !dbg !17396
  unreachable, !dbg !17396

33:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %7, metadata !15813, metadata !DIExpression()) #23, !dbg !17390
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %7) #25, !dbg !17397
  call void @llvm.dbg.value(metadata i32 %34, metadata !17347, metadata !DIExpression()), !dbg !17348
  br label %40, !dbg !17398

35:                                               ; preds = %15, %18, %12, %6
  %36 = phi i32 [ 0, %6 ], [ -16, %12 ], [ -45, %18 ], [ -45, %15 ], !dbg !17399
  call void @llvm.dbg.value(metadata i32 %36, metadata !17347, metadata !DIExpression()), !dbg !17348
  call void @llvm.dbg.value(metadata i32 undef, metadata !15169, metadata !DIExpression()) #23, !dbg !17400
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15174, metadata !DIExpression()) #23, !dbg !17400
  %37 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !17402
  br i1 %37, label %39, label %38, !dbg !17403

38:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !17404
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.292, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !17404
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !17404
  unreachable, !dbg !17404

39:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %7, metadata !15169, metadata !DIExpression()) #23, !dbg !17400
  call void @llvm.dbg.value(metadata i32 %7, metadata !15183, metadata !DIExpression()) #23, !dbg !17405
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !17407, !srcloc !15189
  br label %40, !dbg !17408

40:                                               ; preds = %39, %33
  %41 = phi i32 [ %36, %39 ], [ %34, %33 ], !dbg !17348
  ret i32 %41, !dbg !17409
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !17410 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !17414, metadata !DIExpression()), !dbg !17422
  call void @llvm.dbg.value(metadata i32 %1, metadata !17415, metadata !DIExpression()), !dbg !17422
  call void @llvm.dbg.value(metadata i8* %2, metadata !17416, metadata !DIExpression()), !dbg !17422
  call void @llvm.dbg.value(metadata i8 0, metadata !17418, metadata !DIExpression()), !dbg !17422
  call void @llvm.dbg.value(metadata i32 0, metadata !17419, metadata !DIExpression()), !dbg !17423
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15135, metadata !DIExpression()) #23, !dbg !17424
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17426, !srcloc !15150
  call void @llvm.dbg.value(metadata i32 undef, metadata !15147, metadata !DIExpression()) #23, !dbg !17428
  call void @llvm.dbg.value(metadata i32 undef, metadata !15148, metadata !DIExpression()) #23, !dbg !17428
  call void @llvm.dbg.value(metadata i32 undef, metadata !15141, metadata !DIExpression()) #23, !dbg !17424
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !17429
  br i1 %5, label %7, label %6, !dbg !17430

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !17431
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.290, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !17431
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 148) #25, !dbg !17431
  unreachable, !dbg !17431

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !15147, metadata !DIExpression()) #23, !dbg !17428
  call void @llvm.dbg.value(metadata i32 undef, metadata !15141, metadata !DIExpression()) #23, !dbg !17424
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !17432
  call void @llvm.dbg.value(metadata i32 undef, metadata !17421, metadata !DIExpression()), !dbg !17423
  call void @llvm.dbg.value(metadata i8 poison, metadata !17418, metadata !DIExpression()), !dbg !17422
  call void @llvm.dbg.value(metadata i32 undef, metadata !17419, metadata !DIExpression()), !dbg !17423
  %8 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %9 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %8) #24, !dbg !17433
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !17417, metadata !DIExpression()), !dbg !17422
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !17436
  br i1 %10, label %15, label %11, !dbg !17438

11:                                               ; preds = %7
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !17439, metadata !DIExpression()), !dbg !17447
  call void @llvm.dbg.value(metadata i32 %1, metadata !17445, metadata !DIExpression()), !dbg !17447
  call void @llvm.dbg.value(metadata i8* %2, metadata !17446, metadata !DIExpression()), !dbg !17447
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !17326, metadata !DIExpression()), !dbg !17450
  call void @llvm.dbg.value(metadata i32 %1, metadata !17331, metadata !DIExpression()), !dbg !17450
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 8, i32 1, !dbg !17452
  store i32 %1, i32* %12, align 4, !dbg !17453
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !17454
  store i8* %2, i8** %13, align 4, !dbg !17455
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %9) #24, !dbg !17456
  %14 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %9) #24, !dbg !17457
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %9) #24, !dbg !17458
  call void @llvm.dbg.value(metadata i8 1, metadata !17418, metadata !DIExpression()), !dbg !17422
  br label %15, !dbg !17459

15:                                               ; preds = %7, %11
  call void @llvm.dbg.value(metadata i8 poison, metadata !17418, metadata !DIExpression()), !dbg !17422
  call void @llvm.dbg.value(metadata i32 undef, metadata !15169, metadata !DIExpression()) #23, !dbg !17460
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15174, metadata !DIExpression()) #23, !dbg !17460
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !17462
  br i1 %16, label %18, label %17, !dbg !17463

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !17464
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.292, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !17464
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.289, i32 0, i32 0), i32 noundef 194) #25, !dbg !17464
  unreachable, !dbg !17464

18:                                               ; preds = %15
  %19 = xor i1 %10, true, !dbg !17422
  %20 = extractvalue { i32, i32 } %4, 0, !dbg !17426
  call void @llvm.dbg.value(metadata i32 %20, metadata !15147, metadata !DIExpression()) #23, !dbg !17428
  call void @llvm.dbg.value(metadata i32 %20, metadata !15141, metadata !DIExpression()) #23, !dbg !17424
  call void @llvm.dbg.value(metadata i32 %20, metadata !17421, metadata !DIExpression()), !dbg !17423
  call void @llvm.dbg.value(metadata i32 undef, metadata !15169, metadata !DIExpression()) #23, !dbg !17460
  call void @llvm.dbg.value(metadata i32 undef, metadata !15183, metadata !DIExpression()) #23, !dbg !17465
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !17467, !srcloc !15189
  call void @llvm.dbg.value(metadata i8 poison, metadata !17418, metadata !DIExpression()), !dbg !17422
  call void @llvm.dbg.value(metadata i32 undef, metadata !17419, metadata !DIExpression()), !dbg !17423
  ret i1 %19, !dbg !17468
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !17469 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !17475, metadata !DIExpression()), !dbg !17480
  call void @llvm.dbg.value(metadata i64 undef, metadata !17477, metadata !DIExpression()), !dbg !17480
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !17474, metadata !DIExpression()), !dbg !17480
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !17476, metadata !DIExpression()), !dbg !17480
  call void @llvm.dbg.value(metadata i8** %4, metadata !17478, metadata !DIExpression()), !dbg !17480
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #24, !dbg !17481
  call void @llvm.dbg.value(metadata i32 %6, metadata !17479, metadata !DIExpression()), !dbg !17480
  %7 = icmp eq i8** %4, null, !dbg !17482
  br i1 %7, label %12, label %8, !dbg !17484

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17485
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !17487
  %11 = load i8*, i8** %10, align 4, !dbg !17487
  store i8* %11, i8** %4, align 4, !dbg !17488
  br label %12, !dbg !17489

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !17490
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !17491 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #25, !dbg !17493
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #25, !dbg !17494
  ret void, !dbg !17495
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !17496 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !17506, metadata !DIExpression()), !dbg !17523
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17504, metadata !DIExpression()), !dbg !17523
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !17505, metadata !DIExpression()), !dbg !17523
  %5 = icmp eq i64 %4, -1, !dbg !17524
  br i1 %5, label %63, label %6, !dbg !17526

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17527
  %8 = tail call fastcc zeroext i1 @sys_dnode_is_linked.337(%struct._dnode* noundef %7) #24, !dbg !17527
  br i1 %8, label %9, label %10, !dbg !17530

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1.339, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.340, i32 0, i32 0), i32 noundef 99) #25, !dbg !17531
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.341, i32 0, i32 0)) #25, !dbg !17531
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.340, i32 0, i32 0), i32 noundef 99) #25, !dbg !17531
  unreachable, !dbg !17531

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !17533
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %11, align 8, !dbg !17534
  call void @llvm.dbg.value(metadata i32 0, metadata !17507, metadata !DIExpression()), !dbg !17535
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17536, metadata !DIExpression()) #23, !dbg !17543
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17545, !srcloc !17551
  call void @llvm.dbg.value(metadata i32 undef, metadata !17548, metadata !DIExpression()) #23, !dbg !17552
  call void @llvm.dbg.value(metadata i32 undef, metadata !17549, metadata !DIExpression()) #23, !dbg !17552
  call void @llvm.dbg.value(metadata i32 undef, metadata !17542, metadata !DIExpression()) #23, !dbg !17543
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17553
  br i1 %13, label %15, label %14, !dbg !17556

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 148) #25, !dbg !17557
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.344, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17557
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 148) #25, !dbg !17557
  unreachable, !dbg !17557

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !17545
  call void @llvm.dbg.value(metadata i32 %16, metadata !17548, metadata !DIExpression()) #23, !dbg !17552
  call void @llvm.dbg.value(metadata i32 %16, metadata !17542, metadata !DIExpression()) #23, !dbg !17543
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17559
  call void @llvm.dbg.value(metadata i32 %16, metadata !17513, metadata !DIExpression()), !dbg !17535
  call void @llvm.dbg.value(metadata i32 undef, metadata !17507, metadata !DIExpression()), !dbg !17535
  %17 = icmp slt i64 %4, -1, !dbg !17560
  br i1 %17, label %18, label %24, !dbg !17561

18:                                               ; preds = %15
  %19 = load i64, i64* @curr_tick, align 8, !dbg !17562
  %20 = add i64 %4, %19, !dbg !17563
  %21 = sub i64 -2, %20, !dbg !17563
  call void @llvm.dbg.value(metadata i64 %21, metadata !17517, metadata !DIExpression()), !dbg !17564
  %22 = icmp sgt i64 %21, 1, !dbg !17565
  %23 = select i1 %22, i64 %21, i64 1, !dbg !17565
  br label %29, !dbg !17566

24:                                               ; preds = %15
  %25 = add nuw nsw i64 %4, 1, !dbg !17567
  %26 = tail call fastcc i32 @elapsed.345() #24, !dbg !17569
  %27 = sext i32 %26 to i64, !dbg !17569
  %28 = add nsw i64 %25, %27, !dbg !17570
  br label %29

29:                                               ; preds = %24, %18
  %30 = phi i64 [ %23, %18 ], [ %28, %24 ], !dbg !17571
  %31 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !17572
  store i64 %30, i64* %31, align 8, !dbg !17573
  %32 = tail call fastcc %struct._timeout* @first() #24, !dbg !17574
  call void @llvm.dbg.value(metadata %struct._timeout* %32, metadata !17514, metadata !DIExpression()), !dbg !17576
  %33 = icmp eq %struct._timeout* %32, null, !dbg !17577
  br i1 %33, label %48, label %34, !dbg !17577

34:                                               ; preds = %29, %44
  %35 = phi i64 [ %45, %44 ], [ %30, %29 ], !dbg !17578
  %36 = phi %struct._timeout* [ %46, %44 ], [ %32, %29 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %36, metadata !17514, metadata !DIExpression()), !dbg !17576
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !17582
  %38 = load i64, i64* %37, align 8, !dbg !17582
  %39 = icmp slt i64 %35, %38, !dbg !17583
  br i1 %39, label %40, label %44, !dbg !17584

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !17582
  %42 = sub nsw i64 %38, %35, !dbg !17585
  store i64 %42, i64* %41, align 8, !dbg !17585
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 0, !dbg !17587
  tail call fastcc void @sys_dlist_insert.346(%struct._dnode* noundef nonnull %43, %struct._dnode* noundef nonnull %7) #24, !dbg !17588
  br label %49, !dbg !17589

44:                                               ; preds = %34
  %45 = sub nsw i64 %35, %38, !dbg !17590
  store i64 %45, i64* %31, align 8, !dbg !17590
  %46 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %36) #24, !dbg !17591
  call void @llvm.dbg.value(metadata %struct._timeout* %46, metadata !17514, metadata !DIExpression()), !dbg !17576
  %47 = icmp eq %struct._timeout* %46, null, !dbg !17577
  br i1 %47, label %48, label %34, !dbg !17577, !llvm.loop !17592

48:                                               ; preds = %44, %29
  tail call fastcc void @sys_dlist_append.347(%struct._dnode* noundef nonnull %7) #24, !dbg !17594
  br label %49, !dbg !17597

49:                                               ; preds = %40, %48
  %50 = tail call fastcc %struct._timeout* @first() #24, !dbg !17598
  %51 = icmp eq %struct._timeout* %50, %0, !dbg !17599
  br i1 %51, label %52, label %59, !dbg !17600

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @next_timeout() #24, !dbg !17601
  call void @llvm.dbg.value(metadata i32 %53, metadata !17520, metadata !DIExpression()), !dbg !17602
  %54 = icmp ne i32 %53, 0, !dbg !17603
  %55 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %56 = icmp eq i32 %55, %53
  %57 = select i1 %54, i1 %56, i1 false, !dbg !17605
  br i1 %57, label %59, label %58, !dbg !17605

58:                                               ; preds = %52
  tail call void @sys_clock_set_timeout(i32 noundef %53, i1 noundef zeroext false) #25, !dbg !17606
  br label %59, !dbg !17608

59:                                               ; preds = %58, %52, %49
  call void @llvm.dbg.value(metadata i32 undef, metadata !17609, metadata !DIExpression()) #23, !dbg !17615
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17614, metadata !DIExpression()) #23, !dbg !17615
  %60 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17617
  br i1 %60, label %62, label %61, !dbg !17620

61:                                               ; preds = %59
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 194) #25, !dbg !17621
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.349, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17621
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 194) #25, !dbg !17621
  unreachable, !dbg !17621

62:                                               ; preds = %59
  call void @llvm.dbg.value(metadata i32 %16, metadata !17609, metadata !DIExpression()) #23, !dbg !17615
  call void @llvm.dbg.value(metadata i32 %16, metadata !17623, metadata !DIExpression()) #23, !dbg !17626
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !17628, !srcloc !17629
  call void @llvm.dbg.value(metadata i32 undef, metadata !17507, metadata !DIExpression()), !dbg !17535
  br label %63

63:                                               ; preds = %3, %62
  ret void, !dbg !17630
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.337(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !17631 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17637, metadata !DIExpression()), !dbg !17638
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17639
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17639
  %4 = icmp ne %struct._dnode* %3, null, !dbg !17640
  ret i1 %4, !dbg !17641
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.345() unnamed_addr #1 !dbg !17642 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !17645
  %2 = icmp eq i32 %1, 0, !dbg !17646
  br i1 %2, label %3, label %5, !dbg !17645

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #25, !dbg !17647
  br label %5, !dbg !17645

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !17645
  ret i32 %6, !dbg !17648
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #8 !dbg !17649 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.352() #24, !dbg !17655
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !17653, metadata !DIExpression()), !dbg !17656
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !17657
  ret %struct._timeout* %2, !dbg !17658
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.346(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !17659 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17663, metadata !DIExpression()), !dbg !17667
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !17664, metadata !DIExpression()), !dbg !17667
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17668
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !17668
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !17665, metadata !DIExpression()), !dbg !17667
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !17669
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !17670
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !17671
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !17672
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !17673
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !17674
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !17675
  ret void, !dbg !17676
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #8 !dbg !17677 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17681, metadata !DIExpression()), !dbg !17683
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17684
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.350(%struct._dnode* noundef %2) #24, !dbg !17685
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17682, metadata !DIExpression()), !dbg !17683
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !17686
  ret %struct._timeout* %4, !dbg !17687
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.347(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !17688 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17693, metadata !DIExpression()), !dbg !17696
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17694, metadata !DIExpression()), !dbg !17696
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17697
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !17695, metadata !DIExpression()), !dbg !17696
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17698
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !17699
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17700
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !17701
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !17702
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !17703
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17704
  ret void, !dbg !17705
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !17706 {
  %1 = tail call fastcc %struct._timeout* @first() #24, !dbg !17711
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !17708, metadata !DIExpression()), !dbg !17712
  %2 = tail call fastcc i32 @elapsed.345() #24, !dbg !17713
  call void @llvm.dbg.value(metadata i32 %2, metadata !17709, metadata !DIExpression()), !dbg !17712
  %3 = icmp eq %struct._timeout* %1, null, !dbg !17714
  br i1 %3, label %14, label %4, !dbg !17716

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !17717
  %6 = load i64, i64* %5, align 8, !dbg !17717
  %7 = sext i32 %2 to i64, !dbg !17718
  %8 = sub nsw i64 %6, %7, !dbg !17719
  %9 = icmp sgt i64 %8, 2147483647, !dbg !17720
  br i1 %9, label %14, label %10, !dbg !17721

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !17722
  %12 = select i1 %11, i64 %8, i64 0, !dbg !17722
  %13 = trunc i64 %12 to i32, !dbg !17722
  call void @llvm.dbg.value(metadata i32 %13, metadata !17710, metadata !DIExpression()), !dbg !17712
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !17724
  call void @llvm.dbg.value(metadata i32 %15, metadata !17710, metadata !DIExpression()), !dbg !17712
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !17725
  %17 = icmp ne i32 %16, 0, !dbg !17727
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !17728
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !17728
  call void @llvm.dbg.value(metadata i32 %20, metadata !17710, metadata !DIExpression()), !dbg !17712
  ret i32 %20, !dbg !17729
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.350(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !17730 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17734, metadata !DIExpression()), !dbg !17736
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17735, metadata !DIExpression()), !dbg !17736
  %2 = icmp eq %struct._dnode* %0, null, !dbg !17737
  br i1 %2, label %5, label %3, !dbg !17738

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.351(%struct._dnode* noundef nonnull %0) #24, !dbg !17739
  br label %5, !dbg !17738

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !17738
  ret %struct._dnode* %6, !dbg !17740
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.351(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !17741 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17743, metadata !DIExpression()), !dbg !17745
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17744, metadata !DIExpression()), !dbg !17745
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17746
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !17747
  br i1 %3, label %7, label %4, !dbg !17748

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17749
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !17749
  br label %7, !dbg !17748

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !17748
  ret %struct._dnode* %8, !dbg !17750
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.352() unnamed_addr #8 !dbg !17751 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17755, metadata !DIExpression()), !dbg !17756
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.353() #24, !dbg !17757
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !17757
  ret %struct._dnode* %3, !dbg !17758
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.353() unnamed_addr #8 !dbg !17759 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17763, metadata !DIExpression()), !dbg !17764
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !17765
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !17766
  ret i1 %2, !dbg !17767
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17768 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17772, metadata !DIExpression()), !dbg !17777
  call void @llvm.dbg.value(metadata i32 -22, metadata !17773, metadata !DIExpression()), !dbg !17777
  call void @llvm.dbg.value(metadata i32 0, metadata !17774, metadata !DIExpression()), !dbg !17778
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17536, metadata !DIExpression()) #23, !dbg !17779
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17781, !srcloc !17551
  call void @llvm.dbg.value(metadata i32 undef, metadata !17548, metadata !DIExpression()) #23, !dbg !17783
  call void @llvm.dbg.value(metadata i32 undef, metadata !17549, metadata !DIExpression()) #23, !dbg !17783
  call void @llvm.dbg.value(metadata i32 undef, metadata !17542, metadata !DIExpression()) #23, !dbg !17779
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17784
  br i1 %3, label %5, label %4, !dbg !17785

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 148) #25, !dbg !17786
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.344, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17786
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 148) #25, !dbg !17786
  unreachable, !dbg !17786

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !17548, metadata !DIExpression()) #23, !dbg !17783
  call void @llvm.dbg.value(metadata i32 undef, metadata !17542, metadata !DIExpression()) #23, !dbg !17779
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17787
  call void @llvm.dbg.value(metadata i32 undef, metadata !17776, metadata !DIExpression()), !dbg !17778
  call void @llvm.dbg.value(metadata i32 -22, metadata !17773, metadata !DIExpression()), !dbg !17777
  call void @llvm.dbg.value(metadata i32 undef, metadata !17774, metadata !DIExpression()), !dbg !17778
  %6 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !17773, metadata !DIExpression()), !dbg !17777
  %7 = tail call fastcc zeroext i1 @sys_dnode_is_linked.337(%struct._dnode* noundef %6) #24, !dbg !17788
  br i1 %7, label %8, label %9, !dbg !17792

8:                                                ; preds = %5
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #24, !dbg !17793
  call void @llvm.dbg.value(metadata i32 0, metadata !17773, metadata !DIExpression()), !dbg !17777
  br label %9, !dbg !17795

9:                                                ; preds = %5, %8
  %10 = phi i32 [ 0, %8 ], [ -22, %5 ], !dbg !17777
  call void @llvm.dbg.value(metadata i32 %10, metadata !17773, metadata !DIExpression()), !dbg !17777
  call void @llvm.dbg.value(metadata i32 undef, metadata !17609, metadata !DIExpression()) #23, !dbg !17796
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17614, metadata !DIExpression()) #23, !dbg !17796
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17798
  br i1 %11, label %13, label %12, !dbg !17799

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 194) #25, !dbg !17800
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.349, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17800
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 194) #25, !dbg !17800
  unreachable, !dbg !17800

13:                                               ; preds = %9
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !17781
  call void @llvm.dbg.value(metadata i32 %14, metadata !17548, metadata !DIExpression()) #23, !dbg !17783
  call void @llvm.dbg.value(metadata i32 %14, metadata !17542, metadata !DIExpression()) #23, !dbg !17779
  call void @llvm.dbg.value(metadata i32 %14, metadata !17776, metadata !DIExpression()), !dbg !17778
  call void @llvm.dbg.value(metadata i32 undef, metadata !17609, metadata !DIExpression()) #23, !dbg !17796
  call void @llvm.dbg.value(metadata i32 undef, metadata !17623, metadata !DIExpression()) #23, !dbg !17801
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !17803, !srcloc !17629
  call void @llvm.dbg.value(metadata i32 %10, metadata !17773, metadata !DIExpression()), !dbg !17777
  call void @llvm.dbg.value(metadata i32 undef, metadata !17774, metadata !DIExpression()), !dbg !17778
  ret i32 %10, !dbg !17804
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #9 !dbg !17805 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17807, metadata !DIExpression()), !dbg !17808
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #24, !dbg !17809
  %3 = icmp eq %struct._timeout* %2, null, !dbg !17811
  br i1 %3, label %10, label %4, !dbg !17812

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !17813
  %6 = load i64, i64* %5, align 8, !dbg !17813
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !17815
  %8 = load i64, i64* %7, align 8, !dbg !17816
  %9 = add nsw i64 %8, %6, !dbg !17816
  store i64 %9, i64* %7, align 8, !dbg !17816
  br label %10, !dbg !17817

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17818
  tail call fastcc void @sys_dlist_remove.356(%struct._dnode* noundef %11) #24, !dbg !17819
  ret void, !dbg !17820
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.356(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !17821 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17825, metadata !DIExpression()), !dbg !17828
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17829
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17829
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17826, metadata !DIExpression()), !dbg !17828
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17830
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !17830
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !17827, metadata !DIExpression()), !dbg !17828
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !17831
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !17832
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !17833
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !17834
  tail call fastcc void @sys_dnode_init.357(%struct._dnode* noundef %0) #24, !dbg !17835
  ret void, !dbg !17836
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.357(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !17837 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17839, metadata !DIExpression()), !dbg !17840
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17841
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !17842
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17843
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !17844
  ret void, !dbg !17845
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17846 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17852, metadata !DIExpression()), !dbg !17857
  call void @llvm.dbg.value(metadata i64 0, metadata !17853, metadata !DIExpression()), !dbg !17857
  call void @llvm.dbg.value(metadata i32 0, metadata !17854, metadata !DIExpression()), !dbg !17858
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17536, metadata !DIExpression()) #23, !dbg !17859
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17861, !srcloc !17551
  call void @llvm.dbg.value(metadata i32 undef, metadata !17548, metadata !DIExpression()) #23, !dbg !17863
  call void @llvm.dbg.value(metadata i32 undef, metadata !17549, metadata !DIExpression()) #23, !dbg !17863
  call void @llvm.dbg.value(metadata i32 undef, metadata !17542, metadata !DIExpression()) #23, !dbg !17859
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17864
  br i1 %3, label %5, label %4, !dbg !17865

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 148) #25, !dbg !17866
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.344, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17866
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 148) #25, !dbg !17866
  unreachable, !dbg !17866

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !17548, metadata !DIExpression()) #23, !dbg !17863
  call void @llvm.dbg.value(metadata i32 undef, metadata !17542, metadata !DIExpression()) #23, !dbg !17859
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17867
  call void @llvm.dbg.value(metadata i32 undef, metadata !17856, metadata !DIExpression()), !dbg !17858
  call void @llvm.dbg.value(metadata i64 0, metadata !17853, metadata !DIExpression()), !dbg !17857
  call void @llvm.dbg.value(metadata i32 undef, metadata !17854, metadata !DIExpression()), !dbg !17858
  %6 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !17868
  call void @llvm.dbg.value(metadata i64 %6, metadata !17853, metadata !DIExpression()), !dbg !17857
  call void @llvm.dbg.value(metadata i32 undef, metadata !17609, metadata !DIExpression()) #23, !dbg !17871
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17614, metadata !DIExpression()) #23, !dbg !17871
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17873
  br i1 %7, label %9, label %8, !dbg !17874

8:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 194) #25, !dbg !17875
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.349, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17875
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 194) #25, !dbg !17875
  unreachable, !dbg !17875

9:                                                ; preds = %5
  %10 = extractvalue { i32, i32 } %2, 0, !dbg !17861
  call void @llvm.dbg.value(metadata i32 %10, metadata !17548, metadata !DIExpression()) #23, !dbg !17863
  call void @llvm.dbg.value(metadata i32 %10, metadata !17542, metadata !DIExpression()) #23, !dbg !17859
  call void @llvm.dbg.value(metadata i32 %10, metadata !17856, metadata !DIExpression()), !dbg !17858
  call void @llvm.dbg.value(metadata i32 undef, metadata !17609, metadata !DIExpression()) #23, !dbg !17871
  call void @llvm.dbg.value(metadata i32 undef, metadata !17623, metadata !DIExpression()) #23, !dbg !17876
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #23, !dbg !17878, !srcloc !17629
  call void @llvm.dbg.value(metadata i64 %6, metadata !17853, metadata !DIExpression()), !dbg !17857
  call void @llvm.dbg.value(metadata i32 undef, metadata !17854, metadata !DIExpression()), !dbg !17858
  ret i64 %6, !dbg !17879
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !17880 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17882, metadata !DIExpression()), !dbg !17886
  call void @llvm.dbg.value(metadata i64 0, metadata !17883, metadata !DIExpression()), !dbg !17886
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.358(%struct._timeout* noundef %0) #24, !dbg !17887
  br i1 %2, label %21, label %3, !dbg !17889

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #24, !dbg !17890
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !17884, metadata !DIExpression()), !dbg !17891
  call void @llvm.dbg.value(metadata i64 0, metadata !17883, metadata !DIExpression()), !dbg !17886
  %5 = icmp eq %struct._timeout* %4, null, !dbg !17892
  br i1 %5, label %16, label %6, !dbg !17894

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !17884, metadata !DIExpression()), !dbg !17891
  call void @llvm.dbg.value(metadata i64 %8, metadata !17883, metadata !DIExpression()), !dbg !17886
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !17895
  %10 = load i64, i64* %9, align 8, !dbg !17895
  %11 = add nsw i64 %10, %8, !dbg !17897
  call void @llvm.dbg.value(metadata i64 %11, metadata !17883, metadata !DIExpression()), !dbg !17886
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !17898
  br i1 %12, label %16, label %13, !dbg !17900

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #24, !dbg !17901
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !17884, metadata !DIExpression()), !dbg !17891
  call void @llvm.dbg.value(metadata i64 %11, metadata !17883, metadata !DIExpression()), !dbg !17886
  %15 = icmp eq %struct._timeout* %14, null, !dbg !17892
  br i1 %15, label %16, label %6, !dbg !17894, !llvm.loop !17902

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !17886
  call void @llvm.dbg.value(metadata i64 %17, metadata !17883, metadata !DIExpression()), !dbg !17886
  %18 = tail call fastcc i32 @elapsed.345() #24, !dbg !17904
  %19 = sext i32 %18 to i64, !dbg !17904
  %20 = sub nsw i64 %17, %19, !dbg !17905
  br label %21, !dbg !17906

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !17886
  ret i64 %22, !dbg !17907
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.358(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #8 !dbg !17908 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17912, metadata !DIExpression()), !dbg !17913
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17914
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.337(%struct._dnode* noundef %2) #24, !dbg !17915
  %4 = xor i1 %3, true, !dbg !17916
  ret i1 %4, !dbg !17917
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17918 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17920, metadata !DIExpression()), !dbg !17925
  call void @llvm.dbg.value(metadata i64 0, metadata !17921, metadata !DIExpression()), !dbg !17925
  call void @llvm.dbg.value(metadata i32 0, metadata !17922, metadata !DIExpression()), !dbg !17926
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17536, metadata !DIExpression()) #23, !dbg !17927
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17929, !srcloc !17551
  call void @llvm.dbg.value(metadata i32 undef, metadata !17548, metadata !DIExpression()) #23, !dbg !17931
  call void @llvm.dbg.value(metadata i32 undef, metadata !17549, metadata !DIExpression()) #23, !dbg !17931
  call void @llvm.dbg.value(metadata i32 undef, metadata !17542, metadata !DIExpression()) #23, !dbg !17927
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17932
  br i1 %3, label %5, label %4, !dbg !17933

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 148) #25, !dbg !17934
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.344, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17934
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 148) #25, !dbg !17934
  unreachable, !dbg !17934

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !17548, metadata !DIExpression()) #23, !dbg !17931
  call void @llvm.dbg.value(metadata i32 undef, metadata !17542, metadata !DIExpression()) #23, !dbg !17927
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17935
  call void @llvm.dbg.value(metadata i32 undef, metadata !17924, metadata !DIExpression()), !dbg !17926
  call void @llvm.dbg.value(metadata i64 0, metadata !17921, metadata !DIExpression()), !dbg !17925
  call void @llvm.dbg.value(metadata i32 undef, metadata !17922, metadata !DIExpression()), !dbg !17926
  %6 = load i64, i64* @curr_tick, align 8, !dbg !17936
  %7 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !17939
  call void @llvm.dbg.value(metadata !DIArgList(i64 %6, i64 %7), metadata !17921, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17925
  call void @llvm.dbg.value(metadata i32 undef, metadata !17609, metadata !DIExpression()) #23, !dbg !17940
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17614, metadata !DIExpression()) #23, !dbg !17940
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17942
  br i1 %8, label %10, label %9, !dbg !17943

9:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 194) #25, !dbg !17944
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.349, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17944
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 194) #25, !dbg !17944
  unreachable, !dbg !17944

10:                                               ; preds = %5
  %11 = extractvalue { i32, i32 } %2, 0, !dbg !17929
  call void @llvm.dbg.value(metadata i32 %11, metadata !17548, metadata !DIExpression()) #23, !dbg !17931
  call void @llvm.dbg.value(metadata i32 %11, metadata !17542, metadata !DIExpression()) #23, !dbg !17927
  call void @llvm.dbg.value(metadata i32 %11, metadata !17924, metadata !DIExpression()), !dbg !17926
  call void @llvm.dbg.value(metadata !DIArgList(i64 %7, i64 %6), metadata !17921, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17925
  call void @llvm.dbg.value(metadata i32 undef, metadata !17609, metadata !DIExpression()) #23, !dbg !17940
  call void @llvm.dbg.value(metadata i32 undef, metadata !17623, metadata !DIExpression()) #23, !dbg !17945
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #23, !dbg !17947, !srcloc !17629
  call void @llvm.dbg.value(metadata i32 undef, metadata !17922, metadata !DIExpression()), !dbg !17926
  %12 = add i64 %7, %6, !dbg !17948
  ret i64 %12, !dbg !17949
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !17950 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !17952, metadata !DIExpression()), !dbg !17956
  call void @llvm.dbg.value(metadata i32 0, metadata !17953, metadata !DIExpression()), !dbg !17957
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17536, metadata !DIExpression()) #23, !dbg !17958
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17960, !srcloc !17551
  call void @llvm.dbg.value(metadata i32 undef, metadata !17548, metadata !DIExpression()) #23, !dbg !17962
  call void @llvm.dbg.value(metadata i32 undef, metadata !17549, metadata !DIExpression()) #23, !dbg !17962
  call void @llvm.dbg.value(metadata i32 undef, metadata !17542, metadata !DIExpression()) #23, !dbg !17958
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17963
  br i1 %2, label %4, label %3, !dbg !17964

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 148) #25, !dbg !17965
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.344, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17965
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 148) #25, !dbg !17965
  unreachable, !dbg !17965

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !17548, metadata !DIExpression()) #23, !dbg !17962
  call void @llvm.dbg.value(metadata i32 undef, metadata !17542, metadata !DIExpression()) #23, !dbg !17958
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17966
  call void @llvm.dbg.value(metadata i32 undef, metadata !17955, metadata !DIExpression()), !dbg !17957
  call void @llvm.dbg.value(metadata i32 -1, metadata !17952, metadata !DIExpression()), !dbg !17956
  call void @llvm.dbg.value(metadata i32 undef, metadata !17953, metadata !DIExpression()), !dbg !17957
  %5 = tail call fastcc i32 @next_timeout() #24, !dbg !17967
  call void @llvm.dbg.value(metadata i32 %5, metadata !17952, metadata !DIExpression()), !dbg !17956
  call void @llvm.dbg.value(metadata i32 undef, metadata !17609, metadata !DIExpression()) #23, !dbg !17970
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17614, metadata !DIExpression()) #23, !dbg !17970
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17972
  br i1 %6, label %8, label %7, !dbg !17973

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 194) #25, !dbg !17974
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.349, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17974
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 194) #25, !dbg !17974
  unreachable, !dbg !17974

8:                                                ; preds = %4
  %9 = extractvalue { i32, i32 } %1, 0, !dbg !17960
  call void @llvm.dbg.value(metadata i32 %9, metadata !17548, metadata !DIExpression()) #23, !dbg !17962
  call void @llvm.dbg.value(metadata i32 %9, metadata !17542, metadata !DIExpression()) #23, !dbg !17958
  call void @llvm.dbg.value(metadata i32 %9, metadata !17955, metadata !DIExpression()), !dbg !17957
  call void @llvm.dbg.value(metadata i32 undef, metadata !17609, metadata !DIExpression()) #23, !dbg !17970
  call void @llvm.dbg.value(metadata i32 undef, metadata !17623, metadata !DIExpression()) #23, !dbg !17975
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !17977, !srcloc !17629
  call void @llvm.dbg.value(metadata i32 %5, metadata !17952, metadata !DIExpression()), !dbg !17956
  call void @llvm.dbg.value(metadata i32 undef, metadata !17953, metadata !DIExpression()), !dbg !17957
  ret i32 %5, !dbg !17978
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !17979 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17981, metadata !DIExpression()), !dbg !17991
  call void @llvm.dbg.value(metadata i1 %1, metadata !17982, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17991
  call void @llvm.dbg.value(metadata i32 0, metadata !17983, metadata !DIExpression()), !dbg !17992
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17536, metadata !DIExpression()) #23, !dbg !17993
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17995, !srcloc !17551
  call void @llvm.dbg.value(metadata i32 undef, metadata !17548, metadata !DIExpression()) #23, !dbg !17997
  call void @llvm.dbg.value(metadata i32 undef, metadata !17549, metadata !DIExpression()) #23, !dbg !17997
  call void @llvm.dbg.value(metadata i32 undef, metadata !17542, metadata !DIExpression()) #23, !dbg !17993
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17998
  br i1 %4, label %6, label %5, !dbg !17999

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 148) #25, !dbg !18000
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.344, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !18000
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 148) #25, !dbg !18000
  unreachable, !dbg !18000

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !17548, metadata !DIExpression()) #23, !dbg !17997
  call void @llvm.dbg.value(metadata i32 undef, metadata !17542, metadata !DIExpression()) #23, !dbg !17993
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !18001
  call void @llvm.dbg.value(metadata i32 undef, metadata !17985, metadata !DIExpression()), !dbg !17992
  call void @llvm.dbg.value(metadata i32 undef, metadata !17983, metadata !DIExpression()), !dbg !17992
  %7 = tail call fastcc i32 @next_timeout() #24, !dbg !18002
  call void @llvm.dbg.value(metadata i32 %7, metadata !17986, metadata !DIExpression()), !dbg !18003
  call void @llvm.dbg.value(metadata i1 undef, metadata !17989, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18003
  %8 = icmp slt i32 %7, 2, !dbg !18004
  call void @llvm.dbg.value(metadata i1 %8, metadata !17990, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18003
  %9 = icmp slt i32 %7, %0
  %10 = or i1 %8, %9, !dbg !18005
  call void @llvm.dbg.value(metadata i1 %9, metadata !17989, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18003
  br i1 %10, label %14, label %11, !dbg !18005

11:                                               ; preds = %6
  %12 = icmp sgt i32 %7, %0, !dbg !18007
  %13 = select i1 %12, i32 %0, i32 %7, !dbg !18007
  tail call void @sys_clock_set_timeout(i32 noundef %13, i1 noundef zeroext %1) #25, !dbg !18009
  br label %14, !dbg !18010

14:                                               ; preds = %11, %6
  call void @llvm.dbg.value(metadata i32 undef, metadata !17609, metadata !DIExpression()) #23, !dbg !18011
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17614, metadata !DIExpression()) #23, !dbg !18011
  %15 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !18013
  br i1 %15, label %17, label %16, !dbg !18014

16:                                               ; preds = %14
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 194) #25, !dbg !18015
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.349, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !18015
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 194) #25, !dbg !18015
  unreachable, !dbg !18015

17:                                               ; preds = %14
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !17995
  call void @llvm.dbg.value(metadata i32 %18, metadata !17548, metadata !DIExpression()) #23, !dbg !17997
  call void @llvm.dbg.value(metadata i32 %18, metadata !17542, metadata !DIExpression()) #23, !dbg !17993
  call void @llvm.dbg.value(metadata i32 %18, metadata !17985, metadata !DIExpression()), !dbg !17992
  call void @llvm.dbg.value(metadata i32 undef, metadata !17609, metadata !DIExpression()) #23, !dbg !18011
  call void @llvm.dbg.value(metadata i32 undef, metadata !17623, metadata !DIExpression()) #23, !dbg !18016
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !18018, !srcloc !17629
  call void @llvm.dbg.value(metadata i32 1, metadata !17983, metadata !DIExpression()), !dbg !17992
  call void @llvm.dbg.value(metadata i32 undef, metadata !17983, metadata !DIExpression()), !dbg !17992
  ret void, !dbg !18019
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !18020 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18024, metadata !DIExpression()), !dbg !18029
  tail call void @z_time_slice(i32 noundef %0) #25, !dbg !18030
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17536, metadata !DIExpression()) #23, !dbg !18031
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !18033, !srcloc !17551
  call void @llvm.dbg.value(metadata i32 undef, metadata !17548, metadata !DIExpression()) #23, !dbg !18035
  call void @llvm.dbg.value(metadata i32 undef, metadata !17549, metadata !DIExpression()) #23, !dbg !18035
  call void @llvm.dbg.value(metadata i32 undef, metadata !17542, metadata !DIExpression()) #23, !dbg !18031
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !18036
  br i1 %3, label %5, label %4, !dbg !18037

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 148) #25, !dbg !18038
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.344, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !18038
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 148) #25, !dbg !18038
  unreachable, !dbg !18038

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !17548, metadata !DIExpression()) #23, !dbg !18035
  call void @llvm.dbg.value(metadata i32 undef, metadata !17542, metadata !DIExpression()) #23, !dbg !18031
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !18039
  call void @llvm.dbg.value(metadata i32 undef, metadata !18025, metadata !DIExpression()), !dbg !18029
  store i32 %0, i32* @announce_remaining, align 4, !dbg !18029
  call void @llvm.dbg.value(metadata i32 undef, metadata !18025, metadata !DIExpression()), !dbg !18029
  %6 = tail call fastcc %struct._timeout* @first() #24, !dbg !18040
  %7 = icmp eq %struct._timeout* %6, null, !dbg !18041
  br i1 %7, label %37, label %8, !dbg !18042

8:                                                ; preds = %5, %30
  %9 = phi %struct._timeout* [ %33, %30 ], [ %6, %5 ]
  %10 = phi { i32, i32 } [ %27, %30 ], [ %2, %5 ]
  %11 = phi i32 [ %32, %30 ], [ %0, %5 ]
  %12 = extractvalue { i32, i32 } %10, 0, !dbg !18029
  %13 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 2, !dbg !18043
  %14 = load i64, i64* %13, align 8, !dbg !18043
  %15 = sext i32 %11 to i64, !dbg !18044
  %16 = icmp sgt i64 %14, %15, !dbg !18045
  br i1 %16, label %35, label %17, !dbg !18046

17:                                               ; preds = %8
  call void @llvm.dbg.value(metadata %struct._timeout* %9, metadata !18026, metadata !DIExpression()), !dbg !18047
  %18 = trunc i64 %14 to i32, !dbg !18048
  call void @llvm.dbg.value(metadata i32 %18, metadata !18028, metadata !DIExpression()), !dbg !18047
  %19 = sext i32 %18 to i64, !dbg !18049
  %20 = load i64, i64* @curr_tick, align 8, !dbg !18050
  %21 = add i64 %20, %19, !dbg !18050
  store i64 %21, i64* @curr_tick, align 8, !dbg !18050
  store i64 0, i64* %13, align 8, !dbg !18051
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %9) #24, !dbg !18052
  call void @llvm.dbg.value(metadata i32 undef, metadata !17609, metadata !DIExpression()) #23, !dbg !18053
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17614, metadata !DIExpression()) #23, !dbg !18053
  %22 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !18055
  br i1 %22, label %24, label %23, !dbg !18056

23:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 194) #25, !dbg !18057
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.349, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !18057
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 194) #25, !dbg !18057
  unreachable, !dbg !18057

24:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %12, metadata !17609, metadata !DIExpression()) #23, !dbg !18053
  call void @llvm.dbg.value(metadata i32 %12, metadata !17623, metadata !DIExpression()) #23, !dbg !18058
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !18060, !srcloc !17629
  %25 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 1, !dbg !18061
  %26 = load void (%struct._timeout*)*, void (%struct._timeout*)** %25, align 8, !dbg !18061
  tail call void %26(%struct._timeout* noundef nonnull %9) #25, !dbg !18062
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17536, metadata !DIExpression()) #23, !dbg !18063
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !18065, !srcloc !17551
  call void @llvm.dbg.value(metadata i32 undef, metadata !17548, metadata !DIExpression()) #23, !dbg !18067
  call void @llvm.dbg.value(metadata i32 undef, metadata !17549, metadata !DIExpression()) #23, !dbg !18067
  call void @llvm.dbg.value(metadata i32 undef, metadata !17542, metadata !DIExpression()) #23, !dbg !18063
  %28 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !18068
  br i1 %28, label %30, label %29, !dbg !18069

29:                                               ; preds = %24
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 148) #25, !dbg !18070
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.344, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !18070
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 148) #25, !dbg !18070
  unreachable, !dbg !18070

30:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !17548, metadata !DIExpression()) #23, !dbg !18067
  call void @llvm.dbg.value(metadata i32 undef, metadata !17542, metadata !DIExpression()) #23, !dbg !18063
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !18071
  call void @llvm.dbg.value(metadata i32 undef, metadata !18025, metadata !DIExpression()), !dbg !18029
  %31 = load i32, i32* @announce_remaining, align 4, !dbg !18072
  %32 = sub nsw i32 %31, %18, !dbg !18072
  store i32 %32, i32* @announce_remaining, align 4, !dbg !18029
  call void @llvm.dbg.value(metadata i32 undef, metadata !18025, metadata !DIExpression()), !dbg !18029
  %33 = tail call fastcc %struct._timeout* @first() #24, !dbg !18040
  %34 = icmp eq %struct._timeout* %33, null, !dbg !18041
  br i1 %34, label %37, label %8, !dbg !18042, !llvm.loop !18073

35:                                               ; preds = %8
  %36 = sub nsw i64 %14, %15, !dbg !18075
  store i64 %36, i64* %13, align 8, !dbg !18075
  br label %41, !dbg !18078

37:                                               ; preds = %30, %5
  %38 = phi { i32, i32 } [ %2, %5 ], [ %27, %30 ]
  %39 = phi i32 [ %0, %5 ], [ %32, %30 ], !dbg !18029
  %40 = sext i32 %39 to i64, !dbg !18079
  br label %41, !dbg !18079

41:                                               ; preds = %37, %35
  %42 = phi i64 [ %40, %37 ], [ %15, %35 ], !dbg !18079
  %43 = phi { i32, i32 } [ %38, %37 ], [ %10, %35 ]
  %44 = load i64, i64* @curr_tick, align 8, !dbg !18080
  %45 = add i64 %44, %42, !dbg !18080
  store i64 %45, i64* @curr_tick, align 8, !dbg !18080
  store i32 0, i32* @announce_remaining, align 4, !dbg !18081
  %46 = tail call fastcc i32 @next_timeout() #24, !dbg !18082
  tail call void @sys_clock_set_timeout(i32 noundef %46, i1 noundef zeroext false) #25, !dbg !18083
  call void @llvm.dbg.value(metadata i32 undef, metadata !17609, metadata !DIExpression()) #23, !dbg !18084
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17614, metadata !DIExpression()) #23, !dbg !18084
  %47 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !18086
  br i1 %47, label %49, label %48, !dbg !18087

48:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 194) #25, !dbg !18088
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.349, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !18088
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 194) #25, !dbg !18088
  unreachable, !dbg !18088

49:                                               ; preds = %41
  %50 = extractvalue { i32, i32 } %43, 0, !dbg !18029
  call void @llvm.dbg.value(metadata i32 %50, metadata !17609, metadata !DIExpression()) #23, !dbg !18084
  call void @llvm.dbg.value(metadata i32 %50, metadata !17623, metadata !DIExpression()) #23, !dbg !18089
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %50) #23, !dbg !18091, !srcloc !17629
  ret void, !dbg !18092
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !18093 {
  call void @llvm.dbg.value(metadata i64 0, metadata !18097, metadata !DIExpression()), !dbg !18101
  call void @llvm.dbg.value(metadata i32 0, metadata !18098, metadata !DIExpression()), !dbg !18102
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17536, metadata !DIExpression()) #23, !dbg !18103
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !18105, !srcloc !17551
  call void @llvm.dbg.value(metadata i32 undef, metadata !17548, metadata !DIExpression()) #23, !dbg !18107
  call void @llvm.dbg.value(metadata i32 undef, metadata !17549, metadata !DIExpression()) #23, !dbg !18107
  call void @llvm.dbg.value(metadata i32 undef, metadata !17542, metadata !DIExpression()) #23, !dbg !18103
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !18108
  br i1 %2, label %4, label %3, !dbg !18109

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 148) #25, !dbg !18110
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.344, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !18110
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 148) #25, !dbg !18110
  unreachable, !dbg !18110

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !17548, metadata !DIExpression()) #23, !dbg !18107
  call void @llvm.dbg.value(metadata i32 undef, metadata !17542, metadata !DIExpression()) #23, !dbg !18103
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !18111
  call void @llvm.dbg.value(metadata i32 undef, metadata !18100, metadata !DIExpression()), !dbg !18102
  call void @llvm.dbg.value(metadata i64 0, metadata !18097, metadata !DIExpression()), !dbg !18101
  call void @llvm.dbg.value(metadata i32 undef, metadata !18098, metadata !DIExpression()), !dbg !18102
  %5 = load i64, i64* @curr_tick, align 8, !dbg !18112
  %6 = tail call fastcc i32 @elapsed.345() #24, !dbg !18115
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !18097, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !18101
  call void @llvm.dbg.value(metadata i32 undef, metadata !17609, metadata !DIExpression()) #23, !dbg !18116
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17614, metadata !DIExpression()) #23, !dbg !18116
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !18118
  br i1 %7, label %9, label %8, !dbg !18119

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 194) #25, !dbg !18120
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.349, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !18120
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 194) #25, !dbg !18120
  unreachable, !dbg !18120

9:                                                ; preds = %4
  %10 = extractvalue { i32, i32 } %1, 0, !dbg !18105
  call void @llvm.dbg.value(metadata i32 %10, metadata !17548, metadata !DIExpression()) #23, !dbg !18107
  call void @llvm.dbg.value(metadata i32 %10, metadata !17542, metadata !DIExpression()) #23, !dbg !18103
  call void @llvm.dbg.value(metadata i32 %10, metadata !18100, metadata !DIExpression()), !dbg !18102
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !18097, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !18101
  call void @llvm.dbg.value(metadata !DIArgList(i32 %6, i64 %5), metadata !18097, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !18101
  call void @llvm.dbg.value(metadata i32 undef, metadata !17609, metadata !DIExpression()) #23, !dbg !18116
  call void @llvm.dbg.value(metadata i32 undef, metadata !17623, metadata !DIExpression()) #23, !dbg !18121
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #23, !dbg !18123, !srcloc !17629
  call void @llvm.dbg.value(metadata i32 undef, metadata !18098, metadata !DIExpression()), !dbg !18102
  %11 = sext i32 %6 to i64, !dbg !18115
  %12 = add i64 %5, %11, !dbg !18124
  ret i64 %12, !dbg !18125
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !18126 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !18127
  %2 = trunc i64 %1 to i32, !dbg !18128
  ret i32 %2, !dbg !18129
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !18130 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !18131
  ret i64 %1, !dbg !18132
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !18133 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18135, metadata !DIExpression()), !dbg !18142
  %2 = icmp eq i32 %0, 0, !dbg !18143
  br i1 %2, label %10, label %3, !dbg !18145

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32.365() #24, !dbg !18146
  call void @llvm.dbg.value(metadata i32 %4, metadata !18136, metadata !DIExpression()), !dbg !18142
  %5 = mul i32 %0, 84, !dbg !18147
  call void @llvm.dbg.value(metadata i32 %5, metadata !18137, metadata !DIExpression()), !dbg !18142
  br label %6, !dbg !18148

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32.365() #24, !dbg !18149
  call void @llvm.dbg.value(metadata i32 %7, metadata !18138, metadata !DIExpression()), !dbg !18150
  %8 = sub i32 %7, %4, !dbg !18151
  %9 = icmp ult i32 %8, %5, !dbg !18153
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !18154
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32.365() unnamed_addr #1 !dbg !18155 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32.366() #24, !dbg !18156
  ret i32 %1, !dbg !18157
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32.366() unnamed_addr #1 !dbg !18158 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #25, !dbg !18159
  ret i32 %1, !dbg !18160
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !18161 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !18165, metadata !DIExpression()), !dbg !18167
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !18168

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #24, !dbg !18169
  br label %14, !dbg !18173

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !18166, metadata !DIExpression()), !dbg !18167
  %6 = icmp slt i64 %2, -1, !dbg !18174
  br i1 %6, label %7, label %9, !dbg !18177

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !18178
  br label %14, !dbg !18179

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #24, !dbg !18181
  %11 = icmp ugt i64 %2, 1, !dbg !18182
  %12 = select i1 %11, i64 %2, i64 1, !dbg !18182
  %13 = add nsw i64 %10, %12, !dbg !18183
  br label %14, !dbg !18184

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !18185
  ret i64 %15, !dbg !18186
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !18187 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.369, i32 0, i32 0)) #25, !dbg !18189
  ret void, !dbg !18190
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { argmemonly nofree nosync nounwind willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { nofree nosync nounwind willreturn }
attributes #6 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { argmemonly nofree nounwind willreturn writeonly }
attributes #13 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nounwind }
attributes #24 = { nobuiltin optsize "no-builtins" }
attributes #25 = { nobuiltin nounwind optsize "no-builtins" }
attributes #26 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #27 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #28 = { nounwind readnone }
attributes #29 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!933, !2, !2582, !27, !177, !209, !2584, !2586, !2620, !2622, !218, !268, !2624, !2627, !2638, !2684, !2686, !2714, !2742, !2785, !2857, !2902, !297, !458, !2930, !494, !504, !529, !696, !731, !971, !2935, !1110, !1176, !1481, !1765, !2976, !1880, !1970, !2978, !3041, !3108, !2024, !3111, !2031, !2405, !3129, !2425, !3131, !2543, !3134}
!llvm.ident = !{!3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136, !3136}
!llvm.module.flags = !{!3137, !3138, !3139, !3140, !3141, !3142, !3143, !3144, !3145}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pytest/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pytest")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 109, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pytest")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 6208, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 97)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 3104, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "z_ztest_suite_node_stats_test_pytest", scope: !27, file: !111, line: 8, type: !149, isLocal: false, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, globals: !108, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/testsuite/pytest/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pytest")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_ZTEST_SUITE_NODE", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_ZTEST_SUITE_STATS", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_ZTEST_UNIT_TEST", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_ZTEST_TEST_RULE", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 66)
!101 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 67)
!102 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 68)
!103 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 69)
!104 = !DIEnumerator(name: "K_OBJ_LAST", value: 70)
!105 = !{!106, !107}
!106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!107 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!108 = !{!109, !155, !25, !173}
!109 = !DIGlobalVariableExpression(var: !110, expr: !DIExpression())
!110 = distinct !DIGlobalVariable(name: "z_ztest_test_node_test_pytest", scope: !27, file: !111, line: 8, type: !112, isLocal: true, isDefinition: true, align: 32)
!111 = !DIFile(filename: "zephyr/samples/subsys/testsuite/pytest/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!112 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !113)
!113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_node", file: !114, line: 177, size: 224, elements: !115)
!114 = !DIFile(filename: "zephyr/subsys/testsuite/ztest/include/zephyr/ztest_test_new.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!115 = !{!116, !121, !127, !133, !136, !139, !146}
!116 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !113, file: !114, line: 179, baseType: !117, size: 32)
!117 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !118)
!118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !119, size: 32)
!119 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !120)
!120 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!121 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !113, file: !114, line: 182, baseType: !122, size: 32, offset: 32)
!122 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !123)
!123 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_suite_setup_t", file: !114, line: 141, baseType: !124)
!124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !125, size: 32)
!125 = !DISubroutineType(types: !126)
!126 = !{!106}
!127 = !DIDerivedType(tag: DW_TAG_member, name: "before", scope: !113, file: !114, line: 185, baseType: !128, size: 32, offset: 64)
!128 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !129)
!129 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_suite_before_t", file: !114, line: 148, baseType: !130)
!130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !131, size: 32)
!131 = !DISubroutineType(types: !132)
!132 = !{null, !106}
!133 = !DIDerivedType(tag: DW_TAG_member, name: "after", scope: !113, file: !114, line: 188, baseType: !134, size: 32, offset: 96)
!134 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !135)
!135 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_suite_after_t", file: !114, line: 155, baseType: !130)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "teardown", scope: !113, file: !114, line: 191, baseType: !137, size: 32, offset: 128)
!137 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !138)
!138 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_suite_teardown_t", file: !114, line: 162, baseType: !130)
!139 = !DIDerivedType(tag: DW_TAG_member, name: "predicate", scope: !113, file: !114, line: 194, baseType: !140, size: 32, offset: 160)
!140 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !141)
!141 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_suite_predicate_t", file: !114, line: 171, baseType: !142)
!142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !143, size: 32)
!143 = !DISubroutineType(types: !144)
!144 = !{!145, !13}
!145 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !113, file: !114, line: 197, baseType: !147, size: 32, offset: 192)
!147 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !148)
!148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !149, size: 32)
!149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_stats", file: !114, line: 114, size: 96, elements: !150)
!150 = !{!151, !153, !154}
!151 = !DIDerivedType(tag: DW_TAG_member, name: "run_count", scope: !149, file: !114, line: 116, baseType: !152, size: 32)
!152 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !149, file: !114, line: 118, baseType: !152, size: 32, offset: 32)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "fail_count", scope: !149, file: !114, line: 120, baseType: !152, size: 32, offset: 64)
!155 = !DIGlobalVariableExpression(var: !156, expr: !DIExpression())
!156 = distinct !DIGlobalVariable(name: "z_ztest_unit_test__test_pytest__test_pytest", scope: !27, file: !111, line: 10, type: !157, isLocal: true, isDefinition: true, align: 32)
!157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_unit_test", file: !114, line: 97, size: 160, elements: !158)
!158 = !{!159, !160, !161, !162, !163}
!159 = !DIDerivedType(tag: DW_TAG_member, name: "test_suite_name", scope: !157, file: !114, line: 98, baseType: !118, size: 32)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !157, file: !114, line: 99, baseType: !118, size: 32, offset: 32)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "test", scope: !157, file: !114, line: 100, baseType: !130, size: 32, offset: 64)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "thread_options", scope: !157, file: !114, line: 101, baseType: !152, size: 32, offset: 96)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !157, file: !114, line: 104, baseType: !164, size: 32, offset: 128)
!164 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !165)
!165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !166, size: 32)
!166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_unit_test_stats", file: !114, line: 123, size: 160, elements: !167)
!167 = !{!168, !169, !170, !171, !172}
!168 = !DIDerivedType(tag: DW_TAG_member, name: "run_count", scope: !166, file: !114, line: 125, baseType: !152, size: 32)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !166, file: !114, line: 127, baseType: !152, size: 32, offset: 32)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "fail_count", scope: !166, file: !114, line: 129, baseType: !152, size: 32, offset: 64)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "pass_count", scope: !166, file: !114, line: 131, baseType: !152, size: 32, offset: 96)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "duration_worst_ms", scope: !166, file: !114, line: 133, baseType: !152, size: 32, offset: 128)
!173 = !DIGlobalVariableExpression(var: !174, expr: !DIExpression())
!174 = distinct !DIGlobalVariable(name: "z_ztest_unit_test_stats_test_pytest_test_pytest", scope: !27, file: !111, line: 10, type: !166, isLocal: false, isDefinition: true)
!175 = !DIGlobalVariableExpression(var: !176, expr: !DIExpression())
!176 = distinct !DIGlobalVariable(name: "log_const_cbprintf_package", scope: !177, file: !200, line: 18, type: !201, isLocal: false, isDefinition: true)
!177 = distinct !DICompileUnit(language: DW_LANG_C99, file: !178, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !179, globals: !199, splitDebugInlining: false, nameTableKind: None)
!178 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pytest")
!179 = !{!22, !106, !24, !180, !182, !184, !185, !107, !187, !188, !190, !192, !193, !194, !197, !118}
!180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !181, size: 32)
!181 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !183, size: 32)
!183 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !118, size: 32)
!185 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !186, line: 214, baseType: !32)
!186 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !189, size: 32)
!189 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !191, size: 32)
!191 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !193, size: 32)
!193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 32)
!194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !195, size: 32)
!195 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !196)
!196 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!197 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !198)
!198 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!199 = !{!175}
!200 = !DIFile(filename: "zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!201 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !202)
!202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !203, line: 16, size: 64, elements: !204)
!203 = !DIFile(filename: "zephyr/include/zephyr/logging/log_instance.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!204 = !{!205, !206}
!205 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !202, file: !203, line: 17, baseType: !118, size: 32)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !202, file: !203, line: 18, baseType: !195, size: 8, offset: 32)
!207 = !DIGlobalVariableExpression(var: !208, expr: !DIExpression())
!208 = distinct !DIGlobalVariable(name: "_char_out", scope: !209, file: !212, line: 54, type: !213, isLocal: false, isDefinition: true)
!209 = distinct !DICompileUnit(language: DW_LANG_C99, file: !210, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, globals: !211, splitDebugInlining: false, nameTableKind: None)
!210 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pytest")
!211 = !{!207}
!212 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !214, size: 32)
!214 = !DISubroutineType(types: !215)
!215 = !{!107, !107}
!216 = !DIGlobalVariableExpression(var: !217, expr: !DIExpression())
!217 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !218, file: !235, line: 56, type: !236, isLocal: true, isDefinition: true, align: 32)
!218 = distinct !DICompileUnit(language: DW_LANG_C99, file: !219, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !220, globals: !234, splitDebugInlining: false, nameTableKind: None)
!219 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pytest")
!220 = !{!221}
!221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !222, size: 32)
!222 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !223, line: 407, baseType: !224)
!223 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f446xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!224 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 398, size: 224, elements: !225)
!225 = !{!226, !228, !229, !230, !231, !232, !233}
!226 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !224, file: !223, line: 400, baseType: !227, size: 32)
!227 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !152)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !224, file: !223, line: 401, baseType: !227, size: 32, offset: 32)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !224, file: !223, line: 402, baseType: !227, size: 32, offset: 64)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !224, file: !223, line: 403, baseType: !227, size: 32, offset: 96)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !224, file: !223, line: 404, baseType: !227, size: 32, offset: 128)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !224, file: !223, line: 405, baseType: !227, size: 32, offset: 160)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !224, file: !223, line: 406, baseType: !227, size: 32, offset: 192)
!234 = !{!216}
!235 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!236 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !237)
!237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !239)
!238 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!239 = !{!240, !265}
!240 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !237, file: !238, line: 60, baseType: !241, size: 32)
!241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !242, size: 32)
!242 = !DISubroutineType(types: !243)
!243 = !{!107, !244}
!244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !245, size: 32)
!245 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !246)
!246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !248)
!247 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!248 = !{!249, !250, !251, !252, !258, !259}
!249 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !246, file: !247, line: 380, baseType: !118, size: 32)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !246, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !246, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !246, file: !247, line: 386, baseType: !253, size: 32, offset: 96)
!253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !254, size: 32)
!254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !255)
!255 = !{!256, !257}
!256 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !254, file: !247, line: 359, baseType: !195, size: 8)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !254, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !246, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !246, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !261, size: 32)
!261 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !262)
!262 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !247, line: 43, baseType: !263)
!263 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !264)
!264 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !237, file: !238, line: 65, baseType: !244, size: 32, offset: 32)
!266 = !DIGlobalVariableExpression(var: !267, expr: !DIExpression())
!267 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !268, file: !271, line: 71, type: !272, isLocal: true, isDefinition: true, align: 32)
!268 = distinct !DICompileUnit(language: DW_LANG_C99, file: !269, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !270, splitDebugInlining: false, nameTableKind: None)
!269 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pytest")
!270 = !{!266}
!271 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!272 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !273)
!273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !274)
!274 = !{!275, !294}
!275 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !273, file: !238, line: 60, baseType: !276, size: 32)
!276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !277, size: 32)
!277 = !DISubroutineType(types: !278)
!278 = !{!107, !279}
!279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !280, size: 32)
!280 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !281)
!281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !282)
!282 = !{!283, !284, !285, !286, !292, !293}
!283 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !281, file: !247, line: 380, baseType: !118, size: 32)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !281, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !281, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !281, file: !247, line: 386, baseType: !287, size: 32, offset: 96)
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 32)
!288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !289)
!289 = !{!290, !291}
!290 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !288, file: !247, line: 359, baseType: !195, size: 8)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !288, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !281, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !281, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !273, file: !238, line: 65, baseType: !279, size: 32, offset: 32)
!295 = !DIGlobalVariableExpression(var: !296, expr: !DIExpression())
!296 = distinct !DIGlobalVariable(name: "log_const_mpu", scope: !297, file: !304, line: 17, type: !451, isLocal: false, isDefinition: true)
!297 = distinct !DICompileUnit(language: DW_LANG_C99, file: !298, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, globals: !300, splitDebugInlining: false, nameTableKind: None)
!298 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pytest")
!299 = !{!185, !107, !152, !106}
!300 = !{!295, !301, !447}
!301 = !DIGlobalVariableExpression(var: !302, expr: !DIExpression())
!302 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !303, file: !304, line: 198, type: !433, isLocal: true, isDefinition: true)
!303 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !304, file: !304, line: 175, type: !305, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !428)
!304 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!305 = !DISubroutineType(types: !306)
!306 = !{null, !307}
!307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !308, size: 32)
!308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !310)
!309 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!310 = !{!311, !377, !390, !391, !392, !396, !397, !403, !423}
!311 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !308, file: !309, line: 247, baseType: !312, size: 384)
!312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !313)
!313 = !{!314, !342, !350, !351, !352, !363, !364, !365}
!314 = !DIDerivedType(tag: DW_TAG_member, scope: !312, file: !309, line: 60, baseType: !315, size: 64)
!315 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !312, file: !309, line: 60, size: 64, elements: !316)
!316 = !{!317, !333}
!317 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !315, file: !309, line: 61, baseType: !318, size: 64)
!318 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !320)
!319 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !321)
!321 = !{!322, !328}
!322 = !DIDerivedType(tag: DW_TAG_member, scope: !320, file: !319, line: 38, baseType: !323, size: 32)
!323 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !320, file: !319, line: 38, size: 32, elements: !324)
!324 = !{!325, !327}
!325 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !323, file: !319, line: 39, baseType: !326, size: 32)
!326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !320, size: 32)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !323, file: !319, line: 40, baseType: !326, size: 32)
!328 = !DIDerivedType(tag: DW_TAG_member, scope: !320, file: !319, line: 42, baseType: !329, size: 32, offset: 32)
!329 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !320, file: !319, line: 42, size: 32, elements: !330)
!330 = !{!331, !332}
!331 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !329, file: !319, line: 43, baseType: !326, size: 32)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !329, file: !319, line: 44, baseType: !326, size: 32)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !315, file: !309, line: 62, baseType: !334, size: 64)
!334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !336)
!335 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!336 = !{!337}
!337 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !334, file: !335, line: 50, baseType: !338, size: 64)
!338 = !DICompositeType(tag: DW_TAG_array_type, baseType: !339, size: 64, elements: !340)
!339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !334, size: 32)
!340 = !{!341}
!341 = !DISubrange(count: 2)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !312, file: !309, line: 68, baseType: !343, size: 32, offset: 64)
!343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !344, size: 32)
!344 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !346)
!345 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!346 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !347)
!347 = !{!348}
!348 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !346, file: !345, line: 232, baseType: !349, size: 64)
!349 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !320)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !312, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !312, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!352 = !DIDerivedType(tag: DW_TAG_member, scope: !312, file: !309, line: 90, baseType: !353, size: 16, offset: 112)
!353 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !312, file: !309, line: 90, size: 16, elements: !354)
!354 = !{!355, !362}
!355 = !DIDerivedType(tag: DW_TAG_member, scope: !353, file: !309, line: 91, baseType: !356, size: 16)
!356 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !353, file: !309, line: 91, size: 16, elements: !357)
!357 = !{!358, !361}
!358 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !356, file: !309, line: 96, baseType: !359, size: 8)
!359 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !360)
!360 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !356, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !353, file: !309, line: 100, baseType: !197, size: 16)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !312, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !312, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !312, file: !309, line: 131, baseType: !366, size: 192, offset: 192)
!366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !367)
!367 = !{!368, !369, !375}
!368 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !366, file: !345, line: 245, baseType: !318, size: 64)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !366, file: !345, line: 246, baseType: !370, size: 32, offset: 64)
!370 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !371)
!371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !372, size: 32)
!372 = !DISubroutineType(types: !373)
!373 = !{null, !374}
!374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !366, size: 32)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !366, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!376 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !191)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !308, file: !309, line: 250, baseType: !378, size: 288, offset: 384)
!378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !380)
!379 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!380 = !{!381, !382, !383, !384, !385, !386, !387, !388, !389}
!381 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !378, file: !379, line: 26, baseType: !152, size: 32)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !378, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !378, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !378, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !378, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !378, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !378, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !378, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !378, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !308, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !308, file: !309, line: 256, baseType: !344, size: 64, offset: 704)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !308, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!393 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 256, elements: !394)
!394 = !{!395}
!395 = !DISubrange(count: 32)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !308, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !308, file: !309, line: 300, baseType: !398, size: 96, offset: 1056)
!398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !399)
!399 = !{!400, !401, !402}
!400 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !398, file: !309, line: 153, baseType: !22, size: 32)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !398, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !398, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !308, file: !309, line: 325, baseType: !404, size: 32, offset: 1152)
!404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !405, size: 32)
!405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !407)
!406 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!407 = !{!408, !417, !418}
!408 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !405, file: !406, line: 5074, baseType: !409, size: 96)
!409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !411)
!410 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!411 = !{!412, !415, !416}
!412 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !409, file: !410, line: 57, baseType: !413, size: 32)
!413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !414, size: 32)
!414 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !410, line: 57, flags: DIFlagFwdDecl)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !409, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !409, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !405, file: !406, line: 5075, baseType: !344, size: 64, offset: 96)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !405, file: !406, line: 5076, baseType: !419, size: 32, offset: 160)
!419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !421)
!420 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!421 = !{!422}
!422 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !419, file: !420, line: 52, baseType: !22, size: 32)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !308, file: !309, line: 343, baseType: !424, size: 64, offset: 1184)
!424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !425)
!425 = !{!426, !427}
!426 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !424, file: !379, line: 63, baseType: !152, size: 32)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !424, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!428 = !{!429, !430, !431, !432}
!429 = !DILocalVariable(name: "thread", arg: 1, scope: !303, file: !304, line: 175, type: !307)
!430 = !DILocalVariable(name: "region_num", scope: !303, file: !304, line: 200, type: !195)
!431 = !DILocalVariable(name: "guard_start", scope: !303, file: !304, line: 265, type: !22)
!432 = !DILocalVariable(name: "guard_size", scope: !303, file: !304, line: 266, type: !185)
!433 = !DICompositeType(tag: DW_TAG_array_type, baseType: !434, size: 96, elements: !445)
!434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !435, line: 52, size: 96, elements: !436)
!435 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!436 = !{!437, !438, !439}
!437 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !434, file: !435, line: 53, baseType: !22, size: 32)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !434, file: !435, line: 54, baseType: !185, size: 32, offset: 32)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !434, file: !435, line: 55, baseType: !440, size: 32, offset: 64)
!440 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !441, line: 151, baseType: !442)
!441 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!442 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !441, line: 149, size: 32, elements: !443)
!443 = !{!444}
!444 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !442, file: !441, line: 150, baseType: !152, size: 32)
!445 = !{!446}
!446 = !DISubrange(count: 1)
!447 = !DIGlobalVariableExpression(var: !448, expr: !DIExpression())
!448 = distinct !DIGlobalVariable(name: "static_regions", scope: !297, file: !304, line: 62, type: !449, isLocal: true, isDefinition: true)
!449 = !DICompositeType(tag: DW_TAG_array_type, baseType: !450, size: 96, elements: !445)
!450 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !434)
!451 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !452)
!452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !203, line: 16, size: 64, elements: !453)
!453 = !{!454, !455}
!454 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !452, file: !203, line: 17, baseType: !118, size: 32)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !452, file: !203, line: 18, baseType: !195, size: 8, offset: 32)
!456 = !DIGlobalVariableExpression(var: !457, expr: !DIExpression())
!457 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !458, file: !491, line: 39, type: !195, isLocal: true, isDefinition: true)
!458 = distinct !DICompileUnit(language: DW_LANG_C99, file: !459, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !460, globals: !490, splitDebugInlining: false, nameTableKind: None)
!459 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pytest")
!460 = !{!461, !106, !107, !478, !195}
!461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !462, size: 32)
!462 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !463, line: 1226, baseType: !464)
!463 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!464 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 1213, size: 352, elements: !465)
!465 = !{!466, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477}
!466 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !464, file: !463, line: 1215, baseType: !467, size: 32)
!467 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !227)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !464, file: !463, line: 1216, baseType: !227, size: 32, offset: 32)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !464, file: !463, line: 1217, baseType: !227, size: 32, offset: 64)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !464, file: !463, line: 1218, baseType: !227, size: 32, offset: 96)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !464, file: !463, line: 1219, baseType: !227, size: 32, offset: 128)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !464, file: !463, line: 1220, baseType: !227, size: 32, offset: 160)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !464, file: !463, line: 1221, baseType: !227, size: 32, offset: 192)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !464, file: !463, line: 1222, baseType: !227, size: 32, offset: 224)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !464, file: !463, line: 1223, baseType: !227, size: 32, offset: 256)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !464, file: !463, line: 1224, baseType: !227, size: 32, offset: 288)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !464, file: !463, line: 1225, baseType: !227, size: 32, offset: 320)
!478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !479, size: 32)
!479 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !480)
!480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !481, line: 27, size: 96, elements: !482)
!481 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!482 = !{!483, !484, !485}
!483 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !480, file: !481, line: 29, baseType: !152, size: 32)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !480, file: !481, line: 31, baseType: !118, size: 32, offset: 32)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !480, file: !481, line: 37, baseType: !486, size: 32, offset: 64)
!486 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !441, line: 146, baseType: !487)
!487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !441, line: 141, size: 32, elements: !488)
!488 = !{!489}
!489 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !487, file: !441, line: 143, baseType: !152, size: 32)
!490 = !{!456}
!491 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!492 = !DIGlobalVariableExpression(var: !493, expr: !DIExpression())
!493 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !494, file: !501, line: 21, type: !213, isLocal: true, isDefinition: true)
!494 = distinct !DICompileUnit(language: DW_LANG_C99, file: !495, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !496, globals: !500, splitDebugInlining: false, nameTableKind: None)
!495 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pytest")
!496 = !{!497, !107, !106}
!497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !498, size: 32)
!498 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !499, line: 22, baseType: !107)
!499 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!500 = !{!492}
!501 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!502 = !DIGlobalVariableExpression(var: !503, expr: !DIExpression())
!503 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !504, file: !509, line: 13, type: !526, isLocal: true, isDefinition: true)
!504 = distinct !DICompileUnit(language: DW_LANG_C99, file: !505, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !506, splitDebugInlining: false, nameTableKind: None)
!505 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pytest")
!506 = !{!507, !502}
!507 = !DIGlobalVariableExpression(var: !508, expr: !DIExpression())
!508 = distinct !DIGlobalVariable(name: "mpu_config", scope: !504, file: !509, line: 37, type: !510, isLocal: false, isDefinition: true)
!509 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!510 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !511)
!511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !481, line: 41, size: 64, elements: !512)
!512 = !{!513, !514}
!513 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !511, file: !481, line: 43, baseType: !152, size: 32)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !511, file: !481, line: 45, baseType: !515, size: 32, offset: 32)
!515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !516, size: 32)
!516 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !517)
!517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !481, line: 27, size: 96, elements: !518)
!518 = !{!519, !520, !521}
!519 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !517, file: !481, line: 29, baseType: !152, size: 32)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !517, file: !481, line: 31, baseType: !118, size: 32, offset: 32)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !517, file: !481, line: 37, baseType: !522, size: 32, offset: 64)
!522 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !441, line: 146, baseType: !523)
!523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !441, line: 141, size: 32, elements: !524)
!524 = !{!525}
!525 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !523, file: !441, line: 143, baseType: !152, size: 32)
!526 = !DICompositeType(tag: DW_TAG_array_type, baseType: !516, size: 192, elements: !340)
!527 = !DIGlobalVariableExpression(var: !528, expr: !DIExpression())
!528 = distinct !DIGlobalVariable(name: "phase", scope: !529, file: !533, line: 61, type: !532, isLocal: false, isDefinition: true)
!529 = distinct !DICompileUnit(language: DW_LANG_C99, file: !530, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !531, retainedTypes: !558, globals: !568, splitDebugInlining: false, nameTableKind: None)
!530 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/testsuite/ztest/src/ztest_new.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pytest")
!531 = !{!532, !541, !549, !30, !554}
!532 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ztest_phase", file: !533, line: 40, baseType: !32, size: 32, elements: !534)
!533 = !DIFile(filename: "zephyr/subsys/testsuite/ztest/src/ztest_new.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!534 = !{!535, !536, !537, !538, !539, !540}
!535 = !DIEnumerator(name: "TEST_PHASE_SETUP", value: 0)
!536 = !DIEnumerator(name: "TEST_PHASE_BEFORE", value: 1)
!537 = !DIEnumerator(name: "TEST_PHASE_TEST", value: 2)
!538 = !DIEnumerator(name: "TEST_PHASE_AFTER", value: 3)
!539 = !DIEnumerator(name: "TEST_PHASE_TEARDOWN", value: 4)
!540 = !DIEnumerator(name: "TEST_PHASE_FRAMEWORK", value: 5)
!541 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ztest_result", file: !533, line: 226, baseType: !32, size: 32, elements: !542)
!542 = !{!543, !544, !545, !546, !547, !548}
!543 = !DIEnumerator(name: "ZTEST_RESULT_PENDING", value: 0)
!544 = !DIEnumerator(name: "ZTEST_RESULT_PASS", value: 1)
!545 = !DIEnumerator(name: "ZTEST_RESULT_FAIL", value: 2)
!546 = !DIEnumerator(name: "ZTEST_RESULT_SKIP", value: 3)
!547 = !DIEnumerator(name: "ZTEST_RESULT_SUITE_SKIP", value: 4)
!548 = !DIEnumerator(name: "ZTEST_RESULT_SUITE_FAIL", value: 5)
!549 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ztest_status", file: !533, line: 52, baseType: !32, size: 32, elements: !550)
!550 = !{!551, !552, !553}
!551 = !DIEnumerator(name: "ZTEST_STATUS_OK", value: 0)
!552 = !DIEnumerator(name: "ZTEST_STATUS_HAS_FAILURE", value: 1)
!553 = !DIEnumerator(name: "ZTEST_STATUS_CRITICAL_ERROR", value: 2)
!554 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ztest_expected_result", file: !114, line: 36, baseType: !32, size: 32, elements: !555)
!555 = !{!556, !557}
!556 = !DIEnumerator(name: "ZTEST_EXPECTED_RESULT_FAIL", value: 0)
!557 = !DIEnumerator(name: "ZTEST_EXPECTED_RESULT_SKIP", value: 1)
!558 = !{!106, !107, !185, !559, !564, !152, !566}
!559 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !560, line: 46, baseType: !561)
!560 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !562, size: 32)
!562 = !DISubroutineType(types: !563)
!563 = !{null, !106, !106, !106}
!564 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !565, line: 46, baseType: !376)
!565 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!566 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !567)
!567 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!568 = !{!527, !569, !571, !573, !582, !584, !688, !691}
!569 = !DIGlobalVariableExpression(var: !570, expr: !DIExpression())
!570 = distinct !DIGlobalVariable(name: "test_result", scope: !529, file: !533, line: 234, type: !541, isLocal: true, isDefinition: true)
!571 = !DIGlobalVariableExpression(var: !572, expr: !DIExpression())
!572 = distinct !DIGlobalVariable(name: "current_test_failed_assumption", scope: !529, file: !533, line: 294, type: !145, isLocal: true, isDefinition: true)
!573 = !DIGlobalVariableExpression(var: !574, expr: !DIExpression())
!574 = distinct !DIGlobalVariable(name: "ztest_thread_stack", scope: !529, file: !533, line: 430, type: !575, isLocal: false, isDefinition: true, align: 512)
!575 = !DICompositeType(tag: DW_TAG_array_type, baseType: !576, size: 8704, elements: !580)
!576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !577, line: 47, size: 8, elements: !578)
!577 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!578 = !{!579}
!579 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !576, file: !577, line: 48, baseType: !120, size: 8)
!580 = !{!581}
!581 = !DISubrange(count: 1088)
!582 = !DIGlobalVariableExpression(var: !583, expr: !DIExpression())
!583 = distinct !DIGlobalVariable(name: "test_status", scope: !529, file: !533, line: 63, type: !549, isLocal: true, isDefinition: true)
!584 = !DIGlobalVariableExpression(var: !585, expr: !DIExpression())
!585 = distinct !DIGlobalVariable(name: "ztest_thread", scope: !529, file: !533, line: 17, type: !586, isLocal: true, isDefinition: true)
!586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !587)
!587 = !{!588, !646, !658, !659, !660, !661, !662, !668, !683}
!588 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !586, file: !309, line: 247, baseType: !589, size: 384)
!589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !590)
!590 = !{!591, !615, !622, !623, !624, !633, !634, !635}
!591 = !DIDerivedType(tag: DW_TAG_member, scope: !589, file: !309, line: 60, baseType: !592, size: 64)
!592 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !589, file: !309, line: 60, size: 64, elements: !593)
!593 = !{!594, !609}
!594 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !592, file: !309, line: 61, baseType: !595, size: 64)
!595 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !596)
!596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !597)
!597 = !{!598, !604}
!598 = !DIDerivedType(tag: DW_TAG_member, scope: !596, file: !319, line: 38, baseType: !599, size: 32)
!599 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !596, file: !319, line: 38, size: 32, elements: !600)
!600 = !{!601, !603}
!601 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !599, file: !319, line: 39, baseType: !602, size: 32)
!602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !596, size: 32)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !599, file: !319, line: 40, baseType: !602, size: 32)
!604 = !DIDerivedType(tag: DW_TAG_member, scope: !596, file: !319, line: 42, baseType: !605, size: 32, offset: 32)
!605 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !596, file: !319, line: 42, size: 32, elements: !606)
!606 = !{!607, !608}
!607 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !605, file: !319, line: 43, baseType: !602, size: 32)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !605, file: !319, line: 44, baseType: !602, size: 32)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !592, file: !309, line: 62, baseType: !610, size: 64)
!610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !611)
!611 = !{!612}
!612 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !610, file: !335, line: 50, baseType: !613, size: 64)
!613 = !DICompositeType(tag: DW_TAG_array_type, baseType: !614, size: 64, elements: !340)
!614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !610, size: 32)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !589, file: !309, line: 68, baseType: !616, size: 32, offset: 64)
!616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !617, size: 32)
!617 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !618)
!618 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !619)
!619 = !{!620}
!620 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !618, file: !345, line: 232, baseType: !621, size: 64)
!621 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !596)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !589, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !589, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!624 = !DIDerivedType(tag: DW_TAG_member, scope: !589, file: !309, line: 90, baseType: !625, size: 16, offset: 112)
!625 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !589, file: !309, line: 90, size: 16, elements: !626)
!626 = !{!627, !632}
!627 = !DIDerivedType(tag: DW_TAG_member, scope: !625, file: !309, line: 91, baseType: !628, size: 16)
!628 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !625, file: !309, line: 91, size: 16, elements: !629)
!629 = !{!630, !631}
!630 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !628, file: !309, line: 96, baseType: !359, size: 8)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !628, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !625, file: !309, line: 100, baseType: !197, size: 16)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !589, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !589, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !589, file: !309, line: 131, baseType: !636, size: 192, offset: 192)
!636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !637)
!637 = !{!638, !639, !645}
!638 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !636, file: !345, line: 245, baseType: !595, size: 64)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !636, file: !345, line: 246, baseType: !640, size: 32, offset: 64)
!640 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !641)
!641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !642, size: 32)
!642 = !DISubroutineType(types: !643)
!643 = !{null, !644}
!644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !636, size: 32)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !636, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !586, file: !309, line: 250, baseType: !647, size: 288, offset: 384)
!647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !648)
!648 = !{!649, !650, !651, !652, !653, !654, !655, !656, !657}
!649 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !647, file: !379, line: 26, baseType: !152, size: 32)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !647, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !647, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !647, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !647, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !647, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !647, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !647, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !647, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !586, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !586, file: !309, line: 256, baseType: !617, size: 64, offset: 704)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !586, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !586, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !586, file: !309, line: 300, baseType: !663, size: 96, offset: 1056)
!663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !664)
!664 = !{!665, !666, !667}
!665 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !663, file: !309, line: 153, baseType: !22, size: 32)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !663, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !663, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !586, file: !309, line: 325, baseType: !669, size: 32, offset: 1152)
!669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !670, size: 32)
!670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !671)
!671 = !{!672, !678, !679}
!672 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !670, file: !406, line: 5074, baseType: !673, size: 96)
!673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !674)
!674 = !{!675, !676, !677}
!675 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !673, file: !410, line: 57, baseType: !413, size: 32)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !673, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !673, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !670, file: !406, line: 5075, baseType: !617, size: 64, offset: 96)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !670, file: !406, line: 5076, baseType: !680, size: 32, offset: 160)
!680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !681)
!681 = !{!682}
!682 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !680, file: !420, line: 52, baseType: !22, size: 32)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !586, file: !309, line: 343, baseType: !684, size: 64, offset: 1184)
!684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !685)
!685 = !{!686, !687}
!686 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !684, file: !379, line: 63, baseType: !152, size: 32)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !684, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!688 = !DIGlobalVariableExpression(var: !689, expr: !DIExpression())
!689 = distinct !DIGlobalVariable(name: "tc_start_time", scope: !529, file: !690, line: 95, type: !152, isLocal: true, isDefinition: true)
!690 = !DIFile(filename: "zephyr/subsys/testsuite/include/zephyr/tc_util.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!691 = !DIGlobalVariableExpression(var: !692, expr: !DIExpression())
!692 = distinct !DIGlobalVariable(name: "tc_spend_time", scope: !529, file: !690, line: 96, type: !152, isLocal: true, isDefinition: true)
!693 = !DIGlobalVariableExpression(var: !572, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!694 = !DIGlobalVariableExpression(var: !695, expr: !DIExpression())
!695 = distinct !DIGlobalVariable(name: "ztest_api", scope: !696, file: !699, line: 70, type: !700, isLocal: false, isDefinition: true)
!696 = distinct !DICompileUnit(language: DW_LANG_C99, file: !697, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, globals: !698, splitDebugInlining: false, nameTableKind: None)
!697 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/testsuite/ztest/src/ztest_defaults.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pytest")
!698 = !{!694}
!699 = !DIFile(filename: "zephyr/subsys/testsuite/ztest/src/ztest_defaults.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!700 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !701)
!701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_arch_api", file: !114, line: 499, size: 96, elements: !702)
!702 = !{!703, !704, !725}
!703 = !DIDerivedType(tag: DW_TAG_member, name: "run_all", scope: !701, file: !114, line: 500, baseType: !16, size: 32)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "should_suite_run", scope: !701, file: !114, line: 501, baseType: !705, size: 32, offset: 32)
!705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !706, size: 32)
!706 = !DISubroutineType(types: !707)
!707 = !{!145, !13, !708}
!708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !709, size: 32)
!709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_node", file: !114, line: 177, size: 224, elements: !710)
!710 = !{!711, !712, !713, !714, !715, !716, !717}
!711 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !709, file: !114, line: 179, baseType: !117, size: 32)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !709, file: !114, line: 182, baseType: !122, size: 32, offset: 32)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "before", scope: !709, file: !114, line: 185, baseType: !128, size: 32, offset: 64)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "after", scope: !709, file: !114, line: 188, baseType: !134, size: 32, offset: 96)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "teardown", scope: !709, file: !114, line: 191, baseType: !137, size: 32, offset: 128)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "predicate", scope: !709, file: !114, line: 194, baseType: !140, size: 32, offset: 160)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !709, file: !114, line: 197, baseType: !718, size: 32, offset: 192)
!718 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !719)
!719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !720, size: 32)
!720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_stats", file: !114, line: 114, size: 96, elements: !721)
!721 = !{!722, !723, !724}
!722 = !DIDerivedType(tag: DW_TAG_member, name: "run_count", scope: !720, file: !114, line: 116, baseType: !152, size: 32)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !720, file: !114, line: 118, baseType: !152, size: 32, offset: 32)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "fail_count", scope: !720, file: !114, line: 120, baseType: !152, size: 32, offset: 64)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "should_test_run", scope: !701, file: !114, line: 502, baseType: !726, size: 32, offset: 64)
!726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !727, size: 32)
!727 = !DISubroutineType(types: !728)
!728 = !{!145, !118, !118}
!729 = !DIGlobalVariableExpression(var: !730, expr: !DIExpression())
!730 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !731, file: !844, line: 72, type: !928, isLocal: true, isDefinition: true)
!731 = distinct !DICompileUnit(language: DW_LANG_C99, file: !732, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !733, retainedTypes: !830, globals: !841, splitDebugInlining: false, nameTableKind: None)
!732 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pytest")
!733 = !{!30, !734}
!734 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !223, line: 65, baseType: !107, size: 32, elements: !735)
!735 = !{!736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829}
!736 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!737 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!738 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!739 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!740 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!741 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!742 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!743 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!744 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!745 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!746 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!747 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!748 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!749 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!750 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!751 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!752 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!753 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!754 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!755 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!756 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!757 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!758 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!759 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!760 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!761 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!762 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!763 = !DIEnumerator(name: "CAN1_TX_IRQn", value: 19)
!764 = !DIEnumerator(name: "CAN1_RX0_IRQn", value: 20)
!765 = !DIEnumerator(name: "CAN1_RX1_IRQn", value: 21)
!766 = !DIEnumerator(name: "CAN1_SCE_IRQn", value: 22)
!767 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!768 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!769 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!770 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!771 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!772 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!773 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!774 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!775 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!776 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!777 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!778 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!779 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!780 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!781 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!782 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!783 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!784 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!785 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!786 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!787 = !DIEnumerator(name: "TIM8_BRK_TIM12_IRQn", value: 43)
!788 = !DIEnumerator(name: "TIM8_UP_TIM13_IRQn", value: 44)
!789 = !DIEnumerator(name: "TIM8_TRG_COM_TIM14_IRQn", value: 45)
!790 = !DIEnumerator(name: "TIM8_CC_IRQn", value: 46)
!791 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!792 = !DIEnumerator(name: "FMC_IRQn", value: 48)
!793 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!794 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!795 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!796 = !DIEnumerator(name: "UART4_IRQn", value: 52)
!797 = !DIEnumerator(name: "UART5_IRQn", value: 53)
!798 = !DIEnumerator(name: "TIM6_DAC_IRQn", value: 54)
!799 = !DIEnumerator(name: "TIM7_IRQn", value: 55)
!800 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!801 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!802 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!803 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!804 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!805 = !DIEnumerator(name: "CAN2_TX_IRQn", value: 63)
!806 = !DIEnumerator(name: "CAN2_RX0_IRQn", value: 64)
!807 = !DIEnumerator(name: "CAN2_RX1_IRQn", value: 65)
!808 = !DIEnumerator(name: "CAN2_SCE_IRQn", value: 66)
!809 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!810 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!811 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!812 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!813 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!814 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!815 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!816 = !DIEnumerator(name: "OTG_HS_EP1_OUT_IRQn", value: 74)
!817 = !DIEnumerator(name: "OTG_HS_EP1_IN_IRQn", value: 75)
!818 = !DIEnumerator(name: "OTG_HS_WKUP_IRQn", value: 76)
!819 = !DIEnumerator(name: "OTG_HS_IRQn", value: 77)
!820 = !DIEnumerator(name: "DCMI_IRQn", value: 78)
!821 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!822 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!823 = !DIEnumerator(name: "SAI1_IRQn", value: 87)
!824 = !DIEnumerator(name: "SAI2_IRQn", value: 91)
!825 = !DIEnumerator(name: "QUADSPI_IRQn", value: 92)
!826 = !DIEnumerator(name: "CEC_IRQn", value: 93)
!827 = !DIEnumerator(name: "SPDIF_RX_IRQn", value: 94)
!828 = !DIEnumerator(name: "FMPI2C1_EV_IRQn", value: 95)
!829 = !DIEnumerator(name: "FMPI2C1_ER_IRQn", value: 96)
!830 = !{!185, !107, !106, !831}
!831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !832, size: 32)
!832 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !223, line: 392, baseType: !833)
!833 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 384, size: 192, elements: !834)
!834 = !{!835, !836, !837, !838, !839, !840}
!835 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !833, file: !223, line: 386, baseType: !227, size: 32)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !833, file: !223, line: 387, baseType: !227, size: 32, offset: 32)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !833, file: !223, line: 388, baseType: !227, size: 32, offset: 64)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !833, file: !223, line: 389, baseType: !227, size: 32, offset: 96)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !833, file: !223, line: 390, baseType: !227, size: 32, offset: 128)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !833, file: !223, line: 391, baseType: !227, size: 32, offset: 160)
!841 = !{!842, !848, !864, !875, !892, !729, !894, !908, !910, !912, !914, !916, !918, !920, !922, !924, !926}
!842 = !DIGlobalVariableExpression(var: !843, expr: !DIExpression())
!843 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !731, file: !844, line: 424, type: !845, isLocal: false, isDefinition: true, align: 16)
!844 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!845 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 64, elements: !846)
!846 = !{!847}
!847 = !DISubrange(count: 4)
!848 = !DIGlobalVariableExpression(var: !849, expr: !DIExpression())
!849 = distinct !DIGlobalVariable(name: "__device_dts_ord_36", scope: !731, file: !844, line: 424, type: !850, isLocal: false, isDefinition: true, align: 32)
!850 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !851)
!851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !852)
!852 = !{!853, !854, !855, !856, !862, !863}
!853 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !851, file: !247, line: 380, baseType: !118, size: 32)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !851, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !851, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !851, file: !247, line: 386, baseType: !857, size: 32, offset: 96)
!857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !858, size: 32)
!858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !859)
!859 = !{!860, !861}
!860 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !858, file: !247, line: 359, baseType: !195, size: 8)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !858, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !851, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !851, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!864 = !DIGlobalVariableExpression(var: !865, expr: !DIExpression())
!865 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_36", scope: !731, file: !844, line: 424, type: !866, isLocal: true, isDefinition: true, align: 32)
!866 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !867)
!867 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !868)
!868 = !{!869, !874}
!869 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !867, file: !238, line: 60, baseType: !870, size: 32)
!870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !871, size: 32)
!871 = !DISubroutineType(types: !872)
!872 = !{!107, !873}
!873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !850, size: 32)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !867, file: !238, line: 65, baseType: !873, size: 32, offset: 32)
!875 = !DIGlobalVariableExpression(var: !876, expr: !DIExpression())
!876 = distinct !DIGlobalVariable(name: "exti_data", scope: !731, file: !844, line: 423, type: !877, isLocal: true, isDefinition: true)
!877 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !844, line: 107, size: 1472, elements: !878)
!878 = !{!879}
!879 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !877, file: !844, line: 109, baseType: !880, size: 1472)
!880 = !DICompositeType(tag: DW_TAG_array_type, baseType: !881, size: 1472, elements: !890)
!881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !844, line: 101, size: 64, elements: !882)
!882 = !{!883, !889}
!883 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !881, file: !844, line: 102, baseType: !884, size: 32)
!884 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !885, line: 63, baseType: !886)
!885 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !887, size: 32)
!887 = !DISubroutineType(types: !888)
!888 = !{null, !107, !106}
!889 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !881, file: !844, line: 103, baseType: !106, size: 32, offset: 32)
!890 = !{!891}
!891 = !DISubrange(count: 23)
!892 = !DIGlobalVariableExpression(var: !893, expr: !DIExpression())
!893 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_36", scope: !731, file: !844, line: 424, type: !858, isLocal: true, isDefinition: true, align: 8)
!894 = !DIGlobalVariableExpression(var: !895, expr: !DIExpression())
!895 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !896, file: !844, line: 493, type: !901, isLocal: true, isDefinition: true, align: 32)
!896 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !844, file: !844, line: 460, type: !897, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !899)
!897 = !DISubroutineType(types: !898)
!898 = !{null, !873}
!899 = !{!900}
!900 = !DILocalVariable(name: "dev", arg: 1, scope: !896, file: !844, line: 460, type: !873)
!901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !902)
!902 = !{!903, !905, !906, !907}
!903 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !901, file: !10, line: 55, baseType: !904, size: 32)
!904 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !107)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !901, file: !10, line: 57, baseType: !904, size: 32, offset: 32)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !901, file: !10, line: 59, baseType: !106, size: 32, offset: 64)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !901, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!908 = !DIGlobalVariableExpression(var: !909, expr: !DIExpression())
!909 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !896, file: !844, line: 497, type: !901, isLocal: true, isDefinition: true, align: 32)
!910 = !DIGlobalVariableExpression(var: !911, expr: !DIExpression())
!911 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !896, file: !844, line: 507, type: !901, isLocal: true, isDefinition: true, align: 32)
!912 = !DIGlobalVariableExpression(var: !913, expr: !DIExpression())
!913 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !896, file: !844, line: 512, type: !901, isLocal: true, isDefinition: true, align: 32)
!914 = !DIGlobalVariableExpression(var: !915, expr: !DIExpression())
!915 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !896, file: !844, line: 516, type: !901, isLocal: true, isDefinition: true, align: 32)
!916 = !DIGlobalVariableExpression(var: !917, expr: !DIExpression())
!917 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !896, file: !844, line: 523, type: !901, isLocal: true, isDefinition: true, align: 32)
!918 = !DIGlobalVariableExpression(var: !919, expr: !DIExpression())
!919 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !896, file: !844, line: 527, type: !901, isLocal: true, isDefinition: true, align: 32)
!920 = !DIGlobalVariableExpression(var: !921, expr: !DIExpression())
!921 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !896, file: !844, line: 581, type: !901, isLocal: true, isDefinition: true, align: 32)
!922 = !DIGlobalVariableExpression(var: !923, expr: !DIExpression())
!923 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !896, file: !844, line: 586, type: !901, isLocal: true, isDefinition: true, align: 32)
!924 = !DIGlobalVariableExpression(var: !925, expr: !DIExpression())
!925 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !896, file: !844, line: 591, type: !901, isLocal: true, isDefinition: true, align: 32)
!926 = !DIGlobalVariableExpression(var: !927, expr: !DIExpression())
!927 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !896, file: !844, line: 595, type: !901, isLocal: true, isDefinition: true, align: 32)
!928 = !DICompositeType(tag: DW_TAG_array_type, baseType: !929, size: 736, elements: !890)
!929 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !930)
!930 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !223, line: 163, baseType: !734)
!931 = !DIGlobalVariableExpression(var: !932, expr: !DIExpression())
!932 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !933, file: !938, line: 25, type: !966, isLocal: false, isDefinition: true, align: 16)
!933 = distinct !DICompileUnit(language: DW_LANG_C99, file: !934, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !935, splitDebugInlining: false, nameTableKind: None)
!934 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pytest/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pytest")
!935 = !{!936, !931, !942, !944, !946, !948, !950, !952, !954, !956, !958, !960, !962, !964}
!936 = !DIGlobalVariableExpression(var: !937, expr: !DIExpression())
!937 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !933, file: !938, line: 20, type: !939, isLocal: false, isDefinition: true, align: 16)
!938 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pytest")
!939 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 240, elements: !940)
!940 = !{!941}
!941 = !DISubrange(count: 15)
!942 = !DIGlobalVariableExpression(var: !943, expr: !DIExpression())
!943 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_96", scope: !933, file: !938, line: 32, type: !845, isLocal: false, isDefinition: true, align: 16)
!944 = !DIGlobalVariableExpression(var: !945, expr: !DIExpression())
!945 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_95", scope: !933, file: !938, line: 39, type: !845, isLocal: false, isDefinition: true, align: 16)
!946 = !DIGlobalVariableExpression(var: !947, expr: !DIExpression())
!947 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_94", scope: !933, file: !938, line: 46, type: !845, isLocal: false, isDefinition: true, align: 16)
!948 = !DIGlobalVariableExpression(var: !949, expr: !DIExpression())
!949 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_93", scope: !933, file: !938, line: 53, type: !845, isLocal: false, isDefinition: true, align: 16)
!950 = !DIGlobalVariableExpression(var: !951, expr: !DIExpression())
!951 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !933, file: !938, line: 60, type: !845, isLocal: false, isDefinition: true, align: 16)
!952 = !DIGlobalVariableExpression(var: !953, expr: !DIExpression())
!953 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_92", scope: !933, file: !938, line: 67, type: !845, isLocal: false, isDefinition: true, align: 16)
!954 = !DIGlobalVariableExpression(var: !955, expr: !DIExpression())
!955 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_91", scope: !933, file: !938, line: 74, type: !845, isLocal: false, isDefinition: true, align: 16)
!956 = !DIGlobalVariableExpression(var: !957, expr: !DIExpression())
!957 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_90", scope: !933, file: !938, line: 81, type: !845, isLocal: false, isDefinition: true, align: 16)
!958 = !DIGlobalVariableExpression(var: !959, expr: !DIExpression())
!959 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_48", scope: !933, file: !938, line: 88, type: !845, isLocal: false, isDefinition: true, align: 16)
!960 = !DIGlobalVariableExpression(var: !961, expr: !DIExpression())
!961 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !933, file: !938, line: 95, type: !845, isLocal: false, isDefinition: true, align: 16)
!962 = !DIGlobalVariableExpression(var: !963, expr: !DIExpression())
!963 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !933, file: !938, line: 102, type: !845, isLocal: false, isDefinition: true, align: 16)
!964 = !DIGlobalVariableExpression(var: !965, expr: !DIExpression())
!965 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_52", scope: !933, file: !938, line: 109, type: !845, isLocal: false, isDefinition: true, align: 16)
!966 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 48, elements: !967)
!967 = !{!968}
!968 = !DISubrange(count: 3)
!969 = !DIGlobalVariableExpression(var: !970, expr: !DIExpression())
!970 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !971, file: !1036, line: 398, type: !1069, isLocal: true, isDefinition: true)
!971 = distinct !DICompileUnit(language: DW_LANG_C99, file: !972, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !973, retainedTypes: !986, globals: !1033, splitDebugInlining: false, nameTableKind: None)
!972 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pytest")
!973 = !{!974, !30, !979}
!974 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !975, line: 197, baseType: !32, size: 32, elements: !976)
!975 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!976 = !{!977, !978}
!977 = !DIEnumerator(name: "SUCCESS", value: 0)
!978 = !DIEnumerator(name: "ERROR", value: 1)
!979 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !980, line: 44, baseType: !32, size: 32, elements: !981)
!980 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!981 = !{!982, !983, !984, !985}
!982 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!983 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!984 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!985 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!986 = !{!106, !107, !152, !987, !1026, !1032}
!987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !988, size: 32)
!988 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !223, line: 586, baseType: !989)
!989 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 550, size: 1216, elements: !990)
!990 = !{!991, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025}
!991 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !989, file: !223, line: 552, baseType: !227, size: 32)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !989, file: !223, line: 553, baseType: !227, size: 32, offset: 32)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !989, file: !223, line: 554, baseType: !227, size: 32, offset: 64)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !989, file: !223, line: 555, baseType: !227, size: 32, offset: 96)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !989, file: !223, line: 556, baseType: !227, size: 32, offset: 128)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !989, file: !223, line: 557, baseType: !227, size: 32, offset: 160)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !989, file: !223, line: 558, baseType: !227, size: 32, offset: 192)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !989, file: !223, line: 559, baseType: !152, size: 32, offset: 224)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !989, file: !223, line: 560, baseType: !227, size: 32, offset: 256)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !989, file: !223, line: 561, baseType: !227, size: 32, offset: 288)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !989, file: !223, line: 562, baseType: !1002, size: 64, offset: 320)
!1002 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 64, elements: !340)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !989, file: !223, line: 563, baseType: !227, size: 32, offset: 384)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !989, file: !223, line: 564, baseType: !227, size: 32, offset: 416)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !989, file: !223, line: 565, baseType: !227, size: 32, offset: 448)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !989, file: !223, line: 566, baseType: !152, size: 32, offset: 480)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !989, file: !223, line: 567, baseType: !227, size: 32, offset: 512)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !989, file: !223, line: 568, baseType: !227, size: 32, offset: 544)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !989, file: !223, line: 569, baseType: !1002, size: 64, offset: 576)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !989, file: !223, line: 570, baseType: !227, size: 32, offset: 640)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !989, file: !223, line: 571, baseType: !227, size: 32, offset: 672)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !989, file: !223, line: 572, baseType: !227, size: 32, offset: 704)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !989, file: !223, line: 573, baseType: !152, size: 32, offset: 736)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !989, file: !223, line: 574, baseType: !227, size: 32, offset: 768)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !989, file: !223, line: 575, baseType: !227, size: 32, offset: 800)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !989, file: !223, line: 576, baseType: !1002, size: 64, offset: 832)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !989, file: !223, line: 577, baseType: !227, size: 32, offset: 896)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !989, file: !223, line: 578, baseType: !227, size: 32, offset: 928)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !989, file: !223, line: 579, baseType: !1002, size: 64, offset: 960)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !989, file: !223, line: 580, baseType: !227, size: 32, offset: 1024)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !989, file: !223, line: 581, baseType: !227, size: 32, offset: 1056)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !989, file: !223, line: 582, baseType: !227, size: 32, offset: 1088)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !989, file: !223, line: 583, baseType: !227, size: 32, offset: 1120)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !989, file: !223, line: 584, baseType: !227, size: 32, offset: 1152)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !989, file: !223, line: 585, baseType: !227, size: 32, offset: 1184)
!1026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1027, size: 32)
!1027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1028, line: 343, size: 64, elements: !1029)
!1028 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1029 = !{!1030, !1031}
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1027, file: !1028, line: 344, baseType: !152, size: 32)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1027, file: !1028, line: 345, baseType: !152, size: 32, offset: 32)
!1032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !152, size: 32)
!1033 = !{!1034, !1040, !1056, !1067, !969}
!1034 = !DIGlobalVariableExpression(var: !1035, expr: !DIExpression())
!1035 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !971, file: !1036, line: 752, type: !1037, isLocal: false, isDefinition: true, align: 16)
!1036 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1037 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 800, elements: !1038)
!1038 = !{!1039}
!1039 = !DISubrange(count: 50)
!1040 = !DIGlobalVariableExpression(var: !1041, expr: !DIExpression())
!1041 = distinct !DIGlobalVariable(name: "__device_dts_ord_8", scope: !971, file: !1036, line: 752, type: !1042, isLocal: false, isDefinition: true, align: 32)
!1042 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1043)
!1043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !1044)
!1044 = !{!1045, !1046, !1047, !1048, !1054, !1055}
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1043, file: !247, line: 380, baseType: !118, size: 32)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1043, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1043, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1043, file: !247, line: 386, baseType: !1049, size: 32, offset: 96)
!1049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1050, size: 32)
!1050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !1051)
!1051 = !{!1052, !1053}
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1050, file: !247, line: 359, baseType: !195, size: 8)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1050, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1043, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1043, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!1056 = !DIGlobalVariableExpression(var: !1057, expr: !DIExpression())
!1057 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_8", scope: !971, file: !1036, line: 752, type: !1058, isLocal: true, isDefinition: true, align: 32)
!1058 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1059)
!1059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !1060)
!1060 = !{!1061, !1066}
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1059, file: !238, line: 60, baseType: !1062, size: 32)
!1062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1063, size: 32)
!1063 = !DISubroutineType(types: !1064)
!1064 = !{!107, !1065}
!1065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1042, size: 32)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1059, file: !238, line: 65, baseType: !1065, size: 32, offset: 32)
!1067 = !DIGlobalVariableExpression(var: !1068, expr: !DIExpression())
!1068 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_8", scope: !971, file: !1036, line: 752, type: !1050, isLocal: true, isDefinition: true, align: 8)
!1069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !980, line: 100, size: 224, elements: !1070)
!1070 = !{!1071, !1077, !1078, !1087, !1092, !1097, !1103}
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1069, file: !980, line: 101, baseType: !1072, size: 32)
!1072 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !980, line: 76, baseType: !1073)
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1074, size: 32)
!1074 = !DISubroutineType(types: !1075)
!1075 = !{!107, !1065, !1076}
!1076 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !980, line: 56, baseType: !106)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1069, file: !980, line: 102, baseType: !1072, size: 32, offset: 32)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1069, file: !980, line: 103, baseType: !1079, size: 32, offset: 64)
!1079 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !980, line: 83, baseType: !1080)
!1080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1081, size: 32)
!1081 = !DISubroutineType(types: !1082)
!1082 = !{!107, !1065, !1076, !1083, !106}
!1083 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !980, line: 72, baseType: !1084)
!1084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1085, size: 32)
!1085 = !DISubroutineType(types: !1086)
!1086 = !{null, !1065, !1076, !106}
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1069, file: !980, line: 104, baseType: !1088, size: 32, offset: 96)
!1088 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !980, line: 79, baseType: !1089)
!1089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1090, size: 32)
!1090 = !DISubroutineType(types: !1091)
!1091 = !{!107, !1065, !1076, !1032}
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1069, file: !980, line: 105, baseType: !1093, size: 32, offset: 128)
!1093 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !980, line: 88, baseType: !1094)
!1094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1095, size: 32)
!1095 = !DISubroutineType(types: !1096)
!1096 = !{!979, !1065, !1076}
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1069, file: !980, line: 106, baseType: !1098, size: 32, offset: 160)
!1098 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !980, line: 92, baseType: !1099)
!1099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1100, size: 32)
!1100 = !DISubroutineType(types: !1101)
!1101 = !{!107, !1065, !1076, !1102}
!1102 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !980, line: 64, baseType: !106)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1069, file: !980, line: 107, baseType: !1104, size: 32, offset: 192)
!1104 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !980, line: 96, baseType: !1105)
!1105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1106, size: 32)
!1106 = !DISubroutineType(types: !1107)
!1107 = !{!107, !1065, !1076, !106}
!1108 = !DIGlobalVariableExpression(var: !1109, expr: !DIExpression())
!1109 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !1110, file: !1167, line: 603, type: !1169, isLocal: true, isDefinition: true, align: 32)
!1110 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1111, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1112, globals: !1164, splitDebugInlining: false, nameTableKind: None)
!1111 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pytest")
!1112 = !{!106, !107, !1113}
!1113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1114, size: 32)
!1114 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1115)
!1115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1116, line: 336, size: 160, elements: !1117)
!1116 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1117 = !{!1118, !1138, !1142, !1146, !1159}
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1115, file: !1116, line: 365, baseType: !1119, size: 32)
!1119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1120, size: 32)
!1120 = !DISubroutineType(types: !1121)
!1121 = !{!107, !1122, !1137}
!1122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1123, size: 32)
!1123 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1124)
!1124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !1125)
!1125 = !{!1126, !1127, !1128, !1129, !1135, !1136}
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1124, file: !247, line: 380, baseType: !118, size: 32)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1124, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1124, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1124, file: !247, line: 386, baseType: !1130, size: 32, offset: 96)
!1130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1131, size: 32)
!1131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !1132)
!1132 = !{!1133, !1134}
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1131, file: !247, line: 359, baseType: !195, size: 8)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1131, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1124, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1124, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!1137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !196, size: 32)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1115, file: !1116, line: 366, baseType: !1139, size: 32, offset: 32)
!1139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1140, size: 32)
!1140 = !DISubroutineType(types: !1141)
!1141 = !{null, !1122, !196}
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1115, file: !1116, line: 374, baseType: !1143, size: 32, offset: 64)
!1143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1144, size: 32)
!1144 = !DISubroutineType(types: !1145)
!1145 = !{!107, !1122}
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1115, file: !1116, line: 377, baseType: !1147, size: 32, offset: 96)
!1147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1148, size: 32)
!1148 = !DISubroutineType(types: !1149)
!1149 = !{!107, !1122, !1150}
!1150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1151, size: 32)
!1151 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1152)
!1152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1116, line: 122, size: 64, elements: !1153)
!1153 = !{!1154, !1155, !1156, !1157, !1158}
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1152, file: !1116, line: 123, baseType: !152, size: 32)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1152, file: !1116, line: 124, baseType: !195, size: 8, offset: 32)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1152, file: !1116, line: 125, baseType: !195, size: 8, offset: 40)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1152, file: !1116, line: 126, baseType: !195, size: 8, offset: 48)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1152, file: !1116, line: 127, baseType: !195, size: 8, offset: 56)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1115, file: !1116, line: 379, baseType: !1160, size: 32, offset: 128)
!1160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1161, size: 32)
!1161 = !DISubroutineType(types: !1162)
!1162 = !{!107, !1122, !1163}
!1163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1152, size: 32)
!1164 = !{!1108, !1165}
!1165 = !DIGlobalVariableExpression(var: !1166, expr: !DIExpression())
!1166 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !1110, file: !1167, line: 38, type: !1168, isLocal: true, isDefinition: true)
!1167 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1168 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1122)
!1169 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1170)
!1170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !1171)
!1171 = !{!1172, !1173}
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1170, file: !238, line: 60, baseType: !1143, size: 32)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1170, file: !238, line: 65, baseType: !1122, size: 32, offset: 32)
!1174 = !DIGlobalVariableExpression(var: !1175, expr: !DIExpression())
!1175 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1176, file: !1347, line: 762, type: !1456, isLocal: true, isDefinition: true)
!1176 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1177, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1178, retainedTypes: !1196, globals: !1344, splitDebugInlining: false, nameTableKind: None)
!1177 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pytest")
!1178 = !{!30, !1179, !1185, !1190, !979}
!1179 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1180, line: 506, baseType: !32, size: 32, elements: !1181)
!1180 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1181 = !{!1182, !1183, !1184}
!1182 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1183 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1184 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1185 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1180, line: 512, baseType: !32, size: 32, elements: !1186)
!1186 = !{!1187, !1188, !1189}
!1187 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1188 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1189 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1190 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !885, line: 43, baseType: !32, size: 32, elements: !1191)
!1191 = !{!1192, !1193, !1194, !1195}
!1192 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1193 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1194 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1195 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1196 = !{!106, !107, !1197, !1267, !1272, !1232, !1185, !1179, !1277, !1278, !152, !1292, !1247, !193, !1304, !1305}
!1197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1198, size: 32)
!1198 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1199)
!1199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1180, line: 523, size: 288, elements: !1200)
!1200 = !{!1201, !1222, !1228, !1233, !1237, !1238, !1239, !1243, !1263}
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1199, file: !1180, line: 524, baseType: !1202, size: 32)
!1202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1203, size: 32)
!1203 = !DISubroutineType(types: !1204)
!1204 = !{!107, !1205, !1220, !1221}
!1205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1206, size: 32)
!1206 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1207)
!1207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !1208)
!1208 = !{!1209, !1210, !1211, !1212, !1218, !1219}
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1207, file: !247, line: 380, baseType: !118, size: 32)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1207, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1207, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1207, file: !247, line: 386, baseType: !1213, size: 32, offset: 96)
!1213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1214, size: 32)
!1214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !1215)
!1215 = !{!1216, !1217}
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1214, file: !247, line: 359, baseType: !195, size: 8)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1214, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1207, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1207, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!1220 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1180, line: 237, baseType: !195)
!1221 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1180, line: 257, baseType: !152)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1199, file: !1180, line: 530, baseType: !1223, size: 32, offset: 32)
!1223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1224, size: 32)
!1224 = !DISubroutineType(types: !1225)
!1225 = !{!107, !1205, !1226}
!1226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1227, size: 32)
!1227 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1180, line: 229, baseType: !152)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1199, file: !1180, line: 532, baseType: !1229, size: 32, offset: 64)
!1229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1230, size: 32)
!1230 = !DISubroutineType(types: !1231)
!1231 = !{!107, !1205, !1232, !1227}
!1232 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1180, line: 216, baseType: !152)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1199, file: !1180, line: 535, baseType: !1234, size: 32, offset: 96)
!1234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1235, size: 32)
!1235 = !DISubroutineType(types: !1236)
!1236 = !{!107, !1205, !1232}
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1199, file: !1180, line: 537, baseType: !1234, size: 32, offset: 128)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1199, file: !1180, line: 539, baseType: !1234, size: 32, offset: 160)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1199, file: !1180, line: 541, baseType: !1240, size: 32, offset: 192)
!1240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1241, size: 32)
!1241 = !DISubroutineType(types: !1242)
!1242 = !{!107, !1205, !1220, !1179, !1185}
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1199, file: !1180, line: 544, baseType: !1244, size: 32, offset: 224)
!1244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1245, size: 32)
!1245 = !DISubroutineType(types: !1246)
!1246 = !{!107, !1205, !1247, !145}
!1247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1248, size: 32)
!1248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1180, line: 478, size: 96, elements: !1249)
!1249 = !{!1250, !1257, !1262}
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1248, file: !1180, line: 482, baseType: !1251, size: 32)
!1251 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1252, line: 33, baseType: !1253)
!1252 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1252, line: 29, size: 32, elements: !1254)
!1254 = !{!1255}
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1253, file: !1252, line: 30, baseType: !1256, size: 32)
!1256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1253, size: 32)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1248, file: !1180, line: 485, baseType: !1258, size: 32, offset: 32)
!1258 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1180, line: 464, baseType: !1259)
!1259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1260, size: 32)
!1260 = !DISubroutineType(types: !1261)
!1261 = !{null, !1205, !1247, !1232}
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1248, file: !1180, line: 493, baseType: !1232, size: 32, offset: 64)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1199, file: !1180, line: 547, baseType: !1264, size: 32, offset: 256)
!1264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1265, size: 32)
!1265 = !DISubroutineType(types: !1266)
!1266 = !{!152, !1205}
!1267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1268, size: 32)
!1268 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1269)
!1269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1180, line: 428, size: 32, elements: !1270)
!1270 = !{!1271}
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1269, file: !1180, line: 434, baseType: !1232, size: 32)
!1272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1273, size: 32)
!1273 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1274)
!1274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1180, line: 441, size: 32, elements: !1275)
!1275 = !{!1276}
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1274, file: !1180, line: 447, baseType: !1232, size: 32)
!1277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1274, size: 32)
!1278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1279, size: 32)
!1279 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !223, line: 469, baseType: !1280)
!1280 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 458, size: 320, elements: !1281)
!1281 = !{!1282, !1283, !1284, !1285, !1286, !1287, !1288, !1289, !1290}
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1280, file: !223, line: 460, baseType: !227, size: 32)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1280, file: !223, line: 461, baseType: !227, size: 32, offset: 32)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1280, file: !223, line: 462, baseType: !227, size: 32, offset: 64)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1280, file: !223, line: 463, baseType: !227, size: 32, offset: 96)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1280, file: !223, line: 464, baseType: !227, size: 32, offset: 128)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1280, file: !223, line: 465, baseType: !227, size: 32, offset: 160)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1280, file: !223, line: 466, baseType: !227, size: 32, offset: 192)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1280, file: !223, line: 467, baseType: !227, size: 32, offset: 224)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1280, file: !223, line: 468, baseType: !1291, size: 64, offset: 256)
!1291 = !DICompositeType(tag: DW_TAG_array_type, baseType: !227, size: 64, elements: !340)
!1292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1293, size: 32)
!1293 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !223, line: 484, baseType: !1294)
!1294 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 475, size: 384, elements: !1295)
!1295 = !{!1296, !1297, !1298, !1300, !1301, !1302, !1303}
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1294, file: !223, line: 477, baseType: !227, size: 32)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1294, file: !223, line: 478, baseType: !227, size: 32, offset: 32)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1294, file: !223, line: 479, baseType: !1299, size: 128, offset: 64)
!1299 = !DICompositeType(tag: DW_TAG_array_type, baseType: !227, size: 128, elements: !846)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1294, file: !223, line: 480, baseType: !1002, size: 64, offset: 192)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1294, file: !223, line: 481, baseType: !227, size: 32, offset: 256)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1294, file: !223, line: 482, baseType: !1002, size: 64, offset: 288)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1294, file: !223, line: 483, baseType: !227, size: 32, offset: 352)
!1304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1076, size: 32)
!1305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1306, size: 32)
!1306 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1307)
!1307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !980, line: 100, size: 224, elements: !1308)
!1308 = !{!1309, !1314, !1315, !1324, !1329, !1334, !1339}
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1307, file: !980, line: 101, baseType: !1310, size: 32)
!1310 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !980, line: 76, baseType: !1311)
!1311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1312, size: 32)
!1312 = !DISubroutineType(types: !1313)
!1313 = !{!107, !1205, !1076}
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1307, file: !980, line: 102, baseType: !1310, size: 32, offset: 32)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1307, file: !980, line: 103, baseType: !1316, size: 32, offset: 64)
!1316 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !980, line: 83, baseType: !1317)
!1317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1318, size: 32)
!1318 = !DISubroutineType(types: !1319)
!1319 = !{!107, !1205, !1076, !1320, !106}
!1320 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !980, line: 72, baseType: !1321)
!1321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1322, size: 32)
!1322 = !DISubroutineType(types: !1323)
!1323 = !{null, !1205, !1076, !106}
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1307, file: !980, line: 104, baseType: !1325, size: 32, offset: 96)
!1325 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !980, line: 79, baseType: !1326)
!1326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1327, size: 32)
!1327 = !DISubroutineType(types: !1328)
!1328 = !{!107, !1205, !1076, !1032}
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1307, file: !980, line: 105, baseType: !1330, size: 32, offset: 128)
!1330 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !980, line: 88, baseType: !1331)
!1331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1332, size: 32)
!1332 = !DISubroutineType(types: !1333)
!1333 = !{!979, !1205, !1076}
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1307, file: !980, line: 106, baseType: !1335, size: 32, offset: 160)
!1335 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !980, line: 92, baseType: !1336)
!1336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1337, size: 32)
!1337 = !DISubroutineType(types: !1338)
!1338 = !{!107, !1205, !1076, !1102}
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1307, file: !980, line: 107, baseType: !1340, size: 32, offset: 192)
!1340 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !980, line: 96, baseType: !1341)
!1341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1342, size: 32)
!1342 = !DISubroutineType(types: !1343)
!1343 = !{!107, !1205, !1076, !106}
!1344 = !{!1345, !1351, !1353, !1363, !1365, !1367, !1369, !1371, !1373, !1375, !1380, !1382, !1384, !1386, !1388, !1390, !1392, !1394, !1396, !1398, !1400, !1402, !1404, !1406, !1408, !1422, !1424, !1426, !1428, !1430, !1432, !1434, !1436, !1438, !1440, !1442, !1444, !1446, !1448, !1450, !1174, !1452, !1454, !1467, !1469, !1471, !1473, !1475, !1477}
!1345 = !DIGlobalVariableExpression(var: !1346, expr: !DIExpression())
!1346 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_90", scope: !1176, file: !1347, line: 762, type: !1348, isLocal: false, isDefinition: true, align: 16)
!1347 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1348 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 80, elements: !1349)
!1349 = !{!1350}
!1350 = !DISubrange(count: 5)
!1351 = !DIGlobalVariableExpression(var: !1352, expr: !DIExpression())
!1352 = distinct !DIGlobalVariable(name: "__device_dts_ord_90", scope: !1176, file: !1347, line: 762, type: !1206, isLocal: false, isDefinition: true, align: 32)
!1353 = !DIGlobalVariableExpression(var: !1354, expr: !DIExpression())
!1354 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_90", scope: !1176, file: !1347, line: 762, type: !1355, isLocal: true, isDefinition: true, align: 32)
!1355 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1356)
!1356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !1357)
!1357 = !{!1358, !1362}
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1356, file: !238, line: 60, baseType: !1359, size: 32)
!1359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1360, size: 32)
!1360 = !DISubroutineType(types: !1361)
!1361 = !{!107, !1205}
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1356, file: !238, line: 65, baseType: !1205, size: 32, offset: 32)
!1363 = !DIGlobalVariableExpression(var: !1364, expr: !DIExpression())
!1364 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_91", scope: !1176, file: !1347, line: 766, type: !1348, isLocal: false, isDefinition: true, align: 16)
!1365 = !DIGlobalVariableExpression(var: !1366, expr: !DIExpression())
!1366 = distinct !DIGlobalVariable(name: "__device_dts_ord_91", scope: !1176, file: !1347, line: 766, type: !1206, isLocal: false, isDefinition: true, align: 32)
!1367 = !DIGlobalVariableExpression(var: !1368, expr: !DIExpression())
!1368 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_91", scope: !1176, file: !1347, line: 766, type: !1355, isLocal: true, isDefinition: true, align: 32)
!1369 = !DIGlobalVariableExpression(var: !1370, expr: !DIExpression())
!1370 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_92", scope: !1176, file: !1347, line: 770, type: !1348, isLocal: false, isDefinition: true, align: 16)
!1371 = !DIGlobalVariableExpression(var: !1372, expr: !DIExpression())
!1372 = distinct !DIGlobalVariable(name: "__device_dts_ord_92", scope: !1176, file: !1347, line: 770, type: !1206, isLocal: false, isDefinition: true, align: 32)
!1373 = !DIGlobalVariableExpression(var: !1374, expr: !DIExpression())
!1374 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_92", scope: !1176, file: !1347, line: 770, type: !1355, isLocal: true, isDefinition: true, align: 32)
!1375 = !DIGlobalVariableExpression(var: !1376, expr: !DIExpression())
!1376 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !1176, file: !1347, line: 774, type: !1377, isLocal: false, isDefinition: true, align: 16)
!1377 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 144, elements: !1378)
!1378 = !{!1379}
!1379 = !DISubrange(count: 9)
!1380 = !DIGlobalVariableExpression(var: !1381, expr: !DIExpression())
!1381 = distinct !DIGlobalVariable(name: "__device_dts_ord_19", scope: !1176, file: !1347, line: 774, type: !1206, isLocal: false, isDefinition: true, align: 32)
!1382 = !DIGlobalVariableExpression(var: !1383, expr: !DIExpression())
!1383 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_19", scope: !1176, file: !1347, line: 774, type: !1355, isLocal: true, isDefinition: true, align: 32)
!1384 = !DIGlobalVariableExpression(var: !1385, expr: !DIExpression())
!1385 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_93", scope: !1176, file: !1347, line: 778, type: !1348, isLocal: false, isDefinition: true, align: 16)
!1386 = !DIGlobalVariableExpression(var: !1387, expr: !DIExpression())
!1387 = distinct !DIGlobalVariable(name: "__device_dts_ord_93", scope: !1176, file: !1347, line: 778, type: !1206, isLocal: false, isDefinition: true, align: 32)
!1388 = !DIGlobalVariableExpression(var: !1389, expr: !DIExpression())
!1389 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_93", scope: !1176, file: !1347, line: 778, type: !1355, isLocal: true, isDefinition: true, align: 32)
!1390 = !DIGlobalVariableExpression(var: !1391, expr: !DIExpression())
!1391 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_94", scope: !1176, file: !1347, line: 782, type: !1348, isLocal: false, isDefinition: true, align: 16)
!1392 = !DIGlobalVariableExpression(var: !1393, expr: !DIExpression())
!1393 = distinct !DIGlobalVariable(name: "__device_dts_ord_94", scope: !1176, file: !1347, line: 782, type: !1206, isLocal: false, isDefinition: true, align: 32)
!1394 = !DIGlobalVariableExpression(var: !1395, expr: !DIExpression())
!1395 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_94", scope: !1176, file: !1347, line: 782, type: !1355, isLocal: true, isDefinition: true, align: 32)
!1396 = !DIGlobalVariableExpression(var: !1397, expr: !DIExpression())
!1397 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_95", scope: !1176, file: !1347, line: 786, type: !1348, isLocal: false, isDefinition: true, align: 16)
!1398 = !DIGlobalVariableExpression(var: !1399, expr: !DIExpression())
!1399 = distinct !DIGlobalVariable(name: "__device_dts_ord_95", scope: !1176, file: !1347, line: 786, type: !1206, isLocal: false, isDefinition: true, align: 32)
!1400 = !DIGlobalVariableExpression(var: !1401, expr: !DIExpression())
!1401 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_95", scope: !1176, file: !1347, line: 786, type: !1355, isLocal: true, isDefinition: true, align: 32)
!1402 = !DIGlobalVariableExpression(var: !1403, expr: !DIExpression())
!1403 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_96", scope: !1176, file: !1347, line: 790, type: !1348, isLocal: false, isDefinition: true, align: 16)
!1404 = !DIGlobalVariableExpression(var: !1405, expr: !DIExpression())
!1405 = distinct !DIGlobalVariable(name: "__device_dts_ord_96", scope: !1176, file: !1347, line: 790, type: !1206, isLocal: false, isDefinition: true, align: 32)
!1406 = !DIGlobalVariableExpression(var: !1407, expr: !DIExpression())
!1407 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_96", scope: !1176, file: !1347, line: 790, type: !1355, isLocal: true, isDefinition: true, align: 32)
!1408 = !DIGlobalVariableExpression(var: !1409, expr: !DIExpression())
!1409 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1176, file: !1347, line: 762, type: !1410, isLocal: true, isDefinition: true)
!1410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1411, line: 237, size: 128, elements: !1412)
!1411 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1412 = !{!1413, !1414, !1415}
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1410, file: !1411, line: 239, baseType: !1274, size: 32)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1410, file: !1411, line: 241, baseType: !1205, size: 32, offset: 32)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1410, file: !1411, line: 243, baseType: !1416, size: 64, offset: 64)
!1416 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1252, line: 40, baseType: !1417)
!1417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1252, line: 35, size: 64, elements: !1418)
!1418 = !{!1419, !1421}
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1417, file: !1252, line: 36, baseType: !1420, size: 32)
!1420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1251, size: 32)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1417, file: !1252, line: 37, baseType: !1420, size: 32, offset: 32)
!1422 = !DIGlobalVariableExpression(var: !1423, expr: !DIExpression())
!1423 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_90", scope: !1176, file: !1347, line: 762, type: !1214, isLocal: true, isDefinition: true, align: 8)
!1424 = !DIGlobalVariableExpression(var: !1425, expr: !DIExpression())
!1425 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1176, file: !1347, line: 766, type: !1410, isLocal: true, isDefinition: true)
!1426 = !DIGlobalVariableExpression(var: !1427, expr: !DIExpression())
!1427 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_91", scope: !1176, file: !1347, line: 766, type: !1214, isLocal: true, isDefinition: true, align: 8)
!1428 = !DIGlobalVariableExpression(var: !1429, expr: !DIExpression())
!1429 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1176, file: !1347, line: 770, type: !1410, isLocal: true, isDefinition: true)
!1430 = !DIGlobalVariableExpression(var: !1431, expr: !DIExpression())
!1431 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_92", scope: !1176, file: !1347, line: 770, type: !1214, isLocal: true, isDefinition: true, align: 8)
!1432 = !DIGlobalVariableExpression(var: !1433, expr: !DIExpression())
!1433 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1176, file: !1347, line: 774, type: !1410, isLocal: true, isDefinition: true)
!1434 = !DIGlobalVariableExpression(var: !1435, expr: !DIExpression())
!1435 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_19", scope: !1176, file: !1347, line: 774, type: !1214, isLocal: true, isDefinition: true, align: 8)
!1436 = !DIGlobalVariableExpression(var: !1437, expr: !DIExpression())
!1437 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1176, file: !1347, line: 778, type: !1410, isLocal: true, isDefinition: true)
!1438 = !DIGlobalVariableExpression(var: !1439, expr: !DIExpression())
!1439 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_93", scope: !1176, file: !1347, line: 778, type: !1214, isLocal: true, isDefinition: true, align: 8)
!1440 = !DIGlobalVariableExpression(var: !1441, expr: !DIExpression())
!1441 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1176, file: !1347, line: 782, type: !1410, isLocal: true, isDefinition: true)
!1442 = !DIGlobalVariableExpression(var: !1443, expr: !DIExpression())
!1443 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_94", scope: !1176, file: !1347, line: 782, type: !1214, isLocal: true, isDefinition: true, align: 8)
!1444 = !DIGlobalVariableExpression(var: !1445, expr: !DIExpression())
!1445 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1176, file: !1347, line: 786, type: !1410, isLocal: true, isDefinition: true)
!1446 = !DIGlobalVariableExpression(var: !1447, expr: !DIExpression())
!1447 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_95", scope: !1176, file: !1347, line: 786, type: !1214, isLocal: true, isDefinition: true, align: 8)
!1448 = !DIGlobalVariableExpression(var: !1449, expr: !DIExpression())
!1449 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1176, file: !1347, line: 790, type: !1410, isLocal: true, isDefinition: true)
!1450 = !DIGlobalVariableExpression(var: !1451, expr: !DIExpression())
!1451 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_96", scope: !1176, file: !1347, line: 790, type: !1214, isLocal: true, isDefinition: true, align: 8)
!1452 = !DIGlobalVariableExpression(var: !1453, expr: !DIExpression())
!1453 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1176, file: !1347, line: 656, type: !1198, isLocal: true, isDefinition: true)
!1454 = !DIGlobalVariableExpression(var: !1455, expr: !DIExpression())
!1455 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1176, file: !1347, line: 766, type: !1456, isLocal: true, isDefinition: true)
!1456 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1457)
!1457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1411, line: 224, size: 160, elements: !1458)
!1458 = !{!1459, !1460, !1461, !1462}
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1457, file: !1411, line: 226, baseType: !1269, size: 32)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1457, file: !1411, line: 228, baseType: !1032, size: 32, offset: 32)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1457, file: !1411, line: 230, baseType: !107, size: 32, offset: 64)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1457, file: !1411, line: 231, baseType: !1463, size: 64, offset: 96)
!1463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1028, line: 343, size: 64, elements: !1464)
!1464 = !{!1465, !1466}
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1463, file: !1028, line: 344, baseType: !152, size: 32)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1463, file: !1028, line: 345, baseType: !152, size: 32, offset: 32)
!1467 = !DIGlobalVariableExpression(var: !1468, expr: !DIExpression())
!1468 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1176, file: !1347, line: 770, type: !1456, isLocal: true, isDefinition: true)
!1469 = !DIGlobalVariableExpression(var: !1470, expr: !DIExpression())
!1470 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1176, file: !1347, line: 774, type: !1456, isLocal: true, isDefinition: true)
!1471 = !DIGlobalVariableExpression(var: !1472, expr: !DIExpression())
!1472 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1176, file: !1347, line: 778, type: !1456, isLocal: true, isDefinition: true)
!1473 = !DIGlobalVariableExpression(var: !1474, expr: !DIExpression())
!1474 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1176, file: !1347, line: 782, type: !1456, isLocal: true, isDefinition: true)
!1475 = !DIGlobalVariableExpression(var: !1476, expr: !DIExpression())
!1476 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1176, file: !1347, line: 786, type: !1456, isLocal: true, isDefinition: true)
!1477 = !DIGlobalVariableExpression(var: !1478, expr: !DIExpression())
!1478 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1176, file: !1347, line: 790, type: !1456, isLocal: true, isDefinition: true)
!1479 = !DIGlobalVariableExpression(var: !1480, expr: !DIExpression())
!1480 = distinct !DIGlobalVariable(name: "log_const_uart_stm32", scope: !1481, file: !1620, line: 44, type: !1758, isLocal: false, isDefinition: true)
!1481 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1482, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1483, retainedTypes: !1516, globals: !1617, splitDebugInlining: false, nameTableKind: None)
!1482 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pytest")
!1483 = !{!30, !1484, !1491, !1498, !1505, !1511, !979}
!1484 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !1116, line: 47, baseType: !32, size: 32, elements: !1485)
!1485 = !{!1486, !1487, !1488, !1489, !1490}
!1486 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1487 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1488 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1489 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1490 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1491 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !1116, line: 75, baseType: !32, size: 32, elements: !1492)
!1492 = !{!1493, !1494, !1495, !1496, !1497}
!1493 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1494 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1495 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1496 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1497 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1498 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !1116, line: 92, baseType: !32, size: 32, elements: !1499)
!1499 = !{!1500, !1501, !1502, !1503, !1504}
!1500 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1501 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1502 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1503 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1504 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1505 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !1116, line: 84, baseType: !32, size: 32, elements: !1506)
!1506 = !{!1507, !1508, !1509, !1510}
!1507 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1508 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1509 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1510 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1511 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !1116, line: 107, baseType: !32, size: 32, elements: !1512)
!1512 = !{!1513, !1514, !1515}
!1513 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1514 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1515 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1516 = !{!106, !107, !1517, !196, !195, !1566, !152, !1076, !1577, !197, !566, !1616}
!1517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1518, size: 32)
!1518 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1519)
!1519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1116, line: 336, size: 160, elements: !1520)
!1520 = !{!1521, !1540, !1544, !1548, !1561}
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1519, file: !1116, line: 365, baseType: !1522, size: 32)
!1522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1523, size: 32)
!1523 = !DISubroutineType(types: !1524)
!1524 = !{!107, !1525, !1137}
!1525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1526, size: 32)
!1526 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1527)
!1527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !1528)
!1528 = !{!1529, !1530, !1531, !1532, !1538, !1539}
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1527, file: !247, line: 380, baseType: !118, size: 32)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1527, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1527, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1527, file: !247, line: 386, baseType: !1533, size: 32, offset: 96)
!1533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1534, size: 32)
!1534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !1535)
!1535 = !{!1536, !1537}
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1534, file: !247, line: 359, baseType: !195, size: 8)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1534, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1527, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1527, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1519, file: !1116, line: 366, baseType: !1541, size: 32, offset: 32)
!1541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1542, size: 32)
!1542 = !DISubroutineType(types: !1543)
!1543 = !{null, !1525, !196}
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1519, file: !1116, line: 374, baseType: !1545, size: 32, offset: 64)
!1545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1546, size: 32)
!1546 = !DISubroutineType(types: !1547)
!1547 = !{!107, !1525}
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1519, file: !1116, line: 377, baseType: !1549, size: 32, offset: 96)
!1549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1550, size: 32)
!1550 = !DISubroutineType(types: !1551)
!1551 = !{!107, !1525, !1552}
!1552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1553, size: 32)
!1553 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1554)
!1554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1116, line: 122, size: 64, elements: !1555)
!1555 = !{!1556, !1557, !1558, !1559, !1560}
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1554, file: !1116, line: 123, baseType: !152, size: 32)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1554, file: !1116, line: 124, baseType: !195, size: 8, offset: 32)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1554, file: !1116, line: 125, baseType: !195, size: 8, offset: 40)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1554, file: !1116, line: 126, baseType: !195, size: 8, offset: 48)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1554, file: !1116, line: 127, baseType: !195, size: 8, offset: 56)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1519, file: !1116, line: 379, baseType: !1562, size: 32, offset: 128)
!1562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1563, size: 32)
!1563 = !DISubroutineType(types: !1564)
!1564 = !{!107, !1525, !1565}
!1565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1554, size: 32)
!1566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1567, size: 32)
!1567 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !223, line: 783, baseType: !1568)
!1568 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 774, size: 224, elements: !1569)
!1569 = !{!1570, !1571, !1572, !1573, !1574, !1575, !1576}
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1568, file: !223, line: 776, baseType: !227, size: 32)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1568, file: !223, line: 777, baseType: !227, size: 32, offset: 32)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1568, file: !223, line: 778, baseType: !227, size: 32, offset: 64)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1568, file: !223, line: 779, baseType: !227, size: 32, offset: 96)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1568, file: !223, line: 780, baseType: !227, size: 32, offset: 128)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1568, file: !223, line: 781, baseType: !227, size: 32, offset: 160)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1568, file: !223, line: 782, baseType: !227, size: 32, offset: 192)
!1577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1578, size: 32)
!1578 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1579)
!1579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !980, line: 100, size: 224, elements: !1580)
!1580 = !{!1581, !1586, !1587, !1596, !1601, !1606, !1611}
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1579, file: !980, line: 101, baseType: !1582, size: 32)
!1582 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !980, line: 76, baseType: !1583)
!1583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1584, size: 32)
!1584 = !DISubroutineType(types: !1585)
!1585 = !{!107, !1525, !1076}
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1579, file: !980, line: 102, baseType: !1582, size: 32, offset: 32)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1579, file: !980, line: 103, baseType: !1588, size: 32, offset: 64)
!1588 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !980, line: 83, baseType: !1589)
!1589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1590, size: 32)
!1590 = !DISubroutineType(types: !1591)
!1591 = !{!107, !1525, !1076, !1592, !106}
!1592 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !980, line: 72, baseType: !1593)
!1593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1594, size: 32)
!1594 = !DISubroutineType(types: !1595)
!1595 = !{null, !1525, !1076, !106}
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1579, file: !980, line: 104, baseType: !1597, size: 32, offset: 96)
!1597 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !980, line: 79, baseType: !1598)
!1598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1599, size: 32)
!1599 = !DISubroutineType(types: !1600)
!1600 = !{!107, !1525, !1076, !1032}
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1579, file: !980, line: 105, baseType: !1602, size: 32, offset: 128)
!1602 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !980, line: 88, baseType: !1603)
!1603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1604, size: 32)
!1604 = !DISubroutineType(types: !1605)
!1605 = !{!979, !1525, !1076}
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1579, file: !980, line: 106, baseType: !1607, size: 32, offset: 160)
!1607 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !980, line: 92, baseType: !1608)
!1608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1609, size: 32)
!1609 = !DISubroutineType(types: !1610)
!1610 = !{!107, !1525, !1076, !1102}
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1579, file: !980, line: 107, baseType: !1612, size: 32, offset: 192)
!1612 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !980, line: 96, baseType: !1613)
!1613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1614, size: 32)
!1614 = !DISubroutineType(types: !1615)
!1615 = !{!107, !1525, !1076, !106}
!1616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !227, size: 32)
!1617 = !{!1479, !1618, !1624, !1626, !1633, !1635, !1637, !1639, !1641, !1643, !1645, !1647, !1649, !1651, !1653, !1655, !1657, !1659, !1703, !1706, !1708, !1711, !1714, !1716, !1722, !1724, !1726, !1728, !1730, !1732, !1734, !1736, !1738, !1740, !1742, !1744, !1746, !1748, !1750, !1752, !1754, !1756}
!1618 = !DIGlobalVariableExpression(var: !1619, expr: !DIExpression())
!1619 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_52", scope: !1481, file: !1620, line: 1914, type: !1621, isLocal: false, isDefinition: true, align: 16)
!1620 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1621 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 128, elements: !1622)
!1622 = !{!1623}
!1623 = !DISubrange(count: 8)
!1624 = !DIGlobalVariableExpression(var: !1625, expr: !DIExpression())
!1625 = distinct !DIGlobalVariable(name: "__device_dts_ord_52", scope: !1481, file: !1620, line: 1914, type: !1526, isLocal: false, isDefinition: true, align: 32)
!1626 = !DIGlobalVariableExpression(var: !1627, expr: !DIExpression())
!1627 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_52", scope: !1481, file: !1620, line: 1914, type: !1628, isLocal: true, isDefinition: true, align: 32)
!1628 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1629)
!1629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !1630)
!1630 = !{!1631, !1632}
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1629, file: !238, line: 60, baseType: !1545, size: 32)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1629, file: !238, line: 65, baseType: !1525, size: 32, offset: 32)
!1633 = !DIGlobalVariableExpression(var: !1634, expr: !DIExpression())
!1634 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !1481, file: !1620, line: 1914, type: !1621, isLocal: false, isDefinition: true, align: 16)
!1635 = !DIGlobalVariableExpression(var: !1636, expr: !DIExpression())
!1636 = distinct !DIGlobalVariable(name: "__device_dts_ord_42", scope: !1481, file: !1620, line: 1914, type: !1526, isLocal: false, isDefinition: true, align: 32)
!1637 = !DIGlobalVariableExpression(var: !1638, expr: !DIExpression())
!1638 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_42", scope: !1481, file: !1620, line: 1914, type: !1628, isLocal: true, isDefinition: true, align: 32)
!1639 = !DIGlobalVariableExpression(var: !1640, expr: !DIExpression())
!1640 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !1481, file: !1620, line: 1914, type: !1621, isLocal: false, isDefinition: true, align: 16)
!1641 = !DIGlobalVariableExpression(var: !1642, expr: !DIExpression())
!1642 = distinct !DIGlobalVariable(name: "__device_dts_ord_45", scope: !1481, file: !1620, line: 1914, type: !1526, isLocal: false, isDefinition: true, align: 32)
!1643 = !DIGlobalVariableExpression(var: !1644, expr: !DIExpression())
!1644 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_45", scope: !1481, file: !1620, line: 1914, type: !1628, isLocal: true, isDefinition: true, align: 32)
!1645 = !DIGlobalVariableExpression(var: !1646, expr: !DIExpression())
!1646 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_48", scope: !1481, file: !1620, line: 1914, type: !1621, isLocal: false, isDefinition: true, align: 16)
!1647 = !DIGlobalVariableExpression(var: !1648, expr: !DIExpression())
!1648 = distinct !DIGlobalVariable(name: "__device_dts_ord_48", scope: !1481, file: !1620, line: 1914, type: !1526, isLocal: false, isDefinition: true, align: 32)
!1649 = !DIGlobalVariableExpression(var: !1650, expr: !DIExpression())
!1650 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_48", scope: !1481, file: !1620, line: 1914, type: !1628, isLocal: true, isDefinition: true, align: 32)
!1651 = !DIGlobalVariableExpression(var: !1652, expr: !DIExpression())
!1652 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_52", scope: !1481, file: !1620, line: 1914, type: !1534, isLocal: true, isDefinition: true, align: 8)
!1653 = !DIGlobalVariableExpression(var: !1654, expr: !DIExpression())
!1654 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_42", scope: !1481, file: !1620, line: 1914, type: !1534, isLocal: true, isDefinition: true, align: 8)
!1655 = !DIGlobalVariableExpression(var: !1656, expr: !DIExpression())
!1656 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_45", scope: !1481, file: !1620, line: 1914, type: !1534, isLocal: true, isDefinition: true, align: 8)
!1657 = !DIGlobalVariableExpression(var: !1658, expr: !DIExpression())
!1658 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_48", scope: !1481, file: !1620, line: 1914, type: !1534, isLocal: true, isDefinition: true, align: 8)
!1659 = !DIGlobalVariableExpression(var: !1660, expr: !DIExpression())
!1660 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1481, file: !1620, line: 1914, type: !1661, isLocal: true, isDefinition: true)
!1661 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1662)
!1662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1663, line: 22, size: 224, elements: !1664)
!1663 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1664 = !{!1665, !1666, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680}
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1662, file: !1663, line: 24, baseType: !1566, size: 32)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1662, file: !1663, line: 26, baseType: !1667, size: 32, offset: 32)
!1667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1668, size: 32)
!1668 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1669)
!1669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1028, line: 343, size: 64, elements: !1670)
!1670 = !{!1671, !1672}
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1669, file: !1028, line: 344, baseType: !152, size: 32)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1669, file: !1028, line: 345, baseType: !152, size: 32, offset: 32)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1662, file: !1663, line: 28, baseType: !185, size: 32, offset: 64)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1662, file: !1663, line: 30, baseType: !145, size: 8, offset: 96)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1662, file: !1663, line: 32, baseType: !107, size: 32, offset: 128)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1662, file: !1663, line: 34, baseType: !145, size: 8, offset: 160)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1662, file: !1663, line: 36, baseType: !145, size: 8, offset: 168)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1662, file: !1663, line: 38, baseType: !145, size: 8, offset: 176)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1662, file: !1663, line: 40, baseType: !145, size: 8, offset: 184)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1662, file: !1663, line: 41, baseType: !1681, size: 32, offset: 192)
!1681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1682, size: 32)
!1682 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1683)
!1683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1684, line: 60, size: 64, elements: !1685)
!1684 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1685 = !{!1686, !1702}
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1683, file: !1684, line: 69, baseType: !1687, size: 32)
!1687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1688, size: 32)
!1688 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1689)
!1689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1684, line: 50, size: 64, elements: !1690)
!1690 = !{!1691, !1700, !1701}
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1689, file: !1684, line: 52, baseType: !1692, size: 32)
!1692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1693, size: 32)
!1693 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1694)
!1694 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1695, line: 37, baseType: !1696)
!1695 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1695, line: 32, size: 64, elements: !1697)
!1697 = !{!1698, !1699}
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1696, file: !1695, line: 34, baseType: !152, size: 32)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1696, file: !1695, line: 36, baseType: !152, size: 32, offset: 32)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1689, file: !1684, line: 54, baseType: !195, size: 8, offset: 32)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1689, file: !1684, line: 56, baseType: !195, size: 8, offset: 40)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1683, file: !1684, line: 71, baseType: !195, size: 8, offset: 32)
!1703 = !DIGlobalVariableExpression(var: !1704, expr: !DIExpression())
!1704 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1481, file: !1620, line: 1914, type: !1705, isLocal: true, isDefinition: true)
!1705 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1668, size: 64, elements: !445)
!1706 = !DIGlobalVariableExpression(var: !1707, expr: !DIExpression())
!1707 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_52", scope: !1481, file: !1620, line: 1914, type: !1682, isLocal: true, isDefinition: true)
!1708 = !DIGlobalVariableExpression(var: !1709, expr: !DIExpression())
!1709 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_52", scope: !1481, file: !1620, line: 1914, type: !1710, isLocal: true, isDefinition: true)
!1710 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1688, size: 64, elements: !445)
!1711 = !DIGlobalVariableExpression(var: !1712, expr: !DIExpression())
!1712 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_52", scope: !1481, file: !1620, line: 1914, type: !1713, isLocal: true, isDefinition: true)
!1713 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1693, size: 128, elements: !340)
!1714 = !DIGlobalVariableExpression(var: !1715, expr: !DIExpression())
!1715 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1481, file: !1620, line: 1539, type: !1518, isLocal: true, isDefinition: true)
!1716 = !DIGlobalVariableExpression(var: !1717, expr: !DIExpression())
!1717 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1481, file: !1620, line: 1914, type: !1718, isLocal: true, isDefinition: true)
!1718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1663, line: 74, size: 64, elements: !1719)
!1719 = !{!1720, !1721}
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1718, file: !1663, line: 76, baseType: !152, size: 32)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1718, file: !1663, line: 78, baseType: !1525, size: 32, offset: 32)
!1722 = !DIGlobalVariableExpression(var: !1723, expr: !DIExpression())
!1723 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_1", scope: !1481, file: !1620, line: 1914, type: !1661, isLocal: true, isDefinition: true)
!1724 = !DIGlobalVariableExpression(var: !1725, expr: !DIExpression())
!1725 = distinct !DIGlobalVariable(name: "pclken_1", scope: !1481, file: !1620, line: 1914, type: !1705, isLocal: true, isDefinition: true)
!1726 = !DIGlobalVariableExpression(var: !1727, expr: !DIExpression())
!1727 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_42", scope: !1481, file: !1620, line: 1914, type: !1682, isLocal: true, isDefinition: true)
!1728 = !DIGlobalVariableExpression(var: !1729, expr: !DIExpression())
!1729 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_42", scope: !1481, file: !1620, line: 1914, type: !1710, isLocal: true, isDefinition: true)
!1730 = !DIGlobalVariableExpression(var: !1731, expr: !DIExpression())
!1731 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_42", scope: !1481, file: !1620, line: 1914, type: !1713, isLocal: true, isDefinition: true)
!1732 = !DIGlobalVariableExpression(var: !1733, expr: !DIExpression())
!1733 = distinct !DIGlobalVariable(name: "uart_stm32_data_1", scope: !1481, file: !1620, line: 1914, type: !1718, isLocal: true, isDefinition: true)
!1734 = !DIGlobalVariableExpression(var: !1735, expr: !DIExpression())
!1735 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_2", scope: !1481, file: !1620, line: 1914, type: !1661, isLocal: true, isDefinition: true)
!1736 = !DIGlobalVariableExpression(var: !1737, expr: !DIExpression())
!1737 = distinct !DIGlobalVariable(name: "pclken_2", scope: !1481, file: !1620, line: 1914, type: !1705, isLocal: true, isDefinition: true)
!1738 = !DIGlobalVariableExpression(var: !1739, expr: !DIExpression())
!1739 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_45", scope: !1481, file: !1620, line: 1914, type: !1682, isLocal: true, isDefinition: true)
!1740 = !DIGlobalVariableExpression(var: !1741, expr: !DIExpression())
!1741 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_45", scope: !1481, file: !1620, line: 1914, type: !1710, isLocal: true, isDefinition: true)
!1742 = !DIGlobalVariableExpression(var: !1743, expr: !DIExpression())
!1743 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_45", scope: !1481, file: !1620, line: 1914, type: !1713, isLocal: true, isDefinition: true)
!1744 = !DIGlobalVariableExpression(var: !1745, expr: !DIExpression())
!1745 = distinct !DIGlobalVariable(name: "uart_stm32_data_2", scope: !1481, file: !1620, line: 1914, type: !1718, isLocal: true, isDefinition: true)
!1746 = !DIGlobalVariableExpression(var: !1747, expr: !DIExpression())
!1747 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_3", scope: !1481, file: !1620, line: 1914, type: !1661, isLocal: true, isDefinition: true)
!1748 = !DIGlobalVariableExpression(var: !1749, expr: !DIExpression())
!1749 = distinct !DIGlobalVariable(name: "pclken_3", scope: !1481, file: !1620, line: 1914, type: !1705, isLocal: true, isDefinition: true)
!1750 = !DIGlobalVariableExpression(var: !1751, expr: !DIExpression())
!1751 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_48", scope: !1481, file: !1620, line: 1914, type: !1682, isLocal: true, isDefinition: true)
!1752 = !DIGlobalVariableExpression(var: !1753, expr: !DIExpression())
!1753 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_48", scope: !1481, file: !1620, line: 1914, type: !1710, isLocal: true, isDefinition: true)
!1754 = !DIGlobalVariableExpression(var: !1755, expr: !DIExpression())
!1755 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_48", scope: !1481, file: !1620, line: 1914, type: !1713, isLocal: true, isDefinition: true)
!1756 = !DIGlobalVariableExpression(var: !1757, expr: !DIExpression())
!1757 = distinct !DIGlobalVariable(name: "uart_stm32_data_3", scope: !1481, file: !1620, line: 1914, type: !1718, isLocal: true, isDefinition: true)
!1758 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1759)
!1759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !203, line: 16, size: 64, elements: !1760)
!1760 = !{!1761, !1762}
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1759, file: !203, line: 17, baseType: !118, size: 32)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1759, file: !203, line: 18, baseType: !195, size: 8, offset: 32)
!1763 = !DIGlobalVariableExpression(var: !1764, expr: !DIExpression())
!1764 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1765, file: !1843, line: 65, type: !227, isLocal: true, isDefinition: true)
!1765 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1766, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1767, retainedTypes: !1768, globals: !1840, splitDebugInlining: false, nameTableKind: None)
!1766 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pytest")
!1767 = !{!734}
!1768 = !{!564, !1769, !904, !195, !152, !1777, !1808}
!1769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1770, size: 32)
!1770 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !463, line: 770, baseType: !1771)
!1771 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 764, size: 128, elements: !1772)
!1772 = !{!1773, !1774, !1775, !1776}
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1771, file: !463, line: 766, baseType: !227, size: 32)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1771, file: !463, line: 767, baseType: !227, size: 32, offset: 32)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1771, file: !463, line: 768, baseType: !227, size: 32, offset: 64)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1771, file: !463, line: 769, baseType: !467, size: 32, offset: 96)
!1777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1778, size: 32)
!1778 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !463, line: 426, baseType: !1779)
!1779 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 411, size: 28704, elements: !1780)
!1780 = !{!1781, !1783, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1798, !1803, !1807}
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1779, file: !463, line: 413, baseType: !1782, size: 256)
!1782 = !DICompositeType(tag: DW_TAG_array_type, baseType: !227, size: 256, elements: !1622)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1779, file: !463, line: 414, baseType: !1784, size: 768, offset: 256)
!1784 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 768, elements: !1785)
!1785 = !{!1786}
!1786 = !DISubrange(count: 24)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1779, file: !463, line: 415, baseType: !1782, size: 256, offset: 1024)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1779, file: !463, line: 416, baseType: !1784, size: 768, offset: 1280)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1779, file: !463, line: 417, baseType: !1782, size: 256, offset: 2048)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1779, file: !463, line: 418, baseType: !1784, size: 768, offset: 2304)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1779, file: !463, line: 419, baseType: !1782, size: 256, offset: 3072)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1779, file: !463, line: 420, baseType: !1784, size: 768, offset: 3328)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1779, file: !463, line: 421, baseType: !1782, size: 256, offset: 4096)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1779, file: !463, line: 422, baseType: !1795, size: 1792, offset: 4352)
!1795 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 1792, elements: !1796)
!1796 = !{!1797}
!1797 = !DISubrange(count: 56)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1779, file: !463, line: 423, baseType: !1799, size: 1920, offset: 6144)
!1799 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1800, size: 1920, elements: !1801)
!1800 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !195)
!1801 = !{!1802}
!1802 = !DISubrange(count: 240)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1779, file: !463, line: 424, baseType: !1804, size: 20608, offset: 8064)
!1804 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 20608, elements: !1805)
!1805 = !{!1806}
!1806 = !DISubrange(count: 644)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1779, file: !463, line: 425, baseType: !227, size: 32, offset: 28672)
!1808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1809, size: 32)
!1809 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !1810)
!1810 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !1811)
!1811 = !{!1812, !1813, !1814, !1815, !1816, !1817, !1818, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1831, !1832, !1833, !1835, !1837, !1839}
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1810, file: !463, line: 447, baseType: !467, size: 32)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1810, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1810, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1810, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1810, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1810, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1810, file: !463, line: 453, baseType: !1819, size: 96, offset: 192)
!1819 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1800, size: 96, elements: !1820)
!1820 = !{!1821}
!1821 = !DISubrange(count: 12)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1810, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1810, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1810, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1810, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1810, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1810, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1810, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1810, file: !463, line: 461, baseType: !1830, size: 64, offset: 512)
!1830 = !DICompositeType(tag: DW_TAG_array_type, baseType: !467, size: 64, elements: !340)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1810, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1810, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1810, file: !463, line: 464, baseType: !1834, size: 128, offset: 640)
!1834 = !DICompositeType(tag: DW_TAG_array_type, baseType: !467, size: 128, elements: !846)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1810, file: !463, line: 465, baseType: !1836, size: 160, offset: 768)
!1836 = !DICompositeType(tag: DW_TAG_array_type, baseType: !467, size: 160, elements: !1349)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1810, file: !463, line: 466, baseType: !1838, size: 160, offset: 928)
!1838 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 160, elements: !1349)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1810, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!1840 = !{!1841, !1867, !1872, !1874, !1876, !1763}
!1841 = !DIGlobalVariableExpression(var: !1842, expr: !DIExpression())
!1842 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1765, file: !1843, line: 285, type: !1844, isLocal: true, isDefinition: true, align: 32)
!1843 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1844 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1845)
!1845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !1846)
!1846 = !{!1847, !1866}
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1845, file: !238, line: 60, baseType: !1848, size: 32)
!1848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1849, size: 32)
!1849 = !DISubroutineType(types: !1850)
!1850 = !{!107, !1851}
!1851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1852, size: 32)
!1852 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1853)
!1853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !1854)
!1854 = !{!1855, !1856, !1857, !1858, !1864, !1865}
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1853, file: !247, line: 380, baseType: !118, size: 32)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1853, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1853, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1853, file: !247, line: 386, baseType: !1859, size: 32, offset: 96)
!1859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1860, size: 32)
!1860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !1861)
!1861 = !{!1862, !1863}
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1860, file: !247, line: 359, baseType: !195, size: 8)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1860, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1853, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1853, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1845, file: !238, line: 65, baseType: !1851, size: 32, offset: 32)
!1867 = !DIGlobalVariableExpression(var: !1868, expr: !DIExpression())
!1868 = distinct !DIGlobalVariable(name: "lock", scope: !1765, file: !1843, line: 34, type: !1869, isLocal: true, isDefinition: true)
!1869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !1870)
!1870 = !{!1871}
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !1869, file: !420, line: 52, baseType: !22, size: 32)
!1872 = !DIGlobalVariableExpression(var: !1873, expr: !DIExpression())
!1873 = distinct !DIGlobalVariable(name: "last_load", scope: !1765, file: !1843, line: 36, type: !152, isLocal: true, isDefinition: true)
!1874 = !DIGlobalVariableExpression(var: !1875, expr: !DIExpression())
!1875 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1765, file: !1843, line: 48, type: !152, isLocal: true, isDefinition: true)
!1876 = !DIGlobalVariableExpression(var: !1877, expr: !DIExpression())
!1877 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1765, file: !1843, line: 54, type: !152, isLocal: true, isDefinition: true)
!1878 = !DIGlobalVariableExpression(var: !1879, expr: !DIExpression())
!1879 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1880, file: !1962, line: 22, type: !1964, isLocal: true, isDefinition: true)
!1880 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1881, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1882, retainedTypes: !1883, globals: !1959, splitDebugInlining: false, nameTableKind: None)
!1881 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pytest")
!1882 = !{!1179, !1185}
!1883 = !{!1884, !1948, !1953, !1232, !1185, !1179, !1958, !106}
!1884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1885, size: 32)
!1885 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1886)
!1886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1180, line: 523, size: 288, elements: !1887)
!1887 = !{!1888, !1907, !1911, !1915, !1919, !1920, !1921, !1925, !1944}
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1886, file: !1180, line: 524, baseType: !1889, size: 32)
!1889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1890, size: 32)
!1890 = !DISubroutineType(types: !1891)
!1891 = !{!107, !1892, !1220, !1221}
!1892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1893, size: 32)
!1893 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1894)
!1894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !1895)
!1895 = !{!1896, !1897, !1898, !1899, !1905, !1906}
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1894, file: !247, line: 380, baseType: !118, size: 32)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1894, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1894, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1894, file: !247, line: 386, baseType: !1900, size: 32, offset: 96)
!1900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1901, size: 32)
!1901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !1902)
!1902 = !{!1903, !1904}
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1901, file: !247, line: 359, baseType: !195, size: 8)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1901, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1894, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1894, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1886, file: !1180, line: 530, baseType: !1908, size: 32, offset: 32)
!1908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1909, size: 32)
!1909 = !DISubroutineType(types: !1910)
!1910 = !{!107, !1892, !1226}
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1886, file: !1180, line: 532, baseType: !1912, size: 32, offset: 64)
!1912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1913, size: 32)
!1913 = !DISubroutineType(types: !1914)
!1914 = !{!107, !1892, !1232, !1227}
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1886, file: !1180, line: 535, baseType: !1916, size: 32, offset: 96)
!1916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1917, size: 32)
!1917 = !DISubroutineType(types: !1918)
!1918 = !{!107, !1892, !1232}
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1886, file: !1180, line: 537, baseType: !1916, size: 32, offset: 128)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1886, file: !1180, line: 539, baseType: !1916, size: 32, offset: 160)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1886, file: !1180, line: 541, baseType: !1922, size: 32, offset: 192)
!1922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1923, size: 32)
!1923 = !DISubroutineType(types: !1924)
!1924 = !{!107, !1892, !1220, !1179, !1185}
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1886, file: !1180, line: 544, baseType: !1926, size: 32, offset: 224)
!1926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1927, size: 32)
!1927 = !DISubroutineType(types: !1928)
!1928 = !{!107, !1892, !1929, !145}
!1929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1930, size: 32)
!1930 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1180, line: 478, size: 96, elements: !1931)
!1931 = !{!1932, !1938, !1943}
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1930, file: !1180, line: 482, baseType: !1933, size: 32)
!1933 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1252, line: 33, baseType: !1934)
!1934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1252, line: 29, size: 32, elements: !1935)
!1935 = !{!1936}
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1934, file: !1252, line: 30, baseType: !1937, size: 32)
!1937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1934, size: 32)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1930, file: !1180, line: 485, baseType: !1939, size: 32, offset: 32)
!1939 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1180, line: 464, baseType: !1940)
!1940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1941, size: 32)
!1941 = !DISubroutineType(types: !1942)
!1942 = !{null, !1892, !1929, !1232}
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1930, file: !1180, line: 493, baseType: !1232, size: 32, offset: 64)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1886, file: !1180, line: 547, baseType: !1945, size: 32, offset: 256)
!1945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1946, size: 32)
!1946 = !DISubroutineType(types: !1947)
!1947 = !{!152, !1892}
!1948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1949, size: 32)
!1949 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1950)
!1950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1180, line: 428, size: 32, elements: !1951)
!1951 = !{!1952}
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1950, file: !1180, line: 434, baseType: !1232, size: 32)
!1953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1954, size: 32)
!1954 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1955)
!1955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1180, line: 441, size: 32, elements: !1956)
!1956 = !{!1957}
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1955, file: !1180, line: 447, baseType: !1232, size: 32)
!1958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1955, size: 32)
!1959 = !{!1960, !1878}
!1960 = !DIGlobalVariableExpression(var: !1961, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1961 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1880, file: !1962, line: 37, type: !1963, isLocal: true, isDefinition: true)
!1962 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1963 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !185)
!1964 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1965, size: 352, elements: !1966)
!1965 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1892)
!1966 = !{!1967}
!1967 = !DISubrange(count: 11)
!1968 = !DIGlobalVariableExpression(var: !1969, expr: !DIExpression())
!1969 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1970, file: !2014, line: 139, type: !2021, isLocal: false, isDefinition: true)
!1970 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1971, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1972, globals: !2011, splitDebugInlining: false, nameTableKind: None)
!1971 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pytest")
!1972 = !{!1973}
!1973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1974, size: 32)
!1974 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !223, line: 586, baseType: !1975)
!1975 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 550, size: 1216, elements: !1976)
!1976 = !{!1977, !1978, !1979, !1980, !1981, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1990, !1991, !1992, !1993, !1994, !1995, !1996, !1997, !1998, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010}
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1975, file: !223, line: 552, baseType: !227, size: 32)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1975, file: !223, line: 553, baseType: !227, size: 32, offset: 32)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1975, file: !223, line: 554, baseType: !227, size: 32, offset: 64)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1975, file: !223, line: 555, baseType: !227, size: 32, offset: 96)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1975, file: !223, line: 556, baseType: !227, size: 32, offset: 128)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1975, file: !223, line: 557, baseType: !227, size: 32, offset: 160)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !1975, file: !223, line: 558, baseType: !227, size: 32, offset: 192)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1975, file: !223, line: 559, baseType: !152, size: 32, offset: 224)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1975, file: !223, line: 560, baseType: !227, size: 32, offset: 256)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1975, file: !223, line: 561, baseType: !227, size: 32, offset: 288)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1975, file: !223, line: 562, baseType: !1002, size: 64, offset: 320)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1975, file: !223, line: 563, baseType: !227, size: 32, offset: 384)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1975, file: !223, line: 564, baseType: !227, size: 32, offset: 416)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !1975, file: !223, line: 565, baseType: !227, size: 32, offset: 448)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1975, file: !223, line: 566, baseType: !152, size: 32, offset: 480)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1975, file: !223, line: 567, baseType: !227, size: 32, offset: 512)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1975, file: !223, line: 568, baseType: !227, size: 32, offset: 544)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1975, file: !223, line: 569, baseType: !1002, size: 64, offset: 576)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1975, file: !223, line: 570, baseType: !227, size: 32, offset: 640)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1975, file: !223, line: 571, baseType: !227, size: 32, offset: 672)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !1975, file: !223, line: 572, baseType: !227, size: 32, offset: 704)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1975, file: !223, line: 573, baseType: !152, size: 32, offset: 736)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1975, file: !223, line: 574, baseType: !227, size: 32, offset: 768)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1975, file: !223, line: 575, baseType: !227, size: 32, offset: 800)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1975, file: !223, line: 576, baseType: !1002, size: 64, offset: 832)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1975, file: !223, line: 577, baseType: !227, size: 32, offset: 896)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1975, file: !223, line: 578, baseType: !227, size: 32, offset: 928)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1975, file: !223, line: 579, baseType: !1002, size: 64, offset: 960)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1975, file: !223, line: 580, baseType: !227, size: 32, offset: 1024)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1975, file: !223, line: 581, baseType: !227, size: 32, offset: 1056)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !1975, file: !223, line: 582, baseType: !227, size: 32, offset: 1088)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !1975, file: !223, line: 583, baseType: !227, size: 32, offset: 1120)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !1975, file: !223, line: 584, baseType: !227, size: 32, offset: 1152)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !1975, file: !223, line: 585, baseType: !227, size: 32, offset: 1184)
!2011 = !{!2012, !2015, !1968}
!2012 = !DIGlobalVariableExpression(var: !2013, expr: !DIExpression())
!2013 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1970, file: !2014, line: 137, type: !152, isLocal: false, isDefinition: true)
!2014 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2015 = !DIGlobalVariableExpression(var: !2016, expr: !DIExpression())
!2016 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1970, file: !2014, line: 138, type: !2017, isLocal: false, isDefinition: true)
!2017 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2018, size: 128, elements: !2019)
!2018 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !195)
!2019 = !{!2020}
!2020 = !DISubrange(count: 16)
!2021 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2018, size: 64, elements: !1622)
!2022 = !DIGlobalVariableExpression(var: !2023, expr: !DIExpression())
!2023 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !2024, file: !2027, line: 23, type: !2028, isLocal: false, isDefinition: true)
!2024 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2025, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, globals: !2026, splitDebugInlining: false, nameTableKind: None)
!2025 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pytest")
!2026 = !{!2022}
!2027 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2028 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !107)
!2029 = !DIGlobalVariableExpression(var: !2030, expr: !DIExpression())
!2030 = distinct !DIGlobalVariable(name: "log_const_os", scope: !2031, file: !2035, line: 37, type: !2290, isLocal: false, isDefinition: true)
!2031 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2032, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2033, retainedTypes: !2042, globals: !2115, splitDebugInlining: false, nameTableKind: None)
!2032 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pytest")
!2033 = !{!2034, !30, !734}
!2034 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !2035, line: 63, baseType: !32, size: 32, elements: !2036)
!2035 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2036 = !{!2037, !2038, !2039, !2040, !2041}
!2037 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!2038 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!2039 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!2040 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!2041 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!2042 = !{!185, !106, !107, !2043, !193, !152, !2073, !904, !195, !2098}
!2043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2044, size: 32)
!2044 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2045)
!2045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !2046, line: 51, size: 64, elements: !2047)
!2046 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2047 = !{!2048, !2068}
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !2045, file: !2046, line: 52, baseType: !2049, size: 32)
!2049 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !2046, line: 38, baseType: !2050)
!2050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2051, size: 32)
!2051 = !DISubroutineType(types: !2052)
!2052 = !{!107, !2053, !194, !197}
!2053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2054, size: 32)
!2054 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2055)
!2055 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !2056)
!2056 = !{!2057, !2058, !2059, !2060, !2066, !2067}
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2055, file: !247, line: 380, baseType: !118, size: 32)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2055, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2055, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2055, file: !247, line: 386, baseType: !2061, size: 32, offset: 96)
!2061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2062, size: 32)
!2062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !2063)
!2063 = !{!2064, !2065}
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2062, file: !247, line: 359, baseType: !195, size: 8)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2062, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2055, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2055, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !2045, file: !2046, line: 53, baseType: !2069, size: 32, offset: 32)
!2069 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !2046, line: 47, baseType: !2070)
!2070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2071, size: 32)
!2071 = !DISubroutineType(types: !2072)
!2072 = !{!107, !2053, !194, !197, !152}
!2073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2074, size: 32)
!2074 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !2075)
!2075 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !2076)
!2076 = !{!2077, !2078, !2079, !2080, !2081, !2082, !2083, !2084, !2085, !2086, !2087, !2088, !2089, !2090, !2091, !2092, !2093, !2094, !2095, !2096, !2097}
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2075, file: !463, line: 447, baseType: !467, size: 32)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2075, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2075, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2075, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2075, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2075, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2075, file: !463, line: 453, baseType: !1819, size: 96, offset: 192)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2075, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2075, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2075, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2075, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2075, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2075, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2075, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2075, file: !463, line: 461, baseType: !1830, size: 64, offset: 512)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2075, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2075, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2075, file: !463, line: 464, baseType: !1834, size: 128, offset: 640)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2075, file: !463, line: 465, baseType: !1836, size: 160, offset: 768)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2075, file: !463, line: 466, baseType: !1838, size: 160, offset: 928)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2075, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!2098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2099, size: 32)
!2099 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !463, line: 426, baseType: !2100)
!2100 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 411, size: 28704, elements: !2101)
!2101 = !{!2102, !2103, !2104, !2105, !2106, !2107, !2108, !2109, !2110, !2111, !2112, !2113, !2114}
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2100, file: !463, line: 413, baseType: !1782, size: 256)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2100, file: !463, line: 414, baseType: !1784, size: 768, offset: 256)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2100, file: !463, line: 415, baseType: !1782, size: 256, offset: 1024)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2100, file: !463, line: 416, baseType: !1784, size: 768, offset: 1280)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2100, file: !463, line: 417, baseType: !1782, size: 256, offset: 2048)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2100, file: !463, line: 418, baseType: !1784, size: 768, offset: 2304)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2100, file: !463, line: 419, baseType: !1782, size: 256, offset: 3072)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2100, file: !463, line: 420, baseType: !1784, size: 768, offset: 3328)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2100, file: !463, line: 421, baseType: !1782, size: 256, offset: 4096)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2100, file: !463, line: 422, baseType: !1795, size: 1792, offset: 4352)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2100, file: !463, line: 423, baseType: !1799, size: 1920, offset: 6144)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2100, file: !463, line: 424, baseType: !1804, size: 20608, offset: 8064)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2100, file: !463, line: 425, baseType: !227, size: 32, offset: 28672)
!2115 = !{!2029, !2116, !2242, !2248, !2250, !2253, !2258, !2260, !2265}
!2116 = !DIGlobalVariableExpression(var: !2117, expr: !DIExpression())
!2117 = distinct !DIGlobalVariable(name: "_kernel", scope: !2031, file: !2035, line: 40, type: !2118, isLocal: false, isDefinition: true)
!2118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !345, line: 158, size: 288, elements: !2119)
!2119 = !{!2120, !2237}
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !2118, file: !345, line: 159, baseType: !2121, size: 192)
!2121 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2122, size: 192, elements: !445)
!2122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !345, line: 100, size: 192, elements: !2123)
!2123 = !{!2124, !2125, !2126, !2230, !2231, !2232, !2233}
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2122, file: !345, line: 102, baseType: !152, size: 32)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !2122, file: !345, line: 105, baseType: !193, size: 32, offset: 32)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2122, file: !345, line: 108, baseType: !2127, size: 32, offset: 64)
!2127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2128, size: 32)
!2128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !2129)
!2129 = !{!2130, !2188, !2200, !2201, !2202, !2203, !2204, !2210, !2225}
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2128, file: !309, line: 247, baseType: !2131, size: 384)
!2131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !2132)
!2132 = !{!2133, !2157, !2164, !2165, !2166, !2175, !2176, !2177}
!2133 = !DIDerivedType(tag: DW_TAG_member, scope: !2131, file: !309, line: 60, baseType: !2134, size: 64)
!2134 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2131, file: !309, line: 60, size: 64, elements: !2135)
!2135 = !{!2136, !2151}
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2134, file: !309, line: 61, baseType: !2137, size: 64)
!2137 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !2138)
!2138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !2139)
!2139 = !{!2140, !2146}
!2140 = !DIDerivedType(tag: DW_TAG_member, scope: !2138, file: !319, line: 38, baseType: !2141, size: 32)
!2141 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2138, file: !319, line: 38, size: 32, elements: !2142)
!2142 = !{!2143, !2145}
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2141, file: !319, line: 39, baseType: !2144, size: 32)
!2144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2138, size: 32)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2141, file: !319, line: 40, baseType: !2144, size: 32)
!2146 = !DIDerivedType(tag: DW_TAG_member, scope: !2138, file: !319, line: 42, baseType: !2147, size: 32, offset: 32)
!2147 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2138, file: !319, line: 42, size: 32, elements: !2148)
!2148 = !{!2149, !2150}
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2147, file: !319, line: 43, baseType: !2144, size: 32)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2147, file: !319, line: 44, baseType: !2144, size: 32)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2134, file: !309, line: 62, baseType: !2152, size: 64)
!2152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !2153)
!2153 = !{!2154}
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2152, file: !335, line: 50, baseType: !2155, size: 64)
!2155 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2156, size: 64, elements: !340)
!2156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2152, size: 32)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2131, file: !309, line: 68, baseType: !2158, size: 32, offset: 64)
!2158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2159, size: 32)
!2159 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !2160)
!2160 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !2161)
!2161 = !{!2162}
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2160, file: !345, line: 232, baseType: !2163, size: 64)
!2163 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !2138)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2131, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2131, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!2166 = !DIDerivedType(tag: DW_TAG_member, scope: !2131, file: !309, line: 90, baseType: !2167, size: 16, offset: 112)
!2167 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2131, file: !309, line: 90, size: 16, elements: !2168)
!2168 = !{!2169, !2174}
!2169 = !DIDerivedType(tag: DW_TAG_member, scope: !2167, file: !309, line: 91, baseType: !2170, size: 16)
!2170 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2167, file: !309, line: 91, size: 16, elements: !2171)
!2171 = !{!2172, !2173}
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2170, file: !309, line: 96, baseType: !359, size: 8)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2170, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2167, file: !309, line: 100, baseType: !197, size: 16)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2131, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2131, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2131, file: !309, line: 131, baseType: !2178, size: 192, offset: 192)
!2178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !2179)
!2179 = !{!2180, !2181, !2187}
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2178, file: !345, line: 245, baseType: !2137, size: 64)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2178, file: !345, line: 246, baseType: !2182, size: 32, offset: 64)
!2182 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !2183)
!2183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2184, size: 32)
!2184 = !DISubroutineType(types: !2185)
!2185 = !{null, !2186}
!2186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2178, size: 32)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2178, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2128, file: !309, line: 250, baseType: !2189, size: 288, offset: 384)
!2189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !2190)
!2190 = !{!2191, !2192, !2193, !2194, !2195, !2196, !2197, !2198, !2199}
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2189, file: !379, line: 26, baseType: !152, size: 32)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2189, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2189, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2189, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2189, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2189, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2189, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2189, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2189, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2128, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2128, file: !309, line: 256, baseType: !2159, size: 64, offset: 704)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2128, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2128, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2128, file: !309, line: 300, baseType: !2205, size: 96, offset: 1056)
!2205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !2206)
!2206 = !{!2207, !2208, !2209}
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2205, file: !309, line: 153, baseType: !22, size: 32)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2205, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2205, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2128, file: !309, line: 325, baseType: !2211, size: 32, offset: 1152)
!2211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2212, size: 32)
!2212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !2213)
!2213 = !{!2214, !2220, !2221}
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2212, file: !406, line: 5074, baseType: !2215, size: 96)
!2215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !2216)
!2216 = !{!2217, !2218, !2219}
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2215, file: !410, line: 57, baseType: !413, size: 32)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2215, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2215, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2212, file: !406, line: 5075, baseType: !2159, size: 64, offset: 96)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2212, file: !406, line: 5076, baseType: !2222, size: 32, offset: 160)
!2222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !2223)
!2223 = !{!2224}
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2222, file: !420, line: 52, baseType: !22, size: 32)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2128, file: !309, line: 343, baseType: !2226, size: 64, offset: 1184)
!2226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !2227)
!2227 = !{!2228, !2229}
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2226, file: !379, line: 63, baseType: !152, size: 32)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2226, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !2122, file: !345, line: 111, baseType: !2127, size: 32, offset: 96)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !2122, file: !345, line: 124, baseType: !107, size: 32, offset: 128)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2122, file: !345, line: 127, baseType: !195, size: 8, offset: 160)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2122, file: !345, line: 153, baseType: !2234, offset: 168)
!2234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2235, line: 33, elements: !2236)
!2235 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2236 = !{}
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !2118, file: !345, line: 170, baseType: !2238, size: 96, offset: 192)
!2238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !345, line: 83, size: 96, elements: !2239)
!2239 = !{!2240, !2241}
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2238, file: !345, line: 86, baseType: !2127, size: 32)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2238, file: !345, line: 90, baseType: !2163, size: 64, offset: 32)
!2242 = !DIGlobalVariableExpression(var: !2243, expr: !DIExpression())
!2243 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !2031, file: !2035, line: 43, type: !2244, isLocal: false, isDefinition: true, align: 512)
!2244 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2245, size: 8704, elements: !580)
!2245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !577, line: 47, size: 8, elements: !2246)
!2246 = !{!2247}
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2245, file: !577, line: 48, baseType: !120, size: 8)
!2248 = !DIGlobalVariableExpression(var: !2249, expr: !DIExpression())
!2249 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !2031, file: !2035, line: 44, type: !2128, isLocal: false, isDefinition: true)
!2250 = !DIGlobalVariableExpression(var: !2251, expr: !DIExpression())
!2251 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !2031, file: !2035, line: 48, type: !2252, isLocal: false, isDefinition: true)
!2252 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2128, size: 1280, elements: !445)
!2253 = !DIGlobalVariableExpression(var: !2254, expr: !DIExpression())
!2254 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !2031, file: !2035, line: 86, type: !2255, isLocal: false, isDefinition: true, align: 512)
!2255 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2245, size: 16896, elements: !2256)
!2256 = !{!446, !2257}
!2257 = !DISubrange(count: 2112)
!2258 = !DIGlobalVariableExpression(var: !2259, expr: !DIExpression())
!2259 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !2031, file: !2035, line: 217, type: !145, isLocal: false, isDefinition: true)
!2260 = !DIGlobalVariableExpression(var: !2261, expr: !DIExpression())
!2261 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !2031, file: !2035, line: 50, type: !2262, isLocal: true, isDefinition: true, align: 512)
!2262 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2245, size: 33280, elements: !2263)
!2263 = !{!446, !2264}
!2264 = !DISubrange(count: 4160)
!2265 = !DIGlobalVariableExpression(var: !2266, expr: !DIExpression())
!2266 = distinct !DIGlobalVariable(name: "levels", scope: !2267, file: !2035, line: 232, type: !2287, isLocal: true, isDefinition: true)
!2267 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !2035, file: !2035, line: 230, type: !2268, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2031, retainedNodes: !2270)
!2268 = !DISubroutineType(types: !2269)
!2269 = !{null, !2034}
!2270 = !{!2271, !2272, !2282, !2286}
!2271 = !DILocalVariable(name: "level", arg: 1, scope: !2267, file: !2035, line: 230, type: !2034)
!2272 = !DILocalVariable(name: "entry", scope: !2267, file: !2035, line: 244, type: !2273)
!2273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2274, size: 32)
!2274 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2275)
!2275 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !2276)
!2276 = !{!2277, !2281}
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2275, file: !238, line: 60, baseType: !2278, size: 32)
!2278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2279, size: 32)
!2279 = !DISubroutineType(types: !2280)
!2280 = !{!107, !2053}
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2275, file: !238, line: 65, baseType: !2053, size: 32, offset: 32)
!2282 = !DILocalVariable(name: "dev", scope: !2283, file: !2035, line: 247, type: !2053)
!2283 = distinct !DILexicalBlock(scope: !2284, file: !2035, line: 246, column: 64)
!2284 = distinct !DILexicalBlock(scope: !2285, file: !2035, line: 246, column: 2)
!2285 = distinct !DILexicalBlock(scope: !2267, file: !2035, line: 246, column: 2)
!2286 = !DILocalVariable(name: "rc", scope: !2283, file: !2035, line: 248, type: !107)
!2287 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2273, size: 192, elements: !2288)
!2288 = !{!2289}
!2289 = !DISubrange(count: 6)
!2290 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2291)
!2291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !203, line: 16, size: 64, elements: !2292)
!2292 = !{!2293, !2294}
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2291, file: !203, line: 17, baseType: !118, size: 32)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2291, file: !203, line: 18, baseType: !195, size: 8, offset: 32)
!2295 = !DIGlobalVariableExpression(var: !2296, expr: !DIExpression())
!2296 = distinct !DIGlobalVariable(name: "states_str", scope: !2297, file: !2298, line: 276, type: !2422, isLocal: true, isDefinition: true)
!2297 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2298, file: !2298, line: 271, type: !2299, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !2413)
!2298 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2299 = !DISubroutineType(types: !2300)
!2300 = !{!118, !2301, !193, !185}
!2301 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !309, line: 347, baseType: !2302)
!2302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2303, size: 32)
!2303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !2304)
!2304 = !{!2305, !2363, !2375, !2376, !2377, !2378, !2379, !2385, !2400}
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2303, file: !309, line: 247, baseType: !2306, size: 384)
!2306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !2307)
!2307 = !{!2308, !2332, !2339, !2340, !2341, !2350, !2351, !2352}
!2308 = !DIDerivedType(tag: DW_TAG_member, scope: !2306, file: !309, line: 60, baseType: !2309, size: 64)
!2309 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2306, file: !309, line: 60, size: 64, elements: !2310)
!2310 = !{!2311, !2326}
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2309, file: !309, line: 61, baseType: !2312, size: 64)
!2312 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !2313)
!2313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !2314)
!2314 = !{!2315, !2321}
!2315 = !DIDerivedType(tag: DW_TAG_member, scope: !2313, file: !319, line: 38, baseType: !2316, size: 32)
!2316 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2313, file: !319, line: 38, size: 32, elements: !2317)
!2317 = !{!2318, !2320}
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2316, file: !319, line: 39, baseType: !2319, size: 32)
!2319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2313, size: 32)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2316, file: !319, line: 40, baseType: !2319, size: 32)
!2321 = !DIDerivedType(tag: DW_TAG_member, scope: !2313, file: !319, line: 42, baseType: !2322, size: 32, offset: 32)
!2322 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2313, file: !319, line: 42, size: 32, elements: !2323)
!2323 = !{!2324, !2325}
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2322, file: !319, line: 43, baseType: !2319, size: 32)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2322, file: !319, line: 44, baseType: !2319, size: 32)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2309, file: !309, line: 62, baseType: !2327, size: 64)
!2327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !2328)
!2328 = !{!2329}
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2327, file: !335, line: 50, baseType: !2330, size: 64)
!2330 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2331, size: 64, elements: !340)
!2331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2327, size: 32)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2306, file: !309, line: 68, baseType: !2333, size: 32, offset: 64)
!2333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2334, size: 32)
!2334 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !2335)
!2335 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !2336)
!2336 = !{!2337}
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2335, file: !345, line: 232, baseType: !2338, size: 64)
!2338 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !2313)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2306, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2306, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!2341 = !DIDerivedType(tag: DW_TAG_member, scope: !2306, file: !309, line: 90, baseType: !2342, size: 16, offset: 112)
!2342 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2306, file: !309, line: 90, size: 16, elements: !2343)
!2343 = !{!2344, !2349}
!2344 = !DIDerivedType(tag: DW_TAG_member, scope: !2342, file: !309, line: 91, baseType: !2345, size: 16)
!2345 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2342, file: !309, line: 91, size: 16, elements: !2346)
!2346 = !{!2347, !2348}
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2345, file: !309, line: 96, baseType: !359, size: 8)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2345, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2342, file: !309, line: 100, baseType: !197, size: 16)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2306, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2306, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2306, file: !309, line: 131, baseType: !2353, size: 192, offset: 192)
!2353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !2354)
!2354 = !{!2355, !2356, !2362}
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2353, file: !345, line: 245, baseType: !2312, size: 64)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2353, file: !345, line: 246, baseType: !2357, size: 32, offset: 64)
!2357 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !2358)
!2358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2359, size: 32)
!2359 = !DISubroutineType(types: !2360)
!2360 = !{null, !2361}
!2361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2353, size: 32)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2353, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2303, file: !309, line: 250, baseType: !2364, size: 288, offset: 384)
!2364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !2365)
!2365 = !{!2366, !2367, !2368, !2369, !2370, !2371, !2372, !2373, !2374}
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2364, file: !379, line: 26, baseType: !152, size: 32)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2364, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2364, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2364, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2364, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2364, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2364, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2364, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2364, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2303, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2303, file: !309, line: 256, baseType: !2334, size: 64, offset: 704)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2303, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2303, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2303, file: !309, line: 300, baseType: !2380, size: 96, offset: 1056)
!2380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !2381)
!2381 = !{!2382, !2383, !2384}
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2380, file: !309, line: 153, baseType: !22, size: 32)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2380, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2380, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2303, file: !309, line: 325, baseType: !2386, size: 32, offset: 1152)
!2386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2387, size: 32)
!2387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !2388)
!2388 = !{!2389, !2395, !2396}
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2387, file: !406, line: 5074, baseType: !2390, size: 96)
!2390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !2391)
!2391 = !{!2392, !2393, !2394}
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2390, file: !410, line: 57, baseType: !413, size: 32)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2390, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2390, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2387, file: !406, line: 5075, baseType: !2334, size: 64, offset: 96)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2387, file: !406, line: 5076, baseType: !2397, size: 32, offset: 160)
!2397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !2398)
!2398 = !{!2399}
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2397, file: !420, line: 52, baseType: !22, size: 32)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2303, file: !309, line: 343, baseType: !2401, size: 64, offset: 1184)
!2401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !2402)
!2402 = !{!2403, !2404}
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2401, file: !379, line: 63, baseType: !152, size: 32)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2401, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!2405 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2406, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2407, globals: !2409, splitDebugInlining: false, nameTableKind: None)
!2406 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pytest")
!2407 = !{!106, !118, !564, !195, !22, !107, !2408, !24, !185, !193, !152, !566}
!2408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2312, size: 32)
!2409 = !{!2295, !2410}
!2410 = !DIGlobalVariableExpression(var: !2411, expr: !DIExpression())
!2411 = distinct !DIGlobalVariable(name: "states_sz", scope: !2297, file: !2298, line: 279, type: !2412, isLocal: true, isDefinition: true)
!2412 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1963, size: 256, elements: !1622)
!2413 = !{!2414, !2415, !2416, !2417, !2418, !2419, !2420}
!2414 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2297, file: !2298, line: 271, type: !2301)
!2415 = !DILocalVariable(name: "buf", arg: 2, scope: !2297, file: !2298, line: 271, type: !193)
!2416 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2297, file: !2298, line: 271, type: !185)
!2417 = !DILocalVariable(name: "off", scope: !2297, file: !2298, line: 273, type: !185)
!2418 = !DILocalVariable(name: "bit", scope: !2297, file: !2298, line: 274, type: !195)
!2419 = !DILocalVariable(name: "thread_state", scope: !2297, file: !2298, line: 275, type: !195)
!2420 = !DILocalVariable(name: "index", scope: !2421, file: !2298, line: 293, type: !195)
!2421 = distinct !DILexicalBlock(scope: !2297, file: !2298, line: 293, column: 2)
!2422 = !DICompositeType(tag: DW_TAG_array_type, baseType: !118, size: 256, elements: !1622)
!2423 = !DIGlobalVariableExpression(var: !2424, expr: !DIExpression())
!2424 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2425, file: !2536, line: 56, type: !2523, isLocal: false, isDefinition: true)
!2425 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2426, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2427, globals: !2533, splitDebugInlining: false, nameTableKind: None)
!2426 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pytest")
!2427 = !{!2428, !193, !106, !2531, !194, !564, !904, !107, !152, !566, !2532}
!2428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2429, size: 32)
!2429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !2430)
!2430 = !{!2431, !2489, !2501, !2502, !2503, !2504, !2505, !2511, !2526}
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2429, file: !309, line: 247, baseType: !2432, size: 384)
!2432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !2433)
!2433 = !{!2434, !2458, !2465, !2466, !2467, !2476, !2477, !2478}
!2434 = !DIDerivedType(tag: DW_TAG_member, scope: !2432, file: !309, line: 60, baseType: !2435, size: 64)
!2435 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2432, file: !309, line: 60, size: 64, elements: !2436)
!2436 = !{!2437, !2452}
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2435, file: !309, line: 61, baseType: !2438, size: 64)
!2438 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !2439)
!2439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !2440)
!2440 = !{!2441, !2447}
!2441 = !DIDerivedType(tag: DW_TAG_member, scope: !2439, file: !319, line: 38, baseType: !2442, size: 32)
!2442 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2439, file: !319, line: 38, size: 32, elements: !2443)
!2443 = !{!2444, !2446}
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2442, file: !319, line: 39, baseType: !2445, size: 32)
!2445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2439, size: 32)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2442, file: !319, line: 40, baseType: !2445, size: 32)
!2447 = !DIDerivedType(tag: DW_TAG_member, scope: !2439, file: !319, line: 42, baseType: !2448, size: 32, offset: 32)
!2448 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2439, file: !319, line: 42, size: 32, elements: !2449)
!2449 = !{!2450, !2451}
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2448, file: !319, line: 43, baseType: !2445, size: 32)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2448, file: !319, line: 44, baseType: !2445, size: 32)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2435, file: !309, line: 62, baseType: !2453, size: 64)
!2453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !2454)
!2454 = !{!2455}
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2453, file: !335, line: 50, baseType: !2456, size: 64)
!2456 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2457, size: 64, elements: !340)
!2457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2453, size: 32)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2432, file: !309, line: 68, baseType: !2459, size: 32, offset: 64)
!2459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2460, size: 32)
!2460 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !2461)
!2461 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !2462)
!2462 = !{!2463}
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2461, file: !345, line: 232, baseType: !2464, size: 64)
!2464 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !2439)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2432, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2432, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!2467 = !DIDerivedType(tag: DW_TAG_member, scope: !2432, file: !309, line: 90, baseType: !2468, size: 16, offset: 112)
!2468 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2432, file: !309, line: 90, size: 16, elements: !2469)
!2469 = !{!2470, !2475}
!2470 = !DIDerivedType(tag: DW_TAG_member, scope: !2468, file: !309, line: 91, baseType: !2471, size: 16)
!2471 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2468, file: !309, line: 91, size: 16, elements: !2472)
!2472 = !{!2473, !2474}
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2471, file: !309, line: 96, baseType: !359, size: 8)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2471, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2468, file: !309, line: 100, baseType: !197, size: 16)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2432, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2432, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2432, file: !309, line: 131, baseType: !2479, size: 192, offset: 192)
!2479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !2480)
!2480 = !{!2481, !2482, !2488}
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2479, file: !345, line: 245, baseType: !2438, size: 64)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2479, file: !345, line: 246, baseType: !2483, size: 32, offset: 64)
!2483 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !2484)
!2484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2485, size: 32)
!2485 = !DISubroutineType(types: !2486)
!2486 = !{null, !2487}
!2487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2479, size: 32)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2479, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2429, file: !309, line: 250, baseType: !2490, size: 288, offset: 384)
!2490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !2491)
!2491 = !{!2492, !2493, !2494, !2495, !2496, !2497, !2498, !2499, !2500}
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2490, file: !379, line: 26, baseType: !152, size: 32)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2490, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2490, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2490, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2490, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2490, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2490, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2490, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2490, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2429, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2429, file: !309, line: 256, baseType: !2460, size: 64, offset: 704)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2429, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2429, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2429, file: !309, line: 300, baseType: !2506, size: 96, offset: 1056)
!2506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !2507)
!2507 = !{!2508, !2509, !2510}
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2506, file: !309, line: 153, baseType: !22, size: 32)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2506, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2506, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2429, file: !309, line: 325, baseType: !2512, size: 32, offset: 1152)
!2512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2513, size: 32)
!2513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !2514)
!2514 = !{!2515, !2521, !2522}
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2513, file: !406, line: 5074, baseType: !2516, size: 96)
!2516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !2517)
!2517 = !{!2518, !2519, !2520}
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2516, file: !410, line: 57, baseType: !413, size: 32)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2516, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2516, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2513, file: !406, line: 5075, baseType: !2460, size: 64, offset: 96)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2513, file: !406, line: 5076, baseType: !2523, size: 32, offset: 160)
!2523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !2524)
!2524 = !{!2525}
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2523, file: !420, line: 52, baseType: !22, size: 32)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2429, file: !309, line: 343, baseType: !2527, size: 64, offset: 1184)
!2527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !2528)
!2528 = !{!2529, !2530}
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2527, file: !379, line: 63, baseType: !152, size: 32)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2527, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!2531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2457, size: 32)
!2532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2438, size: 32)
!2533 = !{!2423, !2534, !2537, !2539}
!2534 = !DIGlobalVariableExpression(var: !2535, expr: !DIExpression())
!2535 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2425, file: !2536, line: 404, type: !107, isLocal: true, isDefinition: true)
!2536 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2537 = !DIGlobalVariableExpression(var: !2538, expr: !DIExpression())
!2538 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2425, file: !2536, line: 405, type: !107, isLocal: true, isDefinition: true)
!2539 = !DIGlobalVariableExpression(var: !2540, expr: !DIExpression())
!2540 = distinct !DIGlobalVariable(name: "pending_current", scope: !2425, file: !2536, line: 425, type: !2428, isLocal: true, isDefinition: true)
!2541 = !DIGlobalVariableExpression(var: !2542, expr: !DIExpression())
!2542 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2543, file: !2573, line: 19, type: !2579, isLocal: true, isDefinition: true)
!2543 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2544, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2545, globals: !2570, splitDebugInlining: false, nameTableKind: None)
!2544 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pytest")
!2545 = !{!564, !106, !904, !152, !566, !107, !2546, !193, !376}
!2546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2547, size: 32)
!2547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !2548)
!2548 = !{!2549, !2564, !2569}
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2547, file: !345, line: 245, baseType: !2550, size: 64)
!2550 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !2551)
!2551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !2552)
!2552 = !{!2553, !2559}
!2553 = !DIDerivedType(tag: DW_TAG_member, scope: !2551, file: !319, line: 38, baseType: !2554, size: 32)
!2554 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2551, file: !319, line: 38, size: 32, elements: !2555)
!2555 = !{!2556, !2558}
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2554, file: !319, line: 39, baseType: !2557, size: 32)
!2557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2551, size: 32)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2554, file: !319, line: 40, baseType: !2557, size: 32)
!2559 = !DIDerivedType(tag: DW_TAG_member, scope: !2551, file: !319, line: 42, baseType: !2560, size: 32, offset: 32)
!2560 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2551, file: !319, line: 42, size: 32, elements: !2561)
!2561 = !{!2562, !2563}
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2560, file: !319, line: 43, baseType: !2557, size: 32)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2560, file: !319, line: 44, baseType: !2557, size: 32)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2547, file: !345, line: 246, baseType: !2565, size: 32, offset: 64)
!2565 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !2566)
!2566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2567, size: 32)
!2567 = !DISubroutineType(types: !2568)
!2568 = !{null, !2546}
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2547, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!2570 = !{!2571, !2541, !2574, !2576}
!2571 = !DIGlobalVariableExpression(var: !2572, expr: !DIExpression())
!2572 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2543, file: !2573, line: 15, type: !566, isLocal: true, isDefinition: true)
!2573 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2574 = !DIGlobalVariableExpression(var: !2575, expr: !DIExpression())
!2575 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2543, file: !2573, line: 25, type: !107, isLocal: true, isDefinition: true)
!2576 = !DIGlobalVariableExpression(var: !2577, expr: !DIExpression())
!2577 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2543, file: !2573, line: 17, type: !2578, isLocal: true, isDefinition: true)
!2578 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !2551)
!2579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !2580)
!2580 = !{!2581}
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2579, file: !420, line: 52, baseType: !22, size: 32)
!2582 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2583, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2583 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pytest")
!2584 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2585, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2585 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pytest")
!2586 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2587, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2588, retainedTypes: !2608, splitDebugInlining: false, nameTableKind: None)
!2587 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pytest")
!2588 = !{!2589, !2597}
!2589 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2590, line: 69, baseType: !32, size: 32, elements: !2591)
!2590 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2591 = !{!2592, !2593, !2594, !2595, !2596}
!2592 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2593 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2594 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2595 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2596 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2597 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2590, line: 56, baseType: !32, size: 32, elements: !2598)
!2598 = !{!2599, !2600, !2601, !2602, !2603, !2604, !2605, !2606, !2607}
!2599 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2600 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2601 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2602 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2603 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2604 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2605 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2606 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2607 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2608 = !{!107, !2589, !2597, !2609, !360, !264, !2611, !2612, !196, !198, !118, !185, !106, !22, !32, !187, !2614, !2615, !189, !188, !191, !190, !2610, !2616, !2617, !2618, !2619}
!2609 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2590, line: 31, baseType: !2610)
!2610 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !191)
!2611 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !186, line: 329, baseType: !32)
!2612 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2590, line: 32, baseType: !2613)
!2613 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !567)
!2614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !360, size: 32)
!2615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !264, size: 32)
!2616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2610, size: 32)
!2617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !185, size: 32)
!2618 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !186, line: 145, baseType: !107)
!2619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2618, size: 32)
!2620 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2621, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2621 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pytest")
!2622 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2623, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2623 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pytest/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pytest")
!2624 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2625, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2626, splitDebugInlining: false, nameTableKind: None)
!2625 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pytest")
!2626 = !{!118, !196, !107, !32}
!2627 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2628, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2629, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2628 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pytest")
!2629 = !{!2630, !30}
!2630 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2631, line: 27, baseType: !32, size: 32, elements: !2632)
!2631 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2632 = !{!2633, !2634, !2635, !2636, !2637}
!2633 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2634 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2635 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2636 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2637 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2638 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2639, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2640, retainedTypes: !2641, splitDebugInlining: false, nameTableKind: None)
!2639 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pytest")
!2640 = !{!734, !2630, !30}
!2641 = !{!930, !2642, !106, !107, !904, !152, !195, !2659}
!2642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2643, size: 32)
!2643 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !463, line: 426, baseType: !2644)
!2644 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 411, size: 28704, elements: !2645)
!2645 = !{!2646, !2647, !2648, !2649, !2650, !2651, !2652, !2653, !2654, !2655, !2656, !2657, !2658}
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2644, file: !463, line: 413, baseType: !1782, size: 256)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2644, file: !463, line: 414, baseType: !1784, size: 768, offset: 256)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2644, file: !463, line: 415, baseType: !1782, size: 256, offset: 1024)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2644, file: !463, line: 416, baseType: !1784, size: 768, offset: 1280)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2644, file: !463, line: 417, baseType: !1782, size: 256, offset: 2048)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2644, file: !463, line: 418, baseType: !1784, size: 768, offset: 2304)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2644, file: !463, line: 419, baseType: !1782, size: 256, offset: 3072)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2644, file: !463, line: 420, baseType: !1784, size: 768, offset: 3328)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2644, file: !463, line: 421, baseType: !1782, size: 256, offset: 4096)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2644, file: !463, line: 422, baseType: !1795, size: 1792, offset: 4352)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2644, file: !463, line: 423, baseType: !1799, size: 1920, offset: 6144)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2644, file: !463, line: 424, baseType: !1804, size: 20608, offset: 8064)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2644, file: !463, line: 425, baseType: !227, size: 32, offset: 28672)
!2659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2660, size: 32)
!2660 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !2661)
!2661 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !2662)
!2662 = !{!2663, !2664, !2665, !2666, !2667, !2668, !2669, !2670, !2671, !2672, !2673, !2674, !2675, !2676, !2677, !2678, !2679, !2680, !2681, !2682, !2683}
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2661, file: !463, line: 447, baseType: !467, size: 32)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2661, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2661, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2661, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2661, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2661, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2661, file: !463, line: 453, baseType: !1819, size: 96, offset: 192)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2661, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2661, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2661, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2661, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2661, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2661, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2661, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2661, file: !463, line: 461, baseType: !1830, size: 64, offset: 512)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2661, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2661, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2661, file: !463, line: 464, baseType: !1834, size: 128, offset: 640)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2661, file: !463, line: 465, baseType: !1836, size: 160, offset: 768)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2661, file: !463, line: 466, baseType: !1838, size: 160, offset: 928)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2661, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!2684 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2685, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2685 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pytest")
!2686 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2687, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2688, splitDebugInlining: false, nameTableKind: None)
!2687 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pytest")
!2688 = !{!106, !107, !22, !2689}
!2689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2690, size: 32)
!2690 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !2691)
!2691 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !2692)
!2692 = !{!2693, !2694, !2695, !2696, !2697, !2698, !2699, !2700, !2701, !2702, !2703, !2704, !2705, !2706, !2707, !2708, !2709, !2710, !2711, !2712, !2713}
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2691, file: !463, line: 447, baseType: !467, size: 32)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2691, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2691, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2691, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2691, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2691, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2691, file: !463, line: 453, baseType: !1819, size: 96, offset: 192)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2691, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2691, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2691, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2691, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2691, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2691, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2691, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2691, file: !463, line: 461, baseType: !1830, size: 64, offset: 512)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2691, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2691, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2691, file: !463, line: 464, baseType: !1834, size: 128, offset: 640)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2691, file: !463, line: 465, baseType: !1836, size: 160, offset: 768)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2691, file: !463, line: 466, baseType: !1838, size: 160, offset: 928)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2691, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!2714 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2715, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2716, splitDebugInlining: false, nameTableKind: None)
!2715 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pytest")
!2716 = !{!2717, !106, !107}
!2717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2718, size: 32)
!2718 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !2719)
!2719 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !2720)
!2720 = !{!2721, !2722, !2723, !2724, !2725, !2726, !2727, !2728, !2729, !2730, !2731, !2732, !2733, !2734, !2735, !2736, !2737, !2738, !2739, !2740, !2741}
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2719, file: !463, line: 447, baseType: !467, size: 32)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2719, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2719, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2719, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2719, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2719, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2719, file: !463, line: 453, baseType: !1819, size: 96, offset: 192)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2719, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2719, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2719, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2719, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2719, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2719, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2719, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2719, file: !463, line: 461, baseType: !1830, size: 64, offset: 512)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2719, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2719, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2719, file: !463, line: 464, baseType: !1834, size: 128, offset: 640)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2719, file: !463, line: 465, baseType: !1836, size: 160, offset: 768)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2719, file: !463, line: 466, baseType: !1838, size: 160, offset: 928)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2719, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!2742 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2743, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2744, splitDebugInlining: false, nameTableKind: None)
!2743 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pytest")
!2744 = !{!2745, !152, !106, !107}
!2745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2746, size: 32)
!2746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2747, line: 98, size: 256, elements: !2748)
!2747 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2748 = !{!2749, !2754, !2759, !2764, !2769, !2774, !2779, !2784}
!2749 = !DIDerivedType(tag: DW_TAG_member, scope: !2746, file: !2747, line: 99, baseType: !2750, size: 32)
!2750 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2746, file: !2747, line: 99, size: 32, elements: !2751)
!2751 = !{!2752, !2753}
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2750, file: !2747, line: 99, baseType: !152, size: 32)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2750, file: !2747, line: 99, baseType: !152, size: 32)
!2754 = !DIDerivedType(tag: DW_TAG_member, scope: !2746, file: !2747, line: 100, baseType: !2755, size: 32, offset: 32)
!2755 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2746, file: !2747, line: 100, size: 32, elements: !2756)
!2756 = !{!2757, !2758}
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2755, file: !2747, line: 100, baseType: !152, size: 32)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2755, file: !2747, line: 100, baseType: !152, size: 32)
!2759 = !DIDerivedType(tag: DW_TAG_member, scope: !2746, file: !2747, line: 101, baseType: !2760, size: 32, offset: 64)
!2760 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2746, file: !2747, line: 101, size: 32, elements: !2761)
!2761 = !{!2762, !2763}
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2760, file: !2747, line: 101, baseType: !152, size: 32)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2760, file: !2747, line: 101, baseType: !152, size: 32)
!2764 = !DIDerivedType(tag: DW_TAG_member, scope: !2746, file: !2747, line: 102, baseType: !2765, size: 32, offset: 96)
!2765 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2746, file: !2747, line: 102, size: 32, elements: !2766)
!2766 = !{!2767, !2768}
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2765, file: !2747, line: 102, baseType: !152, size: 32)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2765, file: !2747, line: 102, baseType: !152, size: 32)
!2769 = !DIDerivedType(tag: DW_TAG_member, scope: !2746, file: !2747, line: 103, baseType: !2770, size: 32, offset: 128)
!2770 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2746, file: !2747, line: 103, size: 32, elements: !2771)
!2771 = !{!2772, !2773}
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2770, file: !2747, line: 103, baseType: !152, size: 32)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2770, file: !2747, line: 103, baseType: !152, size: 32)
!2774 = !DIDerivedType(tag: DW_TAG_member, scope: !2746, file: !2747, line: 104, baseType: !2775, size: 32, offset: 160)
!2775 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2746, file: !2747, line: 104, size: 32, elements: !2776)
!2776 = !{!2777, !2778}
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2775, file: !2747, line: 104, baseType: !152, size: 32)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2775, file: !2747, line: 104, baseType: !152, size: 32)
!2779 = !DIDerivedType(tag: DW_TAG_member, scope: !2746, file: !2747, line: 105, baseType: !2780, size: 32, offset: 192)
!2780 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2746, file: !2747, line: 105, size: 32, elements: !2781)
!2781 = !{!2782, !2783}
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2780, file: !2747, line: 105, baseType: !152, size: 32)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2780, file: !2747, line: 105, baseType: !152, size: 32)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2746, file: !2747, line: 106, baseType: !152, size: 32, offset: 224)
!2785 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2786, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2629, retainedTypes: !2787, splitDebugInlining: false, nameTableKind: None)
!2786 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pytest")
!2787 = !{!2788, !106, !107, !2813, !2856, !152}
!2788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2789, size: 32)
!2789 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !2790)
!2790 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !2791)
!2791 = !{!2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799, !2800, !2801, !2802, !2803, !2804, !2805, !2806, !2807, !2808, !2809, !2810, !2811, !2812}
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2790, file: !463, line: 447, baseType: !467, size: 32)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2790, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2790, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2790, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2790, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2790, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2790, file: !463, line: 453, baseType: !1819, size: 96, offset: 192)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2790, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2790, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2790, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2790, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2790, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2790, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2790, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2790, file: !463, line: 461, baseType: !1830, size: 64, offset: 512)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2790, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2790, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2790, file: !463, line: 464, baseType: !1834, size: 128, offset: 640)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2790, file: !463, line: 465, baseType: !1836, size: 160, offset: 768)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2790, file: !463, line: 466, baseType: !1838, size: 160, offset: 928)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2790, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!2813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2814, size: 32)
!2814 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2747, line: 141, baseType: !2815)
!2815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2747, line: 97, size: 256, elements: !2816)
!2816 = !{!2817}
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2815, file: !2747, line: 107, baseType: !2818, size: 256)
!2818 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2747, line: 98, size: 256, elements: !2819)
!2819 = !{!2820, !2825, !2830, !2835, !2840, !2845, !2850, !2855}
!2820 = !DIDerivedType(tag: DW_TAG_member, scope: !2818, file: !2747, line: 99, baseType: !2821, size: 32)
!2821 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2818, file: !2747, line: 99, size: 32, elements: !2822)
!2822 = !{!2823, !2824}
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2821, file: !2747, line: 99, baseType: !152, size: 32)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2821, file: !2747, line: 99, baseType: !152, size: 32)
!2825 = !DIDerivedType(tag: DW_TAG_member, scope: !2818, file: !2747, line: 100, baseType: !2826, size: 32, offset: 32)
!2826 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2818, file: !2747, line: 100, size: 32, elements: !2827)
!2827 = !{!2828, !2829}
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2826, file: !2747, line: 100, baseType: !152, size: 32)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2826, file: !2747, line: 100, baseType: !152, size: 32)
!2830 = !DIDerivedType(tag: DW_TAG_member, scope: !2818, file: !2747, line: 101, baseType: !2831, size: 32, offset: 64)
!2831 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2818, file: !2747, line: 101, size: 32, elements: !2832)
!2832 = !{!2833, !2834}
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2831, file: !2747, line: 101, baseType: !152, size: 32)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2831, file: !2747, line: 101, baseType: !152, size: 32)
!2835 = !DIDerivedType(tag: DW_TAG_member, scope: !2818, file: !2747, line: 102, baseType: !2836, size: 32, offset: 96)
!2836 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2818, file: !2747, line: 102, size: 32, elements: !2837)
!2837 = !{!2838, !2839}
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2836, file: !2747, line: 102, baseType: !152, size: 32)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2836, file: !2747, line: 102, baseType: !152, size: 32)
!2840 = !DIDerivedType(tag: DW_TAG_member, scope: !2818, file: !2747, line: 103, baseType: !2841, size: 32, offset: 128)
!2841 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2818, file: !2747, line: 103, size: 32, elements: !2842)
!2842 = !{!2843, !2844}
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2841, file: !2747, line: 103, baseType: !152, size: 32)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2841, file: !2747, line: 103, baseType: !152, size: 32)
!2845 = !DIDerivedType(tag: DW_TAG_member, scope: !2818, file: !2747, line: 104, baseType: !2846, size: 32, offset: 160)
!2846 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2818, file: !2747, line: 104, size: 32, elements: !2847)
!2847 = !{!2848, !2849}
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2846, file: !2747, line: 104, baseType: !152, size: 32)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2846, file: !2747, line: 104, baseType: !152, size: 32)
!2850 = !DIDerivedType(tag: DW_TAG_member, scope: !2818, file: !2747, line: 105, baseType: !2851, size: 32, offset: 192)
!2851 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2818, file: !2747, line: 105, size: 32, elements: !2852)
!2852 = !{!2853, !2854}
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2851, file: !2747, line: 105, baseType: !152, size: 32)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2851, file: !2747, line: 105, baseType: !152, size: 32)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2818, file: !2747, line: 106, baseType: !152, size: 32, offset: 224)
!2856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !197, size: 32)
!2857 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2858, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1767, retainedTypes: !2859, splitDebugInlining: false, nameTableKind: None)
!2858 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pytest")
!2859 = !{!930, !904, !195, !152, !2860, !2877}
!2860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2861, size: 32)
!2861 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !463, line: 426, baseType: !2862)
!2862 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 411, size: 28704, elements: !2863)
!2863 = !{!2864, !2865, !2866, !2867, !2868, !2869, !2870, !2871, !2872, !2873, !2874, !2875, !2876}
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2862, file: !463, line: 413, baseType: !1782, size: 256)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2862, file: !463, line: 414, baseType: !1784, size: 768, offset: 256)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2862, file: !463, line: 415, baseType: !1782, size: 256, offset: 1024)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2862, file: !463, line: 416, baseType: !1784, size: 768, offset: 1280)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2862, file: !463, line: 417, baseType: !1782, size: 256, offset: 2048)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2862, file: !463, line: 418, baseType: !1784, size: 768, offset: 2304)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2862, file: !463, line: 419, baseType: !1782, size: 256, offset: 3072)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2862, file: !463, line: 420, baseType: !1784, size: 768, offset: 3328)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2862, file: !463, line: 421, baseType: !1782, size: 256, offset: 4096)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2862, file: !463, line: 422, baseType: !1795, size: 1792, offset: 4352)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2862, file: !463, line: 423, baseType: !1799, size: 1920, offset: 6144)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2862, file: !463, line: 424, baseType: !1804, size: 20608, offset: 8064)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2862, file: !463, line: 425, baseType: !227, size: 32, offset: 28672)
!2877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2878, size: 32)
!2878 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !2879)
!2879 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !2880)
!2880 = !{!2881, !2882, !2883, !2884, !2885, !2886, !2887, !2888, !2889, !2890, !2891, !2892, !2893, !2894, !2895, !2896, !2897, !2898, !2899, !2900, !2901}
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2879, file: !463, line: 447, baseType: !467, size: 32)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2879, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2879, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2879, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2879, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2879, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2879, file: !463, line: 453, baseType: !1819, size: 96, offset: 192)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2879, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2879, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2879, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2879, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2879, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2879, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2879, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2879, file: !463, line: 461, baseType: !1830, size: 64, offset: 512)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2879, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2879, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2879, file: !463, line: 464, baseType: !1834, size: 128, offset: 640)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2879, file: !463, line: 465, baseType: !1836, size: 160, offset: 768)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2879, file: !463, line: 466, baseType: !1838, size: 160, offset: 928)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2879, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!2902 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2903, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2904, splitDebugInlining: false, nameTableKind: None)
!2903 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pytest")
!2904 = !{!2905, !106, !107}
!2905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2906, size: 32)
!2906 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !2907)
!2907 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !2908)
!2908 = !{!2909, !2910, !2911, !2912, !2913, !2914, !2915, !2916, !2917, !2918, !2919, !2920, !2921, !2922, !2923, !2924, !2925, !2926, !2927, !2928, !2929}
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2907, file: !463, line: 447, baseType: !467, size: 32)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2907, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2907, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2907, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2907, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2907, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2907, file: !463, line: 453, baseType: !1819, size: 96, offset: 192)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2907, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2907, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2907, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2907, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2907, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2907, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2907, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2907, file: !463, line: 461, baseType: !1830, size: 64, offset: 512)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2907, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2907, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2907, file: !463, line: 464, baseType: !1834, size: 128, offset: 640)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2907, file: !463, line: 465, baseType: !1836, size: 160, offset: 768)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2907, file: !463, line: 466, baseType: !1838, size: 160, offset: 928)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2907, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!2930 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2931, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2932, splitDebugInlining: false, nameTableKind: None)
!2931 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pytest")
!2932 = !{!120, !193, !185, !1137, !2933, !196, !106}
!2933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2934, size: 32)
!2934 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !196)
!2935 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2936, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2937, splitDebugInlining: false, nameTableKind: None)
!2936 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pytest")
!2937 = !{!2938}
!2938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2939, size: 32)
!2939 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !223, line: 586, baseType: !2940)
!2940 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 550, size: 1216, elements: !2941)
!2941 = !{!2942, !2943, !2944, !2945, !2946, !2947, !2948, !2949, !2950, !2951, !2952, !2953, !2954, !2955, !2956, !2957, !2958, !2959, !2960, !2961, !2962, !2963, !2964, !2965, !2966, !2967, !2968, !2969, !2970, !2971, !2972, !2973, !2974, !2975}
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2940, file: !223, line: 552, baseType: !227, size: 32)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2940, file: !223, line: 553, baseType: !227, size: 32, offset: 32)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2940, file: !223, line: 554, baseType: !227, size: 32, offset: 64)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2940, file: !223, line: 555, baseType: !227, size: 32, offset: 96)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2940, file: !223, line: 556, baseType: !227, size: 32, offset: 128)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2940, file: !223, line: 557, baseType: !227, size: 32, offset: 160)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2940, file: !223, line: 558, baseType: !227, size: 32, offset: 192)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2940, file: !223, line: 559, baseType: !152, size: 32, offset: 224)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2940, file: !223, line: 560, baseType: !227, size: 32, offset: 256)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2940, file: !223, line: 561, baseType: !227, size: 32, offset: 288)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2940, file: !223, line: 562, baseType: !1002, size: 64, offset: 320)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2940, file: !223, line: 563, baseType: !227, size: 32, offset: 384)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2940, file: !223, line: 564, baseType: !227, size: 32, offset: 416)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2940, file: !223, line: 565, baseType: !227, size: 32, offset: 448)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2940, file: !223, line: 566, baseType: !152, size: 32, offset: 480)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2940, file: !223, line: 567, baseType: !227, size: 32, offset: 512)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2940, file: !223, line: 568, baseType: !227, size: 32, offset: 544)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2940, file: !223, line: 569, baseType: !1002, size: 64, offset: 576)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2940, file: !223, line: 570, baseType: !227, size: 32, offset: 640)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2940, file: !223, line: 571, baseType: !227, size: 32, offset: 672)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2940, file: !223, line: 572, baseType: !227, size: 32, offset: 704)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2940, file: !223, line: 573, baseType: !152, size: 32, offset: 736)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2940, file: !223, line: 574, baseType: !227, size: 32, offset: 768)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2940, file: !223, line: 575, baseType: !227, size: 32, offset: 800)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2940, file: !223, line: 576, baseType: !1002, size: 64, offset: 832)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2940, file: !223, line: 577, baseType: !227, size: 32, offset: 896)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2940, file: !223, line: 578, baseType: !227, size: 32, offset: 928)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2940, file: !223, line: 579, baseType: !1002, size: 64, offset: 960)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2940, file: !223, line: 580, baseType: !227, size: 32, offset: 1024)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2940, file: !223, line: 581, baseType: !227, size: 32, offset: 1056)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !2940, file: !223, line: 582, baseType: !227, size: 32, offset: 1088)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2940, file: !223, line: 583, baseType: !227, size: 32, offset: 1120)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !2940, file: !223, line: 584, baseType: !227, size: 32, offset: 1152)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !2940, file: !223, line: 585, baseType: !227, size: 32, offset: 1184)
!2976 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2977, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2977 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pytest")
!2978 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2979, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2980, retainedTypes: !2996, splitDebugInlining: false, nameTableKind: None)
!2979 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc_ex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pytest")
!2980 = !{!2981, !2988, !2992}
!2981 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2982, line: 38, baseType: !32, size: 32, elements: !2983)
!2982 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2983 = !{!2984, !2985, !2986, !2987}
!2984 = !DIEnumerator(name: "HAL_OK", value: 0)
!2985 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!2986 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!2987 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!2988 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !975, line: 184, baseType: !32, size: 32, elements: !2989)
!2989 = !{!2990, !2991}
!2990 = !DIEnumerator(name: "RESET", value: 0)
!2991 = !DIEnumerator(name: "SET", value: 1)
!2992 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !975, line: 190, baseType: !32, size: 32, elements: !2993)
!2993 = !{!2994, !2995}
!2994 = !DIEnumerator(name: "DISABLE", value: 0)
!2995 = !DIEnumerator(name: "ENABLE", value: 1)
!2996 = !{!2997, !152, !3035, !1616, !195, !566, !106}
!2997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2998, size: 32)
!2998 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !223, line: 586, baseType: !2999)
!2999 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 550, size: 1216, elements: !3000)
!3000 = !{!3001, !3002, !3003, !3004, !3005, !3006, !3007, !3008, !3009, !3010, !3011, !3012, !3013, !3014, !3015, !3016, !3017, !3018, !3019, !3020, !3021, !3022, !3023, !3024, !3025, !3026, !3027, !3028, !3029, !3030, !3031, !3032, !3033, !3034}
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2999, file: !223, line: 552, baseType: !227, size: 32)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2999, file: !223, line: 553, baseType: !227, size: 32, offset: 32)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2999, file: !223, line: 554, baseType: !227, size: 32, offset: 64)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2999, file: !223, line: 555, baseType: !227, size: 32, offset: 96)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2999, file: !223, line: 556, baseType: !227, size: 32, offset: 128)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2999, file: !223, line: 557, baseType: !227, size: 32, offset: 160)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2999, file: !223, line: 558, baseType: !227, size: 32, offset: 192)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2999, file: !223, line: 559, baseType: !152, size: 32, offset: 224)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2999, file: !223, line: 560, baseType: !227, size: 32, offset: 256)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2999, file: !223, line: 561, baseType: !227, size: 32, offset: 288)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2999, file: !223, line: 562, baseType: !1002, size: 64, offset: 320)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2999, file: !223, line: 563, baseType: !227, size: 32, offset: 384)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2999, file: !223, line: 564, baseType: !227, size: 32, offset: 416)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2999, file: !223, line: 565, baseType: !227, size: 32, offset: 448)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2999, file: !223, line: 566, baseType: !152, size: 32, offset: 480)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2999, file: !223, line: 567, baseType: !227, size: 32, offset: 512)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2999, file: !223, line: 568, baseType: !227, size: 32, offset: 544)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2999, file: !223, line: 569, baseType: !1002, size: 64, offset: 576)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2999, file: !223, line: 570, baseType: !227, size: 32, offset: 640)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2999, file: !223, line: 571, baseType: !227, size: 32, offset: 672)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2999, file: !223, line: 572, baseType: !227, size: 32, offset: 704)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2999, file: !223, line: 573, baseType: !152, size: 32, offset: 736)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2999, file: !223, line: 574, baseType: !227, size: 32, offset: 768)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2999, file: !223, line: 575, baseType: !227, size: 32, offset: 800)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2999, file: !223, line: 576, baseType: !1002, size: 64, offset: 832)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2999, file: !223, line: 577, baseType: !227, size: 32, offset: 896)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2999, file: !223, line: 578, baseType: !227, size: 32, offset: 928)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2999, file: !223, line: 579, baseType: !1002, size: 64, offset: 960)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2999, file: !223, line: 580, baseType: !227, size: 32, offset: 1024)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2999, file: !223, line: 581, baseType: !227, size: 32, offset: 1056)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !2999, file: !223, line: 582, baseType: !227, size: 32, offset: 1088)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2999, file: !223, line: 583, baseType: !227, size: 32, offset: 1120)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !2999, file: !223, line: 584, baseType: !227, size: 32, offset: 1152)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !2999, file: !223, line: 585, baseType: !227, size: 32, offset: 1184)
!3035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3036, size: 32)
!3036 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !223, line: 544, baseType: !3037)
!3037 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 540, size: 64, elements: !3038)
!3038 = !{!3039, !3040}
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3037, file: !223, line: 542, baseType: !227, size: 32)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3037, file: !223, line: 543, baseType: !227, size: 32, offset: 32)
!3041 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3042, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3043, retainedTypes: !3044, splitDebugInlining: false, nameTableKind: None)
!3042 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pytest")
!3043 = !{!974}
!3044 = !{!3045, !152, !3053, !3059, !3070}
!3045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3046, size: 32)
!3046 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !463, line: 770, baseType: !3047)
!3047 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 764, size: 128, elements: !3048)
!3048 = !{!3049, !3050, !3051, !3052}
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !3047, file: !463, line: 766, baseType: !227, size: 32)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !3047, file: !463, line: 767, baseType: !227, size: 32, offset: 32)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !3047, file: !463, line: 768, baseType: !227, size: 32, offset: 64)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !3047, file: !463, line: 769, baseType: !467, size: 32, offset: 96)
!3053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3054, size: 32)
!3054 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !223, line: 544, baseType: !3055)
!3055 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 540, size: 64, elements: !3056)
!3056 = !{!3057, !3058}
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3055, file: !223, line: 542, baseType: !227, size: 32)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3055, file: !223, line: 543, baseType: !227, size: 32, offset: 32)
!3059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3060, size: 32)
!3060 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !223, line: 407, baseType: !3061)
!3061 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 398, size: 224, elements: !3062)
!3062 = !{!3063, !3064, !3065, !3066, !3067, !3068, !3069}
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3061, file: !223, line: 400, baseType: !227, size: 32)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3061, file: !223, line: 401, baseType: !227, size: 32, offset: 32)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3061, file: !223, line: 402, baseType: !227, size: 32, offset: 64)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3061, file: !223, line: 403, baseType: !227, size: 32, offset: 96)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3061, file: !223, line: 404, baseType: !227, size: 32, offset: 128)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3061, file: !223, line: 405, baseType: !227, size: 32, offset: 160)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3061, file: !223, line: 406, baseType: !227, size: 32, offset: 192)
!3070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3071, size: 32)
!3071 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !223, line: 586, baseType: !3072)
!3072 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 550, size: 1216, elements: !3073)
!3073 = !{!3074, !3075, !3076, !3077, !3078, !3079, !3080, !3081, !3082, !3083, !3084, !3085, !3086, !3087, !3088, !3089, !3090, !3091, !3092, !3093, !3094, !3095, !3096, !3097, !3098, !3099, !3100, !3101, !3102, !3103, !3104, !3105, !3106, !3107}
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3072, file: !223, line: 552, baseType: !227, size: 32)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3072, file: !223, line: 553, baseType: !227, size: 32, offset: 32)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3072, file: !223, line: 554, baseType: !227, size: 32, offset: 64)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3072, file: !223, line: 555, baseType: !227, size: 32, offset: 96)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3072, file: !223, line: 556, baseType: !227, size: 32, offset: 128)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3072, file: !223, line: 557, baseType: !227, size: 32, offset: 160)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3072, file: !223, line: 558, baseType: !227, size: 32, offset: 192)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3072, file: !223, line: 559, baseType: !152, size: 32, offset: 224)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3072, file: !223, line: 560, baseType: !227, size: 32, offset: 256)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3072, file: !223, line: 561, baseType: !227, size: 32, offset: 288)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3072, file: !223, line: 562, baseType: !1002, size: 64, offset: 320)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3072, file: !223, line: 563, baseType: !227, size: 32, offset: 384)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3072, file: !223, line: 564, baseType: !227, size: 32, offset: 416)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3072, file: !223, line: 565, baseType: !227, size: 32, offset: 448)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3072, file: !223, line: 566, baseType: !152, size: 32, offset: 480)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3072, file: !223, line: 567, baseType: !227, size: 32, offset: 512)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3072, file: !223, line: 568, baseType: !227, size: 32, offset: 544)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3072, file: !223, line: 569, baseType: !1002, size: 64, offset: 576)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3072, file: !223, line: 570, baseType: !227, size: 32, offset: 640)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3072, file: !223, line: 571, baseType: !227, size: 32, offset: 672)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3072, file: !223, line: 572, baseType: !227, size: 32, offset: 704)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3072, file: !223, line: 573, baseType: !152, size: 32, offset: 736)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3072, file: !223, line: 574, baseType: !227, size: 32, offset: 768)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3072, file: !223, line: 575, baseType: !227, size: 32, offset: 800)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3072, file: !223, line: 576, baseType: !1002, size: 64, offset: 832)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3072, file: !223, line: 577, baseType: !227, size: 32, offset: 896)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3072, file: !223, line: 578, baseType: !227, size: 32, offset: 928)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3072, file: !223, line: 579, baseType: !1002, size: 64, offset: 960)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3072, file: !223, line: 580, baseType: !227, size: 32, offset: 1024)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3072, file: !223, line: 581, baseType: !227, size: 32, offset: 1056)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !3072, file: !223, line: 582, baseType: !227, size: 32, offset: 1088)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3072, file: !223, line: 583, baseType: !227, size: 32, offset: 1120)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !3072, file: !223, line: 584, baseType: !227, size: 32, offset: 1152)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !3072, file: !223, line: 585, baseType: !227, size: 32, offset: 1184)
!3108 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3109, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3110, splitDebugInlining: false, nameTableKind: None)
!3109 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pytest")
!3110 = !{!106, !185}
!3111 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3112, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3113, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!3112 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pytest")
!3113 = !{!3114, !3121, !2630, !30}
!3114 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3115, line: 14, baseType: !32, size: 32, elements: !3116)
!3115 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3116 = !{!3117, !3118, !3119, !3120}
!3117 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3118 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3119 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3120 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3121 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3115, line: 42, baseType: !32, size: 32, elements: !3122)
!3122 = !{!3123, !3124, !3125, !3126, !3127, !3128}
!3123 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3124 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3125 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3126 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3127 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3128 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3129 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3130, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!3130 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pytest")
!3131 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3132, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3133, splitDebugInlining: false, nameTableKind: None)
!3132 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pytest")
!3133 = !{!22, !106, !107}
!3134 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3135, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!3135 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pytest")
!3136 = !{!"Ubuntu clang version 14.0.6"}
!3137 = !{i32 7, !"Dwarf Version", i32 4}
!3138 = !{i32 2, !"Debug Info Version", i32 3}
!3139 = !{i32 1, !"wchar_size", i32 4}
!3140 = !{i32 1, !"min_enum_size", i32 4}
!3141 = !{i32 1, !"branch-target-enforcement", i32 0}
!3142 = !{i32 1, !"sign-return-address", i32 0}
!3143 = !{i32 1, !"sign-return-address-all", i32 0}
!3144 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3145 = !{i32 7, !"frame-pointer", i32 2}
!3146 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3147, file: !3147, line: 26, type: !3148, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2582, retainedNodes: !2236)
!3147 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3148 = !DISubroutineType(types: !3149)
!3149 = !{null}
!3150 = !DILocation(line: 28, column: 1, scope: !3146)
!3151 = !{i64 2155376761, i64 2155376781, i64 2155376844}
!3152 = !DILocation(line: 29, column: 1, scope: !3146)
!3153 = !{i64 2155377176, i64 2155377196, i64 2155377259}
!3154 = !DILocation(line: 30, column: 1, scope: !3146)
!3155 = !{i64 2155377595, i64 2155377615, i64 2155377678}
!3156 = !DILocation(line: 31, column: 1, scope: !3146)
!3157 = !{i64 2155378014, i64 2155378034, i64 2155378097}
!3158 = !DILocation(line: 33, column: 1, scope: !3146)
!3159 = !{i64 2155378306, i64 2155378326, i64 2155378389}
!3160 = !DILocation(line: 35, column: 1, scope: !3146)
!3161 = !{i64 2155378631, i64 2155378651, i64 2155378714}
!3162 = !DILocation(line: 50, column: 1, scope: !3146)
!3163 = !{i64 2155379058, i64 2155379078, i64 2155379141}
!3164 = !DILocation(line: 54, column: 1, scope: !3146)
!3165 = !{i64 2155379497, i64 2155379517, i64 2155379580}
!3166 = !DILocation(line: 61, column: 1, scope: !3146)
!3167 = !{i64 2155379814, i64 2155379834, i64 2155379897}
!3168 = !DILocation(line: 63, column: 1, scope: !3146)
!3169 = !{i64 2155380194, i64 2155380214, i64 2155380277}
!3170 = !DILocation(line: 64, column: 1, scope: !3146)
!3171 = !{i64 2155380716, i64 2155380736, i64 2155380799}
!3172 = !DILocation(line: 65, column: 1, scope: !3146)
!3173 = !{i64 2155381214, i64 2155381234, i64 2155381297}
!3174 = !DILocation(line: 66, column: 1, scope: !3146)
!3175 = !{i64 2155381696, i64 2155381716, i64 2155381779}
!3176 = !DILocation(line: 67, column: 1, scope: !3146)
!3177 = !{i64 2155382203, i64 2155382223, i64 2155382286}
!3178 = !DILocation(line: 68, column: 1, scope: !3146)
!3179 = !{i64 2155382691, i64 2155382711, i64 2155382774}
!3180 = !DILocation(line: 70, column: 1, scope: !3146)
!3181 = !{i64 2155383159, i64 2155383179, i64 2155383242}
!3182 = !DILocation(line: 71, column: 1, scope: !3146)
!3183 = !{i64 2155383601, i64 2155383621, i64 2155383684}
!3184 = !DILocation(line: 72, column: 1, scope: !3146)
!3185 = !{i64 2155384059, i64 2155384079, i64 2155384142}
!3186 = !DILocation(line: 79, column: 1, scope: !3146)
!3187 = !{i64 2155384513, i64 2155384533, i64 2155384596}
!3188 = !DILocation(line: 80, column: 1, scope: !3146)
!3189 = !{i64 2155385024, i64 2155385044, i64 2155385107}
!3190 = !DILocation(line: 82, column: 1, scope: !3146)
!3191 = !{i64 2155385515, i64 2155385535, i64 2155385598}
!3192 = !DILocation(line: 97, column: 1, scope: !3146)
!3193 = !{i64 2155385852, i64 2155385872, i64 2155385935}
!3194 = !DILocation(line: 99, column: 1, scope: !3146)
!3195 = !{i64 2155386070, i64 2155386090, i64 2155386153}
!3196 = !DILocation(line: 102, column: 1, scope: !3146)
!3197 = !{i64 2155390388, i64 2155390408, i64 2155390471}
!3198 = !DILocation(line: 105, column: 1, scope: !3146)
!3199 = !{i64 2155390628, i64 2155390648, i64 2155390711}
!3200 = !DILocation(line: 115, column: 1, scope: !3146)
!3201 = !{i64 2155390967, i64 2155390987, i64 2155391050}
!3202 = !DILocation(line: 118, column: 1, scope: !3146)
!3203 = !{i64 2155391311, i64 2155391331, i64 2155391394}
!3204 = !DILocation(line: 32, column: 1, scope: !3205)
!3205 = !DILexicalBlockFile(scope: !3146, file: !3206, discriminator: 0)
!3206 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3207 = !{i64 2155391667, i64 2155391687, i64 2155391750}
!3208 = !DILocation(line: 33, column: 1, scope: !3205)
!3209 = !{i64 2155392179, i64 2155392199, i64 2155392262}
!3210 = !DILocation(line: 53, column: 1, scope: !3205)
!3211 = !{i64 2155392687, i64 2155392707, i64 2155392770}
!3212 = !DILocation(line: 54, column: 1, scope: !3205)
!3213 = !{i64 2155393105, i64 2155393125, i64 2155393188}
!3214 = !DILocation(line: 55, column: 1, scope: !3205)
!3215 = !{i64 2155393523, i64 2155393543, i64 2155393606}
!3216 = !DILocation(line: 56, column: 1, scope: !3205)
!3217 = !{i64 2155393941, i64 2155393961, i64 2155394024}
!3218 = !DILocation(line: 57, column: 1, scope: !3205)
!3219 = !{i64 2155394359, i64 2155394379, i64 2155394442}
!3220 = !DILocation(line: 58, column: 1, scope: !3205)
!3221 = !{i64 2155394777, i64 2155394797, i64 2155394860}
!3222 = !DILocation(line: 59, column: 1, scope: !3205)
!3223 = !{i64 2155395195, i64 2155395215, i64 2155395278}
!3224 = !DILocation(line: 60, column: 1, scope: !3205)
!3225 = !{i64 2155395619, i64 2155395639, i64 2155395702}
!3226 = !DILocation(line: 61, column: 1, scope: !3205)
!3227 = !{i64 2155395936, i64 2155395956, i64 2155396019}
!3228 = !DILocation(line: 70, column: 1, scope: !3205)
!3229 = !{i64 2155396165, i64 2155396185, i64 2155396248}
!3230 = !DILocation(line: 72, column: 1, scope: !3205)
!3231 = !{i64 2155396497, i64 2155396517, i64 2155396580}
!3232 = !DILocation(line: 73, column: 1, scope: !3205)
!3233 = !{i64 2155396947, i64 2155396967, i64 2155397030}
!3234 = !DILocation(line: 74, column: 1, scope: !3205)
!3235 = !{i64 2155397397, i64 2155397417, i64 2155397480}
!3236 = !DILocation(line: 75, column: 1, scope: !3205)
!3237 = !{i64 2155397847, i64 2155397867, i64 2155397930}
!3238 = !DILocation(line: 76, column: 1, scope: !3205)
!3239 = !{i64 2155398297, i64 2155398317, i64 2155398380}
!3240 = !DILocation(line: 77, column: 1, scope: !3205)
!3241 = !{i64 2155398747, i64 2155398767, i64 2155398830}
!3242 = !DILocation(line: 78, column: 1, scope: !3205)
!3243 = !{i64 2155399197, i64 2155399217, i64 2155399280}
!3244 = !DILocation(line: 79, column: 1, scope: !3205)
!3245 = !{i64 2155399647, i64 2155399667, i64 2155399730}
!3246 = !DILocation(line: 80, column: 1, scope: !3205)
!3247 = !{i64 2155404161, i64 2155404181, i64 2155404244}
!3248 = !DILocation(line: 84, column: 1, scope: !3205)
!3249 = !{i64 2155404493, i64 2155404513, i64 2155404576}
!3250 = !DILocation(line: 91, column: 1, scope: !3205)
!3251 = !{i64 2155404890, i64 2155404910, i64 2155404973}
!3252 = !DILocation(line: 93, column: 1, scope: !3205)
!3253 = !{i64 2155405257, i64 2155405277, i64 2155405340}
!3254 = !DILocation(line: 106, column: 1, scope: !3205)
!3255 = !{i64 2155405527, i64 2155405547, i64 2155405610}
!3256 = !DILocation(line: 11, column: 1, scope: !3257)
!3257 = !DILexicalBlockFile(scope: !3146, file: !3258, discriminator: 0)
!3258 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3259 = distinct !DISubprogram(name: "_test_pytest_test_pytest_wrapper", scope: !111, file: !111, line: 10, type: !131, scopeLine: 10, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3260)
!3260 = !{!3261}
!3261 = !DILocalVariable(name: "data", arg: 1, scope: !3259, file: !111, line: 10, type: !106)
!3262 = !DILocation(line: 0, scope: !3259)
!3263 = !DILocation(line: 10, column: 1, scope: !3259)
!3264 = distinct !DISubprogram(name: "test_pytest_test_pytest", scope: !111, file: !111, line: 10, type: !3148, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2236)
!3265 = !DILocation(line: 12, column: 2, scope: !3264)
!3266 = !DILocation(line: 13, column: 1, scope: !3264)
!3267 = distinct !DISubprogram(name: "cbvprintf_package", scope: !200, file: !200, line: 233, type: !3268, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3277)
!3268 = !DISubroutineType(types: !3269)
!3269 = !{!107, !106, !185, !152, !118, !3270}
!3270 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3271, line: 99, baseType: !3272)
!3271 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3272 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3271, line: 40, baseType: !3273)
!3273 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !200, baseType: !3274)
!3274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3275)
!3275 = !{!3276}
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3274, file: !200, line: 18, baseType: !106, size: 32)
!3277 = !{!3278, !3279, !3280, !3281, !3282, !3283, !3284, !3285, !3286, !3287, !3289, !3290, !3291, !3292, !3293, !3294, !3295, !3296, !3297, !3298, !3299, !3300, !3313, !3322, !3325, !3326, !3329, !3332, !3335, !3338, !3344}
!3278 = !DILocalVariable(name: "packaged", arg: 1, scope: !3267, file: !200, line: 233, type: !106)
!3279 = !DILocalVariable(name: "len", arg: 2, scope: !3267, file: !200, line: 233, type: !185)
!3280 = !DILocalVariable(name: "flags", arg: 3, scope: !3267, file: !200, line: 233, type: !152)
!3281 = !DILocalVariable(name: "fmt", arg: 4, scope: !3267, file: !200, line: 234, type: !118)
!3282 = !DILocalVariable(name: "ap", arg: 5, scope: !3267, file: !200, line: 234, type: !3270)
!3283 = !DILocalVariable(name: "buf0", scope: !3267, file: !200, line: 247, type: !194)
!3284 = !DILocalVariable(name: "buf", scope: !3267, file: !200, line: 248, type: !194)
!3285 = !DILocalVariable(name: "size", scope: !3267, file: !200, line: 249, type: !32)
!3286 = !DILocalVariable(name: "align", scope: !3267, file: !200, line: 250, type: !32)
!3287 = !DILocalVariable(name: "str_ptr_pos", scope: !3267, file: !200, line: 251, type: !3288)
!3288 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 128, elements: !2019)
!3289 = !DILocalVariable(name: "str_ptr_arg", scope: !3267, file: !200, line: 252, type: !3288)
!3290 = !DILocalVariable(name: "s_idx", scope: !3267, file: !200, line: 253, type: !32)
!3291 = !DILocalVariable(name: "s_rw_cnt", scope: !3267, file: !200, line: 254, type: !32)
!3292 = !DILocalVariable(name: "s_ro_cnt", scope: !3267, file: !200, line: 255, type: !32)
!3293 = !DILocalVariable(name: "arg_idx", scope: !3267, file: !200, line: 256, type: !107)
!3294 = !DILocalVariable(name: "i", scope: !3267, file: !200, line: 257, type: !32)
!3295 = !DILocalVariable(name: "s", scope: !3267, file: !200, line: 258, type: !118)
!3296 = !DILocalVariable(name: "parsing", scope: !3267, file: !200, line: 259, type: !145)
!3297 = !DILocalVariable(name: "rws_pos_en", scope: !3267, file: !200, line: 263, type: !145)
!3298 = !DILocalVariable(name: "fros_cnt", scope: !3267, file: !200, line: 268, type: !107)
!3299 = !DILocalVariable(name: "is_str_arg", scope: !3267, file: !200, line: 269, type: !145)
!3300 = !DILocalVariable(name: "pkg_hdr", scope: !3267, file: !200, line: 270, type: !3301)
!3301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3302, size: 32)
!3302 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "cbprintf_package_hdr", file: !3303, line: 78, size: 32, elements: !3304)
!3303 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3304 = !{!3305, !3312}
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !3302, file: !3303, line: 80, baseType: !3306, size: 32)
!3306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_desc", file: !3303, line: 45, size: 32, elements: !3307)
!3307 = !{!3308, !3309, !3310, !3311}
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3306, file: !3303, line: 47, baseType: !195, size: 8)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "str_cnt", scope: !3306, file: !3303, line: 50, baseType: !195, size: 8, offset: 8)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "ro_str_cnt", scope: !3306, file: !3303, line: 53, baseType: !195, size: 8, offset: 16)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "rw_str_cnt", scope: !3306, file: !3303, line: 56, baseType: !195, size: 8, offset: 24)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !3302, file: !3303, line: 82, baseType: !106, size: 32)
!3313 = !DILocalVariable(name: "v", scope: !3314, file: !200, line: 567, type: !3318)
!3314 = distinct !DILexicalBlock(scope: !3315, file: !200, line: 562, column: 14)
!3315 = distinct !DILexicalBlock(scope: !3316, file: !200, line: 481, column: 18)
!3316 = distinct !DILexicalBlock(scope: !3317, file: !200, line: 466, column: 3)
!3317 = distinct !DILexicalBlock(scope: !3267, file: !200, line: 343, column: 15)
!3318 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3267, file: !200, line: 567, size: 64, elements: !3319)
!3319 = !{!3320, !3321}
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !3318, file: !200, line: 567, baseType: !183, size: 64)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "ld", scope: !3318, file: !200, line: 567, baseType: !181, size: 64)
!3322 = !DILocalVariable(name: "is_ro", scope: !3323, file: !200, line: 620, type: !145)
!3323 = distinct !DILexicalBlock(scope: !3324, file: !200, line: 613, column: 19)
!3324 = distinct !DILexicalBlock(scope: !3317, file: !200, line: 613, column: 7)
!3325 = !DILocalVariable(name: "do_ro", scope: !3323, file: !200, line: 621, type: !145)
!3326 = !DILocalVariable(name: "s_ptr_idx", scope: !3327, file: !200, line: 626, type: !152)
!3327 = distinct !DILexicalBlock(scope: !3328, file: !200, line: 625, column: 11)
!3328 = distinct !DILexicalBlock(scope: !3323, file: !200, line: 623, column: 8)
!3329 = !DILocalVariable(name: "v", scope: !3330, file: !200, line: 684, type: !107)
!3330 = distinct !DILexicalBlock(scope: !3331, file: !200, line: 683, column: 35)
!3331 = distinct !DILexicalBlock(scope: !3324, file: !200, line: 683, column: 14)
!3332 = !DILocalVariable(name: "v", scope: !3333, file: !200, line: 691, type: !189)
!3333 = distinct !DILexicalBlock(scope: !3334, file: !200, line: 690, column: 36)
!3334 = distinct !DILexicalBlock(scope: !3331, file: !200, line: 690, column: 14)
!3335 = !DILocalVariable(name: "v", scope: !3336, file: !200, line: 698, type: !191)
!3336 = distinct !DILexicalBlock(scope: !3337, file: !200, line: 697, column: 41)
!3337 = distinct !DILexicalBlock(scope: !3334, file: !200, line: 697, column: 14)
!3338 = !DILocalVariable(name: "pos", scope: !3339, file: !200, line: 762, type: !195)
!3339 = distinct !DILexicalBlock(scope: !3340, file: !200, line: 757, column: 31)
!3340 = distinct !DILexicalBlock(scope: !3341, file: !200, line: 757, column: 3)
!3341 = distinct !DILexicalBlock(scope: !3342, file: !200, line: 757, column: 3)
!3342 = distinct !DILexicalBlock(scope: !3343, file: !200, line: 756, column: 16)
!3343 = distinct !DILexicalBlock(scope: !3267, file: !200, line: 756, column: 6)
!3344 = !DILabel(scope: !3323, name: "process_string", file: !200, line: 615)
!3345 = !DILocation(line: 0, scope: !3267)
!3346 = !DILocation(line: 251, column: 2, scope: !3267)
!3347 = !DILocation(line: 251, column: 10, scope: !3267)
!3348 = !DILocation(line: 252, column: 2, scope: !3267)
!3349 = !DILocation(line: 252, column: 10, scope: !3267)
!3350 = !DILocation(line: 263, column: 29, scope: !3267)
!3351 = !DILocation(line: 263, column: 21, scope: !3267)
!3352 = !DILocation(line: 268, column: 21, scope: !3267)
!3353 = !DILocation(line: 268, column: 19, scope: !3267)
!3354 = !DILocation(line: 273, column: 6, scope: !3355)
!3355 = distinct !DILexicalBlock(scope: !3267, file: !200, line: 273, column: 6)
!3356 = !DILocation(line: 273, column: 26, scope: !3355)
!3357 = !DILocation(line: 273, column: 6, scope: !3267)
!3358 = !DILocation(line: 297, column: 6, scope: !3267)
!3359 = !DILocation(line: 305, column: 11, scope: !3360)
!3360 = distinct !DILexicalBlock(scope: !3267, file: !200, line: 305, column: 6)
!3361 = !DILocation(line: 305, column: 6, scope: !3267)
!3362 = !DILocation(line: 327, column: 19, scope: !3363)
!3363 = distinct !DILexicalBlock(scope: !3267, file: !200, line: 327, column: 6)
!3364 = !DILocation(line: 327, column: 22, scope: !3363)
!3365 = !DILocation(line: 327, column: 33, scope: !3363)
!3366 = !DILocation(line: 327, column: 50, scope: !3363)
!3367 = !DILocation(line: 327, column: 6, scope: !3267)
!3368 = !DILocation(line: 338, column: 9, scope: !3267)
!3369 = !DILocation(line: 341, column: 2, scope: !3267)
!3370 = !DILocation(line: 472, column: 8, scope: !3316)
!3371 = !DILocation(line: 473, column: 14, scope: !3372)
!3372 = distinct !DILexicalBlock(scope: !3373, file: !200, line: 473, column: 9)
!3373 = distinct !DILexicalBlock(scope: !3374, file: !200, line: 472, column: 18)
!3374 = distinct !DILexicalBlock(scope: !3316, file: !200, line: 472, column: 8)
!3375 = !DILocation(line: 473, column: 9, scope: !3373)
!3376 = !DILocation(line: 479, column: 5, scope: !3373)
!3377 = !DILocation(line: 468, column: 9, scope: !3378)
!3378 = distinct !DILexicalBlock(scope: !3316, file: !200, line: 468, column: 8)
!3379 = !DILocation(line: 468, column: 8, scope: !3378)
!3380 = !DILocation(line: 468, column: 15, scope: !3378)
!3381 = !DILocation(line: 468, column: 8, scope: !3316)
!3382 = distinct !{!3382, !3383, !3384}
!3383 = !DILocation(line: 343, column: 2, scope: !3267)
!3384 = !DILocation(line: 712, column: 2, scope: !3267)
!3385 = !DILocation(line: 481, column: 4, scope: !3316)
!3386 = !DILocation(line: 484, column: 12, scope: !3315)
!3387 = !DILocation(line: 485, column: 5, scope: !3315)
!3388 = !DILocation(line: 505, column: 5, scope: !3315)
!3389 = !DILocation(line: 518, column: 5, scope: !3315)
!3390 = !DILocation(line: 523, column: 5, scope: !3315)
!3391 = !DILocation(line: 532, column: 9, scope: !3392)
!3392 = distinct !DILexicalBlock(scope: !3315, file: !200, line: 532, column: 9)
!3393 = !DILocation(line: 532, column: 17, scope: !3392)
!3394 = !DILocation(line: 532, column: 9, scope: !3315)
!3395 = !DILocation(line: 533, column: 10, scope: !3396)
!3396 = distinct !DILexicalBlock(scope: !3397, file: !200, line: 533, column: 10)
!3397 = distinct !DILexicalBlock(scope: !3392, file: !200, line: 532, column: 25)
!3398 = !DILocation(line: 533, column: 18, scope: !3396)
!3399 = !DILocation(line: 0, scope: !3400)
!3400 = distinct !DILexicalBlock(scope: !3314, file: !200, line: 569, column: 9)
!3401 = !DILocation(line: 0, scope: !3314)
!3402 = !DILocation(line: 579, column: 20, scope: !3314)
!3403 = !DILocation(line: 579, column: 11, scope: !3314)
!3404 = !DILocation(line: 580, column: 9, scope: !3314)
!3405 = !DILocation(line: 582, column: 21, scope: !3406)
!3406 = distinct !DILexicalBlock(scope: !3407, file: !200, line: 582, column: 10)
!3407 = distinct !DILexicalBlock(scope: !3408, file: !200, line: 580, column: 23)
!3408 = distinct !DILexicalBlock(scope: !3314, file: !200, line: 580, column: 9)
!3409 = !DILocation(line: 582, column: 28, scope: !3406)
!3410 = !DILocation(line: 582, column: 10, scope: !3407)
!3411 = !DILocation(line: 0, scope: !3412)
!3412 = distinct !DILexicalBlock(scope: !3413, file: !200, line: 587, column: 17)
!3413 = distinct !DILexicalBlock(scope: !3407, file: !200, line: 585, column: 10)
!3414 = !DILocation(line: 593, column: 9, scope: !3314)
!3415 = !DILocation(line: 600, column: 5, scope: !3315)
!3416 = !DILocation(line: 605, column: 18, scope: !3317)
!3417 = !DILocation(line: 605, column: 9, scope: !3317)
!3418 = !DILocation(line: 608, column: 20, scope: !3419)
!3419 = distinct !DILexicalBlock(scope: !3317, file: !200, line: 608, column: 7)
!3420 = !DILocation(line: 608, column: 23, scope: !3419)
!3421 = !DILocation(line: 608, column: 34, scope: !3419)
!3422 = !DILocation(line: 608, column: 41, scope: !3419)
!3423 = !DILocation(line: 608, column: 7, scope: !3317)
!3424 = !DILocation(line: 613, column: 7, scope: !3317)
!3425 = !DILocation(line: 614, column: 8, scope: !3323)
!3426 = !DILocation(line: 614, column: 4, scope: !3323)
!3427 = !DILocation(line: 256, column: 6, scope: !3267)
!3428 = !DILocation(line: 254, column: 15, scope: !3267)
!3429 = !DILocation(line: 320, column: 7, scope: !3430)
!3430 = distinct !DILexicalBlock(scope: !3360, file: !200, line: 305, column: 20)
!3431 = !DILocation(line: 615, column: 1, scope: !3323)
!3432 = !DILocation(line: 616, column: 8, scope: !3323)
!3433 = !DILocation(line: 617, column: 5, scope: !3434)
!3434 = distinct !DILexicalBlock(scope: !3435, file: !200, line: 616, column: 22)
!3435 = distinct !DILexicalBlock(scope: !3323, file: !200, line: 616, column: 8)
!3436 = !DILocation(line: 617, column: 25, scope: !3434)
!3437 = !DILocation(line: 618, column: 4, scope: !3434)
!3438 = !DILocation(line: 620, column: 26, scope: !3323)
!3439 = !DILocation(line: 620, column: 29, scope: !3323)
!3440 = !DILocation(line: 620, column: 17, scope: !3323)
!3441 = !DILocation(line: 620, column: 43, scope: !3323)
!3442 = !DILocation(line: 0, scope: !3323)
!3443 = !DILocation(line: 623, column: 14, scope: !3328)
!3444 = !DILocation(line: 626, column: 26, scope: !3327)
!3445 = !DILocation(line: 626, column: 37, scope: !3327)
!3446 = !DILocation(line: 0, scope: !3327)
!3447 = !DILocation(line: 634, column: 15, scope: !3448)
!3448 = distinct !DILexicalBlock(scope: !3327, file: !200, line: 634, column: 9)
!3449 = !DILocation(line: 635, column: 6, scope: !3450)
!3450 = distinct !DILexicalBlock(scope: !3451, file: !200, line: 635, column: 6)
!3451 = distinct !DILexicalBlock(scope: !3452, file: !200, line: 635, column: 6)
!3452 = distinct !DILexicalBlock(scope: !3453, file: !200, line: 635, column: 6)
!3453 = distinct !DILexicalBlock(scope: !3448, file: !200, line: 634, column: 44)
!3454 = !DILocation(line: 639, column: 15, scope: !3455)
!3455 = distinct !DILexicalBlock(scope: !3327, file: !200, line: 639, column: 9)
!3456 = !DILocation(line: 639, column: 9, scope: !3327)
!3457 = !DILocation(line: 640, column: 6, scope: !3458)
!3458 = distinct !DILexicalBlock(scope: !3459, file: !200, line: 640, column: 6)
!3459 = distinct !DILexicalBlock(scope: !3460, file: !200, line: 640, column: 6)
!3460 = distinct !DILexicalBlock(scope: !3461, file: !200, line: 640, column: 6)
!3461 = distinct !DILexicalBlock(scope: !3455, file: !200, line: 639, column: 43)
!3462 = !DILocation(line: 644, column: 9, scope: !3327)
!3463 = !DILocation(line: 649, column: 27, scope: !3464)
!3464 = distinct !DILexicalBlock(scope: !3465, file: !200, line: 644, column: 23)
!3465 = distinct !DILexicalBlock(scope: !3327, file: !200, line: 644, column: 9)
!3466 = !DILocation(line: 649, column: 6, scope: !3464)
!3467 = !DILocation(line: 649, column: 25, scope: !3464)
!3468 = !DILocation(line: 650, column: 27, scope: !3464)
!3469 = !DILocation(line: 650, column: 6, scope: !3464)
!3470 = !DILocation(line: 650, column: 25, scope: !3464)
!3471 = !DILocation(line: 651, column: 10, scope: !3464)
!3472 = !DILocation(line: 653, column: 26, scope: !3473)
!3473 = distinct !DILexicalBlock(scope: !3474, file: !200, line: 651, column: 17)
!3474 = distinct !DILexicalBlock(scope: !3464, file: !200, line: 651, column: 10)
!3475 = !DILocation(line: 654, column: 15, scope: !3473)
!3476 = !DILocation(line: 655, column: 6, scope: !3473)
!3477 = !DILocation(line: 656, column: 15, scope: !3478)
!3478 = distinct !DILexicalBlock(scope: !3474, file: !200, line: 655, column: 13)
!3479 = !DILocation(line: 658, column: 16, scope: !3465)
!3480 = !DILocation(line: 663, column: 10, scope: !3481)
!3481 = distinct !DILexicalBlock(scope: !3482, file: !200, line: 658, column: 23)
!3482 = distinct !DILexicalBlock(scope: !3465, file: !200, line: 658, column: 16)
!3483 = !DILocation(line: 664, column: 5, scope: !3481)
!3484 = !DILocation(line: 664, column: 16, scope: !3482)
!3485 = !DILocation(line: 669, column: 10, scope: !3486)
!3486 = distinct !DILexicalBlock(scope: !3487, file: !200, line: 664, column: 28)
!3487 = distinct !DILexicalBlock(scope: !3482, file: !200, line: 664, column: 16)
!3488 = !DILocation(line: 670, column: 5, scope: !3486)
!3489 = !DILocation(line: 675, column: 13, scope: !3490)
!3490 = distinct !DILexicalBlock(scope: !3487, file: !200, line: 670, column: 12)
!3491 = !DILocation(line: 675, column: 27, scope: !3490)
!3492 = !DILocation(line: 675, column: 10, scope: !3490)
!3493 = !DILocation(line: 678, column: 10, scope: !3327)
!3494 = !DILocation(line: 680, column: 8, scope: !3323)
!3495 = !DILocation(line: 683, column: 14, scope: !3324)
!3496 = !DILocation(line: 684, column: 12, scope: !3330)
!3497 = !DILocation(line: 0, scope: !3330)
!3498 = !DILocation(line: 686, column: 8, scope: !3330)
!3499 = !DILocation(line: 687, column: 5, scope: !3500)
!3500 = distinct !DILexicalBlock(scope: !3501, file: !200, line: 686, column: 22)
!3501 = distinct !DILexicalBlock(scope: !3330, file: !200, line: 686, column: 8)
!3502 = !DILocation(line: 687, column: 17, scope: !3500)
!3503 = !DILocation(line: 688, column: 4, scope: !3500)
!3504 = !DILocation(line: 698, column: 18, scope: !3336)
!3505 = !DILocation(line: 0, scope: !3336)
!3506 = !DILocation(line: 700, column: 8, scope: !3336)
!3507 = !DILocation(line: 704, column: 6, scope: !3508)
!3508 = distinct !DILexicalBlock(scope: !3509, file: !200, line: 703, column: 12)
!3509 = distinct !DILexicalBlock(scope: !3510, file: !200, line: 701, column: 9)
!3510 = distinct !DILexicalBlock(scope: !3511, file: !200, line: 700, column: 22)
!3511 = distinct !DILexicalBlock(scope: !3336, file: !200, line: 700, column: 8)
!3512 = !DILocation(line: 704, column: 24, scope: !3508)
!3513 = !DILocation(line: 706, column: 4, scope: !3510)
!3514 = !DILocation(line: 709, column: 4, scope: !3515)
!3515 = distinct !DILexicalBlock(scope: !3516, file: !200, line: 709, column: 4)
!3516 = distinct !DILexicalBlock(scope: !3517, file: !200, line: 709, column: 4)
!3517 = distinct !DILexicalBlock(scope: !3518, file: !200, line: 709, column: 4)
!3518 = distinct !DILexicalBlock(scope: !3337, file: !200, line: 708, column: 10)
!3519 = !DILocation(line: 0, scope: !3331)
!3520 = !DILocation(line: 0, scope: !3317)
!3521 = !DILocation(line: 720, column: 6, scope: !3522)
!3522 = distinct !DILexicalBlock(scope: !3267, file: !200, line: 720, column: 6)
!3523 = !DILocation(line: 720, column: 17, scope: !3522)
!3524 = !DILocation(line: 720, column: 31, scope: !3522)
!3525 = !DILocation(line: 720, column: 6, scope: !3267)
!3526 = !DILocation(line: 721, column: 3, scope: !3527)
!3527 = distinct !DILexicalBlock(scope: !3528, file: !200, line: 721, column: 3)
!3528 = distinct !DILexicalBlock(scope: !3529, file: !200, line: 721, column: 3)
!3529 = distinct !DILexicalBlock(scope: !3530, file: !200, line: 721, column: 3)
!3530 = distinct !DILexicalBlock(scope: !3522, file: !200, line: 720, column: 38)
!3531 = !DILocation(line: 729, column: 6, scope: !3267)
!3532 = !DILocation(line: 730, column: 21, scope: !3533)
!3533 = distinct !DILexicalBlock(scope: !3534, file: !200, line: 729, column: 20)
!3534 = distinct !DILexicalBlock(scope: !3267, file: !200, line: 729, column: 6)
!3535 = !DILocation(line: 730, column: 27, scope: !3533)
!3536 = !DILocation(line: 730, column: 3, scope: !3533)
!3537 = !DILocation(line: 737, column: 22, scope: !3267)
!3538 = !DILocation(line: 737, column: 20, scope: !3267)
!3539 = !DILocation(line: 0, scope: !3540)
!3540 = distinct !DILexicalBlock(scope: !3267, file: !200, line: 739, column: 6)
!3541 = !DILocation(line: 745, column: 17, scope: !3542)
!3542 = distinct !DILexicalBlock(scope: !3540, file: !200, line: 743, column: 9)
!3543 = !DILocation(line: 745, column: 25, scope: !3542)
!3544 = !DILocation(line: 746, column: 17, scope: !3542)
!3545 = !DILocation(line: 746, column: 28, scope: !3542)
!3546 = !DILocation(line: 749, column: 29, scope: !3267)
!3547 = !DILocation(line: 749, column: 16, scope: !3267)
!3548 = !DILocation(line: 749, column: 27, scope: !3267)
!3549 = !DILocation(line: 756, column: 6, scope: !3343)
!3550 = !DILocation(line: 756, column: 6, scope: !3267)
!3551 = !DILocation(line: 757, column: 3, scope: !3341)
!3552 = !DILocation(line: 758, column: 10, scope: !3553)
!3553 = distinct !DILexicalBlock(scope: !3339, file: !200, line: 758, column: 8)
!3554 = !DILocation(line: 758, column: 25, scope: !3553)
!3555 = !DILocation(line: 758, column: 8, scope: !3339)
!3556 = !DILocation(line: 0, scope: !3339)
!3557 = !DILocation(line: 765, column: 8, scope: !3558)
!3558 = distinct !DILexicalBlock(scope: !3339, file: !200, line: 765, column: 8)
!3559 = !DILocation(line: 765, column: 19, scope: !3558)
!3560 = !DILocation(line: 765, column: 23, scope: !3558)
!3561 = !DILocation(line: 765, column: 8, scope: !3339)
!3562 = !DILocation(line: 762, column: 33, scope: !3339)
!3563 = !DILocation(line: 769, column: 8, scope: !3339)
!3564 = !DILocation(line: 769, column: 11, scope: !3339)
!3565 = !DILocation(line: 757, column: 27, scope: !3340)
!3566 = !DILocation(line: 757, column: 17, scope: !3340)
!3567 = distinct !{!3567, !3551, !3568}
!3568 = !DILocation(line: 770, column: 3, scope: !3341)
!3569 = !DILocation(line: 774, column: 16, scope: !3570)
!3570 = distinct !DILexicalBlock(scope: !3571, file: !200, line: 774, column: 2)
!3571 = distinct !DILexicalBlock(scope: !3267, file: !200, line: 774, column: 2)
!3572 = !DILocation(line: 774, column: 2, scope: !3571)
!3573 = !DILocation(line: 776, column: 16, scope: !3574)
!3574 = distinct !DILexicalBlock(scope: !3575, file: !200, line: 776, column: 7)
!3575 = distinct !DILexicalBlock(scope: !3570, file: !200, line: 774, column: 30)
!3576 = !DILocation(line: 776, column: 19, scope: !3574)
!3577 = !DILocation(line: 776, column: 34, scope: !3574)
!3578 = !DILocation(line: 776, column: 7, scope: !3575)
!3579 = !DILocation(line: 780, column: 7, scope: !3575)
!3580 = !DILocation(line: 782, column: 13, scope: !3581)
!3581 = distinct !DILexicalBlock(scope: !3582, file: !200, line: 780, column: 19)
!3582 = distinct !DILexicalBlock(scope: !3575, file: !200, line: 780, column: 7)
!3583 = !DILocation(line: 782, column: 8, scope: !3581)
!3584 = !DILocation(line: 782, column: 11, scope: !3581)
!3585 = !DILocation(line: 783, column: 3, scope: !3581)
!3586 = !DILocation(line: 785, column: 26, scope: !3587)
!3587 = distinct !DILexicalBlock(scope: !3582, file: !200, line: 783, column: 10)
!3588 = !DILocation(line: 785, column: 41, scope: !3587)
!3589 = !DILocation(line: 785, column: 24, scope: !3587)
!3590 = !DILocation(line: 785, column: 8, scope: !3587)
!3591 = !DILocation(line: 787, column: 52, scope: !3587)
!3592 = !DILocation(line: 789, column: 11, scope: !3587)
!3593 = !DILocation(line: 789, column: 21, scope: !3587)
!3594 = !DILocation(line: 0, scope: !3582)
!3595 = !DILocation(line: 793, column: 7, scope: !3596)
!3596 = distinct !DILexicalBlock(scope: !3575, file: !200, line: 793, column: 7)
!3597 = !DILocation(line: 793, column: 18, scope: !3596)
!3598 = !DILocation(line: 793, column: 22, scope: !3596)
!3599 = !DILocation(line: 793, column: 29, scope: !3596)
!3600 = !DILocation(line: 793, column: 7, scope: !3575)
!3601 = !DILocation(line: 797, column: 12, scope: !3575)
!3602 = !DILocation(line: 797, column: 7, scope: !3575)
!3603 = !DILocation(line: 797, column: 10, scope: !3575)
!3604 = !DILocation(line: 799, column: 3, scope: !3575)
!3605 = !DILocation(line: 800, column: 7, scope: !3575)
!3606 = !DILocation(line: 801, column: 2, scope: !3575)
!3607 = !DILocation(line: 338, column: 4, scope: !3267)
!3608 = !DILocation(line: 774, column: 26, scope: !3570)
!3609 = distinct !{!3609, !3572, !3610}
!3610 = !DILocation(line: 801, column: 2, scope: !3571)
!3611 = !DILocation(line: 808, column: 9, scope: !3267)
!3612 = !DILocation(line: 808, column: 2, scope: !3267)
!3613 = !DILocation(line: 813, column: 1, scope: !3267)
!3614 = distinct !DISubprogram(name: "ptr_in_rodata", scope: !200, file: !200, line: 33, type: !3615, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3617)
!3615 = !DISubroutineType(types: !3616)
!3616 = !{!145, !118}
!3617 = !{!3618}
!3618 = !DILocalVariable(name: "addr", arg: 1, scope: !3614, file: !200, line: 33, type: !118)
!3619 = !DILocation(line: 0, scope: !3614)
!3620 = !DILocation(line: 41, column: 9, scope: !3614)
!3621 = !DILocation(line: 41, column: 2, scope: !3614)
!3622 = distinct !DISubprogram(name: "linker_is_in_rodata", scope: !3623, file: !3623, line: 24, type: !143, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3624)
!3623 = !DIFile(filename: "zephyr/include/zephyr/linker/utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3624 = !{!3625}
!3625 = !DILocalVariable(name: "addr", arg: 1, scope: !3622, file: !3623, line: 24, type: !13)
!3626 = !DILocation(line: 0, scope: !3622)
!3627 = !DILocation(line: 49, column: 30, scope: !3622)
!3628 = !DILocation(line: 49, column: 57, scope: !3622)
!3629 = !DILocation(line: 49, column: 2, scope: !3622)
!3630 = distinct !DISubprogram(name: "cbprintf_package", scope: !200, file: !200, line: 815, type: !3631, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3633)
!3631 = !DISubroutineType(types: !3632)
!3632 = !{!107, !106, !185, !152, !118, null}
!3633 = !{!3634, !3635, !3636, !3637, !3638, !3639}
!3634 = !DILocalVariable(name: "packaged", arg: 1, scope: !3630, file: !200, line: 815, type: !106)
!3635 = !DILocalVariable(name: "len", arg: 2, scope: !3630, file: !200, line: 815, type: !185)
!3636 = !DILocalVariable(name: "flags", arg: 3, scope: !3630, file: !200, line: 815, type: !152)
!3637 = !DILocalVariable(name: "format", arg: 4, scope: !3630, file: !200, line: 816, type: !118)
!3638 = !DILocalVariable(name: "ap", scope: !3630, file: !200, line: 818, type: !3270)
!3639 = !DILocalVariable(name: "ret", scope: !3630, file: !200, line: 819, type: !107)
!3640 = !DILocation(line: 0, scope: !3630)
!3641 = !DILocation(line: 818, column: 2, scope: !3630)
!3642 = !DILocation(line: 818, column: 10, scope: !3630)
!3643 = !DILocation(line: 821, column: 2, scope: !3630)
!3644 = !DILocation(line: 822, column: 8, scope: !3630)
!3645 = !DILocation(line: 823, column: 2, scope: !3630)
!3646 = !DILocation(line: 825, column: 1, scope: !3630)
!3647 = !DILocation(line: 824, column: 2, scope: !3630)
!3648 = distinct !DISubprogram(name: "cbpprintf_external", scope: !200, file: !200, line: 827, type: !3649, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3659)
!3649 = !DISubroutineType(types: !3650)
!3650 = !{!107, !3651, !3655, !106, !106}
!3651 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3303, line: 297, baseType: !3652)
!3652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3653, size: 32)
!3653 = !DISubroutineType(types: !3654)
!3654 = !{!107, null}
!3655 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbvprintf_external_formatter_func", file: !3303, line: 328, baseType: !3656)
!3656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3657, size: 32)
!3657 = !DISubroutineType(types: !3658)
!3658 = !{!107, !3651, !106, !118, !3270}
!3659 = !{!3660, !3661, !3662, !3663, !3664, !3665, !3671, !3672, !3673, !3674, !3675, !3676, !3677, !3678}
!3660 = !DILocalVariable(name: "out", arg: 1, scope: !3648, file: !200, line: 827, type: !3651)
!3661 = !DILocalVariable(name: "formatter", arg: 2, scope: !3648, file: !200, line: 828, type: !3655)
!3662 = !DILocalVariable(name: "ctx", arg: 3, scope: !3648, file: !200, line: 829, type: !106)
!3663 = !DILocalVariable(name: "packaged", arg: 4, scope: !3648, file: !200, line: 829, type: !106)
!3664 = !DILocalVariable(name: "buf", scope: !3648, file: !200, line: 831, type: !194)
!3665 = !DILocalVariable(name: "hdr", scope: !3648, file: !200, line: 832, type: !3666)
!3666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3667, size: 32)
!3667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_hdr_ext", file: !3303, line: 96, size: 64, elements: !3668)
!3668 = !{!3669, !3670}
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !3667, file: !3303, line: 98, baseType: !3302, size: 32)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !3667, file: !3303, line: 101, baseType: !193, size: 32, offset: 32)
!3671 = !DILocalVariable(name: "s", scope: !3648, file: !200, line: 833, type: !193)
!3672 = !DILocalVariable(name: "ps", scope: !3648, file: !200, line: 833, type: !192)
!3673 = !DILocalVariable(name: "i", scope: !3648, file: !200, line: 834, type: !32)
!3674 = !DILocalVariable(name: "args_size", scope: !3648, file: !200, line: 834, type: !32)
!3675 = !DILocalVariable(name: "s_nbr", scope: !3648, file: !200, line: 834, type: !32)
!3676 = !DILocalVariable(name: "ros_nbr", scope: !3648, file: !200, line: 834, type: !32)
!3677 = !DILocalVariable(name: "rws_nbr", scope: !3648, file: !200, line: 834, type: !32)
!3678 = !DILocalVariable(name: "s_idx", scope: !3648, file: !200, line: 834, type: !32)
!3679 = !DILocation(line: 0, scope: !3648)
!3680 = !DILocation(line: 836, column: 10, scope: !3681)
!3681 = distinct !DILexicalBlock(scope: !3648, file: !200, line: 836, column: 6)
!3682 = !DILocation(line: 836, column: 6, scope: !3648)
!3683 = !DILocation(line: 842, column: 28, scope: !3648)
!3684 = !DILocation(line: 842, column: 14, scope: !3648)
!3685 = !DILocation(line: 852, column: 16, scope: !3686)
!3686 = distinct !DILexicalBlock(scope: !3687, file: !200, line: 852, column: 2)
!3687 = distinct !DILexicalBlock(scope: !3648, file: !200, line: 852, column: 2)
!3688 = !DILocation(line: 852, column: 2, scope: !3687)
!3689 = !DILocation(line: 841, column: 28, scope: !3648)
!3690 = !DILocation(line: 841, column: 14, scope: !3648)
!3691 = !DILocation(line: 841, column: 32, scope: !3648)
!3692 = !DILocation(line: 847, column: 19, scope: !3648)
!3693 = !DILocation(line: 843, column: 28, scope: !3648)
!3694 = !DILocation(line: 843, column: 14, scope: !3648)
!3695 = !DILocation(line: 847, column: 31, scope: !3648)
!3696 = !DILocation(line: 844, column: 28, scope: !3648)
!3697 = !DILocation(line: 844, column: 14, scope: !3648)
!3698 = !DILocation(line: 847, column: 45, scope: !3648)
!3699 = !DILocation(line: 847, column: 41, scope: !3648)
!3700 = !DILocation(line: 854, column: 24, scope: !3701)
!3701 = distinct !DILexicalBlock(scope: !3686, file: !200, line: 852, column: 30)
!3702 = !DILocation(line: 854, column: 11, scope: !3701)
!3703 = !DILocation(line: 855, column: 30, scope: !3701)
!3704 = !DILocation(line: 855, column: 22, scope: !3701)
!3705 = !DILocation(line: 855, column: 8, scope: !3701)
!3706 = !DILocation(line: 857, column: 7, scope: !3701)
!3707 = !DILocation(line: 859, column: 8, scope: !3701)
!3708 = !DILocation(line: 859, column: 18, scope: !3701)
!3709 = !DILocation(line: 859, column: 5, scope: !3701)
!3710 = !DILocation(line: 852, column: 26, scope: !3686)
!3711 = distinct !{!3711, !3688, !3712}
!3712 = !DILocation(line: 860, column: 2, scope: !3687)
!3713 = !DILocation(line: 863, column: 6, scope: !3648)
!3714 = !DILocation(line: 866, column: 56, scope: !3648)
!3715 = !DILocation(line: 866, column: 9, scope: !3648)
!3716 = !DILocation(line: 866, column: 2, scope: !3648)
!3717 = !DILocation(line: 867, column: 1, scope: !3648)
!3718 = distinct !DISubprogram(name: "cbprintf_via_va_list", scope: !200, file: !200, line: 179, type: !3719, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3721)
!3719 = !DISubroutineType(types: !3720)
!3720 = !{!107, !3651, !3655, !106, !118, !106}
!3721 = !{!3722, !3723, !3724, !3725, !3726, !3727}
!3722 = !DILocalVariable(name: "out", arg: 1, scope: !3718, file: !200, line: 179, type: !3651)
!3723 = !DILocalVariable(name: "formatter", arg: 2, scope: !3718, file: !200, line: 180, type: !3655)
!3724 = !DILocalVariable(name: "ctx", arg: 3, scope: !3718, file: !200, line: 181, type: !106)
!3725 = !DILocalVariable(name: "fmt", arg: 4, scope: !3718, file: !200, line: 182, type: !118)
!3726 = !DILocalVariable(name: "buf", arg: 5, scope: !3718, file: !200, line: 182, type: !106)
!3727 = !DILocalVariable(name: "u", scope: !3718, file: !200, line: 187, type: !3728)
!3728 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3718, file: !200, line: 184, size: 32, elements: !3729)
!3729 = !{!3730, !3731}
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !3728, file: !200, line: 185, baseType: !3270, size: 32)
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3728, file: !200, line: 186, baseType: !106, size: 32)
!3732 = !DILocation(line: 0, scope: !3718)
!3733 = !DILocation(line: 191, column: 9, scope: !3718)
!3734 = !DILocation(line: 191, column: 2, scope: !3718)
!3735 = distinct !DISubprogram(name: "is_ptr", scope: !200, file: !200, line: 881, type: !3736, scopeLine: 882, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3738)
!3736 = !DISubroutineType(types: !3737)
!3737 = !{!145, !118, !107}
!3738 = !{!3739, !3740, !3741, !3742, !3743}
!3739 = !DILocalVariable(name: "fmt", arg: 1, scope: !3735, file: !200, line: 881, type: !118)
!3740 = !DILocalVariable(name: "n", arg: 2, scope: !3735, file: !200, line: 881, type: !107)
!3741 = !DILocalVariable(name: "c", scope: !3735, file: !200, line: 883, type: !120)
!3742 = !DILocalVariable(name: "mod", scope: !3735, file: !200, line: 884, type: !145)
!3743 = !DILocalVariable(name: "cnt", scope: !3735, file: !200, line: 885, type: !107)
!3744 = !DILocation(line: 0, scope: !3735)
!3745 = !DILocation(line: 887, column: 14, scope: !3735)
!3746 = !DILocation(line: 887, column: 22, scope: !3735)
!3747 = !DILocation(line: 887, column: 2, scope: !3735)
!3748 = !DILocation(line: 887, column: 18, scope: !3735)
!3749 = !DILocation(line: 888, column: 7, scope: !3750)
!3750 = distinct !DILexicalBlock(scope: !3735, file: !200, line: 887, column: 31)
!3751 = !DILocation(line: 889, column: 12, scope: !3752)
!3752 = distinct !DILexicalBlock(scope: !3753, file: !200, line: 889, column: 8)
!3753 = distinct !DILexicalBlock(scope: !3754, file: !200, line: 888, column: 12)
!3754 = distinct !DILexicalBlock(scope: !3750, file: !200, line: 888, column: 7)
!3755 = !DILocation(line: 889, column: 8, scope: !3753)
!3756 = !DILocation(line: 890, column: 11, scope: !3757)
!3757 = distinct !DILexicalBlock(scope: !3758, file: !200, line: 890, column: 9)
!3758 = distinct !DILexicalBlock(scope: !3752, file: !200, line: 889, column: 18)
!3759 = !DILocation(line: 890, column: 9, scope: !3758)
!3760 = !DILocation(line: 892, column: 16, scope: !3761)
!3761 = distinct !DILexicalBlock(scope: !3757, file: !200, line: 892, column: 16)
!3762 = !DILocation(line: 892, column: 16, scope: !3757)
!3763 = !DILocation(line: 895, column: 15, scope: !3764)
!3764 = distinct !DILexicalBlock(scope: !3752, file: !200, line: 895, column: 15)
!3765 = !DILocation(line: 895, column: 15, scope: !3752)
!3766 = !DILocation(line: 900, column: 9, scope: !3767)
!3767 = distinct !DILexicalBlock(scope: !3750, file: !200, line: 900, column: 7)
!3768 = !DILocation(line: 900, column: 7, scope: !3750)
!3769 = distinct !{!3769, !3747, !3770}
!3770 = !DILocation(line: 903, column: 2, scope: !3735)
!3771 = !DILocation(line: 906, column: 1, scope: !3735)
!3772 = distinct !DISubprogram(name: "is_fmt_spec", scope: !200, file: !200, line: 873, type: !3773, scopeLine: 874, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3775)
!3773 = !DISubroutineType(types: !3774)
!3774 = !{!145, !120}
!3775 = !{!3776}
!3776 = !DILocalVariable(name: "c", arg: 1, scope: !3772, file: !200, line: 873, type: !120)
!3777 = !DILocation(line: 0, scope: !3772)
!3778 = !DILocation(line: 875, column: 19, scope: !3772)
!3779 = !DILocation(line: 875, column: 2, scope: !3772)
!3780 = distinct !DISubprogram(name: "cbprintf_package_convert", scope: !200, file: !200, line: 908, type: !3781, scopeLine: 915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3787)
!3781 = !DISubroutineType(types: !3782)
!3782 = !{!107, !106, !185, !3783, !106, !152, !2856, !185}
!3783 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_convert_cb", file: !3303, line: 308, baseType: !3784)
!3784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3785, size: 32)
!3785 = !DISubroutineType(types: !3786)
!3786 = !{!107, !13, !185, !106}
!3787 = !{!3788, !3789, !3790, !3791, !3792, !3793, !3794, !3795, !3796, !3797, !3798, !3799, !3800, !3801, !3802, !3803, !3805, !3806, !3807, !3808, !3809, !3815, !3818, !3819, !3820, !3822, !3825, !3826, !3827, !3828, !3829, !3830, !3831, !3832, !3833, !3834, !3835, !3836, !3838, !3841, !3842, !3843, !3844, !3845, !3846, !3848, !3851, !3852, !3853}
!3788 = !DILocalVariable(name: "in_packaged", arg: 1, scope: !3780, file: !200, line: 908, type: !106)
!3789 = !DILocalVariable(name: "in_len", arg: 2, scope: !3780, file: !200, line: 909, type: !185)
!3790 = !DILocalVariable(name: "cb", arg: 3, scope: !3780, file: !200, line: 910, type: !3783)
!3791 = !DILocalVariable(name: "ctx", arg: 4, scope: !3780, file: !200, line: 911, type: !106)
!3792 = !DILocalVariable(name: "flags", arg: 5, scope: !3780, file: !200, line: 912, type: !152)
!3793 = !DILocalVariable(name: "strl", arg: 6, scope: !3780, file: !200, line: 913, type: !2856)
!3794 = !DILocalVariable(name: "strl_len", arg: 7, scope: !3780, file: !200, line: 914, type: !185)
!3795 = !DILocalVariable(name: "buf", scope: !3780, file: !200, line: 918, type: !194)
!3796 = !DILocalVariable(name: "buf32", scope: !3780, file: !200, line: 919, type: !1032)
!3797 = !DILocalVariable(name: "args_size", scope: !3780, file: !200, line: 920, type: !32)
!3798 = !DILocalVariable(name: "ros_nbr", scope: !3780, file: !200, line: 920, type: !32)
!3799 = !DILocalVariable(name: "rws_nbr", scope: !3780, file: !200, line: 920, type: !32)
!3800 = !DILocalVariable(name: "fmt_present", scope: !3780, file: !200, line: 921, type: !145)
!3801 = !DILocalVariable(name: "rw_cpy", scope: !3780, file: !200, line: 922, type: !145)
!3802 = !DILocalVariable(name: "ro_cpy", scope: !3780, file: !200, line: 923, type: !145)
!3803 = !DILocalVariable(name: "in_desc", scope: !3780, file: !200, line: 924, type: !3804)
!3804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3306, size: 32)
!3805 = !DILocalVariable(name: "out_len", scope: !3780, file: !200, line: 960, type: !107)
!3806 = !DILocalVariable(name: "fmt", scope: !3780, file: !200, line: 965, type: !118)
!3807 = !DILocalVariable(name: "str_pos", scope: !3780, file: !200, line: 966, type: !194)
!3808 = !DILocalVariable(name: "strl_cnt", scope: !3780, file: !200, line: 967, type: !185)
!3809 = !DILocalVariable(name: "i", scope: !3810, file: !200, line: 973, type: !107)
!3810 = distinct !DILexicalBlock(scope: !3811, file: !200, line: 973, column: 4)
!3811 = distinct !DILexicalBlock(scope: !3812, file: !200, line: 972, column: 15)
!3812 = distinct !DILexicalBlock(scope: !3813, file: !200, line: 972, column: 7)
!3813 = distinct !DILexicalBlock(scope: !3814, file: !200, line: 970, column: 18)
!3814 = distinct !DILexicalBlock(scope: !3780, file: !200, line: 970, column: 6)
!3815 = !DILocalVariable(name: "str", scope: !3816, file: !200, line: 974, type: !118)
!3816 = distinct !DILexicalBlock(scope: !3817, file: !200, line: 973, column: 38)
!3817 = distinct !DILexicalBlock(scope: !3810, file: !200, line: 973, column: 4)
!3818 = !DILocalVariable(name: "len", scope: !3816, file: !200, line: 975, type: !107)
!3819 = !DILocalVariable(name: "drop_ro_str_pos", scope: !3813, file: !200, line: 990, type: !145)
!3820 = !DILocalVariable(name: "i", scope: !3821, file: !200, line: 995, type: !107)
!3821 = distinct !DILexicalBlock(scope: !3813, file: !200, line: 995, column: 3)
!3822 = !DILocalVariable(name: "arg_idx", scope: !3823, file: !200, line: 996, type: !195)
!3823 = distinct !DILexicalBlock(scope: !3824, file: !200, line: 995, column: 37)
!3824 = distinct !DILexicalBlock(scope: !3821, file: !200, line: 995, column: 3)
!3825 = !DILocalVariable(name: "arg_pos", scope: !3823, file: !200, line: 997, type: !195)
!3826 = !DILocalVariable(name: "str", scope: !3823, file: !200, line: 998, type: !118)
!3827 = !DILocalVariable(name: "is_ro", scope: !3823, file: !200, line: 999, type: !145)
!3828 = !DILocalVariable(name: "len", scope: !3823, file: !200, line: 1000, type: !107)
!3829 = !DILocalVariable(name: "out_desc", scope: !3780, file: !200, line: 1038, type: !3306)
!3830 = !DILocalVariable(name: "cpy_str_pos", scope: !3780, file: !200, line: 1040, type: !3288)
!3831 = !DILocalVariable(name: "keep_str_pos", scope: !3780, file: !200, line: 1042, type: !3288)
!3832 = !DILocalVariable(name: "scpy_cnt", scope: !3780, file: !200, line: 1043, type: !195)
!3833 = !DILocalVariable(name: "keep_cnt", scope: !3780, file: !200, line: 1044, type: !195)
!3834 = !DILocalVariable(name: "dst", scope: !3780, file: !200, line: 1045, type: !194)
!3835 = !DILocalVariable(name: "rv", scope: !3780, file: !200, line: 1046, type: !107)
!3836 = !DILocalVariable(name: "i", scope: !3837, file: !200, line: 1074, type: !107)
!3837 = distinct !DILexicalBlock(scope: !3780, file: !200, line: 1074, column: 2)
!3838 = !DILocalVariable(name: "arg_idx", scope: !3839, file: !200, line: 1075, type: !195)
!3839 = distinct !DILexicalBlock(scope: !3840, file: !200, line: 1074, column: 36)
!3840 = distinct !DILexicalBlock(scope: !3837, file: !200, line: 1074, column: 2)
!3841 = !DILocalVariable(name: "arg_pos", scope: !3839, file: !200, line: 1076, type: !195)
!3842 = !DILocalVariable(name: "str", scope: !3839, file: !200, line: 1077, type: !118)
!3843 = !DILocalVariable(name: "is_ro", scope: !3839, file: !200, line: 1078, type: !145)
!3844 = !DILocalVariable(name: "in_desc_backup", scope: !3780, file: !200, line: 1114, type: !3306)
!3845 = !DILocalVariable(name: "strs_len", scope: !3780, file: !200, line: 1134, type: !185)
!3846 = !DILocalVariable(name: "i", scope: !3847, file: !200, line: 1143, type: !107)
!3847 = distinct !DILexicalBlock(scope: !3780, file: !200, line: 1143, column: 2)
!3848 = !DILocalVariable(name: "loc", scope: !3849, file: !200, line: 1144, type: !195)
!3849 = distinct !DILexicalBlock(scope: !3850, file: !200, line: 1143, column: 37)
!3850 = distinct !DILexicalBlock(scope: !3847, file: !200, line: 1143, column: 2)
!3851 = !DILocalVariable(name: "str", scope: !3849, file: !200, line: 1145, type: !118)
!3852 = !DILocalVariable(name: "str_len", scope: !3849, file: !200, line: 1146, type: !197)
!3853 = !DILabel(scope: !3854, name: "calculate_string_length", file: !200, line: 1021)
!3854 = distinct !DILexicalBlock(scope: !3855, file: !200, line: 1020, column: 56)
!3855 = distinct !DILexicalBlock(scope: !3856, file: !200, line: 1020, column: 15)
!3856 = distinct !DILexicalBlock(scope: !3823, file: !200, line: 1014, column: 8)
!3857 = !DILocation(line: 0, scope: !3780)
!3858 = !DILocation(line: 916, column: 2, scope: !3859)
!3859 = distinct !DILexicalBlock(scope: !3860, file: !200, line: 916, column: 2)
!3860 = distinct !DILexicalBlock(scope: !3780, file: !200, line: 916, column: 2)
!3861 = !DILocation(line: 916, column: 2, scope: !3860)
!3862 = !DILocation(line: 916, column: 2, scope: !3863)
!3863 = distinct !DILexicalBlock(scope: !3859, file: !200, line: 916, column: 2)
!3864 = !DILocation(line: 919, column: 20, scope: !3780)
!3865 = !DILocation(line: 921, column: 27, scope: !3780)
!3866 = !DILocation(line: 921, column: 21, scope: !3780)
!3867 = !DILocation(line: 926, column: 18, scope: !3780)
!3868 = !DILocation(line: 926, column: 11, scope: !3780)
!3869 = !DILocation(line: 926, column: 34, scope: !3780)
!3870 = !DILocation(line: 931, column: 21, scope: !3780)
!3871 = !DILocation(line: 931, column: 12, scope: !3780)
!3872 = !DILocation(line: 932, column: 11, scope: !3780)
!3873 = !DILocation(line: 932, column: 19, scope: !3780)
!3874 = !DILocation(line: 938, column: 21, scope: !3780)
!3875 = !DILocation(line: 938, column: 12, scope: !3780)
!3876 = !DILocation(line: 939, column: 19, scope: !3780)
!3877 = !DILocation(line: 939, column: 23, scope: !3780)
!3878 = !DILocation(line: 946, column: 14, scope: !3879)
!3879 = distinct !DILexicalBlock(scope: !3780, file: !200, line: 946, column: 6)
!3880 = !DILocation(line: 947, column: 7, scope: !3881)
!3881 = distinct !DILexicalBlock(scope: !3882, file: !200, line: 947, column: 7)
!3882 = distinct !DILexicalBlock(scope: !3879, file: !200, line: 946, column: 26)
!3883 = !DILocation(line: 947, column: 7, scope: !3882)
!3884 = !DILocation(line: 948, column: 4, scope: !3885)
!3885 = distinct !DILexicalBlock(scope: !3881, file: !200, line: 947, column: 11)
!3886 = !DILocation(line: 949, column: 3, scope: !3885)
!3887 = !DILocation(line: 958, column: 23, scope: !3780)
!3888 = !DILocation(line: 958, column: 14, scope: !3780)
!3889 = !DILocation(line: 958, column: 27, scope: !3780)
!3890 = !DILocation(line: 965, column: 41, scope: !3780)
!3891 = !DILocation(line: 965, column: 20, scope: !3780)
!3892 = !DILocation(line: 966, column: 22, scope: !3780)
!3893 = !DILocation(line: 970, column: 9, scope: !3814)
!3894 = !DILocation(line: 970, column: 6, scope: !3780)
!3895 = !DILocation(line: 972, column: 7, scope: !3813)
!3896 = !DILocation(line: 0, scope: !3810)
!3897 = !DILocation(line: 973, column: 4, scope: !3810)
!3898 = !DILocation(line: 974, column: 46, scope: !3816)
!3899 = !DILocation(line: 974, column: 40, scope: !3816)
!3900 = !DILocation(line: 974, column: 23, scope: !3816)
!3901 = !DILocation(line: 0, scope: !3816)
!3902 = !DILocation(line: 975, column: 15, scope: !3816)
!3903 = !DILocation(line: 978, column: 14, scope: !3904)
!3904 = distinct !DILexicalBlock(scope: !3816, file: !200, line: 978, column: 9)
!3905 = !DILocation(line: 979, column: 25, scope: !3906)
!3906 = distinct !DILexicalBlock(scope: !3904, file: !200, line: 978, column: 38)
!3907 = !DILocation(line: 979, column: 19, scope: !3906)
!3908 = !DILocation(line: 979, column: 6, scope: !3906)
!3909 = !DILocation(line: 979, column: 23, scope: !3906)
!3910 = !DILocation(line: 980, column: 5, scope: !3906)
!3911 = !DILocation(line: 981, column: 13, scope: !3816)
!3912 = !DILocation(line: 982, column: 12, scope: !3816)
!3913 = !DILocation(line: 973, column: 34, scope: !3817)
!3914 = !DILocation(line: 973, column: 22, scope: !3817)
!3915 = distinct !{!3915, !3897, !3916}
!3916 = !DILocation(line: 983, column: 4, scope: !3810)
!3917 = !DILocation(line: 985, column: 16, scope: !3918)
!3918 = distinct !DILexicalBlock(scope: !3919, file: !200, line: 985, column: 8)
!3919 = distinct !DILexicalBlock(scope: !3812, file: !200, line: 984, column: 10)
!3920 = !DILocation(line: 967, column: 9, scope: !3780)
!3921 = !DILocation(line: 971, column: 11, scope: !3813)
!3922 = !DILocation(line: 0, scope: !3813)
!3923 = !DILocation(line: 0, scope: !3821)
!3924 = !DILocation(line: 995, column: 21, scope: !3824)
!3925 = !DILocation(line: 995, column: 3, scope: !3821)
!3926 = !DILocation(line: 990, column: 34, scope: !3813)
!3927 = !DILocation(line: 990, column: 26, scope: !3813)
!3928 = !DILocation(line: 996, column: 30, scope: !3823)
!3929 = !DILocation(line: 0, scope: !3823)
!3930 = !DILocation(line: 997, column: 30, scope: !3823)
!3931 = !DILocation(line: 997, column: 22, scope: !3823)
!3932 = !DILocation(line: 998, column: 39, scope: !3823)
!3933 = !DILocation(line: 998, column: 22, scope: !3823)
!3934 = !DILocation(line: 999, column: 17, scope: !3823)
!3935 = !DILocation(line: 1002, column: 20, scope: !3936)
!3936 = distinct !DILexicalBlock(scope: !3823, file: !200, line: 1002, column: 8)
!3937 = !DILocation(line: 996, column: 22, scope: !3823)
!3938 = !DILocation(line: 1002, column: 35, scope: !3936)
!3939 = !DILocation(line: 1002, column: 23, scope: !3936)
!3940 = !DILocation(line: 1002, column: 8, scope: !3823)
!3941 = !DILocation(line: 1003, column: 5, scope: !3942)
!3942 = distinct !DILexicalBlock(scope: !3943, file: !200, line: 1003, column: 5)
!3943 = distinct !DILexicalBlock(scope: !3944, file: !200, line: 1003, column: 5)
!3944 = distinct !DILexicalBlock(scope: !3945, file: !200, line: 1003, column: 5)
!3945 = distinct !DILexicalBlock(scope: !3946, file: !200, line: 1003, column: 5)
!3946 = distinct !DILexicalBlock(scope: !3936, file: !200, line: 1002, column: 45)
!3947 = !DILocation(line: 1010, column: 13, scope: !3946)
!3948 = !DILocation(line: 1011, column: 5, scope: !3946)
!3949 = !DILocation(line: 1014, column: 8, scope: !3823)
!3950 = !DILocation(line: 1015, column: 9, scope: !3951)
!3951 = distinct !DILexicalBlock(scope: !3856, file: !200, line: 1014, column: 15)
!3952 = !DILocation(line: 1018, column: 14, scope: !3953)
!3953 = distinct !DILexicalBlock(scope: !3954, file: !200, line: 1017, column: 12)
!3954 = distinct !DILexicalBlock(scope: !3951, file: !200, line: 1015, column: 9)
!3955 = !DILocation(line: 1020, column: 4, scope: !3951)
!3956 = !DILocation(line: 1020, column: 15, scope: !3856)
!3957 = !DILocation(line: 1021, column: 1, scope: !3854)
!3958 = !DILocation(line: 1022, column: 11, scope: !3854)
!3959 = !DILocation(line: 1025, column: 14, scope: !3960)
!3960 = distinct !DILexicalBlock(scope: !3854, file: !200, line: 1025, column: 9)
!3961 = !DILocation(line: 1026, column: 25, scope: !3962)
!3962 = distinct !DILexicalBlock(scope: !3960, file: !200, line: 1025, column: 38)
!3963 = !DILocation(line: 1026, column: 19, scope: !3962)
!3964 = !DILocation(line: 1026, column: 6, scope: !3962)
!3965 = !DILocation(line: 1026, column: 23, scope: !3962)
!3966 = !DILocation(line: 1027, column: 5, scope: !3962)
!3967 = !DILocation(line: 1031, column: 21, scope: !3854)
!3968 = !DILocation(line: 1031, column: 13, scope: !3854)
!3969 = !DILocation(line: 1032, column: 4, scope: !3854)
!3970 = !DILocation(line: 995, column: 33, scope: !3824)
!3971 = distinct !{!3971, !3925, !3972}
!3972 = !DILocation(line: 1033, column: 3, scope: !3821)
!3973 = !DILocation(line: 1040, column: 10, scope: !3780)
!3974 = !DILocation(line: 1042, column: 10, scope: !3780)
!3975 = !DILocation(line: 1052, column: 6, scope: !3780)
!3976 = !DILocation(line: 1055, column: 9, scope: !3977)
!3977 = distinct !DILexicalBlock(scope: !3978, file: !200, line: 1052, column: 14)
!3978 = distinct !DILexicalBlock(scope: !3780, file: !200, line: 1052, column: 6)
!3979 = !DILocation(line: 1056, column: 2, scope: !3977)
!3980 = !DILocation(line: 1056, column: 21, scope: !3981)
!3981 = distinct !DILexicalBlock(scope: !3978, file: !200, line: 1056, column: 13)
!3982 = !DILocation(line: 1066, column: 3, scope: !3983)
!3983 = distinct !DILexicalBlock(scope: !3984, file: !200, line: 1065, column: 11)
!3984 = distinct !DILexicalBlock(scope: !3780, file: !200, line: 1065, column: 6)
!3985 = !DILocation(line: 1067, column: 2, scope: !3983)
!3986 = !DILocation(line: 1068, column: 10, scope: !3780)
!3987 = !DILocation(line: 0, scope: !3837)
!3988 = !DILocation(line: 1074, column: 20, scope: !3840)
!3989 = !DILocation(line: 1074, column: 2, scope: !3837)
!3990 = !DILocation(line: 1110, column: 24, scope: !3780)
!3991 = !DILocation(line: 1053, column: 12, scope: !3977)
!3992 = !DILocation(line: 1054, column: 12, scope: !3977)
!3993 = !DILocation(line: 1108, column: 30, scope: !3780)
!3994 = !DILocation(line: 1108, column: 40, scope: !3780)
!3995 = !DILocation(line: 1108, column: 38, scope: !3780)
!3996 = !DILocation(line: 1109, column: 31, scope: !3780)
!3997 = !DILocation(line: 1109, column: 24, scope: !3780)
!3998 = !DILocation(line: 1110, column: 31, scope: !3780)
!3999 = !DILocation(line: 1114, column: 31, scope: !3780)
!4000 = !DILocation(line: 1114, column: 48, scope: !3780)
!4001 = !DILocation(line: 1115, column: 13, scope: !3780)
!4002 = !DILocation(line: 1118, column: 7, scope: !3780)
!4003 = !DILocation(line: 1119, column: 9, scope: !4004)
!4004 = distinct !DILexicalBlock(scope: !3780, file: !200, line: 1119, column: 6)
!4005 = !DILocation(line: 1119, column: 6, scope: !3780)
!4006 = !DILocation(line: 1075, column: 29, scope: !3839)
!4007 = !DILocation(line: 1075, column: 21, scope: !3839)
!4008 = !DILocation(line: 0, scope: !3839)
!4009 = !DILocation(line: 1076, column: 29, scope: !3839)
!4010 = !DILocation(line: 1076, column: 21, scope: !3839)
!4011 = !DILocation(line: 1077, column: 38, scope: !3839)
!4012 = !DILocation(line: 1077, column: 21, scope: !3839)
!4013 = !DILocation(line: 1078, column: 16, scope: !3839)
!4014 = !DILocation(line: 1080, column: 19, scope: !4015)
!4015 = distinct !DILexicalBlock(scope: !3839, file: !200, line: 1080, column: 7)
!4016 = !DILocation(line: 1080, column: 34, scope: !4015)
!4017 = !DILocation(line: 1080, column: 22, scope: !4015)
!4018 = !DILocation(line: 1080, column: 7, scope: !3839)
!4019 = !DILocation(line: 1084, column: 7, scope: !3839)
!4020 = !DILocation(line: 1085, column: 8, scope: !4021)
!4021 = distinct !DILexicalBlock(scope: !4022, file: !200, line: 1084, column: 14)
!4022 = distinct !DILexicalBlock(scope: !3839, file: !200, line: 1084, column: 7)
!4023 = !DILocation(line: 1086, column: 5, scope: !4024)
!4024 = distinct !DILexicalBlock(scope: !4025, file: !200, line: 1086, column: 5)
!4025 = distinct !DILexicalBlock(scope: !4026, file: !200, line: 1086, column: 5)
!4026 = distinct !DILexicalBlock(scope: !4027, file: !200, line: 1085, column: 49)
!4027 = distinct !DILexicalBlock(scope: !4021, file: !200, line: 1085, column: 8)
!4028 = !DILocation(line: 1086, column: 5, scope: !4025)
!4029 = !DILocation(line: 1086, column: 5, scope: !4030)
!4030 = distinct !DILexicalBlock(scope: !4024, file: !200, line: 1086, column: 5)
!4031 = !DILocation(line: 1087, column: 25, scope: !4026)
!4032 = !DILocation(line: 1087, column: 5, scope: !4026)
!4033 = !DILocation(line: 1088, column: 4, scope: !4026)
!4034 = !DILocation(line: 1088, column: 15, scope: !4027)
!4035 = !DILocation(line: 1089, column: 5, scope: !4036)
!4036 = distinct !DILexicalBlock(scope: !4037, file: !200, line: 1089, column: 5)
!4037 = distinct !DILexicalBlock(scope: !4038, file: !200, line: 1089, column: 5)
!4038 = distinct !DILexicalBlock(scope: !4039, file: !200, line: 1088, column: 61)
!4039 = distinct !DILexicalBlock(scope: !4027, file: !200, line: 1088, column: 15)
!4040 = !DILocation(line: 1089, column: 5, scope: !4037)
!4041 = !DILocation(line: 1089, column: 5, scope: !4042)
!4042 = distinct !DILexicalBlock(scope: !4036, file: !200, line: 1089, column: 5)
!4043 = !DILocation(line: 1090, column: 26, scope: !4038)
!4044 = !DILocation(line: 1090, column: 5, scope: !4038)
!4045 = !DILocation(line: 1091, column: 4, scope: !4038)
!4046 = !DILocation(line: 1095, column: 8, scope: !4047)
!4047 = distinct !DILexicalBlock(scope: !4022, file: !200, line: 1094, column: 10)
!4048 = !DILocation(line: 1096, column: 5, scope: !4049)
!4049 = distinct !DILexicalBlock(scope: !4050, file: !200, line: 1096, column: 5)
!4050 = distinct !DILexicalBlock(scope: !4051, file: !200, line: 1096, column: 5)
!4051 = distinct !DILexicalBlock(scope: !4052, file: !200, line: 1095, column: 49)
!4052 = distinct !DILexicalBlock(scope: !4047, file: !200, line: 1095, column: 8)
!4053 = !DILocation(line: 1096, column: 5, scope: !4050)
!4054 = !DILocation(line: 1096, column: 5, scope: !4055)
!4055 = distinct !DILexicalBlock(scope: !4049, file: !200, line: 1096, column: 5)
!4056 = !DILocation(line: 1097, column: 25, scope: !4051)
!4057 = !DILocation(line: 1097, column: 5, scope: !4051)
!4058 = !DILocation(line: 1098, column: 4, scope: !4051)
!4059 = !DILocation(line: 1099, column: 5, scope: !4060)
!4060 = distinct !DILexicalBlock(scope: !4061, file: !200, line: 1099, column: 5)
!4061 = distinct !DILexicalBlock(scope: !4062, file: !200, line: 1099, column: 5)
!4062 = distinct !DILexicalBlock(scope: !4052, file: !200, line: 1098, column: 11)
!4063 = !DILocation(line: 1099, column: 5, scope: !4061)
!4064 = !DILocation(line: 1099, column: 5, scope: !4065)
!4065 = distinct !DILexicalBlock(scope: !4060, file: !200, line: 1099, column: 5)
!4066 = !DILocation(line: 1100, column: 26, scope: !4062)
!4067 = !DILocation(line: 1100, column: 5, scope: !4062)
!4068 = !DILocation(line: 1100, column: 30, scope: !4062)
!4069 = !DILocation(line: 1101, column: 26, scope: !4062)
!4070 = !DILocation(line: 1101, column: 5, scope: !4062)
!4071 = !DILocation(line: 0, scope: !4022)
!4072 = !DILocation(line: 1074, column: 32, scope: !3840)
!4073 = distinct !{!4073, !3989, !4074}
!4074 = !DILocation(line: 1104, column: 2, scope: !3837)
!4075 = !DILocation(line: 1124, column: 13, scope: !3780)
!4076 = !DILocation(line: 1127, column: 10, scope: !3780)
!4077 = !DILocation(line: 1127, column: 7, scope: !3780)
!4078 = !DILocation(line: 1128, column: 9, scope: !4079)
!4079 = distinct !DILexicalBlock(scope: !3780, file: !200, line: 1128, column: 6)
!4080 = !DILocation(line: 1128, column: 6, scope: !3780)
!4081 = !DILocation(line: 1134, column: 27, scope: !3780)
!4082 = !DILocation(line: 1136, column: 7, scope: !3780)
!4083 = !DILocation(line: 1137, column: 9, scope: !4084)
!4084 = distinct !DILexicalBlock(scope: !3780, file: !200, line: 1137, column: 6)
!4085 = !DILocation(line: 1137, column: 6, scope: !3780)
!4086 = !DILocation(line: 1131, column: 10, scope: !3780)
!4087 = !DILocation(line: 1140, column: 10, scope: !3780)
!4088 = !DILocation(line: 0, scope: !3847)
!4089 = !DILocation(line: 1143, column: 20, scope: !3850)
!4090 = !DILocation(line: 1143, column: 2, scope: !3847)
!4091 = !DILocation(line: 1144, column: 3, scope: !3849)
!4092 = !DILocation(line: 1144, column: 17, scope: !3849)
!4093 = !DILocation(line: 0, scope: !3849)
!4094 = !DILocation(line: 1144, column: 11, scope: !3849)
!4095 = !DILocation(line: 1145, column: 38, scope: !3849)
!4096 = !DILocation(line: 1145, column: 21, scope: !3849)
!4097 = !DILocation(line: 1146, column: 22, scope: !3849)
!4098 = !DILocation(line: 1146, column: 29, scope: !3849)
!4099 = !DILocation(line: 1148, column: 8, scope: !3849)
!4100 = !DILocation(line: 1149, column: 10, scope: !4101)
!4101 = distinct !DILexicalBlock(scope: !3849, file: !200, line: 1149, column: 7)
!4102 = !DILocation(line: 1149, column: 7, scope: !3849)
!4103 = !DILocation(line: 1154, column: 8, scope: !3849)
!4104 = !DILocation(line: 1155, column: 10, scope: !4105)
!4105 = distinct !DILexicalBlock(scope: !3849, file: !200, line: 1155, column: 7)
!4106 = !DILocation(line: 1155, column: 7, scope: !3849)
!4107 = !DILocation(line: 1159, column: 2, scope: !3850)
!4108 = !DILocation(line: 1152, column: 11, scope: !3849)
!4109 = !DILocation(line: 1158, column: 11, scope: !3849)
!4110 = !DILocation(line: 1143, column: 33, scope: !3850)
!4111 = distinct !{!4111, !4090, !4112}
!4112 = !DILocation(line: 1159, column: 2, scope: !3847)
!4113 = !DILocation(line: 1162, column: 8, scope: !3780)
!4114 = !DILocation(line: 1164, column: 2, scope: !3780)
!4115 = !DILocation(line: 1165, column: 1, scope: !3780)
!4116 = distinct !DISubprogram(name: "get_package_len", scope: !200, file: !200, line: 196, type: !4117, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !4119)
!4117 = !DISubroutineType(types: !4118)
!4118 = !{!185, !106}
!4119 = !{!4120, !4121, !4122, !4123, !4124, !4125, !4126}
!4120 = !DILocalVariable(name: "packaged", arg: 1, scope: !4116, file: !200, line: 196, type: !106)
!4121 = !DILocalVariable(name: "buf", scope: !4116, file: !200, line: 200, type: !194)
!4122 = !DILocalVariable(name: "start", scope: !4116, file: !200, line: 201, type: !194)
!4123 = !DILocalVariable(name: "args_size", scope: !4116, file: !200, line: 202, type: !32)
!4124 = !DILocalVariable(name: "s_nbr", scope: !4116, file: !200, line: 202, type: !32)
!4125 = !DILocalVariable(name: "ros_nbr", scope: !4116, file: !200, line: 202, type: !32)
!4126 = !DILocalVariable(name: "i", scope: !4127, file: !200, line: 215, type: !107)
!4127 = distinct !DILexicalBlock(scope: !4116, file: !200, line: 215, column: 2)
!4128 = !DILocation(line: 0, scope: !4116)
!4129 = !DILocation(line: 198, column: 2, scope: !4130)
!4130 = distinct !DILexicalBlock(scope: !4131, file: !200, line: 198, column: 2)
!4131 = distinct !DILexicalBlock(scope: !4116, file: !200, line: 198, column: 2)
!4132 = !DILocation(line: 198, column: 2, scope: !4131)
!4133 = !DILocation(line: 198, column: 2, scope: !4134)
!4134 = distinct !DILexicalBlock(scope: !4130, file: !200, line: 198, column: 2)
!4135 = !DILocation(line: 204, column: 14, scope: !4116)
!4136 = !DILocation(line: 204, column: 21, scope: !4116)
!4137 = !DILocation(line: 205, column: 14, scope: !4116)
!4138 = !DILocation(line: 206, column: 14, scope: !4116)
!4139 = !DILocation(line: 209, column: 6, scope: !4116)
!4140 = !DILocation(line: 212, column: 6, scope: !4116)
!4141 = !DILocation(line: 0, scope: !4127)
!4142 = !DILocation(line: 215, column: 20, scope: !4143)
!4143 = distinct !DILexicalBlock(scope: !4127, file: !200, line: 215, column: 2)
!4144 = !DILocation(line: 215, column: 2, scope: !4127)
!4145 = !DILocation(line: 220, column: 33, scope: !4116)
!4146 = !DILocation(line: 220, column: 2, scope: !4116)
!4147 = !DILocation(line: 216, column: 6, scope: !4148)
!4148 = distinct !DILexicalBlock(scope: !4143, file: !200, line: 215, column: 34)
!4149 = !DILocation(line: 217, column: 10, scope: !4148)
!4150 = !DILocation(line: 217, column: 36, scope: !4148)
!4151 = !DILocation(line: 217, column: 7, scope: !4148)
!4152 = !DILocation(line: 215, column: 30, scope: !4143)
!4153 = distinct !{!4153, !4144, !4154}
!4154 = !DILocation(line: 218, column: 2, scope: !4127)
!4155 = distinct !DISubprogram(name: "append_string", scope: !200, file: !200, line: 223, type: !4156, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !4158)
!4156 = !DISubroutineType(types: !4157)
!4157 = !{!107, !3783, !106, !118, !197}
!4158 = !{!4159, !4160, !4161, !4162}
!4159 = !DILocalVariable(name: "cb", arg: 1, scope: !4155, file: !200, line: 223, type: !3783)
!4160 = !DILocalVariable(name: "ctx", arg: 2, scope: !4155, file: !200, line: 223, type: !106)
!4161 = !DILocalVariable(name: "str", arg: 3, scope: !4155, file: !200, line: 223, type: !118)
!4162 = !DILocalVariable(name: "strl", arg: 4, scope: !4155, file: !200, line: 223, type: !197)
!4163 = !DILocation(line: 0, scope: !4155)
!4164 = !DILocation(line: 225, column: 9, scope: !4165)
!4165 = distinct !DILexicalBlock(scope: !4155, file: !200, line: 225, column: 6)
!4166 = !DILocation(line: 225, column: 6, scope: !4155)
!4167 = !DILocation(line: 226, column: 14, scope: !4168)
!4168 = distinct !DILexicalBlock(scope: !4165, file: !200, line: 225, column: 18)
!4169 = !DILocation(line: 226, column: 12, scope: !4168)
!4170 = !DILocation(line: 226, column: 3, scope: !4168)
!4171 = !DILocation(line: 229, column: 14, scope: !4155)
!4172 = !DILocation(line: 229, column: 9, scope: !4155)
!4173 = !DILocation(line: 229, column: 27, scope: !4155)
!4174 = !DILocation(line: 229, column: 39, scope: !4155)
!4175 = !DILocation(line: 230, column: 17, scope: !4155)
!4176 = !DILocation(line: 230, column: 9, scope: !4155)
!4177 = !DILocation(line: 230, column: 2, scope: !4155)
!4178 = !DILocation(line: 231, column: 1, scope: !4155)
!4179 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !212, file: !212, line: 45, type: !214, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4180)
!4180 = !{!4181}
!4181 = !DILocalVariable(name: "c", arg: 1, scope: !4179, file: !212, line: 45, type: !107)
!4182 = !DILocation(line: 0, scope: !4179)
!4183 = !DILocation(line: 50, column: 2, scope: !4179)
!4184 = distinct !DISubprogram(name: "__printk_hook_install", scope: !212, file: !212, line: 63, type: !4185, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4187)
!4185 = !DISubroutineType(types: !4186)
!4186 = !{null, !213}
!4187 = !{!4188}
!4188 = !DILocalVariable(name: "fn", arg: 1, scope: !4184, file: !212, line: 63, type: !213)
!4189 = !DILocation(line: 0, scope: !4184)
!4190 = !DILocation(line: 65, column: 12, scope: !4184)
!4191 = !DILocation(line: 66, column: 1, scope: !4184)
!4192 = distinct !DISubprogram(name: "__printk_get_hook", scope: !212, file: !212, line: 76, type: !125, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !2236)
!4193 = !DILocation(line: 78, column: 9, scope: !4192)
!4194 = !DILocation(line: 78, column: 2, scope: !4192)
!4195 = distinct !DISubprogram(name: "vprintk", scope: !212, file: !212, line: 113, type: !4196, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4204)
!4196 = !DISubroutineType(types: !4197)
!4197 = !{null, !118, !4198}
!4198 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3271, line: 99, baseType: !4199)
!4199 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3271, line: 40, baseType: !4200)
!4200 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !212, baseType: !4201)
!4201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4202)
!4202 = !{!4203}
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4201, file: !212, line: 79, baseType: !106, size: 32)
!4204 = !{!4205, !4206, !4207}
!4205 = !DILocalVariable(name: "fmt", arg: 1, scope: !4195, file: !212, line: 113, type: !118)
!4206 = !DILocalVariable(name: "ap", arg: 2, scope: !4195, file: !212, line: 113, type: !4198)
!4207 = !DILocalVariable(name: "ctx", scope: !4208, file: !212, line: 121, type: !4210)
!4208 = distinct !DILexicalBlock(scope: !4209, file: !212, line: 120, column: 27)
!4209 = distinct !DILexicalBlock(scope: !4195, file: !212, line: 120, column: 6)
!4210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !212, line: 81, size: 32, elements: !4211)
!4211 = !{!4212, !4213}
!4212 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !4210, file: !212, line: 85, baseType: !32, size: 32)
!4213 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4210, file: !212, line: 86, baseType: !4214, offset: 32)
!4214 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, elements: !4215)
!4215 = !{!4216}
!4216 = !DISubrange(count: 0)
!4217 = !DILocation(line: 0, scope: !4195)
!4218 = !DILocation(line: 148, column: 3, scope: !4219)
!4219 = distinct !DILexicalBlock(scope: !4209, file: !212, line: 138, column: 9)
!4220 = !DILocation(line: 155, column: 1, scope: !4195)
!4221 = distinct !DISubprogram(name: "char_out", scope: !212, file: !212, line: 107, type: !4222, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4224)
!4222 = !DISubroutineType(types: !4223)
!4223 = !{!107, !107, !106}
!4224 = !{!4225, !4226}
!4225 = !DILocalVariable(name: "c", arg: 1, scope: !4221, file: !212, line: 107, type: !107)
!4226 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !4221, file: !212, line: 107, type: !106)
!4227 = !DILocation(line: 0, scope: !4221)
!4228 = !DILocation(line: 110, column: 9, scope: !4221)
!4229 = !DILocation(line: 110, column: 2, scope: !4221)
!4230 = distinct !DISubprogram(name: "cbvprintf", scope: !3303, file: !3303, line: 739, type: !4231, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4233)
!4231 = !DISubroutineType(types: !4232)
!4232 = !{!107, !3651, !106, !118, !4198}
!4233 = !{!4234, !4235, !4236, !4237}
!4234 = !DILocalVariable(name: "out", arg: 1, scope: !4230, file: !3303, line: 739, type: !3651)
!4235 = !DILocalVariable(name: "ctx", arg: 2, scope: !4230, file: !3303, line: 739, type: !106)
!4236 = !DILocalVariable(name: "format", arg: 3, scope: !4230, file: !3303, line: 739, type: !118)
!4237 = !DILocalVariable(name: "ap", arg: 4, scope: !4230, file: !3303, line: 739, type: !4198)
!4238 = !DILocation(line: 0, scope: !4230)
!4239 = !DILocation(line: 741, column: 9, scope: !4230)
!4240 = !DILocation(line: 741, column: 2, scope: !4230)
!4241 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !212, file: !212, line: 157, type: !4242, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4244)
!4242 = !DISubroutineType(types: !4243)
!4243 = !{null, !193, !185}
!4244 = !{!4245, !4246, !4247}
!4245 = !DILocalVariable(name: "c", arg: 1, scope: !4241, file: !212, line: 157, type: !193)
!4246 = !DILocalVariable(name: "n", arg: 2, scope: !4241, file: !212, line: 157, type: !185)
!4247 = !DILocalVariable(name: "i", scope: !4241, file: !212, line: 159, type: !185)
!4248 = !DILocation(line: 0, scope: !4241)
!4249 = !DILocation(line: 164, column: 16, scope: !4250)
!4250 = distinct !DILexicalBlock(scope: !4251, file: !212, line: 164, column: 2)
!4251 = distinct !DILexicalBlock(scope: !4241, file: !212, line: 164, column: 2)
!4252 = !DILocation(line: 164, column: 2, scope: !4251)
!4253 = !DILocation(line: 165, column: 3, scope: !4254)
!4254 = distinct !DILexicalBlock(scope: !4250, file: !212, line: 164, column: 26)
!4255 = !DILocation(line: 165, column: 13, scope: !4254)
!4256 = !DILocation(line: 164, column: 22, scope: !4250)
!4257 = distinct !{!4257, !4252, !4258}
!4258 = !DILocation(line: 166, column: 2, scope: !4251)
!4259 = !DILocation(line: 171, column: 1, scope: !4241)
!4260 = distinct !DISubprogram(name: "printk", scope: !212, file: !212, line: 203, type: !4261, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4263)
!4261 = !DISubroutineType(types: !4262)
!4262 = !{null, !118, null}
!4263 = !{!4264, !4265}
!4264 = !DILocalVariable(name: "fmt", arg: 1, scope: !4260, file: !212, line: 203, type: !118)
!4265 = !DILocalVariable(name: "ap", scope: !4260, file: !212, line: 205, type: !4198)
!4266 = !DILocation(line: 0, scope: !4260)
!4267 = !DILocation(line: 205, column: 2, scope: !4260)
!4268 = !DILocation(line: 205, column: 10, scope: !4260)
!4269 = !DILocation(line: 207, column: 2, scope: !4260)
!4270 = !DILocation(line: 209, column: 2, scope: !4260)
!4271 = !DILocation(line: 211, column: 2, scope: !4260)
!4272 = !DILocation(line: 212, column: 1, scope: !4260)
!4273 = distinct !DISubprogram(name: "snprintk", scope: !212, file: !212, line: 239, type: !4274, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4276)
!4274 = !DISubroutineType(types: !4275)
!4275 = !{!107, !193, !185, !118, null}
!4276 = !{!4277, !4278, !4279, !4280, !4281}
!4277 = !DILocalVariable(name: "str", arg: 1, scope: !4273, file: !212, line: 239, type: !193)
!4278 = !DILocalVariable(name: "size", arg: 2, scope: !4273, file: !212, line: 239, type: !185)
!4279 = !DILocalVariable(name: "fmt", arg: 3, scope: !4273, file: !212, line: 239, type: !118)
!4280 = !DILocalVariable(name: "ap", scope: !4273, file: !212, line: 241, type: !4198)
!4281 = !DILocalVariable(name: "ret", scope: !4273, file: !212, line: 242, type: !107)
!4282 = !DILocation(line: 0, scope: !4273)
!4283 = !DILocation(line: 241, column: 2, scope: !4273)
!4284 = !DILocation(line: 241, column: 10, scope: !4273)
!4285 = !DILocation(line: 244, column: 2, scope: !4273)
!4286 = !DILocation(line: 245, column: 8, scope: !4273)
!4287 = !DILocation(line: 246, column: 2, scope: !4273)
!4288 = !DILocation(line: 249, column: 1, scope: !4273)
!4289 = !DILocation(line: 248, column: 2, scope: !4273)
!4290 = distinct !DISubprogram(name: "vsnprintk", scope: !212, file: !212, line: 251, type: !4291, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4293)
!4291 = !DISubroutineType(types: !4292)
!4292 = !{!107, !193, !185, !118, !4198}
!4293 = !{!4294, !4295, !4296, !4297, !4298}
!4294 = !DILocalVariable(name: "str", arg: 1, scope: !4290, file: !212, line: 251, type: !193)
!4295 = !DILocalVariable(name: "size", arg: 2, scope: !4290, file: !212, line: 251, type: !185)
!4296 = !DILocalVariable(name: "fmt", arg: 3, scope: !4290, file: !212, line: 251, type: !118)
!4297 = !DILocalVariable(name: "ap", arg: 4, scope: !4290, file: !212, line: 251, type: !4198)
!4298 = !DILocalVariable(name: "ctx", scope: !4290, file: !212, line: 253, type: !4299)
!4299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !212, line: 217, size: 96, elements: !4300)
!4300 = !{!4301, !4302, !4303}
!4301 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !4299, file: !212, line: 218, baseType: !193, size: 32)
!4302 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !4299, file: !212, line: 219, baseType: !107, size: 32, offset: 32)
!4303 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4299, file: !212, line: 220, baseType: !107, size: 32, offset: 64)
!4304 = !DILocation(line: 0, scope: !4290)
!4305 = !DILocation(line: 253, column: 2, scope: !4290)
!4306 = !DILocation(line: 253, column: 21, scope: !4290)
!4307 = !DILocation(line: 253, column: 27, scope: !4290)
!4308 = !DILocation(line: 255, column: 2, scope: !4290)
!4309 = !DILocation(line: 257, column: 10, scope: !4310)
!4310 = distinct !DILexicalBlock(scope: !4290, file: !212, line: 257, column: 6)
!4311 = !DILocation(line: 257, column: 22, scope: !4310)
!4312 = !DILocation(line: 257, column: 16, scope: !4310)
!4313 = !DILocation(line: 257, column: 6, scope: !4290)
!4314 = !DILocation(line: 258, column: 3, scope: !4315)
!4315 = distinct !DILexicalBlock(scope: !4310, file: !212, line: 257, column: 27)
!4316 = !DILocation(line: 258, column: 18, scope: !4315)
!4317 = !DILocation(line: 259, column: 2, scope: !4315)
!4318 = !DILocation(line: 262, column: 1, scope: !4290)
!4319 = !DILocation(line: 261, column: 2, scope: !4290)
!4320 = distinct !DISubprogram(name: "str_out", scope: !212, file: !212, line: 223, type: !4321, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4324)
!4321 = !DISubroutineType(types: !4322)
!4322 = !{!107, !107, !4323}
!4323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4299, size: 32)
!4324 = !{!4325, !4326}
!4325 = !DILocalVariable(name: "c", arg: 1, scope: !4320, file: !212, line: 223, type: !107)
!4326 = !DILocalVariable(name: "ctx", arg: 2, scope: !4320, file: !212, line: 223, type: !4323)
!4327 = !DILocation(line: 0, scope: !4320)
!4328 = !DILocation(line: 225, column: 11, scope: !4329)
!4329 = distinct !DILexicalBlock(scope: !4320, file: !212, line: 225, column: 6)
!4330 = !DILocation(line: 225, column: 15, scope: !4329)
!4331 = !DILocation(line: 0, scope: !4329)
!4332 = !DILocation(line: 225, column: 23, scope: !4329)
!4333 = !DILocation(line: 225, column: 45, scope: !4329)
!4334 = !DILocation(line: 225, column: 37, scope: !4329)
!4335 = !DILocation(line: 225, column: 6, scope: !4320)
!4336 = !DILocation(line: 226, column: 8, scope: !4337)
!4337 = distinct !DILexicalBlock(scope: !4329, file: !212, line: 225, column: 50)
!4338 = !DILocation(line: 226, column: 13, scope: !4337)
!4339 = !DILocation(line: 227, column: 3, scope: !4337)
!4340 = !DILocation(line: 230, column: 29, scope: !4341)
!4341 = distinct !DILexicalBlock(scope: !4320, file: !212, line: 230, column: 6)
!4342 = !DILocation(line: 230, column: 17, scope: !4341)
!4343 = !DILocation(line: 230, column: 6, scope: !4320)
!4344 = !DILocation(line: 231, column: 22, scope: !4345)
!4345 = distinct !DILexicalBlock(scope: !4341, file: !212, line: 230, column: 34)
!4346 = !DILocation(line: 231, column: 3, scope: !4345)
!4347 = !DILocation(line: 231, column: 26, scope: !4345)
!4348 = !DILocation(line: 232, column: 2, scope: !4345)
!4349 = !DILocation(line: 233, column: 28, scope: !4350)
!4350 = distinct !DILexicalBlock(scope: !4341, file: !212, line: 232, column: 9)
!4351 = !DILocation(line: 233, column: 22, scope: !4350)
!4352 = !DILocation(line: 233, column: 3, scope: !4350)
!4353 = !DILocation(line: 233, column: 26, scope: !4350)
!4354 = !DILocation(line: 237, column: 1, scope: !4320)
!4355 = distinct !DISubprogram(name: "z_thread_entry", scope: !4356, file: !4356, line: 30, type: !4357, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2584, retainedNodes: !4359)
!4356 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4357 = !DISubroutineType(types: !4358)
!4358 = !{null, !559, !106, !106, !106}
!4359 = !{!4360, !4361, !4362, !4363}
!4360 = !DILocalVariable(name: "entry", arg: 1, scope: !4355, file: !4356, line: 30, type: !559)
!4361 = !DILocalVariable(name: "p1", arg: 2, scope: !4355, file: !4356, line: 31, type: !106)
!4362 = !DILocalVariable(name: "p2", arg: 3, scope: !4355, file: !4356, line: 31, type: !106)
!4363 = !DILocalVariable(name: "p3", arg: 4, scope: !4355, file: !4356, line: 31, type: !106)
!4364 = !DILocation(line: 0, scope: !4355)
!4365 = !DILocation(line: 36, column: 2, scope: !4355)
!4366 = !DILocation(line: 38, column: 17, scope: !4355)
!4367 = !DILocation(line: 38, column: 2, scope: !4355)
!4368 = !DILocation(line: 45, column: 2, scope: !4355)
!4369 = distinct !DISubprogram(name: "k_current_get", scope: !406, file: !406, line: 530, type: !4370, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2584, retainedNodes: !2236)
!4370 = !DISubroutineType(types: !4371)
!4371 = !{!4372}
!4372 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !309, line: 347, baseType: !4373)
!4373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4374, size: 32)
!4374 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !4375)
!4375 = !{!4376, !4434, !4446, !4447, !4448, !4449, !4450, !4456, !4471}
!4376 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4374, file: !309, line: 247, baseType: !4377, size: 384)
!4377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !4378)
!4378 = !{!4379, !4403, !4410, !4411, !4412, !4421, !4422, !4423}
!4379 = !DIDerivedType(tag: DW_TAG_member, scope: !4377, file: !309, line: 60, baseType: !4380, size: 64)
!4380 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4377, file: !309, line: 60, size: 64, elements: !4381)
!4381 = !{!4382, !4397}
!4382 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !4380, file: !309, line: 61, baseType: !4383, size: 64)
!4383 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !4384)
!4384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !4385)
!4385 = !{!4386, !4392}
!4386 = !DIDerivedType(tag: DW_TAG_member, scope: !4384, file: !319, line: 38, baseType: !4387, size: 32)
!4387 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4384, file: !319, line: 38, size: 32, elements: !4388)
!4388 = !{!4389, !4391}
!4389 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4387, file: !319, line: 39, baseType: !4390, size: 32)
!4390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4384, size: 32)
!4391 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4387, file: !319, line: 40, baseType: !4390, size: 32)
!4392 = !DIDerivedType(tag: DW_TAG_member, scope: !4384, file: !319, line: 42, baseType: !4393, size: 32, offset: 32)
!4393 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4384, file: !319, line: 42, size: 32, elements: !4394)
!4394 = !{!4395, !4396}
!4395 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !4393, file: !319, line: 43, baseType: !4390, size: 32)
!4396 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4393, file: !319, line: 44, baseType: !4390, size: 32)
!4397 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !4380, file: !309, line: 62, baseType: !4398, size: 64)
!4398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !4399)
!4399 = !{!4400}
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4398, file: !335, line: 50, baseType: !4401, size: 64)
!4401 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4402, size: 64, elements: !340)
!4402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4398, size: 32)
!4403 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !4377, file: !309, line: 68, baseType: !4404, size: 32, offset: 64)
!4404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4405, size: 32)
!4405 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !4406)
!4406 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !4407)
!4407 = !{!4408}
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !4406, file: !345, line: 232, baseType: !4409, size: 64)
!4409 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !4384)
!4410 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !4377, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!4411 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !4377, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!4412 = !DIDerivedType(tag: DW_TAG_member, scope: !4377, file: !309, line: 90, baseType: !4413, size: 16, offset: 112)
!4413 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4377, file: !309, line: 90, size: 16, elements: !4414)
!4414 = !{!4415, !4420}
!4415 = !DIDerivedType(tag: DW_TAG_member, scope: !4413, file: !309, line: 91, baseType: !4416, size: 16)
!4416 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4413, file: !309, line: 91, size: 16, elements: !4417)
!4417 = !{!4418, !4419}
!4418 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !4416, file: !309, line: 96, baseType: !359, size: 8)
!4419 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !4416, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!4420 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !4413, file: !309, line: 100, baseType: !197, size: 16)
!4421 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !4377, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!4422 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !4377, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!4423 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4377, file: !309, line: 131, baseType: !4424, size: 192, offset: 192)
!4424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !4425)
!4425 = !{!4426, !4427, !4433}
!4426 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4424, file: !345, line: 245, baseType: !4383, size: 64)
!4427 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !4424, file: !345, line: 246, baseType: !4428, size: 32, offset: 64)
!4428 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !4429)
!4429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4430, size: 32)
!4430 = !DISubroutineType(types: !4431)
!4431 = !{null, !4432}
!4432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4424, size: 32)
!4433 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !4424, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!4434 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !4374, file: !309, line: 250, baseType: !4435, size: 288, offset: 384)
!4435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !4436)
!4436 = !{!4437, !4438, !4439, !4440, !4441, !4442, !4443, !4444, !4445}
!4437 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !4435, file: !379, line: 26, baseType: !152, size: 32)
!4438 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !4435, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!4439 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !4435, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!4440 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !4435, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!4441 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !4435, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!4442 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !4435, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!4443 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !4435, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!4444 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !4435, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!4445 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !4435, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!4446 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !4374, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!4447 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !4374, file: !309, line: 256, baseType: !4405, size: 64, offset: 704)
!4448 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4374, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!4449 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !4374, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!4450 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !4374, file: !309, line: 300, baseType: !4451, size: 96, offset: 1056)
!4451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !4452)
!4452 = !{!4453, !4454, !4455}
!4453 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4451, file: !309, line: 153, baseType: !22, size: 32)
!4454 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4451, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!4455 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !4451, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!4456 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !4374, file: !309, line: 325, baseType: !4457, size: 32, offset: 1152)
!4457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4458, size: 32)
!4458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !4459)
!4459 = !{!4460, !4466, !4467}
!4460 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4458, file: !406, line: 5074, baseType: !4461, size: 96)
!4461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !4462)
!4462 = !{!4463, !4464, !4465}
!4463 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4461, file: !410, line: 57, baseType: !413, size: 32)
!4464 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4461, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!4465 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4461, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !4458, file: !406, line: 5075, baseType: !4405, size: 64, offset: 96)
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4458, file: !406, line: 5076, baseType: !4468, size: 32, offset: 160)
!4468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !4469)
!4469 = !{!4470}
!4470 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !4468, file: !420, line: 52, baseType: !22, size: 32)
!4471 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4374, file: !309, line: 343, baseType: !4472, size: 64, offset: 1184)
!4472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !4473)
!4473 = !{!4474, !4475}
!4474 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !4472, file: !379, line: 63, baseType: !152, size: 32)
!4475 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !4472, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!4476 = !DILocation(line: 535, column: 9, scope: !4369)
!4477 = !DILocation(line: 535, column: 2, scope: !4369)
!4478 = distinct !DISubprogram(name: "k_thread_abort", scope: !4479, file: !4479, line: 188, type: !4480, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2584, retainedNodes: !4482)
!4479 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pytest")
!4480 = !DISubroutineType(types: !4481)
!4481 = !{null, !4372}
!4482 = !{!4483}
!4483 = !DILocalVariable(name: "thread", arg: 1, scope: !4478, file: !4479, line: 188, type: !4372)
!4484 = !DILocation(line: 0, scope: !4478)
!4485 = !DILocation(line: 197, column: 2, scope: !4486)
!4486 = distinct !DILexicalBlock(scope: !4478, file: !4479, line: 197, column: 2)
!4487 = !{i64 2155066977}
!4488 = !DILocation(line: 198, column: 2, scope: !4478)
!4489 = !DILocation(line: 199, column: 1, scope: !4478)
!4490 = distinct !DISubprogram(name: "z_current_get", scope: !4479, file: !4479, line: 173, type: !4370, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2584, retainedNodes: !2236)
!4491 = !DILocation(line: 180, column: 2, scope: !4492)
!4492 = distinct !DILexicalBlock(scope: !4490, file: !4479, line: 180, column: 2)
!4493 = !{i64 2155066909}
!4494 = !DILocation(line: 181, column: 9, scope: !4490)
!4495 = !DILocation(line: 181, column: 2, scope: !4490)
!4496 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2590, file: !2590, line: 1338, type: !4497, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2586, retainedNodes: !4505)
!4497 = !DISubroutineType(types: !4498)
!4498 = !{!107, !3651, !106, !118, !4499, !152}
!4499 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3271, line: 99, baseType: !4500)
!4500 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3271, line: 40, baseType: !4501)
!4501 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2590, baseType: !4502)
!4502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4503)
!4503 = !{!4504}
!4504 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4502, file: !2590, baseType: !106, size: 32)
!4505 = !{!4506, !4507, !4508, !4509, !4510, !4511, !4515, !4516, !4517, !4519, !4524, !4567, !4570, !4573, !4574, !4575, !4576, !4577, !4578, !4579, !4582, !4583, !4584, !4588, !4591, !4593, !4596, !4597, !4598, !4603, !4609, !4612, !4616, !4622, !4626, !4629, !4631, !4634}
!4506 = !DILocalVariable(name: "out", arg: 1, scope: !4496, file: !2590, line: 1338, type: !3651)
!4507 = !DILocalVariable(name: "ctx", arg: 2, scope: !4496, file: !2590, line: 1338, type: !106)
!4508 = !DILocalVariable(name: "fp", arg: 3, scope: !4496, file: !2590, line: 1338, type: !118)
!4509 = !DILocalVariable(name: "ap", arg: 4, scope: !4496, file: !2590, line: 1339, type: !4499)
!4510 = !DILocalVariable(name: "flags", arg: 5, scope: !4496, file: !2590, line: 1339, type: !152)
!4511 = !DILocalVariable(name: "buf", scope: !4496, file: !2590, line: 1341, type: !4512)
!4512 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 176, elements: !4513)
!4513 = !{!4514}
!4514 = !DISubrange(count: 22)
!4515 = !DILocalVariable(name: "count", scope: !4496, file: !2590, line: 1342, type: !185)
!4516 = !DILocalVariable(name: "sint", scope: !4496, file: !2590, line: 1343, type: !2609)
!4517 = !DILocalVariable(name: "tagged_ap", scope: !4496, file: !2590, line: 1345, type: !4518)
!4518 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !145)
!4519 = !DILocalVariable(name: "rc", scope: !4520, file: !2590, line: 1377, type: !107)
!4520 = distinct !DILexicalBlock(scope: !4521, file: !2590, line: 1377, column: 4)
!4521 = distinct !DILexicalBlock(scope: !4522, file: !2590, line: 1376, column: 19)
!4522 = distinct !DILexicalBlock(scope: !4523, file: !2590, line: 1376, column: 7)
!4523 = distinct !DILexicalBlock(scope: !4496, file: !2590, line: 1375, column: 19)
!4524 = !DILocalVariable(name: "state", scope: !4523, file: !2590, line: 1395, type: !4525)
!4525 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4496, file: !2590, line: 1392, size: 192, elements: !4526)
!4526 = !{!4527, !4535}
!4527 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4525, file: !2590, line: 1393, baseType: !4528, size: 64)
!4528 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2590, line: 166, size: 64, elements: !4529)
!4529 = !{!4530, !4531, !4532, !4533, !4534}
!4530 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4528, file: !2590, line: 168, baseType: !2609, size: 64)
!4531 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4528, file: !2590, line: 171, baseType: !2612, size: 64)
!4532 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4528, file: !2590, line: 174, baseType: !183, size: 64)
!4533 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4528, file: !2590, line: 177, baseType: !181, size: 64)
!4534 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4528, file: !2590, line: 180, baseType: !106, size: 32)
!4535 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4525, file: !2590, line: 1394, baseType: !4536, size: 96, offset: 64)
!4536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2590, line: 189, size: 96, elements: !4537)
!4537 = !{!4538, !4539, !4540, !4541, !4542, !4543, !4544, !4545, !4546, !4547, !4548, !4549, !4550, !4551, !4552, !4553, !4554, !4555, !4556, !4557, !4562}
!4538 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4536, file: !2590, line: 191, baseType: !145, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4539 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4536, file: !2590, line: 194, baseType: !145, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4540 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4536, file: !2590, line: 197, baseType: !145, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4541 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4536, file: !2590, line: 200, baseType: !145, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4542 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4536, file: !2590, line: 203, baseType: !145, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4543 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4536, file: !2590, line: 206, baseType: !145, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4544 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4536, file: !2590, line: 209, baseType: !145, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4545 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4536, file: !2590, line: 212, baseType: !145, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4546 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4536, file: !2590, line: 219, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4547 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4536, file: !2590, line: 222, baseType: !145, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4548 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4536, file: !2590, line: 229, baseType: !145, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4549 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4536, file: !2590, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4550 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4536, file: !2590, line: 238, baseType: !145, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4551 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4536, file: !2590, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4552 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4536, file: !2590, line: 244, baseType: !145, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4553 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4536, file: !2590, line: 247, baseType: !145, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4554 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4536, file: !2590, line: 252, baseType: !145, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4555 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4536, file: !2590, line: 257, baseType: !145, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4556 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4536, file: !2590, line: 260, baseType: !196, size: 8, offset: 24)
!4557 = !DIDerivedType(tag: DW_TAG_member, scope: !4536, file: !2590, line: 262, baseType: !4558, size: 32, offset: 32)
!4558 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4536, file: !2590, line: 262, size: 32, elements: !4559)
!4559 = !{!4560, !4561}
!4560 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4558, file: !2590, line: 267, baseType: !107, size: 32)
!4561 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4558, file: !2590, line: 289, baseType: !107, size: 32)
!4562 = !DIDerivedType(tag: DW_TAG_member, scope: !4536, file: !2590, line: 292, baseType: !4563, size: 32, offset: 64)
!4563 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4536, file: !2590, line: 292, size: 32, elements: !4564)
!4564 = !{!4565, !4566}
!4565 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4563, file: !2590, line: 297, baseType: !107, size: 32)
!4566 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4563, file: !2590, line: 306, baseType: !107, size: 32)
!4567 = !DILocalVariable(name: "conv", scope: !4523, file: !2590, line: 1400, type: !4568)
!4568 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4569)
!4569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4536, size: 32)
!4570 = !DILocalVariable(name: "value", scope: !4523, file: !2590, line: 1401, type: !4571)
!4571 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4572)
!4572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4528, size: 32)
!4573 = !DILocalVariable(name: "sp", scope: !4523, file: !2590, line: 1402, type: !118)
!4574 = !DILocalVariable(name: "width", scope: !4523, file: !2590, line: 1403, type: !107)
!4575 = !DILocalVariable(name: "precision", scope: !4523, file: !2590, line: 1404, type: !107)
!4576 = !DILocalVariable(name: "bps", scope: !4523, file: !2590, line: 1405, type: !118)
!4577 = !DILocalVariable(name: "bpe", scope: !4523, file: !2590, line: 1406, type: !118)
!4578 = !DILocalVariable(name: "sign", scope: !4523, file: !2590, line: 1407, type: !120)
!4579 = !DILocalVariable(name: "arg", scope: !4580, file: !2590, line: 1432, type: !107)
!4580 = distinct !DILexicalBlock(scope: !4581, file: !2590, line: 1431, column: 24)
!4581 = distinct !DILexicalBlock(scope: !4523, file: !2590, line: 1431, column: 7)
!4582 = !DILocalVariable(name: "specifier_cat", scope: !4523, file: !2590, line: 1468, type: !2589)
!4583 = !DILocalVariable(name: "length_mod", scope: !4523, file: !2590, line: 1470, type: !2597)
!4584 = !DILocalVariable(name: "rc", scope: !4585, file: !2590, line: 1575, type: !107)
!4585 = distinct !DILexicalBlock(scope: !4586, file: !2590, line: 1575, column: 4)
!4586 = distinct !DILexicalBlock(scope: !4587, file: !2590, line: 1574, column: 43)
!4587 = distinct !DILexicalBlock(scope: !4523, file: !2590, line: 1574, column: 7)
!4588 = !DILocalVariable(name: "rc", scope: !4589, file: !2590, line: 1584, type: !107)
!4589 = distinct !DILexicalBlock(scope: !4590, file: !2590, line: 1584, column: 4)
!4590 = distinct !DILexicalBlock(scope: !4523, file: !2590, line: 1582, column: 28)
!4591 = !DILocalVariable(name: "len", scope: !4592, file: !2590, line: 1589, type: !185)
!4592 = distinct !DILexicalBlock(scope: !4590, file: !2590, line: 1586, column: 13)
!4593 = !DILocalVariable(name: "len", scope: !4594, file: !2590, line: 1641, type: !185)
!4594 = distinct !DILexicalBlock(scope: !4595, file: !2590, line: 1640, column: 24)
!4595 = distinct !DILexicalBlock(scope: !4590, file: !2590, line: 1640, column: 8)
!4596 = !DILocalVariable(name: "nj_len", scope: !4523, file: !2590, line: 1722, type: !185)
!4597 = !DILocalVariable(name: "pad_len", scope: !4523, file: !2590, line: 1723, type: !107)
!4598 = !DILocalVariable(name: "pad", scope: !4599, file: !2590, line: 1751, type: !120)
!4599 = distinct !DILexicalBlock(scope: !4600, file: !2590, line: 1750, column: 26)
!4600 = distinct !DILexicalBlock(scope: !4601, file: !2590, line: 1750, column: 8)
!4601 = distinct !DILexicalBlock(scope: !4602, file: !2590, line: 1747, column: 18)
!4602 = distinct !DILexicalBlock(scope: !4523, file: !2590, line: 1747, column: 7)
!4603 = !DILocalVariable(name: "rc", scope: !4604, file: !2590, line: 1758, type: !107)
!4604 = distinct !DILexicalBlock(scope: !4605, file: !2590, line: 1758, column: 7)
!4605 = distinct !DILexicalBlock(scope: !4606, file: !2590, line: 1757, column: 21)
!4606 = distinct !DILexicalBlock(scope: !4607, file: !2590, line: 1757, column: 10)
!4607 = distinct !DILexicalBlock(scope: !4608, file: !2590, line: 1756, column: 26)
!4608 = distinct !DILexicalBlock(scope: !4599, file: !2590, line: 1756, column: 9)
!4609 = !DILocalVariable(name: "rc", scope: !4610, file: !2590, line: 1765, type: !107)
!4610 = distinct !DILexicalBlock(scope: !4611, file: !2590, line: 1765, column: 6)
!4611 = distinct !DILexicalBlock(scope: !4599, file: !2590, line: 1764, column: 25)
!4612 = !DILocalVariable(name: "rc", scope: !4613, file: !2590, line: 1774, type: !107)
!4613 = distinct !DILexicalBlock(scope: !4614, file: !2590, line: 1774, column: 4)
!4614 = distinct !DILexicalBlock(scope: !4615, file: !2590, line: 1773, column: 18)
!4615 = distinct !DILexicalBlock(scope: !4523, file: !2590, line: 1773, column: 7)
!4616 = !DILocalVariable(name: "rc", scope: !4617, file: !2590, line: 1819, type: !107)
!4617 = distinct !DILexicalBlock(scope: !4618, file: !2590, line: 1819, column: 5)
!4618 = distinct !DILexicalBlock(scope: !4619, file: !2590, line: 1818, column: 44)
!4619 = distinct !DILexicalBlock(scope: !4620, file: !2590, line: 1818, column: 8)
!4620 = distinct !DILexicalBlock(scope: !4621, file: !2590, line: 1817, column: 10)
!4621 = distinct !DILexicalBlock(scope: !4523, file: !2590, line: 1777, column: 7)
!4622 = !DILocalVariable(name: "rc", scope: !4623, file: !2590, line: 1823, type: !107)
!4623 = distinct !DILexicalBlock(scope: !4624, file: !2590, line: 1823, column: 5)
!4624 = distinct !DILexicalBlock(scope: !4625, file: !2590, line: 1822, column: 26)
!4625 = distinct !DILexicalBlock(scope: !4620, file: !2590, line: 1822, column: 8)
!4626 = !DILocalVariable(name: "rc", scope: !4627, file: !2590, line: 1828, type: !107)
!4627 = distinct !DILexicalBlock(scope: !4628, file: !2590, line: 1828, column: 5)
!4628 = distinct !DILexicalBlock(scope: !4620, file: !2590, line: 1827, column: 26)
!4629 = !DILocalVariable(name: "rc", scope: !4630, file: !2590, line: 1831, type: !107)
!4630 = distinct !DILexicalBlock(scope: !4620, file: !2590, line: 1831, column: 4)
!4631 = !DILocalVariable(name: "rc", scope: !4632, file: !2590, line: 1836, type: !107)
!4632 = distinct !DILexicalBlock(scope: !4633, file: !2590, line: 1836, column: 4)
!4633 = distinct !DILexicalBlock(scope: !4523, file: !2590, line: 1835, column: 21)
!4634 = !DILabel(scope: !4590, name: "prec_int_pad0", file: !2590, line: 1634)
!4635 = !DILocation(line: 0, scope: !4496)
!4636 = !DILocation(line: 1341, column: 2, scope: !4496)
!4637 = !DILocation(line: 1341, column: 7, scope: !4496)
!4638 = !DILocation(line: 1375, column: 2, scope: !4496)
!4639 = !DILocation(line: 1342, column: 9, scope: !4496)
!4640 = !DILocation(line: 1375, column: 9, scope: !4496)
!4641 = !DILocation(line: 1377, column: 4, scope: !4520)
!4642 = !DILocation(line: 0, scope: !4520)
!4643 = !DILocation(line: 1377, column: 4, scope: !4644)
!4644 = distinct !DILexicalBlock(scope: !4520, file: !2590, line: 1377, column: 4)
!4645 = distinct !{!4645, !4638, !4646}
!4646 = !DILocation(line: 1839, column: 2, scope: !4496)
!4647 = !DILocation(line: 1392, column: 3, scope: !4523)
!4648 = !DILocation(line: 1395, column: 5, scope: !4523)
!4649 = !DILocation(line: 0, scope: !4523)
!4650 = !DILocation(line: 1409, column: 8, scope: !4523)
!4651 = !DILocation(line: 1414, column: 13, scope: !4652)
!4652 = distinct !DILexicalBlock(scope: !4523, file: !2590, line: 1414, column: 7)
!4653 = !DILocation(line: 1414, column: 7, scope: !4523)
!4654 = !DILocation(line: 1415, column: 12, scope: !4655)
!4655 = distinct !DILexicalBlock(scope: !4652, file: !2590, line: 1414, column: 25)
!4656 = !DILocation(line: 1417, column: 14, scope: !4657)
!4657 = distinct !DILexicalBlock(scope: !4655, file: !2590, line: 1417, column: 8)
!4658 = !DILocation(line: 1417, column: 8, scope: !4655)
!4659 = !DILocation(line: 1418, column: 21, scope: !4660)
!4660 = distinct !DILexicalBlock(scope: !4657, file: !2590, line: 1417, column: 19)
!4661 = !DILocation(line: 1419, column: 13, scope: !4660)
!4662 = !DILocation(line: 1420, column: 4, scope: !4660)
!4663 = !DILocation(line: 1421, column: 20, scope: !4664)
!4664 = distinct !DILexicalBlock(scope: !4652, file: !2590, line: 1421, column: 14)
!4665 = !DILocation(line: 1421, column: 14, scope: !4652)
!4666 = !DILocation(line: 1431, column: 13, scope: !4581)
!4667 = !DILocation(line: 1431, column: 7, scope: !4523)
!4668 = !DILocation(line: 1432, column: 14, scope: !4580)
!4669 = !DILocation(line: 0, scope: !4580)
!4670 = !DILocation(line: 1434, column: 12, scope: !4671)
!4671 = distinct !DILexicalBlock(scope: !4580, file: !2590, line: 1434, column: 8)
!4672 = !DILocation(line: 1434, column: 8, scope: !4580)
!4673 = !DILocation(line: 1435, column: 24, scope: !4674)
!4674 = distinct !DILexicalBlock(scope: !4671, file: !2590, line: 1434, column: 17)
!4675 = !DILocation(line: 1436, column: 4, scope: !4674)
!4676 = !DILocation(line: 1439, column: 20, scope: !4677)
!4677 = distinct !DILexicalBlock(scope: !4581, file: !2590, line: 1439, column: 14)
!4678 = !DILocation(line: 1439, column: 14, scope: !4581)
!4679 = !DILocation(line: 1469, column: 37, scope: !4523)
!4680 = !DILocation(line: 1448, column: 20, scope: !4523)
!4681 = !DILocation(line: 1449, column: 22, scope: !4523)
!4682 = !DILocation(line: 1471, column: 34, scope: !4523)
!4683 = !DILocation(line: 1478, column: 7, scope: !4523)
!4684 = !DILocation(line: 1479, column: 4, scope: !4685)
!4685 = distinct !DILexicalBlock(scope: !4686, file: !2590, line: 1478, column: 40)
!4686 = distinct !DILexicalBlock(scope: !4523, file: !2590, line: 1478, column: 7)
!4687 = !DILocation(line: 1484, column: 19, scope: !4688)
!4688 = distinct !DILexicalBlock(scope: !4685, file: !2590, line: 1479, column: 24)
!4689 = !DILocation(line: 1484, column: 17, scope: !4688)
!4690 = !DILocation(line: 1485, column: 5, scope: !4688)
!4691 = !DILocation(line: 1492, column: 20, scope: !4692)
!4692 = distinct !DILexicalBlock(scope: !4693, file: !2590, line: 1491, column: 12)
!4693 = distinct !DILexicalBlock(scope: !4688, file: !2590, line: 1487, column: 9)
!4694 = !DILocation(line: 1492, column: 18, scope: !4692)
!4695 = !DILocation(line: 1494, column: 5, scope: !4688)
!4696 = !DILocation(line: 1497, column: 23, scope: !4688)
!4697 = !DILocation(line: 1496, column: 17, scope: !4688)
!4698 = !DILocation(line: 1498, column: 5, scope: !4688)
!4699 = !DILocation(line: 1501, column: 23, scope: !4688)
!4700 = !DILocation(line: 1500, column: 17, scope: !4688)
!4701 = !DILocation(line: 1502, column: 5, scope: !4688)
!4702 = !DILocation(line: 1513, column: 23, scope: !4688)
!4703 = !DILocation(line: 1513, column: 6, scope: !4688)
!4704 = !DILocation(line: 1512, column: 17, scope: !4688)
!4705 = !DILocation(line: 1514, column: 5, scope: !4688)
!4706 = !DILocation(line: 0, scope: !4688)
!4707 = !DILocation(line: 1516, column: 8, scope: !4685)
!4708 = !DILocation(line: 1517, column: 19, scope: !4709)
!4709 = distinct !DILexicalBlock(scope: !4710, file: !2590, line: 1516, column: 33)
!4710 = distinct !DILexicalBlock(scope: !4685, file: !2590, line: 1516, column: 8)
!4711 = !DILocation(line: 1517, column: 17, scope: !4709)
!4712 = !DILocation(line: 1518, column: 4, scope: !4709)
!4713 = !DILocation(line: 1519, column: 19, scope: !4714)
!4714 = distinct !DILexicalBlock(scope: !4715, file: !2590, line: 1518, column: 39)
!4715 = distinct !DILexicalBlock(scope: !4710, file: !2590, line: 1518, column: 15)
!4716 = !DILocation(line: 1519, column: 17, scope: !4714)
!4717 = !DILocation(line: 1520, column: 4, scope: !4714)
!4718 = !DILocation(line: 1522, column: 4, scope: !4719)
!4719 = distinct !DILexicalBlock(scope: !4720, file: !2590, line: 1521, column: 47)
!4720 = distinct !DILexicalBlock(scope: !4686, file: !2590, line: 1521, column: 14)
!4721 = !DILocation(line: 1527, column: 19, scope: !4722)
!4722 = distinct !DILexicalBlock(scope: !4719, file: !2590, line: 1522, column: 24)
!4723 = !DILocation(line: 1527, column: 17, scope: !4722)
!4724 = !DILocation(line: 1528, column: 5, scope: !4722)
!4725 = !DILocation(line: 0, scope: !4726)
!4726 = distinct !DILexicalBlock(scope: !4722, file: !2590, line: 1530, column: 9)
!4727 = !DILocation(line: 1540, column: 23, scope: !4722)
!4728 = !DILocation(line: 1539, column: 17, scope: !4722)
!4729 = !DILocation(line: 1542, column: 5, scope: !4722)
!4730 = !DILocation(line: 1545, column: 23, scope: !4722)
!4731 = !DILocation(line: 1544, column: 17, scope: !4722)
!4732 = !DILocation(line: 1547, column: 5, scope: !4722)
!4733 = !DILocation(line: 1551, column: 23, scope: !4722)
!4734 = !DILocation(line: 1551, column: 6, scope: !4722)
!4735 = !DILocation(line: 1550, column: 17, scope: !4722)
!4736 = !DILocation(line: 1552, column: 5, scope: !4722)
!4737 = !DILocation(line: 0, scope: !4722)
!4738 = !DILocation(line: 1554, column: 8, scope: !4719)
!4739 = !DILocation(line: 1555, column: 19, scope: !4740)
!4740 = distinct !DILexicalBlock(scope: !4741, file: !2590, line: 1554, column: 33)
!4741 = distinct !DILexicalBlock(scope: !4719, file: !2590, line: 1554, column: 8)
!4742 = !DILocation(line: 1555, column: 17, scope: !4740)
!4743 = !DILocation(line: 1556, column: 4, scope: !4740)
!4744 = !DILocation(line: 1557, column: 19, scope: !4745)
!4745 = distinct !DILexicalBlock(scope: !4746, file: !2590, line: 1556, column: 39)
!4746 = distinct !DILexicalBlock(scope: !4741, file: !2590, line: 1556, column: 15)
!4747 = !DILocation(line: 1557, column: 17, scope: !4745)
!4748 = !DILocation(line: 1558, column: 4, scope: !4745)
!4749 = !DILocation(line: 0, scope: !4750)
!4750 = distinct !DILexicalBlock(scope: !4751, file: !2590, line: 1560, column: 8)
!4751 = distinct !DILexicalBlock(scope: !4752, file: !2590, line: 1559, column: 45)
!4752 = distinct !DILexicalBlock(scope: !4720, file: !2590, line: 1559, column: 14)
!4753 = !DILocation(line: 1566, column: 17, scope: !4754)
!4754 = distinct !DILexicalBlock(scope: !4755, file: !2590, line: 1565, column: 46)
!4755 = distinct !DILexicalBlock(scope: !4752, file: !2590, line: 1565, column: 14)
!4756 = !DILocation(line: 1566, column: 15, scope: !4754)
!4757 = !DILocation(line: 1567, column: 3, scope: !4754)
!4758 = !DILocation(line: 1574, column: 21, scope: !4587)
!4759 = !DILocation(line: 1575, column: 4, scope: !4585)
!4760 = !DILocation(line: 0, scope: !4585)
!4761 = !DILocation(line: 1575, column: 4, scope: !4762)
!4762 = distinct !DILexicalBlock(scope: !4585, file: !2590, line: 1575, column: 4)
!4763 = !DILocation(line: 1582, column: 17, scope: !4523)
!4764 = !DILocation(line: 1582, column: 3, scope: !4523)
!4765 = !DILocation(line: 1584, column: 4, scope: !4589)
!4766 = !DILocation(line: 0, scope: !4589)
!4767 = !DILocation(line: 1584, column: 4, scope: !4768)
!4768 = distinct !DILexicalBlock(scope: !4589, file: !2590, line: 1584, column: 4)
!4769 = !DILocation(line: 1587, column: 31, scope: !4592)
!4770 = !DILocation(line: 1591, column: 18, scope: !4771)
!4771 = distinct !DILexicalBlock(scope: !4592, file: !2590, line: 1591, column: 8)
!4772 = !DILocation(line: 1591, column: 8, scope: !4592)
!4773 = !DILocation(line: 1592, column: 11, scope: !4774)
!4774 = distinct !DILexicalBlock(scope: !4771, file: !2590, line: 1591, column: 24)
!4775 = !DILocation(line: 0, scope: !4592)
!4776 = !DILocation(line: 1593, column: 4, scope: !4774)
!4777 = !DILocation(line: 1594, column: 11, scope: !4778)
!4778 = distinct !DILexicalBlock(scope: !4771, file: !2590, line: 1593, column: 11)
!4779 = !DILocation(line: 1604, column: 51, scope: !4590)
!4780 = !DILocation(line: 1604, column: 13, scope: !4590)
!4781 = !DILocation(line: 1604, column: 11, scope: !4590)
!4782 = !DILocation(line: 1606, column: 4, scope: !4590)
!4783 = !DILocation(line: 1609, column: 14, scope: !4784)
!4784 = distinct !DILexicalBlock(scope: !4590, file: !2590, line: 1609, column: 8)
!4785 = !DILocation(line: 1609, column: 8, scope: !4590)
!4786 = !DILocation(line: 1619, column: 18, scope: !4590)
!4787 = !DILocation(line: 1620, column: 13, scope: !4788)
!4788 = distinct !DILexicalBlock(scope: !4590, file: !2590, line: 1620, column: 8)
!4789 = !DILocation(line: 1620, column: 8, scope: !4590)
!4790 = !DILocation(line: 1622, column: 36, scope: !4791)
!4791 = distinct !DILexicalBlock(scope: !4788, file: !2590, line: 1620, column: 18)
!4792 = !DILocation(line: 1622, column: 17, scope: !4791)
!4793 = !DILocation(line: 1623, column: 4, scope: !4791)
!4794 = !DILocation(line: 1632, column: 29, scope: !4590)
!4795 = !DILocation(line: 1632, column: 10, scope: !4590)
!4796 = !DILocation(line: 1632, column: 4, scope: !4590)
!4797 = !DILocation(line: 1407, column: 8, scope: !4523)
!4798 = !DILocation(line: 0, scope: !4590)
!4799 = !DILocation(line: 1634, column: 3, scope: !4590)
!4800 = !DILocation(line: 1640, column: 18, scope: !4595)
!4801 = !DILocation(line: 1640, column: 8, scope: !4590)
!4802 = !DILocation(line: 1729, column: 13, scope: !4803)
!4803 = distinct !DILexicalBlock(scope: !4523, file: !2590, line: 1729, column: 7)
!4804 = !DILocation(line: 1641, column: 22, scope: !4594)
!4805 = !DILocation(line: 0, scope: !4594)
!4806 = !DILocation(line: 1646, column: 21, scope: !4594)
!4807 = !DILocation(line: 1649, column: 13, scope: !4808)
!4808 = distinct !DILexicalBlock(scope: !4594, file: !2590, line: 1649, column: 9)
!4809 = !DILocation(line: 1649, column: 9, scope: !4594)
!4810 = !DILocation(line: 1650, column: 35, scope: !4811)
!4811 = distinct !DILexicalBlock(scope: !4808, file: !2590, line: 1649, column: 34)
!4812 = !DILocation(line: 1650, column: 23, scope: !4811)
!4813 = !DILocation(line: 1651, column: 5, scope: !4811)
!4814 = !DILocation(line: 1660, column: 15, scope: !4815)
!4815 = distinct !DILexicalBlock(scope: !4590, file: !2590, line: 1660, column: 8)
!4816 = !DILocation(line: 1660, column: 19, scope: !4815)
!4817 = !DILocation(line: 1660, column: 8, scope: !4590)
!4818 = !DILocation(line: 1661, column: 23, scope: !4819)
!4819 = distinct !DILexicalBlock(scope: !4815, file: !2590, line: 1660, column: 28)
!4820 = !DILocation(line: 1661, column: 11, scope: !4819)
!4821 = !DILocation(line: 1665, column: 22, scope: !4819)
!4822 = !DILocation(line: 1666, column: 21, scope: !4819)
!4823 = !DILocation(line: 1668, column: 5, scope: !4819)
!4824 = !DILocation(line: 1677, column: 30, scope: !4825)
!4825 = distinct !DILexicalBlock(scope: !4826, file: !2590, line: 1676, column: 49)
!4826 = distinct !DILexicalBlock(scope: !4590, file: !2590, line: 1676, column: 8)
!4827 = !DILocation(line: 1677, column: 5, scope: !4825)
!4828 = !DILocation(line: 1680, column: 4, scope: !4590)
!4829 = !DILocation(line: 0, scope: !4771)
!4830 = !DILocation(line: 1597, column: 14, scope: !4592)
!4831 = !DILocation(line: 1699, column: 11, scope: !4832)
!4832 = distinct !DILexicalBlock(scope: !4523, file: !2590, line: 1699, column: 7)
!4833 = !DILocation(line: 1699, column: 7, scope: !4523)
!4834 = !DILocation(line: 1725, column: 7, scope: !4835)
!4835 = distinct !DILexicalBlock(scope: !4523, file: !2590, line: 1725, column: 7)
!4836 = !DILocation(line: 1725, column: 12, scope: !4835)
!4837 = !DILocation(line: 1747, column: 13, scope: !4602)
!4838 = !DILocation(line: 1747, column: 7, scope: !4523)
!4839 = !DILocation(line: 1722, column: 24, scope: !4523)
!4840 = !DILocation(line: 1725, column: 7, scope: !4523)
!4841 = !DILocation(line: 1729, column: 7, scope: !4523)
!4842 = !DILocation(line: 1736, column: 13, scope: !4843)
!4843 = distinct !DILexicalBlock(scope: !4523, file: !2590, line: 1736, column: 7)
!4844 = !DILocation(line: 1735, column: 19, scope: !4523)
!4845 = !DILocation(line: 1736, column: 7, scope: !4523)
!4846 = !DILocation(line: 1748, column: 10, scope: !4601)
!4847 = !DILocation(line: 1750, column: 15, scope: !4600)
!4848 = !DILocation(line: 1750, column: 8, scope: !4601)
!4849 = !DILocation(line: 0, scope: !4599)
!4850 = !DILocation(line: 1756, column: 15, scope: !4608)
!4851 = !DILocation(line: 1756, column: 9, scope: !4599)
!4852 = !DILocation(line: 1758, column: 7, scope: !4604)
!4853 = !DILocation(line: 0, scope: !4604)
!4854 = !DILocation(line: 1758, column: 7, scope: !4855)
!4855 = distinct !DILexicalBlock(scope: !4604, file: !2590, line: 1758, column: 7)
!4856 = !DILocation(line: 1764, column: 5, scope: !4599)
!4857 = !DILocation(line: 0, scope: !4601)
!4858 = !DILocation(line: 1764, column: 20, scope: !4599)
!4859 = !DILocation(line: 1764, column: 17, scope: !4599)
!4860 = !DILocation(line: 1765, column: 6, scope: !4610)
!4861 = !DILocation(line: 0, scope: !4610)
!4862 = !DILocation(line: 1765, column: 6, scope: !4863)
!4863 = distinct !DILexicalBlock(scope: !4610, file: !2590, line: 1765, column: 6)
!4864 = distinct !{!4864, !4856, !4865}
!4865 = !DILocation(line: 1766, column: 5, scope: !4599)
!4866 = !DILocation(line: 1773, column: 12, scope: !4615)
!4867 = !DILocation(line: 1773, column: 7, scope: !4523)
!4868 = !DILocation(line: 1773, column: 7, scope: !4615)
!4869 = !DILocation(line: 1774, column: 4, scope: !4613)
!4870 = !DILocation(line: 0, scope: !4613)
!4871 = !DILocation(line: 1774, column: 4, scope: !4872)
!4872 = distinct !DILexicalBlock(scope: !4613, file: !2590, line: 1774, column: 4)
!4873 = !DILocation(line: 1818, column: 8, scope: !4619)
!4874 = !DILocation(line: 1818, column: 27, scope: !4619)
!4875 = !DILocation(line: 1818, column: 25, scope: !4619)
!4876 = !DILocation(line: 1818, column: 8, scope: !4620)
!4877 = !DILocation(line: 1819, column: 5, scope: !4617)
!4878 = !DILocation(line: 0, scope: !4617)
!4879 = !DILocation(line: 1819, column: 5, scope: !4880)
!4880 = distinct !DILexicalBlock(scope: !4617, file: !2590, line: 1819, column: 5)
!4881 = !DILocation(line: 1822, column: 14, scope: !4625)
!4882 = !DILocation(line: 1822, column: 8, scope: !4620)
!4883 = !DILocation(line: 1823, column: 5, scope: !4623)
!4884 = !DILocation(line: 0, scope: !4623)
!4885 = !DILocation(line: 1823, column: 5, scope: !4886)
!4886 = distinct !DILexicalBlock(scope: !4623, file: !2590, line: 1823, column: 5)
!4887 = !DILocation(line: 1826, column: 20, scope: !4620)
!4888 = !DILocation(line: 1827, column: 4, scope: !4620)
!4889 = !DILocation(line: 0, scope: !4620)
!4890 = !DILocation(line: 1827, column: 21, scope: !4620)
!4891 = !DILocation(line: 1827, column: 18, scope: !4620)
!4892 = !DILocation(line: 1828, column: 5, scope: !4627)
!4893 = !DILocation(line: 0, scope: !4627)
!4894 = !DILocation(line: 1828, column: 5, scope: !4895)
!4895 = distinct !DILexicalBlock(scope: !4627, file: !2590, line: 1828, column: 5)
!4896 = distinct !{!4896, !4888, !4897}
!4897 = !DILocation(line: 1829, column: 4, scope: !4620)
!4898 = !DILocation(line: 1831, column: 4, scope: !4630)
!4899 = !DILocation(line: 0, scope: !4630)
!4900 = !DILocation(line: 1831, column: 4, scope: !4901)
!4901 = distinct !DILexicalBlock(scope: !4630, file: !2590, line: 1831, column: 4)
!4902 = !DILocation(line: 1835, column: 16, scope: !4523)
!4903 = !DILocation(line: 1835, column: 3, scope: !4523)
!4904 = !DILocation(line: 1836, column: 4, scope: !4632)
!4905 = !DILocation(line: 0, scope: !4632)
!4906 = !DILocation(line: 1836, column: 4, scope: !4907)
!4907 = distinct !DILexicalBlock(scope: !4632, file: !2590, line: 1836, column: 4)
!4908 = !DILocation(line: 1837, column: 4, scope: !4633)
!4909 = distinct !{!4909, !4903, !4910}
!4910 = !DILocation(line: 1838, column: 3, scope: !4523)
!4911 = !DILocation(line: 1844, column: 1, scope: !4496)
!4912 = distinct !DISubprogram(name: "extract_conversion", scope: !2590, file: !2590, line: 642, type: !4913, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2586, retainedNodes: !4915)
!4913 = !DISubroutineType(types: !4914)
!4914 = !{!118, !4569, !118}
!4915 = !{!4916, !4917}
!4916 = !DILocalVariable(name: "conv", arg: 1, scope: !4912, file: !2590, line: 642, type: !4569)
!4917 = !DILocalVariable(name: "sp", arg: 2, scope: !4912, file: !2590, line: 643, type: !118)
!4918 = !DILocation(line: 0, scope: !4912)
!4919 = !DILocation(line: 645, column: 10, scope: !4912)
!4920 = !DILocation(line: 653, column: 2, scope: !4912)
!4921 = !DILocation(line: 654, column: 6, scope: !4922)
!4922 = distinct !DILexicalBlock(scope: !4912, file: !2590, line: 654, column: 6)
!4923 = !DILocation(line: 654, column: 10, scope: !4922)
!4924 = !DILocation(line: 654, column: 6, scope: !4912)
!4925 = !DILocation(line: 655, column: 24, scope: !4926)
!4926 = distinct !DILexicalBlock(scope: !4922, file: !2590, line: 654, column: 18)
!4927 = !DILocation(line: 655, column: 19, scope: !4926)
!4928 = !DILocation(line: 656, column: 3, scope: !4926)
!4929 = !DILocation(line: 659, column: 7, scope: !4912)
!4930 = !DILocation(line: 660, column: 7, scope: !4912)
!4931 = !DILocation(line: 661, column: 7, scope: !4912)
!4932 = !DILocation(line: 662, column: 7, scope: !4912)
!4933 = !DILocation(line: 663, column: 7, scope: !4912)
!4934 = !DILocation(line: 665, column: 2, scope: !4912)
!4935 = !DILocation(line: 666, column: 1, scope: !4912)
!4936 = distinct !DISubprogram(name: "outs", scope: !2590, file: !2590, line: 1319, type: !4937, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2586, retainedNodes: !4939)
!4937 = !DISubroutineType(types: !4938)
!4938 = !{!107, !3651, !106, !118, !118}
!4939 = !{!4940, !4941, !4942, !4943, !4944, !4945}
!4940 = !DILocalVariable(name: "out", arg: 1, scope: !4936, file: !2590, line: 1319, type: !3651)
!4941 = !DILocalVariable(name: "ctx", arg: 2, scope: !4936, file: !2590, line: 1320, type: !106)
!4942 = !DILocalVariable(name: "sp", arg: 3, scope: !4936, file: !2590, line: 1321, type: !118)
!4943 = !DILocalVariable(name: "ep", arg: 4, scope: !4936, file: !2590, line: 1322, type: !118)
!4944 = !DILocalVariable(name: "count", scope: !4936, file: !2590, line: 1324, type: !185)
!4945 = !DILocalVariable(name: "rc", scope: !4946, file: !2590, line: 1327, type: !107)
!4946 = distinct !DILexicalBlock(scope: !4936, file: !2590, line: 1326, column: 45)
!4947 = !DILocation(line: 0, scope: !4936)
!4948 = !DILocation(line: 1326, column: 2, scope: !4936)
!4949 = !DILocation(line: 1324, column: 9, scope: !4936)
!4950 = !DILocation(line: 1326, column: 13, scope: !4936)
!4951 = !DILocation(line: 1326, column: 19, scope: !4936)
!4952 = !DILocation(line: 1327, column: 21, scope: !4946)
!4953 = !DILocation(line: 1326, column: 36, scope: !4936)
!4954 = !DILocation(line: 1326, column: 39, scope: !4936)
!4955 = !DILocation(line: 1327, column: 24, scope: !4946)
!4956 = !DILocation(line: 1327, column: 16, scope: !4946)
!4957 = !DILocation(line: 1327, column: 12, scope: !4946)
!4958 = !DILocation(line: 0, scope: !4946)
!4959 = !DILocation(line: 1329, column: 10, scope: !4960)
!4960 = distinct !DILexicalBlock(scope: !4946, file: !2590, line: 1329, column: 7)
!4961 = !DILocation(line: 1329, column: 7, scope: !4946)
!4962 = distinct !{!4962, !4948, !4963}
!4963 = !DILocation(line: 1333, column: 2, scope: !4936)
!4964 = !DILocation(line: 1336, column: 1, scope: !4936)
!4965 = distinct !DISubprogram(name: "encode_uint", scope: !2590, file: !2590, line: 788, type: !4966, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2586, retainedNodes: !4968)
!4966 = !DISubroutineType(types: !4967)
!4967 = !{!193, !2612, !4569, !193, !118}
!4968 = !{!4969, !4970, !4971, !4972, !4973, !4974, !4976, !4977}
!4969 = !DILocalVariable(name: "value", arg: 1, scope: !4965, file: !2590, line: 788, type: !2612)
!4970 = !DILocalVariable(name: "conv", arg: 2, scope: !4965, file: !2590, line: 789, type: !4569)
!4971 = !DILocalVariable(name: "bps", arg: 3, scope: !4965, file: !2590, line: 790, type: !193)
!4972 = !DILocalVariable(name: "bpe", arg: 4, scope: !4965, file: !2590, line: 791, type: !118)
!4973 = !DILocalVariable(name: "upcase", scope: !4965, file: !2590, line: 793, type: !145)
!4974 = !DILocalVariable(name: "radix", scope: !4965, file: !2590, line: 794, type: !4975)
!4975 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!4976 = !DILocalVariable(name: "bp", scope: !4965, file: !2590, line: 795, type: !193)
!4977 = !DILocalVariable(name: "lsv", scope: !4978, file: !2590, line: 798, type: !32)
!4978 = distinct !DILexicalBlock(scope: !4965, file: !2590, line: 797, column: 5)
!4979 = !DILocation(line: 0, scope: !4965)
!4980 = !DILocation(line: 793, column: 35, scope: !4965)
!4981 = !DILocation(line: 793, column: 24, scope: !4965)
!4982 = !DILocation(line: 793, column: 16, scope: !4965)
!4983 = !DILocation(line: 794, column: 29, scope: !4965)
!4984 = !DILocation(line: 795, column: 24, scope: !4965)
!4985 = !DILocation(line: 795, column: 17, scope: !4965)
!4986 = !DILocation(line: 797, column: 2, scope: !4965)
!4987 = !DILocation(line: 802, column: 9, scope: !4978)
!4988 = !DILocation(line: 798, column: 22, scope: !4978)
!4989 = !DILocation(line: 0, scope: !4978)
!4990 = !DILocation(line: 800, column: 16, scope: !4978)
!4991 = !DILocation(line: 800, column: 11, scope: !4978)
!4992 = !DILocation(line: 800, column: 4, scope: !4978)
!4993 = !DILocation(line: 800, column: 9, scope: !4978)
!4994 = !DILocation(line: 803, column: 18, scope: !4965)
!4995 = !DILocation(line: 803, column: 24, scope: !4965)
!4996 = !DILocation(line: 803, column: 2, scope: !4978)
!4997 = distinct !{!4997, !4986, !4998}
!4998 = !DILocation(line: 803, column: 37, scope: !4965)
!4999 = !DILocation(line: 808, column: 12, scope: !5000)
!5000 = distinct !DILexicalBlock(scope: !4965, file: !2590, line: 808, column: 6)
!5001 = !DILocation(line: 808, column: 6, scope: !4965)
!5002 = !DILocation(line: 809, column: 7, scope: !5003)
!5003 = distinct !DILexicalBlock(scope: !5000, file: !2590, line: 808, column: 23)
!5004 = !DILocation(line: 813, column: 3, scope: !5005)
!5005 = distinct !DILexicalBlock(scope: !5006, file: !2590, line: 811, column: 27)
!5006 = distinct !DILexicalBlock(scope: !5007, file: !2590, line: 811, column: 14)
!5007 = distinct !DILexicalBlock(scope: !5003, file: !2590, line: 809, column: 7)
!5008 = !DILocation(line: 0, scope: !5007)
!5009 = !DILocation(line: 818, column: 2, scope: !4965)
!5010 = distinct !DISubprogram(name: "store_count", scope: !2590, file: !2590, line: 1280, type: !5011, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2586, retainedNodes: !5015)
!5011 = !DISubroutineType(types: !5012)
!5012 = !{null, !5013, !106, !107}
!5013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5014, size: 32)
!5014 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4536)
!5015 = !{!5016, !5017, !5018}
!5016 = !DILocalVariable(name: "conv", arg: 1, scope: !5010, file: !2590, line: 1280, type: !5013)
!5017 = !DILocalVariable(name: "dp", arg: 2, scope: !5010, file: !2590, line: 1281, type: !106)
!5018 = !DILocalVariable(name: "count", arg: 3, scope: !5010, file: !2590, line: 1282, type: !107)
!5019 = !DILocation(line: 0, scope: !5010)
!5020 = !DILocation(line: 1284, column: 38, scope: !5010)
!5021 = !DILocation(line: 1284, column: 2, scope: !5010)
!5022 = !DILocation(line: 1286, column: 4, scope: !5023)
!5023 = distinct !DILexicalBlock(scope: !5010, file: !2590, line: 1284, column: 50)
!5024 = !DILocation(line: 1286, column: 14, scope: !5023)
!5025 = !DILocation(line: 1287, column: 3, scope: !5023)
!5026 = !DILocation(line: 1289, column: 24, scope: !5023)
!5027 = !DILocation(line: 1289, column: 22, scope: !5023)
!5028 = !DILocation(line: 1290, column: 3, scope: !5023)
!5029 = !DILocation(line: 1292, column: 18, scope: !5023)
!5030 = !DILocation(line: 1292, column: 4, scope: !5023)
!5031 = !DILocation(line: 1292, column: 16, scope: !5023)
!5032 = !DILocation(line: 1293, column: 3, scope: !5023)
!5033 = !DILocation(line: 1295, column: 4, scope: !5023)
!5034 = !DILocation(line: 1295, column: 15, scope: !5023)
!5035 = !DILocation(line: 1296, column: 3, scope: !5023)
!5036 = !DILocation(line: 1298, column: 22, scope: !5023)
!5037 = !DILocation(line: 1298, column: 4, scope: !5023)
!5038 = !DILocation(line: 1298, column: 20, scope: !5023)
!5039 = !DILocation(line: 1299, column: 3, scope: !5023)
!5040 = !DILocation(line: 1301, column: 21, scope: !5023)
!5041 = !DILocation(line: 1301, column: 4, scope: !5023)
!5042 = !DILocation(line: 1301, column: 19, scope: !5023)
!5043 = !DILocation(line: 1302, column: 3, scope: !5023)
!5044 = !DILocation(line: 1304, column: 4, scope: !5023)
!5045 = !DILocation(line: 1304, column: 17, scope: !5023)
!5046 = !DILocation(line: 1305, column: 3, scope: !5023)
!5047 = !DILocation(line: 1307, column: 4, scope: !5023)
!5048 = !DILocation(line: 1307, column: 20, scope: !5023)
!5049 = !DILocation(line: 1308, column: 3, scope: !5023)
!5050 = !DILocation(line: 1316, column: 1, scope: !5010)
!5051 = distinct !DISubprogram(name: "isupper", scope: !5052, file: !5052, line: 16, type: !214, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2586, retainedNodes: !5053)
!5052 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5053 = !{!5054}
!5054 = !DILocalVariable(name: "a", arg: 1, scope: !5051, file: !5052, line: 16, type: !107)
!5055 = !DILocation(line: 0, scope: !5051)
!5056 = !DILocation(line: 18, column: 29, scope: !5051)
!5057 = !DILocation(line: 18, column: 45, scope: !5051)
!5058 = !DILocation(line: 18, column: 2, scope: !5051)
!5059 = distinct !DISubprogram(name: "conversion_radix", scope: !2590, file: !2590, line: 761, type: !5060, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2586, retainedNodes: !5062)
!5060 = !DISubroutineType(types: !5061)
!5061 = !{!185, !120}
!5062 = !{!5063}
!5063 = !DILocalVariable(name: "specifier", arg: 1, scope: !5059, file: !2590, line: 761, type: !120)
!5064 = !DILocation(line: 0, scope: !5059)
!5065 = !DILocation(line: 763, column: 2, scope: !5059)
!5066 = !DILocation(line: 770, column: 3, scope: !5067)
!5067 = distinct !DILexicalBlock(scope: !5059, file: !2590, line: 763, column: 21)
!5068 = !DILocation(line: 774, column: 3, scope: !5067)
!5069 = !DILocation(line: 0, scope: !5067)
!5070 = !DILocation(line: 776, column: 1, scope: !5059)
!5071 = distinct !DISubprogram(name: "extract_flags", scope: !2590, file: !2590, line: 339, type: !4913, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2586, retainedNodes: !5072)
!5072 = !{!5073, !5074, !5075}
!5073 = !DILocalVariable(name: "conv", arg: 1, scope: !5071, file: !2590, line: 339, type: !4569)
!5074 = !DILocalVariable(name: "sp", arg: 2, scope: !5071, file: !2590, line: 340, type: !118)
!5075 = !DILocalVariable(name: "loop", scope: !5071, file: !2590, line: 342, type: !145)
!5076 = !DILocation(line: 0, scope: !5071)
!5077 = !DILocation(line: 344, column: 2, scope: !5071)
!5078 = !DILocation(line: 345, column: 11, scope: !5079)
!5079 = distinct !DILexicalBlock(scope: !5071, file: !2590, line: 344, column: 5)
!5080 = !DILocation(line: 345, column: 3, scope: !5079)
!5081 = !DILocation(line: 351, column: 4, scope: !5082)
!5082 = distinct !DILexicalBlock(scope: !5079, file: !2590, line: 345, column: 16)
!5083 = !DILocation(line: 354, column: 4, scope: !5082)
!5084 = !DILocation(line: 357, column: 4, scope: !5082)
!5085 = !DILocation(line: 360, column: 4, scope: !5082)
!5086 = !DILocation(line: 0, scope: !5082)
!5087 = !DILocation(line: 370, column: 12, scope: !5088)
!5088 = distinct !DILexicalBlock(scope: !5071, file: !2590, line: 370, column: 6)
!5089 = !DILocation(line: 370, column: 22, scope: !5088)
!5090 = !DILocation(line: 371, column: 19, scope: !5091)
!5091 = distinct !DILexicalBlock(scope: !5088, file: !2590, line: 370, column: 42)
!5092 = !DILocation(line: 372, column: 2, scope: !5091)
!5093 = !DILocation(line: 376, column: 2, scope: !5071)
!5094 = distinct !DISubprogram(name: "extract_width", scope: !2590, file: !2590, line: 388, type: !4913, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2586, retainedNodes: !5095)
!5095 = !{!5096, !5097, !5098, !5099}
!5096 = !DILocalVariable(name: "conv", arg: 1, scope: !5094, file: !2590, line: 388, type: !4569)
!5097 = !DILocalVariable(name: "sp", arg: 2, scope: !5094, file: !2590, line: 389, type: !118)
!5098 = !DILocalVariable(name: "wp", scope: !5094, file: !2590, line: 398, type: !118)
!5099 = !DILocalVariable(name: "width", scope: !5094, file: !2590, line: 399, type: !185)
!5100 = !DILocation(line: 0, scope: !5094)
!5101 = !DILocation(line: 391, column: 8, scope: !5094)
!5102 = !DILocation(line: 391, column: 22, scope: !5094)
!5103 = !DILocation(line: 393, column: 6, scope: !5104)
!5104 = distinct !DILexicalBlock(scope: !5094, file: !2590, line: 393, column: 6)
!5105 = !DILocation(line: 393, column: 10, scope: !5104)
!5106 = !DILocation(line: 393, column: 6, scope: !5094)
!5107 = !DILocation(line: 394, column: 20, scope: !5108)
!5108 = distinct !DILexicalBlock(scope: !5104, file: !2590, line: 393, column: 18)
!5109 = !DILocation(line: 395, column: 10, scope: !5108)
!5110 = !DILocation(line: 395, column: 3, scope: !5108)
!5111 = !DILocation(line: 399, column: 17, scope: !5094)
!5112 = !DILocation(line: 401, column: 6, scope: !5113)
!5113 = distinct !DILexicalBlock(scope: !5094, file: !2590, line: 401, column: 6)
!5114 = !DILocation(line: 401, column: 9, scope: !5113)
!5115 = !DILocation(line: 401, column: 6, scope: !5094)
!5116 = !DILocation(line: 402, column: 23, scope: !5117)
!5117 = distinct !DILexicalBlock(scope: !5113, file: !2590, line: 401, column: 16)
!5118 = !DILocation(line: 403, column: 9, scope: !5117)
!5119 = !DILocation(line: 403, column: 21, scope: !5117)
!5120 = !DILocation(line: 405, column: 11, scope: !5117)
!5121 = !DILocation(line: 404, column: 21, scope: !5117)
!5122 = !DILocation(line: 406, column: 2, scope: !5117)
!5123 = !DILocation(line: 409, column: 1, scope: !5094)
!5124 = distinct !DISubprogram(name: "extract_prec", scope: !2590, file: !2590, line: 420, type: !4913, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2586, retainedNodes: !5125)
!5125 = !{!5126, !5127, !5128}
!5126 = !DILocalVariable(name: "conv", arg: 1, scope: !5124, file: !2590, line: 420, type: !4569)
!5127 = !DILocalVariable(name: "sp", arg: 2, scope: !5124, file: !2590, line: 421, type: !118)
!5128 = !DILocalVariable(name: "prec", scope: !5124, file: !2590, line: 435, type: !185)
!5129 = !DILocation(line: 0, scope: !5124)
!5130 = !DILocation(line: 423, column: 24, scope: !5124)
!5131 = !DILocation(line: 423, column: 28, scope: !5124)
!5132 = !DILocation(line: 423, column: 8, scope: !5124)
!5133 = !DILocation(line: 423, column: 21, scope: !5124)
!5134 = !DILocation(line: 425, column: 6, scope: !5124)
!5135 = !DILocation(line: 428, column: 2, scope: !5124)
!5136 = !DILocation(line: 430, column: 6, scope: !5137)
!5137 = distinct !DILexicalBlock(scope: !5124, file: !2590, line: 430, column: 6)
!5138 = !DILocation(line: 430, column: 10, scope: !5137)
!5139 = !DILocation(line: 430, column: 6, scope: !5124)
!5140 = !DILocation(line: 431, column: 19, scope: !5141)
!5141 = distinct !DILexicalBlock(scope: !5137, file: !2590, line: 430, column: 18)
!5142 = !DILocation(line: 432, column: 10, scope: !5141)
!5143 = !DILocation(line: 432, column: 3, scope: !5141)
!5144 = !DILocation(line: 435, column: 16, scope: !5124)
!5145 = !DILocation(line: 437, column: 8, scope: !5124)
!5146 = !DILocation(line: 437, column: 19, scope: !5124)
!5147 = !DILocation(line: 439, column: 10, scope: !5124)
!5148 = !DILocation(line: 438, column: 20, scope: !5124)
!5149 = !DILocation(line: 441, column: 9, scope: !5124)
!5150 = !DILocation(line: 442, column: 1, scope: !5124)
!5151 = distinct !DISubprogram(name: "extract_length", scope: !2590, file: !2590, line: 453, type: !4913, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2586, retainedNodes: !5152)
!5152 = !{!5153, !5154}
!5153 = !DILocalVariable(name: "conv", arg: 1, scope: !5151, file: !2590, line: 453, type: !4569)
!5154 = !DILocalVariable(name: "sp", arg: 2, scope: !5151, file: !2590, line: 454, type: !118)
!5155 = !DILocation(line: 0, scope: !5151)
!5156 = !DILocation(line: 456, column: 10, scope: !5151)
!5157 = !DILocation(line: 456, column: 2, scope: !5151)
!5158 = !DILocation(line: 458, column: 8, scope: !5159)
!5159 = distinct !DILexicalBlock(scope: !5160, file: !2590, line: 458, column: 7)
!5160 = distinct !DILexicalBlock(scope: !5151, file: !2590, line: 456, column: 15)
!5161 = !DILocation(line: 458, column: 7, scope: !5159)
!5162 = !DILocation(line: 458, column: 13, scope: !5159)
!5163 = !DILocation(line: 0, scope: !5159)
!5164 = !DILocation(line: 458, column: 7, scope: !5160)
!5165 = !DILocation(line: 459, column: 21, scope: !5166)
!5166 = distinct !DILexicalBlock(scope: !5159, file: !2590, line: 458, column: 21)
!5167 = !DILocation(line: 460, column: 4, scope: !5166)
!5168 = !DILocation(line: 461, column: 3, scope: !5166)
!5169 = !DILocation(line: 462, column: 21, scope: !5170)
!5170 = distinct !DILexicalBlock(scope: !5159, file: !2590, line: 461, column: 10)
!5171 = !DILocation(line: 466, column: 8, scope: !5172)
!5172 = distinct !DILexicalBlock(scope: !5160, file: !2590, line: 466, column: 7)
!5173 = !DILocation(line: 466, column: 7, scope: !5172)
!5174 = !DILocation(line: 466, column: 13, scope: !5172)
!5175 = !DILocation(line: 0, scope: !5172)
!5176 = !DILocation(line: 466, column: 7, scope: !5160)
!5177 = !DILocation(line: 467, column: 21, scope: !5178)
!5178 = distinct !DILexicalBlock(scope: !5172, file: !2590, line: 466, column: 21)
!5179 = !DILocation(line: 468, column: 4, scope: !5178)
!5180 = !DILocation(line: 469, column: 3, scope: !5178)
!5181 = !DILocation(line: 470, column: 21, scope: !5182)
!5182 = distinct !DILexicalBlock(scope: !5172, file: !2590, line: 469, column: 10)
!5183 = !DILocation(line: 474, column: 9, scope: !5160)
!5184 = !DILocation(line: 474, column: 20, scope: !5160)
!5185 = !DILocation(line: 475, column: 3, scope: !5160)
!5186 = !DILocation(line: 476, column: 3, scope: !5160)
!5187 = !DILocation(line: 478, column: 9, scope: !5160)
!5188 = !DILocation(line: 478, column: 20, scope: !5160)
!5189 = !DILocation(line: 479, column: 3, scope: !5160)
!5190 = !DILocation(line: 480, column: 3, scope: !5160)
!5191 = !DILocation(line: 482, column: 9, scope: !5160)
!5192 = !DILocation(line: 482, column: 20, scope: !5160)
!5193 = !DILocation(line: 483, column: 3, scope: !5160)
!5194 = !DILocation(line: 484, column: 3, scope: !5160)
!5195 = !DILocation(line: 486, column: 9, scope: !5160)
!5196 = !DILocation(line: 486, column: 20, scope: !5160)
!5197 = !DILocation(line: 487, column: 3, scope: !5160)
!5198 = !DILocation(line: 492, column: 21, scope: !5160)
!5199 = !DILocation(line: 493, column: 3, scope: !5160)
!5200 = !DILocation(line: 495, column: 9, scope: !5160)
!5201 = !DILocation(line: 495, column: 20, scope: !5160)
!5202 = !DILocation(line: 496, column: 3, scope: !5160)
!5203 = !DILocation(line: 498, column: 2, scope: !5151)
!5204 = distinct !DISubprogram(name: "extract_specifier", scope: !2590, file: !2590, line: 513, type: !4913, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2586, retainedNodes: !5205)
!5205 = !{!5206, !5207, !5208, !5209}
!5206 = !DILocalVariable(name: "conv", arg: 1, scope: !5204, file: !2590, line: 513, type: !4569)
!5207 = !DILocalVariable(name: "sp", arg: 2, scope: !5204, file: !2590, line: 514, type: !118)
!5208 = !DILocalVariable(name: "unsupported", scope: !5204, file: !2590, line: 516, type: !145)
!5209 = !DILabel(scope: !5210, name: "int_conv", file: !2590, line: 526)
!5210 = distinct !DILexicalBlock(scope: !5204, file: !2590, line: 520, column: 27)
!5211 = !DILocation(line: 0, scope: !5204)
!5212 = !DILocation(line: 518, column: 20, scope: !5204)
!5213 = !DILocation(line: 518, column: 8, scope: !5204)
!5214 = !DILocation(line: 518, column: 18, scope: !5204)
!5215 = !DILocation(line: 520, column: 2, scope: !5204)
!5216 = !DILocation(line: 525, column: 3, scope: !5210)
!5217 = !DILocation(line: 0, scope: !5210)
!5218 = !DILocation(line: 526, column: 1, scope: !5210)
!5219 = !DILocation(line: 528, column: 24, scope: !5220)
!5220 = distinct !DILexicalBlock(scope: !5210, file: !2590, line: 528, column: 7)
!5221 = !DILocation(line: 528, column: 7, scope: !5210)
!5222 = !DILocation(line: 535, column: 23, scope: !5223)
!5223 = distinct !DILexicalBlock(scope: !5210, file: !2590, line: 535, column: 7)
!5224 = !DILocation(line: 535, column: 7, scope: !5210)
!5225 = !DILocation(line: 536, column: 36, scope: !5226)
!5226 = distinct !DILexicalBlock(scope: !5223, file: !2590, line: 535, column: 31)
!5227 = !DILocation(line: 537, column: 3, scope: !5226)
!5228 = !DILocation(line: 570, column: 9, scope: !5210)
!5229 = !DILocation(line: 570, column: 23, scope: !5210)
!5230 = !DILocation(line: 575, column: 4, scope: !5231)
!5231 = distinct !DILexicalBlock(scope: !5232, file: !2590, line: 573, column: 48)
!5232 = distinct !DILexicalBlock(scope: !5210, file: !2590, line: 573, column: 7)
!5233 = !DILocation(line: 603, column: 9, scope: !5210)
!5234 = !DILocation(line: 603, column: 23, scope: !5210)
!5235 = !DILocation(line: 605, column: 24, scope: !5236)
!5236 = distinct !DILexicalBlock(scope: !5210, file: !2590, line: 605, column: 7)
!5237 = !DILocation(line: 605, column: 7, scope: !5210)
!5238 = !DILocation(line: 612, column: 9, scope: !5210)
!5239 = !DILocation(line: 612, column: 23, scope: !5210)
!5240 = !DILocation(line: 619, column: 24, scope: !5241)
!5241 = distinct !DILexicalBlock(scope: !5210, file: !2590, line: 619, column: 7)
!5242 = !DILocation(line: 619, column: 7, scope: !5210)
!5243 = !DILocation(line: 625, column: 9, scope: !5210)
!5244 = !DILocation(line: 625, column: 17, scope: !5210)
!5245 = !DILocation(line: 626, column: 3, scope: !5210)
!5246 = !DILocation(line: 629, column: 20, scope: !5204)
!5247 = !DILocation(line: 629, column: 8, scope: !5204)
!5248 = !DILocation(line: 518, column: 23, scope: !5204)
!5249 = !DILocation(line: 631, column: 2, scope: !5204)
!5250 = distinct !DISubprogram(name: "extract_decimal", scope: !2590, file: !2590, line: 318, type: !5251, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2586, retainedNodes: !5253)
!5251 = !DISubroutineType(types: !5252)
!5252 = !{!185, !184}
!5253 = !{!5254, !5255, !5256}
!5254 = !DILocalVariable(name: "str", arg: 1, scope: !5250, file: !2590, line: 318, type: !184)
!5255 = !DILocalVariable(name: "sp", scope: !5250, file: !2590, line: 320, type: !118)
!5256 = !DILocalVariable(name: "val", scope: !5250, file: !2590, line: 321, type: !185)
!5257 = !DILocation(line: 0, scope: !5250)
!5258 = !DILocation(line: 320, column: 19, scope: !5250)
!5259 = !DILocation(line: 323, column: 37, scope: !5250)
!5260 = !DILocation(line: 323, column: 17, scope: !5250)
!5261 = !DILocation(line: 323, column: 9, scope: !5250)
!5262 = !DILocation(line: 323, column: 2, scope: !5250)
!5263 = !DILocation(line: 324, column: 13, scope: !5264)
!5264 = distinct !DILexicalBlock(scope: !5250, file: !2590, line: 323, column: 43)
!5265 = !DILocation(line: 324, column: 24, scope: !5264)
!5266 = !DILocation(line: 324, column: 19, scope: !5264)
!5267 = !DILocation(line: 324, column: 27, scope: !5264)
!5268 = distinct !{!5268, !5262, !5269}
!5269 = !DILocation(line: 325, column: 2, scope: !5250)
!5270 = !DILocation(line: 326, column: 7, scope: !5250)
!5271 = !DILocation(line: 327, column: 2, scope: !5250)
!5272 = distinct !DISubprogram(name: "isdigit", scope: !5052, file: !5052, line: 43, type: !214, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2586, retainedNodes: !5273)
!5273 = !{!5274}
!5274 = !DILocalVariable(name: "a", arg: 1, scope: !5272, file: !5052, line: 43, type: !107)
!5275 = !DILocation(line: 0, scope: !5272)
!5276 = !DILocation(line: 45, column: 29, scope: !5272)
!5277 = !DILocation(line: 45, column: 45, scope: !5272)
!5278 = !DILocation(line: 45, column: 2, scope: !5272)
!5279 = distinct !DISubprogram(name: "assert_post_action", scope: !5280, file: !5280, line: 26, type: !5281, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !5283)
!5280 = !DIFile(filename: "zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5281 = !DISubroutineType(types: !5282)
!5282 = !{null, !118, !32}
!5283 = !{!5284, !5285}
!5284 = !DILocalVariable(name: "file", arg: 1, scope: !5279, file: !5280, line: 26, type: !118)
!5285 = !DILocalVariable(name: "line", arg: 2, scope: !5279, file: !5280, line: 26, type: !32)
!5286 = !DILocation(line: 0, scope: !5279)
!5287 = !DILocation(line: 43, column: 2, scope: !5288)
!5288 = distinct !DILexicalBlock(scope: !5279, file: !5280, line: 43, column: 2)
!5289 = !{i64 2155072321, i64 2155072337, i64 2155072363, i64 2155072391, i64 2155072411}
!5290 = !DILocation(line: 44, column: 1, scope: !5279)
!5291 = distinct !DISubprogram(name: "assert_print", scope: !5280, file: !5280, line: 46, type: !4261, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !5292)
!5292 = !{!5293, !5294}
!5293 = !DILocalVariable(name: "fmt", arg: 1, scope: !5291, file: !5280, line: 46, type: !118)
!5294 = !DILocalVariable(name: "ap", scope: !5291, file: !5280, line: 48, type: !5295)
!5295 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3271, line: 99, baseType: !5296)
!5296 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3271, line: 40, baseType: !5297)
!5297 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !5280, baseType: !5298)
!5298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5299)
!5299 = !{!5300}
!5300 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5298, file: !5280, line: 48, baseType: !106, size: 32)
!5301 = !DILocation(line: 0, scope: !5291)
!5302 = !DILocation(line: 48, column: 2, scope: !5291)
!5303 = !DILocation(line: 48, column: 10, scope: !5291)
!5304 = !DILocation(line: 50, column: 2, scope: !5291)
!5305 = !DILocation(line: 52, column: 2, scope: !5291)
!5306 = !DILocation(line: 54, column: 2, scope: !5291)
!5307 = !DILocation(line: 55, column: 1, scope: !5291)
!5308 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !5309, file: !5309, line: 9, type: !3148, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2622, retainedNodes: !2236)
!5309 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pytest")
!5310 = !DILocation(line: 11, column: 1, scope: !5308)
!5311 = !{i64 2147567068, i64 2147567111, i64 2147567151}
!5312 = !DILocation(line: 12, column: 1, scope: !5308)
!5313 = !{i64 2147571295, i64 2147571338, i64 2147571378}
!5314 = !DILocation(line: 13, column: 1, scope: !5308)
!5315 = !{i64 2147571504, i64 2147571547, i64 2147571587}
!5316 = !DILocation(line: 14, column: 1, scope: !5308)
!5317 = !{i64 2147571673, i64 2147571716, i64 2147571756}
!5318 = !DILocation(line: 15, column: 1, scope: !5308)
!5319 = !{i64 2147571836, i64 2147571879, i64 2147571919}
!5320 = !DILocation(line: 16, column: 1, scope: !5308)
!5321 = !{i64 2147572020, i64 2147572063, i64 2147572103}
!5322 = !DILocation(line: 17, column: 1, scope: !5308)
!5323 = !{i64 2147572199, i64 2147572242, i64 2147572282}
!5324 = !DILocation(line: 18, column: 1, scope: !5308)
!5325 = !{i64 2147572441, i64 2147572484, i64 2147572524}
!5326 = !DILocation(line: 19, column: 1, scope: !5308)
!5327 = !{i64 2147572676, i64 2147572719, i64 2147572759}
!5328 = !DILocation(line: 20, column: 1, scope: !5308)
!5329 = !{i64 2147572862, i64 2147572905, i64 2147572945}
!5330 = !DILocation(line: 21, column: 1, scope: !5308)
!5331 = !{i64 2147573078, i64 2147573121, i64 2147573161}
!5332 = !DILocation(line: 22, column: 1, scope: !5308)
!5333 = !{i64 2147573281, i64 2147573324, i64 2147573364}
!5334 = !DILocation(line: 23, column: 1, scope: !5308)
!5335 = !{i64 2147573484, i64 2147573527, i64 2147573567}
!5336 = !DILocation(line: 24, column: 1, scope: !5308)
!5337 = !{i64 2147573659, i64 2147573702, i64 2147573742}
!5338 = !DILocation(line: 25, column: 1, scope: !5308)
!5339 = !{i64 2147573867, i64 2147573910, i64 2147573950}
!5340 = !DILocation(line: 26, column: 1, scope: !5308)
!5341 = !{i64 2147574071, i64 2147574114, i64 2147574154}
!5342 = !DILocation(line: 27, column: 1, scope: !5308)
!5343 = !{i64 2147574264, i64 2147574307, i64 2147574347}
!5344 = !DILocation(line: 28, column: 1, scope: !5308)
!5345 = !{i64 2147574466, i64 2147574509, i64 2147574549}
!5346 = !DILocation(line: 29, column: 1, scope: !5308)
!5347 = !{i64 2147574665, i64 2147574708, i64 2147574748}
!5348 = !DILocation(line: 30, column: 1, scope: !5308)
!5349 = !{i64 2147574892, i64 2147574935, i64 2147574975}
!5350 = !DILocation(line: 31, column: 1, scope: !5308)
!5351 = !{i64 2147575094, i64 2147575137, i64 2147575177}
!5352 = !DILocation(line: 32, column: 1, scope: !5308)
!5353 = !{i64 2147575309, i64 2147575352, i64 2147575392}
!5354 = !DILocation(line: 33, column: 1, scope: !5308)
!5355 = !{i64 2147575526, i64 2147575569, i64 2147575609}
!5356 = !DILocation(line: 34, column: 1, scope: !5308)
!5357 = !{i64 2147575698, i64 2147575741, i64 2147575781}
!5358 = !DILocation(line: 35, column: 1, scope: !5308)
!5359 = !{i64 2147575900, i64 2147575943, i64 2147575983}
!5360 = !DILocation(line: 36, column: 1, scope: !5308)
!5361 = !{i64 2147576126, i64 2147576169, i64 2147576209}
!5362 = !DILocation(line: 37, column: 1, scope: !5308)
!5363 = !{i64 2147576325, i64 2147576368, i64 2147576408}
!5364 = !DILocation(line: 38, column: 1, scope: !5308)
!5365 = !{i64 2147576500, i64 2147576543, i64 2147576583}
!5366 = !DILocation(line: 39, column: 1, scope: !5308)
!5367 = !{i64 2147576753, i64 2147576796, i64 2147576836}
!5368 = !DILocation(line: 40, column: 1, scope: !5308)
!5369 = !{i64 2147576994, i64 2147577037, i64 2147577077}
!5370 = !DILocation(line: 41, column: 1, scope: !5308)
!5371 = !{i64 2147577229, i64 2147577272, i64 2147577312}
!5372 = !DILocation(line: 42, column: 1, scope: !5308)
!5373 = !{i64 2147577461, i64 2147577504, i64 2147577544}
!5374 = !DILocation(line: 43, column: 1, scope: !5308)
!5375 = !{i64 2147577687, i64 2147577730, i64 2147577770}
!5376 = !DILocation(line: 44, column: 1, scope: !5308)
!5377 = !{i64 2147577913, i64 2147577956, i64 2147577996}
!5378 = !DILocation(line: 45, column: 1, scope: !5308)
!5379 = !{i64 2147578139, i64 2147578182, i64 2147578222}
!5380 = !DILocation(line: 46, column: 1, scope: !5308)
!5381 = !{i64 2147578374, i64 2147578417, i64 2147578457}
!5382 = !DILocation(line: 47, column: 1, scope: !5308)
!5383 = !{i64 2147578618, i64 2147578661, i64 2147578701}
!5384 = !DILocation(line: 48, column: 1, scope: !5308)
!5385 = !{i64 2147578865, i64 2147578908, i64 2147578948}
!5386 = !DILocation(line: 49, column: 1, scope: !5308)
!5387 = !{i64 2147579097, i64 2147579140, i64 2147579180}
!5388 = !DILocation(line: 50, column: 1, scope: !5308)
!5389 = !{i64 2147579341, i64 2147579384, i64 2147579424}
!5390 = !DILocation(line: 51, column: 1, scope: !5308)
!5391 = !{i64 2147579579, i64 2147579622, i64 2147579662}
!5392 = !DILocation(line: 52, column: 1, scope: !5308)
!5393 = !{i64 2147579853, i64 2147579896, i64 2147579936}
!5394 = !DILocation(line: 53, column: 1, scope: !5308)
!5395 = !{i64 2147584152, i64 2147584195, i64 2147584235}
!5396 = !DILocation(line: 54, column: 1, scope: !5308)
!5397 = !{i64 2147584405, i64 2147584448, i64 2147584488}
!5398 = !DILocation(line: 55, column: 1, scope: !5308)
!5399 = !{i64 2147584649, i64 2147584692, i64 2147584732}
!5400 = !DILocation(line: 56, column: 1, scope: !5308)
!5401 = !{i64 2147584884, i64 2147584927, i64 2147584967}
!5402 = !DILocation(line: 57, column: 1, scope: !5308)
!5403 = !{i64 2147585134, i64 2147585177, i64 2147585217}
!5404 = !DILocation(line: 58, column: 1, scope: !5308)
!5405 = !{i64 2147585381, i64 2147585424, i64 2147585464}
!5406 = !DILocation(line: 59, column: 1, scope: !5308)
!5407 = !{i64 2147585616, i64 2147585659, i64 2147585699}
!5408 = !DILocation(line: 60, column: 1, scope: !5308)
!5409 = !{i64 2147585851, i64 2147585894, i64 2147585934}
!5410 = !DILocation(line: 61, column: 1, scope: !5308)
!5411 = !{i64 2147586086, i64 2147586129, i64 2147586169}
!5412 = !DILocation(line: 62, column: 1, scope: !5308)
!5413 = !{i64 2147586321, i64 2147586364, i64 2147586404}
!5414 = !DILocation(line: 63, column: 1, scope: !5308)
!5415 = !{i64 2147586565, i64 2147586608, i64 2147586648}
!5416 = !DILocation(line: 64, column: 1, scope: !5308)
!5417 = !{i64 2147586803, i64 2147586846, i64 2147586886}
!5418 = !DILocation(line: 65, column: 1, scope: !5308)
!5419 = !{i64 2147587044, i64 2147587087, i64 2147587127}
!5420 = !DILocation(line: 66, column: 1, scope: !5308)
!5421 = !{i64 2147587324, i64 2147587367, i64 2147587407}
!5422 = !DILocation(line: 67, column: 1, scope: !5308)
!5423 = !{i64 2147587583, i64 2147587626, i64 2147587666}
!5424 = !DILocation(line: 68, column: 1, scope: !5308)
!5425 = !{i64 2147587821, i64 2147587864, i64 2147587904}
!5426 = !DILocation(line: 69, column: 1, scope: !5308)
!5427 = !{i64 2147588050, i64 2147588093, i64 2147588133}
!5428 = !DILocation(line: 70, column: 1, scope: !5308)
!5429 = !{i64 2147588258, i64 2147588301, i64 2147588341}
!5430 = !DILocation(line: 71, column: 1, scope: !5308)
!5431 = !{i64 2147588469, i64 2147588512, i64 2147588552}
!5432 = !DILocation(line: 72, column: 1, scope: !5308)
!5433 = !{i64 2147588704, i64 2147588747, i64 2147588787}
!5434 = !DILocation(line: 73, column: 1, scope: !5308)
!5435 = !{i64 2147588933, i64 2147588976, i64 2147589016}
!5436 = !DILocation(line: 74, column: 1, scope: !5308)
!5437 = !{i64 2147589150, i64 2147589193, i64 2147589233}
!5438 = !DILocation(line: 75, column: 1, scope: !5308)
!5439 = !{i64 2147589379, i64 2147589422, i64 2147589462}
!5440 = !DILocation(line: 76, column: 1, scope: !5308)
!5441 = !{i64 2147589617, i64 2147589660, i64 2147589700}
!5442 = !DILocation(line: 77, column: 1, scope: !5308)
!5443 = !{i64 2147589849, i64 2147589892, i64 2147589932}
!5444 = !DILocation(line: 78, column: 1, scope: !5308)
!5445 = !{i64 2147590075, i64 2147590118, i64 2147590158}
!5446 = !DILocation(line: 79, column: 1, scope: !5308)
!5447 = !{i64 2147590292, i64 2147590335, i64 2147590375}
!5448 = !DILocation(line: 80, column: 1, scope: !5308)
!5449 = !{i64 2147590524, i64 2147590567, i64 2147590607}
!5450 = !DILocation(line: 81, column: 1, scope: !5308)
!5451 = !{i64 2147590750, i64 2147590793, i64 2147590833}
!5452 = !DILocation(line: 82, column: 1, scope: !5308)
!5453 = !{i64 2147590964, i64 2147591007, i64 2147591047}
!5454 = !DILocation(line: 83, column: 1, scope: !5308)
!5455 = !{i64 2147591184, i64 2147591227, i64 2147591267}
!5456 = !DILocation(line: 84, column: 1, scope: !5308)
!5457 = !{i64 2147591416, i64 2147591459, i64 2147591499}
!5458 = !DILocation(line: 85, column: 1, scope: !5308)
!5459 = !{i64 2147591624, i64 2147591667, i64 2147591707}
!5460 = !DILocation(line: 86, column: 1, scope: !5308)
!5461 = !{i64 2147591829, i64 2147591872, i64 2147591912}
!5462 = !DILocation(line: 87, column: 1, scope: !5308)
!5463 = !{i64 2147592046, i64 2147592089, i64 2147592129}
!5464 = !DILocation(line: 88, column: 1, scope: !5308)
!5465 = !{i64 2147596321, i64 2147596364, i64 2147596404}
!5466 = !DILocation(line: 89, column: 1, scope: !5308)
!5467 = !{i64 2147596547, i64 2147596590, i64 2147596630}
!5468 = !DILocation(line: 90, column: 1, scope: !5308)
!5469 = !{i64 2147596767, i64 2147596810, i64 2147596850}
!5470 = !DILocation(line: 91, column: 1, scope: !5308)
!5471 = !{i64 2147596972, i64 2147597015, i64 2147597055}
!5472 = !DILocation(line: 92, column: 1, scope: !5308)
!5473 = !{i64 2147597204, i64 2147597247, i64 2147597287}
!5474 = !DILocation(line: 93, column: 1, scope: !5308)
!5475 = !{i64 2147597439, i64 2147597482, i64 2147597522}
!5476 = !DILocation(line: 94, column: 1, scope: !5308)
!5477 = !{i64 2147597689, i64 2147597732, i64 2147597772}
!5478 = !DILocation(line: 95, column: 1, scope: !5308)
!5479 = !{i64 2147597939, i64 2147597982, i64 2147598022}
!5480 = !DILocation(line: 96, column: 1, scope: !5308)
!5481 = !{i64 2147598177, i64 2147598220, i64 2147598260}
!5482 = !DILocation(line: 97, column: 1, scope: !5308)
!5483 = !{i64 2147598388, i64 2147598431, i64 2147598471}
!5484 = !DILocation(line: 98, column: 1, scope: !5308)
!5485 = !{i64 2147598605, i64 2147598648, i64 2147598688}
!5486 = !DILocation(line: 99, column: 1, scope: !5308)
!5487 = !{i64 2147598801, i64 2147598844, i64 2147598884}
!5488 = !DILocation(line: 100, column: 1, scope: !5308)
!5489 = !{i64 2147599003, i64 2147599046, i64 2147599086}
!5490 = !DILocation(line: 101, column: 1, scope: !5308)
!5491 = !{i64 2147599196, i64 2147599239, i64 2147599279}
!5492 = !DILocation(line: 102, column: 1, scope: !5308)
!5493 = !{i64 2147599404, i64 2147599447, i64 2147599487}
!5494 = !DILocation(line: 103, column: 1, scope: !5308)
!5495 = !{i64 2147599600, i64 2147599643, i64 2147599683}
!5496 = !DILocation(line: 104, column: 1, scope: !5308)
!5497 = !{i64 2147599832, i64 2147599875, i64 2147599915}
!5498 = !DILocation(line: 105, column: 1, scope: !5308)
!5499 = !{i64 2147600043, i64 2147600086, i64 2147600126}
!5500 = !DILocation(line: 106, column: 1, scope: !5308)
!5501 = !{i64 2147600242, i64 2147600285, i64 2147600325}
!5502 = !DILocation(line: 107, column: 1, scope: !5308)
!5503 = !{i64 2147600417, i64 2147600460, i64 2147600500}
!5504 = !DILocation(line: 108, column: 1, scope: !5308)
!5505 = !{i64 2147600601, i64 2147600644, i64 2147600684}
!5506 = !DILocation(line: 109, column: 1, scope: !5308)
!5507 = !{i64 2147600803, i64 2147600846, i64 2147600886}
!5508 = !DILocation(line: 110, column: 1, scope: !5308)
!5509 = !{i64 2147601002, i64 2147601045, i64 2147601085}
!5510 = !DILocation(line: 111, column: 1, scope: !5308)
!5511 = !{i64 2147601207, i64 2147601250, i64 2147601290}
!5512 = !DILocation(line: 112, column: 1, scope: !5308)
!5513 = !{i64 2147601400, i64 2147601443, i64 2147601483}
!5514 = !DILocation(line: 113, column: 1, scope: !5308)
!5515 = !{i64 2147601566, i64 2147601609, i64 2147601649}
!5516 = !DILocation(line: 114, column: 1, scope: !5308)
!5517 = !{i64 2147601750, i64 2147601793, i64 2147601833}
!5518 = !DILocation(line: 115, column: 1, scope: !5308)
!5519 = !{i64 2147601940, i64 2147601983, i64 2147602023}
!5520 = !DILocation(line: 116, column: 1, scope: !5308)
!5521 = !{i64 2147602124, i64 2147602167, i64 2147602207}
!5522 = !DILocation(line: 117, column: 1, scope: !5308)
!5523 = !{i64 2147602338, i64 2147602381, i64 2147602421}
!5524 = !DILocation(line: 118, column: 1, scope: !5308)
!5525 = !{i64 2147602549, i64 2147602592, i64 2147602632}
!5526 = !DILocation(line: 119, column: 1, scope: !5308)
!5527 = !{i64 2147602772, i64 2147602815, i64 2147602855}
!5528 = !DILocation(line: 120, column: 1, scope: !5308)
!5529 = !{i64 2147602956, i64 2147602999, i64 2147603039}
!5530 = !DILocation(line: 121, column: 1, scope: !5308)
!5531 = !{i64 2147603170, i64 2147603213, i64 2147603253}
!5532 = !DILocation(line: 122, column: 1, scope: !5308)
!5533 = !{i64 2147603336, i64 2147603379, i64 2147603419}
!5534 = !DILocation(line: 123, column: 1, scope: !5308)
!5535 = !{i64 2147603517, i64 2147603560, i64 2147603600}
!5536 = !DILocation(line: 124, column: 1, scope: !5308)
!5537 = !{i64 2147603710, i64 2147603753, i64 2147603793}
!5538 = !DILocation(line: 125, column: 1, scope: !5308)
!5539 = !{i64 2147603936, i64 2147603979, i64 2147604019}
!5540 = !DILocation(line: 126, column: 1, scope: !5308)
!5541 = !{i64 2147604150, i64 2147604193, i64 2147604233}
!5542 = !DILocation(line: 127, column: 1, scope: !5308)
!5543 = !{i64 2147604376, i64 2147604419, i64 2147604459}
!5544 = !DILocation(line: 128, column: 1, scope: !5308)
!5545 = !{i64 2147604593, i64 2147604636, i64 2147604676}
!5546 = !DILocation(line: 129, column: 1, scope: !5308)
!5547 = !{i64 2147604870, i64 2147604913, i64 2147604953}
!5548 = !DILocation(line: 130, column: 1, scope: !5308)
!5549 = !{i64 2147605096, i64 2147605139, i64 2147605179}
!5550 = !DILocation(line: 131, column: 1, scope: !5308)
!5551 = !{i64 2147605304, i64 2147605347, i64 2147605387}
!5552 = !DILocation(line: 132, column: 1, scope: !5308)
!5553 = !{i64 2147609561, i64 2147609604, i64 2147609644}
!5554 = !DILocation(line: 133, column: 1, scope: !5308)
!5555 = !{i64 2147609826, i64 2147609869, i64 2147609909}
!5556 = !DILocation(line: 134, column: 1, scope: !5308)
!5557 = !{i64 2147610040, i64 2147610083, i64 2147610123}
!5558 = !DILocation(line: 135, column: 1, scope: !5308)
!5559 = !{i64 2147610215, i64 2147610258, i64 2147610298}
!5560 = !DILocation(line: 136, column: 1, scope: !5308)
!5561 = !{i64 2147610469, i64 2147610512, i64 2147610552}
!5562 = !DILocation(line: 137, column: 1, scope: !5308)
!5563 = !{i64 2147610668, i64 2147610711, i64 2147610751}
!5564 = !DILocation(line: 138, column: 1, scope: !5308)
!5565 = !{i64 2147610910, i64 2147610953, i64 2147610993}
!5566 = !DILocation(line: 139, column: 1, scope: !5308)
!5567 = !{i64 2147611073, i64 2147611116, i64 2147611156}
!5568 = !DILocation(line: 140, column: 1, scope: !5308)
!5569 = !{i64 2147611260, i64 2147611303, i64 2147611343}
!5570 = !DILocation(line: 141, column: 1, scope: !5308)
!5571 = !{i64 2147611468, i64 2147611511, i64 2147611551}
!5572 = !DILocation(line: 142, column: 1, scope: !5308)
!5573 = !{i64 2147611664, i64 2147611707, i64 2147611747}
!5574 = !DILocation(line: 143, column: 1, scope: !5308)
!5575 = !{i64 2147611857, i64 2147611900, i64 2147611940}
!5576 = !DILocation(line: 144, column: 1, scope: !5308)
!5577 = !{i64 2147612040, i64 2147612083, i64 2147612123}
!5578 = !DILocation(line: 145, column: 1, scope: !5308)
!5579 = !{i64 2147612254, i64 2147612297, i64 2147612337}
!5580 = !DILocation(line: 146, column: 1, scope: !5308)
!5581 = !{i64 2147612465, i64 2147612508, i64 2147612548}
!5582 = !DILocation(line: 147, column: 1, scope: !5308)
!5583 = !{i64 2147612685, i64 2147612728, i64 2147612768}
!5584 = !DILocation(line: 148, column: 1, scope: !5308)
!5585 = !{i64 2147612892, i64 2147612935, i64 2147612975}
!5586 = !DILocation(line: 149, column: 1, scope: !5308)
!5587 = !{i64 2147613165, i64 2147613208, i64 2147613248}
!5588 = !DILocation(line: 150, column: 1, scope: !5308)
!5589 = !{i64 2147613413, i64 2147613456, i64 2147613496}
!5590 = !DILocation(line: 151, column: 1, scope: !5308)
!5591 = !{i64 2147613612, i64 2147613655, i64 2147613695}
!5592 = !DILocation(line: 152, column: 1, scope: !5308)
!5593 = !{i64 2147613847, i64 2147613890, i64 2147613930}
!5594 = !DILocation(line: 153, column: 1, scope: !5308)
!5595 = !{i64 2147614097, i64 2147614140, i64 2147614180}
!5596 = !DILocation(line: 154, column: 1, scope: !5308)
!5597 = !{i64 2147614299, i64 2147614342, i64 2147614382}
!5598 = !DILocation(line: 155, column: 1, scope: !5308)
!5599 = !{i64 2147614522, i64 2147614565, i64 2147614605}
!5600 = !DILocation(line: 156, column: 1, scope: !5308)
!5601 = !{i64 2147614736, i64 2147614779, i64 2147614819}
!5602 = !DILocation(line: 157, column: 1, scope: !5308)
!5603 = !{i64 2147614980, i64 2147615023, i64 2147615063}
!5604 = !DILocation(line: 158, column: 1, scope: !5308)
!5605 = !{i64 2147615209, i64 2147615252, i64 2147615292}
!5606 = !DILocation(line: 159, column: 1, scope: !5308)
!5607 = !{i64 2147615438, i64 2147615481, i64 2147615521}
!5608 = !DILocation(line: 160, column: 1, scope: !5308)
!5609 = !{i64 2147615646, i64 2147615689, i64 2147615729}
!5610 = !DILocation(line: 161, column: 1, scope: !5308)
!5611 = !{i64 2147615884, i64 2147615927, i64 2147615967}
!5612 = !DILocation(line: 162, column: 1, scope: !5308)
!5613 = !{i64 2147616110, i64 2147616153, i64 2147616193}
!5614 = !DILocation(line: 163, column: 1, scope: !5308)
!5615 = !{i64 2147616369, i64 2147616412, i64 2147616452}
!5616 = !DILocation(line: 164, column: 1, scope: !5308)
!5617 = !{i64 2147616589, i64 2147616632, i64 2147616672}
!5618 = !DILocation(line: 165, column: 1, scope: !5308)
!5619 = !{i64 2147616821, i64 2147616864, i64 2147616904}
!5620 = !DILocation(line: 166, column: 1, scope: !5308)
!5621 = !{i64 2147617062, i64 2147617105, i64 2147617145}
!5622 = !DILocation(line: 167, column: 1, scope: !5308)
!5623 = !{i64 2147617303, i64 2147617346, i64 2147617386}
!5624 = !DILocation(line: 168, column: 1, scope: !5308)
!5625 = !{i64 2147617526, i64 2147617569, i64 2147617609}
!5626 = !DILocation(line: 169, column: 1, scope: !5308)
!5627 = !{i64 2147617743, i64 2147617786, i64 2147617826}
!5628 = !DILocation(line: 170, column: 1, scope: !5308)
!5629 = !{i64 2147622045, i64 2147622088, i64 2147622128}
!5630 = !DILocation(line: 171, column: 1, scope: !5308)
!5631 = !{i64 2147622232, i64 2147622275, i64 2147622315}
!5632 = !DILocation(line: 172, column: 1, scope: !5308)
!5633 = !{i64 2147622419, i64 2147622462, i64 2147622502}
!5634 = !DILocation(line: 173, column: 1, scope: !5308)
!5635 = !{i64 2147622582, i64 2147622625, i64 2147622665}
!5636 = !DILocation(line: 174, column: 1, scope: !5308)
!5637 = !{i64 2147622787, i64 2147622830, i64 2147622870}
!5638 = !DILocation(line: 175, column: 1, scope: !5308)
!5639 = !{i64 2147622980, i64 2147623023, i64 2147623063}
!5640 = !DILocation(line: 176, column: 1, scope: !5308)
!5641 = !{i64 2147623239, i64 2147623282, i64 2147623322}
!5642 = !DILocation(line: 177, column: 1, scope: !5308)
!5643 = !{i64 2147623462, i64 2147623505, i64 2147623545}
!5644 = !DILocation(line: 178, column: 1, scope: !5308)
!5645 = !{i64 2147623691, i64 2147623734, i64 2147623774}
!5646 = !DILocation(line: 179, column: 1, scope: !5308)
!5647 = !{i64 2147623905, i64 2147623948, i64 2147623988}
!5648 = !DILocation(line: 180, column: 1, scope: !5308)
!5649 = !{i64 2147624107, i64 2147624150, i64 2147624190}
!5650 = !DILocation(line: 181, column: 1, scope: !5308)
!5651 = !{i64 2147624303, i64 2147624346, i64 2147624386}
!5652 = !DILocation(line: 182, column: 1, scope: !5308)
!5653 = !{i64 2147624515, i64 2147624558, i64 2147624598}
!5654 = !DILocation(line: 183, column: 1, scope: !5308)
!5655 = !{i64 2147624736, i64 2147624779, i64 2147624819}
!5656 = !DILocation(line: 184, column: 1, scope: !5308)
!5657 = !{i64 2147624950, i64 2147624993, i64 2147625033}
!5658 = !DILocation(line: 185, column: 1, scope: !5308)
!5659 = !{i64 2147625140, i64 2147625183, i64 2147625223}
!5660 = !DILocation(line: 186, column: 1, scope: !5308)
!5661 = !{i64 2147625339, i64 2147625382, i64 2147625422}
!5662 = !DILocation(line: 187, column: 1, scope: !5308)
!5663 = !{i64 2147625544, i64 2147625587, i64 2147625627}
!5664 = !DILocation(line: 188, column: 1, scope: !5308)
!5665 = !{i64 2147625764, i64 2147625807, i64 2147625847}
!5666 = !DILocation(line: 189, column: 1, scope: !5308)
!5667 = !{i64 2147625966, i64 2147626009, i64 2147626049}
!5668 = !DILocation(line: 190, column: 1, scope: !5308)
!5669 = !{i64 2147626165, i64 2147626208, i64 2147626248}
!5670 = !DILocation(line: 191, column: 1, scope: !5308)
!5671 = !{i64 2147626370, i64 2147626413, i64 2147626453}
!5672 = !DILocation(line: 192, column: 1, scope: !5308)
!5673 = !{i64 2147626539, i64 2147626582, i64 2147626622}
!5674 = !DILocation(line: 193, column: 1, scope: !5308)
!5675 = !{i64 2147626723, i64 2147626766, i64 2147626806}
!5676 = !DILocation(line: 194, column: 1, scope: !5308)
!5677 = !{i64 2147626907, i64 2147626950, i64 2147626990}
!5678 = !DILocation(line: 195, column: 1, scope: !5308)
!5679 = !{i64 2147627094, i64 2147627137, i64 2147627177}
!5680 = !DILocation(line: 196, column: 1, scope: !5308)
!5681 = !{i64 2147627278, i64 2147627321, i64 2147627361}
!5682 = !DILocation(line: 197, column: 1, scope: !5308)
!5683 = !{i64 2147627465, i64 2147627508, i64 2147627548}
!5684 = !DILocation(line: 198, column: 1, scope: !5308)
!5685 = !{i64 2147627677, i64 2147627720, i64 2147627760}
!5686 = !DILocation(line: 199, column: 1, scope: !5308)
!5687 = !{i64 2147627915, i64 2147627958, i64 2147627998}
!5688 = !DILocation(line: 200, column: 1, scope: !5308)
!5689 = !{i64 2147628145, i64 2147628188, i64 2147628228}
!5690 = !DILocation(line: 201, column: 1, scope: !5308)
!5691 = !{i64 2147628374, i64 2147628417, i64 2147628457}
!5692 = !DILocation(line: 202, column: 1, scope: !5308)
!5693 = !{i64 2147628561, i64 2147628604, i64 2147628644}
!5694 = !DILocation(line: 203, column: 1, scope: !5308)
!5695 = !{i64 2147628757, i64 2147628800, i64 2147628840}
!5696 = !DILocation(line: 204, column: 1, scope: !5308)
!5697 = !{i64 2147628965, i64 2147629008, i64 2147629048}
!5698 = !DILocation(line: 205, column: 1, scope: !5308)
!5699 = !{i64 2147629177, i64 2147629220, i64 2147629260}
!5700 = !DILocation(line: 206, column: 1, scope: !5308)
!5701 = !{i64 2147629376, i64 2147629419, i64 2147629459}
!5702 = !DILocation(line: 207, column: 1, scope: !5308)
!5703 = !{i64 2147629614, i64 2147629657, i64 2147629697}
!5704 = !DILocation(line: 208, column: 1, scope: !5308)
!5705 = !{i64 2147629810, i64 2147629853, i64 2147629893}
!5706 = !DILocation(line: 209, column: 1, scope: !5308)
!5707 = !{i64 2147630012, i64 2147630055, i64 2147630095}
!5708 = !DILocation(line: 210, column: 1, scope: !5308)
!5709 = !{i64 2147630205, i64 2147630248, i64 2147630288}
!5710 = !DILocation(line: 211, column: 1, scope: !5308)
!5711 = !{i64 2147630439, i64 2147630482, i64 2147630522}
!5712 = !DILocation(line: 212, column: 1, scope: !5308)
!5713 = !{i64 2147630602, i64 2147630645, i64 2147630685}
!5714 = !DILocation(line: 213, column: 1, scope: !5308)
!5715 = !{i64 2147630841, i64 2147630884, i64 2147630924}
!5716 = !DILocation(line: 214, column: 1, scope: !5308)
!5717 = !{i64 2147631080, i64 2147631123, i64 2147631163}
!5718 = !DILocation(line: 215, column: 1, scope: !5308)
!5719 = !{i64 2147635377, i64 2147635420, i64 2147635460}
!5720 = !DILocation(line: 216, column: 1, scope: !5308)
!5721 = !{i64 2147635607, i64 2147635650, i64 2147635690}
!5722 = !DILocation(line: 217, column: 1, scope: !5308)
!5723 = !{i64 2147635794, i64 2147635837, i64 2147635877}
!5724 = !DILocation(line: 218, column: 1, scope: !5308)
!5725 = !{i64 2147635993, i64 2147636036, i64 2147636076}
!5726 = !DILocation(line: 219, column: 1, scope: !5308)
!5727 = !{i64 2147636264, i64 2147636307, i64 2147636347}
!5728 = !DILocation(line: 220, column: 1, scope: !5308)
!5729 = !{i64 2147636439, i64 2147636482, i64 2147636522}
!5730 = !DILocation(line: 221, column: 1, scope: !5308)
!5731 = !{i64 2147636673, i64 2147636716, i64 2147636756}
!5732 = !DILocation(line: 222, column: 1, scope: !5308)
!5733 = !{i64 2147636881, i64 2147636924, i64 2147636964}
!5734 = !DILocation(line: 223, column: 1, scope: !5308)
!5735 = !{i64 2147637099, i64 2147637142, i64 2147637182}
!5736 = !DILocation(line: 224, column: 1, scope: !5308)
!5737 = !{i64 2147637289, i64 2147637332, i64 2147637372}
!5738 = !DILocation(line: 225, column: 1, scope: !5308)
!5739 = !{i64 2147637521, i64 2147637564, i64 2147637604}
!5740 = !DILocation(line: 226, column: 1, scope: !5308)
!5741 = !{i64 2147637741, i64 2147637784, i64 2147637824}
!5742 = !DILocation(line: 227, column: 1, scope: !5308)
!5743 = !{i64 2147637937, i64 2147637980, i64 2147638020}
!5744 = !DILocation(line: 228, column: 1, scope: !5308)
!5745 = !{i64 2147638143, i64 2147638186, i64 2147638226}
!5746 = !DILocation(line: 229, column: 1, scope: !5308)
!5747 = !{i64 2147638348, i64 2147638391, i64 2147638431}
!5748 = !DILocation(line: 230, column: 1, scope: !5308)
!5749 = !{i64 2147638562, i64 2147638605, i64 2147638645}
!5750 = !DILocation(line: 231, column: 1, scope: !5308)
!5751 = !{i64 2147638788, i64 2147638831, i64 2147638871}
!5752 = !DILocation(line: 232, column: 1, scope: !5308)
!5753 = !{i64 2147638996, i64 2147639039, i64 2147639079}
!5754 = !DILocation(line: 233, column: 1, scope: !5308)
!5755 = !{i64 2147639192, i64 2147639235, i64 2147639275}
!5756 = !DILocation(line: 234, column: 1, scope: !5308)
!5757 = !{i64 2147639424, i64 2147639467, i64 2147639507}
!5758 = !DILocation(line: 235, column: 1, scope: !5308)
!5759 = !{i64 2147639608, i64 2147639651, i64 2147639691}
!5760 = !DILocation(line: 236, column: 1, scope: !5308)
!5761 = !{i64 2147639817, i64 2147639860, i64 2147639900}
!5762 = !DILocation(line: 237, column: 1, scope: !5308)
!5763 = !{i64 2147640025, i64 2147640068, i64 2147640108}
!5764 = !DILocation(line: 238, column: 1, scope: !5308)
!5765 = !{i64 2147640221, i64 2147640264, i64 2147640304}
!5766 = !DILocation(line: 239, column: 1, scope: !5308)
!5767 = !{i64 2147640405, i64 2147640448, i64 2147640488}
!5768 = !DILocation(line: 240, column: 1, scope: !5308)
!5769 = !{i64 2147640631, i64 2147640674, i64 2147640714}
!5770 = !DILocation(line: 241, column: 1, scope: !5308)
!5771 = !{i64 2147640857, i64 2147640900, i64 2147640940}
!5772 = !DILocation(line: 242, column: 1, scope: !5308)
!5773 = !{i64 2147641083, i64 2147641126, i64 2147641166}
!5774 = !DILocation(line: 243, column: 1, scope: !5308)
!5775 = !{i64 2147641309, i64 2147641352, i64 2147641392}
!5776 = !DILocation(line: 244, column: 1, scope: !5308)
!5777 = !{i64 2147641535, i64 2147641578, i64 2147641618}
!5778 = !DILocation(line: 245, column: 1, scope: !5308)
!5779 = !{i64 2147641767, i64 2147641810, i64 2147641850}
!5780 = !DILocation(line: 246, column: 1, scope: !5308)
!5781 = !{i64 2147642005, i64 2147642048, i64 2147642088}
!5782 = !DILocation(line: 247, column: 1, scope: !5308)
!5783 = !{i64 2147642225, i64 2147642268, i64 2147642308}
!5784 = !DILocation(line: 248, column: 1, scope: !5308)
!5785 = !{i64 2147642469, i64 2147642512, i64 2147642552}
!5786 = !DILocation(line: 249, column: 1, scope: !5308)
!5787 = !{i64 2147642710, i64 2147642753, i64 2147642793}
!5788 = !DILocation(line: 250, column: 1, scope: !5308)
!5789 = !{i64 2147642945, i64 2147642988, i64 2147643028}
!5790 = !DILocation(line: 251, column: 1, scope: !5308)
!5791 = !{i64 2147643177, i64 2147643220, i64 2147643260}
!5792 = !DILocation(line: 252, column: 1, scope: !5308)
!5793 = !{i64 2147643379, i64 2147643422, i64 2147643462}
!5794 = !DILocation(line: 253, column: 1, scope: !5308)
!5795 = !{i64 2147643629, i64 2147643672, i64 2147643712}
!5796 = !DILocation(line: 254, column: 1, scope: !5308)
!5797 = !{i64 2147643867, i64 2147643910, i64 2147643950}
!5798 = !DILocation(line: 255, column: 1, scope: !5308)
!5799 = !{i64 2147648136, i64 2147648179, i64 2147648219}
!5800 = !DILocation(line: 256, column: 1, scope: !5308)
!5801 = !{i64 2147648332, i64 2147648375, i64 2147648415}
!5802 = !DILocation(line: 257, column: 1, scope: !5308)
!5803 = !{i64 2147648516, i64 2147648559, i64 2147648599}
!5804 = !DILocation(line: 258, column: 1, scope: !5308)
!5805 = !{i64 2147648733, i64 2147648776, i64 2147648816}
!5806 = !DILocation(line: 259, column: 1, scope: !5308)
!5807 = !{i64 2147648938, i64 2147648981, i64 2147649021}
!5808 = !DILocation(line: 260, column: 1, scope: !5308)
!5809 = !{i64 2147649173, i64 2147649216, i64 2147649256}
!5810 = !DILocation(line: 261, column: 1, scope: !5308)
!5811 = !{i64 2147649396, i64 2147649439, i64 2147649479}
!5812 = !DILocation(line: 262, column: 1, scope: !5308)
!5813 = !{i64 2147649620, i64 2147649663, i64 2147649703}
!5814 = !DILocation(line: 263, column: 1, scope: !5308)
!5815 = !{i64 2147649858, i64 2147649901, i64 2147649941}
!5816 = !DILocation(line: 264, column: 1, scope: !5308)
!5817 = !{i64 2147650096, i64 2147650139, i64 2147650179}
!5818 = !DILocation(line: 265, column: 1, scope: !5308)
!5819 = !{i64 2147650313, i64 2147650356, i64 2147650396}
!5820 = !DILocation(line: 266, column: 1, scope: !5308)
!5821 = !{i64 2147650518, i64 2147650561, i64 2147650601}
!5822 = !DILocation(line: 267, column: 1, scope: !5308)
!5823 = !{i64 2147650711, i64 2147650754, i64 2147650794}
!5824 = !DILocation(line: 268, column: 1, scope: !5308)
!5825 = !{i64 2147650964, i64 2147651007, i64 2147651047}
!5826 = !DILocation(line: 269, column: 1, scope: !5308)
!5827 = !{i64 2147651172, i64 2147651215, i64 2147651255}
!5828 = !DILocation(line: 270, column: 1, scope: !5308)
!5829 = !{i64 2147651368, i64 2147651411, i64 2147651451}
!5830 = !DILocation(line: 271, column: 1, scope: !5308)
!5831 = !{i64 2147651582, i64 2147651625, i64 2147651665}
!5832 = !DILocation(line: 272, column: 1, scope: !5308)
!5833 = !{i64 2147651790, i64 2147651833, i64 2147651873}
!5834 = !DILocation(line: 273, column: 1, scope: !5308)
!5835 = !{i64 2147651980, i64 2147652023, i64 2147652063}
!5836 = !DILocation(line: 274, column: 1, scope: !5308)
!5837 = !{i64 2147652194, i64 2147652237, i64 2147652277}
!5838 = !DILocation(line: 275, column: 1, scope: !5308)
!5839 = !{i64 2147652456, i64 2147652499, i64 2147652539}
!5840 = !DILocation(line: 276, column: 1, scope: !5308)
!5841 = !{i64 2147652667, i64 2147652710, i64 2147652750}
!5842 = !DILocation(line: 277, column: 1, scope: !5308)
!5843 = !{i64 2147652911, i64 2147652954, i64 2147652994}
!5844 = !DILocation(line: 278, column: 1, scope: !5308)
!5845 = !{i64 2147653122, i64 2147653165, i64 2147653205}
!5846 = !DILocation(line: 279, column: 1, scope: !5308)
!5847 = !{i64 2147653351, i64 2147653394, i64 2147653434}
!5848 = !DILocation(line: 280, column: 1, scope: !5308)
!5849 = !{i64 2147653616, i64 2147653659, i64 2147653699}
!5850 = !DILocation(line: 281, column: 1, scope: !5308)
!5851 = !{i64 2147653821, i64 2147653864, i64 2147653904}
!5852 = !DILocation(line: 282, column: 1, scope: !5308)
!5853 = !{i64 2147654017, i64 2147654060, i64 2147654100}
!5854 = !DILocation(line: 283, column: 1, scope: !5308)
!5855 = !{i64 2147654240, i64 2147654283, i64 2147654323}
!5856 = !DILocation(line: 284, column: 1, scope: !5308)
!5857 = !{i64 2147654403, i64 2147654446, i64 2147654486}
!5858 = !DILocation(line: 285, column: 1, scope: !5308)
!5859 = !{i64 2147654608, i64 2147654651, i64 2147654691}
!5860 = !DILocation(line: 286, column: 1, scope: !5308)
!5861 = !{i64 2147654828, i64 2147654871, i64 2147654911}
!5862 = !DILocation(line: 287, column: 1, scope: !5308)
!5863 = !{i64 2147655042, i64 2147655085, i64 2147655125}
!5864 = !DILocation(line: 288, column: 1, scope: !5308)
!5865 = !{i64 2147655286, i64 2147655329, i64 2147655369}
!5866 = !DILocation(line: 289, column: 1, scope: !5308)
!5867 = !{i64 2147655518, i64 2147655561, i64 2147655601}
!5868 = !DILocation(line: 290, column: 1, scope: !5308)
!5869 = !{i64 2147655732, i64 2147655775, i64 2147655815}
!5870 = !DILocation(line: 291, column: 1, scope: !5308)
!5871 = !{i64 2147655943, i64 2147655986, i64 2147656026}
!5872 = !DILocation(line: 292, column: 1, scope: !5308)
!5873 = !{i64 2147656136, i64 2147656179, i64 2147656219}
!5874 = !DILocation(line: 293, column: 1, scope: !5308)
!5875 = !{i64 2147656335, i64 2147656378, i64 2147656418}
!5876 = !DILocation(line: 294, column: 1, scope: !5308)
!5877 = !{i64 2147656507, i64 2147656550, i64 2147656590}
!5878 = !DILocation(line: 295, column: 1, scope: !5308)
!5879 = !{i64 2147656700, i64 2147656743, i64 2147656783}
!5880 = !DILocation(line: 296, column: 1, scope: !5308)
!5881 = !{i64 2147656872, i64 2147656915, i64 2147656955}
!5882 = !DILocation(line: 297, column: 1, scope: !5308)
!5883 = !{i64 2147661123, i64 2147661166, i64 2147661206}
!5884 = !DILocation(line: 298, column: 1, scope: !5308)
!5885 = !{i64 2147661316, i64 2147661359, i64 2147661399}
!5886 = !DILocation(line: 299, column: 1, scope: !5308)
!5887 = !{i64 2147661512, i64 2147661555, i64 2147661595}
!5888 = !DILocation(line: 300, column: 1, scope: !5308)
!5889 = !{i64 2147661675, i64 2147661718, i64 2147661758}
!5890 = !DILocation(line: 301, column: 1, scope: !5308)
!5891 = !{i64 2147661877, i64 2147661920, i64 2147661960}
!5892 = !DILocation(line: 302, column: 1, scope: !5308)
!5893 = !{i64 2147662088, i64 2147662131, i64 2147662171}
!5894 = !DILocation(line: 303, column: 1, scope: !5308)
!5895 = !{i64 2147662293, i64 2147662336, i64 2147662376}
!5896 = !DILocation(line: 304, column: 1, scope: !5308)
!5897 = !{i64 2147662501, i64 2147662544, i64 2147662584}
!5898 = !DILocation(line: 305, column: 1, scope: !5308)
!5899 = !{i64 2147662694, i64 2147662737, i64 2147662777}
!5900 = !DILocation(line: 306, column: 1, scope: !5308)
!5901 = !{i64 2147662932, i64 2147662975, i64 2147663015}
!5902 = !DILocation(line: 307, column: 1, scope: !5308)
!5903 = !{i64 2147663119, i64 2147663162, i64 2147663202}
!5904 = !DILocation(line: 308, column: 1, scope: !5308)
!5905 = !{i64 2147663288, i64 2147663331, i64 2147663371}
!5906 = !DILocation(line: 309, column: 1, scope: !5308)
!5907 = !{i64 2147663481, i64 2147663524, i64 2147663564}
!5908 = !DILocation(line: 310, column: 1, scope: !5308)
!5909 = !{i64 2147663686, i64 2147663729, i64 2147663769}
!5910 = !DILocation(line: 311, column: 1, scope: !5308)
!5911 = !{i64 2147663897, i64 2147663940, i64 2147663980}
!5912 = !DILocation(line: 312, column: 1, scope: !5308)
!5913 = !{i64 2147664120, i64 2147664163, i64 2147664203}
!5914 = !DILocation(line: 313, column: 1, scope: !5308)
!5915 = !{i64 2147664334, i64 2147664377, i64 2147664417}
!5916 = !DILocation(line: 314, column: 1, scope: !5308)
!5917 = !{i64 2147664552, i64 2147664595, i64 2147664635}
!5918 = !DILocation(line: 315, column: 1, scope: !5308)
!5919 = !{i64 2147664766, i64 2147664809, i64 2147664849}
!5920 = !DILocation(line: 316, column: 1, scope: !5308)
!5921 = !{i64 2147664980, i64 2147665023, i64 2147665063}
!5922 = !DILocation(line: 317, column: 1, scope: !5308)
!5923 = !{i64 2147665197, i64 2147665240, i64 2147665280}
!5924 = !DILocation(line: 318, column: 1, scope: !5308)
!5925 = !{i64 2147665411, i64 2147665454, i64 2147665494}
!5926 = !DILocation(line: 319, column: 1, scope: !5308)
!5927 = !{i64 2147665652, i64 2147665695, i64 2147665735}
!5928 = !DILocation(line: 320, column: 1, scope: !5308)
!5929 = !{i64 2147665818, i64 2147665861, i64 2147665901}
!5930 = !DILocation(line: 321, column: 1, scope: !5308)
!5931 = !{i64 2147666045, i64 2147666088, i64 2147666128}
!5932 = !DILocation(line: 322, column: 1, scope: !5308)
!5933 = !{i64 2147666262, i64 2147666305, i64 2147666345}
!5934 = !DILocation(line: 323, column: 1, scope: !5308)
!5935 = !{i64 2147666488, i64 2147666531, i64 2147666571}
!5936 = !DILocation(line: 324, column: 1, scope: !5308)
!5937 = !{i64 2147666693, i64 2147666736, i64 2147666776}
!5938 = !DILocation(line: 325, column: 1, scope: !5308)
!5939 = !{i64 2147666910, i64 2147666953, i64 2147666993}
!5940 = !DILocation(line: 326, column: 1, scope: !5308)
!5941 = !{i64 2147667202, i64 2147667245, i64 2147667285}
!5942 = !DILocation(line: 327, column: 1, scope: !5308)
!5943 = !{i64 2147667434, i64 2147667477, i64 2147667517}
!5944 = !DILocation(line: 328, column: 1, scope: !5308)
!5945 = !{i64 2147667651, i64 2147667694, i64 2147667734}
!5946 = !DILocation(line: 329, column: 1, scope: !5308)
!5947 = !{i64 2147667858, i64 2147667901, i64 2147667941}
!5948 = !DILocation(line: 330, column: 1, scope: !5308)
!5949 = !{i64 2147668059, i64 2147668102, i64 2147668142}
!5950 = !DILocation(line: 331, column: 1, scope: !5308)
!5951 = !{i64 2147668291, i64 2147668334, i64 2147668374}
!5952 = !DILocation(line: 332, column: 1, scope: !5308)
!5953 = !{i64 2147668499, i64 2147668542, i64 2147668582}
!5954 = !DILocation(line: 333, column: 1, scope: !5308)
!5955 = !{i64 2147668689, i64 2147668732, i64 2147668772}
!5956 = !DILocation(line: 334, column: 1, scope: !5308)
!5957 = !{i64 2147668915, i64 2147668958, i64 2147668998}
!5958 = !DILocation(line: 335, column: 1, scope: !5308)
!5959 = !{i64 2147669104, i64 2147669147, i64 2147669187}
!5960 = !DILocation(line: 336, column: 1, scope: !5308)
!5961 = !{i64 2147669375, i64 2147669418, i64 2147669458}
!5962 = !DILocation(line: 337, column: 1, scope: !5308)
!5963 = !{i64 2147669595, i64 2147669638, i64 2147669678}
!5964 = !DILocation(line: 338, column: 1, scope: !5308)
!5965 = !{i64 2147669848, i64 2147669891, i64 2147669931}
!5966 = !DILocation(line: 339, column: 1, scope: !5308)
!5967 = !{i64 2147674117, i64 2147674160, i64 2147674200}
!5968 = !DILocation(line: 340, column: 1, scope: !5308)
!5969 = !{i64 2147674349, i64 2147674392, i64 2147674432}
!5970 = !DILocation(line: 341, column: 1, scope: !5308)
!5971 = !{i64 2147674560, i64 2147674603, i64 2147674643}
!5972 = !DILocation(line: 342, column: 1, scope: !5308)
!5973 = !{i64 2147674750, i64 2147674793, i64 2147674833}
!5974 = !DILocation(line: 343, column: 1, scope: !5308)
!5975 = !{i64 2147674964, i64 2147675007, i64 2147675047}
!5976 = !DILocation(line: 344, column: 1, scope: !5308)
!5977 = !{i64 2147675163, i64 2147675206, i64 2147675246}
!5978 = !DILocation(line: 345, column: 1, scope: !5308)
!5979 = !{i64 2147675350, i64 2147675393, i64 2147675433}
!5980 = !DILocation(line: 346, column: 1, scope: !5308)
!5981 = !{i64 2147675546, i64 2147675589, i64 2147675629}
!5982 = !DILocation(line: 347, column: 1, scope: !5308)
!5983 = !{i64 2147675754, i64 2147675797, i64 2147675837}
!5984 = !DILocation(line: 348, column: 1, scope: !5308)
!5985 = !{i64 2147675983, i64 2147676026, i64 2147676066}
!5986 = !DILocation(line: 349, column: 1, scope: !5308)
!5987 = !{i64 2147676185, i64 2147676228, i64 2147676268}
!5988 = !DILocation(line: 350, column: 1, scope: !5308)
!5989 = !{i64 2147676384, i64 2147676427, i64 2147676467}
!5990 = !DILocation(line: 351, column: 1, scope: !5308)
!5991 = !{i64 2147676601, i64 2147676644, i64 2147676684}
!5992 = !DILocation(line: 353, column: 1, scope: !5308)
!5993 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !235, file: !235, line: 30, type: !242, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !5994)
!5994 = !{!5995, !5996}
!5995 = !DILocalVariable(name: "arg", arg: 1, scope: !5993, file: !235, line: 30, type: !244)
!5996 = !DILocalVariable(name: "key", scope: !5993, file: !235, line: 32, type: !152)
!5997 = !DILocation(line: 0, scope: !5993)
!5998 = !DILocation(line: 37, column: 2, scope: !5993)
!5999 = !DILocation(line: 38, column: 2, scope: !5993)
!6000 = !DILocation(line: 55, column: 2, scope: !6001, inlinedAt: !6008)
!6001 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6002, file: !6002, line: 42, type: !6003, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !6005)
!6002 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6003 = !DISubroutineType(types: !6004)
!6004 = !{!32}
!6005 = !{!6006, !6007}
!6006 = !DILocalVariable(name: "key", scope: !6001, file: !6002, line: 44, type: !32)
!6007 = !DILocalVariable(name: "tmp", scope: !6001, file: !6002, line: 53, type: !32)
!6008 = distinct !DILocation(line: 40, column: 8, scope: !5993)
!6009 = !{i64 2190026}
!6010 = !DILocation(line: 0, scope: !6001, inlinedAt: !6008)
!6011 = !DILocalVariable(name: "key", arg: 1, scope: !6012, file: !6002, line: 84, type: !32)
!6012 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6002, file: !6002, line: 84, type: !6013, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !6015)
!6013 = !DISubroutineType(types: !6014)
!6014 = !{null, !32}
!6015 = !{!6011}
!6016 = !DILocation(line: 0, scope: !6012, inlinedAt: !6017)
!6017 = distinct !DILocation(line: 47, column: 2, scope: !5993)
!6018 = !DILocation(line: 95, column: 2, scope: !6012, inlinedAt: !6017)
!6019 = !{i64 2190843}
!6020 = !DILocation(line: 51, column: 18, scope: !5993)
!6021 = !DILocation(line: 53, column: 2, scope: !5993)
!6022 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !6023, file: !6023, line: 1609, type: !3148, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !2236)
!6023 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6024 = !DILocation(line: 1611, column: 3, scope: !6022)
!6025 = !DILocation(line: 1612, column: 1, scope: !6022)
!6026 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !6023, file: !6023, line: 1629, type: !3148, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !2236)
!6027 = !DILocation(line: 1631, column: 3, scope: !6026)
!6028 = !DILocation(line: 1632, column: 1, scope: !6026)
!6029 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !271, file: !271, line: 26, type: !277, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !268, retainedNodes: !6030)
!6030 = !{!6031}
!6031 = !DILocalVariable(name: "dev", arg: 1, scope: !6029, file: !271, line: 26, type: !279)
!6032 = !DILocation(line: 0, scope: !6029)
!6033 = !DILocation(line: 68, column: 2, scope: !6029)
!6034 = distinct !DISubprogram(name: "z_log_minimal_printk", scope: !6035, file: !6035, line: 14, type: !4261, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2624, retainedNodes: !6036)
!6035 = !DIFile(filename: "zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6036 = !{!6037, !6038}
!6037 = !DILocalVariable(name: "fmt", arg: 1, scope: !6034, file: !6035, line: 14, type: !118)
!6038 = !DILocalVariable(name: "ap", scope: !6034, file: !6035, line: 16, type: !6039)
!6039 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3271, line: 99, baseType: !6040)
!6040 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3271, line: 40, baseType: !6041)
!6041 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !6035, baseType: !6042)
!6042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !6043)
!6043 = !{!6044}
!6044 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !6042, file: !6035, line: 16, baseType: !106, size: 32)
!6045 = !DILocation(line: 0, scope: !6034)
!6046 = !DILocation(line: 16, column: 2, scope: !6034)
!6047 = !DILocation(line: 16, column: 10, scope: !6034)
!6048 = !DILocation(line: 18, column: 2, scope: !6034)
!6049 = !DILocation(line: 19, column: 2, scope: !6034)
!6050 = !DILocation(line: 20, column: 2, scope: !6034)
!6051 = !DILocation(line: 21, column: 1, scope: !6034)
!6052 = distinct !DISubprogram(name: "z_log_minimal_vprintk", scope: !6035, file: !6035, line: 23, type: !6053, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2624, retainedNodes: !6055)
!6053 = !DISubroutineType(types: !6054)
!6054 = !{null, !118, !6039}
!6055 = !{!6056, !6057}
!6056 = !DILocalVariable(name: "fmt", arg: 1, scope: !6052, file: !6035, line: 23, type: !118)
!6057 = !DILocalVariable(name: "ap", arg: 2, scope: !6052, file: !6035, line: 23, type: !6039)
!6058 = !DILocation(line: 0, scope: !6052)
!6059 = !DILocation(line: 25, column: 2, scope: !6052)
!6060 = !DILocation(line: 26, column: 1, scope: !6052)
!6061 = distinct !DISubprogram(name: "z_log_minimal_hexdump_print", scope: !6035, file: !6035, line: 52, type: !6062, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2624, retainedNodes: !6064)
!6062 = !DISubroutineType(types: !6063)
!6063 = !{null, !107, !13, !185}
!6064 = !{!6065, !6066, !6067, !6068}
!6065 = !DILocalVariable(name: "level", arg: 1, scope: !6061, file: !6035, line: 52, type: !107)
!6066 = !DILocalVariable(name: "data", arg: 2, scope: !6061, file: !6035, line: 52, type: !13)
!6067 = !DILocalVariable(name: "size", arg: 3, scope: !6061, file: !6035, line: 52, type: !185)
!6068 = !DILocalVariable(name: "data_buffer", scope: !6061, file: !6035, line: 54, type: !118)
!6069 = !DILocation(line: 0, scope: !6061)
!6070 = !DILocation(line: 55, column: 14, scope: !6061)
!6071 = !DILocation(line: 55, column: 2, scope: !6061)
!6072 = !DILocation(line: 56, column: 3, scope: !6073)
!6073 = distinct !DILexicalBlock(scope: !6061, file: !6035, line: 55, column: 20)
!6074 = !DILocation(line: 57, column: 3, scope: !6073)
!6075 = !DILocation(line: 59, column: 7, scope: !6073)
!6076 = distinct !{!6076, !6071, !6077}
!6077 = !DILocation(line: 65, column: 2, scope: !6061)
!6078 = !DILocation(line: 66, column: 1, scope: !6061)
!6079 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !6080, file: !6080, line: 175, type: !6081, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2624, retainedNodes: !6083)
!6080 = !DIFile(filename: "zephyr/include/zephyr/logging/log_core.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6081 = !DISubroutineType(types: !6082)
!6082 = !{!120, !107}
!6083 = !{!6084}
!6084 = !DILocalVariable(name: "level", arg: 1, scope: !6079, file: !6080, line: 175, type: !107)
!6085 = !DILocation(line: 0, scope: !6079)
!6086 = !DILocation(line: 177, column: 2, scope: !6079)
!6087 = !DILocation(line: 189, column: 1, scope: !6079)
!6088 = distinct !DISubprogram(name: "minimal_hexdump_line_print", scope: !6035, file: !6035, line: 28, type: !6089, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2624, retainedNodes: !6091)
!6089 = !DISubroutineType(types: !6090)
!6090 = !{null, !118, !185}
!6091 = !{!6092, !6093, !6094, !6096, !6098}
!6092 = !DILocalVariable(name: "data", arg: 1, scope: !6088, file: !6035, line: 28, type: !118)
!6093 = !DILocalVariable(name: "length", arg: 2, scope: !6088, file: !6035, line: 28, type: !185)
!6094 = !DILocalVariable(name: "i", scope: !6095, file: !6035, line: 30, type: !185)
!6095 = distinct !DILexicalBlock(scope: !6088, file: !6035, line: 30, column: 2)
!6096 = !DILocalVariable(name: "i", scope: !6097, file: !6035, line: 40, type: !185)
!6097 = distinct !DILexicalBlock(scope: !6088, file: !6035, line: 40, column: 2)
!6098 = !DILocalVariable(name: "c", scope: !6099, file: !6035, line: 42, type: !196)
!6099 = distinct !DILexicalBlock(scope: !6100, file: !6035, line: 41, column: 19)
!6100 = distinct !DILexicalBlock(scope: !6101, file: !6035, line: 41, column: 7)
!6101 = distinct !DILexicalBlock(scope: !6102, file: !6035, line: 40, column: 54)
!6102 = distinct !DILexicalBlock(scope: !6097, file: !6035, line: 40, column: 2)
!6103 = !DILocation(line: 0, scope: !6088)
!6104 = !DILocation(line: 0, scope: !6095)
!6105 = !DILocation(line: 30, column: 2, scope: !6095)
!6106 = !DILocation(line: 38, column: 2, scope: !6088)
!6107 = !DILocation(line: 0, scope: !6097)
!6108 = !DILocation(line: 40, column: 2, scope: !6097)
!6109 = !DILocation(line: 31, column: 9, scope: !6110)
!6110 = distinct !DILexicalBlock(scope: !6111, file: !6035, line: 31, column: 7)
!6111 = distinct !DILexicalBlock(scope: !6112, file: !6035, line: 30, column: 54)
!6112 = distinct !DILexicalBlock(scope: !6095, file: !6035, line: 30, column: 2)
!6113 = !DILocation(line: 31, column: 7, scope: !6111)
!6114 = !DILocation(line: 32, column: 35, scope: !6115)
!6115 = distinct !DILexicalBlock(scope: !6110, file: !6035, line: 31, column: 19)
!6116 = !DILocation(line: 32, column: 20, scope: !6115)
!6117 = !DILocation(line: 32, column: 4, scope: !6115)
!6118 = !DILocation(line: 33, column: 3, scope: !6115)
!6119 = !DILocation(line: 34, column: 4, scope: !6120)
!6120 = distinct !DILexicalBlock(scope: !6110, file: !6035, line: 33, column: 10)
!6121 = !DILocation(line: 30, column: 50, scope: !6112)
!6122 = !DILocation(line: 30, column: 24, scope: !6112)
!6123 = distinct !{!6123, !6105, !6124}
!6124 = !DILocation(line: 36, column: 2, scope: !6095)
!6125 = !DILocation(line: 49, column: 2, scope: !6088)
!6126 = !DILocation(line: 50, column: 1, scope: !6088)
!6127 = !DILocation(line: 41, column: 9, scope: !6100)
!6128 = !DILocation(line: 41, column: 7, scope: !6101)
!6129 = !DILocation(line: 42, column: 22, scope: !6099)
!6130 = !DILocation(line: 0, scope: !6099)
!6131 = !DILocation(line: 44, column: 25, scope: !6099)
!6132 = !DILocation(line: 44, column: 17, scope: !6099)
!6133 = !DILocation(line: 44, column: 33, scope: !6099)
!6134 = !DILocation(line: 44, column: 4, scope: !6099)
!6135 = !DILocation(line: 45, column: 3, scope: !6099)
!6136 = !DILocation(line: 46, column: 4, scope: !6137)
!6137 = distinct !DILexicalBlock(scope: !6100, file: !6035, line: 45, column: 10)
!6138 = !DILocation(line: 40, column: 50, scope: !6102)
!6139 = !DILocation(line: 40, column: 24, scope: !6102)
!6140 = distinct !{!6140, !6108, !6141}
!6141 = !DILocation(line: 48, column: 2, scope: !6097)
!6142 = distinct !DISubprogram(name: "isprint", scope: !5052, file: !5052, line: 37, type: !214, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2624, retainedNodes: !6143)
!6143 = !{!6144}
!6144 = !DILocalVariable(name: "c", arg: 1, scope: !6142, file: !5052, line: 37, type: !107)
!6145 = !DILocation(line: 0, scope: !6142)
!6146 = !DILocation(line: 39, column: 38, scope: !6142)
!6147 = !DILocation(line: 39, column: 2, scope: !6142)
!6148 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !6149, file: !6149, line: 57, type: !6150, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2627, retainedNodes: !6196)
!6149 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6150 = !DISubroutineType(types: !6151)
!6151 = !{null, !32, !6152}
!6152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6153, size: 32)
!6153 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6154)
!6154 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2747, line: 141, baseType: !6155)
!6155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2747, line: 97, size: 256, elements: !6156)
!6156 = !{!6157}
!6157 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !6155, file: !2747, line: 107, baseType: !6158, size: 256)
!6158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2747, line: 98, size: 256, elements: !6159)
!6159 = !{!6160, !6165, !6170, !6175, !6180, !6185, !6190, !6195}
!6160 = !DIDerivedType(tag: DW_TAG_member, scope: !6158, file: !2747, line: 99, baseType: !6161, size: 32)
!6161 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6158, file: !2747, line: 99, size: 32, elements: !6162)
!6162 = !{!6163, !6164}
!6163 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !6161, file: !2747, line: 99, baseType: !152, size: 32)
!6164 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !6161, file: !2747, line: 99, baseType: !152, size: 32)
!6165 = !DIDerivedType(tag: DW_TAG_member, scope: !6158, file: !2747, line: 100, baseType: !6166, size: 32, offset: 32)
!6166 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6158, file: !2747, line: 100, size: 32, elements: !6167)
!6167 = !{!6168, !6169}
!6168 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !6166, file: !2747, line: 100, baseType: !152, size: 32)
!6169 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !6166, file: !2747, line: 100, baseType: !152, size: 32)
!6170 = !DIDerivedType(tag: DW_TAG_member, scope: !6158, file: !2747, line: 101, baseType: !6171, size: 32, offset: 64)
!6171 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6158, file: !2747, line: 101, size: 32, elements: !6172)
!6172 = !{!6173, !6174}
!6173 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !6171, file: !2747, line: 101, baseType: !152, size: 32)
!6174 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !6171, file: !2747, line: 101, baseType: !152, size: 32)
!6175 = !DIDerivedType(tag: DW_TAG_member, scope: !6158, file: !2747, line: 102, baseType: !6176, size: 32, offset: 96)
!6176 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6158, file: !2747, line: 102, size: 32, elements: !6177)
!6177 = !{!6178, !6179}
!6178 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !6176, file: !2747, line: 102, baseType: !152, size: 32)
!6179 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !6176, file: !2747, line: 102, baseType: !152, size: 32)
!6180 = !DIDerivedType(tag: DW_TAG_member, scope: !6158, file: !2747, line: 103, baseType: !6181, size: 32, offset: 128)
!6181 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6158, file: !2747, line: 103, size: 32, elements: !6182)
!6182 = !{!6183, !6184}
!6183 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !6181, file: !2747, line: 103, baseType: !152, size: 32)
!6184 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !6181, file: !2747, line: 103, baseType: !152, size: 32)
!6185 = !DIDerivedType(tag: DW_TAG_member, scope: !6158, file: !2747, line: 104, baseType: !6186, size: 32, offset: 160)
!6186 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6158, file: !2747, line: 104, size: 32, elements: !6187)
!6187 = !{!6188, !6189}
!6188 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !6186, file: !2747, line: 104, baseType: !152, size: 32)
!6189 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !6186, file: !2747, line: 104, baseType: !152, size: 32)
!6190 = !DIDerivedType(tag: DW_TAG_member, scope: !6158, file: !2747, line: 105, baseType: !6191, size: 32, offset: 192)
!6191 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6158, file: !2747, line: 105, size: 32, elements: !6192)
!6192 = !{!6193, !6194}
!6193 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !6191, file: !2747, line: 105, baseType: !152, size: 32)
!6194 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !6191, file: !2747, line: 105, baseType: !152, size: 32)
!6195 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !6158, file: !2747, line: 106, baseType: !152, size: 32, offset: 224)
!6196 = !{!6197, !6198}
!6197 = !DILocalVariable(name: "reason", arg: 1, scope: !6148, file: !6149, line: 57, type: !32)
!6198 = !DILocalVariable(name: "esf", arg: 2, scope: !6148, file: !6149, line: 57, type: !6152)
!6199 = !DILocation(line: 0, scope: !6148)
!6200 = !DILocation(line: 60, column: 10, scope: !6201)
!6201 = distinct !DILexicalBlock(scope: !6148, file: !6149, line: 60, column: 6)
!6202 = !DILocation(line: 60, column: 6, scope: !6148)
!6203 = !DILocation(line: 61, column: 3, scope: !6204)
!6204 = distinct !DILexicalBlock(scope: !6201, file: !6149, line: 60, column: 19)
!6205 = !DILocation(line: 62, column: 2, scope: !6204)
!6206 = !DILocation(line: 63, column: 2, scope: !6148)
!6207 = !DILocation(line: 64, column: 1, scope: !6148)
!6208 = distinct !DISubprogram(name: "esf_dump", scope: !6149, file: !6149, line: 20, type: !6209, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2627, retainedNodes: !6211)
!6209 = !DISubroutineType(types: !6210)
!6210 = !{null, !6152}
!6211 = !{!6212}
!6212 = !DILocalVariable(name: "esf", arg: 1, scope: !6208, file: !6149, line: 20, type: !6152)
!6213 = !DILocation(line: 0, scope: !6208)
!6214 = !DILocation(line: 22, column: 2, scope: !6215)
!6215 = distinct !DILexicalBlock(scope: !6216, file: !6149, line: 22, column: 2)
!6216 = distinct !DILexicalBlock(scope: !6217, file: !6149, line: 22, column: 2)
!6217 = distinct !DILexicalBlock(scope: !6218, file: !6149, line: 22, column: 2)
!6218 = distinct !DILexicalBlock(scope: !6208, file: !6149, line: 22, column: 2)
!6219 = !DILocation(line: 24, column: 2, scope: !6220)
!6220 = distinct !DILexicalBlock(scope: !6221, file: !6149, line: 24, column: 2)
!6221 = distinct !DILexicalBlock(scope: !6222, file: !6149, line: 24, column: 2)
!6222 = distinct !DILexicalBlock(scope: !6223, file: !6149, line: 24, column: 2)
!6223 = distinct !DILexicalBlock(scope: !6208, file: !6149, line: 24, column: 2)
!6224 = !DILocation(line: 26, column: 2, scope: !6225)
!6225 = distinct !DILexicalBlock(scope: !6226, file: !6149, line: 26, column: 2)
!6226 = distinct !DILexicalBlock(scope: !6227, file: !6149, line: 26, column: 2)
!6227 = distinct !DILexicalBlock(scope: !6228, file: !6149, line: 26, column: 2)
!6228 = distinct !DILexicalBlock(scope: !6208, file: !6149, line: 26, column: 2)
!6229 = !DILocation(line: 53, column: 2, scope: !6230)
!6230 = distinct !DILexicalBlock(scope: !6231, file: !6149, line: 53, column: 2)
!6231 = distinct !DILexicalBlock(scope: !6232, file: !6149, line: 53, column: 2)
!6232 = distinct !DILexicalBlock(scope: !6233, file: !6149, line: 53, column: 2)
!6233 = distinct !DILexicalBlock(scope: !6208, file: !6149, line: 53, column: 2)
!6234 = !DILocation(line: 55, column: 1, scope: !6208)
!6235 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !6149, file: !6149, line: 82, type: !6236, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2627, retainedNodes: !6251)
!6236 = !DISubroutineType(types: !6237)
!6237 = !{null, !6152, !6238}
!6238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6239, size: 32)
!6239 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !379, line: 37, baseType: !6240)
!6240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !6241)
!6241 = !{!6242, !6243, !6244, !6245, !6246, !6247, !6248, !6249, !6250}
!6242 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6240, file: !379, line: 26, baseType: !152, size: 32)
!6243 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6240, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!6244 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6240, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!6245 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6240, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!6246 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6240, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!6247 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6240, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!6248 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6240, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!6249 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6240, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!6250 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6240, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!6251 = !{!6252, !6253, !6254}
!6252 = !DILocalVariable(name: "esf", arg: 1, scope: !6235, file: !6149, line: 82, type: !6152)
!6253 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !6235, file: !6149, line: 82, type: !6238)
!6254 = !DILocalVariable(name: "reason", scope: !6235, file: !6149, line: 88, type: !32)
!6255 = !DILocation(line: 0, scope: !6235)
!6256 = !DILocation(line: 88, column: 35, scope: !6235)
!6257 = !DILocation(line: 108, column: 2, scope: !6235)
!6258 = !DILocation(line: 131, column: 1, scope: !6235)
!6259 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !6149, file: !6149, line: 133, type: !131, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2627, retainedNodes: !6260)
!6260 = !{!6261, !6262, !6263}
!6261 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !6259, file: !6149, line: 133, type: !106)
!6262 = !DILocalVariable(name: "ssf_contents", scope: !6259, file: !6149, line: 135, type: !1032)
!6263 = !DILocalVariable(name: "oops_esf", scope: !6259, file: !6149, line: 136, type: !6154)
!6264 = !DILocation(line: 0, scope: !6259)
!6265 = !DILocation(line: 136, column: 2, scope: !6259)
!6266 = !DILocation(line: 136, column: 15, scope: !6259)
!6267 = !DILocation(line: 139, column: 22, scope: !6259)
!6268 = !DILocation(line: 139, column: 17, scope: !6259)
!6269 = !DILocation(line: 139, column: 20, scope: !6259)
!6270 = !DILocation(line: 141, column: 2, scope: !6259)
!6271 = !DILocation(line: 142, column: 2, scope: !6259)
!6272 = distinct !DISubprogram(name: "arch_irq_enable", scope: !6273, file: !6273, line: 40, type: !6013, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2638, retainedNodes: !6274)
!6273 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6274 = !{!6275}
!6275 = !DILocalVariable(name: "irq", arg: 1, scope: !6272, file: !6273, line: 40, type: !32)
!6276 = !DILocation(line: 0, scope: !6272)
!6277 = !DILocation(line: 42, column: 2, scope: !6272)
!6278 = !DILocation(line: 43, column: 1, scope: !6272)
!6279 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !463, file: !463, line: 1684, type: !6280, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2638, retainedNodes: !6282)
!6280 = !DISubroutineType(types: !6281)
!6281 = !{null, !930}
!6282 = !{!6283}
!6283 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6279, file: !463, line: 1684, type: !930)
!6284 = !DILocation(line: 0, scope: !6279)
!6285 = !DILocation(line: 1686, column: 23, scope: !6286)
!6286 = distinct !DILexicalBlock(scope: !6279, file: !463, line: 1686, column: 7)
!6287 = !DILocation(line: 1686, column: 7, scope: !6279)
!6288 = !DILocation(line: 1688, column: 5, scope: !6289)
!6289 = distinct !DILexicalBlock(scope: !6286, file: !463, line: 1687, column: 3)
!6290 = !{i64 2151258802}
!6291 = !DILocation(line: 1689, column: 81, scope: !6289)
!6292 = !DILocation(line: 1689, column: 60, scope: !6289)
!6293 = !DILocation(line: 1689, column: 34, scope: !6289)
!6294 = !DILocation(line: 1689, column: 5, scope: !6289)
!6295 = !DILocation(line: 1689, column: 43, scope: !6289)
!6296 = !DILocation(line: 1690, column: 5, scope: !6289)
!6297 = !{i64 2151258916}
!6298 = !DILocation(line: 1691, column: 3, scope: !6289)
!6299 = !DILocation(line: 1692, column: 1, scope: !6279)
!6300 = distinct !DISubprogram(name: "arch_irq_disable", scope: !6273, file: !6273, line: 45, type: !6013, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2638, retainedNodes: !6301)
!6301 = !{!6302}
!6302 = !DILocalVariable(name: "irq", arg: 1, scope: !6300, file: !6273, line: 45, type: !32)
!6303 = !DILocation(line: 0, scope: !6300)
!6304 = !DILocation(line: 47, column: 2, scope: !6300)
!6305 = !DILocation(line: 48, column: 1, scope: !6300)
!6306 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !463, file: !463, line: 1722, type: !6280, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2638, retainedNodes: !6307)
!6307 = !{!6308}
!6308 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6306, file: !463, line: 1722, type: !930)
!6309 = !DILocation(line: 0, scope: !6306)
!6310 = !DILocation(line: 1724, column: 23, scope: !6311)
!6311 = distinct !DILexicalBlock(scope: !6306, file: !463, line: 1724, column: 7)
!6312 = !DILocation(line: 1724, column: 7, scope: !6306)
!6313 = !DILocation(line: 1726, column: 81, scope: !6314)
!6314 = distinct !DILexicalBlock(scope: !6311, file: !463, line: 1725, column: 3)
!6315 = !DILocation(line: 1726, column: 60, scope: !6314)
!6316 = !DILocation(line: 1726, column: 34, scope: !6314)
!6317 = !DILocation(line: 1726, column: 5, scope: !6314)
!6318 = !DILocation(line: 1726, column: 43, scope: !6314)
!6319 = !DILocation(line: 271, column: 3, scope: !6320, inlinedAt: !6322)
!6320 = distinct !DISubprogram(name: "__DSB", scope: !6321, file: !6321, line: 269, type: !3148, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2638, retainedNodes: !2236)
!6321 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6322 = distinct !DILocation(line: 1727, column: 5, scope: !6314)
!6323 = !{i64 3713185}
!6324 = !DILocation(line: 260, column: 3, scope: !6325, inlinedAt: !6326)
!6325 = distinct !DISubprogram(name: "__ISB", scope: !6321, file: !6321, line: 258, type: !3148, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2638, retainedNodes: !2236)
!6326 = distinct !DILocation(line: 1728, column: 5, scope: !6314)
!6327 = !{i64 3712902}
!6328 = !DILocation(line: 1729, column: 3, scope: !6314)
!6329 = !DILocation(line: 1730, column: 1, scope: !6306)
!6330 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !6273, file: !6273, line: 50, type: !6331, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2638, retainedNodes: !6333)
!6331 = !DISubroutineType(types: !6332)
!6332 = !{!107, !32}
!6333 = !{!6334}
!6334 = !DILocalVariable(name: "irq", arg: 1, scope: !6330, file: !6273, line: 50, type: !32)
!6335 = !DILocation(line: 0, scope: !6330)
!6336 = !DILocation(line: 52, column: 20, scope: !6330)
!6337 = !DILocation(line: 52, column: 9, scope: !6330)
!6338 = !DILocation(line: 52, column: 41, scope: !6330)
!6339 = !DILocation(line: 52, column: 39, scope: !6330)
!6340 = !DILocation(line: 52, column: 2, scope: !6330)
!6341 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !6273, file: !6273, line: 64, type: !6342, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2638, retainedNodes: !6344)
!6342 = !DISubroutineType(types: !6343)
!6343 = !{null, !32, !32, !152}
!6344 = !{!6345, !6346, !6347}
!6345 = !DILocalVariable(name: "irq", arg: 1, scope: !6341, file: !6273, line: 64, type: !32)
!6346 = !DILocalVariable(name: "prio", arg: 2, scope: !6341, file: !6273, line: 64, type: !32)
!6347 = !DILocalVariable(name: "flags", arg: 3, scope: !6341, file: !6273, line: 64, type: !152)
!6348 = !DILocation(line: 0, scope: !6341)
!6349 = !DILocation(line: 83, column: 8, scope: !6350)
!6350 = distinct !DILexicalBlock(scope: !6351, file: !6273, line: 82, column: 9)
!6351 = distinct !DILexicalBlock(scope: !6341, file: !6273, line: 76, column: 6)
!6352 = !DILocation(line: 91, column: 2, scope: !6353)
!6353 = distinct !DILexicalBlock(scope: !6354, file: !6273, line: 91, column: 2)
!6354 = distinct !DILexicalBlock(scope: !6341, file: !6273, line: 91, column: 2)
!6355 = !DILocation(line: 91, column: 2, scope: !6354)
!6356 = !DILocation(line: 91, column: 2, scope: !6357)
!6357 = distinct !DILexicalBlock(scope: !6353, file: !6273, line: 91, column: 2)
!6358 = !DILocation(line: 95, column: 2, scope: !6341)
!6359 = !DILocation(line: 96, column: 1, scope: !6341)
!6360 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !463, file: !463, line: 1814, type: !6361, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2638, retainedNodes: !6363)
!6361 = !DISubroutineType(types: !6362)
!6362 = !{null, !930, !152}
!6363 = !{!6364, !6365}
!6364 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6360, file: !463, line: 1814, type: !930)
!6365 = !DILocalVariable(name: "priority", arg: 2, scope: !6360, file: !463, line: 1814, type: !152)
!6366 = !DILocation(line: 0, scope: !6360)
!6367 = !DILocation(line: 0, scope: !6368)
!6368 = distinct !DILexicalBlock(scope: !6360, file: !463, line: 1816, column: 7)
!6369 = !DILocation(line: 1816, column: 7, scope: !6360)
!6370 = !DILocation(line: 1824, column: 1, scope: !6360)
!6371 = distinct !DISubprogram(name: "z_irq_spurious", scope: !6273, file: !6273, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2638, retainedNodes: !6372)
!6372 = !{!6373}
!6373 = !DILocalVariable(name: "unused", arg: 1, scope: !6371, file: !6273, line: 155, type: !13)
!6374 = !DILocation(line: 0, scope: !6371)
!6375 = !DILocation(line: 159, column: 2, scope: !6371)
!6376 = !DILocation(line: 160, column: 1, scope: !6371)
!6377 = distinct !DISubprogram(name: "z_arm_nmi", scope: !6378, file: !6378, line: 87, type: !3148, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2684, retainedNodes: !2236)
!6378 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6379 = !DILocation(line: 89, column: 2, scope: !6377)
!6380 = !DILocation(line: 90, column: 2, scope: !6377)
!6381 = !DILocation(line: 91, column: 1, scope: !6377)
!6382 = !DISubprogram(name: "z_SysNmiOnReset", scope: !6378, file: !6378, line: 23, type: !3148, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2236)
!6383 = !DISubprogram(name: "z_arm_int_exit", scope: !6384, file: !6384, line: 153, type: !3148, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2236)
!6384 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6385 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !6386, file: !6386, line: 256, type: !3148, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2686, retainedNodes: !2236)
!6386 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6387 = !DILocation(line: 258, column: 2, scope: !6385)
!6388 = !DILocation(line: 260, column: 2, scope: !6385)
!6389 = !DILocation(line: 262, column: 2, scope: !6385)
!6390 = !DILocation(line: 263, column: 2, scope: !6385)
!6391 = !DILocation(line: 267, column: 2, scope: !6385)
!6392 = !DILocation(line: 268, column: 2, scope: !6385)
!6393 = distinct !DISubprogram(name: "relocate_vector_table", scope: !6386, file: !6386, line: 53, type: !3148, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2686, retainedNodes: !2236)
!6394 = !DILocation(line: 55, column: 12, scope: !6393)
!6395 = !DILocation(line: 271, column: 3, scope: !6396, inlinedAt: !6397)
!6396 = distinct !DISubprogram(name: "__DSB", scope: !6321, file: !6321, line: 269, type: !3148, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2686, retainedNodes: !2236)
!6397 = distinct !DILocation(line: 56, column: 2, scope: !6393)
!6398 = !{i64 3711856}
!6399 = !DILocation(line: 260, column: 3, scope: !6400, inlinedAt: !6401)
!6400 = distinct !DISubprogram(name: "__ISB", scope: !6321, file: !6321, line: 258, type: !3148, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2686, retainedNodes: !2236)
!6401 = distinct !DILocation(line: 57, column: 2, scope: !6393)
!6402 = !{i64 3711573}
!6403 = !DILocation(line: 58, column: 1, scope: !6393)
!6404 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !6386, file: !6386, line: 96, type: !3148, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2686, retainedNodes: !2236)
!6405 = !DILocation(line: 103, column: 13, scope: !6404)
!6406 = !DILocation(line: 975, column: 3, scope: !6407, inlinedAt: !6412)
!6407 = distinct !DISubprogram(name: "__get_CONTROL", scope: !6321, file: !6321, line: 971, type: !6408, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2686, retainedNodes: !6410)
!6408 = !DISubroutineType(types: !6409)
!6409 = !{!152}
!6410 = !{!6411}
!6411 = !DILocalVariable(name: "result", scope: !6407, file: !6321, line: 973, type: !152)
!6412 = distinct !DILocation(line: 189, column: 16, scope: !6404)
!6413 = !{i64 3732686}
!6414 = !DILocation(line: 0, scope: !6407, inlinedAt: !6412)
!6415 = !DILocation(line: 189, column: 32, scope: !6404)
!6416 = !DILocalVariable(name: "control", arg: 1, scope: !6417, file: !6321, line: 1001, type: !152)
!6417 = distinct !DISubprogram(name: "__set_CONTROL", scope: !6321, file: !6321, line: 1001, type: !6418, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2686, retainedNodes: !6420)
!6418 = !DISubroutineType(types: !6419)
!6419 = !{null, !152}
!6420 = !{!6416}
!6421 = !DILocation(line: 0, scope: !6417, inlinedAt: !6422)
!6422 = distinct !DILocation(line: 189, column: 2, scope: !6404)
!6423 = !DILocation(line: 1003, column: 3, scope: !6417, inlinedAt: !6422)
!6424 = !{i64 3733406}
!6425 = !DILocation(line: 260, column: 3, scope: !6400, inlinedAt: !6426)
!6426 = distinct !DILocation(line: 1004, column: 3, scope: !6417, inlinedAt: !6422)
!6427 = !DILocation(line: 191, column: 1, scope: !6404)
!6428 = distinct !DISubprogram(name: "arch_swap", scope: !6429, file: !6429, line: 33, type: !6331, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !6430)
!6429 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6430 = !{!6431}
!6431 = !DILocalVariable(name: "key", arg: 1, scope: !6428, file: !6429, line: 33, type: !32)
!6432 = !DILocation(line: 0, scope: !6428)
!6433 = !DILocation(line: 36, column: 2, scope: !6428)
!6434 = !DILocation(line: 36, column: 17, scope: !6428)
!6435 = !DILocation(line: 36, column: 25, scope: !6428)
!6436 = !DILocation(line: 37, column: 37, scope: !6428)
!6437 = !DILocation(line: 37, column: 17, scope: !6428)
!6438 = !DILocation(line: 37, column: 35, scope: !6428)
!6439 = !DILocation(line: 41, column: 12, scope: !6428)
!6440 = !DILocalVariable(name: "key", arg: 1, scope: !6441, file: !6002, line: 84, type: !32)
!6441 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6002, file: !6002, line: 84, type: !6013, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !6442)
!6442 = !{!6440}
!6443 = !DILocation(line: 0, scope: !6441, inlinedAt: !6444)
!6444 = distinct !DILocation(line: 44, column: 2, scope: !6428)
!6445 = !DILocation(line: 95, column: 2, scope: !6441, inlinedAt: !6444)
!6446 = !{i64 2282357}
!6447 = !DILocation(line: 53, column: 9, scope: !6428)
!6448 = !DILocation(line: 53, column: 24, scope: !6428)
!6449 = !DILocation(line: 53, column: 2, scope: !6428)
!6450 = distinct !DISubprogram(name: "arch_new_thread", scope: !6451, file: !6451, line: 56, type: !6452, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2742, retainedNodes: !6562)
!6451 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6452 = !DISubroutineType(types: !6453)
!6453 = !{null, !6454, !6557, !193, !559, !106, !106, !106}
!6454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6455, size: 32)
!6455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !6456)
!6456 = !{!6457, !6515, !6527, !6528, !6529, !6530, !6531, !6537, !6552}
!6457 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6455, file: !309, line: 247, baseType: !6458, size: 384)
!6458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !6459)
!6459 = !{!6460, !6484, !6491, !6492, !6493, !6502, !6503, !6504}
!6460 = !DIDerivedType(tag: DW_TAG_member, scope: !6458, file: !309, line: 60, baseType: !6461, size: 64)
!6461 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6458, file: !309, line: 60, size: 64, elements: !6462)
!6462 = !{!6463, !6478}
!6463 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6461, file: !309, line: 61, baseType: !6464, size: 64)
!6464 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !6465)
!6465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !6466)
!6466 = !{!6467, !6473}
!6467 = !DIDerivedType(tag: DW_TAG_member, scope: !6465, file: !319, line: 38, baseType: !6468, size: 32)
!6468 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6465, file: !319, line: 38, size: 32, elements: !6469)
!6469 = !{!6470, !6472}
!6470 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6468, file: !319, line: 39, baseType: !6471, size: 32)
!6471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6465, size: 32)
!6472 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6468, file: !319, line: 40, baseType: !6471, size: 32)
!6473 = !DIDerivedType(tag: DW_TAG_member, scope: !6465, file: !319, line: 42, baseType: !6474, size: 32, offset: 32)
!6474 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6465, file: !319, line: 42, size: 32, elements: !6475)
!6475 = !{!6476, !6477}
!6476 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6474, file: !319, line: 43, baseType: !6471, size: 32)
!6477 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6474, file: !319, line: 44, baseType: !6471, size: 32)
!6478 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6461, file: !309, line: 62, baseType: !6479, size: 64)
!6479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !6480)
!6480 = !{!6481}
!6481 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6479, file: !335, line: 50, baseType: !6482, size: 64)
!6482 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6483, size: 64, elements: !340)
!6483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6479, size: 32)
!6484 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6458, file: !309, line: 68, baseType: !6485, size: 32, offset: 64)
!6485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6486, size: 32)
!6486 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !6487)
!6487 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !6488)
!6488 = !{!6489}
!6489 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6487, file: !345, line: 232, baseType: !6490, size: 64)
!6490 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !6465)
!6491 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6458, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!6492 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6458, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!6493 = !DIDerivedType(tag: DW_TAG_member, scope: !6458, file: !309, line: 90, baseType: !6494, size: 16, offset: 112)
!6494 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6458, file: !309, line: 90, size: 16, elements: !6495)
!6495 = !{!6496, !6501}
!6496 = !DIDerivedType(tag: DW_TAG_member, scope: !6494, file: !309, line: 91, baseType: !6497, size: 16)
!6497 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6494, file: !309, line: 91, size: 16, elements: !6498)
!6498 = !{!6499, !6500}
!6499 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6497, file: !309, line: 96, baseType: !359, size: 8)
!6500 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6497, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!6501 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6494, file: !309, line: 100, baseType: !197, size: 16)
!6502 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6458, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!6503 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6458, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!6504 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6458, file: !309, line: 131, baseType: !6505, size: 192, offset: 192)
!6505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !6506)
!6506 = !{!6507, !6508, !6514}
!6507 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6505, file: !345, line: 245, baseType: !6464, size: 64)
!6508 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6505, file: !345, line: 246, baseType: !6509, size: 32, offset: 64)
!6509 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !6510)
!6510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6511, size: 32)
!6511 = !DISubroutineType(types: !6512)
!6512 = !{null, !6513}
!6513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6505, size: 32)
!6514 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6505, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!6515 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6455, file: !309, line: 250, baseType: !6516, size: 288, offset: 384)
!6516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !6517)
!6517 = !{!6518, !6519, !6520, !6521, !6522, !6523, !6524, !6525, !6526}
!6518 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6516, file: !379, line: 26, baseType: !152, size: 32)
!6519 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6516, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!6520 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6516, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!6521 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6516, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!6522 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6516, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!6523 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6516, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!6524 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6516, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!6525 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6516, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!6526 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6516, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!6527 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6455, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!6528 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6455, file: !309, line: 256, baseType: !6486, size: 64, offset: 704)
!6529 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6455, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!6530 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6455, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!6531 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6455, file: !309, line: 300, baseType: !6532, size: 96, offset: 1056)
!6532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !6533)
!6533 = !{!6534, !6535, !6536}
!6534 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6532, file: !309, line: 153, baseType: !22, size: 32)
!6535 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6532, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!6536 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6532, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!6537 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6455, file: !309, line: 325, baseType: !6538, size: 32, offset: 1152)
!6538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6539, size: 32)
!6539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !6540)
!6540 = !{!6541, !6547, !6548}
!6541 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6539, file: !406, line: 5074, baseType: !6542, size: 96)
!6542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !6543)
!6543 = !{!6544, !6545, !6546}
!6544 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6542, file: !410, line: 57, baseType: !413, size: 32)
!6545 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6542, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!6546 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6542, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!6547 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6539, file: !406, line: 5075, baseType: !6486, size: 64, offset: 96)
!6548 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6539, file: !406, line: 5076, baseType: !6549, size: 32, offset: 160)
!6549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !6550)
!6550 = !{!6551}
!6551 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !6549, file: !420, line: 52, baseType: !22, size: 32)
!6552 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6455, file: !309, line: 343, baseType: !6553, size: 64, offset: 1184)
!6553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !6554)
!6554 = !{!6555, !6556}
!6555 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6553, file: !379, line: 63, baseType: !152, size: 32)
!6556 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6553, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!6557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6558, size: 32)
!6558 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !560, line: 44, baseType: !6559)
!6559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !577, line: 47, size: 8, elements: !6560)
!6560 = !{!6561}
!6561 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6559, file: !577, line: 48, baseType: !120, size: 8)
!6562 = !{!6563, !6564, !6565, !6566, !6567, !6568, !6569, !6570}
!6563 = !DILocalVariable(name: "thread", arg: 1, scope: !6450, file: !6451, line: 56, type: !6454)
!6564 = !DILocalVariable(name: "stack", arg: 2, scope: !6450, file: !6451, line: 56, type: !6557)
!6565 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !6450, file: !6451, line: 57, type: !193)
!6566 = !DILocalVariable(name: "entry", arg: 4, scope: !6450, file: !6451, line: 57, type: !559)
!6567 = !DILocalVariable(name: "p1", arg: 5, scope: !6450, file: !6451, line: 58, type: !106)
!6568 = !DILocalVariable(name: "p2", arg: 6, scope: !6450, file: !6451, line: 58, type: !106)
!6569 = !DILocalVariable(name: "p3", arg: 7, scope: !6450, file: !6451, line: 58, type: !106)
!6570 = !DILocalVariable(name: "iframe", scope: !6450, file: !6451, line: 60, type: !2745)
!6571 = !DILocation(line: 0, scope: !6450)
!6572 = !DILocation(line: 85, column: 11, scope: !6450)
!6573 = !DILocation(line: 93, column: 10, scope: !6450)
!6574 = !DILocation(line: 98, column: 13, scope: !6450)
!6575 = !DILocation(line: 100, column: 15, scope: !6450)
!6576 = !DILocation(line: 100, column: 10, scope: !6450)
!6577 = !DILocation(line: 100, column: 13, scope: !6450)
!6578 = !DILocation(line: 101, column: 15, scope: !6450)
!6579 = !DILocation(line: 101, column: 10, scope: !6450)
!6580 = !DILocation(line: 101, column: 13, scope: !6450)
!6581 = !DILocation(line: 102, column: 15, scope: !6450)
!6582 = !DILocation(line: 102, column: 10, scope: !6450)
!6583 = !DILocation(line: 102, column: 13, scope: !6450)
!6584 = !DILocation(line: 103, column: 15, scope: !6450)
!6585 = !DILocation(line: 103, column: 10, scope: !6450)
!6586 = !DILocation(line: 103, column: 13, scope: !6450)
!6587 = !DILocation(line: 106, column: 10, scope: !6450)
!6588 = !DILocation(line: 106, column: 15, scope: !6450)
!6589 = !DILocation(line: 122, column: 29, scope: !6450)
!6590 = !DILocation(line: 122, column: 23, scope: !6450)
!6591 = !DILocation(line: 122, column: 27, scope: !6450)
!6592 = !DILocation(line: 123, column: 15, scope: !6450)
!6593 = !DILocation(line: 123, column: 23, scope: !6450)
!6594 = !DILocation(line: 143, column: 1, scope: !6450)
!6595 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !6451, file: !6451, line: 385, type: !6596, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2742, retainedNodes: !6599)
!6596 = !DISubroutineType(types: !6597)
!6597 = !{!152, !6598, !6598}
!6598 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !152)
!6599 = !{!6600, !6601, !6602, !6605}
!6600 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !6595, file: !6451, line: 385, type: !6598)
!6601 = !DILocalVariable(name: "psp", arg: 2, scope: !6595, file: !6451, line: 385, type: !6598)
!6602 = !DILocalVariable(name: "thread", scope: !6595, file: !6451, line: 388, type: !6603)
!6603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6604, size: 32)
!6604 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6455)
!6605 = !DILocalVariable(name: "guard_len", scope: !6595, file: !6451, line: 405, type: !152)
!6606 = !DILocation(line: 0, scope: !6595)
!6607 = !DILocation(line: 388, column: 34, scope: !6595)
!6608 = !DILocation(line: 390, column: 13, scope: !6609)
!6609 = distinct !DILexicalBlock(scope: !6595, file: !6451, line: 390, column: 6)
!6610 = !DILocation(line: 390, column: 6, scope: !6595)
!6611 = !DILocation(line: 438, column: 6, scope: !6612)
!6612 = distinct !DILexicalBlock(scope: !6595, file: !6451, line: 438, column: 6)
!6613 = !DILocation(line: 438, column: 6, scope: !6595)
!6614 = !DILocation(line: 442, column: 3, scope: !6615)
!6615 = distinct !DILexicalBlock(scope: !6612, file: !6451, line: 440, column: 22)
!6616 = !DILocation(line: 455, column: 1, scope: !6595)
!6617 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !6451, file: !6451, line: 530, type: !6618, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2742, retainedNodes: !6620)
!6618 = !DISubroutineType(types: !6619)
!6619 = !{null, !6454, !193, !559}
!6620 = !{!6621, !6622, !6623}
!6621 = !DILocalVariable(name: "main_thread", arg: 1, scope: !6617, file: !6451, line: 530, type: !6454)
!6622 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !6617, file: !6451, line: 530, type: !193)
!6623 = !DILocalVariable(name: "_main", arg: 3, scope: !6617, file: !6451, line: 531, type: !559)
!6624 = !DILocation(line: 0, scope: !6617)
!6625 = !DILocation(line: 535, column: 11, scope: !6617)
!6626 = !DILocation(line: 560, column: 2, scope: !6617)
!6627 = !DILocation(line: 576, column: 2, scope: !6617)
!6628 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!6629 = !DILocation(line: 603, column: 2, scope: !6617)
!6630 = distinct !DISubprogram(name: "z_arm_fault", scope: !6631, file: !6631, line: 1036, type: !6632, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2785, retainedNodes: !6647)
!6631 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6632 = !DISubroutineType(types: !6633)
!6633 = !{null, !152, !152, !152, !6634}
!6634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6635, size: 32)
!6635 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !379, line: 37, baseType: !6636)
!6636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !6637)
!6637 = !{!6638, !6639, !6640, !6641, !6642, !6643, !6644, !6645, !6646}
!6638 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6636, file: !379, line: 26, baseType: !152, size: 32)
!6639 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6636, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!6640 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6636, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!6641 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6636, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!6642 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6636, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!6643 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6636, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!6644 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6636, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!6645 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6636, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!6646 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6636, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!6647 = !{!6648, !6649, !6650, !6651, !6652, !6653, !6654, !6655, !6656, !6657}
!6648 = !DILocalVariable(name: "msp", arg: 1, scope: !6630, file: !6631, line: 1036, type: !152)
!6649 = !DILocalVariable(name: "psp", arg: 2, scope: !6630, file: !6631, line: 1036, type: !152)
!6650 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6630, file: !6631, line: 1036, type: !152)
!6651 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !6630, file: !6631, line: 1037, type: !6634)
!6652 = !DILocalVariable(name: "reason", scope: !6630, file: !6631, line: 1039, type: !152)
!6653 = !DILocalVariable(name: "fault", scope: !6630, file: !6631, line: 1040, type: !107)
!6654 = !DILocalVariable(name: "recoverable", scope: !6630, file: !6631, line: 1041, type: !145)
!6655 = !DILocalVariable(name: "nested_exc", scope: !6630, file: !6631, line: 1041, type: !145)
!6656 = !DILocalVariable(name: "esf", scope: !6630, file: !6631, line: 1042, type: !2813)
!6657 = !DILocalVariable(name: "esf_copy", scope: !6630, file: !6631, line: 1047, type: !2814)
!6658 = !DILocation(line: 0, scope: !6630)
!6659 = !DILocation(line: 1040, column: 19, scope: !6630)
!6660 = !DILocation(line: 1041, column: 2, scope: !6630)
!6661 = !DILocation(line: 1047, column: 2, scope: !6630)
!6662 = !DILocation(line: 1047, column: 15, scope: !6630)
!6663 = !DILocalVariable(name: "key", arg: 1, scope: !6664, file: !6002, line: 84, type: !32)
!6664 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6002, file: !6002, line: 84, type: !6013, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2785, retainedNodes: !6665)
!6665 = !{!6663}
!6666 = !DILocation(line: 0, scope: !6664, inlinedAt: !6667)
!6667 = distinct !DILocation(line: 1050, column: 2, scope: !6630)
!6668 = !DILocation(line: 95, column: 2, scope: !6664, inlinedAt: !6667)
!6669 = !{i64 2315601}
!6670 = !DILocation(line: 1055, column: 9, scope: !6630)
!6671 = !DILocation(line: 1056, column: 2, scope: !6672)
!6672 = distinct !DILexicalBlock(scope: !6673, file: !6631, line: 1056, column: 2)
!6673 = distinct !DILexicalBlock(scope: !6630, file: !6631, line: 1056, column: 2)
!6674 = !DILocation(line: 1056, column: 2, scope: !6673)
!6675 = !DILocation(line: 1056, column: 2, scope: !6676)
!6676 = distinct !DILexicalBlock(scope: !6672, file: !6631, line: 1056, column: 2)
!6677 = !DILocation(line: 1040, column: 24, scope: !6630)
!6678 = !DILocation(line: 1063, column: 11, scope: !6630)
!6679 = !DILocation(line: 1064, column: 6, scope: !6680)
!6680 = distinct !DILexicalBlock(scope: !6630, file: !6631, line: 1064, column: 6)
!6681 = !{i8 0, i8 2}
!6682 = !DILocation(line: 1064, column: 6, scope: !6630)
!6683 = !DILocation(line: 1070, column: 20, scope: !6630)
!6684 = !DILocation(line: 1070, column: 2, scope: !6630)
!6685 = !DILocation(line: 1089, column: 6, scope: !6686)
!6686 = distinct !DILexicalBlock(scope: !6630, file: !6631, line: 1089, column: 6)
!6687 = !DILocation(line: 0, scope: !6686)
!6688 = !DILocation(line: 1089, column: 6, scope: !6630)
!6689 = !DILocation(line: 1090, column: 28, scope: !6690)
!6690 = distinct !DILexicalBlock(scope: !6691, file: !6631, line: 1090, column: 7)
!6691 = distinct !DILexicalBlock(scope: !6686, file: !6631, line: 1089, column: 18)
!6692 = !DILocation(line: 1090, column: 44, scope: !6690)
!6693 = !DILocation(line: 1090, column: 7, scope: !6691)
!6694 = !DILocation(line: 1091, column: 24, scope: !6695)
!6695 = distinct !DILexicalBlock(scope: !6690, file: !6631, line: 1090, column: 50)
!6696 = !DILocation(line: 1092, column: 3, scope: !6695)
!6697 = !DILocation(line: 1094, column: 23, scope: !6698)
!6698 = distinct !DILexicalBlock(scope: !6686, file: !6631, line: 1093, column: 9)
!6699 = !DILocation(line: 1097, column: 2, scope: !6630)
!6700 = !DILocation(line: 1098, column: 1, scope: !6630)
!6701 = distinct !DISubprogram(name: "get_esf", scope: !6631, file: !6631, line: 894, type: !6702, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2785, retainedNodes: !6705)
!6702 = !DISubroutineType(types: !6703)
!6703 = !{!2813, !152, !152, !152, !6704}
!6704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !145, size: 32)
!6705 = !{!6706, !6707, !6708, !6709, !6710, !6711}
!6706 = !DILocalVariable(name: "msp", arg: 1, scope: !6701, file: !6631, line: 894, type: !152)
!6707 = !DILocalVariable(name: "psp", arg: 2, scope: !6701, file: !6631, line: 894, type: !152)
!6708 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6701, file: !6631, line: 894, type: !152)
!6709 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !6701, file: !6631, line: 895, type: !6704)
!6710 = !DILocalVariable(name: "alternative_state_exc", scope: !6701, file: !6631, line: 897, type: !145)
!6711 = !DILocalVariable(name: "ptr_esf", scope: !6701, file: !6631, line: 898, type: !2813)
!6712 = !DILocation(line: 0, scope: !6701)
!6713 = !DILocation(line: 900, column: 14, scope: !6701)
!6714 = !DILocation(line: 902, column: 49, scope: !6715)
!6715 = distinct !DILexicalBlock(scope: !6701, file: !6631, line: 902, column: 6)
!6716 = !DILocation(line: 902, column: 6, scope: !6701)
!6717 = !DILocation(line: 983, column: 44, scope: !6718)
!6718 = distinct !DILexicalBlock(scope: !6701, file: !6631, line: 983, column: 6)
!6719 = !DILocation(line: 985, column: 3, scope: !6720)
!6720 = distinct !DILexicalBlock(scope: !6721, file: !6631, line: 985, column: 3)
!6721 = distinct !DILexicalBlock(scope: !6722, file: !6631, line: 985, column: 3)
!6722 = distinct !DILexicalBlock(scope: !6723, file: !6631, line: 985, column: 3)
!6723 = distinct !DILexicalBlock(scope: !6724, file: !6631, line: 985, column: 3)
!6724 = distinct !DILexicalBlock(scope: !6718, file: !6631, line: 984, column: 47)
!6725 = !DILocation(line: 986, column: 3, scope: !6724)
!6726 = !DILocation(line: 983, column: 18, scope: !6718)
!6727 = !DILocation(line: 991, column: 7, scope: !6728)
!6728 = distinct !DILexicalBlock(scope: !6729, file: !6631, line: 990, column: 30)
!6729 = distinct !DILexicalBlock(scope: !6701, file: !6631, line: 990, column: 6)
!6730 = !DILocation(line: 998, column: 16, scope: !6731)
!6731 = distinct !DILexicalBlock(scope: !6732, file: !6631, line: 995, column: 10)
!6732 = distinct !DILexicalBlock(scope: !6728, file: !6631, line: 991, column: 7)
!6733 = !DILocation(line: 1002, column: 2, scope: !6701)
!6734 = !DILocation(line: 1003, column: 1, scope: !6701)
!6735 = distinct !DISubprogram(name: "fault_handle", scope: !6631, file: !6631, line: 786, type: !6736, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2785, retainedNodes: !6738)
!6736 = !DISubroutineType(types: !6737)
!6737 = !{!152, !2813, !107, !6704}
!6738 = !{!6739, !6740, !6741, !6742}
!6739 = !DILocalVariable(name: "esf", arg: 1, scope: !6735, file: !6631, line: 786, type: !2813)
!6740 = !DILocalVariable(name: "fault", arg: 2, scope: !6735, file: !6631, line: 786, type: !107)
!6741 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6735, file: !6631, line: 786, type: !6704)
!6742 = !DILocalVariable(name: "reason", scope: !6735, file: !6631, line: 788, type: !152)
!6743 = !DILocation(line: 0, scope: !6735)
!6744 = !DILocation(line: 790, column: 15, scope: !6735)
!6745 = !DILocation(line: 792, column: 2, scope: !6735)
!6746 = !DILocation(line: 794, column: 12, scope: !6747)
!6747 = distinct !DILexicalBlock(scope: !6735, file: !6631, line: 792, column: 17)
!6748 = !DILocation(line: 795, column: 3, scope: !6747)
!6749 = !DILocation(line: 800, column: 12, scope: !6747)
!6750 = !DILocation(line: 801, column: 3, scope: !6747)
!6751 = !DILocation(line: 803, column: 12, scope: !6747)
!6752 = !DILocation(line: 804, column: 3, scope: !6747)
!6753 = !DILocation(line: 806, column: 12, scope: !6747)
!6754 = !DILocation(line: 807, column: 3, scope: !6747)
!6755 = !DILocation(line: 814, column: 3, scope: !6747)
!6756 = !DILocation(line: 815, column: 3, scope: !6747)
!6757 = !DILocation(line: 820, column: 3, scope: !6747)
!6758 = !DILocation(line: 821, column: 3, scope: !6747)
!6759 = !DILocation(line: 829, column: 2, scope: !6735)
!6760 = distinct !DISubprogram(name: "hard_fault", scope: !6631, file: !6631, line: 709, type: !6761, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2785, retainedNodes: !6763)
!6761 = !DISubroutineType(types: !6762)
!6762 = !{!152, !2813, !6704}
!6763 = !{!6764, !6765, !6766}
!6764 = !DILocalVariable(name: "esf", arg: 1, scope: !6760, file: !6631, line: 709, type: !2813)
!6765 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6760, file: !6631, line: 709, type: !6704)
!6766 = !DILocalVariable(name: "reason", scope: !6760, file: !6631, line: 711, type: !152)
!6767 = !DILocation(line: 0, scope: !6760)
!6768 = !DILocation(line: 713, column: 2, scope: !6769)
!6769 = distinct !DILexicalBlock(scope: !6770, file: !6631, line: 713, column: 2)
!6770 = distinct !DILexicalBlock(scope: !6771, file: !6631, line: 713, column: 2)
!6771 = distinct !DILexicalBlock(scope: !6772, file: !6631, line: 713, column: 2)
!6772 = distinct !DILexicalBlock(scope: !6760, file: !6631, line: 713, column: 2)
!6773 = !DILocation(line: 732, column: 15, scope: !6760)
!6774 = !DILocation(line: 734, column: 12, scope: !6775)
!6775 = distinct !DILexicalBlock(scope: !6760, file: !6631, line: 734, column: 6)
!6776 = !DILocation(line: 734, column: 17, scope: !6775)
!6777 = !DILocation(line: 734, column: 41, scope: !6775)
!6778 = !DILocation(line: 734, column: 6, scope: !6760)
!6779 = !DILocation(line: 735, column: 3, scope: !6780)
!6780 = distinct !DILexicalBlock(scope: !6781, file: !6631, line: 735, column: 3)
!6781 = distinct !DILexicalBlock(scope: !6782, file: !6631, line: 735, column: 3)
!6782 = distinct !DILexicalBlock(scope: !6783, file: !6631, line: 735, column: 3)
!6783 = distinct !DILexicalBlock(scope: !6784, file: !6631, line: 735, column: 3)
!6784 = distinct !DILexicalBlock(scope: !6775, file: !6631, line: 734, column: 47)
!6785 = !DILocation(line: 736, column: 2, scope: !6784)
!6786 = !DILocation(line: 736, column: 19, scope: !6787)
!6787 = distinct !DILexicalBlock(scope: !6775, file: !6631, line: 736, column: 13)
!6788 = !DILocation(line: 736, column: 49, scope: !6787)
!6789 = !DILocation(line: 736, column: 13, scope: !6775)
!6790 = !DILocation(line: 737, column: 3, scope: !6791)
!6791 = distinct !DILexicalBlock(scope: !6792, file: !6631, line: 737, column: 3)
!6792 = distinct !DILexicalBlock(scope: !6793, file: !6631, line: 737, column: 3)
!6793 = distinct !DILexicalBlock(scope: !6794, file: !6631, line: 737, column: 3)
!6794 = distinct !DILexicalBlock(scope: !6795, file: !6631, line: 737, column: 3)
!6795 = distinct !DILexicalBlock(scope: !6787, file: !6631, line: 736, column: 55)
!6796 = !DILocation(line: 738, column: 2, scope: !6795)
!6797 = !DILocation(line: 738, column: 19, scope: !6798)
!6798 = distinct !DILexicalBlock(scope: !6787, file: !6631, line: 738, column: 13)
!6799 = !DILocation(line: 738, column: 24, scope: !6798)
!6800 = !DILocation(line: 738, column: 47, scope: !6798)
!6801 = !DILocation(line: 738, column: 13, scope: !6787)
!6802 = !DILocation(line: 739, column: 3, scope: !6803)
!6803 = distinct !DILexicalBlock(scope: !6804, file: !6631, line: 739, column: 3)
!6804 = distinct !DILexicalBlock(scope: !6805, file: !6631, line: 739, column: 3)
!6805 = distinct !DILexicalBlock(scope: !6806, file: !6631, line: 739, column: 3)
!6806 = distinct !DILexicalBlock(scope: !6807, file: !6631, line: 739, column: 3)
!6807 = distinct !DILexicalBlock(scope: !6798, file: !6631, line: 738, column: 53)
!6808 = !DILocation(line: 740, column: 7, scope: !6809)
!6809 = distinct !DILexicalBlock(scope: !6807, file: !6631, line: 740, column: 7)
!6810 = !DILocation(line: 740, column: 7, scope: !6807)
!6811 = !DILocation(line: 741, column: 4, scope: !6812)
!6812 = distinct !DILexicalBlock(scope: !6813, file: !6631, line: 741, column: 4)
!6813 = distinct !DILexicalBlock(scope: !6814, file: !6631, line: 741, column: 4)
!6814 = distinct !DILexicalBlock(scope: !6815, file: !6631, line: 741, column: 4)
!6815 = distinct !DILexicalBlock(scope: !6816, file: !6631, line: 741, column: 4)
!6816 = distinct !DILexicalBlock(scope: !6809, file: !6631, line: 740, column: 38)
!6817 = !DILocation(line: 742, column: 24, scope: !6816)
!6818 = !DILocation(line: 743, column: 3, scope: !6816)
!6819 = !DILocation(line: 743, column: 20, scope: !6820)
!6820 = distinct !DILexicalBlock(scope: !6809, file: !6631, line: 743, column: 14)
!6821 = !DILocation(line: 743, column: 25, scope: !6820)
!6822 = !DILocation(line: 743, column: 52, scope: !6820)
!6823 = !DILocation(line: 743, column: 14, scope: !6809)
!6824 = !DILocation(line: 744, column: 13, scope: !6825)
!6825 = distinct !DILexicalBlock(scope: !6820, file: !6631, line: 743, column: 58)
!6826 = !DILocation(line: 745, column: 3, scope: !6825)
!6827 = !DILocation(line: 745, column: 20, scope: !6828)
!6828 = distinct !DILexicalBlock(scope: !6820, file: !6631, line: 745, column: 14)
!6829 = !DILocation(line: 745, column: 25, scope: !6828)
!6830 = !DILocation(line: 745, column: 52, scope: !6828)
!6831 = !DILocation(line: 745, column: 14, scope: !6820)
!6832 = !DILocation(line: 746, column: 13, scope: !6833)
!6833 = distinct !DILexicalBlock(scope: !6828, file: !6631, line: 745, column: 58)
!6834 = !DILocation(line: 747, column: 3, scope: !6833)
!6835 = !DILocation(line: 747, column: 20, scope: !6836)
!6836 = distinct !DILexicalBlock(scope: !6828, file: !6631, line: 747, column: 14)
!6837 = !DILocation(line: 747, column: 52, scope: !6836)
!6838 = !DILocation(line: 747, column: 14, scope: !6828)
!6839 = !DILocation(line: 748, column: 13, scope: !6840)
!6840 = distinct !DILexicalBlock(scope: !6836, file: !6631, line: 747, column: 58)
!6841 = !DILocation(line: 754, column: 4, scope: !6842)
!6842 = distinct !DILexicalBlock(scope: !6843, file: !6631, line: 754, column: 4)
!6843 = distinct !DILexicalBlock(scope: !6844, file: !6631, line: 754, column: 4)
!6844 = distinct !DILexicalBlock(scope: !6845, file: !6631, line: 754, column: 4)
!6845 = distinct !DILexicalBlock(scope: !6836, file: !6631, line: 753, column: 10)
!6846 = !DILocation(line: 758, column: 3, scope: !6847)
!6847 = distinct !DILexicalBlock(scope: !6848, file: !6631, line: 758, column: 3)
!6848 = distinct !DILexicalBlock(scope: !6849, file: !6631, line: 758, column: 3)
!6849 = distinct !DILexicalBlock(scope: !6850, file: !6631, line: 758, column: 3)
!6850 = distinct !DILexicalBlock(scope: !6798, file: !6631, line: 757, column: 9)
!6851 = !DILocation(line: 766, column: 2, scope: !6760)
!6852 = distinct !DISubprogram(name: "mem_manage_fault", scope: !6631, file: !6631, line: 229, type: !6736, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2785, retainedNodes: !6853)
!6853 = !{!6854, !6855, !6856, !6857, !6858, !6859, !6862}
!6854 = !DILocalVariable(name: "esf", arg: 1, scope: !6852, file: !6631, line: 229, type: !2813)
!6855 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6852, file: !6631, line: 229, type: !107)
!6856 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6852, file: !6631, line: 230, type: !6704)
!6857 = !DILocalVariable(name: "reason", scope: !6852, file: !6631, line: 232, type: !152)
!6858 = !DILocalVariable(name: "mmfar", scope: !6852, file: !6631, line: 233, type: !152)
!6859 = !DILocalVariable(name: "temp", scope: !6860, file: !6631, line: 254, type: !152)
!6860 = distinct !DILexicalBlock(scope: !6861, file: !6631, line: 244, column: 48)
!6861 = distinct !DILexicalBlock(scope: !6852, file: !6631, line: 244, column: 6)
!6862 = !DILocalVariable(name: "min_stack_ptr", scope: !6863, file: !6631, line: 309, type: !152)
!6863 = distinct !DILexicalBlock(scope: !6864, file: !6631, line: 308, column: 43)
!6864 = distinct !DILexicalBlock(scope: !6865, file: !6631, line: 308, column: 7)
!6865 = distinct !DILexicalBlock(scope: !6866, file: !6631, line: 289, column: 40)
!6866 = distinct !DILexicalBlock(scope: !6852, file: !6631, line: 288, column: 6)
!6867 = !DILocation(line: 0, scope: !6852)
!6868 = !DILocation(line: 235, column: 2, scope: !6869)
!6869 = distinct !DILexicalBlock(scope: !6870, file: !6631, line: 235, column: 2)
!6870 = distinct !DILexicalBlock(scope: !6871, file: !6631, line: 235, column: 2)
!6871 = distinct !DILexicalBlock(scope: !6872, file: !6631, line: 235, column: 2)
!6872 = distinct !DILexicalBlock(scope: !6852, file: !6631, line: 235, column: 2)
!6873 = !DILocation(line: 237, column: 12, scope: !6874)
!6874 = distinct !DILexicalBlock(scope: !6852, file: !6631, line: 237, column: 6)
!6875 = !DILocation(line: 237, column: 17, scope: !6874)
!6876 = !DILocation(line: 237, column: 41, scope: !6874)
!6877 = !DILocation(line: 237, column: 6, scope: !6852)
!6878 = !DILocation(line: 238, column: 3, scope: !6879)
!6879 = distinct !DILexicalBlock(scope: !6880, file: !6631, line: 238, column: 3)
!6880 = distinct !DILexicalBlock(scope: !6881, file: !6631, line: 238, column: 3)
!6881 = distinct !DILexicalBlock(scope: !6882, file: !6631, line: 238, column: 3)
!6882 = distinct !DILexicalBlock(scope: !6883, file: !6631, line: 238, column: 3)
!6883 = distinct !DILexicalBlock(scope: !6874, file: !6631, line: 237, column: 47)
!6884 = !DILocation(line: 240, column: 2, scope: !6883)
!6885 = !DILocation(line: 241, column: 12, scope: !6886)
!6886 = distinct !DILexicalBlock(scope: !6852, file: !6631, line: 241, column: 6)
!6887 = !DILocation(line: 241, column: 17, scope: !6886)
!6888 = !DILocation(line: 241, column: 43, scope: !6886)
!6889 = !DILocation(line: 241, column: 6, scope: !6852)
!6890 = !DILocation(line: 242, column: 3, scope: !6891)
!6891 = distinct !DILexicalBlock(scope: !6892, file: !6631, line: 242, column: 3)
!6892 = distinct !DILexicalBlock(scope: !6893, file: !6631, line: 242, column: 3)
!6893 = distinct !DILexicalBlock(scope: !6894, file: !6631, line: 242, column: 3)
!6894 = distinct !DILexicalBlock(scope: !6895, file: !6631, line: 242, column: 3)
!6895 = distinct !DILexicalBlock(scope: !6886, file: !6631, line: 241, column: 49)
!6896 = !DILocation(line: 243, column: 2, scope: !6895)
!6897 = !DILocation(line: 244, column: 12, scope: !6861)
!6898 = !DILocation(line: 244, column: 17, scope: !6861)
!6899 = !DILocation(line: 244, column: 42, scope: !6861)
!6900 = !DILocation(line: 244, column: 6, scope: !6852)
!6901 = !DILocation(line: 245, column: 3, scope: !6902)
!6902 = distinct !DILexicalBlock(scope: !6903, file: !6631, line: 245, column: 3)
!6903 = distinct !DILexicalBlock(scope: !6904, file: !6631, line: 245, column: 3)
!6904 = distinct !DILexicalBlock(scope: !6905, file: !6631, line: 245, column: 3)
!6905 = distinct !DILexicalBlock(scope: !6860, file: !6631, line: 245, column: 3)
!6906 = !DILocation(line: 254, column: 24, scope: !6860)
!6907 = !DILocation(line: 0, scope: !6860)
!6908 = !DILocation(line: 256, column: 13, scope: !6909)
!6909 = distinct !DILexicalBlock(scope: !6860, file: !6631, line: 256, column: 7)
!6910 = !DILocation(line: 256, column: 18, scope: !6909)
!6911 = !DILocation(line: 256, column: 44, scope: !6909)
!6912 = !DILocation(line: 256, column: 7, scope: !6860)
!6913 = !DILocation(line: 258, column: 4, scope: !6914)
!6914 = distinct !DILexicalBlock(scope: !6915, file: !6631, line: 258, column: 4)
!6915 = distinct !DILexicalBlock(scope: !6916, file: !6631, line: 258, column: 4)
!6916 = distinct !DILexicalBlock(scope: !6917, file: !6631, line: 258, column: 4)
!6917 = distinct !DILexicalBlock(scope: !6918, file: !6631, line: 258, column: 4)
!6918 = distinct !DILexicalBlock(scope: !6909, file: !6631, line: 256, column: 50)
!6919 = !DILocation(line: 259, column: 24, scope: !6920)
!6920 = distinct !DILexicalBlock(scope: !6918, file: !6631, line: 259, column: 8)
!6921 = !DILocation(line: 259, column: 8, scope: !6918)
!6922 = !DILocation(line: 261, column: 15, scope: !6923)
!6923 = distinct !DILexicalBlock(scope: !6920, file: !6631, line: 259, column: 30)
!6924 = !DILocation(line: 262, column: 4, scope: !6923)
!6925 = !DILocation(line: 265, column: 12, scope: !6926)
!6926 = distinct !DILexicalBlock(scope: !6852, file: !6631, line: 265, column: 6)
!6927 = !DILocation(line: 265, column: 17, scope: !6926)
!6928 = !DILocation(line: 265, column: 42, scope: !6926)
!6929 = !DILocation(line: 265, column: 6, scope: !6852)
!6930 = !DILocation(line: 266, column: 3, scope: !6931)
!6931 = distinct !DILexicalBlock(scope: !6932, file: !6631, line: 266, column: 3)
!6932 = distinct !DILexicalBlock(scope: !6933, file: !6631, line: 266, column: 3)
!6933 = distinct !DILexicalBlock(scope: !6934, file: !6631, line: 266, column: 3)
!6934 = distinct !DILexicalBlock(scope: !6935, file: !6631, line: 266, column: 3)
!6935 = distinct !DILexicalBlock(scope: !6926, file: !6631, line: 265, column: 48)
!6936 = !DILocation(line: 267, column: 2, scope: !6935)
!6937 = !DILocation(line: 269, column: 12, scope: !6938)
!6938 = distinct !DILexicalBlock(scope: !6852, file: !6631, line: 269, column: 6)
!6939 = !DILocation(line: 269, column: 17, scope: !6938)
!6940 = !DILocation(line: 269, column: 41, scope: !6938)
!6941 = !DILocation(line: 269, column: 6, scope: !6852)
!6942 = !DILocation(line: 270, column: 3, scope: !6943)
!6943 = distinct !DILexicalBlock(scope: !6944, file: !6631, line: 270, column: 3)
!6944 = distinct !DILexicalBlock(scope: !6945, file: !6631, line: 270, column: 3)
!6945 = distinct !DILexicalBlock(scope: !6946, file: !6631, line: 270, column: 3)
!6946 = distinct !DILexicalBlock(scope: !6947, file: !6631, line: 270, column: 3)
!6947 = distinct !DILexicalBlock(scope: !6938, file: !6631, line: 269, column: 47)
!6948 = !DILocation(line: 272, column: 2, scope: !6947)
!6949 = !DILocation(line: 288, column: 12, scope: !6866)
!6950 = !DILocation(line: 288, column: 17, scope: !6866)
!6951 = !DILocation(line: 288, column: 41, scope: !6866)
!6952 = !DILocation(line: 289, column: 9, scope: !6866)
!6953 = !DILocation(line: 289, column: 14, scope: !6866)
!6954 = !DILocation(line: 288, column: 6, scope: !6852)
!6955 = !DILocation(line: 308, column: 12, scope: !6864)
!6956 = !DILocation(line: 308, column: 17, scope: !6864)
!6957 = !DILocation(line: 308, column: 7, scope: !6865)
!6958 = !DILocation(line: 310, column: 6, scope: !6863)
!6959 = !DILocation(line: 309, column: 29, scope: !6863)
!6960 = !DILocation(line: 0, scope: !6863)
!6961 = !DILocation(line: 312, column: 8, scope: !6962)
!6962 = distinct !DILexicalBlock(scope: !6863, file: !6631, line: 312, column: 8)
!6963 = !DILocation(line: 312, column: 8, scope: !6863)
!6964 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !6965, file: !6321, line: 1099, type: !152)
!6965 = distinct !DISubprogram(name: "__set_PSP", scope: !6321, file: !6321, line: 1099, type: !6418, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2785, retainedNodes: !6966)
!6966 = !{!6964}
!6967 = !DILocation(line: 0, scope: !6965, inlinedAt: !6968)
!6968 = distinct !DILocation(line: 338, column: 5, scope: !6969)
!6969 = distinct !DILexicalBlock(scope: !6962, file: !6631, line: 312, column: 23)
!6970 = !DILocation(line: 1101, column: 3, scope: !6965, inlinedAt: !6968)
!6971 = !{i64 3762825}
!6972 = !DILocation(line: 341, column: 4, scope: !6969)
!6973 = !DILocation(line: 342, column: 5, scope: !6974)
!6974 = distinct !DILexicalBlock(scope: !6975, file: !6631, line: 342, column: 5)
!6975 = distinct !DILexicalBlock(scope: !6976, file: !6631, line: 342, column: 5)
!6976 = distinct !DILexicalBlock(scope: !6962, file: !6631, line: 341, column: 11)
!6977 = !DILocation(line: 342, column: 5, scope: !6975)
!6978 = !DILocation(line: 342, column: 5, scope: !6979)
!6979 = distinct !DILexicalBlock(scope: !6974, file: !6631, line: 342, column: 5)
!6980 = !DILocation(line: 360, column: 12, scope: !6981)
!6981 = distinct !DILexicalBlock(scope: !6852, file: !6631, line: 360, column: 6)
!6982 = !DILocation(line: 360, column: 17, scope: !6981)
!6983 = !DILocation(line: 360, column: 41, scope: !6981)
!6984 = !DILocation(line: 360, column: 6, scope: !6852)
!6985 = !DILocation(line: 361, column: 14, scope: !6986)
!6986 = distinct !DILexicalBlock(scope: !6981, file: !6631, line: 360, column: 47)
!6987 = !DILocation(line: 362, column: 2, scope: !6986)
!6988 = !DILocation(line: 366, column: 12, scope: !6852)
!6989 = !DILocation(line: 369, column: 15, scope: !6852)
!6990 = !DILocation(line: 371, column: 2, scope: !6852)
!6991 = distinct !DISubprogram(name: "bus_fault", scope: !6631, file: !6631, line: 383, type: !6992, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2785, retainedNodes: !6994)
!6992 = !DISubroutineType(types: !6993)
!6993 = !{!107, !2813, !107, !6704}
!6994 = !{!6995, !6996, !6997, !6998, !6999}
!6995 = !DILocalVariable(name: "esf", arg: 1, scope: !6991, file: !6631, line: 383, type: !2813)
!6996 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6991, file: !6631, line: 383, type: !107)
!6997 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6991, file: !6631, line: 383, type: !6704)
!6998 = !DILocalVariable(name: "reason", scope: !6991, file: !6631, line: 385, type: !152)
!6999 = !DILocalVariable(name: "bfar", scope: !7000, file: !6631, line: 405, type: !152)
!7000 = distinct !DILexicalBlock(scope: !7001, file: !6631, line: 395, column: 42)
!7001 = distinct !DILexicalBlock(scope: !6991, file: !6631, line: 395, column: 6)
!7002 = !DILocation(line: 0, scope: !6991)
!7003 = !DILocation(line: 387, column: 2, scope: !7004)
!7004 = distinct !DILexicalBlock(scope: !7005, file: !6631, line: 387, column: 2)
!7005 = distinct !DILexicalBlock(scope: !7006, file: !6631, line: 387, column: 2)
!7006 = distinct !DILexicalBlock(scope: !7007, file: !6631, line: 387, column: 2)
!7007 = distinct !DILexicalBlock(scope: !6991, file: !6631, line: 387, column: 2)
!7008 = !DILocation(line: 389, column: 11, scope: !7009)
!7009 = distinct !DILexicalBlock(scope: !6991, file: !6631, line: 389, column: 6)
!7010 = !DILocation(line: 389, column: 16, scope: !7009)
!7011 = !DILocation(line: 389, column: 6, scope: !6991)
!7012 = !DILocation(line: 390, column: 3, scope: !7013)
!7013 = distinct !DILexicalBlock(scope: !7014, file: !6631, line: 390, column: 3)
!7014 = distinct !DILexicalBlock(scope: !7015, file: !6631, line: 390, column: 3)
!7015 = distinct !DILexicalBlock(scope: !7016, file: !6631, line: 390, column: 3)
!7016 = distinct !DILexicalBlock(scope: !7017, file: !6631, line: 390, column: 3)
!7017 = distinct !DILexicalBlock(scope: !7009, file: !6631, line: 389, column: 39)
!7018 = !DILocation(line: 391, column: 2, scope: !7017)
!7019 = !DILocation(line: 392, column: 11, scope: !7020)
!7020 = distinct !DILexicalBlock(scope: !6991, file: !6631, line: 392, column: 6)
!7021 = !DILocation(line: 392, column: 16, scope: !7020)
!7022 = !DILocation(line: 392, column: 6, scope: !6991)
!7023 = !DILocation(line: 393, column: 3, scope: !7024)
!7024 = distinct !DILexicalBlock(scope: !7025, file: !6631, line: 393, column: 3)
!7025 = distinct !DILexicalBlock(scope: !7026, file: !6631, line: 393, column: 3)
!7026 = distinct !DILexicalBlock(scope: !7027, file: !6631, line: 393, column: 3)
!7027 = distinct !DILexicalBlock(scope: !7028, file: !6631, line: 393, column: 3)
!7028 = distinct !DILexicalBlock(scope: !7020, file: !6631, line: 392, column: 41)
!7029 = !DILocation(line: 394, column: 2, scope: !7028)
!7030 = !DILocation(line: 395, column: 11, scope: !7001)
!7031 = !DILocation(line: 395, column: 16, scope: !7001)
!7032 = !DILocation(line: 395, column: 6, scope: !6991)
!7033 = !DILocation(line: 396, column: 3, scope: !7034)
!7034 = distinct !DILexicalBlock(scope: !7035, file: !6631, line: 396, column: 3)
!7035 = distinct !DILexicalBlock(scope: !7036, file: !6631, line: 396, column: 3)
!7036 = distinct !DILexicalBlock(scope: !7037, file: !6631, line: 396, column: 3)
!7037 = distinct !DILexicalBlock(scope: !7000, file: !6631, line: 396, column: 3)
!7038 = !DILocation(line: 405, column: 3, scope: !7000)
!7039 = !DILocation(line: 0, scope: !7000)
!7040 = !DILocation(line: 407, column: 13, scope: !7041)
!7041 = distinct !DILexicalBlock(scope: !7000, file: !6631, line: 407, column: 7)
!7042 = !DILocation(line: 407, column: 18, scope: !7041)
!7043 = !DILocation(line: 407, column: 44, scope: !7041)
!7044 = !DILocation(line: 407, column: 7, scope: !7000)
!7045 = !DILocation(line: 408, column: 4, scope: !7046)
!7046 = distinct !DILexicalBlock(scope: !7047, file: !6631, line: 408, column: 4)
!7047 = distinct !DILexicalBlock(scope: !7048, file: !6631, line: 408, column: 4)
!7048 = distinct !DILexicalBlock(scope: !7049, file: !6631, line: 408, column: 4)
!7049 = distinct !DILexicalBlock(scope: !7050, file: !6631, line: 408, column: 4)
!7050 = distinct !DILexicalBlock(scope: !7041, file: !6631, line: 407, column: 50)
!7051 = !DILocation(line: 409, column: 24, scope: !7052)
!7052 = distinct !DILexicalBlock(scope: !7050, file: !6631, line: 409, column: 8)
!7053 = !DILocation(line: 409, column: 8, scope: !7050)
!7054 = !DILocation(line: 411, column: 15, scope: !7055)
!7055 = distinct !DILexicalBlock(scope: !7052, file: !6631, line: 409, column: 30)
!7056 = !DILocation(line: 412, column: 4, scope: !7055)
!7057 = !DILocation(line: 415, column: 11, scope: !7058)
!7058 = distinct !DILexicalBlock(scope: !6991, file: !6631, line: 415, column: 6)
!7059 = !DILocation(line: 415, column: 16, scope: !7058)
!7060 = !DILocation(line: 415, column: 6, scope: !6991)
!7061 = !DILocation(line: 416, column: 3, scope: !7062)
!7062 = distinct !DILexicalBlock(scope: !7063, file: !6631, line: 416, column: 3)
!7063 = distinct !DILexicalBlock(scope: !7064, file: !6631, line: 416, column: 3)
!7064 = distinct !DILexicalBlock(scope: !7065, file: !6631, line: 416, column: 3)
!7065 = distinct !DILexicalBlock(scope: !7066, file: !6631, line: 416, column: 3)
!7066 = distinct !DILexicalBlock(scope: !7058, file: !6631, line: 415, column: 44)
!7067 = !DILocation(line: 417, column: 2, scope: !7066)
!7068 = !DILocation(line: 418, column: 12, scope: !7069)
!7069 = distinct !DILexicalBlock(scope: !6991, file: !6631, line: 418, column: 6)
!7070 = !DILocation(line: 418, column: 17, scope: !7069)
!7071 = !DILocation(line: 418, column: 41, scope: !7069)
!7072 = !DILocation(line: 418, column: 6, scope: !6991)
!7073 = !DILocation(line: 423, column: 18, scope: !7074)
!7074 = distinct !DILexicalBlock(scope: !7069, file: !6631, line: 423, column: 13)
!7075 = !DILocation(line: 423, column: 23, scope: !7074)
!7076 = !DILocation(line: 423, column: 13, scope: !7069)
!7077 = !DILocation(line: 0, scope: !7069)
!7078 = !DILocation(line: 524, column: 12, scope: !6991)
!7079 = !DILocation(line: 526, column: 15, scope: !6991)
!7080 = !DILocation(line: 528, column: 2, scope: !6991)
!7081 = distinct !DISubprogram(name: "usage_fault", scope: !6631, file: !6631, line: 539, type: !7082, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2785, retainedNodes: !7086)
!7082 = !DISubroutineType(types: !7083)
!7083 = !{!152, !7084}
!7084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7085, size: 32)
!7085 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2814)
!7086 = !{!7087, !7088}
!7087 = !DILocalVariable(name: "esf", arg: 1, scope: !7081, file: !6631, line: 539, type: !7084)
!7088 = !DILocalVariable(name: "reason", scope: !7081, file: !6631, line: 541, type: !152)
!7089 = !DILocation(line: 0, scope: !7081)
!7090 = !DILocation(line: 543, column: 2, scope: !7091)
!7091 = distinct !DILexicalBlock(scope: !7092, file: !6631, line: 543, column: 2)
!7092 = distinct !DILexicalBlock(scope: !7093, file: !6631, line: 543, column: 2)
!7093 = distinct !DILexicalBlock(scope: !7094, file: !6631, line: 543, column: 2)
!7094 = distinct !DILexicalBlock(scope: !7081, file: !6631, line: 543, column: 2)
!7095 = !DILocation(line: 546, column: 12, scope: !7096)
!7096 = distinct !DILexicalBlock(scope: !7081, file: !6631, line: 546, column: 6)
!7097 = !DILocation(line: 546, column: 17, scope: !7096)
!7098 = !DILocation(line: 546, column: 43, scope: !7096)
!7099 = !DILocation(line: 546, column: 6, scope: !7081)
!7100 = !DILocation(line: 547, column: 3, scope: !7101)
!7101 = distinct !DILexicalBlock(scope: !7102, file: !6631, line: 547, column: 3)
!7102 = distinct !DILexicalBlock(scope: !7103, file: !6631, line: 547, column: 3)
!7103 = distinct !DILexicalBlock(scope: !7104, file: !6631, line: 547, column: 3)
!7104 = distinct !DILexicalBlock(scope: !7105, file: !6631, line: 547, column: 3)
!7105 = distinct !DILexicalBlock(scope: !7096, file: !6631, line: 546, column: 49)
!7106 = !DILocation(line: 548, column: 2, scope: !7105)
!7107 = !DILocation(line: 549, column: 12, scope: !7108)
!7108 = distinct !DILexicalBlock(scope: !7081, file: !6631, line: 549, column: 6)
!7109 = !DILocation(line: 549, column: 17, scope: !7108)
!7110 = !DILocation(line: 549, column: 43, scope: !7108)
!7111 = !DILocation(line: 549, column: 6, scope: !7081)
!7112 = !DILocation(line: 550, column: 3, scope: !7113)
!7113 = distinct !DILexicalBlock(scope: !7114, file: !6631, line: 550, column: 3)
!7114 = distinct !DILexicalBlock(scope: !7115, file: !6631, line: 550, column: 3)
!7115 = distinct !DILexicalBlock(scope: !7116, file: !6631, line: 550, column: 3)
!7116 = distinct !DILexicalBlock(scope: !7117, file: !6631, line: 550, column: 3)
!7117 = distinct !DILexicalBlock(scope: !7108, file: !6631, line: 549, column: 49)
!7118 = !DILocation(line: 551, column: 2, scope: !7117)
!7119 = !DILocation(line: 567, column: 12, scope: !7120)
!7120 = distinct !DILexicalBlock(scope: !7081, file: !6631, line: 567, column: 6)
!7121 = !DILocation(line: 567, column: 17, scope: !7120)
!7122 = !DILocation(line: 567, column: 38, scope: !7120)
!7123 = !DILocation(line: 567, column: 6, scope: !7081)
!7124 = !DILocation(line: 568, column: 3, scope: !7125)
!7125 = distinct !DILexicalBlock(scope: !7126, file: !6631, line: 568, column: 3)
!7126 = distinct !DILexicalBlock(scope: !7127, file: !6631, line: 568, column: 3)
!7127 = distinct !DILexicalBlock(scope: !7128, file: !6631, line: 568, column: 3)
!7128 = distinct !DILexicalBlock(scope: !7129, file: !6631, line: 568, column: 3)
!7129 = distinct !DILexicalBlock(scope: !7120, file: !6631, line: 567, column: 44)
!7130 = !DILocation(line: 569, column: 2, scope: !7129)
!7131 = !DILocation(line: 570, column: 12, scope: !7132)
!7132 = distinct !DILexicalBlock(scope: !7081, file: !6631, line: 570, column: 6)
!7133 = !DILocation(line: 570, column: 17, scope: !7132)
!7134 = !DILocation(line: 570, column: 39, scope: !7132)
!7135 = !DILocation(line: 570, column: 6, scope: !7081)
!7136 = !DILocation(line: 571, column: 3, scope: !7137)
!7137 = distinct !DILexicalBlock(scope: !7138, file: !6631, line: 571, column: 3)
!7138 = distinct !DILexicalBlock(scope: !7139, file: !6631, line: 571, column: 3)
!7139 = distinct !DILexicalBlock(scope: !7140, file: !6631, line: 571, column: 3)
!7140 = distinct !DILexicalBlock(scope: !7141, file: !6631, line: 571, column: 3)
!7141 = distinct !DILexicalBlock(scope: !7132, file: !6631, line: 570, column: 45)
!7142 = !DILocation(line: 572, column: 2, scope: !7141)
!7143 = !DILocation(line: 573, column: 12, scope: !7144)
!7144 = distinct !DILexicalBlock(scope: !7081, file: !6631, line: 573, column: 6)
!7145 = !DILocation(line: 573, column: 17, scope: !7144)
!7146 = !DILocation(line: 573, column: 42, scope: !7144)
!7147 = !DILocation(line: 573, column: 6, scope: !7081)
!7148 = !DILocation(line: 574, column: 3, scope: !7149)
!7149 = distinct !DILexicalBlock(scope: !7150, file: !6631, line: 574, column: 3)
!7150 = distinct !DILexicalBlock(scope: !7151, file: !6631, line: 574, column: 3)
!7151 = distinct !DILexicalBlock(scope: !7152, file: !6631, line: 574, column: 3)
!7152 = distinct !DILexicalBlock(scope: !7153, file: !6631, line: 574, column: 3)
!7153 = distinct !DILexicalBlock(scope: !7144, file: !6631, line: 573, column: 48)
!7154 = !DILocation(line: 575, column: 2, scope: !7153)
!7155 = !DILocation(line: 576, column: 12, scope: !7156)
!7156 = distinct !DILexicalBlock(scope: !7081, file: !6631, line: 576, column: 6)
!7157 = !DILocation(line: 576, column: 17, scope: !7156)
!7158 = !DILocation(line: 576, column: 44, scope: !7156)
!7159 = !DILocation(line: 576, column: 6, scope: !7081)
!7160 = !DILocation(line: 577, column: 3, scope: !7161)
!7161 = distinct !DILexicalBlock(scope: !7162, file: !6631, line: 577, column: 3)
!7162 = distinct !DILexicalBlock(scope: !7163, file: !6631, line: 577, column: 3)
!7163 = distinct !DILexicalBlock(scope: !7164, file: !6631, line: 577, column: 3)
!7164 = distinct !DILexicalBlock(scope: !7165, file: !6631, line: 577, column: 3)
!7165 = distinct !DILexicalBlock(scope: !7156, file: !6631, line: 576, column: 50)
!7166 = !DILocation(line: 578, column: 2, scope: !7165)
!7167 = !DILocation(line: 581, column: 12, scope: !7081)
!7168 = !DILocation(line: 583, column: 2, scope: !7081)
!7169 = distinct !DISubprogram(name: "debug_monitor", scope: !6631, file: !6631, line: 632, type: !7170, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2785, retainedNodes: !7172)
!7170 = !DISubroutineType(types: !7171)
!7171 = !{null, !2813, !6704}
!7172 = !{!7173, !7174}
!7173 = !DILocalVariable(name: "esf", arg: 1, scope: !7169, file: !6631, line: 632, type: !2813)
!7174 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7169, file: !6631, line: 632, type: !6704)
!7175 = !DILocation(line: 0, scope: !7169)
!7176 = !DILocation(line: 634, column: 15, scope: !7169)
!7177 = !DILocation(line: 636, column: 2, scope: !7178)
!7178 = distinct !DILexicalBlock(scope: !7179, file: !6631, line: 636, column: 2)
!7179 = distinct !DILexicalBlock(scope: !7180, file: !6631, line: 636, column: 2)
!7180 = distinct !DILexicalBlock(scope: !7181, file: !6631, line: 636, column: 2)
!7181 = distinct !DILexicalBlock(scope: !7169, file: !6631, line: 636, column: 2)
!7182 = !DILocation(line: 652, column: 1, scope: !7169)
!7183 = distinct !DISubprogram(name: "reserved_exception", scope: !6631, file: !6631, line: 776, type: !7184, scopeLine: 777, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2785, retainedNodes: !7186)
!7184 = !DISubroutineType(types: !7185)
!7185 = !{null, !7084, !107}
!7186 = !{!7187, !7188}
!7187 = !DILocalVariable(name: "esf", arg: 1, scope: !7183, file: !6631, line: 776, type: !7084)
!7188 = !DILocalVariable(name: "fault", arg: 2, scope: !7183, file: !6631, line: 776, type: !107)
!7189 = !DILocation(line: 0, scope: !7183)
!7190 = !DILocation(line: 780, column: 2, scope: !7191)
!7191 = distinct !DILexicalBlock(scope: !7192, file: !6631, line: 780, column: 2)
!7192 = distinct !DILexicalBlock(scope: !7193, file: !6631, line: 780, column: 2)
!7193 = distinct !DILexicalBlock(scope: !7194, file: !6631, line: 780, column: 2)
!7194 = distinct !DILexicalBlock(scope: !7183, file: !6631, line: 780, column: 2)
!7195 = !DILocation(line: 783, column: 1, scope: !7183)
!7196 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !6631, file: !6631, line: 658, type: !7197, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2785, retainedNodes: !7199)
!7197 = !DISubroutineType(types: !7198)
!7198 = !{!145, !2813}
!7199 = !{!7200, !7201, !7202}
!7200 = !DILocalVariable(name: "esf", arg: 1, scope: !7196, file: !6631, line: 658, type: !2813)
!7201 = !DILocalVariable(name: "ret_addr", scope: !7196, file: !6631, line: 660, type: !2856)
!7202 = !DILocalVariable(name: "fault_insn", scope: !7196, file: !6631, line: 686, type: !197)
!7203 = !DILocation(line: 0, scope: !7196)
!7204 = !DILocation(line: 660, column: 46, scope: !7196)
!7205 = !DILocation(line: 660, column: 23, scope: !7196)
!7206 = !DILocation(line: 682, column: 11, scope: !7196)
!7207 = !DILocation(line: 271, column: 3, scope: !7208, inlinedAt: !7209)
!7208 = distinct !DISubprogram(name: "__DSB", scope: !6321, file: !6321, line: 269, type: !3148, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2785, retainedNodes: !2236)
!7209 = distinct !DILocation(line: 683, column: 2, scope: !7196)
!7210 = !{i64 3738960}
!7211 = !DILocation(line: 260, column: 3, scope: !7212, inlinedAt: !7213)
!7212 = distinct !DISubprogram(name: "__ISB", scope: !6321, file: !6321, line: 258, type: !3148, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2785, retainedNodes: !2236)
!7213 = distinct !DILocation(line: 684, column: 2, scope: !7196)
!7214 = !{i64 3738677}
!7215 = !DILocation(line: 686, column: 35, scope: !7196)
!7216 = !DILocation(line: 686, column: 24, scope: !7196)
!7217 = !DILocation(line: 688, column: 11, scope: !7196)
!7218 = !DILocation(line: 271, column: 3, scope: !7208, inlinedAt: !7219)
!7219 = distinct !DILocation(line: 689, column: 2, scope: !7196)
!7220 = !DILocation(line: 260, column: 3, scope: !7212, inlinedAt: !7221)
!7221 = distinct !DILocation(line: 690, column: 2, scope: !7196)
!7222 = !DILocation(line: 693, column: 45, scope: !7223)
!7223 = distinct !DILexicalBlock(scope: !7196, file: !6631, line: 693, column: 6)
!7224 = !DILocation(line: 699, column: 1, scope: !7196)
!7225 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !6631, file: !6631, line: 1107, type: !3148, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2785, retainedNodes: !2236)
!7226 = !DILocation(line: 1111, column: 11, scope: !7225)
!7227 = !DILocation(line: 1136, column: 1, scope: !7225)
!7228 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !7229, file: !7229, line: 26, type: !3148, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2857, retainedNodes: !7230)
!7229 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7230 = !{!7231}
!7231 = !DILocalVariable(name: "irq", scope: !7228, file: !7229, line: 28, type: !107)
!7232 = !DILocation(line: 0, scope: !7228)
!7233 = !DILocation(line: 30, column: 2, scope: !7234)
!7234 = distinct !DILexicalBlock(scope: !7228, file: !7229, line: 30, column: 2)
!7235 = !DILocation(line: 31, column: 3, scope: !7236)
!7236 = distinct !DILexicalBlock(scope: !7237, file: !7229, line: 30, column: 39)
!7237 = distinct !DILexicalBlock(scope: !7234, file: !7229, line: 30, column: 2)
!7238 = !DILocation(line: 30, column: 35, scope: !7237)
!7239 = !DILocation(line: 30, column: 13, scope: !7237)
!7240 = distinct !{!7240, !7233, !7241}
!7241 = !DILocation(line: 32, column: 2, scope: !7234)
!7242 = !DILocation(line: 33, column: 1, scope: !7228)
!7243 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !463, file: !463, line: 1814, type: !6361, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2857, retainedNodes: !7244)
!7244 = !{!7245, !7246}
!7245 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7243, file: !463, line: 1814, type: !930)
!7246 = !DILocalVariable(name: "priority", arg: 2, scope: !7243, file: !463, line: 1814, type: !152)
!7247 = !DILocation(line: 0, scope: !7243)
!7248 = !DILocation(line: 1816, column: 7, scope: !7243)
!7249 = !DILocation(line: 0, scope: !7250)
!7250 = distinct !DILexicalBlock(scope: !7243, file: !463, line: 1816, column: 7)
!7251 = !DILocation(line: 1824, column: 1, scope: !7243)
!7252 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !7253, file: !7253, line: 27, type: !7254, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2902, retainedNodes: !7360)
!7253 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7254 = !DISubroutineType(types: !7255)
!7255 = !{null, !7256}
!7256 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !309, line: 347, baseType: !7257)
!7257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7258, size: 32)
!7258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !7259)
!7259 = !{!7260, !7318, !7330, !7331, !7332, !7333, !7334, !7340, !7355}
!7260 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7258, file: !309, line: 247, baseType: !7261, size: 384)
!7261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !7262)
!7262 = !{!7263, !7287, !7294, !7295, !7296, !7305, !7306, !7307}
!7263 = !DIDerivedType(tag: DW_TAG_member, scope: !7261, file: !309, line: 60, baseType: !7264, size: 64)
!7264 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7261, file: !309, line: 60, size: 64, elements: !7265)
!7265 = !{!7266, !7281}
!7266 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7264, file: !309, line: 61, baseType: !7267, size: 64)
!7267 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !7268)
!7268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !7269)
!7269 = !{!7270, !7276}
!7270 = !DIDerivedType(tag: DW_TAG_member, scope: !7268, file: !319, line: 38, baseType: !7271, size: 32)
!7271 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7268, file: !319, line: 38, size: 32, elements: !7272)
!7272 = !{!7273, !7275}
!7273 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7271, file: !319, line: 39, baseType: !7274, size: 32)
!7274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7268, size: 32)
!7275 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7271, file: !319, line: 40, baseType: !7274, size: 32)
!7276 = !DIDerivedType(tag: DW_TAG_member, scope: !7268, file: !319, line: 42, baseType: !7277, size: 32, offset: 32)
!7277 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7268, file: !319, line: 42, size: 32, elements: !7278)
!7278 = !{!7279, !7280}
!7279 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7277, file: !319, line: 43, baseType: !7274, size: 32)
!7280 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7277, file: !319, line: 44, baseType: !7274, size: 32)
!7281 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7264, file: !309, line: 62, baseType: !7282, size: 64)
!7282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !7283)
!7283 = !{!7284}
!7284 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7282, file: !335, line: 50, baseType: !7285, size: 64)
!7285 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7286, size: 64, elements: !340)
!7286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7282, size: 32)
!7287 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7261, file: !309, line: 68, baseType: !7288, size: 32, offset: 64)
!7288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7289, size: 32)
!7289 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !7290)
!7290 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !7291)
!7291 = !{!7292}
!7292 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7290, file: !345, line: 232, baseType: !7293, size: 64)
!7293 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !7268)
!7294 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7261, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!7295 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7261, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!7296 = !DIDerivedType(tag: DW_TAG_member, scope: !7261, file: !309, line: 90, baseType: !7297, size: 16, offset: 112)
!7297 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7261, file: !309, line: 90, size: 16, elements: !7298)
!7298 = !{!7299, !7304}
!7299 = !DIDerivedType(tag: DW_TAG_member, scope: !7297, file: !309, line: 91, baseType: !7300, size: 16)
!7300 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7297, file: !309, line: 91, size: 16, elements: !7301)
!7301 = !{!7302, !7303}
!7302 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7300, file: !309, line: 96, baseType: !359, size: 8)
!7303 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7300, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!7304 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7297, file: !309, line: 100, baseType: !197, size: 16)
!7305 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7261, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!7306 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7261, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!7307 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7261, file: !309, line: 131, baseType: !7308, size: 192, offset: 192)
!7308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !7309)
!7309 = !{!7310, !7311, !7317}
!7310 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7308, file: !345, line: 245, baseType: !7267, size: 64)
!7311 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7308, file: !345, line: 246, baseType: !7312, size: 32, offset: 64)
!7312 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !7313)
!7313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7314, size: 32)
!7314 = !DISubroutineType(types: !7315)
!7315 = !{null, !7316}
!7316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7308, size: 32)
!7317 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7308, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!7318 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7258, file: !309, line: 250, baseType: !7319, size: 288, offset: 384)
!7319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !7320)
!7320 = !{!7321, !7322, !7323, !7324, !7325, !7326, !7327, !7328, !7329}
!7321 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7319, file: !379, line: 26, baseType: !152, size: 32)
!7322 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7319, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!7323 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7319, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!7324 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7319, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!7325 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7319, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!7326 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7319, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!7327 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7319, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!7328 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7319, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!7329 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7319, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!7330 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7258, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!7331 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7258, file: !309, line: 256, baseType: !7289, size: 64, offset: 704)
!7332 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7258, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!7333 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7258, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!7334 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7258, file: !309, line: 300, baseType: !7335, size: 96, offset: 1056)
!7335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !7336)
!7336 = !{!7337, !7338, !7339}
!7337 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7335, file: !309, line: 153, baseType: !22, size: 32)
!7338 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7335, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!7339 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7335, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!7340 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7258, file: !309, line: 325, baseType: !7341, size: 32, offset: 1152)
!7341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7342, size: 32)
!7342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !7343)
!7343 = !{!7344, !7350, !7351}
!7344 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7342, file: !406, line: 5074, baseType: !7345, size: 96)
!7345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !7346)
!7346 = !{!7347, !7348, !7349}
!7347 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7345, file: !410, line: 57, baseType: !413, size: 32)
!7348 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7345, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!7349 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7345, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!7350 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7342, file: !406, line: 5075, baseType: !7289, size: 64, offset: 96)
!7351 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7342, file: !406, line: 5076, baseType: !7352, size: 32, offset: 160)
!7352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !7353)
!7353 = !{!7354}
!7354 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !7352, file: !420, line: 52, baseType: !22, size: 32)
!7355 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7258, file: !309, line: 343, baseType: !7356, size: 64, offset: 1184)
!7356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !7357)
!7357 = !{!7358, !7359}
!7358 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7356, file: !379, line: 63, baseType: !152, size: 32)
!7359 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7356, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!7360 = !{!7361}
!7361 = !DILocalVariable(name: "thread", arg: 1, scope: !7252, file: !7253, line: 27, type: !7256)
!7362 = !DILocation(line: 0, scope: !7252)
!7363 = !DILocation(line: 29, column: 6, scope: !7364)
!7364 = distinct !DILexicalBlock(scope: !7252, file: !7253, line: 29, column: 6)
!7365 = !DILocation(line: 29, column: 15, scope: !7364)
!7366 = !DILocation(line: 29, column: 6, scope: !7252)
!7367 = !DILocation(line: 1031, column: 3, scope: !7368, inlinedAt: !7371)
!7368 = distinct !DISubprogram(name: "__get_IPSR", scope: !6321, file: !6321, line: 1027, type: !6408, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2902, retainedNodes: !7369)
!7369 = !{!7370}
!7370 = !DILocalVariable(name: "result", scope: !7368, file: !6321, line: 1029, type: !152)
!7371 = distinct !DILocation(line: 48, column: 10, scope: !7372, inlinedAt: !7376)
!7372 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7373, file: !7373, line: 46, type: !7374, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2902, retainedNodes: !2236)
!7373 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7374 = !DISubroutineType(types: !7375)
!7375 = !{!145}
!7376 = distinct !DILocation(line: 30, column: 7, scope: !7377)
!7377 = distinct !DILexicalBlock(scope: !7378, file: !7253, line: 30, column: 7)
!7378 = distinct !DILexicalBlock(scope: !7364, file: !7253, line: 29, column: 26)
!7379 = !{i64 3727808}
!7380 = !DILocation(line: 0, scope: !7368, inlinedAt: !7371)
!7381 = !DILocation(line: 48, column: 9, scope: !7372, inlinedAt: !7376)
!7382 = !DILocation(line: 30, column: 7, scope: !7378)
!7383 = !DILocation(line: 42, column: 14, scope: !7384)
!7384 = distinct !DILexicalBlock(scope: !7377, file: !7253, line: 30, column: 25)
!7385 = !DILocation(line: 48, column: 15, scope: !7384)
!7386 = !DILocation(line: 49, column: 3, scope: !7384)
!7387 = !DILocation(line: 52, column: 2, scope: !7252)
!7388 = !DILocation(line: 53, column: 1, scope: !7252)
!7389 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !304, file: !304, line: 127, type: !3148, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !2236)
!7390 = !DILocation(line: 134, column: 2, scope: !7389)
!7391 = !DILocation(line: 156, column: 1, scope: !7389)
!7392 = !DILocation(line: 0, scope: !303)
!7393 = !DILocation(line: 289, column: 36, scope: !7394)
!7394 = distinct !DILexicalBlock(scope: !303, file: !304, line: 285, column: 2)
!7395 = !DILocation(line: 289, column: 42, scope: !7394)
!7396 = !DILocation(line: 300, column: 36, scope: !303)
!7397 = !DILocation(line: 301, column: 35, scope: !303)
!7398 = !DILocation(line: 302, column: 37, scope: !303)
!7399 = !DILocation(line: 311, column: 2, scope: !303)
!7400 = !DILocation(line: 316, column: 1, scope: !303)
!7401 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !491, file: !491, line: 180, type: !3148, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !2236)
!7402 = !DILocation(line: 188, column: 12, scope: !7401)
!7403 = !DILocation(line: 271, column: 3, scope: !7404, inlinedAt: !7405)
!7404 = distinct !DISubprogram(name: "__DSB", scope: !6321, file: !6321, line: 269, type: !3148, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !2236)
!7405 = distinct !DILocation(line: 192, column: 2, scope: !7401)
!7406 = !{i64 3918698}
!7407 = !DILocation(line: 260, column: 3, scope: !7408, inlinedAt: !7409)
!7408 = distinct !DISubprogram(name: "__ISB", scope: !6321, file: !6321, line: 258, type: !3148, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !2236)
!7409 = distinct !DILocation(line: 193, column: 2, scope: !7401)
!7410 = !{i64 3918415}
!7411 = !DILocation(line: 194, column: 1, scope: !7401)
!7412 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !491, file: !491, line: 199, type: !3148, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !2236)
!7413 = !DILocation(line: 282, column: 3, scope: !7414, inlinedAt: !7415)
!7414 = distinct !DISubprogram(name: "__DMB", scope: !6321, file: !6321, line: 280, type: !3148, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !2236)
!7415 = distinct !DILocation(line: 202, column: 2, scope: !7412)
!7416 = !{i64 3918974}
!7417 = !DILocation(line: 205, column: 12, scope: !7412)
!7418 = !DILocation(line: 206, column: 1, scope: !7412)
!7419 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !491, file: !491, line: 275, type: !7420, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7433)
!7420 = !DISubroutineType(types: !7421)
!7421 = !{null, !7422, !2018, !6598, !6598}
!7422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7423, size: 32)
!7423 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7424)
!7424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !435, line: 52, size: 96, elements: !7425)
!7425 = !{!7426, !7427, !7428}
!7426 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7424, file: !435, line: 53, baseType: !22, size: 32)
!7427 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7424, file: !435, line: 54, baseType: !185, size: 32, offset: 32)
!7428 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !7424, file: !435, line: 55, baseType: !7429, size: 32, offset: 64)
!7429 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !441, line: 151, baseType: !7430)
!7430 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !441, line: 149, size: 32, elements: !7431)
!7431 = !{!7432}
!7432 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !7430, file: !441, line: 150, baseType: !152, size: 32)
!7433 = !{!7434, !7435, !7436, !7437}
!7434 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7419, file: !491, line: 276, type: !7422)
!7435 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7419, file: !491, line: 276, type: !2018)
!7436 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !7419, file: !491, line: 277, type: !6598)
!7437 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7419, file: !491, line: 277, type: !6598)
!7438 = !DILocation(line: 0, scope: !7419)
!7439 = !DILocation(line: 279, column: 6, scope: !7440)
!7440 = distinct !DILexicalBlock(scope: !7419, file: !491, line: 279, column: 6)
!7441 = !DILocation(line: 280, column: 57, scope: !7440)
!7442 = !DILocation(line: 279, column: 6, scope: !7419)
!7443 = !DILocation(line: 282, column: 3, scope: !7444)
!7444 = distinct !DILexicalBlock(scope: !7445, file: !491, line: 282, column: 3)
!7445 = distinct !DILexicalBlock(scope: !7446, file: !491, line: 282, column: 3)
!7446 = distinct !DILexicalBlock(scope: !7447, file: !491, line: 282, column: 3)
!7447 = distinct !DILexicalBlock(scope: !7440, file: !491, line: 280, column: 69)
!7448 = !DILocation(line: 285, column: 1, scope: !7419)
!7449 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !7450, file: !7450, line: 220, type: !7451, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7453)
!7450 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7451 = !DISubroutineType(types: !7452)
!7452 = !{!107, !7422, !2018, !6598, !6598}
!7453 = !{!7454, !7455, !7456, !7457, !7458}
!7454 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7449, file: !7450, line: 221, type: !7422)
!7455 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7449, file: !7450, line: 221, type: !2018)
!7456 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !7449, file: !7450, line: 222, type: !6598)
!7457 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7449, file: !7450, line: 223, type: !6598)
!7458 = !DILocalVariable(name: "mpu_reg_index", scope: !7449, file: !7450, line: 225, type: !107)
!7459 = !DILocation(line: 0, scope: !7449)
!7460 = !DILocation(line: 225, column: 22, scope: !7449)
!7461 = !DILocation(line: 233, column: 18, scope: !7449)
!7462 = !DILocation(line: 236, column: 23, scope: !7449)
!7463 = !DILocation(line: 236, column: 21, scope: !7449)
!7464 = !DILocation(line: 238, column: 2, scope: !7449)
!7465 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !491, file: !491, line: 105, type: !7466, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7468)
!7466 = !DISubroutineType(types: !7467)
!7467 = !{!107, !7422, !195, !195, !145}
!7468 = !{!7469, !7470, !7471, !7472, !7473, !7474}
!7469 = !DILocalVariable(name: "regions", arg: 1, scope: !7465, file: !491, line: 106, type: !7422)
!7470 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7465, file: !491, line: 106, type: !195)
!7471 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !7465, file: !491, line: 106, type: !195)
!7472 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !7465, file: !491, line: 107, type: !145)
!7473 = !DILocalVariable(name: "i", scope: !7465, file: !491, line: 109, type: !107)
!7474 = !DILocalVariable(name: "reg_index", scope: !7465, file: !491, line: 110, type: !107)
!7475 = !DILocation(line: 0, scope: !7465)
!7476 = !DILocation(line: 110, column: 18, scope: !7465)
!7477 = !DILocation(line: 112, column: 16, scope: !7478)
!7478 = distinct !DILexicalBlock(scope: !7479, file: !491, line: 112, column: 2)
!7479 = distinct !DILexicalBlock(scope: !7465, file: !491, line: 112, column: 2)
!7480 = !DILocation(line: 112, column: 2, scope: !7479)
!7481 = !DILocation(line: 113, column: 7, scope: !7482)
!7482 = distinct !DILexicalBlock(scope: !7483, file: !491, line: 113, column: 7)
!7483 = distinct !DILexicalBlock(scope: !7478, file: !491, line: 112, column: 36)
!7484 = !DILocation(line: 113, column: 18, scope: !7482)
!7485 = !DILocation(line: 113, column: 23, scope: !7482)
!7486 = !DILocation(line: 113, column: 7, scope: !7483)
!7487 = !DILocation(line: 118, column: 23, scope: !7488)
!7488 = distinct !DILexicalBlock(scope: !7483, file: !491, line: 118, column: 7)
!7489 = !DILocation(line: 119, column: 7, scope: !7488)
!7490 = !DILocation(line: 118, column: 7, scope: !7483)
!7491 = !DILocation(line: 120, column: 4, scope: !7492)
!7492 = distinct !DILexicalBlock(scope: !7493, file: !491, line: 120, column: 4)
!7493 = distinct !DILexicalBlock(scope: !7494, file: !491, line: 120, column: 4)
!7494 = distinct !DILexicalBlock(scope: !7495, file: !491, line: 120, column: 4)
!7495 = distinct !DILexicalBlock(scope: !7496, file: !491, line: 120, column: 4)
!7496 = distinct !DILexicalBlock(scope: !7488, file: !491, line: 119, column: 45)
!7497 = !DILocation(line: 121, column: 4, scope: !7496)
!7498 = !DILocation(line: 124, column: 36, scope: !7483)
!7499 = !DILocation(line: 124, column: 15, scope: !7483)
!7500 = !DILocation(line: 126, column: 17, scope: !7501)
!7501 = distinct !DILexicalBlock(scope: !7483, file: !491, line: 126, column: 7)
!7502 = !DILocation(line: 126, column: 7, scope: !7483)
!7503 = !DILocation(line: 131, column: 12, scope: !7483)
!7504 = !DILocation(line: 132, column: 2, scope: !7483)
!7505 = !DILocation(line: 112, column: 32, scope: !7478)
!7506 = distinct !{!7506, !7480, !7507}
!7507 = !DILocation(line: 132, column: 2, scope: !7479)
!7508 = !DILocation(line: 135, column: 1, scope: !7465)
!7509 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !7450, file: !7450, line: 63, type: !7510, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7512)
!7510 = !DISubroutineType(types: !7511)
!7511 = !{!107, !7422}
!7512 = !{!7513, !7514}
!7513 = !DILocalVariable(name: "part", arg: 1, scope: !7509, file: !7450, line: 63, type: !7422)
!7514 = !DILocalVariable(name: "partition_is_valid", scope: !7509, file: !7450, line: 70, type: !107)
!7515 = !DILocation(line: 0, scope: !7509)
!7516 = !DILocation(line: 71, column: 11, scope: !7509)
!7517 = !DILocation(line: 71, column: 37, scope: !7509)
!7518 = !{i32 0, i32 33}
!7519 = !DILocation(line: 72, column: 3, scope: !7509)
!7520 = !DILocation(line: 71, column: 30, scope: !7509)
!7521 = !DILocation(line: 75, column: 11, scope: !7509)
!7522 = !DILocation(line: 75, column: 17, scope: !7509)
!7523 = !DILocation(line: 75, column: 38, scope: !7509)
!7524 = !DILocation(line: 77, column: 2, scope: !7509)
!7525 = distinct !DISubprogram(name: "mpu_configure_region", scope: !491, file: !491, line: 79, type: !7526, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7528)
!7526 = !DISubroutineType(types: !7527)
!7527 = !{!107, !2018, !7422}
!7528 = !{!7529, !7530, !7531}
!7529 = !DILocalVariable(name: "index", arg: 1, scope: !7525, file: !491, line: 79, type: !2018)
!7530 = !DILocalVariable(name: "new_region", arg: 2, scope: !7525, file: !491, line: 80, type: !7422)
!7531 = !DILocalVariable(name: "region_conf", scope: !7525, file: !491, line: 82, type: !480)
!7532 = !DILocation(line: 0, scope: !7525)
!7533 = !DILocation(line: 82, column: 2, scope: !7525)
!7534 = !DILocation(line: 82, column: 24, scope: !7525)
!7535 = !DILocation(line: 87, column: 33, scope: !7525)
!7536 = !DILocation(line: 87, column: 14, scope: !7525)
!7537 = !DILocation(line: 87, column: 19, scope: !7525)
!7538 = !DILocation(line: 91, column: 55, scope: !7525)
!7539 = !DILocation(line: 92, column: 16, scope: !7525)
!7540 = !DILocation(line: 92, column: 53, scope: !7525)
!7541 = !DILocation(line: 91, column: 2, scope: !7525)
!7542 = !DILocation(line: 95, column: 9, scope: !7525)
!7543 = !DILocation(line: 97, column: 1, scope: !7525)
!7544 = !DILocation(line: 95, column: 2, scope: !7525)
!7545 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !7450, file: !7450, line: 113, type: !7546, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7551)
!7546 = !DISubroutineType(types: !7547)
!7547 = !{null, !7548, !7549, !152, !152}
!7548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !486, size: 32)
!7549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7550, size: 32)
!7550 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7429)
!7551 = !{!7552, !7553, !7554, !7555}
!7552 = !DILocalVariable(name: "p_attr", arg: 1, scope: !7545, file: !7450, line: 114, type: !7548)
!7553 = !DILocalVariable(name: "attr", arg: 2, scope: !7545, file: !7450, line: 115, type: !7549)
!7554 = !DILocalVariable(name: "base", arg: 3, scope: !7545, file: !7450, line: 115, type: !152)
!7555 = !DILocalVariable(name: "size", arg: 4, scope: !7545, file: !7450, line: 115, type: !152)
!7556 = !DILocation(line: 0, scope: !7545)
!7557 = !DILocation(line: 127, column: 23, scope: !7545)
!7558 = !DILocation(line: 127, column: 35, scope: !7545)
!7559 = !DILocation(line: 127, column: 33, scope: !7545)
!7560 = !DILocation(line: 127, column: 10, scope: !7545)
!7561 = !DILocation(line: 127, column: 15, scope: !7545)
!7562 = !DILocation(line: 129, column: 1, scope: !7545)
!7563 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !491, file: !491, line: 57, type: !7564, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7566)
!7564 = !DISubroutineType(types: !7565)
!7565 = !{!107, !2018, !478}
!7566 = !{!7567, !7568}
!7567 = !DILocalVariable(name: "index", arg: 1, scope: !7563, file: !491, line: 57, type: !2018)
!7568 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7563, file: !491, line: 58, type: !478)
!7569 = !DILocation(line: 0, scope: !7563)
!7570 = !DILocation(line: 61, column: 6, scope: !7571)
!7571 = distinct !DILexicalBlock(scope: !7563, file: !491, line: 61, column: 6)
!7572 = !DILocation(line: 61, column: 12, scope: !7571)
!7573 = !DILocation(line: 61, column: 6, scope: !7563)
!7574 = !DILocation(line: 64, column: 3, scope: !7575)
!7575 = distinct !DILexicalBlock(scope: !7576, file: !491, line: 64, column: 3)
!7576 = distinct !DILexicalBlock(scope: !7577, file: !491, line: 64, column: 3)
!7577 = distinct !DILexicalBlock(scope: !7578, file: !491, line: 64, column: 3)
!7578 = distinct !DILexicalBlock(scope: !7579, file: !491, line: 64, column: 3)
!7579 = distinct !DILexicalBlock(scope: !7571, file: !491, line: 61, column: 40)
!7580 = !DILocation(line: 65, column: 3, scope: !7579)
!7581 = !DILocation(line: 71, column: 2, scope: !7563)
!7582 = !DILocation(line: 73, column: 2, scope: !7563)
!7583 = !DILocation(line: 74, column: 1, scope: !7563)
!7584 = distinct !DISubprogram(name: "region_init", scope: !7450, file: !7450, line: 29, type: !7585, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7587)
!7585 = !DISubroutineType(types: !7586)
!7586 = !{null, !6598, !478}
!7587 = !{!7588, !7589}
!7588 = !DILocalVariable(name: "index", arg: 1, scope: !7584, file: !7450, line: 29, type: !6598)
!7589 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7584, file: !7450, line: 30, type: !478)
!7590 = !DILocation(line: 0, scope: !7584)
!7591 = !DILocation(line: 33, column: 2, scope: !7584)
!7592 = !DILocation(line: 47, column: 28, scope: !7584)
!7593 = !DILocation(line: 47, column: 33, scope: !7584)
!7594 = !DILocation(line: 48, column: 26, scope: !7584)
!7595 = !DILocation(line: 47, column: 12, scope: !7584)
!7596 = !DILocation(line: 49, column: 32, scope: !7584)
!7597 = !DILocation(line: 49, column: 37, scope: !7584)
!7598 = !DILocation(line: 49, column: 12, scope: !7584)
!7599 = !DILocation(line: 53, column: 1, scope: !7584)
!7600 = distinct !DISubprogram(name: "set_region_number", scope: !7601, file: !7601, line: 32, type: !6418, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7602)
!7601 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7602 = !{!7603}
!7603 = !DILocalVariable(name: "index", arg: 1, scope: !7600, file: !7601, line: 32, type: !152)
!7604 = !DILocation(line: 0, scope: !7600)
!7605 = !DILocation(line: 34, column: 11, scope: !7600)
!7606 = !DILocation(line: 35, column: 1, scope: !7600)
!7607 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !7450, file: !7450, line: 88, type: !7608, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7610)
!7608 = !DISubroutineType(types: !7609)
!7609 = !{!152, !152}
!7610 = !{!7611}
!7611 = !DILocalVariable(name: "size", arg: 1, scope: !7607, file: !7450, line: 88, type: !152)
!7612 = !DILocation(line: 0, scope: !7607)
!7613 = !DILocation(line: 91, column: 11, scope: !7614)
!7614 = distinct !DILexicalBlock(scope: !7607, file: !7450, line: 91, column: 6)
!7615 = !DILocation(line: 91, column: 6, scope: !7607)
!7616 = !DILocation(line: 100, column: 11, scope: !7617)
!7617 = distinct !DILexicalBlock(scope: !7607, file: !7450, line: 100, column: 6)
!7618 = !DILocation(line: 100, column: 6, scope: !7607)
!7619 = !DILocation(line: 104, column: 35, scope: !7607)
!7620 = !DILocation(line: 104, column: 16, scope: !7607)
!7621 = !DILocation(line: 104, column: 50, scope: !7607)
!7622 = !DILocation(line: 104, column: 72, scope: !7607)
!7623 = !DILocation(line: 104, column: 2, scope: !7607)
!7624 = !DILocation(line: 106, column: 1, scope: !7607)
!7625 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !491, file: !491, line: 307, type: !7626, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7628)
!7626 = !DISubroutineType(types: !7627)
!7627 = !{null, !7422, !195}
!7628 = !{!7629, !7630}
!7629 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7625, file: !491, line: 308, type: !7422)
!7630 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7625, file: !491, line: 308, type: !195)
!7631 = !DILocation(line: 0, scope: !7625)
!7632 = !DILocation(line: 310, column: 6, scope: !7633)
!7633 = distinct !DILexicalBlock(scope: !7625, file: !491, line: 310, column: 6)
!7634 = !DILocation(line: 311, column: 3, scope: !7633)
!7635 = !DILocation(line: 310, column: 6, scope: !7625)
!7636 = !DILocation(line: 313, column: 3, scope: !7637)
!7637 = distinct !DILexicalBlock(scope: !7638, file: !491, line: 313, column: 3)
!7638 = distinct !DILexicalBlock(scope: !7639, file: !491, line: 313, column: 3)
!7639 = distinct !DILexicalBlock(scope: !7640, file: !491, line: 313, column: 3)
!7640 = distinct !DILexicalBlock(scope: !7633, file: !491, line: 311, column: 15)
!7641 = !DILocation(line: 316, column: 1, scope: !7625)
!7642 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !7450, file: !7450, line: 249, type: !7643, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7645)
!7643 = !DISubroutineType(types: !7644)
!7644 = !{!107, !7422, !195}
!7645 = !{!7646, !7647, !7648, !7649}
!7646 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7642, file: !7450, line: 250, type: !7422)
!7647 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7642, file: !7450, line: 250, type: !195)
!7648 = !DILocalVariable(name: "mpu_reg_index", scope: !7642, file: !7450, line: 252, type: !107)
!7649 = !DILocalVariable(name: "i", scope: !7650, file: !7450, line: 264, type: !107)
!7650 = distinct !DILexicalBlock(scope: !7651, file: !7450, line: 264, column: 3)
!7651 = distinct !DILexicalBlock(scope: !7652, file: !7450, line: 261, column: 32)
!7652 = distinct !DILexicalBlock(scope: !7642, file: !7450, line: 261, column: 6)
!7653 = !DILocation(line: 0, scope: !7642)
!7654 = !DILocation(line: 252, column: 22, scope: !7642)
!7655 = !DILocation(line: 258, column: 18, scope: !7642)
!7656 = !DILocation(line: 261, column: 20, scope: !7652)
!7657 = !DILocation(line: 261, column: 6, scope: !7642)
!7658 = !DILocation(line: 0, scope: !7650)
!7659 = !DILocation(line: 265, column: 4, scope: !7660)
!7660 = distinct !DILexicalBlock(scope: !7661, file: !7450, line: 264, column: 59)
!7661 = distinct !DILexicalBlock(scope: !7650, file: !7450, line: 264, column: 3)
!7662 = !DILocation(line: 264, column: 55, scope: !7661)
!7663 = !DILocation(line: 264, column: 33, scope: !7661)
!7664 = !DILocation(line: 264, column: 3, scope: !7650)
!7665 = distinct !{!7665, !7664, !7666}
!7666 = !DILocation(line: 266, column: 3, scope: !7650)
!7667 = !DILocation(line: 269, column: 2, scope: !7642)
!7668 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !7669, file: !7669, line: 218, type: !6418, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7670)
!7669 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7670 = !{!7671}
!7671 = !DILocalVariable(name: "rnr", arg: 1, scope: !7668, file: !7669, line: 218, type: !152)
!7672 = !DILocation(line: 0, scope: !7668)
!7673 = !DILocation(line: 220, column: 12, scope: !7668)
!7674 = !DILocation(line: 221, column: 13, scope: !7668)
!7675 = !DILocation(line: 222, column: 1, scope: !7668)
!7676 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !491, file: !491, line: 326, type: !7677, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7679)
!7677 = !DISubroutineType(types: !7678)
!7678 = !{!107}
!7679 = !{!7680}
!7680 = !DILocalVariable(name: "r_index", scope: !7676, file: !491, line: 328, type: !152)
!7681 = !DILocation(line: 330, column: 17, scope: !7682)
!7682 = distinct !DILexicalBlock(scope: !7676, file: !491, line: 330, column: 6)
!7683 = !DILocation(line: 330, column: 29, scope: !7682)
!7684 = !DILocation(line: 330, column: 6, scope: !7676)
!7685 = !DILocation(line: 337, column: 3, scope: !7686)
!7686 = distinct !DILexicalBlock(scope: !7687, file: !491, line: 337, column: 3)
!7687 = distinct !DILexicalBlock(scope: !7688, file: !491, line: 337, column: 3)
!7688 = distinct !DILexicalBlock(scope: !7689, file: !491, line: 337, column: 3)
!7689 = distinct !DILexicalBlock(scope: !7682, file: !491, line: 330, column: 50)
!7690 = !DILocation(line: 347, column: 2, scope: !7676)
!7691 = !DILocation(line: 0, scope: !7676)
!7692 = !DILocation(line: 364, column: 29, scope: !7693)
!7693 = distinct !DILexicalBlock(scope: !7694, file: !491, line: 364, column: 2)
!7694 = distinct !DILexicalBlock(scope: !7676, file: !491, line: 364, column: 2)
!7695 = !DILocation(line: 364, column: 2, scope: !7694)
!7696 = !DILocation(line: 365, column: 25, scope: !7697)
!7697 = distinct !DILexicalBlock(scope: !7693, file: !491, line: 364, column: 66)
!7698 = !DILocation(line: 365, column: 3, scope: !7697)
!7699 = !DILocation(line: 364, column: 62, scope: !7693)
!7700 = distinct !{!7700, !7695, !7701}
!7701 = !DILocation(line: 366, column: 2, scope: !7694)
!7702 = !DILocation(line: 369, column: 23, scope: !7676)
!7703 = !DILocation(line: 369, column: 21, scope: !7676)
!7704 = !DILocation(line: 372, column: 2, scope: !7676)
!7705 = !DILocation(line: 433, column: 2, scope: !7706)
!7706 = distinct !DILexicalBlock(scope: !7707, file: !491, line: 433, column: 2)
!7707 = distinct !DILexicalBlock(scope: !7676, file: !491, line: 433, column: 2)
!7708 = !DILocation(line: 433, column: 2, scope: !7707)
!7709 = !DILocation(line: 433, column: 2, scope: !7710)
!7710 = distinct !DILexicalBlock(scope: !7706, file: !491, line: 433, column: 2)
!7711 = !DILocation(line: 444, column: 1, scope: !7676)
!7712 = distinct !DISubprogram(name: "strcpy", scope: !7713, file: !7713, line: 20, type: !7714, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2930, retainedNodes: !7718)
!7713 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7714 = !DISubroutineType(types: !7715)
!7715 = !{!193, !7716, !7717}
!7716 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !193)
!7717 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !118)
!7718 = !{!7719, !7720, !7721}
!7719 = !DILocalVariable(name: "d", arg: 1, scope: !7712, file: !7713, line: 20, type: !7716)
!7720 = !DILocalVariable(name: "s", arg: 2, scope: !7712, file: !7713, line: 20, type: !7717)
!7721 = !DILocalVariable(name: "dest", scope: !7712, file: !7713, line: 22, type: !193)
!7722 = !DILocation(line: 0, scope: !7712)
!7723 = !DILocation(line: 24, column: 9, scope: !7712)
!7724 = !DILocation(line: 24, column: 12, scope: !7712)
!7725 = !DILocation(line: 24, column: 2, scope: !7712)
!7726 = !DILocation(line: 25, column: 6, scope: !7727)
!7727 = distinct !DILexicalBlock(scope: !7712, file: !7713, line: 24, column: 21)
!7728 = !DILocation(line: 26, column: 4, scope: !7727)
!7729 = !DILocation(line: 27, column: 4, scope: !7727)
!7730 = distinct !{!7730, !7725, !7731}
!7731 = !DILocation(line: 28, column: 2, scope: !7712)
!7732 = !DILocation(line: 30, column: 5, scope: !7712)
!7733 = !DILocation(line: 32, column: 2, scope: !7712)
!7734 = distinct !DISubprogram(name: "strncpy", scope: !7713, file: !7713, line: 42, type: !7735, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2930, retainedNodes: !7737)
!7735 = !DISubroutineType(types: !7736)
!7736 = !{!193, !7716, !7717, !185}
!7737 = !{!7738, !7739, !7740, !7741}
!7738 = !DILocalVariable(name: "d", arg: 1, scope: !7734, file: !7713, line: 42, type: !7716)
!7739 = !DILocalVariable(name: "s", arg: 2, scope: !7734, file: !7713, line: 42, type: !7717)
!7740 = !DILocalVariable(name: "n", arg: 3, scope: !7734, file: !7713, line: 42, type: !185)
!7741 = !DILocalVariable(name: "dest", scope: !7734, file: !7713, line: 44, type: !193)
!7742 = !DILocation(line: 0, scope: !7734)
!7743 = !DILocation(line: 46, column: 12, scope: !7734)
!7744 = !DILocation(line: 46, column: 17, scope: !7734)
!7745 = !DILocation(line: 46, column: 20, scope: !7734)
!7746 = !DILocation(line: 46, column: 23, scope: !7734)
!7747 = !DILocation(line: 46, column: 2, scope: !7734)
!7748 = !DILocation(line: 47, column: 6, scope: !7749)
!7749 = distinct !DILexicalBlock(scope: !7734, file: !7713, line: 46, column: 32)
!7750 = !DILocation(line: 48, column: 4, scope: !7749)
!7751 = !DILocation(line: 49, column: 4, scope: !7749)
!7752 = !DILocation(line: 50, column: 4, scope: !7749)
!7753 = distinct !{!7753, !7747, !7754}
!7754 = !DILocation(line: 51, column: 2, scope: !7734)
!7755 = !DILocation(line: 54, column: 6, scope: !7756)
!7756 = distinct !DILexicalBlock(scope: !7734, file: !7713, line: 53, column: 16)
!7757 = !DILocation(line: 55, column: 4, scope: !7756)
!7758 = !DILocation(line: 56, column: 4, scope: !7756)
!7759 = !DILocation(line: 53, column: 11, scope: !7734)
!7760 = !DILocation(line: 53, column: 2, scope: !7734)
!7761 = distinct !{!7761, !7760, !7762}
!7762 = !DILocation(line: 57, column: 2, scope: !7734)
!7763 = !DILocation(line: 59, column: 2, scope: !7734)
!7764 = distinct !DISubprogram(name: "strchr", scope: !7713, file: !7713, line: 69, type: !7765, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2930, retainedNodes: !7767)
!7765 = !DISubroutineType(types: !7766)
!7766 = !{!193, !118, !107}
!7767 = !{!7768, !7769, !7770}
!7768 = !DILocalVariable(name: "s", arg: 1, scope: !7764, file: !7713, line: 69, type: !118)
!7769 = !DILocalVariable(name: "c", arg: 2, scope: !7764, file: !7713, line: 69, type: !107)
!7770 = !DILocalVariable(name: "tmp", scope: !7764, file: !7713, line: 71, type: !120)
!7771 = !DILocation(line: 0, scope: !7764)
!7772 = !DILocation(line: 73, column: 2, scope: !7764)
!7773 = !DILocation(line: 73, column: 10, scope: !7764)
!7774 = !DILocation(line: 73, column: 13, scope: !7764)
!7775 = !DILocation(line: 73, column: 21, scope: !7764)
!7776 = !DILocation(line: 74, column: 4, scope: !7777)
!7777 = distinct !DILexicalBlock(scope: !7764, file: !7713, line: 73, column: 38)
!7778 = distinct !{!7778, !7772, !7779}
!7779 = !DILocation(line: 75, column: 2, scope: !7764)
!7780 = !DILocation(line: 77, column: 9, scope: !7764)
!7781 = !DILocation(line: 77, column: 2, scope: !7764)
!7782 = distinct !DISubprogram(name: "strrchr", scope: !7713, file: !7713, line: 87, type: !7765, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2930, retainedNodes: !7783)
!7783 = !{!7784, !7785, !7786}
!7784 = !DILocalVariable(name: "s", arg: 1, scope: !7782, file: !7713, line: 87, type: !118)
!7785 = !DILocalVariable(name: "c", arg: 2, scope: !7782, file: !7713, line: 87, type: !107)
!7786 = !DILocalVariable(name: "match", scope: !7782, file: !7713, line: 89, type: !193)
!7787 = !DILocation(line: 0, scope: !7782)
!7788 = !DILocation(line: 91, column: 2, scope: !7782)
!7789 = !DILocation(line: 92, column: 7, scope: !7790)
!7790 = distinct !DILexicalBlock(scope: !7791, file: !7713, line: 92, column: 7)
!7791 = distinct !DILexicalBlock(scope: !7782, file: !7713, line: 91, column: 5)
!7792 = !DILocation(line: 92, column: 10, scope: !7790)
!7793 = !DILocation(line: 92, column: 7, scope: !7791)
!7794 = !DILocation(line: 95, column: 13, scope: !7782)
!7795 = !DILocation(line: 95, column: 2, scope: !7791)
!7796 = distinct !{!7796, !7788, !7797}
!7797 = !DILocation(line: 95, column: 15, scope: !7782)
!7798 = !DILocation(line: 97, column: 2, scope: !7782)
!7799 = distinct !DISubprogram(name: "strlen", scope: !7713, file: !7713, line: 107, type: !7800, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2930, retainedNodes: !7802)
!7800 = !DISubroutineType(types: !7801)
!7801 = !{!185, !118}
!7802 = !{!7803, !7804}
!7803 = !DILocalVariable(name: "s", arg: 1, scope: !7799, file: !7713, line: 107, type: !118)
!7804 = !DILocalVariable(name: "n", scope: !7799, file: !7713, line: 109, type: !185)
!7805 = !DILocation(line: 0, scope: !7799)
!7806 = !DILocation(line: 111, column: 9, scope: !7799)
!7807 = !DILocation(line: 111, column: 12, scope: !7799)
!7808 = !DILocation(line: 111, column: 2, scope: !7799)
!7809 = !DILocation(line: 112, column: 4, scope: !7810)
!7810 = distinct !DILexicalBlock(scope: !7799, file: !7713, line: 111, column: 21)
!7811 = !DILocation(line: 113, column: 4, scope: !7810)
!7812 = distinct !{!7812, !7808, !7813}
!7813 = !DILocation(line: 114, column: 2, scope: !7799)
!7814 = !DILocation(line: 116, column: 2, scope: !7799)
!7815 = distinct !DISubprogram(name: "strnlen", scope: !7713, file: !7713, line: 126, type: !7816, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2930, retainedNodes: !7818)
!7816 = !DISubroutineType(types: !7817)
!7817 = !{!185, !118, !185}
!7818 = !{!7819, !7820, !7821}
!7819 = !DILocalVariable(name: "s", arg: 1, scope: !7815, file: !7713, line: 126, type: !118)
!7820 = !DILocalVariable(name: "maxlen", arg: 2, scope: !7815, file: !7713, line: 126, type: !185)
!7821 = !DILocalVariable(name: "n", scope: !7815, file: !7713, line: 128, type: !185)
!7822 = !DILocation(line: 0, scope: !7815)
!7823 = !DILocation(line: 130, column: 9, scope: !7815)
!7824 = !DILocation(line: 130, column: 12, scope: !7815)
!7825 = !DILocation(line: 130, column: 20, scope: !7815)
!7826 = !DILocation(line: 130, column: 2, scope: !7815)
!7827 = !DILocation(line: 131, column: 4, scope: !7828)
!7828 = distinct !DILexicalBlock(scope: !7815, file: !7713, line: 130, column: 35)
!7829 = !DILocation(line: 132, column: 4, scope: !7828)
!7830 = distinct !{!7830, !7826, !7831}
!7831 = !DILocation(line: 133, column: 2, scope: !7815)
!7832 = !DILocation(line: 135, column: 2, scope: !7815)
!7833 = distinct !DISubprogram(name: "strcmp", scope: !7713, file: !7713, line: 145, type: !7834, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2930, retainedNodes: !7836)
!7834 = !DISubroutineType(types: !7835)
!7835 = !{!107, !118, !118}
!7836 = !{!7837, !7838}
!7837 = !DILocalVariable(name: "s1", arg: 1, scope: !7833, file: !7713, line: 145, type: !118)
!7838 = !DILocalVariable(name: "s2", arg: 2, scope: !7833, file: !7713, line: 145, type: !118)
!7839 = !DILocation(line: 0, scope: !7833)
!7840 = !DILocation(line: 147, column: 10, scope: !7833)
!7841 = !DILocation(line: 147, column: 17, scope: !7833)
!7842 = !DILocation(line: 147, column: 14, scope: !7833)
!7843 = !DILocation(line: 147, column: 22, scope: !7833)
!7844 = !DILocation(line: 148, column: 5, scope: !7845)
!7845 = distinct !DILexicalBlock(scope: !7833, file: !7713, line: 147, column: 40)
!7846 = !DILocation(line: 149, column: 5, scope: !7845)
!7847 = distinct !{!7847, !7848, !7849}
!7848 = !DILocation(line: 147, column: 2, scope: !7833)
!7849 = !DILocation(line: 150, column: 2, scope: !7833)
!7850 = !DILocation(line: 152, column: 9, scope: !7833)
!7851 = !DILocation(line: 152, column: 15, scope: !7833)
!7852 = !DILocation(line: 152, column: 13, scope: !7833)
!7853 = !DILocation(line: 152, column: 2, scope: !7833)
!7854 = distinct !DISubprogram(name: "strncmp", scope: !7713, file: !7713, line: 162, type: !7855, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2930, retainedNodes: !7857)
!7855 = !DISubroutineType(types: !7856)
!7856 = !{!107, !118, !118, !185}
!7857 = !{!7858, !7859, !7860}
!7858 = !DILocalVariable(name: "s1", arg: 1, scope: !7854, file: !7713, line: 162, type: !118)
!7859 = !DILocalVariable(name: "s2", arg: 2, scope: !7854, file: !7713, line: 162, type: !118)
!7860 = !DILocalVariable(name: "n", arg: 3, scope: !7854, file: !7713, line: 162, type: !185)
!7861 = !DILocation(line: 0, scope: !7854)
!7862 = !DILocation(line: 164, column: 17, scope: !7854)
!7863 = !DILocation(line: 164, column: 21, scope: !7854)
!7864 = !DILocation(line: 164, column: 28, scope: !7854)
!7865 = !DILocation(line: 164, column: 25, scope: !7854)
!7866 = !DILocation(line: 164, column: 33, scope: !7854)
!7867 = !DILocation(line: 165, column: 5, scope: !7868)
!7868 = distinct !DILexicalBlock(scope: !7854, file: !7713, line: 164, column: 51)
!7869 = !DILocation(line: 166, column: 5, scope: !7868)
!7870 = !DILocation(line: 167, column: 4, scope: !7868)
!7871 = distinct !{!7871, !7872, !7873}
!7872 = !DILocation(line: 164, column: 2, scope: !7854)
!7873 = !DILocation(line: 168, column: 2, scope: !7854)
!7874 = !DILocation(line: 170, column: 25, scope: !7854)
!7875 = !DILocation(line: 170, column: 31, scope: !7854)
!7876 = !DILocation(line: 170, column: 29, scope: !7854)
!7877 = !DILocation(line: 170, column: 9, scope: !7854)
!7878 = !DILocation(line: 170, column: 2, scope: !7854)
!7879 = distinct !DISubprogram(name: "strtok_r", scope: !7713, file: !7713, line: 180, type: !7880, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2930, retainedNodes: !7882)
!7880 = !DISubroutineType(types: !7881)
!7881 = !{!193, !193, !118, !192}
!7882 = !{!7883, !7884, !7885, !7886, !7887}
!7883 = !DILocalVariable(name: "str", arg: 1, scope: !7879, file: !7713, line: 180, type: !193)
!7884 = !DILocalVariable(name: "sep", arg: 2, scope: !7879, file: !7713, line: 180, type: !118)
!7885 = !DILocalVariable(name: "state", arg: 3, scope: !7879, file: !7713, line: 180, type: !192)
!7886 = !DILocalVariable(name: "start", scope: !7879, file: !7713, line: 182, type: !193)
!7887 = !DILocalVariable(name: "end", scope: !7879, file: !7713, line: 182, type: !193)
!7888 = !DILocation(line: 0, scope: !7879)
!7889 = !DILocation(line: 184, column: 10, scope: !7879)
!7890 = !DILocation(line: 184, column: 22, scope: !7879)
!7891 = !DILocation(line: 187, column: 9, scope: !7879)
!7892 = !DILocation(line: 187, column: 16, scope: !7879)
!7893 = !DILocation(line: 187, column: 19, scope: !7879)
!7894 = !DILocation(line: 187, column: 2, scope: !7879)
!7895 = !DILocation(line: 188, column: 8, scope: !7896)
!7896 = distinct !DILexicalBlock(scope: !7879, file: !7713, line: 187, column: 40)
!7897 = distinct !{!7897, !7894, !7898}
!7898 = !DILocation(line: 189, column: 2, scope: !7879)
!7899 = !DILocation(line: 198, column: 9, scope: !7879)
!7900 = !DILocation(line: 198, column: 18, scope: !7879)
!7901 = !DILocation(line: 198, column: 17, scope: !7879)
!7902 = !DILocation(line: 198, column: 2, scope: !7879)
!7903 = !DILocation(line: 199, column: 6, scope: !7904)
!7904 = distinct !DILexicalBlock(scope: !7879, file: !7713, line: 198, column: 37)
!7905 = !DILocation(line: 198, column: 14, scope: !7879)
!7906 = distinct !{!7906, !7902, !7907}
!7907 = !DILocation(line: 200, column: 2, scope: !7879)
!7908 = !DILocation(line: 203, column: 8, scope: !7909)
!7909 = distinct !DILexicalBlock(scope: !7910, file: !7713, line: 202, column: 20)
!7910 = distinct !DILexicalBlock(scope: !7879, file: !7713, line: 202, column: 6)
!7911 = !DILocation(line: 204, column: 16, scope: !7909)
!7912 = !DILocation(line: 205, column: 2, scope: !7909)
!7913 = !DILocation(line: 210, column: 1, scope: !7879)
!7914 = distinct !DISubprogram(name: "strcat", scope: !7713, file: !7713, line: 212, type: !7714, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2930, retainedNodes: !7915)
!7915 = !{!7916, !7917}
!7916 = !DILocalVariable(name: "dest", arg: 1, scope: !7914, file: !7713, line: 212, type: !7716)
!7917 = !DILocalVariable(name: "src", arg: 2, scope: !7914, file: !7713, line: 212, type: !7717)
!7918 = !DILocation(line: 0, scope: !7914)
!7919 = !DILocation(line: 214, column: 16, scope: !7914)
!7920 = !DILocation(line: 214, column: 14, scope: !7914)
!7921 = !DILocation(line: 214, column: 2, scope: !7914)
!7922 = !DILocation(line: 215, column: 2, scope: !7914)
!7923 = distinct !DISubprogram(name: "strncat", scope: !7713, file: !7713, line: 218, type: !7735, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2930, retainedNodes: !7924)
!7924 = !{!7925, !7926, !7927, !7928, !7929}
!7925 = !DILocalVariable(name: "dest", arg: 1, scope: !7923, file: !7713, line: 218, type: !7716)
!7926 = !DILocalVariable(name: "src", arg: 2, scope: !7923, file: !7713, line: 218, type: !7717)
!7927 = !DILocalVariable(name: "n", arg: 3, scope: !7923, file: !7713, line: 219, type: !185)
!7928 = !DILocalVariable(name: "orig_dest", scope: !7923, file: !7713, line: 221, type: !193)
!7929 = !DILocalVariable(name: "len", scope: !7923, file: !7713, line: 222, type: !185)
!7930 = !DILocation(line: 0, scope: !7923)
!7931 = !DILocation(line: 222, column: 15, scope: !7923)
!7932 = !DILocation(line: 224, column: 7, scope: !7923)
!7933 = !DILocation(line: 225, column: 14, scope: !7923)
!7934 = !DILocation(line: 225, column: 19, scope: !7923)
!7935 = !DILocation(line: 225, column: 11, scope: !7923)
!7936 = !DILocation(line: 225, column: 23, scope: !7923)
!7937 = !DILocation(line: 225, column: 28, scope: !7923)
!7938 = !DILocation(line: 225, column: 2, scope: !7923)
!7939 = !DILocation(line: 226, column: 17, scope: !7940)
!7940 = distinct !DILexicalBlock(scope: !7923, file: !7713, line: 225, column: 38)
!7941 = !DILocation(line: 226, column: 8, scope: !7940)
!7942 = !DILocation(line: 226, column: 11, scope: !7940)
!7943 = distinct !{!7943, !7938, !7944}
!7944 = !DILocation(line: 227, column: 2, scope: !7923)
!7945 = !DILocation(line: 228, column: 8, scope: !7923)
!7946 = !DILocation(line: 230, column: 2, scope: !7923)
!7947 = distinct !DISubprogram(name: "memcmp", scope: !7713, file: !7713, line: 239, type: !7948, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2930, retainedNodes: !7950)
!7948 = !DISubroutineType(types: !7949)
!7949 = !{!107, !13, !13, !185}
!7950 = !{!7951, !7952, !7953, !7954, !7955}
!7951 = !DILocalVariable(name: "m1", arg: 1, scope: !7947, file: !7713, line: 239, type: !13)
!7952 = !DILocalVariable(name: "m2", arg: 2, scope: !7947, file: !7713, line: 239, type: !13)
!7953 = !DILocalVariable(name: "n", arg: 3, scope: !7947, file: !7713, line: 239, type: !185)
!7954 = !DILocalVariable(name: "c1", scope: !7947, file: !7713, line: 241, type: !118)
!7955 = !DILocalVariable(name: "c2", scope: !7947, file: !7713, line: 242, type: !118)
!7956 = !DILocation(line: 0, scope: !7947)
!7957 = !DILocation(line: 244, column: 7, scope: !7958)
!7958 = distinct !DILexicalBlock(scope: !7947, file: !7713, line: 244, column: 6)
!7959 = !DILocation(line: 244, column: 6, scope: !7947)
!7960 = !DILocation(line: 248, column: 10, scope: !7947)
!7961 = !DILocation(line: 248, column: 14, scope: !7947)
!7962 = !DILocation(line: 248, column: 19, scope: !7947)
!7963 = !DILocation(line: 248, column: 2, scope: !7947)
!7964 = !DILocation(line: 248, column: 23, scope: !7947)
!7965 = !DILocation(line: 248, column: 30, scope: !7947)
!7966 = !DILocation(line: 248, column: 27, scope: !7947)
!7967 = !DILocation(line: 249, column: 5, scope: !7968)
!7968 = distinct !DILexicalBlock(scope: !7947, file: !7713, line: 248, column: 36)
!7969 = !DILocation(line: 250, column: 5, scope: !7968)
!7970 = distinct !{!7970, !7963, !7971}
!7971 = !DILocation(line: 251, column: 2, scope: !7947)
!7972 = !DILocation(line: 253, column: 9, scope: !7947)
!7973 = !DILocation(line: 253, column: 15, scope: !7947)
!7974 = !DILocation(line: 253, column: 13, scope: !7947)
!7975 = !DILocation(line: 253, column: 2, scope: !7947)
!7976 = !DILocation(line: 254, column: 1, scope: !7947)
!7977 = distinct !DISubprogram(name: "memmove", scope: !7713, file: !7713, line: 263, type: !7978, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2930, retainedNodes: !7980)
!7978 = !DISubroutineType(types: !7979)
!7979 = !{!106, !106, !13, !185}
!7980 = !{!7981, !7982, !7983, !7984, !7985}
!7981 = !DILocalVariable(name: "d", arg: 1, scope: !7977, file: !7713, line: 263, type: !106)
!7982 = !DILocalVariable(name: "s", arg: 2, scope: !7977, file: !7713, line: 263, type: !13)
!7983 = !DILocalVariable(name: "n", arg: 3, scope: !7977, file: !7713, line: 263, type: !185)
!7984 = !DILocalVariable(name: "dest", scope: !7977, file: !7713, line: 265, type: !193)
!7985 = !DILocalVariable(name: "src", scope: !7977, file: !7713, line: 266, type: !118)
!7986 = !DILocation(line: 0, scope: !7977)
!7987 = !DILocation(line: 268, column: 21, scope: !7988)
!7988 = distinct !DILexicalBlock(scope: !7977, file: !7713, line: 268, column: 6)
!7989 = !DILocation(line: 268, column: 28, scope: !7988)
!7990 = !DILocation(line: 268, column: 6, scope: !7977)
!7991 = !DILocation(line: 280, column: 12, scope: !7992)
!7992 = distinct !DILexicalBlock(scope: !7988, file: !7713, line: 278, column: 9)
!7993 = !DILocation(line: 280, column: 3, scope: !7992)
!7994 = !DILocation(line: 275, column: 5, scope: !7995)
!7995 = distinct !DILexicalBlock(scope: !7996, file: !7713, line: 274, column: 17)
!7996 = distinct !DILexicalBlock(scope: !7988, file: !7713, line: 268, column: 33)
!7997 = !DILocation(line: 276, column: 14, scope: !7995)
!7998 = !DILocation(line: 276, column: 4, scope: !7995)
!7999 = !DILocation(line: 276, column: 12, scope: !7995)
!8000 = !DILocation(line: 274, column: 12, scope: !7996)
!8001 = !DILocation(line: 274, column: 3, scope: !7996)
!8002 = distinct !{!8002, !8001, !8003}
!8003 = !DILocation(line: 277, column: 3, scope: !7996)
!8004 = !DILocation(line: 281, column: 12, scope: !8005)
!8005 = distinct !DILexicalBlock(scope: !7992, file: !7713, line: 280, column: 17)
!8006 = !DILocation(line: 281, column: 10, scope: !8005)
!8007 = !DILocation(line: 282, column: 8, scope: !8005)
!8008 = !DILocation(line: 283, column: 7, scope: !8005)
!8009 = !DILocation(line: 284, column: 5, scope: !8005)
!8010 = distinct !{!8010, !7993, !8011}
!8011 = !DILocation(line: 285, column: 3, scope: !7992)
!8012 = !DILocation(line: 288, column: 2, scope: !7977)
!8013 = distinct !DISubprogram(name: "memcpy", scope: !7713, file: !7713, line: 298, type: !8014, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2930, retainedNodes: !8018)
!8014 = !DISubroutineType(types: !8015)
!8015 = !{!106, !8016, !8017, !185}
!8016 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !106)
!8017 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!8018 = !{!8019, !8020, !8021, !8022, !8023}
!8019 = !DILocalVariable(name: "d", arg: 1, scope: !8013, file: !7713, line: 298, type: !8016)
!8020 = !DILocalVariable(name: "s", arg: 2, scope: !8013, file: !7713, line: 298, type: !8017)
!8021 = !DILocalVariable(name: "n", arg: 3, scope: !8013, file: !7713, line: 298, type: !185)
!8022 = !DILocalVariable(name: "d_byte", scope: !8013, file: !7713, line: 302, type: !1137)
!8023 = !DILocalVariable(name: "s_byte", scope: !8013, file: !7713, line: 303, type: !2933)
!8024 = !DILocation(line: 0, scope: !8013)
!8025 = !DILocation(line: 337, column: 11, scope: !8013)
!8026 = !DILocation(line: 337, column: 2, scope: !8013)
!8027 = !DILocation(line: 338, column: 25, scope: !8028)
!8028 = distinct !DILexicalBlock(scope: !8013, file: !7713, line: 337, column: 16)
!8029 = !DILocation(line: 338, column: 17, scope: !8028)
!8030 = !DILocation(line: 338, column: 11, scope: !8028)
!8031 = !DILocation(line: 338, column: 15, scope: !8028)
!8032 = !DILocation(line: 339, column: 4, scope: !8028)
!8033 = distinct !{!8033, !8026, !8034}
!8034 = !DILocation(line: 340, column: 2, scope: !8013)
!8035 = !DILocation(line: 342, column: 2, scope: !8013)
!8036 = distinct !DISubprogram(name: "memset", scope: !7713, file: !7713, line: 352, type: !8037, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2930, retainedNodes: !8039)
!8037 = !DISubroutineType(types: !8038)
!8038 = !{!106, !106, !107, !185}
!8039 = !{!8040, !8041, !8042, !8043, !8044}
!8040 = !DILocalVariable(name: "buf", arg: 1, scope: !8036, file: !7713, line: 352, type: !106)
!8041 = !DILocalVariable(name: "c", arg: 2, scope: !8036, file: !7713, line: 352, type: !107)
!8042 = !DILocalVariable(name: "n", arg: 3, scope: !8036, file: !7713, line: 352, type: !185)
!8043 = !DILocalVariable(name: "d_byte", scope: !8036, file: !7713, line: 356, type: !1137)
!8044 = !DILocalVariable(name: "c_byte", scope: !8036, file: !7713, line: 357, type: !196)
!8045 = !DILocation(line: 0, scope: !8036)
!8046 = !DILocation(line: 357, column: 25, scope: !8036)
!8047 = !DILocation(line: 389, column: 11, scope: !8036)
!8048 = !DILocation(line: 389, column: 2, scope: !8036)
!8049 = !DILocation(line: 390, column: 11, scope: !8050)
!8050 = distinct !DILexicalBlock(scope: !8036, file: !7713, line: 389, column: 16)
!8051 = !DILocation(line: 390, column: 15, scope: !8050)
!8052 = !DILocation(line: 391, column: 4, scope: !8050)
!8053 = distinct !{!8053, !8048, !8054}
!8054 = !DILocation(line: 392, column: 2, scope: !8036)
!8055 = !DILocation(line: 394, column: 2, scope: !8036)
!8056 = distinct !DISubprogram(name: "memchr", scope: !7713, file: !7713, line: 404, type: !8057, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2930, retainedNodes: !8059)
!8057 = !DISubroutineType(types: !8058)
!8058 = !{!106, !13, !107, !185}
!8059 = !{!8060, !8061, !8062, !8063}
!8060 = !DILocalVariable(name: "s", arg: 1, scope: !8056, file: !7713, line: 404, type: !13)
!8061 = !DILocalVariable(name: "c", arg: 2, scope: !8056, file: !7713, line: 404, type: !107)
!8062 = !DILocalVariable(name: "n", arg: 3, scope: !8056, file: !7713, line: 404, type: !185)
!8063 = !DILocalVariable(name: "p", scope: !8064, file: !7713, line: 407, type: !2933)
!8064 = distinct !DILexicalBlock(scope: !8065, file: !7713, line: 406, column: 14)
!8065 = distinct !DILexicalBlock(scope: !8056, file: !7713, line: 406, column: 6)
!8066 = !DILocation(line: 0, scope: !8056)
!8067 = !DILocation(line: 406, column: 8, scope: !8065)
!8068 = !DILocation(line: 406, column: 6, scope: !8056)
!8069 = !DILocation(line: 409, column: 3, scope: !8064)
!8070 = !DILocation(line: 0, scope: !8064)
!8071 = !DILocation(line: 410, column: 8, scope: !8072)
!8072 = distinct !DILexicalBlock(scope: !8073, file: !7713, line: 410, column: 8)
!8073 = distinct !DILexicalBlock(scope: !8064, file: !7713, line: 409, column: 6)
!8074 = !DILocation(line: 410, column: 13, scope: !8072)
!8075 = !DILocation(line: 410, column: 8, scope: !8073)
!8076 = distinct !{!8076, !8069, !8077}
!8077 = !DILocation(line: 414, column: 20, scope: !8064)
!8078 = !DILocation(line: 417, column: 2, scope: !8056)
!8079 = !DILocation(line: 418, column: 1, scope: !8056)
!8080 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !501, file: !501, line: 23, type: !4185, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8081)
!8081 = !{!8082}
!8082 = !DILocalVariable(name: "hook", arg: 1, scope: !8080, file: !501, line: 23, type: !213)
!8083 = !DILocation(line: 0, scope: !8080)
!8084 = !DILocation(line: 25, column: 15, scope: !8080)
!8085 = !DILocation(line: 26, column: 1, scope: !8080)
!8086 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !501, file: !501, line: 14, type: !214, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8087)
!8087 = !{!8088}
!8088 = !DILocalVariable(name: "c", arg: 1, scope: !8086, file: !501, line: 14, type: !107)
!8089 = !DILocation(line: 0, scope: !8086)
!8090 = !DILocation(line: 18, column: 2, scope: !8086)
!8091 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !501, file: !501, line: 28, type: !8092, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8094)
!8092 = !DISubroutineType(types: !8093)
!8093 = !{!107, !107, !497}
!8094 = !{!8095, !8096}
!8095 = !DILocalVariable(name: "c", arg: 1, scope: !8091, file: !501, line: 28, type: !107)
!8096 = !DILocalVariable(name: "stream", arg: 2, scope: !8091, file: !501, line: 28, type: !497)
!8097 = !DILocation(line: 0, scope: !8091)
!8098 = !DILocation(line: 30, column: 27, scope: !8091)
!8099 = !DILocation(line: 30, column: 50, scope: !8091)
!8100 = !DILocation(line: 30, column: 9, scope: !8091)
!8101 = !DILocation(line: 30, column: 2, scope: !8091)
!8102 = distinct !DISubprogram(name: "fputc", scope: !501, file: !501, line: 41, type: !8092, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8103)
!8103 = !{!8104, !8105}
!8104 = !DILocalVariable(name: "c", arg: 1, scope: !8102, file: !501, line: 41, type: !107)
!8105 = !DILocalVariable(name: "stream", arg: 2, scope: !8102, file: !501, line: 41, type: !497)
!8106 = !DILocation(line: 0, scope: !8102)
!8107 = !DILocation(line: 43, column: 9, scope: !8102)
!8108 = !DILocation(line: 43, column: 2, scope: !8102)
!8109 = distinct !DISubprogram(name: "zephyr_fputc", scope: !8110, file: !8110, line: 72, type: !8092, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8111)
!8110 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pytest")
!8111 = !{!8112, !8113}
!8112 = !DILocalVariable(name: "c", arg: 1, scope: !8109, file: !8110, line: 72, type: !107)
!8113 = !DILocalVariable(name: "stream", arg: 2, scope: !8109, file: !8110, line: 72, type: !497)
!8114 = !DILocation(line: 0, scope: !8109)
!8115 = !DILocation(line: 81, column: 2, scope: !8116)
!8116 = distinct !DILexicalBlock(scope: !8109, file: !8110, line: 81, column: 2)
!8117 = !{i64 2155132526}
!8118 = !DILocation(line: 82, column: 9, scope: !8109)
!8119 = !DILocation(line: 82, column: 2, scope: !8109)
!8120 = distinct !DISubprogram(name: "fputs", scope: !501, file: !501, line: 46, type: !8121, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8124)
!8121 = !DISubroutineType(types: !8122)
!8122 = !{!107, !7717, !8123}
!8123 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !497)
!8124 = !{!8125, !8126, !8127, !8128}
!8125 = !DILocalVariable(name: "s", arg: 1, scope: !8120, file: !501, line: 46, type: !7717)
!8126 = !DILocalVariable(name: "stream", arg: 2, scope: !8120, file: !501, line: 46, type: !8123)
!8127 = !DILocalVariable(name: "len", scope: !8120, file: !501, line: 48, type: !107)
!8128 = !DILocalVariable(name: "ret", scope: !8120, file: !501, line: 49, type: !107)
!8129 = !DILocation(line: 0, scope: !8120)
!8130 = !DILocation(line: 48, column: 12, scope: !8120)
!8131 = !DILocation(line: 51, column: 8, scope: !8120)
!8132 = !DILocation(line: 53, column: 13, scope: !8120)
!8133 = !DILocation(line: 53, column: 9, scope: !8120)
!8134 = !DILocation(line: 53, column: 2, scope: !8120)
!8135 = distinct !DISubprogram(name: "fwrite", scope: !501, file: !501, line: 99, type: !8136, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8138)
!8136 = !DISubroutineType(types: !8137)
!8137 = !{!185, !8017, !185, !185, !8123}
!8138 = !{!8139, !8140, !8141, !8142}
!8139 = !DILocalVariable(name: "ptr", arg: 1, scope: !8135, file: !501, line: 99, type: !8017)
!8140 = !DILocalVariable(name: "size", arg: 2, scope: !8135, file: !501, line: 99, type: !185)
!8141 = !DILocalVariable(name: "nitems", arg: 3, scope: !8135, file: !501, line: 99, type: !185)
!8142 = !DILocalVariable(name: "stream", arg: 4, scope: !8135, file: !501, line: 100, type: !8123)
!8143 = !DILocation(line: 0, scope: !8135)
!8144 = !DILocation(line: 102, column: 9, scope: !8135)
!8145 = !DILocation(line: 102, column: 2, scope: !8135)
!8146 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !8110, file: !8110, line: 96, type: !8136, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8147)
!8147 = !{!8148, !8149, !8150, !8151}
!8148 = !DILocalVariable(name: "ptr", arg: 1, scope: !8146, file: !8110, line: 96, type: !8017)
!8149 = !DILocalVariable(name: "size", arg: 2, scope: !8146, file: !8110, line: 96, type: !185)
!8150 = !DILocalVariable(name: "nitems", arg: 3, scope: !8146, file: !8110, line: 96, type: !185)
!8151 = !DILocalVariable(name: "stream", arg: 4, scope: !8146, file: !8110, line: 96, type: !8123)
!8152 = !DILocation(line: 0, scope: !8146)
!8153 = !DILocation(line: 107, column: 2, scope: !8154)
!8154 = distinct !DILexicalBlock(scope: !8146, file: !8110, line: 107, column: 2)
!8155 = !{i64 2155132630}
!8156 = !DILocation(line: 108, column: 9, scope: !8146)
!8157 = !DILocation(line: 108, column: 2, scope: !8146)
!8158 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !501, file: !501, line: 56, type: !8136, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8159)
!8159 = !{!8160, !8161, !8162, !8163, !8164, !8165, !8166, !8167}
!8160 = !DILocalVariable(name: "ptr", arg: 1, scope: !8158, file: !501, line: 56, type: !8017)
!8161 = !DILocalVariable(name: "size", arg: 2, scope: !8158, file: !501, line: 56, type: !185)
!8162 = !DILocalVariable(name: "nitems", arg: 3, scope: !8158, file: !501, line: 57, type: !185)
!8163 = !DILocalVariable(name: "stream", arg: 4, scope: !8158, file: !501, line: 57, type: !8123)
!8164 = !DILocalVariable(name: "i", scope: !8158, file: !501, line: 59, type: !185)
!8165 = !DILocalVariable(name: "j", scope: !8158, file: !501, line: 60, type: !185)
!8166 = !DILocalVariable(name: "p", scope: !8158, file: !501, line: 61, type: !2933)
!8167 = !DILabel(scope: !8158, name: "done", file: !501, line: 82)
!8168 = !DILocation(line: 0, scope: !8158)
!8169 = !DILocation(line: 63, column: 14, scope: !8170)
!8170 = distinct !DILexicalBlock(scope: !8158, file: !501, line: 63, column: 6)
!8171 = !DILocation(line: 63, column: 24, scope: !8170)
!8172 = !DILocation(line: 72, column: 3, scope: !8173)
!8173 = distinct !DILexicalBlock(scope: !8158, file: !501, line: 70, column: 5)
!8174 = !DILocation(line: 0, scope: !8173)
!8175 = !DILocation(line: 73, column: 8, scope: !8176)
!8176 = distinct !DILexicalBlock(scope: !8177, file: !501, line: 73, column: 8)
!8177 = distinct !DILexicalBlock(scope: !8173, file: !501, line: 72, column: 6)
!8178 = !DILocation(line: 73, column: 29, scope: !8176)
!8179 = !DILocation(line: 73, column: 27, scope: !8176)
!8180 = !DILocation(line: 73, column: 21, scope: !8176)
!8181 = !DILocation(line: 73, column: 33, scope: !8176)
!8182 = !DILocation(line: 73, column: 8, scope: !8177)
!8183 = !DILocation(line: 76, column: 5, scope: !8177)
!8184 = !DILocation(line: 77, column: 14, scope: !8173)
!8185 = !DILocation(line: 77, column: 3, scope: !8177)
!8186 = distinct !{!8186, !8172, !8187}
!8187 = !DILocation(line: 77, column: 17, scope: !8173)
!8188 = !DILocation(line: 79, column: 4, scope: !8173)
!8189 = !DILocation(line: 80, column: 13, scope: !8158)
!8190 = !DILocation(line: 80, column: 2, scope: !8173)
!8191 = distinct !{!8191, !8192, !8193}
!8192 = !DILocation(line: 70, column: 2, scope: !8158)
!8193 = !DILocation(line: 80, column: 16, scope: !8158)
!8194 = !DILocation(line: 82, column: 1, scope: !8158)
!8195 = !DILocation(line: 83, column: 17, scope: !8158)
!8196 = !DILocation(line: 83, column: 2, scope: !8158)
!8197 = !DILocation(line: 84, column: 1, scope: !8158)
!8198 = distinct !DISubprogram(name: "puts", scope: !501, file: !501, line: 106, type: !8199, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8201)
!8199 = !DISubroutineType(types: !8200)
!8200 = !{!107, !118}
!8201 = !{!8202}
!8202 = !DILocalVariable(name: "s", arg: 1, scope: !8198, file: !501, line: 106, type: !118)
!8203 = !DILocation(line: 0, scope: !8198)
!8204 = !DILocation(line: 108, column: 6, scope: !8205)
!8205 = distinct !DILexicalBlock(scope: !8198, file: !501, line: 108, column: 6)
!8206 = !DILocation(line: 108, column: 23, scope: !8205)
!8207 = !DILocation(line: 108, column: 6, scope: !8198)
!8208 = !DILocation(line: 112, column: 9, scope: !8198)
!8209 = !DILocation(line: 112, column: 29, scope: !8198)
!8210 = !DILocation(line: 112, column: 2, scope: !8198)
!8211 = !DILocation(line: 113, column: 1, scope: !8198)
!8212 = distinct !DISubprogram(name: "end_report", scope: !533, file: !533, line: 67, type: !3148, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2236)
!8213 = !DILocation(line: 69, column: 6, scope: !8214)
!8214 = distinct !DILexicalBlock(scope: !8212, file: !533, line: 69, column: 6)
!8215 = !DILocation(line: 0, scope: !8214)
!8216 = !DILocation(line: 74, column: 1, scope: !8212)
!8217 = distinct !DISubprogram(name: "z_impl_z_test_1cpu_start", scope: !533, file: !533, line: 159, type: !3148, scopeLine: 160, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2236)
!8218 = !DILocation(line: 183, column: 1, scope: !8217)
!8219 = distinct !DISubprogram(name: "z_impl_z_test_1cpu_stop", scope: !533, file: !533, line: 185, type: !3148, scopeLine: 186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2236)
!8220 = !DILocation(line: 196, column: 1, scope: !8219)
!8221 = distinct !DISubprogram(name: "ztest_skip_failed_assumption", scope: !533, file: !533, line: 295, type: !3148, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2236)
!8222 = !DILocation(line: 298, column: 34, scope: !8223)
!8223 = distinct !DILexicalBlock(scope: !8224, file: !533, line: 297, column: 47)
!8224 = distinct !DILexicalBlock(scope: !8221, file: !533, line: 297, column: 6)
!8225 = !DILocation(line: 300, column: 2, scope: !8221)
!8226 = !DILocation(line: 301, column: 1, scope: !8221)
!8227 = distinct !DISubprogram(name: "ztest_test_skip", scope: !533, file: !533, line: 476, type: !3148, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2236)
!8228 = !DILocation(line: 478, column: 10, scope: !8227)
!8229 = !DILocation(line: 478, column: 2, scope: !8227)
!8230 = !DILocation(line: 480, column: 15, scope: !8231)
!8231 = distinct !DILexicalBlock(scope: !8227, file: !533, line: 478, column: 17)
!8232 = !DILocation(line: 481, column: 3, scope: !8231)
!8233 = !DILocation(line: 484, column: 15, scope: !8231)
!8234 = !DILocation(line: 485, column: 3, scope: !8231)
!8235 = !DILocation(line: 486, column: 3, scope: !8231)
!8236 = !DILocation(line: 489, column: 9, scope: !8231)
!8237 = !DILocation(line: 488, column: 3, scope: !8231)
!8238 = !DILocation(line: 490, column: 15, scope: !8231)
!8239 = !DILocation(line: 491, column: 3, scope: !8231)
!8240 = !DILocation(line: 493, column: 1, scope: !8227)
!8241 = distinct !DISubprogram(name: "test_finalize", scope: !533, file: !533, line: 432, type: !3148, scopeLine: 433, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2236)
!8242 = !DILocation(line: 435, column: 3, scope: !8243)
!8243 = distinct !DILexicalBlock(scope: !8244, file: !533, line: 434, column: 41)
!8244 = distinct !DILexicalBlock(scope: !8241, file: !533, line: 434, column: 6)
!8245 = !DILocation(line: 436, column: 18, scope: !8243)
!8246 = !DILocation(line: 436, column: 3, scope: !8243)
!8247 = !DILocation(line: 438, column: 1, scope: !8241)
!8248 = distinct !DISubprogram(name: "get_friendly_phase_name", scope: !533, file: !533, line: 274, type: !8249, scopeLine: 275, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8251)
!8249 = !DISubroutineType(types: !8250)
!8250 = !{!118, !532}
!8251 = !{!8252}
!8252 = !DILocalVariable(name: "phase", arg: 1, scope: !8248, file: !533, line: 274, type: !532)
!8253 = !DILocation(line: 0, scope: !8248)
!8254 = !DILocation(line: 276, column: 2, scope: !8248)
!8255 = !DILocation(line: 0, scope: !8256)
!8256 = distinct !DILexicalBlock(scope: !8248, file: !533, line: 276, column: 17)
!8257 = !DILocation(line: 292, column: 1, scope: !8248)
!8258 = distinct !DISubprogram(name: "k_thread_abort", scope: !4479, file: !4479, line: 188, type: !8259, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8263)
!8259 = !DISubroutineType(types: !8260)
!8260 = !{null, !8261}
!8261 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !309, line: 347, baseType: !8262)
!8262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !586, size: 32)
!8263 = !{!8264}
!8264 = !DILocalVariable(name: "thread", arg: 1, scope: !8258, file: !4479, line: 188, type: !8261)
!8265 = !DILocation(line: 0, scope: !8258)
!8266 = !DILocation(line: 197, column: 2, scope: !8267)
!8267 = distinct !DILexicalBlock(scope: !8258, file: !4479, line: 197, column: 2)
!8268 = !{i64 2155094329}
!8269 = !DILocation(line: 198, column: 2, scope: !8258)
!8270 = !DILocation(line: 199, column: 1, scope: !8258)
!8271 = distinct !DISubprogram(name: "k_current_get", scope: !406, file: !406, line: 530, type: !8272, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2236)
!8272 = !DISubroutineType(types: !8273)
!8273 = !{!8261}
!8274 = !DILocation(line: 535, column: 9, scope: !8271)
!8275 = !DILocation(line: 535, column: 2, scope: !8271)
!8276 = distinct !DISubprogram(name: "z_current_get", scope: !4479, file: !4479, line: 173, type: !8272, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2236)
!8277 = !DILocation(line: 180, column: 2, scope: !8278)
!8278 = distinct !DILexicalBlock(scope: !8276, file: !4479, line: 180, column: 2)
!8279 = !{i64 2155094261}
!8280 = !DILocation(line: 181, column: 9, scope: !8276)
!8281 = !DILocation(line: 181, column: 2, scope: !8276)
!8282 = distinct !DISubprogram(name: "ztest_test_fail", scope: !533, file: !533, line: 440, type: !3148, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2236)
!8283 = !DILocation(line: 442, column: 10, scope: !8282)
!8284 = !DILocation(line: 442, column: 2, scope: !8282)
!8285 = !DILocation(line: 444, column: 15, scope: !8286)
!8286 = distinct !DILexicalBlock(scope: !8282, file: !533, line: 442, column: 17)
!8287 = !DILocation(line: 445, column: 3, scope: !8286)
!8288 = !DILocation(line: 448, column: 15, scope: !8286)
!8289 = !DILocation(line: 449, column: 3, scope: !8286)
!8290 = !DILocation(line: 450, column: 3, scope: !8286)
!8291 = !DILocation(line: 453, column: 9, scope: !8286)
!8292 = !DILocation(line: 452, column: 3, scope: !8286)
!8293 = !DILocation(line: 454, column: 15, scope: !8286)
!8294 = !DILocation(line: 455, column: 3, scope: !8286)
!8295 = !DILocation(line: 457, column: 1, scope: !8282)
!8296 = distinct !DISubprogram(name: "ztest_test_pass", scope: !533, file: !533, line: 459, type: !3148, scopeLine: 460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2236)
!8297 = !DILocation(line: 461, column: 10, scope: !8296)
!8298 = !DILocation(line: 461, column: 2, scope: !8296)
!8299 = !DILocation(line: 463, column: 15, scope: !8300)
!8300 = distinct !DILexicalBlock(scope: !8296, file: !533, line: 461, column: 17)
!8301 = !DILocation(line: 465, column: 3, scope: !8300)
!8302 = !DILocation(line: 468, column: 9, scope: !8300)
!8303 = !DILocation(line: 467, column: 3, scope: !8300)
!8304 = !DILocation(line: 469, column: 15, scope: !8300)
!8305 = !DILocation(line: 470, column: 7, scope: !8306)
!8306 = distinct !DILexicalBlock(scope: !8300, file: !533, line: 470, column: 7)
!8307 = !DILocation(line: 470, column: 13, scope: !8306)
!8308 = !DILocation(line: 470, column: 7, scope: !8300)
!8309 = !DILocation(line: 0, scope: !8300)
!8310 = !DILocation(line: 474, column: 1, scope: !8296)
!8311 = distinct !DISubprogram(name: "ztest_simple_1cpu_before", scope: !533, file: !533, line: 495, type: !131, scopeLine: 496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8312)
!8312 = !{!8313}
!8313 = !DILocalVariable(name: "data", arg: 1, scope: !8311, file: !533, line: 495, type: !106)
!8314 = !DILocation(line: 0, scope: !8311)
!8315 = !DILocation(line: 498, column: 2, scope: !8311)
!8316 = !DILocation(line: 499, column: 1, scope: !8311)
!8317 = distinct !DISubprogram(name: "z_test_1cpu_start", scope: !8318, file: !8318, line: 24, type: !3148, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2236)
!8318 = !DIFile(filename: "zephyr/include/generated/syscalls/ztest_test.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pytest")
!8319 = !DILocation(line: 32, column: 2, scope: !8320)
!8320 = distinct !DILexicalBlock(scope: !8317, file: !8318, line: 32, column: 2)
!8321 = !{i64 2155216716}
!8322 = !DILocation(line: 34, column: 1, scope: !8317)
!8323 = distinct !DISubprogram(name: "ztest_simple_1cpu_after", scope: !533, file: !533, line: 501, type: !131, scopeLine: 502, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8324)
!8324 = !{!8325}
!8325 = !DILocalVariable(name: "data", arg: 1, scope: !8323, file: !533, line: 501, type: !106)
!8326 = !DILocation(line: 0, scope: !8323)
!8327 = !DILocation(line: 504, column: 2, scope: !8323)
!8328 = !DILocation(line: 505, column: 1, scope: !8323)
!8329 = distinct !DISubprogram(name: "z_test_1cpu_stop", scope: !8318, file: !8318, line: 47, type: !3148, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2236)
!8330 = !DILocation(line: 55, column: 2, scope: !8331)
!8331 = distinct !DILexicalBlock(scope: !8329, file: !8318, line: 55, column: 2)
!8332 = !{i64 2155216784}
!8333 = !DILocation(line: 57, column: 1, scope: !8329)
!8334 = distinct !DISubprogram(name: "z_ztest_get_next_test", scope: !533, file: !533, line: 617, type: !8335, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8354)
!8335 = !DISubroutineType(types: !8336)
!8336 = !{!8337, !118, !8337}
!8337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8338, size: 32)
!8338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_unit_test", file: !114, line: 97, size: 160, elements: !8339)
!8339 = !{!8340, !8341, !8342, !8343, !8344}
!8340 = !DIDerivedType(tag: DW_TAG_member, name: "test_suite_name", scope: !8338, file: !114, line: 98, baseType: !118, size: 32)
!8341 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8338, file: !114, line: 99, baseType: !118, size: 32, offset: 32)
!8342 = !DIDerivedType(tag: DW_TAG_member, name: "test", scope: !8338, file: !114, line: 100, baseType: !130, size: 32, offset: 64)
!8343 = !DIDerivedType(tag: DW_TAG_member, name: "thread_options", scope: !8338, file: !114, line: 101, baseType: !152, size: 32, offset: 96)
!8344 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !8338, file: !114, line: 104, baseType: !8345, size: 32, offset: 128)
!8345 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8346)
!8346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8347, size: 32)
!8347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_unit_test_stats", file: !114, line: 123, size: 160, elements: !8348)
!8348 = !{!8349, !8350, !8351, !8352, !8353}
!8349 = !DIDerivedType(tag: DW_TAG_member, name: "run_count", scope: !8347, file: !114, line: 125, baseType: !152, size: 32)
!8350 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !8347, file: !114, line: 127, baseType: !152, size: 32, offset: 32)
!8351 = !DIDerivedType(tag: DW_TAG_member, name: "fail_count", scope: !8347, file: !114, line: 129, baseType: !152, size: 32, offset: 64)
!8352 = !DIDerivedType(tag: DW_TAG_member, name: "pass_count", scope: !8347, file: !114, line: 131, baseType: !152, size: 32, offset: 96)
!8353 = !DIDerivedType(tag: DW_TAG_member, name: "duration_worst_ms", scope: !8347, file: !114, line: 133, baseType: !152, size: 32, offset: 128)
!8354 = !{!8355, !8356, !8357}
!8355 = !DILocalVariable(name: "suite", arg: 1, scope: !8334, file: !533, line: 617, type: !118)
!8356 = !DILocalVariable(name: "prev", arg: 2, scope: !8334, file: !533, line: 617, type: !8337)
!8357 = !DILocalVariable(name: "test", scope: !8334, file: !533, line: 619, type: !8337)
!8358 = !DILocation(line: 0, scope: !8334)
!8359 = !DILocation(line: 619, column: 39, scope: !8334)
!8360 = !DILocation(line: 619, column: 33, scope: !8334)
!8361 = !DILocation(line: 621, column: 14, scope: !8362)
!8362 = distinct !DILexicalBlock(scope: !8363, file: !533, line: 621, column: 2)
!8363 = distinct !DILexicalBlock(scope: !8334, file: !533, line: 621, column: 2)
!8364 = !DILocation(line: 621, column: 2, scope: !8363)
!8365 = !DILocation(line: 622, column: 27, scope: !8366)
!8366 = distinct !DILexicalBlock(scope: !8367, file: !533, line: 622, column: 7)
!8367 = distinct !DILexicalBlock(scope: !8362, file: !533, line: 621, column: 51)
!8368 = !DILocation(line: 622, column: 7, scope: !8366)
!8369 = !DILocation(line: 622, column: 44, scope: !8366)
!8370 = !DILocation(line: 622, column: 7, scope: !8367)
!8371 = !DILocation(line: 621, column: 43, scope: !8362)
!8372 = distinct !{!8372, !8364, !8373}
!8373 = !DILocation(line: 625, column: 2, scope: !8363)
!8374 = !DILocation(line: 627, column: 1, scope: !8334)
!8375 = distinct !DISubprogram(name: "z_ztest_run_test_suite", scope: !533, file: !533, line: 764, type: !8199, scopeLine: 765, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8376)
!8376 = !{!8377}
!8377 = !DILocalVariable(name: "name", arg: 1, scope: !8375, file: !533, line: 764, type: !118)
!8378 = !DILocation(line: 0, scope: !8375)
!8379 = !DILocation(line: 766, column: 36, scope: !8375)
!8380 = !DILocation(line: 766, column: 9, scope: !8375)
!8381 = !DILocation(line: 766, column: 2, scope: !8375)
!8382 = distinct !DISubprogram(name: "ztest_find_test_suite", scope: !533, file: !533, line: 604, type: !8383, scopeLine: 605, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8402)
!8383 = !DISubroutineType(types: !8384)
!8384 = !{!8385, !118}
!8385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8386, size: 32)
!8386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_node", file: !114, line: 177, size: 224, elements: !8387)
!8387 = !{!8388, !8389, !8390, !8391, !8392, !8393, !8394}
!8388 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8386, file: !114, line: 179, baseType: !117, size: 32)
!8389 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !8386, file: !114, line: 182, baseType: !122, size: 32, offset: 32)
!8390 = !DIDerivedType(tag: DW_TAG_member, name: "before", scope: !8386, file: !114, line: 185, baseType: !128, size: 32, offset: 64)
!8391 = !DIDerivedType(tag: DW_TAG_member, name: "after", scope: !8386, file: !114, line: 188, baseType: !134, size: 32, offset: 96)
!8392 = !DIDerivedType(tag: DW_TAG_member, name: "teardown", scope: !8386, file: !114, line: 191, baseType: !137, size: 32, offset: 128)
!8393 = !DIDerivedType(tag: DW_TAG_member, name: "predicate", scope: !8386, file: !114, line: 194, baseType: !140, size: 32, offset: 160)
!8394 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !8386, file: !114, line: 197, baseType: !8395, size: 32, offset: 192)
!8395 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8396)
!8396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8397, size: 32)
!8397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_stats", file: !114, line: 114, size: 96, elements: !8398)
!8398 = !{!8399, !8400, !8401}
!8399 = !DIDerivedType(tag: DW_TAG_member, name: "run_count", scope: !8397, file: !114, line: 116, baseType: !152, size: 32)
!8400 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !8397, file: !114, line: 118, baseType: !152, size: 32, offset: 32)
!8401 = !DIDerivedType(tag: DW_TAG_member, name: "fail_count", scope: !8397, file: !114, line: 120, baseType: !152, size: 32, offset: 64)
!8402 = !{!8403, !8404}
!8403 = !DILocalVariable(name: "name", arg: 1, scope: !8382, file: !533, line: 604, type: !118)
!8404 = !DILocalVariable(name: "node", scope: !8382, file: !533, line: 606, type: !8385)
!8405 = !DILocation(line: 0, scope: !8382)
!8406 = !DILocation(line: 608, column: 2, scope: !8407)
!8407 = distinct !DILexicalBlock(scope: !8382, file: !533, line: 608, column: 2)
!8408 = !DILocation(line: 609, column: 26, scope: !8409)
!8409 = distinct !DILexicalBlock(scope: !8410, file: !533, line: 609, column: 7)
!8410 = distinct !DILexicalBlock(scope: !8411, file: !533, line: 608, column: 87)
!8411 = distinct !DILexicalBlock(scope: !8407, file: !533, line: 608, column: 2)
!8412 = !DILocation(line: 609, column: 7, scope: !8409)
!8413 = !DILocation(line: 609, column: 32, scope: !8409)
!8414 = !DILocation(line: 609, column: 7, scope: !8410)
!8415 = !DILocation(line: 608, column: 79, scope: !8411)
!8416 = !DILocation(line: 608, column: 49, scope: !8411)
!8417 = distinct !{!8417, !8406, !8418}
!8418 = !DILocation(line: 612, column: 2, scope: !8407)
!8419 = !DILocation(line: 615, column: 1, scope: !8382)
!8420 = distinct !DISubprogram(name: "z_ztest_run_test_suite_ptr", scope: !533, file: !533, line: 652, type: !8421, scopeLine: 653, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8423)
!8421 = !DISubroutineType(types: !8422)
!8422 = !{!107, !8385}
!8423 = !{!8424, !8425, !8426, !8427, !8428, !8429}
!8424 = !DILocalVariable(name: "suite", arg: 1, scope: !8420, file: !533, line: 652, type: !8385)
!8425 = !DILocalVariable(name: "test", scope: !8420, file: !533, line: 654, type: !8337)
!8426 = !DILocalVariable(name: "data", scope: !8420, file: !533, line: 655, type: !106)
!8427 = !DILocalVariable(name: "fail", scope: !8420, file: !533, line: 656, type: !107)
!8428 = !DILocalVariable(name: "tc_result", scope: !8420, file: !533, line: 657, type: !107)
!8429 = !DILocalVariable(name: "i", scope: !8430, file: !533, line: 692, type: !107)
!8430 = distinct !DILexicalBlock(scope: !8420, file: !533, line: 692, column: 2)
!8431 = !DILocation(line: 0, scope: !8420)
!8432 = !DILocation(line: 663, column: 12, scope: !8433)
!8433 = distinct !DILexicalBlock(scope: !8420, file: !533, line: 663, column: 6)
!8434 = !DILocation(line: 663, column: 6, scope: !8420)
!8435 = !DILocation(line: 664, column: 15, scope: !8436)
!8436 = distinct !DILexicalBlock(scope: !8433, file: !533, line: 663, column: 21)
!8437 = !DILocation(line: 665, column: 3, scope: !8436)
!8438 = !DILocation(line: 679, column: 2, scope: !8439)
!8439 = distinct !DILexicalBlock(scope: !8420, file: !533, line: 679, column: 2)
!8440 = !DILocation(line: 680, column: 33, scope: !8420)
!8441 = !DILocation(line: 681, column: 14, scope: !8420)
!8442 = !DILocation(line: 682, column: 8, scope: !8420)
!8443 = !DILocation(line: 688, column: 55, scope: !8444)
!8444 = distinct !DILexicalBlock(scope: !8420, file: !533, line: 688, column: 6)
!8445 = !DILocation(line: 688, column: 61, scope: !8444)
!8446 = !DILocation(line: 688, column: 6, scope: !8420)
!8447 = !DILocation(line: 689, column: 10, scope: !8448)
!8448 = distinct !DILexicalBlock(scope: !8444, file: !533, line: 688, column: 70)
!8449 = !DILocation(line: 690, column: 2, scope: !8448)
!8450 = !DILocation(line: 0, scope: !8430)
!8451 = !DILocation(line: 727, column: 3, scope: !8452)
!8452 = distinct !DILexicalBlock(scope: !8453, file: !533, line: 692, column: 46)
!8453 = distinct !DILexicalBlock(scope: !8430, file: !533, line: 692, column: 2)
!8454 = !DILocation(line: 0, scope: !8452)
!8455 = !DILocation(line: 727, column: 48, scope: !8452)
!8456 = !DILocation(line: 727, column: 19, scope: !8452)
!8457 = !DILocation(line: 727, column: 61, scope: !8452)
!8458 = !DILocation(line: 728, column: 41, scope: !8459)
!8459 = distinct !DILexicalBlock(scope: !8460, file: !533, line: 728, column: 8)
!8460 = distinct !DILexicalBlock(scope: !8452, file: !533, line: 727, column: 71)
!8461 = !DILocation(line: 728, column: 53, scope: !8459)
!8462 = !DILocation(line: 728, column: 8, scope: !8459)
!8463 = !DILocation(line: 728, column: 8, scope: !8460)
!8464 = !DILocation(line: 729, column: 11, scope: !8465)
!8465 = distinct !DILexicalBlock(scope: !8459, file: !533, line: 728, column: 60)
!8466 = !DILocation(line: 729, column: 18, scope: !8465)
!8467 = !DILocation(line: 729, column: 27, scope: !8465)
!8468 = !DILocation(line: 730, column: 17, scope: !8465)
!8469 = !DILocation(line: 731, column: 9, scope: !8465)
!8470 = !DILocation(line: 732, column: 12, scope: !8471)
!8471 = distinct !DILexicalBlock(scope: !8472, file: !533, line: 731, column: 31)
!8472 = distinct !DILexicalBlock(scope: !8465, file: !533, line: 731, column: 9)
!8473 = !DILocation(line: 732, column: 19, scope: !8471)
!8474 = !DILocation(line: 733, column: 5, scope: !8471)
!8475 = !DILocation(line: 734, column: 12, scope: !8476)
!8476 = distinct !DILexicalBlock(scope: !8477, file: !533, line: 733, column: 38)
!8477 = distinct !DILexicalBlock(scope: !8472, file: !533, line: 733, column: 16)
!8478 = !DILocation(line: 734, column: 19, scope: !8476)
!8479 = !DILocation(line: 735, column: 5, scope: !8476)
!8480 = !DILocation(line: 736, column: 12, scope: !8481)
!8481 = distinct !DILexicalBlock(scope: !8482, file: !533, line: 735, column: 38)
!8482 = distinct !DILexicalBlock(scope: !8477, file: !533, line: 735, column: 16)
!8483 = !DILocation(line: 736, column: 19, scope: !8481)
!8484 = !DILocation(line: 737, column: 5, scope: !8481)
!8485 = !DILocation(line: 0, scope: !8472)
!8486 = !DILocation(line: 739, column: 19, scope: !8487)
!8487 = distinct !DILexicalBlock(scope: !8465, file: !533, line: 739, column: 9)
!8488 = !DILocation(line: 739, column: 9, scope: !8465)
!8489 = !DILocation(line: 744, column: 31, scope: !8490)
!8490 = distinct !DILexicalBlock(scope: !8460, file: !533, line: 744, column: 8)
!8491 = !DILocation(line: 744, column: 43, scope: !8490)
!8492 = !DILocation(line: 744, column: 8, scope: !8460)
!8493 = distinct !{!8493, !8451, !8494}
!8494 = !DILocation(line: 747, column: 3, scope: !8452)
!8495 = !DILocation(line: 750, column: 7, scope: !8496)
!8496 = distinct !DILexicalBlock(scope: !8452, file: !533, line: 750, column: 7)
!8497 = !DILocation(line: 750, column: 38, scope: !8496)
!8498 = !DILocation(line: 751, column: 16, scope: !8499)
!8499 = distinct !DILexicalBlock(scope: !8496, file: !533, line: 750, column: 52)
!8500 = !DILocation(line: 752, column: 3, scope: !8499)
!8501 = !DILocation(line: 755, column: 2, scope: !8502)
!8502 = distinct !DILexicalBlock(scope: !8503, file: !533, line: 755, column: 2)
!8503 = distinct !DILexicalBlock(scope: !8420, file: !533, line: 755, column: 2)
!8504 = !DILocation(line: 0, scope: !8502)
!8505 = !DILocation(line: 756, column: 8, scope: !8420)
!8506 = !DILocation(line: 757, column: 13, scope: !8507)
!8507 = distinct !DILexicalBlock(scope: !8420, file: !533, line: 757, column: 6)
!8508 = !DILocation(line: 757, column: 22, scope: !8507)
!8509 = !DILocation(line: 757, column: 6, scope: !8420)
!8510 = !DILocation(line: 758, column: 3, scope: !8511)
!8511 = distinct !DILexicalBlock(scope: !8507, file: !533, line: 757, column: 31)
!8512 = !DILocation(line: 759, column: 2, scope: !8511)
!8513 = !DILocation(line: 762, column: 1, scope: !8420)
!8514 = distinct !DISubprogram(name: "run_test", scope: !533, file: !533, line: 521, type: !8515, scopeLine: 522, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8517)
!8515 = !DISubroutineType(types: !8516)
!8516 = !{!107, !8385, !8337, !106}
!8517 = !{!8518, !8519, !8520, !8521}
!8518 = !DILocalVariable(name: "suite", arg: 1, scope: !8514, file: !533, line: 521, type: !8385)
!8519 = !DILocalVariable(name: "test", arg: 2, scope: !8514, file: !533, line: 521, type: !8337)
!8520 = !DILocalVariable(name: "data", arg: 3, scope: !8514, file: !533, line: 521, type: !106)
!8521 = !DILocalVariable(name: "ret", scope: !8514, file: !533, line: 523, type: !107)
!8522 = !DILocation(line: 0, scope: !8514)
!8523 = !DILocation(line: 528, column: 2, scope: !8524)
!8524 = distinct !DILexicalBlock(scope: !8514, file: !533, line: 528, column: 2)
!8525 = !DILocation(line: 530, column: 8, scope: !8514)
!8526 = !DILocation(line: 536, column: 3, scope: !8527)
!8527 = distinct !DILexicalBlock(scope: !8528, file: !533, line: 535, column: 41)
!8528 = distinct !DILexicalBlock(scope: !8514, file: !533, line: 535, column: 6)
!8529 = !DILocation(line: 539, column: 32, scope: !8527)
!8530 = !DILocation(line: 539, column: 39, scope: !8527)
!8531 = !DILocation(line: 541, column: 11, scope: !8527)
!8532 = !DILocation(line: 541, column: 26, scope: !8527)
!8533 = !DILocation(line: 537, column: 3, scope: !8527)
!8534 = !DILocation(line: 543, column: 3, scope: !8527)
!8535 = !DILocation(line: 544, column: 13, scope: !8536)
!8536 = distinct !DILexicalBlock(scope: !8527, file: !533, line: 544, column: 7)
!8537 = !DILocation(line: 544, column: 18, scope: !8536)
!8538 = !DILocation(line: 544, column: 7, scope: !8527)
!8539 = !DILocation(line: 545, column: 4, scope: !8540)
!8540 = distinct !DILexicalBlock(scope: !8536, file: !533, line: 544, column: 27)
!8541 = !DILocation(line: 546, column: 3, scope: !8540)
!8542 = !DILocation(line: 548, column: 7, scope: !8543)
!8543 = distinct !DILexicalBlock(scope: !8527, file: !533, line: 548, column: 7)
!8544 = !DILocation(line: 548, column: 46, scope: !8543)
!8545 = !DILocation(line: 550, column: 4, scope: !8546)
!8546 = distinct !DILexicalBlock(scope: !8543, file: !533, line: 549, column: 47)
!8547 = !DILocation(line: 551, column: 4, scope: !8546)
!8548 = !DILocation(line: 552, column: 3, scope: !8546)
!8549 = !DILocation(line: 564, column: 8, scope: !8514)
!8550 = !DILocation(line: 565, column: 13, scope: !8551)
!8551 = distinct !DILexicalBlock(scope: !8514, file: !533, line: 565, column: 6)
!8552 = !DILocation(line: 565, column: 19, scope: !8551)
!8553 = !DILocation(line: 565, column: 6, scope: !8514)
!8554 = !DILocation(line: 566, column: 3, scope: !8555)
!8555 = distinct !DILexicalBlock(scope: !8551, file: !533, line: 565, column: 28)
!8556 = !DILocation(line: 567, column: 2, scope: !8555)
!8557 = !DILocation(line: 568, column: 2, scope: !8514)
!8558 = !DILocation(line: 570, column: 2, scope: !8514)
!8559 = !DILocation(line: 571, column: 6, scope: !8560)
!8560 = distinct !DILexicalBlock(scope: !8514, file: !533, line: 571, column: 6)
!8561 = !DILocation(line: 571, column: 28, scope: !8560)
!8562 = !DILocation(line: 571, column: 35, scope: !8560)
!8563 = !DILocation(line: 571, column: 20, scope: !8560)
!8564 = !DILocation(line: 571, column: 6, scope: !8514)
!8565 = !DILocation(line: 572, column: 34, scope: !8566)
!8566 = distinct !DILexicalBlock(scope: !8560, file: !533, line: 571, column: 54)
!8567 = !DILocation(line: 573, column: 2, scope: !8566)
!8568 = !DILocation(line: 575, column: 8, scope: !8514)
!8569 = !DILocation(line: 583, column: 6, scope: !8570)
!8570 = distinct !DILexicalBlock(scope: !8514, file: !533, line: 583, column: 6)
!8571 = !DILocation(line: 583, column: 39, scope: !8570)
!8572 = !DILocation(line: 585, column: 46, scope: !8573)
!8573 = distinct !DILexicalBlock(scope: !8570, file: !533, line: 585, column: 13)
!8574 = !DILocation(line: 590, column: 10, scope: !8575)
!8575 = distinct !DILexicalBlock(scope: !8576, file: !533, line: 589, column: 54)
!8576 = distinct !DILexicalBlock(scope: !8514, file: !533, line: 589, column: 6)
!8577 = !DILocation(line: 593, column: 8, scope: !8514)
!8578 = !DILocation(line: 594, column: 2, scope: !8579)
!8579 = distinct !DILexicalBlock(scope: !8514, file: !533, line: 594, column: 2)
!8580 = !DILocation(line: 595, column: 10, scope: !8581)
!8581 = distinct !DILexicalBlock(scope: !8514, file: !533, line: 595, column: 6)
!8582 = !DILocation(line: 595, column: 21, scope: !8581)
!8583 = !DILocation(line: 595, column: 24, scope: !8581)
!8584 = !DILocation(line: 595, column: 6, scope: !8514)
!8585 = !DILocation(line: 596, column: 15, scope: !8586)
!8586 = distinct !DILexicalBlock(scope: !8581, file: !533, line: 595, column: 56)
!8587 = !DILocation(line: 597, column: 2, scope: !8586)
!8588 = !DILocation(line: 599, column: 2, scope: !8514)
!8589 = distinct !DISubprogram(name: "get_start_time_cyc", scope: !690, file: !690, line: 98, type: !3148, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2236)
!8590 = !DILocation(line: 100, column: 18, scope: !8589)
!8591 = !DILocation(line: 100, column: 16, scope: !8589)
!8592 = !DILocation(line: 101, column: 1, scope: !8589)
!8593 = distinct !DISubprogram(name: "k_thread_create", scope: !4479, file: !4479, line: 24, type: !8594, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8602)
!8594 = !DISubroutineType(types: !8595)
!8595 = !{!8261, !8262, !8596, !185, !559, !106, !106, !106, !107, !152, !8598}
!8596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8597, size: 32)
!8597 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !560, line: 44, baseType: !576)
!8598 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !565, line: 67, baseType: !8599)
!8599 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !565, line: 65, size: 64, elements: !8600)
!8600 = !{!8601}
!8601 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !8599, file: !565, line: 66, baseType: !564, size: 64)
!8602 = !{!8603, !8604, !8605, !8606, !8607, !8608, !8609, !8610, !8611, !8612}
!8603 = !DILocalVariable(name: "new_thread", arg: 1, scope: !8593, file: !4479, line: 24, type: !8262)
!8604 = !DILocalVariable(name: "stack", arg: 2, scope: !8593, file: !4479, line: 24, type: !8596)
!8605 = !DILocalVariable(name: "stack_size", arg: 3, scope: !8593, file: !4479, line: 24, type: !185)
!8606 = !DILocalVariable(name: "entry", arg: 4, scope: !8593, file: !4479, line: 24, type: !559)
!8607 = !DILocalVariable(name: "p1", arg: 5, scope: !8593, file: !4479, line: 24, type: !106)
!8608 = !DILocalVariable(name: "p2", arg: 6, scope: !8593, file: !4479, line: 24, type: !106)
!8609 = !DILocalVariable(name: "p3", arg: 7, scope: !8593, file: !4479, line: 24, type: !106)
!8610 = !DILocalVariable(name: "prio", arg: 8, scope: !8593, file: !4479, line: 24, type: !107)
!8611 = !DILocalVariable(name: "options", arg: 9, scope: !8593, file: !4479, line: 24, type: !152)
!8612 = !DILocalVariable(name: "delay", arg: 10, scope: !8593, file: !4479, line: 24, type: !8598)
!8613 = !DILocation(line: 0, scope: !8593)
!8614 = !DILocation(line: 49, column: 2, scope: !8615)
!8615 = distinct !DILexicalBlock(scope: !8593, file: !4479, line: 49, column: 2)
!8616 = !{i64 2155093717}
!8617 = !DILocation(line: 50, column: 9, scope: !8593)
!8618 = !DILocation(line: 50, column: 2, scope: !8593)
!8619 = distinct !DISubprogram(name: "k_object_access_grant", scope: !8620, file: !8620, line: 24, type: !8621, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8623)
!8620 = !DIFile(filename: "zephyr/include/generated/syscalls/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pytest")
!8621 = !DISubroutineType(types: !8622)
!8622 = !{null, !13, !8262}
!8623 = !{!8624, !8625}
!8624 = !DILocalVariable(name: "object", arg: 1, scope: !8619, file: !8620, line: 24, type: !13)
!8625 = !DILocalVariable(name: "thread", arg: 2, scope: !8619, file: !8620, line: 24, type: !8262)
!8626 = !DILocation(line: 0, scope: !8619)
!8627 = !DILocation(line: 34, column: 2, scope: !8628)
!8628 = distinct !DILexicalBlock(scope: !8619, file: !8620, line: 34, column: 2)
!8629 = !{i64 2154610137}
!8630 = !DILocation(line: 36, column: 1, scope: !8619)
!8631 = distinct !DISubprogram(name: "k_thread_name_set", scope: !4479, file: !4479, line: 391, type: !8632, scopeLine: 392, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8634)
!8632 = !DISubroutineType(types: !8633)
!8633 = !{!107, !8261, !118}
!8634 = !{!8635, !8636}
!8635 = !DILocalVariable(name: "thread", arg: 1, scope: !8631, file: !4479, line: 391, type: !8261)
!8636 = !DILocalVariable(name: "str", arg: 2, scope: !8631, file: !4479, line: 391, type: !118)
!8637 = !DILocation(line: 0, scope: !8631)
!8638 = !DILocation(line: 400, column: 2, scope: !8639)
!8639 = distinct !DILexicalBlock(scope: !8631, file: !4479, line: 400, column: 2)
!8640 = !{i64 2155095145}
!8641 = !DILocation(line: 401, column: 9, scope: !8631)
!8642 = !DILocation(line: 401, column: 2, scope: !8631)
!8643 = distinct !DISubprogram(name: "k_thread_start", scope: !4479, file: !4479, line: 205, type: !8259, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8644)
!8644 = !{!8645}
!8645 = !DILocalVariable(name: "thread", arg: 1, scope: !8643, file: !4479, line: 205, type: !8261)
!8646 = !DILocation(line: 0, scope: !8643)
!8647 = !DILocation(line: 214, column: 2, scope: !8648)
!8648 = distinct !DILexicalBlock(scope: !8643, file: !4479, line: 214, column: 2)
!8649 = !{i64 2155094397}
!8650 = !DILocation(line: 215, column: 2, scope: !8643)
!8651 = !DILocation(line: 216, column: 1, scope: !8643)
!8652 = distinct !DISubprogram(name: "k_thread_join", scope: !4479, file: !4479, line: 74, type: !8653, scopeLine: 75, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8655)
!8653 = !DISubroutineType(types: !8654)
!8654 = !{!107, !8262, !8598}
!8655 = !{!8656, !8657}
!8656 = !DILocalVariable(name: "thread", arg: 1, scope: !8652, file: !4479, line: 74, type: !8262)
!8657 = !DILocalVariable(name: "timeout", arg: 2, scope: !8652, file: !4479, line: 74, type: !8598)
!8658 = !DILocation(line: 0, scope: !8652)
!8659 = !DILocation(line: 83, column: 2, scope: !8660)
!8660 = distinct !DILexicalBlock(scope: !8652, file: !4479, line: 83, column: 2)
!8661 = !{i64 2155093853}
!8662 = !DILocation(line: 84, column: 9, scope: !8652)
!8663 = !DILocation(line: 84, column: 2, scope: !8652)
!8664 = distinct !DISubprogram(name: "run_test_rules", scope: !533, file: !533, line: 207, type: !8665, scopeLine: 208, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8667)
!8665 = !DISubroutineType(types: !8666)
!8666 = !{null, !145, !8337, !106}
!8667 = !{!8668, !8669, !8670, !8671}
!8668 = !DILocalVariable(name: "is_before", arg: 1, scope: !8664, file: !533, line: 207, type: !145)
!8669 = !DILocalVariable(name: "test", arg: 2, scope: !8664, file: !533, line: 207, type: !8337)
!8670 = !DILocalVariable(name: "data", arg: 3, scope: !8664, file: !533, line: 207, type: !106)
!8671 = !DILocalVariable(name: "rule", scope: !8672, file: !533, line: 209, type: !8673)
!8672 = distinct !DILexicalBlock(scope: !8664, file: !533, line: 209, column: 2)
!8673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8674, size: 32)
!8674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_test_rule", file: !114, line: 437, size: 64, elements: !8675)
!8675 = !{!8676, !8683}
!8676 = !DIDerivedType(tag: DW_TAG_member, name: "before_each", scope: !8674, file: !114, line: 438, baseType: !8677, size: 32)
!8677 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_rule_cb", file: !114, line: 434, baseType: !8678)
!8678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8679, size: 32)
!8679 = !DISubroutineType(types: !8680)
!8680 = !{null, !8681, !106}
!8681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8682, size: 32)
!8682 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8338)
!8683 = !DIDerivedType(tag: DW_TAG_member, name: "after_each", scope: !8674, file: !114, line: 439, baseType: !8677, size: 32, offset: 32)
!8684 = !DILocation(line: 0, scope: !8664)
!8685 = !DILocation(line: 0, scope: !8672)
!8686 = !DILocation(line: 209, column: 2, scope: !8672)
!8687 = !DILocation(line: 217, column: 1, scope: !8664)
!8688 = !DILocation(line: 211, column: 17, scope: !8689)
!8689 = distinct !DILexicalBlock(scope: !8690, file: !533, line: 211, column: 7)
!8690 = distinct !DILexicalBlock(scope: !8691, file: !533, line: 210, column: 49)
!8691 = distinct !DILexicalBlock(scope: !8672, file: !533, line: 209, column: 2)
!8692 = !DILocation(line: 211, column: 26, scope: !8689)
!8693 = !DILocation(line: 211, column: 20, scope: !8689)
!8694 = !DILocation(line: 211, column: 7, scope: !8690)
!8695 = !DILocation(line: 213, column: 34, scope: !8696)
!8696 = distinct !DILexicalBlock(scope: !8689, file: !533, line: 213, column: 14)
!8697 = !DILocation(line: 213, column: 28, scope: !8696)
!8698 = !DILocation(line: 213, column: 14, scope: !8689)
!8699 = !DILocation(line: 0, scope: !8689)
!8700 = !DILocation(line: 210, column: 41, scope: !8691)
!8701 = !DILocation(line: 210, column: 12, scope: !8691)
!8702 = distinct !{!8702, !8686, !8703}
!8703 = !DILocation(line: 216, column: 2, scope: !8672)
!8704 = distinct !DISubprogram(name: "get_test_duration_ms", scope: !690, file: !690, line: 103, type: !3148, scopeLine: 104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8705)
!8705 = !{!8706}
!8706 = !DILocalVariable(name: "spend_cycle", scope: !8704, file: !690, line: 105, type: !152)
!8707 = !DILocation(line: 105, column: 25, scope: !8704)
!8708 = !DILocation(line: 105, column: 44, scope: !8704)
!8709 = !DILocation(line: 105, column: 42, scope: !8704)
!8710 = !DILocation(line: 0, scope: !8704)
!8711 = !DILocation(line: 107, column: 18, scope: !8704)
!8712 = !DILocation(line: 107, column: 16, scope: !8704)
!8713 = !DILocation(line: 108, column: 1, scope: !8704)
!8714 = distinct !DISubprogram(name: "cleanup_test", scope: !533, file: !533, line: 76, type: !8715, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8717)
!8715 = !DISubroutineType(types: !8716)
!8716 = !{!107, !8337}
!8717 = !{!8718, !8719, !8720}
!8718 = !DILocalVariable(name: "test", arg: 1, scope: !8714, file: !533, line: 76, type: !8337)
!8719 = !DILocalVariable(name: "ret", scope: !8714, file: !533, line: 78, type: !107)
!8720 = !DILocalVariable(name: "mock_status", scope: !8714, file: !533, line: 79, type: !107)
!8721 = !DILocation(line: 0, scope: !8714)
!8722 = !DILocation(line: 89, column: 3, scope: !8723)
!8723 = distinct !DILexicalBlock(scope: !8724, file: !533, line: 88, column: 41)
!8724 = distinct !DILexicalBlock(scope: !8714, file: !533, line: 88, column: 6)
!8725 = !DILocation(line: 103, column: 2, scope: !8714)
!8726 = distinct !DISubprogram(name: "get_final_test_result", scope: !533, file: !533, line: 236, type: !8727, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8729)
!8727 = !DISubroutineType(types: !8728)
!8728 = !{!107, !8681, !107}
!8729 = !{!8730, !8731, !8732, !8733}
!8730 = !DILocalVariable(name: "test", arg: 1, scope: !8726, file: !533, line: 236, type: !8681)
!8731 = !DILocalVariable(name: "ret", arg: 2, scope: !8726, file: !533, line: 236, type: !107)
!8732 = !DILocalVariable(name: "expected_result", scope: !8726, file: !533, line: 238, type: !554)
!8733 = !DILocalVariable(name: "expectation", scope: !8734, file: !533, line: 240, type: !8735)
!8734 = distinct !DILexicalBlock(scope: !8726, file: !533, line: 240, column: 2)
!8735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8736, size: 32)
!8736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_expected_result_entry", file: !114, line: 47, size: 96, elements: !8737)
!8737 = !{!8738, !8739, !8740}
!8738 = !DIDerivedType(tag: DW_TAG_member, name: "test_suite_name", scope: !8736, file: !114, line: 48, baseType: !118, size: 32)
!8739 = !DIDerivedType(tag: DW_TAG_member, name: "test_name", scope: !8736, file: !114, line: 49, baseType: !118, size: 32, offset: 32)
!8740 = !DIDerivedType(tag: DW_TAG_member, name: "expected_result", scope: !8736, file: !114, line: 50, baseType: !554, size: 32, offset: 64)
!8741 = !DILocation(line: 0, scope: !8726)
!8742 = !DILocation(line: 0, scope: !8734)
!8743 = !DILocation(line: 240, column: 2, scope: !8734)
!8744 = !DILocation(line: 243, column: 27, scope: !8745)
!8745 = distinct !DILexicalBlock(scope: !8746, file: !533, line: 243, column: 7)
!8746 = distinct !DILexicalBlock(scope: !8747, file: !533, line: 242, column: 75)
!8747 = distinct !DILexicalBlock(scope: !8734, file: !533, line: 240, column: 2)
!8748 = !DILocation(line: 243, column: 44, scope: !8745)
!8749 = !DILocation(line: 243, column: 7, scope: !8745)
!8750 = !DILocation(line: 243, column: 50, scope: !8745)
!8751 = !DILocation(line: 243, column: 55, scope: !8745)
!8752 = !DILocation(line: 244, column: 27, scope: !8745)
!8753 = !DILocation(line: 244, column: 50, scope: !8745)
!8754 = !DILocation(line: 244, column: 7, scope: !8745)
!8755 = !DILocation(line: 244, column: 67, scope: !8745)
!8756 = !DILocation(line: 243, column: 7, scope: !8746)
!8757 = !DILocation(line: 242, column: 60, scope: !8747)
!8758 = !DILocation(line: 242, column: 19, scope: !8747)
!8759 = distinct !{!8759, !8743, !8760}
!8760 = !DILocation(line: 248, column: 2, scope: !8734)
!8761 = !DILocation(line: 245, column: 35, scope: !8762)
!8762 = distinct !DILexicalBlock(scope: !8745, file: !533, line: 244, column: 73)
!8763 = !DILocation(line: 250, column: 6, scope: !8726)
!8764 = !DILocation(line: 255, column: 15, scope: !8765)
!8765 = distinct !DILexicalBlock(scope: !8766, file: !533, line: 250, column: 53)
!8766 = distinct !DILexicalBlock(scope: !8726, file: !533, line: 250, column: 6)
!8767 = !DILocation(line: 255, column: 10, scope: !8765)
!8768 = !DILocation(line: 255, column: 3, scope: !8765)
!8769 = !DILocation(line: 262, column: 15, scope: !8770)
!8770 = distinct !DILexicalBlock(scope: !8771, file: !533, line: 257, column: 53)
!8771 = distinct !DILexicalBlock(scope: !8726, file: !533, line: 257, column: 6)
!8772 = !DILocation(line: 262, column: 10, scope: !8770)
!8773 = !DILocation(line: 262, column: 3, scope: !8770)
!8774 = !DILocation(line: 266, column: 1, scope: !8726)
!8775 = distinct !DISubprogram(name: "TC_RESULT_TO_STR", scope: !690, file: !690, line: 81, type: !8776, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8778)
!8776 = !DISubroutineType(types: !8777)
!8777 = !{!118, !107}
!8778 = !{!8779}
!8779 = !DILocalVariable(name: "result", arg: 1, scope: !8775, file: !690, line: 81, type: !107)
!8780 = !DILocation(line: 0, scope: !8775)
!8781 = !DILocation(line: 83, column: 2, scope: !8775)
!8782 = !DILocation(line: 0, scope: !8783)
!8783 = distinct !DILexicalBlock(scope: !8775, file: !690, line: 83, column: 18)
!8784 = !DILocation(line: 93, column: 1, scope: !8775)
!8785 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !406, file: !406, line: 1675, type: !6408, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2236)
!8786 = !DILocation(line: 1677, column: 9, scope: !8785)
!8787 = !DILocation(line: 1677, column: 2, scope: !8785)
!8788 = distinct !DISubprogram(name: "k_cyc_to_ms_ceil32", scope: !8789, file: !8789, line: 809, type: !7608, scopeLine: 810, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8790)
!8789 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8790 = !{!8791}
!8791 = !DILocalVariable(name: "t", arg: 1, scope: !8788, file: !8789, line: 809, type: !152)
!8792 = !DILocation(line: 0, scope: !8788)
!8793 = !DILocation(line: 812, column: 17, scope: !8788)
!8794 = !DILocalVariable(name: "t", arg: 1, scope: !8795, file: !8789, line: 102, type: !566)
!8795 = distinct !DISubprogram(name: "z_tmcvt", scope: !8789, file: !8789, line: 102, type: !8796, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8798)
!8796 = !DISubroutineType(types: !8797)
!8797 = !{!566, !566, !152, !152, !145, !145, !145, !145}
!8798 = !{!8794, !8799, !8800, !8801, !8802, !8803, !8804, !8805, !8806, !8807, !8808}
!8799 = !DILocalVariable(name: "from_hz", arg: 2, scope: !8795, file: !8789, line: 102, type: !152)
!8800 = !DILocalVariable(name: "to_hz", arg: 3, scope: !8795, file: !8789, line: 103, type: !152)
!8801 = !DILocalVariable(name: "const_hz", arg: 4, scope: !8795, file: !8789, line: 103, type: !145)
!8802 = !DILocalVariable(name: "result32", arg: 5, scope: !8795, file: !8789, line: 104, type: !145)
!8803 = !DILocalVariable(name: "round_up", arg: 6, scope: !8795, file: !8789, line: 104, type: !145)
!8804 = !DILocalVariable(name: "round_off", arg: 7, scope: !8795, file: !8789, line: 105, type: !145)
!8805 = !DILocalVariable(name: "mul_ratio", scope: !8795, file: !8789, line: 107, type: !145)
!8806 = !DILocalVariable(name: "div_ratio", scope: !8795, file: !8789, line: 109, type: !145)
!8807 = !DILocalVariable(name: "off", scope: !8795, file: !8789, line: 116, type: !566)
!8808 = !DILocalVariable(name: "rdivisor", scope: !8809, file: !8789, line: 119, type: !152)
!8809 = distinct !DILexicalBlock(scope: !8810, file: !8789, line: 118, column: 18)
!8810 = distinct !DILexicalBlock(scope: !8795, file: !8789, line: 118, column: 6)
!8811 = !DILocation(line: 0, scope: !8795, inlinedAt: !8812)
!8812 = distinct !DILocation(line: 812, column: 9, scope: !8788)
!8813 = !DILocation(line: 135, column: 5, scope: !8814, inlinedAt: !8812)
!8814 = distinct !DILexicalBlock(scope: !8815, file: !8789, line: 134, column: 17)
!8815 = distinct !DILexicalBlock(scope: !8795, file: !8789, line: 134, column: 6)
!8816 = !DILocation(line: 136, column: 16, scope: !8817, inlinedAt: !8812)
!8817 = distinct !DILexicalBlock(scope: !8814, file: !8789, line: 136, column: 7)
!8818 = !DILocation(line: 812, column: 9, scope: !8788)
!8819 = !DILocation(line: 812, column: 2, scope: !8788)
!8820 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !8821, file: !8821, line: 24, type: !6408, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2236)
!8821 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8822 = !DILocation(line: 26, column: 9, scope: !8820)
!8823 = !DILocation(line: 26, column: 2, scope: !8820)
!8824 = distinct !DISubprogram(name: "test_cb", scope: !533, file: !533, line: 507, type: !562, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8825)
!8825 = !{!8826, !8827, !8828, !8829, !8830}
!8826 = !DILocalVariable(name: "a", arg: 1, scope: !8824, file: !533, line: 507, type: !106)
!8827 = !DILocalVariable(name: "b", arg: 2, scope: !8824, file: !533, line: 507, type: !106)
!8828 = !DILocalVariable(name: "c", arg: 3, scope: !8824, file: !533, line: 507, type: !106)
!8829 = !DILocalVariable(name: "suite", scope: !8824, file: !533, line: 509, type: !8385)
!8830 = !DILocalVariable(name: "test", scope: !8824, file: !533, line: 510, type: !8337)
!8831 = !DILocation(line: 0, scope: !8824)
!8832 = !DILocation(line: 510, column: 33, scope: !8824)
!8833 = !DILocation(line: 512, column: 14, scope: !8824)
!8834 = !DILocation(line: 513, column: 2, scope: !8824)
!8835 = !DILocation(line: 514, column: 13, scope: !8836)
!8836 = distinct !DILexicalBlock(scope: !8824, file: !533, line: 514, column: 6)
!8837 = !DILocation(line: 514, column: 6, scope: !8836)
!8838 = !DILocation(line: 514, column: 6, scope: !8824)
!8839 = !DILocation(line: 515, column: 3, scope: !8840)
!8840 = distinct !DILexicalBlock(scope: !8836, file: !533, line: 514, column: 21)
!8841 = !DILocation(line: 516, column: 2, scope: !8840)
!8842 = !DILocation(line: 517, column: 2, scope: !8824)
!8843 = !DILocation(line: 518, column: 14, scope: !8824)
!8844 = !DILocation(line: 519, column: 1, scope: !8824)
!8845 = distinct !DISubprogram(name: "run_test_functions", scope: !533, file: !533, line: 219, type: !8846, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8848)
!8846 = !DISubroutineType(types: !8847)
!8847 = !{null, !8385, !8337, !106}
!8848 = !{!8849, !8850, !8851}
!8849 = !DILocalVariable(name: "suite", arg: 1, scope: !8845, file: !533, line: 219, type: !8385)
!8850 = !DILocalVariable(name: "test", arg: 2, scope: !8845, file: !533, line: 219, type: !8337)
!8851 = !DILocalVariable(name: "data", arg: 3, scope: !8845, file: !533, line: 220, type: !106)
!8852 = !DILocation(line: 0, scope: !8845)
!8853 = !DILocation(line: 222, column: 8, scope: !8845)
!8854 = !DILocation(line: 223, column: 8, scope: !8845)
!8855 = !DILocation(line: 223, column: 2, scope: !8845)
!8856 = !DILocation(line: 224, column: 1, scope: !8845)
!8857 = distinct !DISubprogram(name: "z_impl_ztest_run_test_suites", scope: !533, file: !533, line: 929, type: !8858, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8860)
!8858 = !DISubroutineType(types: !8859)
!8859 = !{!107, !13}
!8860 = !{!8861, !8862, !8863}
!8861 = !DILocalVariable(name: "state", arg: 1, scope: !8857, file: !533, line: 929, type: !13)
!8862 = !DILocalVariable(name: "count", scope: !8857, file: !533, line: 931, type: !107)
!8863 = !DILocalVariable(name: "ptr", scope: !8864, file: !533, line: 954, type: !8385)
!8864 = distinct !DILexicalBlock(scope: !8857, file: !533, line: 954, column: 2)
!8865 = !DILocation(line: 0, scope: !8857)
!8866 = !DILocation(line: 933, column: 6, scope: !8867)
!8867 = distinct !DILexicalBlock(scope: !8857, file: !533, line: 933, column: 6)
!8868 = !DILocation(line: 933, column: 18, scope: !8867)
!8869 = !DILocation(line: 933, column: 6, scope: !8857)
!8870 = !DILocation(line: 0, scope: !8864)
!8871 = !DILocation(line: 954, column: 2, scope: !8864)
!8872 = !DILocation(line: 956, column: 12, scope: !8873)
!8873 = distinct !DILexicalBlock(scope: !8874, file: !533, line: 955, column: 48)
!8874 = distinct !DILexicalBlock(scope: !8864, file: !533, line: 954, column: 2)
!8875 = !DILocation(line: 956, column: 9, scope: !8873)
!8876 = !DILocation(line: 960, column: 7, scope: !8877)
!8877 = distinct !DILexicalBlock(scope: !8873, file: !533, line: 960, column: 7)
!8878 = !DILocation(line: 960, column: 19, scope: !8877)
!8879 = !DILocation(line: 955, column: 41, scope: !8874)
!8880 = !DILocation(line: 960, column: 50, scope: !8877)
!8881 = distinct !{!8881, !8871, !8882}
!8882 = !DILocation(line: 964, column: 2, scope: !8864)
!8883 = !DILocation(line: 967, column: 2, scope: !8857)
!8884 = !DILocation(line: 969, column: 2, scope: !8857)
!8885 = !DILocation(line: 970, column: 1, scope: !8857)
!8886 = distinct !DISubprogram(name: "__ztest_run_test_suite", scope: !533, file: !533, line: 907, type: !8887, scopeLine: 908, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8889)
!8887 = !DISubroutineType(types: !8888)
!8888 = !{!107, !8385, !13}
!8889 = !{!8890, !8891, !8892, !8893, !8894, !8896}
!8890 = !DILocalVariable(name: "ptr", arg: 1, scope: !8886, file: !533, line: 907, type: !8385)
!8891 = !DILocalVariable(name: "state", arg: 2, scope: !8886, file: !533, line: 907, type: !13)
!8892 = !DILocalVariable(name: "stats", scope: !8886, file: !533, line: 909, type: !8396)
!8893 = !DILocalVariable(name: "count", scope: !8886, file: !533, line: 910, type: !107)
!8894 = !DILocalVariable(name: "i", scope: !8895, file: !533, line: 914, type: !107)
!8895 = distinct !DILexicalBlock(scope: !8886, file: !533, line: 914, column: 2)
!8896 = !DILocalVariable(name: "fail", scope: !8897, file: !533, line: 916, type: !107)
!8897 = distinct !DILexicalBlock(scope: !8898, file: !533, line: 915, column: 47)
!8898 = distinct !DILexicalBlock(scope: !8899, file: !533, line: 915, column: 7)
!8899 = distinct !DILexicalBlock(scope: !8900, file: !533, line: 914, column: 47)
!8900 = distinct !DILexicalBlock(scope: !8895, file: !533, line: 914, column: 2)
!8901 = !DILocation(line: 0, scope: !8886)
!8902 = !DILocation(line: 909, column: 41, scope: !8886)
!8903 = !DILocation(line: 912, column: 2, scope: !8886)
!8904 = !DILocation(line: 0, scope: !8895)
!8905 = !DILocation(line: 915, column: 7, scope: !8898)
!8906 = !DILocation(line: 915, column: 7, scope: !8899)
!8907 = !DILocation(line: 916, column: 15, scope: !8897)
!8908 = !DILocation(line: 0, scope: !8897)
!8909 = !DILocation(line: 919, column: 20, scope: !8897)
!8910 = !DILocation(line: 920, column: 31, scope: !8897)
!8911 = !DILocation(line: 920, column: 25, scope: !8897)
!8912 = !DILocation(line: 921, column: 3, scope: !8897)
!8913 = !DILocation(line: 0, scope: !8898)
!8914 = !DILocation(line: 926, column: 2, scope: !8886)
!8915 = distinct !DISubprogram(name: "__ztest_show_suite_summary", scope: !533, file: !533, line: 886, type: !3148, scopeLine: 887, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8916)
!8916 = !{!8917}
!8917 = !DILocalVariable(name: "ptr", scope: !8918, file: !533, line: 894, type: !8385)
!8918 = distinct !DILexicalBlock(scope: !8915, file: !533, line: 894, column: 2)
!8919 = !DILocation(line: 892, column: 2, scope: !8915)
!8920 = !DILocation(line: 0, scope: !8918)
!8921 = !DILocation(line: 894, column: 2, scope: !8918)
!8922 = !DILocation(line: 903, column: 2, scope: !8915)
!8923 = !DILocation(line: 905, column: 1, scope: !8915)
!8924 = !DILocation(line: 898, column: 3, scope: !8925)
!8925 = distinct !DILexicalBlock(scope: !8926, file: !533, line: 895, column: 48)
!8926 = distinct !DILexicalBlock(scope: !8918, file: !533, line: 894, column: 2)
!8927 = !DILocation(line: 895, column: 41, scope: !8926)
!8928 = !DILocation(line: 895, column: 11, scope: !8926)
!8929 = distinct !{!8929, !8921, !8930}
!8930 = !DILocation(line: 902, column: 2, scope: !8918)
!8931 = distinct !DISubprogram(name: "__ztest_show_suite_summary_verbose", scope: !533, file: !533, line: 852, type: !8932, scopeLine: 853, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8934)
!8932 = !DISubroutineType(types: !8933)
!8933 = !{null, !8385}
!8934 = !{!8935, !8936, !8937, !8938}
!8935 = !DILocalVariable(name: "suite", arg: 1, scope: !8931, file: !533, line: 852, type: !8385)
!8936 = !DILocalVariable(name: "test", scope: !8931, file: !533, line: 854, type: !8337)
!8937 = !DILocalVariable(name: "tc_result", scope: !8931, file: !533, line: 855, type: !107)
!8938 = !DILocalVariable(name: "flush_frequency", scope: !8931, file: !533, line: 856, type: !107)
!8939 = !DILocation(line: 0, scope: !8931)
!8940 = !DILocation(line: 858, column: 2, scope: !8931)
!8941 = !DILocation(line: 860, column: 47, scope: !8931)
!8942 = !DILocation(line: 860, column: 18, scope: !8931)
!8943 = !DILocation(line: 860, column: 60, scope: !8931)
!8944 = !DILocation(line: 860, column: 2, scope: !8931)
!8945 = !DILocation(line: 861, column: 13, scope: !8946)
!8946 = distinct !DILexicalBlock(scope: !8947, file: !533, line: 861, column: 7)
!8947 = distinct !DILexicalBlock(scope: !8931, file: !533, line: 860, column: 70)
!8948 = !DILocation(line: 861, column: 20, scope: !8946)
!8949 = !DILocation(line: 861, column: 47, scope: !8946)
!8950 = !DILocation(line: 861, column: 31, scope: !8946)
!8951 = !DILocation(line: 861, column: 7, scope: !8947)
!8952 = !DILocation(line: 863, column: 27, scope: !8953)
!8953 = distinct !DILexicalBlock(scope: !8946, file: !533, line: 863, column: 14)
!8954 = !DILocation(line: 863, column: 38, scope: !8953)
!8955 = !DILocation(line: 0, scope: !8946)
!8956 = !DILocation(line: 869, column: 3, scope: !8947)
!8957 = distinct !{!8957, !8944, !8958}
!8958 = !DILocation(line: 880, column: 2, scope: !8931)
!8959 = !DILocation(line: 881, column: 2, scope: !8931)
!8960 = !DILocation(line: 883, column: 1, scope: !8931)
!8961 = distinct !DISubprogram(name: "__ztest_show_suite_summary_oneline", scope: !533, file: !533, line: 801, type: !8932, scopeLine: 802, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8962)
!8962 = !{!8963, !8964, !8965, !8966, !8967, !8968, !8969, !8970, !8971, !8972, !8973, !8974, !8975, !8976}
!8963 = !DILocalVariable(name: "suite", arg: 1, scope: !8961, file: !533, line: 801, type: !8385)
!8964 = !DILocalVariable(name: "distinct_pass", scope: !8961, file: !533, line: 803, type: !107)
!8965 = !DILocalVariable(name: "distinct_fail", scope: !8961, file: !533, line: 803, type: !107)
!8966 = !DILocalVariable(name: "distinct_skip", scope: !8961, file: !533, line: 803, type: !107)
!8967 = !DILocalVariable(name: "distinct_total", scope: !8961, file: !533, line: 803, type: !107)
!8968 = !DILocalVariable(name: "effective_total", scope: !8961, file: !533, line: 804, type: !107)
!8969 = !DILocalVariable(name: "expanded_pass", scope: !8961, file: !533, line: 805, type: !107)
!8970 = !DILocalVariable(name: "expanded_passrate", scope: !8961, file: !533, line: 805, type: !107)
!8971 = !DILocalVariable(name: "passrate_major", scope: !8961, file: !533, line: 806, type: !107)
!8972 = !DILocalVariable(name: "passrate_minor", scope: !8961, file: !533, line: 806, type: !107)
!8973 = !DILocalVariable(name: "passrate_tail", scope: !8961, file: !533, line: 806, type: !107)
!8974 = !DILocalVariable(name: "suite_result", scope: !8961, file: !533, line: 807, type: !107)
!8975 = !DILocalVariable(name: "test", scope: !8961, file: !533, line: 809, type: !8337)
!8976 = !DILocalVariable(name: "suite_duration_worst_ms", scope: !8961, file: !533, line: 810, type: !32)
!8977 = !DILocation(line: 0, scope: !8961)
!8978 = !DILocation(line: 813, column: 47, scope: !8961)
!8979 = !DILocation(line: 813, column: 18, scope: !8961)
!8980 = !DILocation(line: 813, column: 60, scope: !8961)
!8981 = !DILocation(line: 813, column: 2, scope: !8961)
!8982 = !DILocation(line: 814, column: 17, scope: !8983)
!8983 = distinct !DILexicalBlock(scope: !8961, file: !533, line: 813, column: 70)
!8984 = !DILocation(line: 815, column: 36, scope: !8983)
!8985 = !DILocation(line: 815, column: 43, scope: !8983)
!8986 = !DILocation(line: 815, column: 27, scope: !8983)
!8987 = !DILocation(line: 816, column: 20, scope: !8988)
!8988 = distinct !DILexicalBlock(scope: !8983, file: !533, line: 816, column: 7)
!8989 = !DILocation(line: 816, column: 47, scope: !8988)
!8990 = !DILocation(line: 816, column: 31, scope: !8988)
!8991 = !DILocation(line: 816, column: 7, scope: !8983)
!8992 = !DILocation(line: 817, column: 17, scope: !8993)
!8993 = distinct !DILexicalBlock(scope: !8988, file: !533, line: 816, column: 58)
!8994 = !DILocation(line: 818, column: 3, scope: !8993)
!8995 = !DILocation(line: 818, column: 27, scope: !8996)
!8996 = distinct !DILexicalBlock(scope: !8988, file: !533, line: 818, column: 14)
!8997 = !DILocation(line: 818, column: 38, scope: !8996)
!8998 = !DILocation(line: 818, column: 14, scope: !8988)
!8999 = !DILocation(line: 819, column: 17, scope: !9000)
!9000 = distinct !DILexicalBlock(scope: !8996, file: !533, line: 818, column: 65)
!9001 = !DILocation(line: 820, column: 3, scope: !9000)
!9002 = !DILocation(line: 821, column: 17, scope: !9003)
!9003 = distinct !DILexicalBlock(scope: !8996, file: !533, line: 820, column: 10)
!9004 = distinct !{!9004, !8981, !9005}
!9005 = !DILocation(line: 823, column: 2, scope: !8961)
!9006 = !DILocation(line: 825, column: 20, scope: !9007)
!9007 = distinct !DILexicalBlock(scope: !8961, file: !533, line: 825, column: 6)
!9008 = !DILocation(line: 825, column: 6, scope: !8961)
!9009 = !DILocation(line: 829, column: 33, scope: !9010)
!9010 = distinct !DILexicalBlock(scope: !9007, file: !533, line: 828, column: 9)
!9011 = !DILocation(line: 829, column: 18, scope: !9010)
!9012 = !DILocation(line: 830, column: 36, scope: !9010)
!9013 = !DILocation(line: 831, column: 33, scope: !9010)
!9014 = !DILocation(line: 832, column: 37, scope: !9010)
!9015 = !DILocation(line: 833, column: 38, scope: !9010)
!9016 = !DILocation(line: 834, column: 56, scope: !9010)
!9017 = !DILocation(line: 834, column: 39, scope: !9010)
!9018 = !DILocation(line: 834, column: 64, scope: !9010)
!9019 = !DILocation(line: 835, column: 78, scope: !9010)
!9020 = !DILocation(line: 835, column: 61, scope: !9010)
!9021 = !DILocation(line: 836, column: 21, scope: !9022)
!9022 = distinct !DILexicalBlock(scope: !9010, file: !533, line: 836, column: 7)
!9023 = !DILocation(line: 836, column: 7, scope: !9010)
!9024 = !DILocation(line: 0, scope: !9007)
!9025 = !DILocation(line: 841, column: 2, scope: !8961)
!9026 = !DILocation(line: 849, column: 1, scope: !8961)
!9027 = distinct !DISubprogram(name: "__ztest_init_unit_test_result_for_suite", scope: !533, file: !533, line: 773, type: !8932, scopeLine: 774, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !9028)
!9028 = !{!9029, !9030}
!9029 = !DILocalVariable(name: "suite", arg: 1, scope: !9027, file: !533, line: 773, type: !8385)
!9030 = !DILocalVariable(name: "test", scope: !9027, file: !533, line: 775, type: !8337)
!9031 = !DILocation(line: 0, scope: !9027)
!9032 = !DILocation(line: 777, column: 47, scope: !9027)
!9033 = !DILocation(line: 777, column: 18, scope: !9027)
!9034 = !DILocation(line: 777, column: 60, scope: !9027)
!9035 = !DILocation(line: 777, column: 2, scope: !9027)
!9036 = !DILocation(line: 778, column: 9, scope: !9037)
!9037 = distinct !DILexicalBlock(scope: !9027, file: !533, line: 777, column: 70)
!9038 = !DILocation(line: 778, column: 16, scope: !9037)
!9039 = !DILocation(line: 778, column: 26, scope: !9037)
!9040 = !DILocation(line: 779, column: 9, scope: !9037)
!9041 = !DILocation(line: 779, column: 16, scope: !9037)
!9042 = !DILocation(line: 779, column: 27, scope: !9037)
!9043 = !DILocation(line: 780, column: 9, scope: !9037)
!9044 = !DILocation(line: 780, column: 16, scope: !9037)
!9045 = !DILocation(line: 780, column: 27, scope: !9037)
!9046 = !DILocation(line: 781, column: 9, scope: !9037)
!9047 = !DILocation(line: 781, column: 16, scope: !9037)
!9048 = !DILocation(line: 781, column: 27, scope: !9037)
!9049 = !DILocation(line: 782, column: 9, scope: !9037)
!9050 = !DILocation(line: 782, column: 16, scope: !9037)
!9051 = !DILocation(line: 782, column: 34, scope: !9037)
!9052 = distinct !{!9052, !9035, !9053}
!9053 = !DILocation(line: 783, column: 2, scope: !9027)
!9054 = !DILocation(line: 784, column: 1, scope: !9027)
!9055 = distinct !DISubprogram(name: "ztest_verify_all_test_suites_ran", scope: !533, file: !533, line: 972, type: !3148, scopeLine: 973, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !9056)
!9056 = !{!9057, !9058, !9059}
!9057 = !DILocalVariable(name: "all_tests_run", scope: !9055, file: !533, line: 974, type: !145)
!9058 = !DILocalVariable(name: "suite", scope: !9055, file: !533, line: 975, type: !8385)
!9059 = !DILocalVariable(name: "test", scope: !9055, file: !533, line: 976, type: !8337)
!9060 = !DILocation(line: 0, scope: !9055)
!9061 = !DILocation(line: 979, column: 3, scope: !9062)
!9062 = distinct !DILexicalBlock(scope: !9063, file: !533, line: 979, column: 3)
!9063 = distinct !DILexicalBlock(scope: !9064, file: !533, line: 978, column: 47)
!9064 = distinct !DILexicalBlock(scope: !9055, file: !533, line: 978, column: 6)
!9065 = !DILocation(line: 987, column: 3, scope: !9066)
!9066 = distinct !DILexicalBlock(scope: !9063, file: !533, line: 987, column: 3)
!9067 = !DILocation(line: 981, column: 15, scope: !9068)
!9068 = distinct !DILexicalBlock(scope: !9069, file: !533, line: 981, column: 8)
!9069 = distinct !DILexicalBlock(scope: !9070, file: !533, line: 980, column: 17)
!9070 = distinct !DILexicalBlock(scope: !9062, file: !533, line: 979, column: 3)
!9071 = !DILocation(line: 981, column: 22, scope: !9068)
!9072 = !DILocation(line: 981, column: 32, scope: !9068)
!9073 = !DILocation(line: 981, column: 8, scope: !9069)
!9074 = !DILocation(line: 982, column: 59, scope: !9075)
!9075 = distinct !DILexicalBlock(scope: !9068, file: !533, line: 981, column: 37)
!9076 = !DILocation(line: 982, column: 5, scope: !9075)
!9077 = !DILocation(line: 984, column: 4, scope: !9075)
!9078 = !DILocation(line: 980, column: 8, scope: !9070)
!9079 = !DILocation(line: 979, column: 52, scope: !9070)
!9080 = distinct !{!9080, !9061, !9081}
!9081 = !DILocation(line: 985, column: 3, scope: !9062)
!9082 = !DILocation(line: 988, column: 40, scope: !9083)
!9083 = distinct !DILexicalBlock(scope: !9084, file: !533, line: 987, column: 86)
!9084 = distinct !DILexicalBlock(scope: !9066, file: !533, line: 987, column: 3)
!9085 = !DILocation(line: 988, column: 12, scope: !9083)
!9086 = !DILocation(line: 989, column: 14, scope: !9087)
!9087 = distinct !DILexicalBlock(scope: !9083, file: !533, line: 989, column: 8)
!9088 = !DILocation(line: 989, column: 8, scope: !9083)
!9089 = !DILocation(line: 992, column: 17, scope: !9090)
!9090 = distinct !DILexicalBlock(scope: !9087, file: !533, line: 989, column: 23)
!9091 = !DILocation(line: 992, column: 29, scope: !9090)
!9092 = !DILocation(line: 990, column: 5, scope: !9090)
!9093 = !DILocation(line: 994, column: 4, scope: !9090)
!9094 = !DILocation(line: 987, column: 78, scope: !9084)
!9095 = !DILocation(line: 987, column: 49, scope: !9084)
!9096 = distinct !{!9096, !9065, !9097}
!9097 = !DILocation(line: 995, column: 3, scope: !9066)
!9098 = !DILocation(line: 997, column: 7, scope: !9063)
!9099 = !DILocation(line: 998, column: 16, scope: !9100)
!9100 = distinct !DILexicalBlock(scope: !9101, file: !533, line: 997, column: 23)
!9101 = distinct !DILexicalBlock(scope: !9063, file: !533, line: 997, column: 7)
!9102 = !DILocation(line: 999, column: 3, scope: !9100)
!9103 = !DILocation(line: 1002, column: 2, scope: !9104)
!9104 = distinct !DILexicalBlock(scope: !9055, file: !533, line: 1002, column: 2)
!9105 = !DILocation(line: 1003, column: 13, scope: !9106)
!9106 = distinct !DILexicalBlock(scope: !9107, file: !533, line: 1003, column: 7)
!9107 = distinct !DILexicalBlock(scope: !9108, file: !533, line: 1002, column: 85)
!9108 = distinct !DILexicalBlock(scope: !9104, file: !533, line: 1002, column: 2)
!9109 = !DILocation(line: 1003, column: 20, scope: !9106)
!9110 = !DILocation(line: 1003, column: 46, scope: !9106)
!9111 = !DILocation(line: 1003, column: 31, scope: !9106)
!9112 = !DILocation(line: 1003, column: 72, scope: !9106)
!9113 = !DILocation(line: 1003, column: 57, scope: !9106)
!9114 = !DILocation(line: 1004, column: 20, scope: !9106)
!9115 = !DILocation(line: 1003, column: 83, scope: !9106)
!9116 = !DILocation(line: 1003, column: 7, scope: !9107)
!9117 = !DILocation(line: 1005, column: 41, scope: !9118)
!9118 = distinct !DILexicalBlock(scope: !9106, file: !533, line: 1004, column: 31)
!9119 = !DILocation(line: 1005, column: 64, scope: !9118)
!9120 = !DILocation(line: 1005, column: 4, scope: !9118)
!9121 = !DILocation(line: 1006, column: 16, scope: !9118)
!9122 = !DILocation(line: 1007, column: 3, scope: !9118)
!9123 = !DILocation(line: 1002, column: 77, scope: !9108)
!9124 = !DILocation(line: 1002, column: 48, scope: !9108)
!9125 = distinct !{!9125, !9103, !9126}
!9126 = !DILocation(line: 1008, column: 2, scope: !9104)
!9127 = !DILocation(line: 1009, column: 1, scope: !9055)
!9128 = distinct !DISubprogram(name: "ztest_run_all", scope: !533, file: !533, line: 1011, type: !17, scopeLine: 1011, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !9129)
!9129 = !{!9130}
!9130 = !DILocalVariable(name: "state", arg: 1, scope: !9128, file: !533, line: 1011, type: !13)
!9131 = !DILocation(line: 0, scope: !9128)
!9132 = !DILocation(line: 1011, column: 51, scope: !9128)
!9133 = !DILocation(line: 1011, column: 41, scope: !9128)
!9134 = !DILocation(line: 1011, column: 67, scope: !9128)
!9135 = distinct !DISubprogram(name: "test_main", scope: !533, file: !533, line: 1013, type: !3148, scopeLine: 1014, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2236)
!9136 = !DILocation(line: 1015, column: 2, scope: !9135)
!9137 = !DILocation(line: 1017, column: 2, scope: !9135)
!9138 = !DILocation(line: 1018, column: 1, scope: !9135)
!9139 = distinct !DISubprogram(name: "main", scope: !533, file: !533, line: 1030, type: !3148, scopeLine: 1031, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2236)
!9140 = !DILocation(line: 1046, column: 2, scope: !9139)
!9141 = !DILocation(line: 1047, column: 2, scope: !9139)
!9142 = !DILocation(line: 1071, column: 1, scope: !9139)
!9143 = distinct !DISubprogram(name: "z_ztest_run_all", scope: !699, file: !699, line: 30, type: !17, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !9144)
!9144 = !{!9145}
!9145 = !DILocalVariable(name: "state", arg: 1, scope: !9143, file: !699, line: 30, type: !13)
!9146 = !DILocation(line: 0, scope: !9143)
!9147 = !DILocation(line: 32, column: 2, scope: !9143)
!9148 = !DILocation(line: 33, column: 1, scope: !9143)
!9149 = distinct !DISubprogram(name: "z_ztest_should_suite_run", scope: !699, file: !699, line: 45, type: !706, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !9150)
!9150 = !{!9151, !9152, !9153}
!9151 = !DILocalVariable(name: "state", arg: 1, scope: !9149, file: !699, line: 45, type: !13)
!9152 = !DILocalVariable(name: "suite", arg: 2, scope: !9149, file: !699, line: 45, type: !708)
!9153 = !DILocalVariable(name: "run_suite", scope: !9149, file: !699, line: 47, type: !145)
!9154 = !DILocation(line: 0, scope: !9149)
!9155 = !DILocation(line: 49, column: 13, scope: !9156)
!9156 = distinct !DILexicalBlock(scope: !9149, file: !699, line: 49, column: 6)
!9157 = !DILocation(line: 49, column: 23, scope: !9156)
!9158 = !DILocation(line: 49, column: 6, scope: !9149)
!9159 = !DILocation(line: 50, column: 15, scope: !9160)
!9160 = distinct !DILexicalBlock(scope: !9156, file: !699, line: 49, column: 32)
!9161 = !DILocation(line: 51, column: 2, scope: !9160)
!9162 = !DILocation(line: 53, column: 2, scope: !9149)
!9163 = distinct !DISubprogram(name: "z_ztest_should_test_run", scope: !699, file: !699, line: 65, type: !727, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !9164)
!9164 = !{!9165, !9166}
!9165 = !DILocalVariable(name: "suite", arg: 1, scope: !9163, file: !699, line: 65, type: !118)
!9166 = !DILocalVariable(name: "test", arg: 2, scope: !9163, file: !699, line: 65, type: !118)
!9167 = !DILocation(line: 0, scope: !9163)
!9168 = !DILocation(line: 67, column: 2, scope: !9163)
!9169 = distinct !DISubprogram(name: "ztest_run_test_suites", scope: !9170, file: !9170, line: 24, type: !8858, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !9171)
!9170 = !DIFile(filename: "zephyr/include/generated/syscalls/ztest_test_new.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pytest")
!9171 = !{!9172}
!9172 = !DILocalVariable(name: "state", arg: 1, scope: !9169, file: !9170, line: 24, type: !13)
!9173 = !DILocation(line: 0, scope: !9169)
!9174 = !DILocation(line: 32, column: 2, scope: !9175)
!9175 = distinct !DILexicalBlock(scope: !9169, file: !9170, line: 32, column: 2)
!9176 = !{i64 2155189468}
!9177 = !DILocation(line: 33, column: 9, scope: !9169)
!9178 = !DILocation(line: 33, column: 2, scope: !9169)
!9179 = distinct !DISubprogram(name: "ztest_relative_filename", scope: !699, file: !699, line: 20, type: !9180, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !9182)
!9180 = !DISubroutineType(types: !9181)
!9181 = !{!118, !118}
!9182 = !{!9183}
!9183 = !DILocalVariable(name: "file", arg: 1, scope: !9179, file: !699, line: 20, type: !118)
!9184 = !DILocation(line: 0, scope: !9179)
!9185 = !DILocation(line: 22, column: 2, scope: !9179)
!9186 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !844, file: !844, line: 368, type: !897, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9187)
!9187 = !{!9188}
!9188 = !DILocalVariable(name: "dev", arg: 1, scope: !9186, file: !844, line: 368, type: !873)
!9189 = !DILocation(line: 0, scope: !9186)
!9190 = !DILocation(line: 370, column: 2, scope: !9186)
!9191 = !DILocation(line: 371, column: 1, scope: !9186)
!9192 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !844, file: !844, line: 243, type: !9193, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9195)
!9193 = !DISubroutineType(types: !9194)
!9194 = !{null, !107, !107, !873}
!9195 = !{!9196, !9197, !9198, !9199, !9201}
!9196 = !DILocalVariable(name: "min", arg: 1, scope: !9192, file: !844, line: 243, type: !107)
!9197 = !DILocalVariable(name: "max", arg: 2, scope: !9192, file: !844, line: 243, type: !107)
!9198 = !DILocalVariable(name: "dev", arg: 3, scope: !9192, file: !844, line: 243, type: !873)
!9199 = !DILocalVariable(name: "data", scope: !9192, file: !844, line: 245, type: !9200)
!9200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !877, size: 32)
!9201 = !DILocalVariable(name: "line", scope: !9192, file: !844, line: 246, type: !107)
!9202 = !DILocation(line: 0, scope: !9192)
!9203 = !DILocation(line: 245, column: 38, scope: !9192)
!9204 = !DILocation(line: 249, column: 24, scope: !9205)
!9205 = distinct !DILexicalBlock(scope: !9206, file: !844, line: 249, column: 2)
!9206 = distinct !DILexicalBlock(scope: !9192, file: !844, line: 249, column: 2)
!9207 = !DILocation(line: 249, column: 2, scope: !9206)
!9208 = !DILocation(line: 251, column: 7, scope: !9209)
!9209 = distinct !DILexicalBlock(scope: !9210, file: !844, line: 251, column: 7)
!9210 = distinct !DILexicalBlock(scope: !9205, file: !844, line: 249, column: 39)
!9211 = !DILocation(line: 251, column: 7, scope: !9210)
!9212 = !DILocation(line: 253, column: 4, scope: !9213)
!9213 = distinct !DILexicalBlock(scope: !9209, file: !844, line: 251, column: 36)
!9214 = !DILocation(line: 256, column: 24, scope: !9215)
!9215 = distinct !DILexicalBlock(scope: !9213, file: !844, line: 256, column: 8)
!9216 = !DILocation(line: 256, column: 9, scope: !9215)
!9217 = !DILocation(line: 256, column: 8, scope: !9213)
!9218 = !DILocation(line: 260, column: 43, scope: !9213)
!9219 = !DILocation(line: 260, column: 4, scope: !9213)
!9220 = !DILocation(line: 261, column: 3, scope: !9213)
!9221 = !DILocation(line: 249, column: 35, scope: !9205)
!9222 = distinct !{!9222, !9207, !9223}
!9223 = !DILocation(line: 262, column: 2, scope: !9206)
!9224 = !DILocation(line: 263, column: 1, scope: !9192)
!9225 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !844, file: !844, line: 158, type: !214, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9226)
!9226 = !{!9227}
!9227 = !DILocalVariable(name: "line", arg: 1, scope: !9225, file: !844, line: 158, type: !107)
!9228 = !DILocation(line: 0, scope: !9225)
!9229 = !DILocation(line: 170, column: 38, scope: !9230)
!9230 = distinct !DILexicalBlock(scope: !9231, file: !844, line: 160, column: 17)
!9231 = distinct !DILexicalBlock(scope: !9225, file: !844, line: 160, column: 6)
!9232 = !DILocation(line: 170, column: 10, scope: !9230)
!9233 = !DILocation(line: 176, column: 1, scope: !9225)
!9234 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !844, file: !844, line: 183, type: !9235, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9237)
!9235 = !DISubroutineType(types: !9236)
!9236 = !{null, !107}
!9237 = !{!9238}
!9238 = !DILocalVariable(name: "line", arg: 1, scope: !9234, file: !844, line: 183, type: !107)
!9239 = !DILocation(line: 0, scope: !9234)
!9240 = !DILocation(line: 195, column: 28, scope: !9241)
!9241 = distinct !DILexicalBlock(scope: !9242, file: !844, line: 185, column: 17)
!9242 = distinct !DILexicalBlock(scope: !9234, file: !844, line: 185, column: 6)
!9243 = !DILocation(line: 195, column: 3, scope: !9241)
!9244 = !DILocation(line: 200, column: 1, scope: !9234)
!9245 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !9246, file: !9246, line: 910, type: !6418, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9247)
!9246 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9247 = !{!9248}
!9248 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9245, file: !9246, line: 910, type: !152)
!9249 = !DILocation(line: 0, scope: !9245)
!9250 = !DILocation(line: 912, column: 3, scope: !9245)
!9251 = !DILocation(line: 913, column: 1, scope: !9245)
!9252 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !9246, file: !9246, line: 834, type: !7608, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9253)
!9253 = !{!9254}
!9254 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9252, file: !9246, line: 834, type: !152)
!9255 = !DILocation(line: 0, scope: !9252)
!9256 = !DILocation(line: 836, column: 11, scope: !9252)
!9257 = !DILocation(line: 836, column: 40, scope: !9252)
!9258 = !DILocation(line: 836, column: 3, scope: !9252)
!9259 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !844, file: !844, line: 304, type: !897, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9260)
!9260 = !{!9261}
!9261 = !DILocalVariable(name: "dev", arg: 1, scope: !9259, file: !844, line: 304, type: !873)
!9262 = !DILocation(line: 0, scope: !9259)
!9263 = !DILocation(line: 306, column: 2, scope: !9259)
!9264 = !DILocation(line: 307, column: 1, scope: !9259)
!9265 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !844, file: !844, line: 299, type: !897, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9266)
!9266 = !{!9267}
!9267 = !DILocalVariable(name: "dev", arg: 1, scope: !9265, file: !844, line: 299, type: !873)
!9268 = !DILocation(line: 0, scope: !9265)
!9269 = !DILocation(line: 301, column: 2, scope: !9265)
!9270 = !DILocation(line: 302, column: 1, scope: !9265)
!9271 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !844, file: !844, line: 294, type: !897, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9272)
!9272 = !{!9273}
!9273 = !DILocalVariable(name: "dev", arg: 1, scope: !9271, file: !844, line: 294, type: !873)
!9274 = !DILocation(line: 0, scope: !9271)
!9275 = !DILocation(line: 296, column: 2, scope: !9271)
!9276 = !DILocation(line: 297, column: 1, scope: !9271)
!9277 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !844, file: !844, line: 397, type: !897, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9278)
!9278 = !{!9279}
!9279 = !DILocalVariable(name: "dev", arg: 1, scope: !9277, file: !844, line: 397, type: !873)
!9280 = !DILocation(line: 0, scope: !9277)
!9281 = !DILocation(line: 399, column: 2, scope: !9277)
!9282 = !DILocation(line: 400, column: 1, scope: !9277)
!9283 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !844, file: !844, line: 392, type: !897, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9284)
!9284 = !{!9285}
!9285 = !DILocalVariable(name: "dev", arg: 1, scope: !9283, file: !844, line: 392, type: !873)
!9286 = !DILocation(line: 0, scope: !9283)
!9287 = !DILocation(line: 394, column: 2, scope: !9283)
!9288 = !DILocation(line: 395, column: 1, scope: !9283)
!9289 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !844, file: !844, line: 289, type: !897, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9290)
!9290 = !{!9291}
!9291 = !DILocalVariable(name: "dev", arg: 1, scope: !9289, file: !844, line: 289, type: !873)
!9292 = !DILocation(line: 0, scope: !9289)
!9293 = !DILocation(line: 291, column: 2, scope: !9289)
!9294 = !DILocation(line: 292, column: 1, scope: !9289)
!9295 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !844, file: !844, line: 387, type: !897, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9296)
!9296 = !{!9297}
!9297 = !DILocalVariable(name: "dev", arg: 1, scope: !9295, file: !844, line: 387, type: !873)
!9298 = !DILocation(line: 0, scope: !9295)
!9299 = !DILocation(line: 389, column: 2, scope: !9295)
!9300 = !DILocation(line: 390, column: 1, scope: !9295)
!9301 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !844, file: !844, line: 382, type: !897, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9302)
!9302 = !{!9303}
!9303 = !DILocalVariable(name: "dev", arg: 1, scope: !9301, file: !844, line: 382, type: !873)
!9304 = !DILocation(line: 0, scope: !9301)
!9305 = !DILocation(line: 384, column: 2, scope: !9301)
!9306 = !DILocation(line: 385, column: 1, scope: !9301)
!9307 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !844, file: !844, line: 373, type: !897, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9308)
!9308 = !{!9309}
!9309 = !DILocalVariable(name: "dev", arg: 1, scope: !9307, file: !844, line: 373, type: !873)
!9310 = !DILocation(line: 0, scope: !9307)
!9311 = !DILocation(line: 375, column: 2, scope: !9307)
!9312 = !DILocation(line: 376, column: 1, scope: !9307)
!9313 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !844, file: !844, line: 284, type: !897, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9314)
!9314 = !{!9315}
!9315 = !DILocalVariable(name: "dev", arg: 1, scope: !9313, file: !844, line: 284, type: !873)
!9316 = !DILocation(line: 0, scope: !9313)
!9317 = !DILocation(line: 286, column: 2, scope: !9313)
!9318 = !DILocation(line: 287, column: 1, scope: !9313)
!9319 = distinct !DISubprogram(name: "stm32_exti_init", scope: !844, file: !844, line: 416, type: !871, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9320)
!9320 = !{!9321}
!9321 = !DILocalVariable(name: "dev", arg: 1, scope: !9319, file: !844, line: 416, type: !873)
!9322 = !DILocation(line: 0, scope: !9319)
!9323 = !DILocation(line: 418, column: 2, scope: !9319)
!9324 = !DILocation(line: 420, column: 2, scope: !9319)
!9325 = !DILocation(line: 0, scope: !896)
!9326 = !DILocation(line: 493, column: 2, scope: !9327)
!9327 = distinct !DILexicalBlock(scope: !896, file: !844, line: 493, column: 2)
!9328 = !DILocation(line: 497, column: 2, scope: !9329)
!9329 = distinct !DILexicalBlock(scope: !896, file: !844, line: 497, column: 2)
!9330 = !DILocation(line: 507, column: 2, scope: !9331)
!9331 = distinct !DILexicalBlock(scope: !896, file: !844, line: 507, column: 2)
!9332 = !DILocation(line: 512, column: 2, scope: !9333)
!9333 = distinct !DILexicalBlock(scope: !896, file: !844, line: 512, column: 2)
!9334 = !DILocation(line: 516, column: 2, scope: !9335)
!9335 = distinct !DILexicalBlock(scope: !896, file: !844, line: 516, column: 2)
!9336 = !DILocation(line: 523, column: 2, scope: !9337)
!9337 = distinct !DILexicalBlock(scope: !896, file: !844, line: 523, column: 2)
!9338 = !DILocation(line: 527, column: 2, scope: !9339)
!9339 = distinct !DILexicalBlock(scope: !896, file: !844, line: 527, column: 2)
!9340 = !DILocation(line: 581, column: 2, scope: !9341)
!9341 = distinct !DILexicalBlock(scope: !896, file: !844, line: 581, column: 2)
!9342 = !DILocation(line: 586, column: 2, scope: !9343)
!9343 = distinct !DILexicalBlock(scope: !896, file: !844, line: 586, column: 2)
!9344 = !DILocation(line: 591, column: 2, scope: !9345)
!9345 = distinct !DILexicalBlock(scope: !896, file: !844, line: 591, column: 2)
!9346 = !DILocation(line: 595, column: 2, scope: !9347)
!9347 = distinct !DILexicalBlock(scope: !896, file: !844, line: 595, column: 2)
!9348 = !DILocation(line: 607, column: 1, scope: !896)
!9349 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !844, file: !844, line: 112, type: !9235, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9350)
!9350 = !{!9351, !9352}
!9351 = !DILocalVariable(name: "line", arg: 1, scope: !9349, file: !844, line: 112, type: !107)
!9352 = !DILocalVariable(name: "irqnum", scope: !9349, file: !844, line: 114, type: !107)
!9353 = !DILocation(line: 0, scope: !9349)
!9354 = !DILocation(line: 122, column: 13, scope: !9355)
!9355 = distinct !DILexicalBlock(scope: !9349, file: !844, line: 122, column: 6)
!9356 = !DILocation(line: 122, column: 6, scope: !9349)
!9357 = !DILocation(line: 123, column: 3, scope: !9358)
!9358 = distinct !DILexicalBlock(scope: !9359, file: !844, line: 123, column: 3)
!9359 = distinct !DILexicalBlock(scope: !9360, file: !844, line: 123, column: 3)
!9360 = distinct !DILexicalBlock(scope: !9361, file: !844, line: 123, column: 3)
!9361 = distinct !DILexicalBlock(scope: !9355, file: !844, line: 122, column: 22)
!9362 = !DILocation(line: 121, column: 11, scope: !9349)
!9363 = !DILocation(line: 130, column: 26, scope: !9349)
!9364 = !DILocation(line: 130, column: 2, scope: !9349)
!9365 = !DILocation(line: 134, column: 2, scope: !9349)
!9366 = !DILocation(line: 135, column: 1, scope: !9349)
!9367 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !9246, file: !9246, line: 268, type: !6418, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9368)
!9368 = !{!9369}
!9369 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9367, file: !9246, line: 268, type: !152)
!9370 = !DILocation(line: 0, scope: !9367)
!9371 = !DILocation(line: 270, column: 3, scope: !9367)
!9372 = !DILocation(line: 271, column: 1, scope: !9367)
!9373 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !844, file: !844, line: 137, type: !9235, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9374)
!9374 = !{!9375}
!9375 = !DILocalVariable(name: "line", arg: 1, scope: !9373, file: !844, line: 137, type: !107)
!9376 = !DILocation(line: 0, scope: !9373)
!9377 = !DILocation(line: 141, column: 11, scope: !9378)
!9378 = distinct !DILexicalBlock(scope: !9373, file: !844, line: 141, column: 6)
!9379 = !DILocation(line: 141, column: 6, scope: !9373)
!9380 = !DILocation(line: 145, column: 28, scope: !9381)
!9381 = distinct !DILexicalBlock(scope: !9378, file: !844, line: 141, column: 17)
!9382 = !DILocation(line: 145, column: 3, scope: !9381)
!9383 = !DILocation(line: 147, column: 2, scope: !9381)
!9384 = !DILocation(line: 151, column: 1, scope: !9373)
!9385 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !9246, file: !9246, line: 309, type: !6418, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9386)
!9386 = !{!9387}
!9387 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9385, file: !9246, line: 309, type: !152)
!9388 = !DILocation(line: 0, scope: !9385)
!9389 = !DILocation(line: 311, column: 3, scope: !9385)
!9390 = !DILocation(line: 312, column: 1, scope: !9385)
!9391 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !844, file: !844, line: 202, type: !9392, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9394)
!9392 = !DISubroutineType(types: !9393)
!9393 = !{null, !107, !107}
!9394 = !{!9395, !9396}
!9395 = !DILocalVariable(name: "line", arg: 1, scope: !9391, file: !844, line: 202, type: !107)
!9396 = !DILocalVariable(name: "trigger", arg: 2, scope: !9391, file: !844, line: 202, type: !107)
!9397 = !DILocation(line: 0, scope: !9391)
!9398 = !DILocation(line: 211, column: 2, scope: !9391)
!9399 = !DILocation(line: 213, column: 36, scope: !9400)
!9400 = distinct !DILexicalBlock(scope: !9391, file: !844, line: 211, column: 19)
!9401 = !DILocation(line: 213, column: 3, scope: !9400)
!9402 = !DILocation(line: 214, column: 3, scope: !9400)
!9403 = !DILocation(line: 215, column: 3, scope: !9400)
!9404 = !DILocation(line: 217, column: 35, scope: !9400)
!9405 = !DILocation(line: 217, column: 3, scope: !9400)
!9406 = !DILocation(line: 218, column: 3, scope: !9400)
!9407 = !DILocation(line: 219, column: 3, scope: !9400)
!9408 = !DILocation(line: 221, column: 36, scope: !9400)
!9409 = !DILocation(line: 221, column: 3, scope: !9400)
!9410 = !DILocation(line: 222, column: 3, scope: !9400)
!9411 = !DILocation(line: 223, column: 3, scope: !9400)
!9412 = !DILocation(line: 225, column: 35, scope: !9400)
!9413 = !DILocation(line: 225, column: 3, scope: !9400)
!9414 = !DILocation(line: 226, column: 3, scope: !9400)
!9415 = !DILocation(line: 227, column: 3, scope: !9400)
!9416 = !DILocation(line: 232, column: 1, scope: !9391)
!9417 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !9246, file: !9246, line: 573, type: !6418, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9418)
!9418 = !{!9419}
!9419 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9417, file: !9246, line: 573, type: !152)
!9420 = !DILocation(line: 0, scope: !9417)
!9421 = !DILocation(line: 575, column: 3, scope: !9417)
!9422 = !DILocation(line: 577, column: 1, scope: !9417)
!9423 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !9246, file: !9246, line: 703, type: !6418, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9424)
!9424 = !{!9425}
!9425 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9423, file: !9246, line: 703, type: !152)
!9426 = !DILocation(line: 0, scope: !9423)
!9427 = !DILocation(line: 705, column: 3, scope: !9423)
!9428 = !DILocation(line: 706, column: 1, scope: !9423)
!9429 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !9246, file: !9246, line: 529, type: !6418, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9430)
!9430 = !{!9431}
!9431 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9429, file: !9246, line: 529, type: !152)
!9432 = !DILocation(line: 0, scope: !9429)
!9433 = !DILocation(line: 531, column: 3, scope: !9429)
!9434 = !DILocation(line: 533, column: 1, scope: !9429)
!9435 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !9246, file: !9246, line: 661, type: !6418, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9436)
!9436 = !{!9437}
!9437 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9435, file: !9246, line: 661, type: !152)
!9438 = !DILocation(line: 0, scope: !9435)
!9439 = !DILocation(line: 663, column: 3, scope: !9435)
!9440 = !DILocation(line: 664, column: 1, scope: !9435)
!9441 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !844, file: !844, line: 433, type: !9442, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9444)
!9442 = !DISubroutineType(types: !9443)
!9443 = !{!107, !107, !884, !106}
!9444 = !{!9445, !9446, !9447, !9448, !9450}
!9445 = !DILocalVariable(name: "line", arg: 1, scope: !9441, file: !844, line: 433, type: !107)
!9446 = !DILocalVariable(name: "cb", arg: 2, scope: !9441, file: !844, line: 433, type: !884)
!9447 = !DILocalVariable(name: "arg", arg: 3, scope: !9441, file: !844, line: 433, type: !106)
!9448 = !DILocalVariable(name: "dev", scope: !9441, file: !844, line: 435, type: !9449)
!9449 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !873)
!9450 = !DILocalVariable(name: "data", scope: !9441, file: !844, line: 436, type: !9200)
!9451 = !DILocation(line: 0, scope: !9441)
!9452 = !DILocation(line: 438, column: 21, scope: !9453)
!9453 = distinct !DILexicalBlock(scope: !9441, file: !844, line: 438, column: 6)
!9454 = !DILocation(line: 438, column: 6, scope: !9453)
!9455 = !DILocation(line: 438, column: 6, scope: !9441)
!9456 = !DILocation(line: 442, column: 20, scope: !9441)
!9457 = !DILocation(line: 443, column: 17, scope: !9441)
!9458 = !DILocation(line: 443, column: 22, scope: !9441)
!9459 = !DILocation(line: 445, column: 2, scope: !9441)
!9460 = !DILocation(line: 446, column: 1, scope: !9441)
!9461 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !844, file: !844, line: 448, type: !9235, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9462)
!9462 = !{!9463, !9464, !9465}
!9463 = !DILocalVariable(name: "line", arg: 1, scope: !9461, file: !844, line: 448, type: !107)
!9464 = !DILocalVariable(name: "dev", scope: !9461, file: !844, line: 450, type: !9449)
!9465 = !DILocalVariable(name: "data", scope: !9461, file: !844, line: 451, type: !9200)
!9466 = !DILocation(line: 0, scope: !9461)
!9467 = !DILocation(line: 453, column: 17, scope: !9461)
!9468 = !DILocation(line: 453, column: 20, scope: !9461)
!9469 = !DILocation(line: 454, column: 17, scope: !9461)
!9470 = !DILocation(line: 454, column: 22, scope: !9461)
!9471 = !DILocation(line: 455, column: 1, scope: !9461)
!9472 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !1036, file: !1036, line: 183, type: !1074, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !9473)
!9473 = !{!9474, !9475, !9476, !9477, !9478}
!9474 = !DILocalVariable(name: "dev", arg: 1, scope: !9472, file: !1036, line: 183, type: !1065)
!9475 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9472, file: !1036, line: 184, type: !1076)
!9476 = !DILocalVariable(name: "pclken", scope: !9472, file: !1036, line: 186, type: !1026)
!9477 = !DILocalVariable(name: "reg", scope: !9472, file: !1036, line: 187, type: !1616)
!9478 = !DILocalVariable(name: "reg_val", scope: !9472, file: !1036, line: 188, type: !152)
!9479 = !DILocation(line: 0, scope: !9472)
!9480 = !DILocation(line: 192, column: 6, scope: !9481)
!9481 = distinct !DILexicalBlock(scope: !9472, file: !1036, line: 192, column: 6)
!9482 = !DILocation(line: 192, column: 6, scope: !9472)
!9483 = !DILocation(line: 197, column: 52, scope: !9472)
!9484 = !DILocation(line: 197, column: 8, scope: !9472)
!9485 = !DILocation(line: 198, column: 12, scope: !9472)
!9486 = !DILocation(line: 199, column: 21, scope: !9472)
!9487 = !DILocation(line: 199, column: 10, scope: !9472)
!9488 = !DILocation(line: 200, column: 7, scope: !9472)
!9489 = !DILocation(line: 202, column: 2, scope: !9472)
!9490 = !DILocation(line: 203, column: 1, scope: !9472)
!9491 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !1036, file: !1036, line: 205, type: !1074, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !9492)
!9492 = !{!9493, !9494, !9495, !9496, !9497}
!9493 = !DILocalVariable(name: "dev", arg: 1, scope: !9491, file: !1036, line: 205, type: !1065)
!9494 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9491, file: !1036, line: 206, type: !1076)
!9495 = !DILocalVariable(name: "pclken", scope: !9491, file: !1036, line: 208, type: !1026)
!9496 = !DILocalVariable(name: "reg", scope: !9491, file: !1036, line: 209, type: !1616)
!9497 = !DILocalVariable(name: "reg_val", scope: !9491, file: !1036, line: 210, type: !152)
!9498 = !DILocation(line: 0, scope: !9491)
!9499 = !DILocation(line: 214, column: 6, scope: !9500)
!9500 = distinct !DILexicalBlock(scope: !9491, file: !1036, line: 214, column: 6)
!9501 = !DILocation(line: 214, column: 6, scope: !9491)
!9502 = !DILocation(line: 219, column: 52, scope: !9491)
!9503 = !DILocation(line: 219, column: 8, scope: !9491)
!9504 = !DILocation(line: 220, column: 12, scope: !9491)
!9505 = !DILocation(line: 221, column: 22, scope: !9491)
!9506 = !DILocation(line: 221, column: 13, scope: !9491)
!9507 = !DILocation(line: 221, column: 10, scope: !9491)
!9508 = !DILocation(line: 222, column: 7, scope: !9491)
!9509 = !DILocation(line: 224, column: 2, scope: !9491)
!9510 = !DILocation(line: 225, column: 1, scope: !9491)
!9511 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !1036, file: !1036, line: 262, type: !1090, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !9512)
!9512 = !{!9513, !9514, !9515, !9516, !9517, !9518, !9519, !9520}
!9513 = !DILocalVariable(name: "clock", arg: 1, scope: !9511, file: !1036, line: 262, type: !1065)
!9514 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9511, file: !1036, line: 263, type: !1076)
!9515 = !DILocalVariable(name: "rate", arg: 3, scope: !9511, file: !1036, line: 264, type: !1032)
!9516 = !DILocalVariable(name: "pclken", scope: !9511, file: !1036, line: 266, type: !1026)
!9517 = !DILocalVariable(name: "ahb_clock", scope: !9511, file: !1036, line: 273, type: !152)
!9518 = !DILocalVariable(name: "apb1_clock", scope: !9511, file: !1036, line: 274, type: !152)
!9519 = !DILocalVariable(name: "apb2_clock", scope: !9511, file: !1036, line: 276, type: !152)
!9520 = !DILocalVariable(name: "ahb3_clock", scope: !9511, file: !1036, line: 286, type: !152)
!9521 = !DILocation(line: 0, scope: !9511)
!9522 = !DILocation(line: 273, column: 23, scope: !9511)
!9523 = !DILocation(line: 299, column: 18, scope: !9511)
!9524 = !DILocation(line: 299, column: 2, scope: !9511)
!9525 = !DILocation(line: 274, column: 24, scope: !9511)
!9526 = !DILocation(line: 319, column: 3, scope: !9527)
!9527 = distinct !DILexicalBlock(scope: !9511, file: !1036, line: 299, column: 23)
!9528 = !DILocation(line: 276, column: 24, scope: !9511)
!9529 = !DILocation(line: 323, column: 3, scope: !9527)
!9530 = !DILocation(line: 346, column: 33, scope: !9527)
!9531 = !DILocation(line: 346, column: 11, scope: !9527)
!9532 = !DILocation(line: 350, column: 3, scope: !9527)
!9533 = !DILocation(line: 354, column: 33, scope: !9527)
!9534 = !DILocation(line: 354, column: 11, scope: !9527)
!9535 = !DILocation(line: 358, column: 3, scope: !9527)
!9536 = !DILocation(line: 374, column: 3, scope: !9527)
!9537 = !DILocation(line: 379, column: 3, scope: !9527)
!9538 = !DILocation(line: 0, scope: !9527)
!9539 = !DILocation(line: 396, column: 1, scope: !9511)
!9540 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !1036, file: !1036, line: 227, type: !1106, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !9541)
!9541 = !{!9542, !9543, !9544, !9545, !9546, !9547, !9548, !9549}
!9542 = !DILocalVariable(name: "dev", arg: 1, scope: !9540, file: !1036, line: 227, type: !1065)
!9543 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9540, file: !1036, line: 228, type: !1076)
!9544 = !DILocalVariable(name: "data", arg: 3, scope: !9540, file: !1036, line: 229, type: !106)
!9545 = !DILocalVariable(name: "pclken", scope: !9540, file: !1036, line: 233, type: !1026)
!9546 = !DILocalVariable(name: "reg", scope: !9540, file: !1036, line: 234, type: !1616)
!9547 = !DILocalVariable(name: "reg_val", scope: !9540, file: !1036, line: 235, type: !152)
!9548 = !DILocalVariable(name: "dt_val", scope: !9540, file: !1036, line: 235, type: !152)
!9549 = !DILocalVariable(name: "err", scope: !9540, file: !1036, line: 236, type: !107)
!9550 = !DILocation(line: 0, scope: !9540)
!9551 = !DILocation(line: 241, column: 30, scope: !9540)
!9552 = !DILocation(line: 241, column: 8, scope: !9540)
!9553 = !DILocation(line: 242, column: 10, scope: !9554)
!9554 = distinct !DILexicalBlock(scope: !9540, file: !1036, line: 242, column: 6)
!9555 = !DILocation(line: 242, column: 6, scope: !9540)
!9556 = !DILocation(line: 247, column: 11, scope: !9540)
!9557 = !DILocation(line: 248, column: 6, scope: !9540)
!9558 = !DILocation(line: 247, column: 44, scope: !9540)
!9559 = !DILocation(line: 250, column: 6, scope: !9540)
!9560 = !DILocation(line: 249, column: 52, scope: !9540)
!9561 = !DILocation(line: 249, column: 8, scope: !9540)
!9562 = !DILocation(line: 251, column: 12, scope: !9540)
!9563 = !DILocation(line: 252, column: 10, scope: !9540)
!9564 = !DILocation(line: 253, column: 7, scope: !9540)
!9565 = !DILocation(line: 255, column: 2, scope: !9540)
!9566 = !DILocation(line: 260, column: 1, scope: !9540)
!9567 = distinct !DISubprogram(name: "enabled_clock", scope: !1036, file: !1036, line: 100, type: !9568, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !9570)
!9568 = !DISubroutineType(types: !9569)
!9569 = !{!107, !152}
!9570 = !{!9571, !9572}
!9571 = !DILocalVariable(name: "src_clk", arg: 1, scope: !9567, file: !1036, line: 100, type: !152)
!9572 = !DILocalVariable(name: "r", scope: !9567, file: !1036, line: 102, type: !107)
!9573 = !DILocation(line: 0, scope: !9567)
!9574 = !DILocation(line: 104, column: 2, scope: !9567)
!9575 = !DILocation(line: 180, column: 2, scope: !9567)
!9576 = !DILocation(line: 181, column: 1, scope: !9567)
!9577 = distinct !DISubprogram(name: "get_bus_clock", scope: !1036, file: !1036, line: 79, type: !9578, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !9580)
!9578 = !DISubroutineType(types: !9579)
!9579 = !{!152, !152, !152}
!9580 = !{!9581, !9582}
!9581 = !DILocalVariable(name: "clock", arg: 1, scope: !9577, file: !1036, line: 79, type: !152)
!9582 = !DILocalVariable(name: "prescaler", arg: 2, scope: !9577, file: !1036, line: 79, type: !152)
!9583 = !DILocation(line: 0, scope: !9577)
!9584 = !DILocation(line: 81, column: 15, scope: !9577)
!9585 = !DILocation(line: 81, column: 2, scope: !9577)
!9586 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !1036, file: !1036, line: 68, type: !9587, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !9589)
!9587 = !DISubroutineType(types: !9588)
!9588 = !{!152, !152, !107, !107, !107}
!9589 = !{!9590, !9591, !9592, !9593}
!9590 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !9586, file: !1036, line: 68, type: !152)
!9591 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !9586, file: !1036, line: 69, type: !107)
!9592 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !9586, file: !1036, line: 70, type: !107)
!9593 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !9586, file: !1036, line: 71, type: !107)
!9594 = !DILocation(line: 0, scope: !9586)
!9595 = !DILocation(line: 75, column: 22, scope: !9586)
!9596 = !DILocation(line: 76, column: 13, scope: !9586)
!9597 = !DILocation(line: 75, column: 34, scope: !9586)
!9598 = !DILocation(line: 75, column: 2, scope: !9586)
!9599 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !1036, file: !1036, line: 641, type: !1063, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !9600)
!9600 = !{!9601, !9602, !9603}
!9601 = !DILocalVariable(name: "dev", arg: 1, scope: !9599, file: !1036, line: 641, type: !1065)
!9602 = !DILocalVariable(name: "old_flash_freq", scope: !9599, file: !1036, line: 664, type: !152)
!9603 = !DILocalVariable(name: "new_flash_freq", scope: !9599, file: !1036, line: 665, type: !152)
!9604 = !DILocation(line: 0, scope: !9599)
!9605 = !DILocation(line: 646, column: 2, scope: !9599)
!9606 = !DILocation(line: 667, column: 19, scope: !9599)
!9607 = !DILocation(line: 674, column: 21, scope: !9608)
!9608 = distinct !DILexicalBlock(scope: !9599, file: !1036, line: 674, column: 6)
!9609 = !DILocation(line: 674, column: 6, scope: !9599)
!9610 = !DILocation(line: 675, column: 3, scope: !9611)
!9611 = distinct !DILexicalBlock(scope: !9608, file: !1036, line: 674, column: 59)
!9612 = !DILocation(line: 676, column: 2, scope: !9611)
!9613 = !DILocation(line: 680, column: 2, scope: !9599)
!9614 = !DILocation(line: 683, column: 2, scope: !9599)
!9615 = !DILocation(line: 690, column: 3, scope: !9616)
!9616 = distinct !DILexicalBlock(scope: !9617, file: !1036, line: 689, column: 9)
!9617 = distinct !DILexicalBlock(scope: !9599, file: !1036, line: 685, column: 6)
!9618 = !DILocation(line: 695, column: 2, scope: !9599)
!9619 = !DILocation(line: 696, column: 2, scope: !9599)
!9620 = !DILocation(line: 696, column: 9, scope: !9599)
!9621 = !DILocation(line: 696, column: 34, scope: !9599)
!9622 = distinct !{!9622, !9619, !9623}
!9623 = !DILocation(line: 697, column: 2, scope: !9599)
!9624 = !DILocation(line: 720, column: 21, scope: !9625)
!9625 = distinct !DILexicalBlock(scope: !9599, file: !1036, line: 720, column: 6)
!9626 = !DILocation(line: 720, column: 6, scope: !9599)
!9627 = !DILocation(line: 721, column: 3, scope: !9628)
!9628 = distinct !DILexicalBlock(scope: !9625, file: !1036, line: 720, column: 60)
!9629 = !DILocation(line: 722, column: 2, scope: !9628)
!9630 = !DILocation(line: 725, column: 18, scope: !9599)
!9631 = !DILocation(line: 728, column: 2, scope: !9599)
!9632 = !DILocation(line: 730, column: 2, scope: !9599)
!9633 = !DILocation(line: 745, column: 2, scope: !9599)
!9634 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !9635, file: !9635, line: 3275, type: !6408, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !2236)
!9635 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9636 = !DILocation(line: 3277, column: 21, scope: !9634)
!9637 = !DILocation(line: 3277, column: 3, scope: !9634)
!9638 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !1036, file: !1036, line: 507, type: !3148, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !2236)
!9639 = !DILocation(line: 516, column: 4, scope: !9640)
!9640 = distinct !DILexicalBlock(scope: !9641, file: !1036, line: 515, column: 10)
!9641 = distinct !DILexicalBlock(scope: !9642, file: !1036, line: 513, column: 7)
!9642 = distinct !DILexicalBlock(scope: !9643, file: !1036, line: 510, column: 37)
!9643 = distinct !DILexicalBlock(scope: !9638, file: !1036, line: 510, column: 6)
!9644 = !DILocation(line: 526, column: 3, scope: !9642)
!9645 = !DILocation(line: 527, column: 3, scope: !9642)
!9646 = !DILocation(line: 527, column: 10, scope: !9642)
!9647 = !DILocation(line: 527, column: 31, scope: !9642)
!9648 = distinct !{!9648, !9645, !9649}
!9649 = !DILocation(line: 529, column: 3, scope: !9642)
!9650 = !DILocation(line: 583, column: 3, scope: !9651)
!9651 = distinct !DILexicalBlock(scope: !9652, file: !1036, line: 577, column: 37)
!9652 = distinct !DILexicalBlock(scope: !9638, file: !1036, line: 577, column: 6)
!9653 = !DILocation(line: 584, column: 3, scope: !9651)
!9654 = !DILocation(line: 584, column: 10, scope: !9651)
!9655 = !DILocation(line: 584, column: 31, scope: !9651)
!9656 = distinct !{!9656, !9653, !9657}
!9657 = !DILocation(line: 585, column: 3, scope: !9651)
!9658 = !DILocation(line: 627, column: 1, scope: !9638)
!9659 = distinct !DISubprogram(name: "set_up_plls", scope: !1036, file: !1036, line: 448, type: !3148, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !2236)
!9660 = !DILocation(line: 460, column: 6, scope: !9661)
!9661 = distinct !DILexicalBlock(scope: !9659, file: !1036, line: 460, column: 6)
!9662 = !DILocation(line: 460, column: 31, scope: !9661)
!9663 = !DILocation(line: 460, column: 6, scope: !9659)
!9664 = !DILocation(line: 461, column: 3, scope: !9665)
!9665 = distinct !DILexicalBlock(scope: !9661, file: !1036, line: 460, column: 67)
!9666 = !DILocation(line: 462, column: 3, scope: !9665)
!9667 = !DILocation(line: 463, column: 2, scope: !9665)
!9668 = !DILocation(line: 464, column: 2, scope: !9659)
!9669 = !DILocation(line: 488, column: 2, scope: !9659)
!9670 = !DILocation(line: 492, column: 2, scope: !9659)
!9671 = !DILocation(line: 496, column: 2, scope: !9659)
!9672 = !DILocation(line: 499, column: 2, scope: !9659)
!9673 = !DILocation(line: 500, column: 2, scope: !9659)
!9674 = !DILocation(line: 500, column: 9, scope: !9659)
!9675 = !DILocation(line: 500, column: 30, scope: !9659)
!9676 = distinct !{!9676, !9673, !9677}
!9677 = !DILocation(line: 502, column: 2, scope: !9659)
!9678 = !DILocation(line: 505, column: 1, scope: !9659)
!9679 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !9635, file: !9635, line: 3224, type: !6418, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !9680)
!9680 = !{!9681}
!9681 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !9679, file: !9635, line: 3224, type: !152)
!9682 = !DILocation(line: 0, scope: !9679)
!9683 = !DILocation(line: 3226, column: 3, scope: !9679)
!9684 = !DILocation(line: 3227, column: 1, scope: !9679)
!9685 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !9635, file: !9635, line: 3188, type: !6418, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !9686)
!9686 = !{!9687}
!9687 = !DILocalVariable(name: "Source", arg: 1, scope: !9685, file: !9635, line: 3188, type: !152)
!9688 = !DILocation(line: 0, scope: !9685)
!9689 = !DILocation(line: 3190, column: 3, scope: !9685)
!9690 = !DILocation(line: 3191, column: 1, scope: !9685)
!9691 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !9635, file: !9635, line: 3204, type: !6408, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !2236)
!9692 = !DILocation(line: 3206, column: 21, scope: !9691)
!9693 = !DILocation(line: 3206, column: 3, scope: !9691)
!9694 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !9635, file: !9635, line: 3240, type: !6418, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !9695)
!9695 = !{!9696}
!9696 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !9694, file: !9635, line: 3240, type: !152)
!9697 = !DILocation(line: 0, scope: !9694)
!9698 = !DILocation(line: 3242, column: 3, scope: !9694)
!9699 = !DILocation(line: 3243, column: 1, scope: !9694)
!9700 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !9635, file: !9635, line: 3256, type: !6418, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !9701)
!9701 = !{!9702}
!9702 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !9700, file: !9635, line: 3256, type: !152)
!9703 = !DILocation(line: 0, scope: !9700)
!9704 = !DILocation(line: 3258, column: 3, scope: !9700)
!9705 = !DILocation(line: 3259, column: 1, scope: !9700)
!9706 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !1036, file: !1036, line: 409, type: !3148, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !2236)
!9707 = !DILocation(line: 412, column: 6, scope: !9708)
!9708 = distinct !DILexicalBlock(scope: !9706, file: !1036, line: 412, column: 6)
!9709 = !DILocation(line: 412, column: 27, scope: !9708)
!9710 = !DILocation(line: 412, column: 6, scope: !9706)
!9711 = !DILocation(line: 414, column: 3, scope: !9712)
!9712 = distinct !DILexicalBlock(scope: !9708, file: !1036, line: 412, column: 33)
!9713 = !DILocation(line: 415, column: 3, scope: !9712)
!9714 = !DILocation(line: 415, column: 10, scope: !9712)
!9715 = !DILocation(line: 415, column: 31, scope: !9712)
!9716 = distinct !{!9716, !9713, !9717}
!9717 = !DILocation(line: 417, column: 3, scope: !9712)
!9718 = !DILocation(line: 421, column: 2, scope: !9706)
!9719 = !DILocation(line: 422, column: 2, scope: !9706)
!9720 = !DILocation(line: 422, column: 9, scope: !9706)
!9721 = !DILocation(line: 422, column: 34, scope: !9706)
!9722 = distinct !{!9722, !9719, !9723}
!9723 = !DILocation(line: 423, column: 2, scope: !9706)
!9724 = !DILocation(line: 424, column: 1, scope: !9706)
!9725 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !9635, file: !9635, line: 4195, type: !3148, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !2236)
!9726 = !DILocation(line: 4197, column: 3, scope: !9725)
!9727 = !DILocation(line: 4198, column: 1, scope: !9725)
!9728 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !9635, file: !9635, line: 4184, type: !3148, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !2236)
!9729 = !DILocation(line: 4186, column: 3, scope: !9728)
!9730 = !DILocation(line: 4187, column: 1, scope: !9728)
!9731 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !9635, file: !9635, line: 4205, type: !6408, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !2236)
!9732 = !DILocation(line: 4207, column: 11, scope: !9731)
!9733 = !DILocation(line: 4207, column: 44, scope: !9731)
!9734 = !DILocation(line: 4207, column: 3, scope: !9731)
!9735 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !9635, file: !9635, line: 3007, type: !6408, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !2236)
!9736 = !DILocation(line: 3009, column: 11, scope: !9735)
!9737 = !DILocation(line: 3009, column: 44, scope: !9735)
!9738 = !DILocation(line: 3009, column: 3, scope: !9735)
!9739 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !9635, file: !9635, line: 2987, type: !3148, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !2236)
!9740 = !DILocation(line: 2989, column: 3, scope: !9739)
!9741 = !DILocation(line: 2990, column: 1, scope: !9739)
!9742 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !9635, file: !9635, line: 2939, type: !3148, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !2236)
!9743 = !DILocation(line: 2941, column: 3, scope: !9742)
!9744 = !DILocation(line: 2942, column: 1, scope: !9742)
!9745 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !9635, file: !9635, line: 2949, type: !3148, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !2236)
!9746 = !DILocation(line: 2951, column: 3, scope: !9745)
!9747 = !DILocation(line: 2952, column: 1, scope: !9745)
!9748 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !9635, file: !9635, line: 2969, type: !6408, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !2236)
!9749 = !DILocation(line: 2971, column: 11, scope: !9748)
!9750 = !DILocation(line: 2971, column: 44, scope: !9748)
!9751 = !DILocation(line: 2971, column: 3, scope: !9748)
!9752 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !9635, file: !9635, line: 3143, type: !3148, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !2236)
!9753 = !DILocation(line: 3145, column: 3, scope: !9752)
!9754 = !DILocation(line: 3146, column: 1, scope: !9752)
!9755 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !9635, file: !9635, line: 3163, type: !6408, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !2236)
!9756 = !DILocation(line: 3165, column: 11, scope: !9755)
!9757 = !DILocation(line: 3165, column: 46, scope: !9755)
!9758 = !DILocation(line: 3165, column: 3, scope: !9755)
!9759 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !9760, file: !9760, line: 40, type: !6408, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2935, retainedNodes: !2236)
!9760 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9761 = !DILocation(line: 45, column: 3, scope: !9762)
!9762 = distinct !DILexicalBlock(scope: !9763, file: !9760, line: 44, column: 44)
!9763 = distinct !DILexicalBlock(scope: !9764, file: !9760, line: 44, column: 13)
!9764 = distinct !DILexicalBlock(scope: !9759, file: !9760, line: 42, column: 6)
!9765 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !9760, file: !9760, line: 56, type: !3148, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2935, retainedNodes: !2236)
!9766 = !DILocation(line: 58, column: 2, scope: !9765)
!9767 = !DILocation(line: 62, column: 1, scope: !9765)
!9768 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !9635, file: !9635, line: 4304, type: !9769, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2935, retainedNodes: !9771)
!9769 = !DISubroutineType(types: !9770)
!9770 = !{null, !152, !152, !152, !152}
!9771 = !{!9772, !9773, !9774, !9775}
!9772 = !DILocalVariable(name: "Source", arg: 1, scope: !9768, file: !9635, line: 4304, type: !152)
!9773 = !DILocalVariable(name: "PLLM", arg: 2, scope: !9768, file: !9635, line: 4304, type: !152)
!9774 = !DILocalVariable(name: "PLLN", arg: 3, scope: !9768, file: !9635, line: 4304, type: !152)
!9775 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !9768, file: !9635, line: 4304, type: !152)
!9776 = !DILocation(line: 0, scope: !9768)
!9777 = !DILocation(line: 4306, column: 3, scope: !9768)
!9778 = !DILocation(line: 4308, column: 3, scope: !9768)
!9779 = !DILocation(line: 4310, column: 3, scope: !9768)
!9780 = !DILocation(line: 4312, column: 1, scope: !9768)
!9781 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !9760, file: !9760, line: 69, type: !3148, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2935, retainedNodes: !2236)
!9782 = !DILocation(line: 72, column: 2, scope: !9781)
!9783 = !DILocation(line: 73, column: 1, scope: !9781)
!9784 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !9785, file: !9785, line: 1185, type: !6418, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2935, retainedNodes: !9786)
!9785 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9786 = !{!9787, !9788}
!9787 = !DILocalVariable(name: "Periphs", arg: 1, scope: !9784, file: !9785, line: 1185, type: !152)
!9788 = !DILocalVariable(name: "tmpreg", scope: !9784, file: !9785, line: 1187, type: !227)
!9789 = !DILocation(line: 0, scope: !9784)
!9790 = !DILocation(line: 1187, column: 3, scope: !9784)
!9791 = !DILocation(line: 1187, column: 17, scope: !9784)
!9792 = !DILocation(line: 1188, column: 3, scope: !9784)
!9793 = !DILocation(line: 1190, column: 12, scope: !9784)
!9794 = !DILocation(line: 1190, column: 10, scope: !9784)
!9795 = !DILocation(line: 1191, column: 9, scope: !9784)
!9796 = !DILocation(line: 1192, column: 1, scope: !9784)
!9797 = distinct !DISubprogram(name: "uart_console_init", scope: !1167, file: !1167, line: 588, type: !1144, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1110, retainedNodes: !9798)
!9798 = !{!9799}
!9799 = !DILocalVariable(name: "arg", arg: 1, scope: !9797, file: !1167, line: 588, type: !1122)
!9800 = !DILocation(line: 0, scope: !9797)
!9801 = !DILocation(line: 593, column: 7, scope: !9802)
!9802 = distinct !DILexicalBlock(scope: !9797, file: !1167, line: 593, column: 6)
!9803 = !DILocation(line: 593, column: 6, scope: !9797)
!9804 = !DILocation(line: 597, column: 2, scope: !9797)
!9805 = !DILocation(line: 599, column: 2, scope: !9797)
!9806 = !DILocation(line: 600, column: 1, scope: !9797)
!9807 = distinct !DISubprogram(name: "device_is_ready", scope: !9808, file: !9808, line: 47, type: !9809, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1110, retainedNodes: !9811)
!9808 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pytest")
!9809 = !DISubroutineType(types: !9810)
!9810 = !{!145, !1122}
!9811 = !{!9812}
!9812 = !DILocalVariable(name: "dev", arg: 1, scope: !9807, file: !9808, line: 47, type: !1122)
!9813 = !DILocation(line: 0, scope: !9807)
!9814 = !DILocation(line: 55, column: 2, scope: !9815)
!9815 = distinct !DILexicalBlock(scope: !9807, file: !9808, line: 55, column: 2)
!9816 = !{i64 2155298607}
!9817 = !DILocation(line: 56, column: 9, scope: !9807)
!9818 = !DILocation(line: 56, column: 2, scope: !9807)
!9819 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1167, file: !1167, line: 573, type: !3148, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1110, retainedNodes: !2236)
!9820 = !DILocation(line: 576, column: 2, scope: !9819)
!9821 = !DILocation(line: 579, column: 2, scope: !9819)
!9822 = !DILocation(line: 581, column: 1, scope: !9819)
!9823 = distinct !DISubprogram(name: "console_out", scope: !1167, file: !1167, line: 77, type: !214, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1110, retainedNodes: !9824)
!9824 = !{!9825}
!9825 = !DILocalVariable(name: "c", arg: 1, scope: !9823, file: !1167, line: 77, type: !107)
!9826 = !DILocation(line: 0, scope: !9823)
!9827 = !DILocation(line: 89, column: 11, scope: !9828)
!9828 = distinct !DILexicalBlock(scope: !9823, file: !1167, line: 89, column: 6)
!9829 = !DILocation(line: 89, column: 6, scope: !9823)
!9830 = !DILocation(line: 90, column: 3, scope: !9831)
!9831 = distinct !DILexicalBlock(scope: !9828, file: !1167, line: 89, column: 17)
!9832 = !DILocation(line: 91, column: 2, scope: !9831)
!9833 = !DILocation(line: 92, column: 34, scope: !9823)
!9834 = !DILocation(line: 92, column: 2, scope: !9823)
!9835 = !DILocation(line: 94, column: 2, scope: !9823)
!9836 = distinct !DISubprogram(name: "uart_poll_out", scope: !9837, file: !9837, line: 95, type: !1140, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1110, retainedNodes: !9838)
!9837 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pytest")
!9838 = !{!9839, !9840}
!9839 = !DILocalVariable(name: "dev", arg: 1, scope: !9836, file: !9837, line: 95, type: !1122)
!9840 = !DILocalVariable(name: "out_char", arg: 2, scope: !9836, file: !9837, line: 95, type: !196)
!9841 = !DILocation(line: 0, scope: !9836)
!9842 = !DILocation(line: 105, column: 2, scope: !9843)
!9843 = distinct !DILexicalBlock(scope: !9836, file: !9837, line: 105, column: 2)
!9844 = !{i64 2155381998}
!9845 = !DILocation(line: 106, column: 2, scope: !9836)
!9846 = !DILocation(line: 107, column: 1, scope: !9836)
!9847 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !1116, file: !1116, line: 574, type: !1140, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1110, retainedNodes: !9848)
!9848 = !{!9849, !9850, !9851}
!9849 = !DILocalVariable(name: "dev", arg: 1, scope: !9847, file: !1116, line: 574, type: !1122)
!9850 = !DILocalVariable(name: "out_char", arg: 2, scope: !9847, file: !1116, line: 575, type: !196)
!9851 = !DILocalVariable(name: "api", scope: !9847, file: !1116, line: 577, type: !1113)
!9852 = !DILocation(line: 0, scope: !9847)
!9853 = !DILocation(line: 578, column: 40, scope: !9847)
!9854 = !DILocation(line: 580, column: 7, scope: !9847)
!9855 = !DILocation(line: 580, column: 2, scope: !9847)
!9856 = !DILocation(line: 581, column: 1, scope: !9847)
!9857 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !247, file: !247, line: 730, type: !9809, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1110, retainedNodes: !9858)
!9858 = !{!9859}
!9859 = !DILocalVariable(name: "dev", arg: 1, scope: !9857, file: !247, line: 730, type: !1122)
!9860 = !DILocation(line: 0, scope: !9857)
!9861 = !DILocation(line: 732, column: 9, scope: !9857)
!9862 = !DILocation(line: 732, column: 2, scope: !9857)
!9863 = distinct !DISubprogram(name: "uart_register_input", scope: !1167, file: !1167, line: 560, type: !9864, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1110, retainedNodes: !9911)
!9864 = !DISubroutineType(types: !9865)
!9865 = !{null, !9866, !9866, !9908}
!9866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9867, size: 32)
!9867 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !406, line: 2208, size: 160, elements: !9868)
!9868 = !{!9869}
!9869 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !9867, file: !406, line: 2209, baseType: !9870, size: 160)
!9870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !406, line: 1709, size: 160, elements: !9871)
!9871 = !{!9872, !9885, !9889}
!9872 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !9870, file: !406, line: 1710, baseType: !9873, size: 64)
!9873 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !9874, line: 46, baseType: !9875)
!9874 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !9874, line: 41, size: 64, elements: !9876)
!9876 = !{!9877, !9884}
!9877 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9875, file: !9874, line: 42, baseType: !9878, size: 32)
!9878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9879, size: 32)
!9879 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !9874, line: 39, baseType: !9880)
!9880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !9874, line: 35, size: 32, elements: !9881)
!9881 = !{!9882}
!9882 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !9880, file: !9874, line: 36, baseType: !9883, size: 32)
!9883 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !9874, line: 32, baseType: !152)
!9884 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9875, file: !9874, line: 43, baseType: !9878, size: 32, offset: 32)
!9885 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9870, file: !406, line: 1711, baseType: !9886, size: 32, offset: 64)
!9886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !9887)
!9887 = !{!9888}
!9888 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !9886, file: !420, line: 52, baseType: !22, size: 32)
!9889 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9870, file: !406, line: 1712, baseType: !9890, size: 64, offset: 96)
!9890 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !9891)
!9891 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !9892)
!9892 = !{!9893}
!9893 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !9891, file: !345, line: 232, baseType: !9894, size: 64)
!9894 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !9895)
!9895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !9896)
!9896 = !{!9897, !9903}
!9897 = !DIDerivedType(tag: DW_TAG_member, scope: !9895, file: !319, line: 38, baseType: !9898, size: 32)
!9898 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9895, file: !319, line: 38, size: 32, elements: !9899)
!9899 = !{!9900, !9902}
!9900 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9898, file: !319, line: 39, baseType: !9901, size: 32)
!9901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9895, size: 32)
!9902 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9898, file: !319, line: 40, baseType: !9901, size: 32)
!9903 = !DIDerivedType(tag: DW_TAG_member, scope: !9895, file: !319, line: 42, baseType: !9904, size: 32, offset: 32)
!9904 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9895, file: !319, line: 42, size: 32, elements: !9905)
!9905 = !{!9906, !9907}
!9906 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9904, file: !319, line: 43, baseType: !9901, size: 32)
!9907 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9904, file: !319, line: 44, baseType: !9901, size: 32)
!9908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9909, size: 32)
!9909 = !DISubroutineType(types: !9910)
!9910 = !{!195, !193, !195}
!9911 = !{!9912, !9913, !9914}
!9912 = !DILocalVariable(name: "avail", arg: 1, scope: !9863, file: !1167, line: 560, type: !9866)
!9913 = !DILocalVariable(name: "lines", arg: 2, scope: !9863, file: !1167, line: 560, type: !9866)
!9914 = !DILocalVariable(name: "completion", arg: 3, scope: !9863, file: !1167, line: 561, type: !9908)
!9915 = !DILocation(line: 0, scope: !9863)
!9916 = !DILocation(line: 566, column: 1, scope: !9863)
!9917 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1347, file: !1347, line: 523, type: !1203, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !9918)
!9918 = !{!9919, !9920, !9921, !9922, !9923}
!9919 = !DILocalVariable(name: "dev", arg: 1, scope: !9917, file: !1347, line: 523, type: !1205)
!9920 = !DILocalVariable(name: "pin", arg: 2, scope: !9917, file: !1347, line: 524, type: !1220)
!9921 = !DILocalVariable(name: "flags", arg: 3, scope: !9917, file: !1347, line: 524, type: !1221)
!9922 = !DILocalVariable(name: "err", scope: !9917, file: !1347, line: 526, type: !107)
!9923 = !DILocalVariable(name: "pincfg", scope: !9917, file: !1347, line: 527, type: !107)
!9924 = !DILocation(line: 0, scope: !9917)
!9925 = !DILocation(line: 527, column: 2, scope: !9917)
!9926 = !DILocation(line: 532, column: 8, scope: !9917)
!9927 = !DILocation(line: 533, column: 10, scope: !9928)
!9928 = distinct !DILexicalBlock(scope: !9917, file: !1347, line: 533, column: 6)
!9929 = !DILocation(line: 533, column: 6, scope: !9917)
!9930 = !DILocation(line: 543, column: 13, scope: !9931)
!9931 = distinct !DILexicalBlock(scope: !9917, file: !1347, line: 543, column: 6)
!9932 = !DILocation(line: 543, column: 28, scope: !9931)
!9933 = !DILocation(line: 543, column: 6, scope: !9917)
!9934 = !DILocation(line: 544, column: 14, scope: !9935)
!9935 = distinct !DILexicalBlock(scope: !9936, file: !1347, line: 544, column: 7)
!9936 = distinct !DILexicalBlock(scope: !9931, file: !1347, line: 543, column: 34)
!9937 = !DILocation(line: 544, column: 39, scope: !9935)
!9938 = !DILocation(line: 544, column: 7, scope: !9936)
!9939 = !DILocation(line: 545, column: 38, scope: !9940)
!9940 = distinct !DILexicalBlock(scope: !9935, file: !1347, line: 544, column: 45)
!9941 = !DILocation(line: 545, column: 4, scope: !9940)
!9942 = !DILocation(line: 546, column: 3, scope: !9940)
!9943 = !DILocation(line: 546, column: 21, scope: !9944)
!9944 = distinct !DILexicalBlock(scope: !9935, file: !1347, line: 546, column: 14)
!9945 = !DILocation(line: 546, column: 45, scope: !9944)
!9946 = !DILocation(line: 546, column: 14, scope: !9935)
!9947 = !DILocation(line: 547, column: 40, scope: !9948)
!9948 = distinct !DILexicalBlock(scope: !9944, file: !1347, line: 546, column: 51)
!9949 = !DILocation(line: 547, column: 4, scope: !9948)
!9950 = !DILocation(line: 548, column: 3, scope: !9948)
!9951 = !DILocation(line: 551, column: 32, scope: !9917)
!9952 = !DILocation(line: 551, column: 37, scope: !9917)
!9953 = !DILocation(line: 551, column: 2, scope: !9917)
!9954 = !DILocation(line: 554, column: 6, scope: !9917)
!9955 = !DILocation(line: 562, column: 1, scope: !9917)
!9956 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1347, file: !1347, line: 410, type: !9957, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !9959)
!9957 = !DISubroutineType(types: !9958)
!9958 = !{!107, !1205, !1032}
!9959 = !{!9960, !9961, !9962, !9964}
!9960 = !DILocalVariable(name: "dev", arg: 1, scope: !9956, file: !1347, line: 410, type: !1205)
!9961 = !DILocalVariable(name: "value", arg: 2, scope: !9956, file: !1347, line: 410, type: !1032)
!9962 = !DILocalVariable(name: "cfg", scope: !9956, file: !1347, line: 412, type: !9963)
!9963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1456, size: 32)
!9964 = !DILocalVariable(name: "gpio", scope: !9956, file: !1347, line: 413, type: !1278)
!9965 = !DILocation(line: 0, scope: !9956)
!9966 = !DILocation(line: 412, column: 45, scope: !9956)
!9967 = !DILocation(line: 413, column: 44, scope: !9956)
!9968 = !DILocation(line: 415, column: 11, scope: !9956)
!9969 = !DILocation(line: 415, column: 9, scope: !9956)
!9970 = !DILocation(line: 417, column: 2, scope: !9956)
!9971 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1347, file: !1347, line: 420, type: !1230, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !9972)
!9972 = !{!9973, !9974, !9975, !9976, !9977, !9978}
!9973 = !DILocalVariable(name: "dev", arg: 1, scope: !9971, file: !1347, line: 420, type: !1205)
!9974 = !DILocalVariable(name: "mask", arg: 2, scope: !9971, file: !1347, line: 421, type: !1232)
!9975 = !DILocalVariable(name: "value", arg: 3, scope: !9971, file: !1347, line: 422, type: !1227)
!9976 = !DILocalVariable(name: "cfg", scope: !9971, file: !1347, line: 424, type: !9963)
!9977 = !DILocalVariable(name: "gpio", scope: !9971, file: !1347, line: 425, type: !1278)
!9978 = !DILocalVariable(name: "port_value", scope: !9971, file: !1347, line: 426, type: !152)
!9979 = !DILocation(line: 0, scope: !9971)
!9980 = !DILocation(line: 424, column: 45, scope: !9971)
!9981 = !DILocation(line: 425, column: 44, scope: !9971)
!9982 = !DILocation(line: 430, column: 15, scope: !9971)
!9983 = !DILocation(line: 431, column: 46, scope: !9971)
!9984 = !DILocation(line: 431, column: 44, scope: !9971)
!9985 = !DILocation(line: 431, column: 61, scope: !9971)
!9986 = !DILocation(line: 431, column: 53, scope: !9971)
!9987 = !DILocation(line: 431, column: 2, scope: !9971)
!9988 = !DILocation(line: 435, column: 2, scope: !9971)
!9989 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1347, file: !1347, line: 438, type: !1235, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !9990)
!9990 = !{!9991, !9992, !9993, !9994}
!9991 = !DILocalVariable(name: "dev", arg: 1, scope: !9989, file: !1347, line: 438, type: !1205)
!9992 = !DILocalVariable(name: "pins", arg: 2, scope: !9989, file: !1347, line: 439, type: !1232)
!9993 = !DILocalVariable(name: "cfg", scope: !9989, file: !1347, line: 441, type: !9963)
!9994 = !DILocalVariable(name: "gpio", scope: !9989, file: !1347, line: 442, type: !1278)
!9995 = !DILocation(line: 0, scope: !9989)
!9996 = !DILocation(line: 441, column: 45, scope: !9989)
!9997 = !DILocation(line: 442, column: 44, scope: !9989)
!9998 = !DILocation(line: 448, column: 2, scope: !9989)
!9999 = !DILocation(line: 450, column: 2, scope: !9989)
!10000 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1347, file: !1347, line: 453, type: !1235, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10001)
!10001 = !{!10002, !10003, !10004, !10005}
!10002 = !DILocalVariable(name: "dev", arg: 1, scope: !10000, file: !1347, line: 453, type: !1205)
!10003 = !DILocalVariable(name: "pins", arg: 2, scope: !10000, file: !1347, line: 454, type: !1232)
!10004 = !DILocalVariable(name: "cfg", scope: !10000, file: !1347, line: 456, type: !9963)
!10005 = !DILocalVariable(name: "gpio", scope: !10000, file: !1347, line: 457, type: !1278)
!10006 = !DILocation(line: 0, scope: !10000)
!10007 = !DILocation(line: 456, column: 45, scope: !10000)
!10008 = !DILocation(line: 457, column: 44, scope: !10000)
!10009 = !DILocation(line: 467, column: 2, scope: !10000)
!10010 = !DILocation(line: 470, column: 2, scope: !10000)
!10011 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1347, file: !1347, line: 473, type: !1235, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10012)
!10012 = !{!10013, !10014, !10015, !10016}
!10013 = !DILocalVariable(name: "dev", arg: 1, scope: !10011, file: !1347, line: 473, type: !1205)
!10014 = !DILocalVariable(name: "pins", arg: 2, scope: !10011, file: !1347, line: 474, type: !1232)
!10015 = !DILocalVariable(name: "cfg", scope: !10011, file: !1347, line: 476, type: !9963)
!10016 = !DILocalVariable(name: "gpio", scope: !10011, file: !1347, line: 477, type: !1278)
!10017 = !DILocation(line: 0, scope: !10011)
!10018 = !DILocation(line: 476, column: 45, scope: !10011)
!10019 = !DILocation(line: 477, column: 44, scope: !10011)
!10020 = !DILocation(line: 484, column: 2, scope: !10011)
!10021 = !DILocation(line: 487, column: 2, scope: !10011)
!10022 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1347, file: !1347, line: 594, type: !1241, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10023)
!10023 = !{!10024, !10025, !10026, !10027, !10028, !10029, !10031, !10032, !10033}
!10024 = !DILocalVariable(name: "dev", arg: 1, scope: !10022, file: !1347, line: 594, type: !1205)
!10025 = !DILocalVariable(name: "pin", arg: 2, scope: !10022, file: !1347, line: 595, type: !1220)
!10026 = !DILocalVariable(name: "mode", arg: 3, scope: !10022, file: !1347, line: 596, type: !1179)
!10027 = !DILocalVariable(name: "trig", arg: 4, scope: !10022, file: !1347, line: 597, type: !1185)
!10028 = !DILocalVariable(name: "cfg", scope: !10022, file: !1347, line: 599, type: !9963)
!10029 = !DILocalVariable(name: "data", scope: !10022, file: !1347, line: 600, type: !10030)
!10030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1410, size: 32)
!10031 = !DILocalVariable(name: "edge", scope: !10022, file: !1347, line: 601, type: !107)
!10032 = !DILocalVariable(name: "err", scope: !10022, file: !1347, line: 602, type: !107)
!10033 = !DILabel(scope: !10022, name: "exit", file: !1347, line: 643)
!10034 = !DILocation(line: 0, scope: !10022)
!10035 = !DILocation(line: 599, column: 45, scope: !10022)
!10036 = !DILocation(line: 604, column: 6, scope: !10022)
!10037 = !DILocation(line: 605, column: 34, scope: !10038)
!10038 = distinct !DILexicalBlock(scope: !10039, file: !1347, line: 605, column: 7)
!10039 = distinct !DILexicalBlock(scope: !10040, file: !1347, line: 604, column: 38)
!10040 = distinct !DILexicalBlock(scope: !10022, file: !1347, line: 604, column: 6)
!10041 = !DILocation(line: 605, column: 7, scope: !10038)
!10042 = !DILocation(line: 605, column: 47, scope: !10038)
!10043 = !DILocation(line: 605, column: 39, scope: !10038)
!10044 = !DILocation(line: 605, column: 7, scope: !10039)
!10045 = !DILocation(line: 606, column: 4, scope: !10046)
!10046 = distinct !DILexicalBlock(scope: !10038, file: !1347, line: 605, column: 53)
!10047 = !DILocation(line: 607, column: 4, scope: !10046)
!10048 = !DILocation(line: 608, column: 4, scope: !10046)
!10049 = !DILocation(line: 609, column: 3, scope: !10046)
!10050 = !DILocation(line: 600, column: 38, scope: !10022)
!10051 = !DILocation(line: 620, column: 30, scope: !10052)
!10052 = distinct !DILexicalBlock(scope: !10022, file: !1347, line: 620, column: 6)
!10053 = !DILocation(line: 620, column: 6, scope: !10052)
!10054 = !DILocation(line: 620, column: 57, scope: !10052)
!10055 = !DILocation(line: 620, column: 6, scope: !10022)
!10056 = !DILocation(line: 625, column: 29, scope: !10022)
!10057 = !DILocation(line: 625, column: 2, scope: !10022)
!10058 = !DILocation(line: 627, column: 2, scope: !10022)
!10059 = !DILocation(line: 630, column: 3, scope: !10060)
!10060 = distinct !DILexicalBlock(scope: !10022, file: !1347, line: 627, column: 16)
!10061 = !DILocation(line: 633, column: 3, scope: !10060)
!10062 = !DILocation(line: 636, column: 3, scope: !10060)
!10063 = !DILocation(line: 639, column: 2, scope: !10022)
!10064 = !DILocation(line: 641, column: 2, scope: !10022)
!10065 = !DILocation(line: 643, column: 1, scope: !10022)
!10066 = !DILocation(line: 644, column: 2, scope: !10022)
!10067 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1347, file: !1347, line: 647, type: !1245, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10068)
!10068 = !{!10069, !10070, !10071, !10072}
!10069 = !DILocalVariable(name: "dev", arg: 1, scope: !10067, file: !1347, line: 647, type: !1205)
!10070 = !DILocalVariable(name: "callback", arg: 2, scope: !10067, file: !1347, line: 648, type: !1247)
!10071 = !DILocalVariable(name: "set", arg: 3, scope: !10067, file: !1347, line: 649, type: !145)
!10072 = !DILocalVariable(name: "data", scope: !10067, file: !1347, line: 651, type: !10030)
!10073 = !DILocation(line: 0, scope: !10067)
!10074 = !DILocation(line: 651, column: 38, scope: !10067)
!10075 = !DILocation(line: 653, column: 37, scope: !10067)
!10076 = !DILocation(line: 653, column: 9, scope: !10067)
!10077 = !DILocation(line: 653, column: 2, scope: !10067)
!10078 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !10079, file: !10079, line: 38, type: !10080, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10083)
!10079 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10080 = !DISubroutineType(types: !10081)
!10081 = !{!107, !10082, !1247, !145}
!10082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1416, size: 32)
!10083 = !{!10084, !10085, !10086}
!10084 = !DILocalVariable(name: "callbacks", arg: 1, scope: !10078, file: !10079, line: 38, type: !10082)
!10085 = !DILocalVariable(name: "callback", arg: 2, scope: !10078, file: !10079, line: 39, type: !1247)
!10086 = !DILocalVariable(name: "set", arg: 3, scope: !10078, file: !10079, line: 40, type: !145)
!10087 = !DILocation(line: 0, scope: !10078)
!10088 = !DILocation(line: 42, column: 2, scope: !10089)
!10089 = distinct !DILexicalBlock(scope: !10090, file: !10079, line: 42, column: 2)
!10090 = distinct !DILexicalBlock(scope: !10078, file: !10079, line: 42, column: 2)
!10091 = !DILocation(line: 42, column: 2, scope: !10090)
!10092 = !DILocation(line: 42, column: 2, scope: !10093)
!10093 = distinct !DILexicalBlock(scope: !10089, file: !10079, line: 42, column: 2)
!10094 = !DILocation(line: 43, column: 2, scope: !10095)
!10095 = distinct !DILexicalBlock(scope: !10096, file: !10079, line: 43, column: 2)
!10096 = distinct !DILexicalBlock(scope: !10078, file: !10079, line: 43, column: 2)
!10097 = !DILocation(line: 43, column: 2, scope: !10096)
!10098 = !DILocation(line: 43, column: 2, scope: !10099)
!10099 = distinct !DILexicalBlock(scope: !10095, file: !10079, line: 43, column: 2)
!10100 = !DILocation(line: 45, column: 7, scope: !10101)
!10101 = distinct !DILexicalBlock(scope: !10078, file: !10079, line: 45, column: 6)
!10102 = !DILocation(line: 45, column: 6, scope: !10078)
!10103 = !DILocation(line: 46, column: 56, scope: !10104)
!10104 = distinct !DILexicalBlock(scope: !10105, file: !10079, line: 46, column: 7)
!10105 = distinct !DILexicalBlock(scope: !10101, file: !10079, line: 45, column: 38)
!10106 = !DILocation(line: 46, column: 8, scope: !10104)
!10107 = !DILocation(line: 46, column: 7, scope: !10105)
!10108 = !DILocation(line: 51, column: 13, scope: !10101)
!10109 = !DILocation(line: 56, column: 43, scope: !10110)
!10110 = distinct !DILexicalBlock(scope: !10111, file: !10079, line: 55, column: 11)
!10111 = distinct !DILexicalBlock(scope: !10078, file: !10079, line: 55, column: 6)
!10112 = !DILocation(line: 56, column: 3, scope: !10110)
!10113 = !DILocation(line: 57, column: 2, scope: !10110)
!10114 = !DILocation(line: 60, column: 1, scope: !10078)
!10115 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1252, file: !1252, line: 261, type: !10116, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10118)
!10116 = !DISubroutineType(types: !10117)
!10117 = !{!145, !10082}
!10118 = !{!10119}
!10119 = !DILocalVariable(name: "list", arg: 1, scope: !10115, file: !1252, line: 261, type: !10082)
!10120 = !DILocation(line: 0, scope: !10115)
!10121 = !DILocation(line: 261, column: 1, scope: !10115)
!10122 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1252, file: !1252, line: 417, type: !10123, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10125)
!10123 = !DISubroutineType(types: !10124)
!10124 = !{!145, !10082, !1420}
!10125 = !{!10126, !10127, !10128, !10129}
!10126 = !DILocalVariable(name: "list", arg: 1, scope: !10122, file: !1252, line: 417, type: !10082)
!10127 = !DILocalVariable(name: "node", arg: 2, scope: !10122, file: !1252, line: 417, type: !1420)
!10128 = !DILocalVariable(name: "prev", scope: !10122, file: !1252, line: 417, type: !1420)
!10129 = !DILocalVariable(name: "test", scope: !10122, file: !1252, line: 417, type: !1420)
!10130 = !DILocation(line: 0, scope: !10122)
!10131 = !DILocation(line: 417, column: 1, scope: !10132)
!10132 = distinct !DILexicalBlock(scope: !10122, file: !1252, line: 417, column: 1)
!10133 = !DILocation(line: 417, column: 1, scope: !10134)
!10134 = distinct !DILexicalBlock(scope: !10132, file: !1252, line: 417, column: 1)
!10135 = !DILocation(line: 417, column: 1, scope: !10136)
!10136 = distinct !DILexicalBlock(scope: !10137, file: !1252, line: 417, column: 1)
!10137 = distinct !DILexicalBlock(scope: !10134, file: !1252, line: 417, column: 1)
!10138 = !DILocation(line: 417, column: 1, scope: !10137)
!10139 = distinct !{!10139, !10131, !10131}
!10140 = !DILocation(line: 417, column: 1, scope: !10141)
!10141 = distinct !DILexicalBlock(scope: !10136, file: !1252, line: 417, column: 1)
!10142 = !DILocation(line: 417, column: 1, scope: !10122)
!10143 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1252, file: !1252, line: 298, type: !10144, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10146)
!10144 = !DISubroutineType(types: !10145)
!10145 = !{null, !10082, !1420}
!10146 = !{!10147, !10148}
!10147 = !DILocalVariable(name: "list", arg: 1, scope: !10143, file: !1252, line: 298, type: !10082)
!10148 = !DILocalVariable(name: "node", arg: 2, scope: !10143, file: !1252, line: 298, type: !1420)
!10149 = !DILocation(line: 0, scope: !10143)
!10150 = !DILocation(line: 298, column: 1, scope: !10143)
!10151 = !DILocation(line: 298, column: 1, scope: !10152)
!10152 = distinct !DILexicalBlock(scope: !10143, file: !1252, line: 298, column: 1)
!10153 = !DILocation(line: 298, column: 1, scope: !10154)
!10154 = distinct !DILexicalBlock(scope: !10152, file: !1252, line: 298, column: 1)
!10155 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1252, file: !1252, line: 231, type: !10156, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10158)
!10156 = !DISubroutineType(types: !10157)
!10157 = !{!1420, !10082}
!10158 = !{!10159}
!10159 = !DILocalVariable(name: "list", arg: 1, scope: !10155, file: !1252, line: 231, type: !10082)
!10160 = !DILocation(line: 0, scope: !10155)
!10161 = !DILocation(line: 233, column: 15, scope: !10155)
!10162 = !DILocation(line: 233, column: 2, scope: !10155)
!10163 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1252, file: !1252, line: 209, type: !10164, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10166)
!10164 = !DISubroutineType(types: !10165)
!10165 = !{null, !1420, !1420}
!10166 = !{!10167, !10168}
!10167 = !DILocalVariable(name: "parent", arg: 1, scope: !10163, file: !1252, line: 209, type: !1420)
!10168 = !DILocalVariable(name: "child", arg: 2, scope: !10163, file: !1252, line: 209, type: !1420)
!10169 = !DILocation(line: 0, scope: !10163)
!10170 = !DILocation(line: 211, column: 10, scope: !10163)
!10171 = !DILocation(line: 211, column: 15, scope: !10163)
!10172 = !DILocation(line: 212, column: 1, scope: !10163)
!10173 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1252, file: !1252, line: 214, type: !10144, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10174)
!10174 = !{!10175, !10176}
!10175 = !DILocalVariable(name: "list", arg: 1, scope: !10173, file: !1252, line: 214, type: !10082)
!10176 = !DILocalVariable(name: "node", arg: 2, scope: !10173, file: !1252, line: 214, type: !1420)
!10177 = !DILocation(line: 0, scope: !10173)
!10178 = !DILocation(line: 216, column: 8, scope: !10173)
!10179 = !DILocation(line: 216, column: 13, scope: !10173)
!10180 = !DILocation(line: 217, column: 1, scope: !10173)
!10181 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1252, file: !1252, line: 243, type: !10156, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10182)
!10182 = !{!10183}
!10183 = !DILocalVariable(name: "list", arg: 1, scope: !10181, file: !1252, line: 243, type: !10082)
!10184 = !DILocation(line: 0, scope: !10181)
!10185 = !DILocation(line: 245, column: 15, scope: !10181)
!10186 = !DILocation(line: 245, column: 2, scope: !10181)
!10187 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1252, file: !1252, line: 219, type: !10144, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10188)
!10188 = !{!10189, !10190}
!10189 = !DILocalVariable(name: "list", arg: 1, scope: !10187, file: !1252, line: 219, type: !10082)
!10190 = !DILocalVariable(name: "node", arg: 2, scope: !10187, file: !1252, line: 219, type: !1420)
!10191 = !DILocation(line: 0, scope: !10187)
!10192 = !DILocation(line: 221, column: 8, scope: !10187)
!10193 = !DILocation(line: 221, column: 13, scope: !10187)
!10194 = !DILocation(line: 222, column: 1, scope: !10187)
!10195 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1252, file: !1252, line: 401, type: !10196, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10198)
!10196 = !DISubroutineType(types: !10197)
!10197 = !{null, !10082, !1420, !1420}
!10198 = !{!10199, !10200, !10201}
!10199 = !DILocalVariable(name: "list", arg: 1, scope: !10195, file: !1252, line: 401, type: !10082)
!10200 = !DILocalVariable(name: "prev_node", arg: 2, scope: !10195, file: !1252, line: 401, type: !1420)
!10201 = !DILocalVariable(name: "node", arg: 3, scope: !10195, file: !1252, line: 401, type: !1420)
!10202 = !DILocation(line: 0, scope: !10195)
!10203 = !DILocation(line: 401, column: 1, scope: !10204)
!10204 = distinct !DILexicalBlock(scope: !10195, file: !1252, line: 401, column: 1)
!10205 = !DILocation(line: 0, scope: !10204)
!10206 = !DILocation(line: 401, column: 1, scope: !10195)
!10207 = !DILocation(line: 401, column: 1, scope: !10208)
!10208 = distinct !DILexicalBlock(scope: !10204, file: !1252, line: 401, column: 1)
!10209 = !DILocation(line: 401, column: 1, scope: !10210)
!10210 = distinct !DILexicalBlock(scope: !10208, file: !1252, line: 401, column: 1)
!10211 = !DILocation(line: 401, column: 1, scope: !10212)
!10212 = distinct !DILexicalBlock(scope: !10210, file: !1252, line: 401, column: 1)
!10213 = !DILocation(line: 401, column: 1, scope: !10214)
!10214 = distinct !DILexicalBlock(scope: !10204, file: !1252, line: 401, column: 1)
!10215 = !DILocation(line: 401, column: 1, scope: !10216)
!10216 = distinct !DILexicalBlock(scope: !10214, file: !1252, line: 401, column: 1)
!10217 = !DILocation(line: 401, column: 1, scope: !10218)
!10218 = distinct !DILexicalBlock(scope: !10216, file: !1252, line: 401, column: 1)
!10219 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1252, file: !1252, line: 285, type: !10220, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10222)
!10220 = !DISubroutineType(types: !10221)
!10221 = !{!1420, !1420}
!10222 = !{!10223}
!10223 = !DILocalVariable(name: "node", arg: 1, scope: !10219, file: !1252, line: 285, type: !1420)
!10224 = !DILocation(line: 0, scope: !10219)
!10225 = !DILocation(line: 285, column: 1, scope: !10219)
!10226 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1252, file: !1252, line: 274, type: !10220, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10227)
!10227 = !{!10228}
!10228 = !DILocalVariable(name: "node", arg: 1, scope: !10226, file: !1252, line: 274, type: !1420)
!10229 = !DILocation(line: 0, scope: !10226)
!10230 = !DILocation(line: 274, column: 1, scope: !10226)
!10231 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1252, file: !1252, line: 204, type: !10220, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10232)
!10232 = !{!10233}
!10233 = !DILocalVariable(name: "node", arg: 1, scope: !10231, file: !1252, line: 204, type: !1420)
!10234 = !DILocation(line: 0, scope: !10231)
!10235 = !DILocation(line: 206, column: 15, scope: !10231)
!10236 = !DILocation(line: 206, column: 2, scope: !10231)
!10237 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1347, file: !1347, line: 342, type: !214, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10238)
!10238 = !{!10239, !10240, !10241}
!10239 = !DILocalVariable(name: "pin", arg: 1, scope: !10237, file: !1347, line: 342, type: !107)
!10240 = !DILocalVariable(name: "line", scope: !10237, file: !1347, line: 344, type: !152)
!10241 = !DILocalVariable(name: "port", scope: !10237, file: !1347, line: 345, type: !107)
!10242 = !DILocation(line: 0, scope: !10237)
!10243 = !DILocation(line: 344, column: 18, scope: !10237)
!10244 = !{i32 983040, i32 0}
!10245 = !DILocation(line: 356, column: 9, scope: !10237)
!10246 = !DILocation(line: 370, column: 2, scope: !10237)
!10247 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1347, file: !1347, line: 37, type: !887, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10248)
!10248 = !{!10249, !10250, !10251}
!10249 = !DILocalVariable(name: "line", arg: 1, scope: !10247, file: !1347, line: 37, type: !107)
!10250 = !DILocalVariable(name: "arg", arg: 2, scope: !10247, file: !1347, line: 37, type: !106)
!10251 = !DILocalVariable(name: "data", scope: !10247, file: !1347, line: 39, type: !10030)
!10252 = !DILocation(line: 0, scope: !10247)
!10253 = !DILocation(line: 41, column: 29, scope: !10247)
!10254 = !DILocation(line: 41, column: 39, scope: !10247)
!10255 = !DILocation(line: 41, column: 44, scope: !10247)
!10256 = !DILocation(line: 41, column: 2, scope: !10247)
!10257 = !DILocation(line: 42, column: 1, scope: !10247)
!10258 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1347, file: !1347, line: 376, type: !10259, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10261)
!10259 = !DISubroutineType(types: !10260)
!10260 = !{!107, !107, !107}
!10261 = !{!10262, !10263, !10264, !10266, !10267}
!10262 = !DILocalVariable(name: "port", arg: 1, scope: !10258, file: !1347, line: 376, type: !107)
!10263 = !DILocalVariable(name: "pin", arg: 2, scope: !10258, file: !1347, line: 376, type: !107)
!10264 = !DILocalVariable(name: "clk", scope: !10258, file: !1347, line: 386, type: !10265)
!10265 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1205)
!10266 = !DILocalVariable(name: "pclken", scope: !10258, file: !1347, line: 387, type: !1463)
!10267 = !DILocalVariable(name: "ret", scope: !10258, file: !1347, line: 396, type: !107)
!10268 = !DILocation(line: 0, scope: !10258)
!10269 = !DILocation(line: 387, column: 2, scope: !10258)
!10270 = !DILocation(line: 387, column: 22, scope: !10258)
!10271 = !DILocation(line: 399, column: 8, scope: !10258)
!10272 = !DILocation(line: 400, column: 10, scope: !10273)
!10273 = distinct !DILexicalBlock(scope: !10258, file: !1347, line: 400, column: 6)
!10274 = !DILocation(line: 400, column: 6, scope: !10258)
!10275 = !DILocation(line: 405, column: 2, scope: !10258)
!10276 = !DILocation(line: 407, column: 2, scope: !10258)
!10277 = !DILocation(line: 408, column: 1, scope: !10258)
!10278 = distinct !DISubprogram(name: "clock_control_on", scope: !980, file: !980, line: 123, type: !1312, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10279)
!10279 = !{!10280, !10281, !10282}
!10280 = !DILocalVariable(name: "dev", arg: 1, scope: !10278, file: !980, line: 123, type: !1205)
!10281 = !DILocalVariable(name: "sys", arg: 2, scope: !10278, file: !980, line: 124, type: !1076)
!10282 = !DILocalVariable(name: "api", scope: !10278, file: !980, line: 126, type: !1305)
!10283 = !DILocation(line: 0, scope: !10278)
!10284 = !DILocation(line: 127, column: 49, scope: !10278)
!10285 = !DILocation(line: 129, column: 14, scope: !10278)
!10286 = !DILocation(line: 129, column: 9, scope: !10278)
!10287 = !DILocation(line: 129, column: 2, scope: !10278)
!10288 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1347, file: !1347, line: 311, type: !9392, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10289)
!10289 = !{!10290, !10291, !10292}
!10290 = !DILocalVariable(name: "port", arg: 1, scope: !10288, file: !1347, line: 311, type: !107)
!10291 = !DILocalVariable(name: "pin", arg: 2, scope: !10288, file: !1347, line: 311, type: !107)
!10292 = !DILocalVariable(name: "line", scope: !10288, file: !1347, line: 313, type: !152)
!10293 = !DILocation(line: 0, scope: !10288)
!10294 = !DILocation(line: 313, column: 18, scope: !10288)
!10295 = !DILocation(line: 337, column: 2, scope: !10288)
!10296 = !DILocation(line: 340, column: 1, scope: !10288)
!10297 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1347, file: !1347, line: 295, type: !10298, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10300)
!10298 = !DISubroutineType(types: !10299)
!10299 = !{!152, !107}
!10300 = !{!10301}
!10301 = !DILocalVariable(name: "pin", arg: 1, scope: !10297, file: !1347, line: 295, type: !107)
!10302 = !DILocation(line: 0, scope: !10297)
!10303 = !DILocation(line: 307, column: 46, scope: !10297)
!10304 = !DILocation(line: 307, column: 27, scope: !10297)
!10305 = !DILocation(line: 307, column: 32, scope: !10297)
!10306 = !DILocation(line: 307, column: 14, scope: !10297)
!10307 = !DILocation(line: 307, column: 39, scope: !10297)
!10308 = !DILocation(line: 307, column: 2, scope: !10297)
!10309 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !6023, file: !6023, line: 671, type: !10310, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10312)
!10310 = !DISubroutineType(types: !10311)
!10311 = !{null, !152, !152}
!10312 = !{!10313, !10314}
!10313 = !DILocalVariable(name: "Port", arg: 1, scope: !10309, file: !6023, line: 671, type: !152)
!10314 = !DILocalVariable(name: "Line", arg: 2, scope: !10309, file: !6023, line: 671, type: !152)
!10315 = !DILocation(line: 0, scope: !10309)
!10316 = !DILocation(line: 673, column: 3, scope: !10309)
!10317 = !DILocalVariable(name: "value", arg: 1, scope: !10318, file: !6321, line: 373, type: !152)
!10318 = distinct !DISubprogram(name: "__RBIT", scope: !6321, file: !6321, line: 373, type: !7608, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10319)
!10319 = !{!10317, !10320}
!10320 = !DILocalVariable(name: "result", scope: !10318, file: !6321, line: 375, type: !152)
!10321 = !DILocation(line: 0, scope: !10318, inlinedAt: !10322)
!10322 = distinct !DILocation(line: 673, column: 3, scope: !10309)
!10323 = !DILocation(line: 380, column: 4, scope: !10318, inlinedAt: !10322)
!10324 = !{i64 3735108}
!10325 = !DILocalVariable(name: "value", arg: 1, scope: !10326, file: !6321, line: 403, type: !152)
!10326 = distinct !DISubprogram(name: "__CLZ", scope: !6321, file: !6321, line: 403, type: !10327, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10329)
!10327 = !DISubroutineType(types: !10328)
!10328 = !{!195, !152}
!10329 = !{!10325}
!10330 = !DILocation(line: 0, scope: !10326, inlinedAt: !10331)
!10331 = distinct !DILocation(line: 673, column: 3, scope: !10309)
!10332 = !DILocation(line: 414, column: 7, scope: !10326, inlinedAt: !10331)
!10333 = !DILocation(line: 674, column: 1, scope: !10309)
!10334 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !10079, file: !10079, line: 69, type: !10335, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10337)
!10335 = !DISubroutineType(types: !10336)
!10336 = !{null, !10082, !1205, !152}
!10337 = !{!10338, !10339, !10340, !10341, !10342}
!10338 = !DILocalVariable(name: "list", arg: 1, scope: !10334, file: !10079, line: 69, type: !10082)
!10339 = !DILocalVariable(name: "port", arg: 2, scope: !10334, file: !10079, line: 70, type: !1205)
!10340 = !DILocalVariable(name: "pins", arg: 3, scope: !10334, file: !10079, line: 71, type: !152)
!10341 = !DILocalVariable(name: "cb", scope: !10334, file: !10079, line: 73, type: !1247)
!10342 = !DILocalVariable(name: "tmp", scope: !10334, file: !10079, line: 73, type: !1247)
!10343 = !DILocation(line: 0, scope: !10334)
!10344 = !DILocation(line: 75, column: 2, scope: !10345)
!10345 = distinct !DILexicalBlock(scope: !10334, file: !10079, line: 75, column: 2)
!10346 = !DILocation(line: 0, scope: !10345)
!10347 = !DILocation(line: 76, column: 11, scope: !10348)
!10348 = distinct !DILexicalBlock(scope: !10349, file: !10079, line: 76, column: 7)
!10349 = distinct !DILexicalBlock(scope: !10350, file: !10079, line: 75, column: 57)
!10350 = distinct !DILexicalBlock(scope: !10345, file: !10079, line: 75, column: 2)
!10351 = !DILocation(line: 76, column: 20, scope: !10348)
!10352 = !DILocation(line: 76, column: 7, scope: !10349)
!10353 = !DILocation(line: 77, column: 4, scope: !10354)
!10354 = distinct !DILexicalBlock(scope: !10355, file: !10079, line: 77, column: 4)
!10355 = distinct !DILexicalBlock(scope: !10356, file: !10079, line: 77, column: 4)
!10356 = distinct !DILexicalBlock(scope: !10348, file: !10079, line: 76, column: 28)
!10357 = !DILocation(line: 77, column: 4, scope: !10355)
!10358 = !DILocation(line: 77, column: 4, scope: !10359)
!10359 = distinct !DILexicalBlock(scope: !10354, file: !10079, line: 77, column: 4)
!10360 = !DILocation(line: 78, column: 4, scope: !10356)
!10361 = !DILocation(line: 79, column: 3, scope: !10356)
!10362 = !DILocation(line: 75, column: 2, scope: !10350)
!10363 = !DILocation(line: 81, column: 1, scope: !10334)
!10364 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !6023, file: !6023, line: 710, type: !7608, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10365)
!10365 = !{!10366}
!10366 = !DILocalVariable(name: "Line", arg: 1, scope: !10364, file: !6023, line: 710, type: !152)
!10367 = !DILocation(line: 0, scope: !10364)
!10368 = !DILocation(line: 712, column: 21, scope: !10364)
!10369 = !DILocation(line: 0, scope: !10318, inlinedAt: !10370)
!10370 = distinct !DILocation(line: 712, column: 76, scope: !10364)
!10371 = !DILocation(line: 380, column: 4, scope: !10318, inlinedAt: !10370)
!10372 = !DILocation(line: 0, scope: !10326, inlinedAt: !10373)
!10373 = distinct !DILocation(line: 712, column: 76, scope: !10364)
!10374 = !DILocation(line: 414, column: 7, scope: !10326, inlinedAt: !10373)
!10375 = !DILocation(line: 712, column: 73, scope: !10364)
!10376 = !DILocation(line: 712, column: 3, scope: !10364)
!10377 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !10378, file: !10378, line: 910, type: !10379, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10381)
!10378 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10379 = !DISubroutineType(types: !10380)
!10380 = !{null, !1278, !152}
!10381 = !{!10382, !10383}
!10382 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10377, file: !10378, line: 910, type: !1278)
!10383 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10377, file: !10378, line: 910, type: !152)
!10384 = !DILocation(line: 0, scope: !10377)
!10385 = !DILocation(line: 912, column: 3, scope: !10377)
!10386 = !DILocation(line: 913, column: 1, scope: !10377)
!10387 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !10378, file: !10378, line: 823, type: !10388, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10390)
!10388 = !DISubroutineType(types: !10389)
!10389 = !{!152, !1278}
!10390 = !{!10391}
!10391 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10387, file: !10378, line: 823, type: !1278)
!10392 = !DILocation(line: 0, scope: !10387)
!10393 = !DILocation(line: 825, column: 21, scope: !10387)
!10394 = !DILocation(line: 825, column: 3, scope: !10387)
!10395 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !10378, file: !10378, line: 812, type: !10379, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10396)
!10396 = !{!10397, !10398}
!10397 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10395, file: !10378, line: 812, type: !1278)
!10398 = !DILocalVariable(name: "PortValue", arg: 2, scope: !10395, file: !10378, line: 812, type: !152)
!10399 = !DILocation(line: 0, scope: !10395)
!10400 = !DILocation(line: 814, column: 3, scope: !10395)
!10401 = !DILocation(line: 815, column: 1, scope: !10395)
!10402 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !10378, file: !10378, line: 771, type: !10388, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10403)
!10403 = !{!10404}
!10404 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10402, file: !10378, line: 771, type: !1278)
!10405 = !DILocation(line: 0, scope: !10402)
!10406 = !DILocation(line: 773, column: 21, scope: !10402)
!10407 = !DILocation(line: 773, column: 3, scope: !10402)
!10408 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1347, file: !1347, line: 47, type: !10409, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10411)
!10409 = !DISubroutineType(types: !10410)
!10410 = !{!107, !1221, !187}
!10411 = !{!10412, !10413}
!10412 = !DILocalVariable(name: "flags", arg: 1, scope: !10408, file: !1347, line: 47, type: !1221)
!10413 = !DILocalVariable(name: "pincfg", arg: 2, scope: !10408, file: !1347, line: 47, type: !187)
!10414 = !DILocation(line: 0, scope: !10408)
!10415 = !DILocation(line: 50, column: 13, scope: !10416)
!10416 = distinct !DILexicalBlock(scope: !10408, file: !1347, line: 50, column: 6)
!10417 = !DILocation(line: 50, column: 28, scope: !10416)
!10418 = !DILocation(line: 50, column: 6, scope: !10408)
!10419 = !DILocation(line: 53, column: 11, scope: !10420)
!10420 = distinct !DILexicalBlock(scope: !10416, file: !1347, line: 50, column: 34)
!10421 = !DILocation(line: 55, column: 14, scope: !10422)
!10422 = distinct !DILexicalBlock(scope: !10420, file: !1347, line: 55, column: 7)
!10423 = !DILocation(line: 55, column: 35, scope: !10422)
!10424 = !DILocation(line: 55, column: 7, scope: !10420)
!10425 = !DILocation(line: 56, column: 14, scope: !10426)
!10426 = distinct !DILexicalBlock(scope: !10427, file: !1347, line: 56, column: 8)
!10427 = distinct !DILexicalBlock(scope: !10422, file: !1347, line: 55, column: 41)
!10428 = !DILocation(line: 56, column: 8, scope: !10427)
!10429 = !DILocation(line: 0, scope: !10422)
!10430 = !DILocation(line: 66, column: 14, scope: !10431)
!10431 = distinct !DILexicalBlock(scope: !10420, file: !1347, line: 66, column: 7)
!10432 = !DILocation(line: 66, column: 30, scope: !10431)
!10433 = !DILocation(line: 66, column: 7, scope: !10420)
!10434 = !DILocation(line: 67, column: 12, scope: !10435)
!10435 = distinct !DILexicalBlock(scope: !10431, file: !1347, line: 66, column: 36)
!10436 = !DILocation(line: 68, column: 3, scope: !10435)
!10437 = !DILocation(line: 68, column: 21, scope: !10438)
!10438 = distinct !DILexicalBlock(scope: !10431, file: !1347, line: 68, column: 14)
!10439 = !DILocation(line: 68, column: 39, scope: !10438)
!10440 = !DILocation(line: 68, column: 14, scope: !10431)
!10441 = !DILocation(line: 69, column: 12, scope: !10442)
!10442 = distinct !DILexicalBlock(scope: !10438, file: !1347, line: 68, column: 45)
!10443 = !DILocation(line: 70, column: 3, scope: !10442)
!10444 = !DILocation(line: 72, column: 21, scope: !10445)
!10445 = distinct !DILexicalBlock(scope: !10416, file: !1347, line: 72, column: 14)
!10446 = !DILocation(line: 72, column: 35, scope: !10445)
!10447 = !DILocation(line: 72, column: 14, scope: !10416)
!10448 = !DILocation(line: 77, column: 14, scope: !10449)
!10449 = distinct !DILexicalBlock(scope: !10450, file: !1347, line: 77, column: 7)
!10450 = distinct !DILexicalBlock(scope: !10445, file: !1347, line: 72, column: 41)
!10451 = !DILocation(line: 77, column: 30, scope: !10449)
!10452 = !DILocation(line: 77, column: 7, scope: !10450)
!10453 = !DILocation(line: 0, scope: !10416)
!10454 = !DILocation(line: 90, column: 1, scope: !10408)
!10455 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1347, file: !1347, line: 157, type: !10456, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10458)
!10456 = !DISubroutineType(types: !10457)
!10457 = !{null, !1205, !107, !107, !107}
!10458 = !{!10459, !10460, !10461, !10462, !10463, !10464, !10465, !10466, !10467, !10468, !10469}
!10459 = !DILocalVariable(name: "dev", arg: 1, scope: !10455, file: !1347, line: 157, type: !1205)
!10460 = !DILocalVariable(name: "pin", arg: 2, scope: !10455, file: !1347, line: 157, type: !107)
!10461 = !DILocalVariable(name: "conf", arg: 3, scope: !10455, file: !1347, line: 158, type: !107)
!10462 = !DILocalVariable(name: "func", arg: 4, scope: !10455, file: !1347, line: 158, type: !107)
!10463 = !DILocalVariable(name: "cfg", scope: !10455, file: !1347, line: 160, type: !9963)
!10464 = !DILocalVariable(name: "gpio", scope: !10455, file: !1347, line: 161, type: !1278)
!10465 = !DILocalVariable(name: "pin_ll", scope: !10455, file: !1347, line: 163, type: !107)
!10466 = !DILocalVariable(name: "mode", scope: !10455, file: !1347, line: 227, type: !32)
!10467 = !DILocalVariable(name: "otype", scope: !10455, file: !1347, line: 227, type: !32)
!10468 = !DILocalVariable(name: "ospeed", scope: !10455, file: !1347, line: 227, type: !32)
!10469 = !DILocalVariable(name: "pupd", scope: !10455, file: !1347, line: 227, type: !32)
!10470 = !DILocation(line: 0, scope: !10455)
!10471 = !DILocation(line: 160, column: 45, scope: !10455)
!10472 = !DILocation(line: 161, column: 44, scope: !10455)
!10473 = !DILocation(line: 163, column: 15, scope: !10455)
!10474 = !DILocation(line: 229, column: 14, scope: !10455)
!10475 = !DILocation(line: 246, column: 47, scope: !10455)
!10476 = !DILocation(line: 246, column: 2, scope: !10455)
!10477 = !DILocation(line: 248, column: 43, scope: !10455)
!10478 = !DILocation(line: 248, column: 2, scope: !10455)
!10479 = !DILocation(line: 250, column: 40, scope: !10455)
!10480 = !DILocation(line: 250, column: 2, scope: !10455)
!10481 = !DILocation(line: 252, column: 11, scope: !10482)
!10482 = distinct !DILexicalBlock(scope: !10455, file: !1347, line: 252, column: 6)
!10483 = !DILocation(line: 252, column: 6, scope: !10455)
!10484 = !DILocation(line: 253, column: 11, scope: !10485)
!10485 = distinct !DILexicalBlock(scope: !10486, file: !1347, line: 253, column: 7)
!10486 = distinct !DILexicalBlock(scope: !10482, file: !1347, line: 252, column: 36)
!10487 = !DILocation(line: 253, column: 7, scope: !10486)
!10488 = !DILocation(line: 254, column: 4, scope: !10489)
!10489 = distinct !DILexicalBlock(scope: !10485, file: !1347, line: 253, column: 16)
!10490 = !DILocation(line: 255, column: 3, scope: !10489)
!10491 = !DILocation(line: 256, column: 4, scope: !10492)
!10492 = distinct !DILexicalBlock(scope: !10485, file: !1347, line: 255, column: 10)
!10493 = !DILocation(line: 260, column: 40, scope: !10455)
!10494 = !DILocation(line: 260, column: 2, scope: !10455)
!10495 = !DILocation(line: 265, column: 1, scope: !10455)
!10496 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1347, file: !1347, line: 137, type: !10298, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10497)
!10497 = !{!10498, !10499}
!10498 = !DILocalVariable(name: "pin", arg: 1, scope: !10496, file: !1347, line: 137, type: !107)
!10499 = !DILocalVariable(name: "pinval", scope: !10496, file: !1347, line: 139, type: !152)
!10500 = !DILocation(line: 0, scope: !10496)
!10501 = !DILocation(line: 149, column: 13, scope: !10496)
!10502 = !DILocation(line: 151, column: 2, scope: !10496)
!10503 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !10378, file: !10378, line: 342, type: !10504, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10506)
!10504 = !DISubroutineType(types: !10505)
!10505 = !{null, !1278, !152, !152}
!10506 = !{!10507, !10508, !10509}
!10507 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10503, file: !10378, line: 342, type: !1278)
!10508 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10503, file: !10378, line: 342, type: !152)
!10509 = !DILocalVariable(name: "OutputType", arg: 3, scope: !10503, file: !10378, line: 342, type: !152)
!10510 = !DILocation(line: 0, scope: !10503)
!10511 = !DILocation(line: 344, column: 3, scope: !10503)
!10512 = !DILocation(line: 345, column: 1, scope: !10503)
!10513 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !10378, file: !10378, line: 413, type: !10504, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10514)
!10514 = !{!10515, !10516, !10517}
!10515 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10513, file: !10378, line: 413, type: !1278)
!10516 = !DILocalVariable(name: "Pin", arg: 2, scope: !10513, file: !10378, line: 413, type: !152)
!10517 = !DILocalVariable(name: "Speed", arg: 3, scope: !10513, file: !10378, line: 413, type: !152)
!10518 = !DILocation(line: 0, scope: !10513)
!10519 = !DILocation(line: 415, column: 3, scope: !10513)
!10520 = !DILocation(line: 0, scope: !10318, inlinedAt: !10521)
!10521 = distinct !DILocation(line: 415, column: 3, scope: !10513)
!10522 = !DILocation(line: 380, column: 4, scope: !10318, inlinedAt: !10521)
!10523 = !DILocation(line: 0, scope: !10326, inlinedAt: !10524)
!10524 = distinct !DILocation(line: 415, column: 3, scope: !10513)
!10525 = !DILocation(line: 414, column: 7, scope: !10326, inlinedAt: !10524)
!10526 = !DILocation(line: 0, scope: !10318, inlinedAt: !10527)
!10527 = distinct !DILocation(line: 415, column: 3, scope: !10513)
!10528 = !DILocation(line: 0, scope: !10326, inlinedAt: !10529)
!10529 = distinct !DILocation(line: 415, column: 3, scope: !10513)
!10530 = !DILocation(line: 417, column: 1, scope: !10513)
!10531 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !10378, file: !10378, line: 484, type: !10504, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10532)
!10532 = !{!10533, !10534, !10535}
!10533 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10531, file: !10378, line: 484, type: !1278)
!10534 = !DILocalVariable(name: "Pin", arg: 2, scope: !10531, file: !10378, line: 484, type: !152)
!10535 = !DILocalVariable(name: "Pull", arg: 3, scope: !10531, file: !10378, line: 484, type: !152)
!10536 = !DILocation(line: 0, scope: !10531)
!10537 = !DILocation(line: 486, column: 3, scope: !10531)
!10538 = !DILocation(line: 0, scope: !10318, inlinedAt: !10539)
!10539 = distinct !DILocation(line: 486, column: 3, scope: !10531)
!10540 = !DILocation(line: 380, column: 4, scope: !10318, inlinedAt: !10539)
!10541 = !DILocation(line: 0, scope: !10326, inlinedAt: !10542)
!10542 = distinct !DILocation(line: 486, column: 3, scope: !10531)
!10543 = !DILocation(line: 414, column: 7, scope: !10326, inlinedAt: !10542)
!10544 = !DILocation(line: 0, scope: !10318, inlinedAt: !10545)
!10545 = distinct !DILocation(line: 486, column: 3, scope: !10531)
!10546 = !DILocation(line: 0, scope: !10326, inlinedAt: !10547)
!10547 = distinct !DILocation(line: 486, column: 3, scope: !10531)
!10548 = !DILocation(line: 487, column: 1, scope: !10531)
!10549 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !10378, file: !10378, line: 556, type: !10504, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10550)
!10550 = !{!10551, !10552, !10553}
!10551 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10549, file: !10378, line: 556, type: !1278)
!10552 = !DILocalVariable(name: "Pin", arg: 2, scope: !10549, file: !10378, line: 556, type: !152)
!10553 = !DILocalVariable(name: "Alternate", arg: 3, scope: !10549, file: !10378, line: 556, type: !152)
!10554 = !DILocation(line: 0, scope: !10549)
!10555 = !DILocation(line: 558, column: 3, scope: !10549)
!10556 = !DILocation(line: 0, scope: !10318, inlinedAt: !10557)
!10557 = distinct !DILocation(line: 558, column: 3, scope: !10549)
!10558 = !DILocation(line: 380, column: 4, scope: !10318, inlinedAt: !10557)
!10559 = !DILocation(line: 0, scope: !10326, inlinedAt: !10560)
!10560 = distinct !DILocation(line: 558, column: 3, scope: !10549)
!10561 = !DILocation(line: 414, column: 7, scope: !10326, inlinedAt: !10560)
!10562 = !DILocation(line: 0, scope: !10318, inlinedAt: !10563)
!10563 = distinct !DILocation(line: 558, column: 3, scope: !10549)
!10564 = !DILocation(line: 0, scope: !10326, inlinedAt: !10565)
!10565 = distinct !DILocation(line: 558, column: 3, scope: !10549)
!10566 = !DILocation(line: 560, column: 1, scope: !10549)
!10567 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !10378, file: !10378, line: 633, type: !10504, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10568)
!10568 = !{!10569, !10570, !10571}
!10569 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10567, file: !10378, line: 633, type: !1278)
!10570 = !DILocalVariable(name: "Pin", arg: 2, scope: !10567, file: !10378, line: 633, type: !152)
!10571 = !DILocalVariable(name: "Alternate", arg: 3, scope: !10567, file: !10378, line: 633, type: !152)
!10572 = !DILocation(line: 0, scope: !10567)
!10573 = !DILocation(line: 635, column: 3, scope: !10567)
!10574 = !DILocation(line: 0, scope: !10318, inlinedAt: !10575)
!10575 = distinct !DILocation(line: 635, column: 3, scope: !10567)
!10576 = !DILocation(line: 380, column: 4, scope: !10318, inlinedAt: !10575)
!10577 = !DILocation(line: 0, scope: !10326, inlinedAt: !10578)
!10578 = distinct !DILocation(line: 635, column: 3, scope: !10567)
!10579 = !DILocation(line: 414, column: 7, scope: !10326, inlinedAt: !10578)
!10580 = !DILocation(line: 0, scope: !10318, inlinedAt: !10581)
!10581 = distinct !DILocation(line: 635, column: 3, scope: !10567)
!10582 = !DILocation(line: 0, scope: !10326, inlinedAt: !10583)
!10583 = distinct !DILocation(line: 635, column: 3, scope: !10567)
!10584 = !DILocation(line: 637, column: 1, scope: !10567)
!10585 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !10378, file: !10378, line: 273, type: !10504, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10586)
!10586 = !{!10587, !10588, !10589}
!10587 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10585, file: !10378, line: 273, type: !1278)
!10588 = !DILocalVariable(name: "Pin", arg: 2, scope: !10585, file: !10378, line: 273, type: !152)
!10589 = !DILocalVariable(name: "Mode", arg: 3, scope: !10585, file: !10378, line: 273, type: !152)
!10590 = !DILocation(line: 0, scope: !10585)
!10591 = !DILocation(line: 275, column: 3, scope: !10585)
!10592 = !DILocation(line: 0, scope: !10318, inlinedAt: !10593)
!10593 = distinct !DILocation(line: 275, column: 3, scope: !10585)
!10594 = !DILocation(line: 380, column: 4, scope: !10318, inlinedAt: !10593)
!10595 = !DILocation(line: 0, scope: !10326, inlinedAt: !10596)
!10596 = distinct !DILocation(line: 275, column: 3, scope: !10585)
!10597 = !DILocation(line: 414, column: 7, scope: !10326, inlinedAt: !10596)
!10598 = !DILocation(line: 0, scope: !10318, inlinedAt: !10599)
!10599 = distinct !DILocation(line: 275, column: 3, scope: !10585)
!10600 = !DILocation(line: 0, scope: !10326, inlinedAt: !10601)
!10601 = distinct !DILocation(line: 275, column: 3, scope: !10585)
!10602 = !DILocation(line: 276, column: 1, scope: !10585)
!10603 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1347, file: !1347, line: 698, type: !1360, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10604)
!10604 = !{!10605, !10606, !10607}
!10605 = !DILocalVariable(name: "dev", arg: 1, scope: !10603, file: !1347, line: 698, type: !1205)
!10606 = !DILocalVariable(name: "data", scope: !10603, file: !1347, line: 700, type: !10030)
!10607 = !DILocalVariable(name: "ret", scope: !10603, file: !1347, line: 701, type: !107)
!10608 = !DILocation(line: 0, scope: !10603)
!10609 = !DILocation(line: 700, column: 38, scope: !10603)
!10610 = !DILocation(line: 703, column: 8, scope: !10603)
!10611 = !DILocation(line: 703, column: 12, scope: !10603)
!10612 = !DILocation(line: 705, column: 7, scope: !10613)
!10613 = distinct !DILexicalBlock(scope: !10603, file: !1347, line: 705, column: 6)
!10614 = !DILocation(line: 705, column: 6, scope: !10603)
!10615 = !DILocation(line: 722, column: 8, scope: !10603)
!10616 = !DILocation(line: 723, column: 10, scope: !10617)
!10617 = distinct !DILexicalBlock(scope: !10603, file: !1347, line: 723, column: 6)
!10618 = !DILocation(line: 723, column: 6, scope: !10603)
!10619 = !DILocation(line: 731, column: 1, scope: !10603)
!10620 = distinct !DISubprogram(name: "device_is_ready", scope: !9808, file: !9808, line: 47, type: !10621, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10623)
!10621 = !DISubroutineType(types: !10622)
!10622 = !{!145, !1205}
!10623 = !{!10624}
!10624 = !DILocalVariable(name: "dev", arg: 1, scope: !10620, file: !9808, line: 47, type: !1205)
!10625 = !DILocation(line: 0, scope: !10620)
!10626 = !DILocation(line: 55, column: 2, scope: !10627)
!10627 = distinct !DILexicalBlock(scope: !10620, file: !9808, line: 55, column: 2)
!10628 = !{i64 2155289814}
!10629 = !DILocation(line: 56, column: 9, scope: !10620)
!10630 = !DILocation(line: 56, column: 2, scope: !10620)
!10631 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1347, file: !1347, line: 270, type: !10632, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10634)
!10632 = !DISubroutineType(types: !10633)
!10633 = !{!107, !1205, !145}
!10634 = !{!10635, !10636, !10637, !10638, !10639}
!10635 = !DILocalVariable(name: "dev", arg: 1, scope: !10631, file: !1347, line: 270, type: !1205)
!10636 = !DILocalVariable(name: "on", arg: 2, scope: !10631, file: !1347, line: 270, type: !145)
!10637 = !DILocalVariable(name: "cfg", scope: !10631, file: !1347, line: 272, type: !9963)
!10638 = !DILocalVariable(name: "ret", scope: !10631, file: !1347, line: 273, type: !107)
!10639 = !DILocalVariable(name: "clk", scope: !10631, file: !1347, line: 278, type: !10265)
!10640 = !DILocation(line: 0, scope: !10631)
!10641 = !DILocation(line: 272, column: 45, scope: !10631)
!10642 = !DILocation(line: 282, column: 38, scope: !10643)
!10643 = distinct !DILexicalBlock(scope: !10644, file: !1347, line: 280, column: 10)
!10644 = distinct !DILexicalBlock(scope: !10631, file: !1347, line: 280, column: 6)
!10645 = !DILocation(line: 282, column: 6, scope: !10643)
!10646 = !DILocation(line: 281, column: 9, scope: !10643)
!10647 = !DILocation(line: 293, column: 1, scope: !10631)
!10648 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !247, file: !247, line: 730, type: !10621, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10649)
!10649 = !{!10650}
!10650 = !DILocalVariable(name: "dev", arg: 1, scope: !10648, file: !247, line: 730, type: !1205)
!10651 = !DILocation(line: 0, scope: !10648)
!10652 = !DILocation(line: 732, column: 9, scope: !10648)
!10653 = !DILocation(line: 732, column: 2, scope: !10648)
!10654 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1347, file: !1347, line: 496, type: !10655, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1176, retainedNodes: !10657)
!10655 = !DISubroutineType(types: !10656)
!10656 = !{!107, !1205, !107, !107, !107}
!10657 = !{!10658, !10659, !10660, !10661, !10662, !10663}
!10658 = !DILocalVariable(name: "dev", arg: 1, scope: !10654, file: !1347, line: 496, type: !1205)
!10659 = !DILocalVariable(name: "pin", arg: 2, scope: !10654, file: !1347, line: 496, type: !107)
!10660 = !DILocalVariable(name: "conf", arg: 3, scope: !10654, file: !1347, line: 496, type: !107)
!10661 = !DILocalVariable(name: "func", arg: 4, scope: !10654, file: !1347, line: 496, type: !107)
!10662 = !DILocalVariable(name: "ret", scope: !10654, file: !1347, line: 498, type: !107)
!10663 = !DILocalVariable(name: "gpio_out", scope: !10664, file: !1347, line: 508, type: !152)
!10664 = distinct !DILexicalBlock(scope: !10665, file: !1347, line: 507, column: 27)
!10665 = distinct !DILexicalBlock(scope: !10654, file: !1347, line: 507, column: 6)
!10666 = !DILocation(line: 0, scope: !10654)
!10667 = !DILocation(line: 505, column: 2, scope: !10654)
!10668 = !DILocation(line: 507, column: 11, scope: !10665)
!10669 = !DILocation(line: 507, column: 6, scope: !10654)
!10670 = !DILocation(line: 508, column: 28, scope: !10664)
!10671 = !DILocation(line: 0, scope: !10664)
!10672 = !DILocation(line: 510, column: 16, scope: !10673)
!10673 = distinct !DILexicalBlock(scope: !10664, file: !1347, line: 510, column: 7)
!10674 = !DILocation(line: 0, scope: !10673)
!10675 = !DILocation(line: 510, column: 7, scope: !10664)
!10676 = !DILocation(line: 511, column: 4, scope: !10677)
!10677 = distinct !DILexicalBlock(scope: !10673, file: !1347, line: 510, column: 32)
!10678 = !DILocation(line: 512, column: 3, scope: !10677)
!10679 = !DILocation(line: 513, column: 4, scope: !10680)
!10680 = distinct !DILexicalBlock(scope: !10681, file: !1347, line: 512, column: 39)
!10681 = distinct !DILexicalBlock(scope: !10673, file: !1347, line: 512, column: 14)
!10682 = !DILocation(line: 514, column: 3, scope: !10680)
!10683 = !DILocation(line: 518, column: 1, scope: !10654)
!10684 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1620, file: !1620, line: 526, type: !1523, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !10685)
!10685 = !{!10686, !10687, !10688}
!10686 = !DILocalVariable(name: "dev", arg: 1, scope: !10684, file: !1620, line: 526, type: !1525)
!10687 = !DILocalVariable(name: "c", arg: 2, scope: !10684, file: !1620, line: 526, type: !1137)
!10688 = !DILocalVariable(name: "config", scope: !10684, file: !1620, line: 528, type: !10689)
!10689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1661, size: 32)
!10690 = !DILocation(line: 0, scope: !10684)
!10691 = !DILocation(line: 528, column: 48, scope: !10684)
!10692 = !DILocation(line: 531, column: 40, scope: !10693)
!10693 = distinct !DILexicalBlock(scope: !10684, file: !1620, line: 531, column: 6)
!10694 = !DILocation(line: 531, column: 6, scope: !10693)
!10695 = !DILocation(line: 531, column: 6, scope: !10684)
!10696 = !DILocation(line: 532, column: 34, scope: !10697)
!10697 = distinct !DILexicalBlock(scope: !10693, file: !1620, line: 531, column: 48)
!10698 = !DILocation(line: 532, column: 3, scope: !10697)
!10699 = !DILocation(line: 533, column: 2, scope: !10697)
!10700 = !DILocation(line: 539, column: 42, scope: !10701)
!10701 = distinct !DILexicalBlock(scope: !10684, file: !1620, line: 539, column: 6)
!10702 = !DILocation(line: 539, column: 7, scope: !10701)
!10703 = !DILocation(line: 539, column: 6, scope: !10684)
!10704 = !DILocation(line: 543, column: 52, scope: !10684)
!10705 = !DILocation(line: 543, column: 22, scope: !10684)
!10706 = !DILocation(line: 543, column: 5, scope: !10684)
!10707 = !DILocation(line: 545, column: 2, scope: !10684)
!10708 = !DILocation(line: 546, column: 1, scope: !10684)
!10709 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1620, file: !1620, line: 548, type: !1542, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !10710)
!10710 = !{!10711, !10712, !10713, !10714}
!10711 = !DILocalVariable(name: "dev", arg: 1, scope: !10709, file: !1620, line: 548, type: !1525)
!10712 = !DILocalVariable(name: "c", arg: 2, scope: !10709, file: !1620, line: 549, type: !196)
!10713 = !DILocalVariable(name: "config", scope: !10709, file: !1620, line: 551, type: !10689)
!10714 = !DILocalVariable(name: "key", scope: !10709, file: !1620, line: 555, type: !32)
!10715 = !DILocation(line: 0, scope: !10709)
!10716 = !DILocation(line: 551, column: 48, scope: !10709)
!10717 = !DILocation(line: 562, column: 2, scope: !10709)
!10718 = !DILocation(line: 563, column: 41, scope: !10719)
!10719 = distinct !DILexicalBlock(scope: !10720, file: !1620, line: 563, column: 7)
!10720 = distinct !DILexicalBlock(scope: !10709, file: !1620, line: 562, column: 12)
!10721 = !DILocation(line: 563, column: 7, scope: !10719)
!10722 = !DILocation(line: 563, column: 7, scope: !10720)
!10723 = !DILocation(line: 55, column: 2, scope: !10724, inlinedAt: !10728)
!10724 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6002, file: !6002, line: 42, type: !6003, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !10725)
!10725 = !{!10726, !10727}
!10726 = !DILocalVariable(name: "key", scope: !10724, file: !6002, line: 44, type: !32)
!10727 = !DILocalVariable(name: "tmp", scope: !10724, file: !6002, line: 53, type: !32)
!10728 = distinct !DILocation(line: 564, column: 10, scope: !10729)
!10729 = distinct !DILexicalBlock(scope: !10719, file: !1620, line: 563, column: 49)
!10730 = !{i64 2331958}
!10731 = !DILocation(line: 0, scope: !10724, inlinedAt: !10728)
!10732 = !DILocation(line: 565, column: 42, scope: !10733)
!10733 = distinct !DILexicalBlock(scope: !10729, file: !1620, line: 565, column: 8)
!10734 = !DILocation(line: 565, column: 8, scope: !10733)
!10735 = !DILocation(line: 565, column: 8, scope: !10729)
!10736 = !DILocalVariable(name: "key", arg: 1, scope: !10737, file: !6002, line: 84, type: !32)
!10737 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6002, file: !6002, line: 84, type: !6013, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !10738)
!10738 = !{!10736}
!10739 = !DILocation(line: 0, scope: !10737, inlinedAt: !10740)
!10740 = distinct !DILocation(line: 568, column: 4, scope: !10729)
!10741 = !DILocation(line: 95, column: 2, scope: !10737, inlinedAt: !10740)
!10742 = !{i64 2332775}
!10743 = !DILocation(line: 569, column: 3, scope: !10729)
!10744 = distinct !{!10744, !10717, !10745}
!10745 = !DILocation(line: 570, column: 2, scope: !10709)
!10746 = !DILocation(line: 592, column: 33, scope: !10709)
!10747 = !DILocation(line: 592, column: 2, scope: !10709)
!10748 = !DILocation(line: 0, scope: !10737, inlinedAt: !10749)
!10749 = distinct !DILocation(line: 593, column: 2, scope: !10709)
!10750 = !DILocation(line: 95, column: 2, scope: !10737, inlinedAt: !10749)
!10751 = !DILocation(line: 594, column: 1, scope: !10709)
!10752 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1620, file: !1620, line: 596, type: !1546, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !10753)
!10753 = !{!10754, !10755, !10756}
!10754 = !DILocalVariable(name: "dev", arg: 1, scope: !10752, file: !1620, line: 596, type: !1525)
!10755 = !DILocalVariable(name: "config", scope: !10752, file: !1620, line: 598, type: !10689)
!10756 = !DILocalVariable(name: "err", scope: !10752, file: !1620, line: 599, type: !152)
!10757 = !DILocation(line: 0, scope: !10752)
!10758 = !DILocation(line: 598, column: 48, scope: !10752)
!10759 = !DILocation(line: 606, column: 40, scope: !10760)
!10760 = distinct !DILexicalBlock(scope: !10752, file: !1620, line: 606, column: 6)
!10761 = !DILocation(line: 606, column: 6, scope: !10760)
!10762 = !DILocation(line: 606, column: 6, scope: !10752)
!10763 = !DILocation(line: 610, column: 39, scope: !10764)
!10764 = distinct !DILexicalBlock(scope: !10752, file: !1620, line: 610, column: 6)
!10765 = !DILocation(line: 610, column: 6, scope: !10764)
!10766 = !DILocation(line: 610, column: 6, scope: !10752)
!10767 = !DILocation(line: 614, column: 39, scope: !10768)
!10768 = distinct !DILexicalBlock(scope: !10752, file: !1620, line: 614, column: 6)
!10769 = !DILocation(line: 614, column: 6, scope: !10768)
!10770 = !DILocation(line: 614, column: 6, scope: !10752)
!10771 = !DILocation(line: 619, column: 40, scope: !10772)
!10772 = distinct !DILexicalBlock(scope: !10752, file: !1620, line: 619, column: 6)
!10773 = !DILocation(line: 619, column: 6, scope: !10772)
!10774 = !DILocation(line: 619, column: 6, scope: !10752)
!10775 = !DILocation(line: 623, column: 10, scope: !10776)
!10776 = distinct !DILexicalBlock(scope: !10752, file: !1620, line: 623, column: 6)
!10777 = !DILocation(line: 623, column: 6, scope: !10752)
!10778 = !DILocation(line: 624, column: 34, scope: !10779)
!10779 = distinct !DILexicalBlock(scope: !10776, file: !1620, line: 623, column: 24)
!10780 = !DILocation(line: 624, column: 3, scope: !10779)
!10781 = !DILocation(line: 625, column: 2, scope: !10779)
!10782 = !DILocation(line: 632, column: 10, scope: !10783)
!10783 = distinct !DILexicalBlock(scope: !10752, file: !1620, line: 632, column: 6)
!10784 = !DILocation(line: 632, column: 6, scope: !10752)
!10785 = !DILocation(line: 633, column: 34, scope: !10786)
!10786 = distinct !DILexicalBlock(scope: !10783, file: !1620, line: 632, column: 32)
!10787 = !DILocation(line: 633, column: 3, scope: !10786)
!10788 = !DILocation(line: 634, column: 2, scope: !10786)
!10789 = !DILocation(line: 636, column: 10, scope: !10790)
!10790 = distinct !DILexicalBlock(scope: !10752, file: !1620, line: 636, column: 6)
!10791 = !DILocation(line: 636, column: 6, scope: !10752)
!10792 = !DILocation(line: 637, column: 33, scope: !10793)
!10793 = distinct !DILexicalBlock(scope: !10790, file: !1620, line: 636, column: 31)
!10794 = !DILocation(line: 637, column: 3, scope: !10793)
!10795 = !DILocation(line: 638, column: 2, scope: !10793)
!10796 = !DILocation(line: 640, column: 10, scope: !10797)
!10797 = distinct !DILexicalBlock(scope: !10752, file: !1620, line: 640, column: 6)
!10798 = !DILocation(line: 640, column: 6, scope: !10752)
!10799 = !DILocation(line: 641, column: 33, scope: !10800)
!10800 = distinct !DILexicalBlock(scope: !10797, file: !1620, line: 640, column: 32)
!10801 = !DILocation(line: 641, column: 3, scope: !10800)
!10802 = !DILocation(line: 642, column: 2, scope: !10800)
!10803 = !DILocation(line: 646, column: 32, scope: !10752)
!10804 = !DILocation(line: 646, column: 2, scope: !10752)
!10805 = !DILocation(line: 648, column: 2, scope: !10752)
!10806 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1620, file: !1620, line: 419, type: !1550, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !10807)
!10807 = !{!10808, !10809, !10810, !10811, !10813, !10814, !10815, !10816}
!10808 = !DILocalVariable(name: "dev", arg: 1, scope: !10806, file: !1620, line: 419, type: !1525)
!10809 = !DILocalVariable(name: "cfg", arg: 2, scope: !10806, file: !1620, line: 420, type: !1552)
!10810 = !DILocalVariable(name: "config", scope: !10806, file: !1620, line: 422, type: !10689)
!10811 = !DILocalVariable(name: "data", scope: !10806, file: !1620, line: 423, type: !10812)
!10812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1718, size: 32)
!10813 = !DILocalVariable(name: "parity", scope: !10806, file: !1620, line: 424, type: !6598)
!10814 = !DILocalVariable(name: "stopbits", scope: !10806, file: !1620, line: 425, type: !6598)
!10815 = !DILocalVariable(name: "databits", scope: !10806, file: !1620, line: 426, type: !6598)
!10816 = !DILocalVariable(name: "flowctrl", scope: !10806, file: !1620, line: 428, type: !6598)
!10817 = !DILocation(line: 0, scope: !10806)
!10818 = !DILocation(line: 422, column: 48, scope: !10806)
!10819 = !DILocation(line: 423, column: 38, scope: !10806)
!10820 = !DILocation(line: 424, column: 56, scope: !10806)
!10821 = !DILocation(line: 424, column: 51, scope: !10806)
!10822 = !DILocation(line: 424, column: 26, scope: !10806)
!10823 = !DILocation(line: 425, column: 60, scope: !10806)
!10824 = !DILocation(line: 425, column: 55, scope: !10806)
!10825 = !DILocation(line: 425, column: 28, scope: !10806)
!10826 = !DILocation(line: 426, column: 60, scope: !10806)
!10827 = !DILocation(line: 426, column: 55, scope: !10806)
!10828 = !DILocation(line: 426, column: 28, scope: !10806)
!10829 = !DILocation(line: 428, column: 58, scope: !10806)
!10830 = !DILocation(line: 428, column: 53, scope: !10806)
!10831 = !DILocation(line: 428, column: 28, scope: !10806)
!10832 = !DILocation(line: 431, column: 44, scope: !10833)
!10833 = distinct !DILexicalBlock(scope: !10806, file: !1620, line: 431, column: 6)
!10834 = !DILocation(line: 438, column: 22, scope: !10835)
!10835 = distinct !DILexicalBlock(scope: !10806, file: !1620, line: 437, column: 6)
!10836 = !DILocation(line: 437, column: 6, scope: !10806)
!10837 = !DILocation(line: 448, column: 6, scope: !10806)
!10838 = !DILocation(line: 465, column: 47, scope: !10839)
!10839 = distinct !DILexicalBlock(scope: !10806, file: !1620, line: 465, column: 6)
!10840 = !DILocation(line: 475, column: 21, scope: !10841)
!10841 = distinct !DILexicalBlock(scope: !10806, file: !1620, line: 475, column: 6)
!10842 = !DILocation(line: 475, column: 6, scope: !10806)
!10843 = !DILocation(line: 476, column: 8, scope: !10844)
!10844 = distinct !DILexicalBlock(scope: !10845, file: !1620, line: 476, column: 7)
!10845 = distinct !DILexicalBlock(scope: !10841, file: !1620, line: 475, column: 49)
!10846 = !DILocation(line: 477, column: 34, scope: !10844)
!10847 = !DILocation(line: 476, column: 7, scope: !10845)
!10848 = !DILocation(line: 482, column: 27, scope: !10806)
!10849 = !DILocation(line: 482, column: 2, scope: !10806)
!10850 = !DILocation(line: 484, column: 16, scope: !10851)
!10851 = distinct !DILexicalBlock(scope: !10806, file: !1620, line: 484, column: 6)
!10852 = !DILocation(line: 484, column: 13, scope: !10851)
!10853 = !DILocation(line: 484, column: 6, scope: !10806)
!10854 = !DILocation(line: 485, column: 3, scope: !10855)
!10855 = distinct !DILexicalBlock(scope: !10851, file: !1620, line: 484, column: 44)
!10856 = !DILocation(line: 486, column: 2, scope: !10855)
!10857 = !DILocation(line: 488, column: 18, scope: !10858)
!10858 = distinct !DILexicalBlock(scope: !10806, file: !1620, line: 488, column: 6)
!10859 = !DILocation(line: 488, column: 15, scope: !10858)
!10860 = !DILocation(line: 488, column: 6, scope: !10806)
!10861 = !DILocation(line: 489, column: 3, scope: !10862)
!10862 = distinct !DILexicalBlock(scope: !10858, file: !1620, line: 488, column: 48)
!10863 = !DILocation(line: 490, column: 2, scope: !10862)
!10864 = !DILocation(line: 492, column: 18, scope: !10865)
!10865 = distinct !DILexicalBlock(scope: !10806, file: !1620, line: 492, column: 6)
!10866 = !DILocation(line: 492, column: 15, scope: !10865)
!10867 = !DILocation(line: 492, column: 6, scope: !10806)
!10868 = !DILocation(line: 493, column: 3, scope: !10869)
!10869 = distinct !DILexicalBlock(scope: !10865, file: !1620, line: 492, column: 48)
!10870 = !DILocation(line: 494, column: 2, scope: !10869)
!10871 = !DILocation(line: 496, column: 18, scope: !10872)
!10872 = distinct !DILexicalBlock(scope: !10806, file: !1620, line: 496, column: 6)
!10873 = !DILocation(line: 496, column: 15, scope: !10872)
!10874 = !DILocation(line: 496, column: 6, scope: !10806)
!10875 = !DILocation(line: 497, column: 3, scope: !10876)
!10876 = distinct !DILexicalBlock(scope: !10872, file: !1620, line: 496, column: 46)
!10877 = !DILocation(line: 498, column: 2, scope: !10876)
!10878 = !DILocation(line: 500, column: 11, scope: !10879)
!10879 = distinct !DILexicalBlock(scope: !10806, file: !1620, line: 500, column: 6)
!10880 = !DILocation(line: 500, column: 29, scope: !10879)
!10881 = !DILocation(line: 500, column: 20, scope: !10879)
!10882 = !DILocation(line: 500, column: 6, scope: !10806)
!10883 = !DILocation(line: 501, column: 3, scope: !10884)
!10884 = distinct !DILexicalBlock(scope: !10879, file: !1620, line: 500, column: 40)
!10885 = !DILocation(line: 502, column: 26, scope: !10884)
!10886 = !DILocation(line: 502, column: 19, scope: !10884)
!10887 = !DILocation(line: 503, column: 2, scope: !10884)
!10888 = !DILocation(line: 505, column: 26, scope: !10806)
!10889 = !DILocation(line: 505, column: 2, scope: !10806)
!10890 = !DILocation(line: 506, column: 2, scope: !10806)
!10891 = !DILocation(line: 507, column: 1, scope: !10806)
!10892 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1620, file: !1620, line: 509, type: !1563, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !10893)
!10893 = !{!10894, !10895, !10896}
!10894 = !DILocalVariable(name: "dev", arg: 1, scope: !10892, file: !1620, line: 509, type: !1525)
!10895 = !DILocalVariable(name: "cfg", arg: 2, scope: !10892, file: !1620, line: 510, type: !1565)
!10896 = !DILocalVariable(name: "data", scope: !10892, file: !1620, line: 512, type: !10812)
!10897 = !DILocation(line: 0, scope: !10892)
!10898 = !DILocation(line: 512, column: 38, scope: !10892)
!10899 = !DILocation(line: 514, column: 24, scope: !10892)
!10900 = !DILocation(line: 514, column: 7, scope: !10892)
!10901 = !DILocation(line: 514, column: 16, scope: !10892)
!10902 = !DILocation(line: 515, column: 41, scope: !10892)
!10903 = !{i32 0, i32 1537}
!10904 = !DILocation(line: 515, column: 16, scope: !10892)
!10905 = !DILocation(line: 515, column: 7, scope: !10892)
!10906 = !DILocation(line: 515, column: 14, scope: !10892)
!10907 = !DILocation(line: 517, column: 3, scope: !10892)
!10908 = !{i32 0, i32 12289}
!10909 = !DILocation(line: 516, column: 19, scope: !10892)
!10910 = !DILocation(line: 516, column: 7, scope: !10892)
!10911 = !DILocation(line: 516, column: 17, scope: !10892)
!10912 = !DILocation(line: 519, column: 3, scope: !10892)
!10913 = !DILocation(line: 519, column: 33, scope: !10892)
!10914 = !DILocation(line: 518, column: 19, scope: !10892)
!10915 = !DILocation(line: 518, column: 7, scope: !10892)
!10916 = !DILocation(line: 518, column: 17, scope: !10892)
!10917 = !DILocation(line: 521, column: 3, scope: !10892)
!10918 = !{i32 0, i32 769}
!10919 = !DILocation(line: 520, column: 19, scope: !10892)
!10920 = !DILocation(line: 520, column: 7, scope: !10892)
!10921 = !DILocation(line: 520, column: 17, scope: !10892)
!10922 = !DILocation(line: 522, column: 2, scope: !10892)
!10923 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1620, file: !1620, line: 205, type: !10924, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !10926)
!10924 = !DISubroutineType(types: !10925)
!10925 = !{!152, !1525}
!10926 = !{!10927, !10928}
!10927 = !DILocalVariable(name: "dev", arg: 1, scope: !10923, file: !1620, line: 205, type: !1525)
!10928 = !DILocalVariable(name: "config", scope: !10923, file: !1620, line: 207, type: !10689)
!10929 = !DILocation(line: 0, scope: !10923)
!10930 = !DILocation(line: 207, column: 48, scope: !10923)
!10931 = !DILocation(line: 209, column: 36, scope: !10923)
!10932 = !DILocation(line: 209, column: 9, scope: !10923)
!10933 = !DILocation(line: 209, column: 2, scope: !10923)
!10934 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1620, file: !1620, line: 270, type: !10935, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !10937)
!10935 = !DISubroutineType(types: !10936)
!10936 = !{!1491, !152}
!10937 = !{!10938}
!10938 = !DILocalVariable(name: "parity", arg: 1, scope: !10934, file: !1620, line: 270, type: !152)
!10939 = !DILocation(line: 0, scope: !10934)
!10940 = !DILocation(line: 272, column: 2, scope: !10934)
!10941 = !DILocation(line: 281, column: 1, scope: !10934)
!10942 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1620, file: !1620, line: 220, type: !10924, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !10943)
!10943 = !{!10944, !10945}
!10944 = !DILocalVariable(name: "dev", arg: 1, scope: !10942, file: !1620, line: 220, type: !1525)
!10945 = !DILocalVariable(name: "config", scope: !10942, file: !1620, line: 222, type: !10689)
!10946 = !DILocation(line: 0, scope: !10942)
!10947 = !DILocation(line: 222, column: 48, scope: !10942)
!10948 = !DILocation(line: 224, column: 44, scope: !10942)
!10949 = !DILocation(line: 224, column: 9, scope: !10942)
!10950 = !DILocation(line: 224, column: 2, scope: !10942)
!10951 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1620, file: !1620, line: 304, type: !10952, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !10954)
!10952 = !DISubroutineType(types: !10953)
!10953 = !{!1505, !152}
!10954 = !{!10955}
!10955 = !DILocalVariable(name: "sb", arg: 1, scope: !10951, file: !1620, line: 304, type: !152)
!10956 = !DILocation(line: 0, scope: !10951)
!10957 = !DILocation(line: 306, column: 2, scope: !10951)
!10958 = !DILocation(line: 0, scope: !10959)
!10959 = distinct !DILexicalBlock(scope: !10951, file: !1620, line: 306, column: 14)
!10960 = !DILocation(line: 323, column: 1, scope: !10951)
!10961 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1620, file: !1620, line: 235, type: !10924, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !10962)
!10962 = !{!10963, !10964}
!10963 = !DILocalVariable(name: "dev", arg: 1, scope: !10961, file: !1620, line: 235, type: !1525)
!10964 = !DILocalVariable(name: "config", scope: !10961, file: !1620, line: 237, type: !10689)
!10965 = !DILocation(line: 0, scope: !10961)
!10966 = !DILocation(line: 237, column: 48, scope: !10961)
!10967 = !DILocation(line: 239, column: 39, scope: !10961)
!10968 = !DILocation(line: 239, column: 9, scope: !10961)
!10969 = !DILocation(line: 239, column: 2, scope: !10961)
!10970 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1620, file: !1620, line: 355, type: !10971, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !10973)
!10971 = !DISubroutineType(types: !10972)
!10972 = !{!1498, !152, !152}
!10973 = !{!10974, !10975}
!10974 = !DILocalVariable(name: "db", arg: 1, scope: !10970, file: !1620, line: 355, type: !152)
!10975 = !DILocalVariable(name: "p", arg: 2, scope: !10970, file: !1620, line: 356, type: !152)
!10976 = !DILocation(line: 0, scope: !10970)
!10977 = !DILocation(line: 358, column: 2, scope: !10970)
!10978 = !DILocation(line: 384, column: 1, scope: !10970)
!10979 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1620, file: !1620, line: 250, type: !10924, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !10980)
!10980 = !{!10981, !10982}
!10981 = !DILocalVariable(name: "dev", arg: 1, scope: !10979, file: !1620, line: 250, type: !1525)
!10982 = !DILocalVariable(name: "config", scope: !10979, file: !1620, line: 252, type: !10689)
!10983 = !DILocation(line: 0, scope: !10979)
!10984 = !DILocation(line: 252, column: 48, scope: !10979)
!10985 = !DILocation(line: 254, column: 40, scope: !10979)
!10986 = !DILocation(line: 254, column: 9, scope: !10979)
!10987 = !DILocation(line: 254, column: 2, scope: !10979)
!10988 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1620, file: !1620, line: 409, type: !10989, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !10991)
!10989 = !DISubroutineType(types: !10990)
!10990 = !{!1511, !152}
!10991 = !{!10992}
!10992 = !DILocalVariable(name: "fc", arg: 1, scope: !10988, file: !1620, line: 409, type: !152)
!10993 = !DILocation(line: 0, scope: !10988)
!10994 = !DILocation(line: 411, column: 9, scope: !10995)
!10995 = distinct !DILexicalBlock(scope: !10988, file: !1620, line: 411, column: 6)
!10996 = !DILocation(line: 416, column: 1, scope: !10988)
!10997 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !10998, file: !10998, line: 967, type: !10999, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11001)
!10998 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10999 = !DISubroutineType(types: !11000)
!11000 = !{!152, !1566}
!11001 = !{!11002}
!11002 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10997, file: !10998, line: 967, type: !1566)
!11003 = !DILocation(line: 0, scope: !10997)
!11004 = !DILocation(line: 969, column: 21, scope: !10997)
!11005 = !DILocation(line: 969, column: 3, scope: !10997)
!11006 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !10998, file: !10998, line: 601, type: !10999, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11007)
!11007 = !{!11008}
!11008 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11006, file: !10998, line: 601, type: !1566)
!11009 = !DILocation(line: 0, scope: !11006)
!11010 = !DILocation(line: 603, column: 21, scope: !11006)
!11011 = !DILocation(line: 603, column: 3, scope: !11006)
!11012 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !10998, file: !10998, line: 820, type: !10999, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11013)
!11013 = !{!11014}
!11014 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11012, file: !10998, line: 820, type: !1566)
!11015 = !DILocation(line: 0, scope: !11012)
!11016 = !DILocation(line: 822, column: 21, scope: !11012)
!11017 = !DILocation(line: 822, column: 3, scope: !11012)
!11018 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !10998, file: !10998, line: 547, type: !10999, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11019)
!11019 = !{!11020}
!11020 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11018, file: !10998, line: 547, type: !1566)
!11021 = !DILocation(line: 0, scope: !11018)
!11022 = !DILocation(line: 549, column: 21, scope: !11018)
!11023 = !DILocation(line: 549, column: 3, scope: !11018)
!11024 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1620, file: !1620, line: 257, type: !11025, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11027)
!11025 = !DISubroutineType(types: !11026)
!11026 = !{!152, !1491}
!11027 = !{!11028}
!11028 = !DILocalVariable(name: "parity", arg: 1, scope: !11024, file: !1620, line: 257, type: !1491)
!11029 = !DILocation(line: 0, scope: !11024)
!11030 = !DILocation(line: 259, column: 2, scope: !11024)
!11031 = !DILocation(line: 268, column: 1, scope: !11024)
!11032 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1620, file: !1620, line: 283, type: !11033, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11035)
!11033 = !DISubroutineType(types: !11034)
!11034 = !{!152, !1505}
!11035 = !{!11036}
!11036 = !DILocalVariable(name: "sb", arg: 1, scope: !11032, file: !1620, line: 283, type: !1505)
!11037 = !DILocation(line: 0, scope: !11032)
!11038 = !DILocation(line: 285, column: 2, scope: !11032)
!11039 = !DILocation(line: 0, scope: !11040)
!11040 = distinct !DILexicalBlock(scope: !11032, file: !1620, line: 285, column: 14)
!11041 = !DILocation(line: 302, column: 1, scope: !11032)
!11042 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1620, file: !1620, line: 325, type: !11043, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11045)
!11043 = !DISubroutineType(types: !11044)
!11044 = !{!152, !1498, !1491}
!11045 = !{!11046, !11047}
!11046 = !DILocalVariable(name: "db", arg: 1, scope: !11042, file: !1620, line: 325, type: !1498)
!11047 = !DILocalVariable(name: "p", arg: 2, scope: !11042, file: !1620, line: 326, type: !1491)
!11048 = !DILocation(line: 0, scope: !11042)
!11049 = !DILocation(line: 328, column: 2, scope: !11042)
!11050 = !DILocation(line: 353, column: 1, scope: !11042)
!11051 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1620, file: !1620, line: 393, type: !11052, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11054)
!11052 = !DISubroutineType(types: !11053)
!11053 = !{!152, !1511}
!11054 = !{!11055}
!11055 = !DILocalVariable(name: "fc", arg: 1, scope: !11051, file: !1620, line: 393, type: !1511)
!11056 = !DILocation(line: 0, scope: !11051)
!11057 = !DILocation(line: 395, column: 9, scope: !11058)
!11058 = distinct !DILexicalBlock(scope: !11051, file: !1620, line: 395, column: 6)
!11059 = !DILocation(line: 400, column: 1, scope: !11051)
!11060 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !10998, file: !10998, line: 424, type: !11061, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11063)
!11061 = !DISubroutineType(types: !11062)
!11062 = !{null, !1566}
!11063 = !{!11064}
!11064 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11060, file: !10998, line: 424, type: !1566)
!11065 = !DILocation(line: 0, scope: !11060)
!11066 = !DILocation(line: 426, column: 3, scope: !11060)
!11067 = !DILocation(line: 427, column: 1, scope: !11060)
!11068 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1620, file: !1620, line: 197, type: !11069, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11071)
!11069 = !DISubroutineType(types: !11070)
!11070 = !{null, !1525, !152}
!11071 = !{!11072, !11073, !11074}
!11072 = !DILocalVariable(name: "dev", arg: 1, scope: !11068, file: !1620, line: 197, type: !1525)
!11073 = !DILocalVariable(name: "parity", arg: 2, scope: !11068, file: !1620, line: 198, type: !152)
!11074 = !DILocalVariable(name: "config", scope: !11068, file: !1620, line: 200, type: !10689)
!11075 = !DILocation(line: 0, scope: !11068)
!11076 = !DILocation(line: 200, column: 48, scope: !11068)
!11077 = !DILocation(line: 202, column: 29, scope: !11068)
!11078 = !DILocation(line: 202, column: 2, scope: !11068)
!11079 = !DILocation(line: 203, column: 1, scope: !11068)
!11080 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1620, file: !1620, line: 212, type: !11069, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11081)
!11081 = !{!11082, !11083, !11084}
!11082 = !DILocalVariable(name: "dev", arg: 1, scope: !11080, file: !1620, line: 212, type: !1525)
!11083 = !DILocalVariable(name: "stopbits", arg: 2, scope: !11080, file: !1620, line: 213, type: !152)
!11084 = !DILocalVariable(name: "config", scope: !11080, file: !1620, line: 215, type: !10689)
!11085 = !DILocation(line: 0, scope: !11080)
!11086 = !DILocation(line: 215, column: 48, scope: !11080)
!11087 = !DILocation(line: 217, column: 37, scope: !11080)
!11088 = !DILocation(line: 217, column: 2, scope: !11080)
!11089 = !DILocation(line: 218, column: 1, scope: !11080)
!11090 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1620, file: !1620, line: 227, type: !11069, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11091)
!11091 = !{!11092, !11093, !11094}
!11092 = !DILocalVariable(name: "dev", arg: 1, scope: !11090, file: !1620, line: 227, type: !1525)
!11093 = !DILocalVariable(name: "databits", arg: 2, scope: !11090, file: !1620, line: 228, type: !152)
!11094 = !DILocalVariable(name: "config", scope: !11090, file: !1620, line: 230, type: !10689)
!11095 = !DILocation(line: 0, scope: !11090)
!11096 = !DILocation(line: 230, column: 48, scope: !11090)
!11097 = !DILocation(line: 232, column: 32, scope: !11090)
!11098 = !DILocation(line: 232, column: 2, scope: !11090)
!11099 = !DILocation(line: 233, column: 1, scope: !11090)
!11100 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1620, file: !1620, line: 242, type: !11069, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11101)
!11101 = !{!11102, !11103, !11104}
!11102 = !DILocalVariable(name: "dev", arg: 1, scope: !11100, file: !1620, line: 242, type: !1525)
!11103 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !11100, file: !1620, line: 243, type: !152)
!11104 = !DILocalVariable(name: "config", scope: !11100, file: !1620, line: 245, type: !10689)
!11105 = !DILocation(line: 0, scope: !11100)
!11106 = !DILocation(line: 245, column: 48, scope: !11100)
!11107 = !DILocation(line: 247, column: 33, scope: !11100)
!11108 = !DILocation(line: 247, column: 2, scope: !11100)
!11109 = !DILocation(line: 248, column: 1, scope: !11100)
!11110 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1620, file: !1620, line: 107, type: !11069, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11111)
!11111 = !{!11112, !11113, !11114, !11115, !11116}
!11112 = !DILocalVariable(name: "dev", arg: 1, scope: !11110, file: !1620, line: 107, type: !1525)
!11113 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !11110, file: !1620, line: 107, type: !152)
!11114 = !DILocalVariable(name: "config", scope: !11110, file: !1620, line: 109, type: !10689)
!11115 = !DILocalVariable(name: "data", scope: !11110, file: !1620, line: 110, type: !10812)
!11116 = !DILocalVariable(name: "clock_rate", scope: !11110, file: !1620, line: 112, type: !152)
!11117 = !DILocation(line: 0, scope: !11110)
!11118 = !DILocation(line: 109, column: 48, scope: !11110)
!11119 = !DILocation(line: 110, column: 38, scope: !11110)
!11120 = !DILocation(line: 112, column: 2, scope: !11110)
!11121 = !DILocation(line: 123, column: 36, scope: !11122)
!11122 = distinct !DILexicalBlock(scope: !11123, file: !1620, line: 123, column: 7)
!11123 = distinct !DILexicalBlock(scope: !11124, file: !1620, line: 122, column: 9)
!11124 = distinct !DILexicalBlock(scope: !11110, file: !1620, line: 115, column: 6)
!11125 = !DILocation(line: 124, column: 42, scope: !11122)
!11126 = !DILocation(line: 123, column: 7, scope: !11122)
!11127 = !DILocation(line: 125, column: 22, scope: !11122)
!11128 = !DILocation(line: 123, column: 7, scope: !11123)
!11129 = !DILocation(line: 126, column: 4, scope: !11130)
!11130 = distinct !DILexicalBlock(scope: !11131, file: !1620, line: 126, column: 4)
!11131 = distinct !DILexicalBlock(scope: !11132, file: !1620, line: 126, column: 4)
!11132 = distinct !DILexicalBlock(scope: !11133, file: !1620, line: 126, column: 4)
!11133 = distinct !DILexicalBlock(scope: !11134, file: !1620, line: 126, column: 4)
!11134 = distinct !DILexicalBlock(scope: !11122, file: !1620, line: 125, column: 27)
!11135 = !DILocation(line: 127, column: 4, scope: !11134)
!11136 = !DILocation(line: 176, column: 36, scope: !11110)
!11137 = !DILocation(line: 176, column: 3, scope: !11110)
!11138 = !DILocation(line: 179, column: 32, scope: !11110)
!11139 = !DILocation(line: 180, column: 10, scope: !11110)
!11140 = !DILocation(line: 179, column: 3, scope: !11110)
!11141 = !DILocation(line: 189, column: 3, scope: !11142)
!11142 = distinct !DILexicalBlock(scope: !11143, file: !1620, line: 189, column: 3)
!11143 = distinct !DILexicalBlock(scope: !11110, file: !1620, line: 189, column: 3)
!11144 = !DILocation(line: 189, column: 3, scope: !11143)
!11145 = !DILocation(line: 189, column: 3, scope: !11146)
!11146 = distinct !DILexicalBlock(scope: !11142, file: !1620, line: 189, column: 3)
!11147 = !DILocation(line: 195, column: 1, scope: !11110)
!11148 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !10998, file: !10998, line: 410, type: !11061, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11149)
!11149 = !{!11150}
!11150 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11148, file: !10998, line: 410, type: !1566)
!11151 = !DILocation(line: 0, scope: !11148)
!11152 = !DILocation(line: 412, column: 3, scope: !11148)
!11153 = !DILocation(line: 413, column: 1, scope: !11148)
!11154 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !980, file: !980, line: 216, type: !1599, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11155)
!11155 = !{!11156, !11157, !11158, !11159}
!11156 = !DILocalVariable(name: "dev", arg: 1, scope: !11154, file: !980, line: 216, type: !1525)
!11157 = !DILocalVariable(name: "sys", arg: 2, scope: !11154, file: !980, line: 217, type: !1076)
!11158 = !DILocalVariable(name: "rate", arg: 3, scope: !11154, file: !980, line: 218, type: !1032)
!11159 = !DILocalVariable(name: "api", scope: !11154, file: !980, line: 220, type: !1577)
!11160 = !DILocation(line: 0, scope: !11154)
!11161 = !DILocation(line: 221, column: 49, scope: !11154)
!11162 = !DILocation(line: 223, column: 11, scope: !11163)
!11163 = distinct !DILexicalBlock(scope: !11154, file: !980, line: 223, column: 6)
!11164 = !DILocation(line: 223, column: 20, scope: !11163)
!11165 = !DILocation(line: 223, column: 6, scope: !11154)
!11166 = !DILocation(line: 227, column: 9, scope: !11154)
!11167 = !DILocation(line: 227, column: 2, scope: !11154)
!11168 = !DILocation(line: 228, column: 1, scope: !11154)
!11169 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !6080, file: !6080, line: 175, type: !6081, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11170)
!11170 = !{!11171}
!11171 = !DILocalVariable(name: "level", arg: 1, scope: !11169, file: !6080, line: 175, type: !107)
!11172 = !DILocation(line: 0, scope: !11169)
!11173 = !DILocation(line: 177, column: 2, scope: !11169)
!11174 = !DILocation(line: 189, column: 1, scope: !11169)
!11175 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !10998, file: !10998, line: 615, type: !11176, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11178)
!11176 = !DISubroutineType(types: !11177)
!11177 = !{null, !1566, !152}
!11178 = !{!11179, !11180}
!11179 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11175, file: !10998, line: 615, type: !1566)
!11180 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !11175, file: !10998, line: 615, type: !152)
!11181 = !DILocation(line: 0, scope: !11175)
!11182 = !DILocation(line: 617, column: 3, scope: !11175)
!11183 = !DILocation(line: 618, column: 1, scope: !11175)
!11184 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !10998, file: !10998, line: 1020, type: !11185, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11187)
!11185 = !DISubroutineType(types: !11186)
!11186 = !{null, !1566, !152, !152, !152}
!11187 = !{!11188, !11189, !11190, !11191}
!11188 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11184, file: !10998, line: 1020, type: !1566)
!11189 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !11184, file: !10998, line: 1020, type: !152)
!11190 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !11184, file: !10998, line: 1020, type: !152)
!11191 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !11184, file: !10998, line: 1021, type: !152)
!11192 = !DILocation(line: 0, scope: !11184)
!11193 = !DILocation(line: 1029, column: 30, scope: !11194)
!11194 = distinct !DILexicalBlock(scope: !11195, file: !10998, line: 1028, column: 3)
!11195 = distinct !DILexicalBlock(scope: !11184, file: !10998, line: 1023, column: 7)
!11196 = !DILocation(line: 1029, column: 19, scope: !11194)
!11197 = !DILocation(line: 1029, column: 13, scope: !11194)
!11198 = !DILocation(line: 1029, column: 17, scope: !11194)
!11199 = !DILocation(line: 1031, column: 1, scope: !11184)
!11200 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !10998, file: !10998, line: 949, type: !11176, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11201)
!11201 = !{!11202, !11203}
!11202 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11200, file: !10998, line: 949, type: !1566)
!11203 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !11200, file: !10998, line: 949, type: !152)
!11204 = !DILocation(line: 0, scope: !11200)
!11205 = !DILocation(line: 951, column: 3, scope: !11200)
!11206 = !DILocation(line: 952, column: 1, scope: !11200)
!11207 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !10998, file: !10998, line: 588, type: !11176, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11208)
!11208 = !{!11209, !11210}
!11209 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11207, file: !10998, line: 588, type: !1566)
!11210 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11207, file: !10998, line: 588, type: !152)
!11211 = !DILocation(line: 0, scope: !11207)
!11212 = !DILocation(line: 590, column: 3, scope: !11207)
!11213 = !DILocation(line: 591, column: 1, scope: !11207)
!11214 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !10998, file: !10998, line: 805, type: !11176, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11215)
!11215 = !{!11216, !11217}
!11216 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11214, file: !10998, line: 805, type: !1566)
!11217 = !DILocalVariable(name: "StopBits", arg: 2, scope: !11214, file: !10998, line: 805, type: !152)
!11218 = !DILocation(line: 0, scope: !11214)
!11219 = !DILocation(line: 807, column: 3, scope: !11214)
!11220 = !DILocation(line: 808, column: 1, scope: !11214)
!11221 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !10998, file: !10998, line: 532, type: !11176, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11222)
!11222 = !{!11223, !11224}
!11223 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11221, file: !10998, line: 532, type: !1566)
!11224 = !DILocalVariable(name: "Parity", arg: 2, scope: !11221, file: !10998, line: 532, type: !152)
!11225 = !DILocation(line: 0, scope: !11221)
!11226 = !DILocation(line: 534, column: 3, scope: !11221)
!11227 = !DILocation(line: 535, column: 1, scope: !11221)
!11228 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !10998, file: !10998, line: 1770, type: !10999, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11229)
!11229 = !{!11230}
!11230 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11228, file: !10998, line: 1770, type: !1566)
!11231 = !DILocation(line: 0, scope: !11228)
!11232 = !DILocation(line: 1772, column: 11, scope: !11228)
!11233 = !DILocation(line: 1772, column: 46, scope: !11228)
!11234 = !DILocation(line: 1772, column: 3, scope: !11228)
!11235 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !10998, file: !10998, line: 1737, type: !10999, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11236)
!11236 = !{!11237}
!11237 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11235, file: !10998, line: 1737, type: !1566)
!11238 = !DILocation(line: 0, scope: !11235)
!11239 = !DILocation(line: 1739, column: 11, scope: !11235)
!11240 = !DILocation(line: 1739, column: 3, scope: !11235)
!11241 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !10998, file: !10998, line: 1748, type: !10999, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11242)
!11242 = !{!11243}
!11243 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11241, file: !10998, line: 1748, type: !1566)
!11244 = !DILocation(line: 0, scope: !11241)
!11245 = !DILocation(line: 1750, column: 11, scope: !11241)
!11246 = !DILocation(line: 1750, column: 45, scope: !11241)
!11247 = !DILocation(line: 1750, column: 3, scope: !11241)
!11248 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !10998, file: !10998, line: 1827, type: !10999, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11249)
!11249 = !{!11250}
!11250 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11248, file: !10998, line: 1827, type: !1566)
!11251 = !DILocation(line: 0, scope: !11248)
!11252 = !DILocation(line: 1829, column: 11, scope: !11248)
!11253 = !DILocation(line: 1829, column: 46, scope: !11248)
!11254 = !DILocation(line: 1829, column: 3, scope: !11248)
!11255 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !10998, file: !10998, line: 1992, type: !11061, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11256)
!11256 = !{!11257}
!11257 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11255, file: !10998, line: 1992, type: !1566)
!11258 = !DILocation(line: 0, scope: !11255)
!11259 = !DILocation(line: 1994, column: 3, scope: !11255)
!11260 = !DILocation(line: 1995, column: 1, scope: !11255)
!11261 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !10998, file: !10998, line: 1934, type: !11061, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11262)
!11262 = !{!11263, !11264}
!11263 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11261, file: !10998, line: 1934, type: !1566)
!11264 = !DILocalVariable(name: "tmpreg", scope: !11261, file: !10998, line: 1936, type: !227)
!11265 = !DILocation(line: 0, scope: !11261)
!11266 = !DILocation(line: 1936, column: 3, scope: !11261)
!11267 = !DILocation(line: 1936, column: 17, scope: !11261)
!11268 = !DILocation(line: 1937, column: 20, scope: !11261)
!11269 = !DILocation(line: 1937, column: 10, scope: !11261)
!11270 = !DILocation(line: 1938, column: 10, scope: !11261)
!11271 = !DILocation(line: 1939, column: 20, scope: !11261)
!11272 = !DILocation(line: 1939, column: 10, scope: !11261)
!11273 = !DILocation(line: 1940, column: 10, scope: !11261)
!11274 = !DILocation(line: 1941, column: 1, scope: !11261)
!11275 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !10998, file: !10998, line: 1877, type: !11061, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11276)
!11276 = !{!11277, !11278}
!11277 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11275, file: !10998, line: 1877, type: !1566)
!11278 = !DILocalVariable(name: "tmpreg", scope: !11275, file: !10998, line: 1879, type: !227)
!11279 = !DILocation(line: 0, scope: !11275)
!11280 = !DILocation(line: 1879, column: 3, scope: !11275)
!11281 = !DILocation(line: 1879, column: 17, scope: !11275)
!11282 = !DILocation(line: 1880, column: 20, scope: !11275)
!11283 = !DILocation(line: 1880, column: 10, scope: !11275)
!11284 = !DILocation(line: 1881, column: 10, scope: !11275)
!11285 = !DILocation(line: 1882, column: 20, scope: !11275)
!11286 = !DILocation(line: 1882, column: 10, scope: !11275)
!11287 = !DILocation(line: 1883, column: 10, scope: !11275)
!11288 = !DILocation(line: 1884, column: 1, scope: !11275)
!11289 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !10998, file: !10998, line: 1896, type: !11061, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11290)
!11290 = !{!11291, !11292}
!11291 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11289, file: !10998, line: 1896, type: !1566)
!11292 = !DILocalVariable(name: "tmpreg", scope: !11289, file: !10998, line: 1898, type: !227)
!11293 = !DILocation(line: 0, scope: !11289)
!11294 = !DILocation(line: 1898, column: 3, scope: !11289)
!11295 = !DILocation(line: 1898, column: 17, scope: !11289)
!11296 = !DILocation(line: 1899, column: 20, scope: !11289)
!11297 = !DILocation(line: 1899, column: 10, scope: !11289)
!11298 = !DILocation(line: 1900, column: 10, scope: !11289)
!11299 = !DILocation(line: 1901, column: 20, scope: !11289)
!11300 = !DILocation(line: 1901, column: 10, scope: !11289)
!11301 = !DILocation(line: 1902, column: 10, scope: !11289)
!11302 = !DILocation(line: 1903, column: 1, scope: !11289)
!11303 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !10998, file: !10998, line: 1915, type: !11061, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11304)
!11304 = !{!11305, !11306}
!11305 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11303, file: !10998, line: 1915, type: !1566)
!11306 = !DILocalVariable(name: "tmpreg", scope: !11303, file: !10998, line: 1917, type: !227)
!11307 = !DILocation(line: 0, scope: !11303)
!11308 = !DILocation(line: 1917, column: 3, scope: !11303)
!11309 = !DILocation(line: 1917, column: 17, scope: !11303)
!11310 = !DILocation(line: 1918, column: 20, scope: !11303)
!11311 = !DILocation(line: 1918, column: 10, scope: !11303)
!11312 = !DILocation(line: 1919, column: 10, scope: !11303)
!11313 = !DILocation(line: 1920, column: 20, scope: !11303)
!11314 = !DILocation(line: 1920, column: 10, scope: !11303)
!11315 = !DILocation(line: 1921, column: 10, scope: !11303)
!11316 = !DILocation(line: 1922, column: 1, scope: !11303)
!11317 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !10998, file: !10998, line: 1814, type: !10999, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11318)
!11318 = !{!11319}
!11319 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11317, file: !10998, line: 1814, type: !1566)
!11320 = !DILocation(line: 0, scope: !11317)
!11321 = !DILocation(line: 1816, column: 11, scope: !11317)
!11322 = !DILocation(line: 1816, column: 46, scope: !11317)
!11323 = !DILocation(line: 1816, column: 3, scope: !11317)
!11324 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !10998, file: !10998, line: 2426, type: !11325, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11327)
!11325 = !DISubroutineType(types: !11326)
!11326 = !{null, !1566, !195}
!11327 = !{!11328, !11329}
!11328 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11324, file: !10998, line: 2426, type: !1566)
!11329 = !DILocalVariable(name: "Value", arg: 2, scope: !11324, file: !10998, line: 2426, type: !195)
!11330 = !DILocation(line: 0, scope: !11324)
!11331 = !DILocation(line: 2428, column: 16, scope: !11324)
!11332 = !DILocation(line: 2428, column: 11, scope: !11324)
!11333 = !DILocation(line: 2428, column: 14, scope: !11324)
!11334 = !DILocation(line: 2429, column: 1, scope: !11324)
!11335 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !10998, file: !10998, line: 1792, type: !10999, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11336)
!11336 = !{!11337}
!11337 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11335, file: !10998, line: 1792, type: !1566)
!11338 = !DILocation(line: 0, scope: !11335)
!11339 = !DILocation(line: 1794, column: 11, scope: !11335)
!11340 = !DILocation(line: 1794, column: 47, scope: !11335)
!11341 = !DILocation(line: 1794, column: 3, scope: !11335)
!11342 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !10998, file: !10998, line: 2403, type: !11343, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11345)
!11343 = !DISubroutineType(types: !11344)
!11344 = !{!195, !1566}
!11345 = !{!11346}
!11346 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11342, file: !10998, line: 2403, type: !1566)
!11347 = !DILocation(line: 0, scope: !11342)
!11348 = !DILocation(line: 2405, column: 20, scope: !11342)
!11349 = !DILocation(line: 2405, column: 10, scope: !11342)
!11350 = !DILocation(line: 2405, column: 3, scope: !11342)
!11351 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1620, file: !1620, line: 1583, type: !1546, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11352)
!11352 = !{!11353, !11354, !11355, !11356, !11357, !11358}
!11353 = !DILocalVariable(name: "dev", arg: 1, scope: !11351, file: !1620, line: 1583, type: !1525)
!11354 = !DILocalVariable(name: "config", scope: !11351, file: !1620, line: 1585, type: !10689)
!11355 = !DILocalVariable(name: "data", scope: !11351, file: !1620, line: 1586, type: !10812)
!11356 = !DILocalVariable(name: "ll_parity", scope: !11351, file: !1620, line: 1587, type: !152)
!11357 = !DILocalVariable(name: "ll_datawidth", scope: !11351, file: !1620, line: 1588, type: !152)
!11358 = !DILocalVariable(name: "err", scope: !11351, file: !1620, line: 1589, type: !107)
!11359 = !DILocation(line: 0, scope: !11351)
!11360 = !DILocation(line: 1585, column: 48, scope: !11351)
!11361 = !DILocation(line: 1586, column: 38, scope: !11351)
!11362 = !DILocation(line: 1591, column: 2, scope: !11351)
!11363 = !DILocation(line: 1593, column: 29, scope: !11364)
!11364 = distinct !DILexicalBlock(scope: !11351, file: !1620, line: 1593, column: 6)
!11365 = !DILocation(line: 1593, column: 7, scope: !11364)
!11366 = !DILocation(line: 1593, column: 6, scope: !11351)
!11367 = !DILocation(line: 1594, column: 3, scope: !11368)
!11368 = distinct !DILexicalBlock(scope: !11369, file: !1620, line: 1594, column: 3)
!11369 = distinct !DILexicalBlock(scope: !11370, file: !1620, line: 1594, column: 3)
!11370 = distinct !DILexicalBlock(scope: !11371, file: !1620, line: 1594, column: 3)
!11371 = distinct !DILexicalBlock(scope: !11372, file: !1620, line: 1594, column: 3)
!11372 = distinct !DILexicalBlock(scope: !11364, file: !1620, line: 1593, column: 37)
!11373 = !DILocation(line: 1595, column: 3, scope: !11372)
!11374 = !DILocation(line: 1599, column: 31, scope: !11351)
!11375 = !DILocation(line: 1599, column: 71, scope: !11351)
!11376 = !DILocation(line: 1599, column: 8, scope: !11351)
!11377 = !DILocation(line: 1600, column: 10, scope: !11378)
!11378 = distinct !DILexicalBlock(scope: !11351, file: !1620, line: 1600, column: 6)
!11379 = !DILocation(line: 1600, column: 6, scope: !11351)
!11380 = !DILocation(line: 1601, column: 3, scope: !11381)
!11381 = distinct !DILexicalBlock(scope: !11382, file: !1620, line: 1601, column: 3)
!11382 = distinct !DILexicalBlock(scope: !11383, file: !1620, line: 1601, column: 3)
!11383 = distinct !DILexicalBlock(scope: !11384, file: !1620, line: 1601, column: 3)
!11384 = distinct !DILexicalBlock(scope: !11385, file: !1620, line: 1601, column: 3)
!11385 = distinct !DILexicalBlock(scope: !11378, file: !1620, line: 1600, column: 16)
!11386 = !DILocation(line: 1602, column: 3, scope: !11385)
!11387 = !DILocation(line: 1616, column: 36, scope: !11351)
!11388 = !DILocation(line: 1616, column: 8, scope: !11351)
!11389 = !DILocation(line: 1617, column: 10, scope: !11390)
!11390 = distinct !DILexicalBlock(scope: !11351, file: !1620, line: 1617, column: 6)
!11391 = !DILocation(line: 1617, column: 6, scope: !11351)
!11392 = !DILocation(line: 1621, column: 27, scope: !11351)
!11393 = !DILocation(line: 1621, column: 2, scope: !11351)
!11394 = !DILocation(line: 1624, column: 40, scope: !11351)
!11395 = !DILocation(line: 1624, column: 2, scope: !11351)
!11396 = !DILocation(line: 1630, column: 14, scope: !11397)
!11397 = distinct !DILexicalBlock(scope: !11351, file: !1620, line: 1630, column: 6)
!11398 = !DILocation(line: 1630, column: 6, scope: !11351)
!11399 = !DILocation(line: 1640, column: 4, scope: !11400)
!11400 = distinct !DILexicalBlock(scope: !11401, file: !1620, line: 1640, column: 4)
!11401 = distinct !DILexicalBlock(scope: !11402, file: !1620, line: 1640, column: 4)
!11402 = distinct !DILexicalBlock(scope: !11403, file: !1620, line: 1640, column: 4)
!11403 = distinct !DILexicalBlock(scope: !11404, file: !1620, line: 1640, column: 4)
!11404 = distinct !DILexicalBlock(scope: !11405, file: !1620, line: 1639, column: 28)
!11405 = distinct !DILexicalBlock(scope: !11406, file: !1620, line: 1639, column: 7)
!11406 = distinct !DILexicalBlock(scope: !11407, file: !1620, line: 1638, column: 9)
!11407 = distinct !DILexicalBlock(scope: !11397, file: !1620, line: 1634, column: 13)
!11408 = !DILocation(line: 0, scope: !11397)
!11409 = !DILocation(line: 1649, column: 35, scope: !11351)
!11410 = !DILocation(line: 1649, column: 2, scope: !11351)
!11411 = !DILocation(line: 1654, column: 14, scope: !11412)
!11412 = distinct !DILexicalBlock(scope: !11351, file: !1620, line: 1654, column: 6)
!11413 = !DILocation(line: 1654, column: 6, scope: !11351)
!11414 = !DILocation(line: 1655, column: 3, scope: !11415)
!11415 = distinct !DILexicalBlock(scope: !11412, file: !1620, line: 1654, column: 31)
!11416 = !DILocation(line: 1656, column: 2, scope: !11415)
!11417 = !DILocation(line: 1659, column: 37, scope: !11351)
!11418 = !DILocation(line: 1659, column: 2, scope: !11351)
!11419 = !DILocation(line: 1662, column: 14, scope: !11420)
!11420 = distinct !DILexicalBlock(scope: !11351, file: !1620, line: 1662, column: 6)
!11421 = !DILocation(line: 1662, column: 6, scope: !11351)
!11422 = !DILocation(line: 1663, column: 37, scope: !11423)
!11423 = distinct !DILexicalBlock(scope: !11420, file: !1620, line: 1662, column: 27)
!11424 = !DILocation(line: 1663, column: 3, scope: !11423)
!11425 = !DILocation(line: 1664, column: 2, scope: !11423)
!11426 = !DILocation(line: 1684, column: 26, scope: !11351)
!11427 = !DILocation(line: 1684, column: 2, scope: !11351)
!11428 = !DILocation(line: 1722, column: 2, scope: !11351)
!11429 = !DILocation(line: 1724, column: 1, scope: !11351)
!11430 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1620, file: !1620, line: 651, type: !11431, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11433)
!11431 = !DISubroutineType(types: !11432)
!11432 = !{null, !1525}
!11433 = !{!11434, !11435, !11436}
!11434 = !DILocalVariable(name: "dev", arg: 1, scope: !11430, file: !1620, line: 651, type: !1525)
!11435 = !DILocalVariable(name: "data", scope: !11430, file: !1620, line: 653, type: !10812)
!11436 = !DILocalVariable(name: "clk", scope: !11430, file: !1620, line: 654, type: !11437)
!11437 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1525)
!11438 = !DILocation(line: 0, scope: !11430)
!11439 = !DILocation(line: 653, column: 38, scope: !11430)
!11440 = !DILocation(line: 656, column: 8, scope: !11430)
!11441 = !DILocation(line: 656, column: 14, scope: !11430)
!11442 = !DILocation(line: 657, column: 1, scope: !11430)
!11443 = distinct !DISubprogram(name: "device_is_ready", scope: !9808, file: !9808, line: 47, type: !11444, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11446)
!11444 = !DISubroutineType(types: !11445)
!11445 = !{!145, !1525}
!11446 = !{!11447}
!11447 = !DILocalVariable(name: "dev", arg: 1, scope: !11443, file: !9808, line: 47, type: !1525)
!11448 = !DILocation(line: 0, scope: !11443)
!11449 = !DILocation(line: 55, column: 2, scope: !11450)
!11450 = distinct !DILexicalBlock(scope: !11443, file: !9808, line: 55, column: 2)
!11451 = !{i64 2155380977}
!11452 = !DILocation(line: 56, column: 9, scope: !11443)
!11453 = !DILocation(line: 56, column: 2, scope: !11443)
!11454 = distinct !DISubprogram(name: "clock_control_on", scope: !980, file: !980, line: 123, type: !1584, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11455)
!11455 = !{!11456, !11457, !11458}
!11456 = !DILocalVariable(name: "dev", arg: 1, scope: !11454, file: !980, line: 123, type: !1525)
!11457 = !DILocalVariable(name: "sys", arg: 2, scope: !11454, file: !980, line: 124, type: !1076)
!11458 = !DILocalVariable(name: "api", scope: !11454, file: !980, line: 126, type: !1577)
!11459 = !DILocation(line: 0, scope: !11454)
!11460 = !DILocation(line: 127, column: 49, scope: !11454)
!11461 = !DILocation(line: 129, column: 14, scope: !11454)
!11462 = !DILocation(line: 129, column: 9, scope: !11454)
!11463 = !DILocation(line: 129, column: 2, scope: !11454)
!11464 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1684, file: !1684, line: 342, type: !11465, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11467)
!11465 = !DISubroutineType(types: !11466)
!11466 = !{!107, !1681, !195}
!11467 = !{!11468, !11469, !11470, !11471}
!11468 = !DILocalVariable(name: "config", arg: 1, scope: !11464, file: !1684, line: 342, type: !1681)
!11469 = !DILocalVariable(name: "id", arg: 2, scope: !11464, file: !1684, line: 343, type: !195)
!11470 = !DILocalVariable(name: "ret", scope: !11464, file: !1684, line: 345, type: !107)
!11471 = !DILocalVariable(name: "state", scope: !11464, file: !1684, line: 346, type: !1687)
!11472 = !DILocation(line: 0, scope: !11464)
!11473 = !DILocation(line: 346, column: 2, scope: !11464)
!11474 = !DILocation(line: 348, column: 8, scope: !11464)
!11475 = !DILocation(line: 349, column: 10, scope: !11476)
!11476 = distinct !DILexicalBlock(scope: !11464, file: !1684, line: 349, column: 6)
!11477 = !DILocation(line: 349, column: 6, scope: !11464)
!11478 = !DILocation(line: 353, column: 44, scope: !11464)
!11479 = !DILocation(line: 353, column: 9, scope: !11464)
!11480 = !DILocation(line: 353, column: 2, scope: !11464)
!11481 = !DILocation(line: 354, column: 1, scope: !11464)
!11482 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !10998, file: !10998, line: 497, type: !11176, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11483)
!11483 = !{!11484, !11485, !11486}
!11484 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11482, file: !10998, line: 497, type: !1566)
!11485 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !11482, file: !10998, line: 497, type: !152)
!11486 = !DILocalVariable(name: "val", scope: !11487, file: !10998, line: 499, type: !152)
!11487 = distinct !DILexicalBlock(scope: !11482, file: !10998, line: 499, column: 3)
!11488 = !DILocation(line: 0, scope: !11482)
!11489 = !DILocation(line: 499, column: 3, scope: !11487)
!11490 = !DILocalVariable(name: "addr", arg: 1, scope: !11491, file: !6321, line: 476, type: !1616)
!11491 = distinct !DISubprogram(name: "__LDREXW", scope: !6321, file: !6321, line: 476, type: !11492, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11494)
!11492 = !DISubroutineType(types: !11493)
!11493 = !{!152, !1616}
!11494 = !{!11490, !11495}
!11495 = !DILocalVariable(name: "result", scope: !11491, file: !6321, line: 478, type: !152)
!11496 = !DILocation(line: 0, scope: !11491, inlinedAt: !11497)
!11497 = distinct !DILocation(line: 499, column: 3, scope: !11498)
!11498 = distinct !DILexicalBlock(scope: !11487, file: !10998, line: 499, column: 3)
!11499 = !DILocation(line: 480, column: 4, scope: !11491, inlinedAt: !11497)
!11500 = !{i64 3762715}
!11501 = !DILocation(line: 499, column: 3, scope: !11498)
!11502 = !DILocation(line: 0, scope: !11487)
!11503 = !DILocalVariable(name: "value", arg: 1, scope: !11504, file: !6321, line: 527, type: !152)
!11504 = distinct !DISubprogram(name: "__STREXW", scope: !6321, file: !6321, line: 527, type: !11505, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11507)
!11505 = !DISubroutineType(types: !11506)
!11506 = !{!152, !152, !1616}
!11507 = !{!11503, !11508, !11509}
!11508 = !DILocalVariable(name: "addr", arg: 2, scope: !11504, file: !6321, line: 527, type: !1616)
!11509 = !DILocalVariable(name: "result", scope: !11504, file: !6321, line: 529, type: !152)
!11510 = !DILocation(line: 0, scope: !11504, inlinedAt: !11511)
!11511 = distinct !DILocation(line: 499, column: 3, scope: !11487)
!11512 = !DILocation(line: 531, column: 4, scope: !11504, inlinedAt: !11511)
!11513 = !{i64 3764151}
!11514 = distinct !{!11514, !11489, !11489}
!11515 = !DILocation(line: 500, column: 1, scope: !11482)
!11516 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !10998, file: !10998, line: 850, type: !11185, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11517)
!11517 = !{!11518, !11519, !11520, !11521}
!11518 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11516, file: !10998, line: 850, type: !1566)
!11519 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11516, file: !10998, line: 850, type: !152)
!11520 = !DILocalVariable(name: "Parity", arg: 3, scope: !11516, file: !10998, line: 850, type: !152)
!11521 = !DILocalVariable(name: "StopBits", arg: 4, scope: !11516, file: !10998, line: 851, type: !152)
!11522 = !DILocation(line: 0, scope: !11516)
!11523 = !DILocation(line: 853, column: 3, scope: !11516)
!11524 = !DILocation(line: 854, column: 3, scope: !11516)
!11525 = !DILocation(line: 855, column: 1, scope: !11516)
!11526 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !10998, file: !10998, line: 1337, type: !11061, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11527)
!11527 = !{!11528}
!11528 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11526, file: !10998, line: 1337, type: !1566)
!11529 = !DILocation(line: 0, scope: !11526)
!11530 = !DILocation(line: 1339, column: 3, scope: !11526)
!11531 = !DILocation(line: 1340, column: 1, scope: !11526)
!11532 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1684, file: !1684, line: 316, type: !11533, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11535)
!11533 = !DISubroutineType(types: !11534)
!11534 = !{!107, !1681, !1687}
!11535 = !{!11536, !11537, !11538}
!11536 = !DILocalVariable(name: "config", arg: 1, scope: !11532, file: !1684, line: 317, type: !1681)
!11537 = !DILocalVariable(name: "state", arg: 2, scope: !11532, file: !1684, line: 318, type: !1687)
!11538 = !DILocalVariable(name: "reg", scope: !11532, file: !1684, line: 320, type: !22)
!11539 = !DILocation(line: 0, scope: !11532)
!11540 = !DILocation(line: 329, column: 39, scope: !11532)
!11541 = !DILocation(line: 329, column: 52, scope: !11532)
!11542 = !DILocation(line: 329, column: 9, scope: !11532)
!11543 = !DILocation(line: 329, column: 2, scope: !11532)
!11544 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !247, file: !247, line: 730, type: !11444, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1481, retainedNodes: !11545)
!11545 = !{!11546}
!11546 = !DILocalVariable(name: "dev", arg: 1, scope: !11544, file: !247, line: 730, type: !1525)
!11547 = !DILocation(line: 0, scope: !11544)
!11548 = !DILocation(line: 732, column: 9, scope: !11544)
!11549 = !DILocation(line: 732, column: 2, scope: !11544)
!11550 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1843, file: !1843, line: 270, type: !1849, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1765, retainedNodes: !11551)
!11551 = !{!11552}
!11552 = !DILocalVariable(name: "dev", arg: 1, scope: !11550, file: !1843, line: 270, type: !1851)
!11553 = !DILocation(line: 0, scope: !11550)
!11554 = !DILocation(line: 274, column: 2, scope: !11550)
!11555 = !DILocation(line: 275, column: 12, scope: !11550)
!11556 = !DILocation(line: 276, column: 15, scope: !11550)
!11557 = !DILocation(line: 277, column: 16, scope: !11550)
!11558 = !DILocation(line: 278, column: 15, scope: !11550)
!11559 = !DILocation(line: 279, column: 16, scope: !11550)
!11560 = !DILocation(line: 282, column: 2, scope: !11550)
!11561 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !463, file: !463, line: 1814, type: !6361, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1765, retainedNodes: !11562)
!11562 = !{!11563, !11564}
!11563 = !DILocalVariable(name: "IRQn", arg: 1, scope: !11561, file: !463, line: 1814, type: !930)
!11564 = !DILocalVariable(name: "priority", arg: 2, scope: !11561, file: !463, line: 1814, type: !152)
!11565 = !DILocation(line: 0, scope: !11561)
!11566 = !DILocation(line: 1822, column: 46, scope: !11567)
!11567 = distinct !DILexicalBlock(scope: !11568, file: !463, line: 1821, column: 3)
!11568 = distinct !DILexicalBlock(scope: !11561, file: !463, line: 1816, column: 7)
!11569 = !DILocation(line: 1824, column: 1, scope: !11561)
!11570 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1843, file: !1843, line: 118, type: !131, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1765, retainedNodes: !11571)
!11571 = !{!11572, !11573}
!11572 = !DILocalVariable(name: "arg", arg: 1, scope: !11570, file: !1843, line: 118, type: !106)
!11573 = !DILocalVariable(name: "dticks", scope: !11570, file: !1843, line: 121, type: !152)
!11574 = !DILocation(line: 0, scope: !11570)
!11575 = !DILocation(line: 124, column: 2, scope: !11570)
!11576 = !DILocation(line: 129, column: 17, scope: !11570)
!11577 = !DILocation(line: 129, column: 14, scope: !11570)
!11578 = !DILocation(line: 130, column: 15, scope: !11570)
!11579 = !DILocation(line: 145, column: 27, scope: !11580)
!11580 = distinct !DILexicalBlock(scope: !11581, file: !1843, line: 132, column: 16)
!11581 = distinct !DILexicalBlock(scope: !11570, file: !1843, line: 132, column: 6)
!11582 = !DILocation(line: 145, column: 25, scope: !11580)
!11583 = !DILocation(line: 145, column: 45, scope: !11580)
!11584 = !DILocation(line: 146, column: 30, scope: !11580)
!11585 = !DILocation(line: 146, column: 20, scope: !11580)
!11586 = !DILocation(line: 147, column: 3, scope: !11580)
!11587 = !DILocation(line: 151, column: 2, scope: !11570)
!11588 = !DILocation(line: 152, column: 1, scope: !11570)
!11589 = distinct !DISubprogram(name: "elapsed", scope: !1843, file: !1843, line: 85, type: !6408, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1765, retainedNodes: !11590)
!11590 = !{!11591, !11592, !11593}
!11591 = !DILocalVariable(name: "val1", scope: !11589, file: !1843, line: 87, type: !152)
!11592 = !DILocalVariable(name: "ctrl", scope: !11589, file: !1843, line: 88, type: !152)
!11593 = !DILocalVariable(name: "val2", scope: !11589, file: !1843, line: 89, type: !152)
!11594 = !DILocation(line: 87, column: 27, scope: !11589)
!11595 = !DILocation(line: 0, scope: !11589)
!11596 = !DILocation(line: 88, column: 27, scope: !11589)
!11597 = !DILocation(line: 89, column: 27, scope: !11589)
!11598 = !DILocation(line: 105, column: 12, scope: !11599)
!11599 = distinct !DILexicalBlock(scope: !11589, file: !1843, line: 105, column: 6)
!11600 = !DILocation(line: 106, column: 6, scope: !11599)
!11601 = !DILocation(line: 107, column: 16, scope: !11602)
!11602 = distinct !DILexicalBlock(scope: !11599, file: !1843, line: 106, column: 24)
!11603 = !DILocation(line: 111, column: 18, scope: !11602)
!11604 = !DILocation(line: 112, column: 2, scope: !11602)
!11605 = !DILocation(line: 114, column: 20, scope: !11589)
!11606 = !DILocation(line: 114, column: 30, scope: !11589)
!11607 = !DILocation(line: 114, column: 28, scope: !11589)
!11608 = !DILocation(line: 114, column: 2, scope: !11589)
!11609 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1843, file: !1843, line: 154, type: !11610, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1765, retainedNodes: !11612)
!11610 = !DISubroutineType(types: !11611)
!11611 = !{null, !904, !145}
!11612 = !{!11613, !11614, !11615, !11616, !11617, !11618, !11619, !11624, !11625}
!11613 = !DILocalVariable(name: "ticks", arg: 1, scope: !11609, file: !1843, line: 154, type: !904)
!11614 = !DILocalVariable(name: "idle", arg: 2, scope: !11609, file: !1843, line: 154, type: !145)
!11615 = !DILocalVariable(name: "delay", scope: !11609, file: !1843, line: 169, type: !152)
!11616 = !DILocalVariable(name: "val1", scope: !11609, file: !1843, line: 170, type: !152)
!11617 = !DILocalVariable(name: "val2", scope: !11609, file: !1843, line: 170, type: !152)
!11618 = !DILocalVariable(name: "last_load_", scope: !11609, file: !1843, line: 171, type: !152)
!11619 = !DILocalVariable(name: "key", scope: !11609, file: !1843, line: 176, type: !11620)
!11620 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !420, line: 106, baseType: !11621)
!11621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !420, line: 32, size: 32, elements: !11622)
!11622 = !{!11623}
!11623 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !11621, file: !420, line: 33, baseType: !107, size: 32)
!11624 = !DILocalVariable(name: "pending", scope: !11609, file: !1843, line: 178, type: !152)
!11625 = !DILocalVariable(name: "unannounced", scope: !11609, file: !1843, line: 185, type: !152)
!11626 = !DILocation(line: 0, scope: !11609)
!11627 = !DILocation(line: 162, column: 49, scope: !11628)
!11628 = distinct !DILexicalBlock(scope: !11609, file: !1843, line: 162, column: 6)
!11629 = !DILocation(line: 163, column: 17, scope: !11630)
!11630 = distinct !DILexicalBlock(scope: !11628, file: !1843, line: 162, column: 78)
!11631 = !DILocation(line: 164, column: 13, scope: !11630)
!11632 = !DILocation(line: 165, column: 3, scope: !11630)
!11633 = !DILocation(line: 171, column: 24, scope: !11609)
!11634 = !DILocation(line: 173, column: 10, scope: !11609)
!11635 = !DILocation(line: 174, column: 10, scope: !11609)
!11636 = !DILocalVariable(name: "l", arg: 1, scope: !11637, file: !420, line: 136, type: !11640)
!11637 = distinct !DISubprogram(name: "k_spin_lock", scope: !420, file: !420, line: 136, type: !11638, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1765, retainedNodes: !11641)
!11638 = !DISubroutineType(types: !11639)
!11639 = !{!11620, !11640}
!11640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1869, size: 32)
!11641 = !{!11636, !11642}
!11642 = !DILocalVariable(name: "k", scope: !11637, file: !420, line: 139, type: !11620)
!11643 = !DILocation(line: 0, scope: !11637, inlinedAt: !11644)
!11644 = distinct !DILocation(line: 176, column: 25, scope: !11609)
!11645 = !DILocation(line: 55, column: 2, scope: !11646, inlinedAt: !11650)
!11646 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6002, file: !6002, line: 42, type: !6003, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1765, retainedNodes: !11647)
!11647 = !{!11648, !11649}
!11648 = !DILocalVariable(name: "key", scope: !11646, file: !6002, line: 44, type: !32)
!11649 = !DILocalVariable(name: "tmp", scope: !11646, file: !6002, line: 53, type: !32)
!11650 = distinct !DILocation(line: 145, column: 10, scope: !11637, inlinedAt: !11644)
!11651 = !{i64 2284313}
!11652 = !DILocation(line: 0, scope: !11646, inlinedAt: !11650)
!11653 = !DILocation(line: 148, column: 2, scope: !11654, inlinedAt: !11644)
!11654 = distinct !DILexicalBlock(scope: !11655, file: !420, line: 148, column: 2)
!11655 = distinct !DILexicalBlock(scope: !11637, file: !420, line: 148, column: 2)
!11656 = !DILocation(line: 148, column: 2, scope: !11655, inlinedAt: !11644)
!11657 = !DILocation(line: 148, column: 2, scope: !11658, inlinedAt: !11644)
!11658 = distinct !DILexicalBlock(scope: !11654, file: !420, line: 148, column: 2)
!11659 = !DILocation(line: 160, column: 2, scope: !11637, inlinedAt: !11644)
!11660 = !DILocation(line: 178, column: 21, scope: !11609)
!11661 = !DILocation(line: 180, column: 18, scope: !11609)
!11662 = !DILocation(line: 182, column: 14, scope: !11609)
!11663 = !DILocation(line: 183, column: 15, scope: !11609)
!11664 = !DILocation(line: 185, column: 39, scope: !11609)
!11665 = !DILocation(line: 185, column: 37, scope: !11609)
!11666 = !DILocation(line: 187, column: 27, scope: !11667)
!11667 = distinct !DILexicalBlock(scope: !11609, file: !1843, line: 187, column: 6)
!11668 = !DILocation(line: 187, column: 6, scope: !11609)
!11669 = !DILocation(line: 202, column: 27, scope: !11670)
!11670 = distinct !DILexicalBlock(scope: !11667, file: !1843, line: 195, column: 9)
!11671 = !DILocation(line: 202, column: 48, scope: !11670)
!11672 = !DILocation(line: 203, column: 9, scope: !11670)
!11673 = !DILocation(line: 204, column: 11, scope: !11670)
!11674 = !DILocation(line: 205, column: 13, scope: !11675)
!11675 = distinct !DILexicalBlock(scope: !11670, file: !1843, line: 205, column: 7)
!11676 = !DILocation(line: 205, column: 7, scope: !11670)
!11677 = !DILocation(line: 0, scope: !11667)
!11678 = !DILocation(line: 212, column: 18, scope: !11609)
!11679 = !DILocation(line: 214, column: 28, scope: !11609)
!11680 = !DILocation(line: 214, column: 16, scope: !11609)
!11681 = !DILocation(line: 215, column: 15, scope: !11609)
!11682 = !DILocation(line: 227, column: 11, scope: !11683)
!11683 = distinct !DILexicalBlock(scope: !11609, file: !1843, line: 227, column: 6)
!11684 = !DILocation(line: 227, column: 6, scope: !11609)
!11685 = !DILocation(line: 228, column: 15, scope: !11686)
!11686 = distinct !DILexicalBlock(scope: !11683, file: !1843, line: 227, column: 19)
!11687 = !DILocation(line: 228, column: 38, scope: !11686)
!11688 = !DILocation(line: 228, column: 24, scope: !11686)
!11689 = !DILocation(line: 229, column: 2, scope: !11686)
!11690 = !DILocation(line: 230, column: 24, scope: !11691)
!11691 = distinct !DILexicalBlock(scope: !11683, file: !1843, line: 229, column: 9)
!11692 = !DILocation(line: 230, column: 15, scope: !11691)
!11693 = !DILocation(line: 0, scope: !11683)
!11694 = !DILocalVariable(name: "key", arg: 2, scope: !11695, file: !420, line: 190, type: !11620)
!11695 = distinct !DISubprogram(name: "k_spin_unlock", scope: !420, file: !420, line: 189, type: !11696, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1765, retainedNodes: !11698)
!11696 = !DISubroutineType(types: !11697)
!11697 = !{null, !11640, !11620}
!11698 = !{!11699, !11694}
!11699 = !DILocalVariable(name: "l", arg: 1, scope: !11695, file: !420, line: 189, type: !11640)
!11700 = !DILocation(line: 0, scope: !11695, inlinedAt: !11701)
!11701 = distinct !DILocation(line: 232, column: 2, scope: !11609)
!11702 = !DILocation(line: 194, column: 2, scope: !11703, inlinedAt: !11701)
!11703 = distinct !DILexicalBlock(scope: !11704, file: !420, line: 194, column: 2)
!11704 = distinct !DILexicalBlock(scope: !11695, file: !420, line: 194, column: 2)
!11705 = !DILocation(line: 194, column: 2, scope: !11704, inlinedAt: !11701)
!11706 = !DILocation(line: 194, column: 2, scope: !11707, inlinedAt: !11701)
!11707 = distinct !DILexicalBlock(scope: !11703, file: !420, line: 194, column: 2)
!11708 = !DILocalVariable(name: "key", arg: 1, scope: !11709, file: !6002, line: 84, type: !32)
!11709 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6002, file: !6002, line: 84, type: !6013, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1765, retainedNodes: !11710)
!11710 = !{!11708}
!11711 = !DILocation(line: 0, scope: !11709, inlinedAt: !11712)
!11712 = distinct !DILocation(line: 215, column: 2, scope: !11695, inlinedAt: !11701)
!11713 = !DILocation(line: 95, column: 2, scope: !11709, inlinedAt: !11712)
!11714 = !{i64 2285130}
!11715 = !DILocation(line: 234, column: 1, scope: !11609)
!11716 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1843, file: !1843, line: 236, type: !6408, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1765, retainedNodes: !11717)
!11717 = !{!11718, !11719}
!11718 = !DILocalVariable(name: "key", scope: !11716, file: !1843, line: 242, type: !11620)
!11719 = !DILocalVariable(name: "cyc", scope: !11716, file: !1843, line: 243, type: !152)
!11720 = !DILocation(line: 0, scope: !11637, inlinedAt: !11721)
!11721 = distinct !DILocation(line: 242, column: 25, scope: !11716)
!11722 = !DILocation(line: 55, column: 2, scope: !11646, inlinedAt: !11723)
!11723 = distinct !DILocation(line: 145, column: 10, scope: !11637, inlinedAt: !11721)
!11724 = !DILocation(line: 0, scope: !11646, inlinedAt: !11723)
!11725 = !DILocation(line: 148, column: 2, scope: !11654, inlinedAt: !11721)
!11726 = !DILocation(line: 148, column: 2, scope: !11655, inlinedAt: !11721)
!11727 = !DILocation(line: 148, column: 2, scope: !11658, inlinedAt: !11721)
!11728 = !DILocation(line: 160, column: 2, scope: !11637, inlinedAt: !11721)
!11729 = !DILocation(line: 0, scope: !11716)
!11730 = !DILocation(line: 243, column: 17, scope: !11716)
!11731 = !DILocation(line: 243, column: 29, scope: !11716)
!11732 = !DILocation(line: 243, column: 43, scope: !11716)
!11733 = !DILocation(line: 0, scope: !11695, inlinedAt: !11734)
!11734 = distinct !DILocation(line: 245, column: 2, scope: !11716)
!11735 = !DILocation(line: 194, column: 2, scope: !11703, inlinedAt: !11734)
!11736 = !DILocation(line: 194, column: 2, scope: !11704, inlinedAt: !11734)
!11737 = !DILocation(line: 194, column: 2, scope: !11707, inlinedAt: !11734)
!11738 = !DILocation(line: 243, column: 27, scope: !11716)
!11739 = !DILocation(line: 243, column: 41, scope: !11716)
!11740 = !DILocation(line: 0, scope: !11709, inlinedAt: !11741)
!11741 = distinct !DILocation(line: 215, column: 2, scope: !11695, inlinedAt: !11734)
!11742 = !DILocation(line: 95, column: 2, scope: !11709, inlinedAt: !11741)
!11743 = !DILocation(line: 246, column: 13, scope: !11716)
!11744 = !DILocation(line: 246, column: 2, scope: !11716)
!11745 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1843, file: !1843, line: 249, type: !6408, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1765, retainedNodes: !11746)
!11746 = !{!11747, !11748}
!11747 = !DILocalVariable(name: "key", scope: !11745, file: !1843, line: 251, type: !11620)
!11748 = !DILocalVariable(name: "ret", scope: !11745, file: !1843, line: 252, type: !152)
!11749 = !DILocation(line: 0, scope: !11637, inlinedAt: !11750)
!11750 = distinct !DILocation(line: 251, column: 25, scope: !11745)
!11751 = !DILocation(line: 55, column: 2, scope: !11646, inlinedAt: !11752)
!11752 = distinct !DILocation(line: 145, column: 10, scope: !11637, inlinedAt: !11750)
!11753 = !DILocation(line: 0, scope: !11646, inlinedAt: !11752)
!11754 = !DILocation(line: 148, column: 2, scope: !11654, inlinedAt: !11750)
!11755 = !DILocation(line: 148, column: 2, scope: !11655, inlinedAt: !11750)
!11756 = !DILocation(line: 148, column: 2, scope: !11658, inlinedAt: !11750)
!11757 = !DILocation(line: 160, column: 2, scope: !11637, inlinedAt: !11750)
!11758 = !DILocation(line: 0, scope: !11745)
!11759 = !DILocation(line: 252, column: 17, scope: !11745)
!11760 = !DILocation(line: 252, column: 29, scope: !11745)
!11761 = !DILocation(line: 0, scope: !11695, inlinedAt: !11762)
!11762 = distinct !DILocation(line: 254, column: 2, scope: !11745)
!11763 = !DILocation(line: 194, column: 2, scope: !11703, inlinedAt: !11762)
!11764 = !DILocation(line: 194, column: 2, scope: !11704, inlinedAt: !11762)
!11765 = !DILocation(line: 194, column: 2, scope: !11707, inlinedAt: !11762)
!11766 = !DILocation(line: 252, column: 27, scope: !11745)
!11767 = !DILocation(line: 0, scope: !11709, inlinedAt: !11768)
!11768 = distinct !DILocation(line: 215, column: 2, scope: !11695, inlinedAt: !11762)
!11769 = !DILocation(line: 95, column: 2, scope: !11709, inlinedAt: !11768)
!11770 = !DILocation(line: 255, column: 2, scope: !11745)
!11771 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1843, file: !1843, line: 258, type: !3148, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1765, retainedNodes: !2236)
!11772 = !DILocation(line: 260, column: 6, scope: !11773)
!11773 = distinct !DILexicalBlock(scope: !11771, file: !1843, line: 260, column: 6)
!11774 = !DILocation(line: 260, column: 16, scope: !11773)
!11775 = !DILocation(line: 260, column: 6, scope: !11771)
!11776 = !DILocation(line: 261, column: 17, scope: !11777)
!11777 = distinct !DILexicalBlock(scope: !11773, file: !1843, line: 260, column: 34)
!11778 = !DILocation(line: 262, column: 2, scope: !11777)
!11779 = !DILocation(line: 263, column: 1, scope: !11771)
!11780 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1843, file: !1843, line: 265, type: !3148, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1765, retainedNodes: !2236)
!11781 = !DILocation(line: 267, column: 16, scope: !11780)
!11782 = !DILocation(line: 268, column: 1, scope: !11780)
!11783 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !11784, file: !11784, line: 9, type: !11785, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2976, retainedNodes: !11808)
!11784 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11785 = !DISubroutineType(types: !11786)
!11786 = !{!107, !11787, !195, !11807}
!11787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11788, size: 32)
!11788 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11789)
!11789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1684, line: 60, size: 64, elements: !11790)
!11790 = !{!11791, !11806}
!11791 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !11789, file: !1684, line: 69, baseType: !11792, size: 32)
!11792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11793, size: 32)
!11793 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11794)
!11794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1684, line: 50, size: 64, elements: !11795)
!11795 = !{!11796, !11804, !11805}
!11796 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !11794, file: !1684, line: 52, baseType: !11797, size: 32)
!11797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11798, size: 32)
!11798 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11799)
!11799 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1695, line: 37, baseType: !11800)
!11800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1695, line: 32, size: 64, elements: !11801)
!11801 = !{!11802, !11803}
!11802 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !11800, file: !1695, line: 34, baseType: !152, size: 32)
!11803 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !11800, file: !1695, line: 36, baseType: !152, size: 32, offset: 32)
!11804 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !11794, file: !1684, line: 54, baseType: !195, size: 8, offset: 32)
!11805 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !11794, file: !1684, line: 56, baseType: !195, size: 8, offset: 40)
!11806 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !11789, file: !1684, line: 71, baseType: !195, size: 8, offset: 32)
!11807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11792, size: 32)
!11808 = !{!11809, !11810, !11811}
!11809 = !DILocalVariable(name: "config", arg: 1, scope: !11783, file: !11784, line: 9, type: !11787)
!11810 = !DILocalVariable(name: "id", arg: 2, scope: !11783, file: !11784, line: 9, type: !195)
!11811 = !DILocalVariable(name: "state", arg: 3, scope: !11783, file: !11784, line: 10, type: !11807)
!11812 = !DILocation(line: 0, scope: !11783)
!11813 = !DILocation(line: 12, column: 20, scope: !11783)
!11814 = !DILocation(line: 13, column: 27, scope: !11783)
!11815 = !DILocation(line: 13, column: 42, scope: !11783)
!11816 = !DILocation(line: 13, column: 19, scope: !11783)
!11817 = !DILocation(line: 13, column: 16, scope: !11783)
!11818 = !DILocation(line: 13, column: 2, scope: !11783)
!11819 = distinct !{!11819, !11818, !11820}
!11820 = !DILocation(line: 19, column: 2, scope: !11783)
!11821 = !DILocation(line: 14, column: 23, scope: !11822)
!11822 = distinct !DILexicalBlock(scope: !11823, file: !11784, line: 14, column: 7)
!11823 = distinct !DILexicalBlock(scope: !11783, file: !11784, line: 13, column: 54)
!11824 = !DILocation(line: 14, column: 10, scope: !11822)
!11825 = !DILocation(line: 18, column: 11, scope: !11823)
!11826 = !DILocation(line: 14, column: 7, scope: !11823)
!11827 = !DILocation(line: 22, column: 1, scope: !11783)
!11828 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1962, file: !1962, line: 193, type: !11829, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1880, retainedNodes: !11838)
!11829 = !DISubroutineType(types: !11830)
!11830 = !{!107, !11831, !195, !22}
!11831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11832, size: 32)
!11832 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11833)
!11833 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1695, line: 37, baseType: !11834)
!11834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1695, line: 32, size: 64, elements: !11835)
!11835 = !{!11836, !11837}
!11836 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !11834, file: !1695, line: 34, baseType: !152, size: 32)
!11837 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !11834, file: !1695, line: 36, baseType: !152, size: 32, offset: 32)
!11838 = !{!11839, !11840, !11841, !11842, !11843, !11844, !11845, !11846, !11848}
!11839 = !DILocalVariable(name: "pins", arg: 1, scope: !11828, file: !1962, line: 193, type: !11831)
!11840 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !11828, file: !1962, line: 193, type: !195)
!11841 = !DILocalVariable(name: "reg", arg: 3, scope: !11828, file: !1962, line: 194, type: !22)
!11842 = !DILocalVariable(name: "pin", scope: !11828, file: !1962, line: 196, type: !152)
!11843 = !DILocalVariable(name: "mux", scope: !11828, file: !1962, line: 196, type: !152)
!11844 = !DILocalVariable(name: "pin_cgf", scope: !11828, file: !1962, line: 197, type: !152)
!11845 = !DILocalVariable(name: "ret", scope: !11828, file: !1962, line: 198, type: !107)
!11846 = !DILocalVariable(name: "i", scope: !11847, file: !1962, line: 209, type: !195)
!11847 = distinct !DILexicalBlock(scope: !11828, file: !1962, line: 209, column: 2)
!11848 = !DILocalVariable(name: "gpio_out", scope: !11849, file: !1962, line: 239, type: !152)
!11849 = distinct !DILexicalBlock(scope: !11850, file: !1962, line: 238, column: 55)
!11850 = distinct !DILexicalBlock(scope: !11851, file: !1962, line: 238, column: 14)
!11851 = distinct !DILexicalBlock(scope: !11852, file: !1962, line: 236, column: 14)
!11852 = distinct !DILexicalBlock(scope: !11853, file: !1962, line: 234, column: 7)
!11853 = distinct !DILexicalBlock(scope: !11854, file: !1962, line: 209, column: 41)
!11854 = distinct !DILexicalBlock(scope: !11847, file: !1962, line: 209, column: 2)
!11855 = !DILocation(line: 0, scope: !11828)
!11856 = !DILocation(line: 0, scope: !11847)
!11857 = !DILocation(line: 209, column: 25, scope: !11854)
!11858 = !DILocation(line: 209, column: 2, scope: !11847)
!11859 = distinct !{!11859, !11858, !11860}
!11860 = !DILocation(line: 259, column: 2, scope: !11847)
!11861 = !DILocation(line: 210, column: 17, scope: !11853)
!11862 = !DILocation(line: 234, column: 7, scope: !11852)
!11863 = !DILocation(line: 234, column: 33, scope: !11852)
!11864 = !DILocation(line: 234, column: 7, scope: !11853)
!11865 = !DILocation(line: 235, column: 22, scope: !11866)
!11866 = distinct !DILexicalBlock(scope: !11852, file: !1962, line: 234, column: 49)
!11867 = !DILocation(line: 235, column: 29, scope: !11866)
!11868 = !DILocation(line: 236, column: 3, scope: !11866)
!11869 = !DILocation(line: 236, column: 14, scope: !11852)
!11870 = !DILocation(line: 239, column: 32, scope: !11849)
!11871 = !DILocation(line: 0, scope: !11849)
!11872 = !DILocation(line: 241, column: 8, scope: !11849)
!11873 = !DILocation(line: 246, column: 3, scope: !11849)
!11874 = !DILocation(line: 252, column: 9, scope: !11853)
!11875 = !DILocation(line: 255, column: 9, scope: !11853)
!11876 = !DILocation(line: 256, column: 11, scope: !11877)
!11877 = distinct !DILexicalBlock(scope: !11853, file: !1962, line: 256, column: 7)
!11878 = !DILocation(line: 209, column: 37, scope: !11854)
!11879 = !DILocation(line: 256, column: 7, scope: !11853)
!11880 = !DILocation(line: 262, column: 1, scope: !11828)
!11881 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1962, file: !1962, line: 176, type: !11882, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1880, retainedNodes: !11884)
!11882 = !DISubroutineType(types: !11883)
!11883 = !{!107, !152, !152, !152}
!11884 = !{!11885, !11886, !11887, !11888}
!11885 = !DILocalVariable(name: "pin", arg: 1, scope: !11881, file: !1962, line: 176, type: !152)
!11886 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !11881, file: !1962, line: 176, type: !152)
!11887 = !DILocalVariable(name: "pin_func", arg: 3, scope: !11881, file: !1962, line: 176, type: !152)
!11888 = !DILocalVariable(name: "port_device", scope: !11881, file: !1962, line: 178, type: !1892)
!11889 = !DILocation(line: 0, scope: !11881)
!11890 = !DILocation(line: 180, column: 22, scope: !11891)
!11891 = distinct !DILexicalBlock(scope: !11881, file: !1962, line: 180, column: 6)
!11892 = !DILocation(line: 180, column: 6, scope: !11881)
!11893 = !DILocation(line: 180, column: 6, scope: !11891)
!11894 = !DILocation(line: 184, column: 16, scope: !11881)
!11895 = !DILocation(line: 186, column: 19, scope: !11896)
!11896 = distinct !DILexicalBlock(scope: !11881, file: !1962, line: 186, column: 6)
!11897 = !DILocation(line: 186, column: 28, scope: !11896)
!11898 = !DILocation(line: 186, column: 33, scope: !11896)
!11899 = !DILocation(line: 186, column: 6, scope: !11881)
!11900 = !DILocation(line: 190, column: 43, scope: !11881)
!11901 = !DILocation(line: 190, column: 9, scope: !11881)
!11902 = !DILocation(line: 190, column: 2, scope: !11881)
!11903 = !DILocation(line: 191, column: 1, scope: !11881)
!11904 = distinct !DISubprogram(name: "device_is_ready", scope: !9808, file: !9808, line: 47, type: !11905, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1880, retainedNodes: !11907)
!11905 = !DISubroutineType(types: !11906)
!11906 = !{!145, !1892}
!11907 = !{!11908}
!11908 = !DILocalVariable(name: "dev", arg: 1, scope: !11904, file: !9808, line: 47, type: !1892)
!11909 = !DILocation(line: 0, scope: !11904)
!11910 = !DILocation(line: 55, column: 2, scope: !11911)
!11911 = distinct !DILexicalBlock(scope: !11904, file: !9808, line: 55, column: 2)
!11912 = !{i64 2149518322}
!11913 = !DILocation(line: 56, column: 9, scope: !11904)
!11914 = !DILocation(line: 56, column: 2, scope: !11904)
!11915 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !247, file: !247, line: 730, type: !11905, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1880, retainedNodes: !11916)
!11916 = !{!11917}
!11917 = !DILocalVariable(name: "dev", arg: 1, scope: !11915, file: !247, line: 730, type: !1892)
!11918 = !DILocation(line: 0, scope: !11915)
!11919 = !DILocation(line: 732, column: 9, scope: !11915)
!11920 = !DILocation(line: 732, column: 2, scope: !11915)
!11921 = distinct !DISubprogram(name: "SystemInit", scope: !2014, file: !2014, line: 167, type: !3148, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1970, retainedNodes: !2236)
!11922 = !DILocation(line: 182, column: 1, scope: !11921)
!11923 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !2014, file: !2014, line: 220, type: !3148, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1970, retainedNodes: !11924)
!11924 = !{!11925, !11926, !11927, !11928, !11929}
!11925 = !DILocalVariable(name: "tmp", scope: !11923, file: !2014, line: 222, type: !152)
!11926 = !DILocalVariable(name: "pllvco", scope: !11923, file: !2014, line: 222, type: !152)
!11927 = !DILocalVariable(name: "pllp", scope: !11923, file: !2014, line: 222, type: !152)
!11928 = !DILocalVariable(name: "pllsource", scope: !11923, file: !2014, line: 222, type: !152)
!11929 = !DILocalVariable(name: "pllm", scope: !11923, file: !2014, line: 222, type: !152)
!11930 = !DILocation(line: 0, scope: !11923)
!11931 = !DILocation(line: 225, column: 14, scope: !11923)
!11932 = !DILocation(line: 225, column: 19, scope: !11923)
!11933 = !DILocation(line: 227, column: 3, scope: !11923)
!11934 = !DILocation(line: 240, column: 25, scope: !11935)
!11935 = distinct !DILexicalBlock(scope: !11923, file: !2014, line: 228, column: 3)
!11936 = !DILocation(line: 241, column: 19, scope: !11935)
!11937 = !DILocation(line: 241, column: 27, scope: !11935)
!11938 = !DILocation(line: 0, scope: !11939)
!11939 = distinct !DILexicalBlock(scope: !11935, file: !2014, line: 243, column: 11)
!11940 = !DILocation(line: 254, column: 22, scope: !11935)
!11941 = !DILocation(line: 254, column: 62, scope: !11935)
!11942 = !DILocation(line: 255, column: 31, scope: !11935)
!11943 = !DILocation(line: 256, column: 7, scope: !11935)
!11944 = !DILocation(line: 0, scope: !11935)
!11945 = !DILocation(line: 263, column: 30, scope: !11923)
!11946 = !DILocation(line: 263, column: 52, scope: !11923)
!11947 = !DILocation(line: 263, column: 9, scope: !11923)
!11948 = !DILocation(line: 265, column: 19, scope: !11923)
!11949 = !DILocation(line: 266, column: 1, scope: !11923)
!11950 = distinct !DISubprogram(name: "HAL_RCCEx_PeriphCLKConfig", scope: !11951, file: !11951, line: 87, type: !11952, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !11991)
!11951 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc_ex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11952 = !DISubroutineType(types: !11953)
!11953 = !{!11954, !11955}
!11954 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !2982, line: 44, baseType: !2981)
!11955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11956, size: 32)
!11956 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PeriphCLKInitTypeDef", file: !11957, line: 172, baseType: !11958)
!11957 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11958 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11957, line: 121, size: 736, elements: !11959)
!11959 = !{!11960, !11961, !11970, !11978, !11979, !11980, !11981, !11982, !11983, !11984, !11985, !11986, !11987, !11988, !11989, !11990}
!11960 = !DIDerivedType(tag: DW_TAG_member, name: "PeriphClockSelection", scope: !11958, file: !11957, line: 123, baseType: !152, size: 32)
!11961 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2S", scope: !11958, file: !11957, line: 126, baseType: !11962, size: 160, offset: 32)
!11962 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLI2SInitTypeDef", file: !11957, line: 97, baseType: !11963)
!11963 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11957, line: 79, size: 160, elements: !11964)
!11964 = !{!11965, !11966, !11967, !11968, !11969}
!11965 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SM", scope: !11963, file: !11957, line: 81, baseType: !152, size: 32)
!11966 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SN", scope: !11963, file: !11957, line: 84, baseType: !152, size: 32, offset: 32)
!11967 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SP", scope: !11963, file: !11957, line: 87, baseType: !152, size: 32, offset: 64)
!11968 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SQ", scope: !11963, file: !11957, line: 90, baseType: !152, size: 32, offset: 96)
!11969 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SR", scope: !11963, file: !11957, line: 94, baseType: !152, size: 32, offset: 128)
!11970 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAI", scope: !11958, file: !11957, line: 129, baseType: !11971, size: 128, offset: 192)
!11971 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLSAIInitTypeDef", file: !11957, line: 116, baseType: !11972)
!11972 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11957, line: 102, size: 128, elements: !11973)
!11973 = !{!11974, !11975, !11976, !11977}
!11974 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIM", scope: !11972, file: !11957, line: 104, baseType: !152, size: 32)
!11975 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIN", scope: !11972, file: !11957, line: 107, baseType: !152, size: 32, offset: 32)
!11976 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIP", scope: !11972, file: !11957, line: 110, baseType: !152, size: 32, offset: 64)
!11977 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIQ", scope: !11972, file: !11957, line: 113, baseType: !152, size: 32, offset: 96)
!11978 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SDivQ", scope: !11958, file: !11957, line: 132, baseType: !152, size: 32, offset: 320)
!11979 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIDivQ", scope: !11958, file: !11957, line: 136, baseType: !152, size: 32, offset: 352)
!11980 = !DIDerivedType(tag: DW_TAG_member, name: "Sai1ClockSelection", scope: !11958, file: !11957, line: 140, baseType: !152, size: 32, offset: 384)
!11981 = !DIDerivedType(tag: DW_TAG_member, name: "Sai2ClockSelection", scope: !11958, file: !11957, line: 143, baseType: !152, size: 32, offset: 416)
!11982 = !DIDerivedType(tag: DW_TAG_member, name: "I2sApb1ClockSelection", scope: !11958, file: !11957, line: 146, baseType: !152, size: 32, offset: 448)
!11983 = !DIDerivedType(tag: DW_TAG_member, name: "I2sApb2ClockSelection", scope: !11958, file: !11957, line: 149, baseType: !152, size: 32, offset: 480)
!11984 = !DIDerivedType(tag: DW_TAG_member, name: "RTCClockSelection", scope: !11958, file: !11957, line: 152, baseType: !152, size: 32, offset: 512)
!11985 = !DIDerivedType(tag: DW_TAG_member, name: "SdioClockSelection", scope: !11958, file: !11957, line: 155, baseType: !152, size: 32, offset: 544)
!11986 = !DIDerivedType(tag: DW_TAG_member, name: "CecClockSelection", scope: !11958, file: !11957, line: 158, baseType: !152, size: 32, offset: 576)
!11987 = !DIDerivedType(tag: DW_TAG_member, name: "Fmpi2c1ClockSelection", scope: !11958, file: !11957, line: 161, baseType: !152, size: 32, offset: 608)
!11988 = !DIDerivedType(tag: DW_TAG_member, name: "SpdifClockSelection", scope: !11958, file: !11957, line: 164, baseType: !152, size: 32, offset: 640)
!11989 = !DIDerivedType(tag: DW_TAG_member, name: "Clk48ClockSelection", scope: !11958, file: !11957, line: 167, baseType: !152, size: 32, offset: 672)
!11990 = !DIDerivedType(tag: DW_TAG_member, name: "TIMPresSelection", scope: !11958, file: !11957, line: 170, baseType: !195, size: 8, offset: 704)
!11991 = !{!11992, !11993, !11994, !11995, !11996, !11997, !11998, !11999, !12000, !12001, !12002}
!11992 = !DILocalVariable(name: "PeriphClkInit", arg: 1, scope: !11950, file: !11951, line: 87, type: !11955)
!11993 = !DILocalVariable(name: "tickstart", scope: !11950, file: !11951, line: 89, type: !152)
!11994 = !DILocalVariable(name: "tmpreg1", scope: !11950, file: !11951, line: 90, type: !152)
!11995 = !DILocalVariable(name: "plli2sp", scope: !11950, file: !11951, line: 91, type: !152)
!11996 = !DILocalVariable(name: "plli2sq", scope: !11950, file: !11951, line: 92, type: !152)
!11997 = !DILocalVariable(name: "plli2sr", scope: !11950, file: !11951, line: 93, type: !152)
!11998 = !DILocalVariable(name: "pllsaip", scope: !11950, file: !11951, line: 94, type: !152)
!11999 = !DILocalVariable(name: "pllsaiq", scope: !11950, file: !11951, line: 95, type: !152)
!12000 = !DILocalVariable(name: "plli2sused", scope: !11950, file: !11951, line: 96, type: !152)
!12001 = !DILocalVariable(name: "pllsaiused", scope: !11950, file: !11951, line: 97, type: !152)
!12002 = !DILocalVariable(name: "tmpreg", scope: !12003, file: !11951, line: 184, type: !227)
!12003 = distinct !DILexicalBlock(scope: !12004, file: !11951, line: 184, column: 5)
!12004 = distinct !DILexicalBlock(scope: !12005, file: !11951, line: 179, column: 3)
!12005 = distinct !DILexicalBlock(scope: !11950, file: !11951, line: 178, column: 6)
!12006 = !DILocation(line: 0, scope: !11950)
!12007 = !DILocation(line: 103, column: 23, scope: !12008)
!12008 = distinct !DILexicalBlock(scope: !11950, file: !11951, line: 103, column: 6)
!12009 = !DILocation(line: 103, column: 45, scope: !12008)
!12010 = !DILocation(line: 103, column: 71, scope: !12008)
!12011 = !DILocation(line: 103, column: 6, scope: !11950)
!12012 = !DILocation(line: 109, column: 5, scope: !12013)
!12013 = distinct !DILexicalBlock(scope: !12008, file: !11951, line: 104, column: 3)
!12014 = !DILocation(line: 111, column: 23, scope: !12015)
!12015 = distinct !DILexicalBlock(scope: !12013, file: !11951, line: 111, column: 8)
!12016 = !DILocation(line: 111, column: 45, scope: !12015)
!12017 = !DILocation(line: 111, column: 8, scope: !12013)
!12018 = !DILocation(line: 119, column: 23, scope: !12019)
!12019 = distinct !DILexicalBlock(scope: !11950, file: !11951, line: 119, column: 6)
!12020 = !DILocation(line: 119, column: 45, scope: !12019)
!12021 = !DILocation(line: 119, column: 71, scope: !12019)
!12022 = !DILocation(line: 119, column: 6, scope: !11950)
!12023 = !DILocation(line: 125, column: 5, scope: !12024)
!12024 = distinct !DILexicalBlock(scope: !12019, file: !11951, line: 120, column: 3)
!12025 = !DILocation(line: 127, column: 23, scope: !12026)
!12026 = distinct !DILexicalBlock(scope: !12024, file: !11951, line: 127, column: 8)
!12027 = !DILocation(line: 127, column: 45, scope: !12026)
!12028 = !DILocation(line: 127, column: 8, scope: !12024)
!12029 = !DILocation(line: 135, column: 23, scope: !12030)
!12030 = distinct !DILexicalBlock(scope: !11950, file: !11951, line: 135, column: 6)
!12031 = !DILocation(line: 135, column: 45, scope: !12030)
!12032 = !DILocation(line: 135, column: 67, scope: !12030)
!12033 = !DILocation(line: 135, column: 6, scope: !11950)
!12034 = !DILocation(line: 141, column: 5, scope: !12035)
!12035 = distinct !DILexicalBlock(scope: !12030, file: !11951, line: 136, column: 3)
!12036 = !DILocation(line: 143, column: 23, scope: !12037)
!12037 = distinct !DILexicalBlock(scope: !12035, file: !11951, line: 143, column: 8)
!12038 = !DILocation(line: 143, column: 42, scope: !12037)
!12039 = !DILocation(line: 143, column: 8, scope: !12035)
!12040 = !DILocation(line: 148, column: 42, scope: !12041)
!12041 = distinct !DILexicalBlock(scope: !12035, file: !11951, line: 148, column: 8)
!12042 = !DILocation(line: 148, column: 8, scope: !12035)
!12043 = !DILocation(line: 156, column: 23, scope: !12044)
!12044 = distinct !DILexicalBlock(scope: !11950, file: !11951, line: 156, column: 6)
!12045 = !DILocation(line: 156, column: 45, scope: !12044)
!12046 = !DILocation(line: 156, column: 67, scope: !12044)
!12047 = !DILocation(line: 156, column: 6, scope: !11950)
!12048 = !DILocation(line: 162, column: 5, scope: !12049)
!12049 = distinct !DILexicalBlock(scope: !12044, file: !11951, line: 157, column: 3)
!12050 = !DILocation(line: 165, column: 23, scope: !12051)
!12051 = distinct !DILexicalBlock(scope: !12049, file: !11951, line: 165, column: 8)
!12052 = !DILocation(line: 165, column: 42, scope: !12051)
!12053 = !DILocation(line: 165, column: 8, scope: !12049)
!12054 = !DILocation(line: 170, column: 42, scope: !12055)
!12055 = distinct !DILexicalBlock(scope: !12049, file: !11951, line: 170, column: 8)
!12056 = !DILocation(line: 170, column: 8, scope: !12049)
!12057 = !DILocation(line: 178, column: 23, scope: !12005)
!12058 = !DILocation(line: 178, column: 45, scope: !12005)
!12059 = !DILocation(line: 178, column: 66, scope: !12005)
!12060 = !DILocation(line: 178, column: 6, scope: !11950)
!12061 = !DILocation(line: 184, column: 5, scope: !12003)
!12062 = !DILocation(line: 184, column: 5, scope: !12004)
!12063 = !DILocation(line: 187, column: 13, scope: !12004)
!12064 = !DILocation(line: 190, column: 17, scope: !12004)
!12065 = !DILocation(line: 192, column: 5, scope: !12004)
!12066 = !DILocation(line: 192, column: 17, scope: !12004)
!12067 = !DILocation(line: 192, column: 20, scope: !12004)
!12068 = !DILocation(line: 192, column: 34, scope: !12004)
!12069 = !DILocation(line: 194, column: 11, scope: !12070)
!12070 = distinct !DILexicalBlock(scope: !12071, file: !11951, line: 194, column: 10)
!12071 = distinct !DILexicalBlock(scope: !12004, file: !11951, line: 193, column: 5)
!12072 = !DILocation(line: 194, column: 25, scope: !12070)
!12073 = !DILocation(line: 194, column: 39, scope: !12070)
!12074 = !DILocation(line: 194, column: 10, scope: !12071)
!12075 = distinct !{!12075, !12065, !12076}
!12076 = !DILocation(line: 198, column: 5, scope: !12004)
!12077 = !DILocation(line: 200, column: 21, scope: !12004)
!12078 = !DILocation(line: 200, column: 26, scope: !12004)
!12079 = !DILocation(line: 201, column: 17, scope: !12080)
!12080 = distinct !DILexicalBlock(scope: !12004, file: !11951, line: 201, column: 8)
!12081 = !DILocation(line: 201, column: 33, scope: !12080)
!12082 = !DILocation(line: 201, column: 66, scope: !12080)
!12083 = !DILocation(line: 201, column: 84, scope: !12080)
!12084 = !DILocation(line: 201, column: 47, scope: !12080)
!12085 = !DILocation(line: 201, column: 8, scope: !12004)
!12086 = !DILocation(line: 204, column: 23, scope: !12087)
!12087 = distinct !DILexicalBlock(scope: !12080, file: !11951, line: 202, column: 5)
!12088 = !DILocation(line: 204, column: 28, scope: !12087)
!12089 = !DILocation(line: 206, column: 7, scope: !12087)
!12090 = !DILocation(line: 207, column: 7, scope: !12087)
!12091 = !DILocation(line: 209, column: 17, scope: !12087)
!12092 = !DILocation(line: 212, column: 10, scope: !12093)
!12093 = distinct !DILexicalBlock(scope: !12087, file: !11951, line: 212, column: 10)
!12094 = !DILocation(line: 212, column: 10, scope: !12087)
!12095 = !DILocation(line: 215, column: 21, scope: !12096)
!12096 = distinct !DILexicalBlock(scope: !12093, file: !11951, line: 213, column: 7)
!12097 = !DILocation(line: 218, column: 9, scope: !12096)
!12098 = !DILocation(line: 218, column: 15, scope: !12096)
!12099 = !DILocation(line: 218, column: 51, scope: !12096)
!12100 = !DILocation(line: 220, column: 15, scope: !12101)
!12101 = distinct !DILexicalBlock(scope: !12102, file: !11951, line: 220, column: 14)
!12102 = distinct !DILexicalBlock(scope: !12096, file: !11951, line: 219, column: 9)
!12103 = !DILocation(line: 220, column: 29, scope: !12101)
!12104 = !DILocation(line: 220, column: 43, scope: !12101)
!12105 = !DILocation(line: 220, column: 14, scope: !12102)
!12106 = distinct !{!12106, !12097, !12107}
!12107 = !DILocation(line: 224, column: 9, scope: !12096)
!12108 = !DILocation(line: 227, column: 5, scope: !12109)
!12109 = distinct !DILexicalBlock(scope: !12004, file: !11951, line: 227, column: 5)
!12110 = !DILocation(line: 232, column: 23, scope: !12111)
!12111 = distinct !DILexicalBlock(scope: !11950, file: !11951, line: 232, column: 6)
!12112 = !DILocation(line: 228, column: 3, scope: !12004)
!12113 = !DILocation(line: 232, column: 45, scope: !12111)
!12114 = !DILocation(line: 232, column: 66, scope: !12111)
!12115 = !DILocation(line: 232, column: 6, scope: !11950)
!12116 = !DILocation(line: 235, column: 5, scope: !12117)
!12117 = distinct !DILexicalBlock(scope: !12111, file: !11951, line: 233, column: 3)
!12118 = !DILocation(line: 240, column: 23, scope: !12119)
!12119 = distinct !DILexicalBlock(scope: !11950, file: !11951, line: 240, column: 6)
!12120 = !DILocation(line: 236, column: 3, scope: !12117)
!12121 = !DILocation(line: 240, column: 45, scope: !12119)
!12122 = !DILocation(line: 240, column: 70, scope: !12119)
!12123 = !DILocation(line: 240, column: 6, scope: !11950)
!12124 = !DILocation(line: 246, column: 5, scope: !12125)
!12125 = distinct !DILexicalBlock(scope: !12119, file: !11951, line: 241, column: 3)
!12126 = !DILocation(line: 251, column: 23, scope: !12127)
!12127 = distinct !DILexicalBlock(scope: !11950, file: !11951, line: 251, column: 6)
!12128 = !DILocation(line: 247, column: 3, scope: !12125)
!12129 = !DILocation(line: 251, column: 45, scope: !12127)
!12130 = !DILocation(line: 251, column: 66, scope: !12127)
!12131 = !DILocation(line: 251, column: 6, scope: !11950)
!12132 = !DILocation(line: 257, column: 5, scope: !12133)
!12133 = distinct !DILexicalBlock(scope: !12127, file: !11951, line: 252, column: 3)
!12134 = !DILocation(line: 262, column: 23, scope: !12135)
!12135 = distinct !DILexicalBlock(scope: !11950, file: !11951, line: 262, column: 6)
!12136 = !DILocation(line: 258, column: 3, scope: !12133)
!12137 = !DILocation(line: 262, column: 45, scope: !12135)
!12138 = !DILocation(line: 262, column: 68, scope: !12135)
!12139 = !DILocation(line: 262, column: 6, scope: !11950)
!12140 = !DILocation(line: 268, column: 5, scope: !12141)
!12141 = distinct !DILexicalBlock(scope: !12135, file: !11951, line: 263, column: 3)
!12142 = !DILocation(line: 271, column: 23, scope: !12143)
!12143 = distinct !DILexicalBlock(scope: !12141, file: !11951, line: 271, column: 8)
!12144 = !DILocation(line: 271, column: 43, scope: !12143)
!12145 = !DILocation(line: 271, column: 8, scope: !12141)
!12146 = !DILocation(line: 279, column: 23, scope: !12147)
!12147 = distinct !DILexicalBlock(scope: !11950, file: !11951, line: 279, column: 6)
!12148 = !DILocation(line: 279, column: 45, scope: !12147)
!12149 = !DILocation(line: 279, column: 67, scope: !12147)
!12150 = !DILocation(line: 279, column: 6, scope: !11950)
!12151 = !DILocation(line: 285, column: 5, scope: !12152)
!12152 = distinct !DILexicalBlock(scope: !12147, file: !11951, line: 280, column: 3)
!12153 = !DILocation(line: 290, column: 23, scope: !12154)
!12154 = distinct !DILexicalBlock(scope: !11950, file: !11951, line: 290, column: 6)
!12155 = !DILocation(line: 286, column: 3, scope: !12152)
!12156 = !DILocation(line: 290, column: 45, scope: !12154)
!12157 = !DILocation(line: 290, column: 70, scope: !12154)
!12158 = !DILocation(line: 290, column: 6, scope: !11950)
!12159 = !DILocation(line: 296, column: 5, scope: !12160)
!12160 = distinct !DILexicalBlock(scope: !12154, file: !11951, line: 291, column: 3)
!12161 = !DILocation(line: 298, column: 23, scope: !12162)
!12162 = distinct !DILexicalBlock(scope: !12160, file: !11951, line: 298, column: 8)
!12163 = !DILocation(line: 298, column: 43, scope: !12162)
!12164 = !DILocation(line: 298, column: 8, scope: !12160)
!12165 = !DILocation(line: 308, column: 44, scope: !12166)
!12166 = distinct !DILexicalBlock(scope: !11950, file: !11951, line: 308, column: 6)
!12167 = !DILocation(line: 308, column: 18, scope: !12166)
!12168 = !DILocation(line: 308, column: 25, scope: !12166)
!12169 = !DILocation(line: 308, column: 65, scope: !12166)
!12170 = !DILocation(line: 308, column: 6, scope: !11950)
!12171 = !DILocation(line: 311, column: 5, scope: !12172)
!12172 = distinct !DILexicalBlock(scope: !12166, file: !11951, line: 309, column: 3)
!12173 = !DILocation(line: 313, column: 17, scope: !12172)
!12174 = !DILocation(line: 315, column: 5, scope: !12172)
!12175 = !DILocation(line: 315, column: 11, scope: !12172)
!12176 = !DILocation(line: 317, column: 11, scope: !12177)
!12177 = distinct !DILexicalBlock(scope: !12178, file: !11951, line: 317, column: 10)
!12178 = distinct !DILexicalBlock(scope: !12172, file: !11951, line: 316, column: 5)
!12179 = !DILocation(line: 317, column: 25, scope: !12177)
!12180 = !DILocation(line: 317, column: 39, scope: !12177)
!12181 = !DILocation(line: 317, column: 10, scope: !12178)
!12182 = distinct !{!12182, !12174, !12183}
!12183 = !DILocation(line: 322, column: 5, scope: !12172)
!12184 = !DILocation(line: 329, column: 27, scope: !12185)
!12185 = distinct !DILexicalBlock(scope: !12172, file: !11951, line: 329, column: 8)
!12186 = !DILocation(line: 329, column: 49, scope: !12185)
!12187 = !DILocation(line: 329, column: 75, scope: !12185)
!12188 = !DILocation(line: 329, column: 102, scope: !12185)
!12189 = !DILocation(line: 329, column: 121, scope: !12185)
!12190 = !DILocation(line: 329, column: 143, scope: !12185)
!12191 = !DILocation(line: 329, column: 176, scope: !12185)
!12192 = !DILocation(line: 330, column: 49, scope: !12185)
!12193 = !DILocation(line: 330, column: 75, scope: !12185)
!12194 = !DILocation(line: 330, column: 102, scope: !12185)
!12195 = !DILocation(line: 330, column: 121, scope: !12185)
!12196 = !DILocation(line: 330, column: 143, scope: !12185)
!12197 = !DILocation(line: 329, column: 8, scope: !12172)
!12198 = !DILocation(line: 336, column: 26, scope: !12199)
!12199 = distinct !DILexicalBlock(scope: !12185, file: !11951, line: 331, column: 5)
!12200 = !DILocation(line: 336, column: 100, scope: !12199)
!12201 = !DILocation(line: 337, column: 24, scope: !12199)
!12202 = !DILocation(line: 337, column: 61, scope: !12199)
!12203 = !DILocation(line: 341, column: 7, scope: !12199)
!12204 = !DILocation(line: 345, column: 27, scope: !12205)
!12205 = distinct !DILexicalBlock(scope: !12172, file: !11951, line: 345, column: 8)
!12206 = !DILocation(line: 342, column: 5, scope: !12199)
!12207 = !DILocation(line: 345, column: 49, scope: !12205)
!12208 = !DILocation(line: 345, column: 71, scope: !12205)
!12209 = !DILocation(line: 345, column: 94, scope: !12205)
!12210 = !DILocation(line: 345, column: 113, scope: !12205)
!12211 = !DILocation(line: 345, column: 132, scope: !12205)
!12212 = !DILocation(line: 345, column: 162, scope: !12205)
!12213 = !DILocation(line: 346, column: 49, scope: !12205)
!12214 = !DILocation(line: 346, column: 71, scope: !12205)
!12215 = !DILocation(line: 346, column: 94, scope: !12205)
!12216 = !DILocation(line: 346, column: 113, scope: !12205)
!12217 = !DILocation(line: 346, column: 132, scope: !12205)
!12218 = !DILocation(line: 345, column: 8, scope: !12172)
!12219 = !DILocation(line: 354, column: 26, scope: !12220)
!12220 = distinct !DILexicalBlock(scope: !12205, file: !11951, line: 347, column: 5)
!12221 = !DILocation(line: 354, column: 100, scope: !12220)
!12222 = !DILocation(line: 355, column: 24, scope: !12220)
!12223 = !DILocation(line: 355, column: 61, scope: !12220)
!12224 = !DILocation(line: 360, column: 7, scope: !12220)
!12225 = !DILocation(line: 363, column: 7, scope: !12220)
!12226 = !DILocation(line: 367, column: 26, scope: !12227)
!12227 = distinct !DILexicalBlock(scope: !12172, file: !11951, line: 367, column: 8)
!12228 = !DILocation(line: 364, column: 5, scope: !12220)
!12229 = !DILocation(line: 367, column: 48, scope: !12227)
!12230 = !DILocation(line: 367, column: 73, scope: !12227)
!12231 = !DILocation(line: 367, column: 99, scope: !12227)
!12232 = !DILocation(line: 367, column: 118, scope: !12227)
!12233 = !DILocation(line: 367, column: 138, scope: !12227)
!12234 = !DILocation(line: 367, column: 8, scope: !12172)
!12235 = !DILocation(line: 372, column: 26, scope: !12236)
!12236 = distinct !DILexicalBlock(scope: !12227, file: !11951, line: 368, column: 5)
!12237 = !DILocation(line: 373, column: 24, scope: !12236)
!12238 = !DILocation(line: 373, column: 61, scope: !12236)
!12239 = !DILocation(line: 377, column: 7, scope: !12236)
!12240 = !DILocation(line: 381, column: 24, scope: !12241)
!12241 = distinct !DILexicalBlock(scope: !12172, file: !11951, line: 381, column: 8)
!12242 = !DILocation(line: 378, column: 5, scope: !12236)
!12243 = !DILocation(line: 381, column: 45, scope: !12241)
!12244 = !DILocation(line: 381, column: 69, scope: !12241)
!12245 = !DILocation(line: 381, column: 8, scope: !12172)
!12246 = !DILocation(line: 390, column: 7, scope: !12247)
!12247 = distinct !DILexicalBlock(scope: !12241, file: !11951, line: 382, column: 5)
!12248 = !DILocation(line: 391, column: 5, scope: !12247)
!12249 = !DILocation(line: 394, column: 5, scope: !12172)
!12250 = !DILocation(line: 396, column: 17, scope: !12172)
!12251 = !DILocation(line: 398, column: 5, scope: !12172)
!12252 = !DILocation(line: 398, column: 11, scope: !12172)
!12253 = !DILocation(line: 398, column: 51, scope: !12172)
!12254 = !DILocation(line: 400, column: 11, scope: !12255)
!12255 = distinct !DILexicalBlock(scope: !12256, file: !11951, line: 400, column: 10)
!12256 = distinct !DILexicalBlock(scope: !12172, file: !11951, line: 399, column: 5)
!12257 = !DILocation(line: 400, column: 25, scope: !12255)
!12258 = !DILocation(line: 400, column: 39, scope: !12255)
!12259 = !DILocation(line: 400, column: 10, scope: !12256)
!12260 = distinct !{!12260, !12251, !12261}
!12261 = !DILocation(line: 405, column: 5, scope: !12172)
!12262 = !DILocation(line: 411, column: 17, scope: !12263)
!12263 = distinct !DILexicalBlock(scope: !11950, file: !11951, line: 411, column: 6)
!12264 = !DILocation(line: 411, column: 6, scope: !11950)
!12265 = !DILocation(line: 414, column: 5, scope: !12266)
!12266 = distinct !DILexicalBlock(scope: !12263, file: !11951, line: 412, column: 3)
!12267 = !DILocation(line: 416, column: 17, scope: !12266)
!12268 = !DILocation(line: 418, column: 5, scope: !12266)
!12269 = !DILocation(line: 418, column: 11, scope: !12266)
!12270 = !DILocation(line: 420, column: 11, scope: !12271)
!12271 = distinct !DILexicalBlock(scope: !12272, file: !11951, line: 420, column: 10)
!12272 = distinct !DILexicalBlock(scope: !12266, file: !11951, line: 419, column: 5)
!12273 = !DILocation(line: 420, column: 25, scope: !12271)
!12274 = !DILocation(line: 420, column: 39, scope: !12271)
!12275 = !DILocation(line: 420, column: 10, scope: !12272)
!12276 = distinct !{!12276, !12268, !12277}
!12277 = !DILocation(line: 425, column: 5, scope: !12266)
!12278 = !DILocation(line: 432, column: 27, scope: !12279)
!12279 = distinct !DILexicalBlock(scope: !12266, file: !11951, line: 432, column: 8)
!12280 = !DILocation(line: 432, column: 49, scope: !12279)
!12281 = !DILocation(line: 432, column: 71, scope: !12279)
!12282 = !DILocation(line: 432, column: 94, scope: !12279)
!12283 = !DILocation(line: 432, column: 113, scope: !12279)
!12284 = !DILocation(line: 432, column: 132, scope: !12279)
!12285 = !DILocation(line: 432, column: 162, scope: !12279)
!12286 = !DILocation(line: 433, column: 49, scope: !12279)
!12287 = !DILocation(line: 433, column: 71, scope: !12279)
!12288 = !DILocation(line: 433, column: 94, scope: !12279)
!12289 = !DILocation(line: 433, column: 113, scope: !12279)
!12290 = !DILocation(line: 433, column: 132, scope: !12279)
!12291 = !DILocation(line: 432, column: 8, scope: !12266)
!12292 = !DILocation(line: 441, column: 26, scope: !12293)
!12293 = distinct !DILexicalBlock(scope: !12279, file: !11951, line: 434, column: 5)
!12294 = !DILocation(line: 441, column: 100, scope: !12293)
!12295 = !DILocation(line: 445, column: 7, scope: !12293)
!12296 = !DILocation(line: 448, column: 7, scope: !12293)
!12297 = !DILocation(line: 453, column: 26, scope: !12298)
!12298 = distinct !DILexicalBlock(scope: !12266, file: !11951, line: 453, column: 8)
!12299 = !DILocation(line: 449, column: 5, scope: !12293)
!12300 = !DILocation(line: 453, column: 48, scope: !12298)
!12301 = !DILocation(line: 453, column: 71, scope: !12298)
!12302 = !DILocation(line: 453, column: 95, scope: !12298)
!12303 = !DILocation(line: 453, column: 114, scope: !12298)
!12304 = !DILocation(line: 453, column: 134, scope: !12298)
!12305 = !DILocation(line: 453, column: 8, scope: !12266)
!12306 = !DILocation(line: 458, column: 24, scope: !12307)
!12307 = distinct !DILexicalBlock(scope: !12298, file: !11951, line: 454, column: 5)
!12308 = !DILocation(line: 458, column: 61, scope: !12307)
!12309 = !DILocation(line: 462, column: 7, scope: !12307)
!12310 = !DILocation(line: 463, column: 5, scope: !12307)
!12311 = !DILocation(line: 466, column: 5, scope: !12266)
!12312 = !DILocation(line: 468, column: 17, scope: !12266)
!12313 = !DILocation(line: 470, column: 5, scope: !12266)
!12314 = !DILocation(line: 470, column: 11, scope: !12266)
!12315 = !DILocation(line: 470, column: 39, scope: !12266)
!12316 = !DILocation(line: 472, column: 11, scope: !12317)
!12317 = distinct !DILexicalBlock(scope: !12318, file: !11951, line: 472, column: 10)
!12318 = distinct !DILexicalBlock(scope: !12266, file: !11951, line: 471, column: 5)
!12319 = !DILocation(line: 472, column: 25, scope: !12317)
!12320 = !DILocation(line: 472, column: 39, scope: !12317)
!12321 = !DILocation(line: 472, column: 10, scope: !12318)
!12322 = distinct !{!12322, !12313, !12323}
!12323 = !DILocation(line: 477, column: 5, scope: !12266)
!12324 = !DILocation(line: 480, column: 1, scope: !11950)
!12325 = !DISubprogram(name: "HAL_GetTick", scope: !12326, file: !12326, line: 234, type: !6408, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2236)
!12326 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12327 = distinct !DISubprogram(name: "HAL_RCCEx_GetPeriphCLKConfig", scope: !11951, file: !11951, line: 489, type: !12328, scopeLine: 490, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !12330)
!12328 = !DISubroutineType(types: !12329)
!12329 = !{null, !11955}
!12330 = !{!12331, !12332}
!12331 = !DILocalVariable(name: "PeriphClkInit", arg: 1, scope: !12327, file: !11951, line: 489, type: !11955)
!12332 = !DILocalVariable(name: "tempreg", scope: !12327, file: !11951, line: 491, type: !152)
!12333 = !DILocation(line: 0, scope: !12327)
!12334 = !DILocation(line: 494, column: 18, scope: !12327)
!12335 = !DILocation(line: 494, column: 39, scope: !12327)
!12336 = !DILocation(line: 502, column: 52, scope: !12327)
!12337 = !DILocation(line: 502, column: 63, scope: !12327)
!12338 = !DILocation(line: 502, column: 25, scope: !12327)
!12339 = !DILocation(line: 502, column: 33, scope: !12327)
!12340 = !DILocation(line: 503, column: 52, scope: !12327)
!12341 = !DILocation(line: 503, column: 89, scope: !12327)
!12342 = !DILocation(line: 503, column: 25, scope: !12327)
!12343 = !DILocation(line: 503, column: 33, scope: !12327)
!12344 = !DILocation(line: 504, column: 54, scope: !12327)
!12345 = !DILocation(line: 504, column: 128, scope: !12327)
!12346 = !DILocation(line: 504, column: 25, scope: !12327)
!12347 = !DILocation(line: 504, column: 33, scope: !12327)
!12348 = !DILocation(line: 505, column: 52, scope: !12327)
!12349 = !DILocation(line: 505, column: 89, scope: !12327)
!12350 = !DILocation(line: 505, column: 25, scope: !12327)
!12351 = !DILocation(line: 505, column: 33, scope: !12327)
!12352 = !DILocation(line: 506, column: 52, scope: !12327)
!12353 = !DILocation(line: 506, column: 89, scope: !12327)
!12354 = !DILocation(line: 506, column: 25, scope: !12327)
!12355 = !DILocation(line: 506, column: 33, scope: !12327)
!12356 = !DILocation(line: 508, column: 52, scope: !12327)
!12357 = !DILocation(line: 508, column: 63, scope: !12327)
!12358 = !DILocation(line: 508, column: 25, scope: !12327)
!12359 = !DILocation(line: 508, column: 33, scope: !12327)
!12360 = !DILocation(line: 509, column: 52, scope: !12327)
!12361 = !DILocation(line: 509, column: 89, scope: !12327)
!12362 = !DILocation(line: 509, column: 25, scope: !12327)
!12363 = !DILocation(line: 509, column: 33, scope: !12327)
!12364 = !DILocation(line: 510, column: 54, scope: !12327)
!12365 = !DILocation(line: 510, column: 128, scope: !12327)
!12366 = !DILocation(line: 510, column: 25, scope: !12327)
!12367 = !DILocation(line: 510, column: 33, scope: !12327)
!12368 = !DILocation(line: 511, column: 52, scope: !12327)
!12369 = !DILocation(line: 511, column: 89, scope: !12327)
!12370 = !DILocation(line: 511, column: 25, scope: !12327)
!12371 = !DILocation(line: 511, column: 33, scope: !12327)
!12372 = !DILocation(line: 513, column: 48, scope: !12327)
!12373 = !DILocation(line: 513, column: 56, scope: !12327)
!12374 = !DILocation(line: 513, column: 18, scope: !12327)
!12375 = !DILocation(line: 513, column: 29, scope: !12327)
!12376 = !DILocation(line: 514, column: 48, scope: !12327)
!12377 = !DILocation(line: 514, column: 82, scope: !12327)
!12378 = !DILocation(line: 514, column: 18, scope: !12327)
!12379 = !DILocation(line: 514, column: 29, scope: !12327)
!12380 = !DILocation(line: 517, column: 39, scope: !12327)
!12381 = !DILocation(line: 517, column: 18, scope: !12327)
!12382 = !DILocation(line: 517, column: 37, scope: !12327)
!12383 = !DILocation(line: 520, column: 39, scope: !12327)
!12384 = !DILocation(line: 520, column: 18, scope: !12327)
!12385 = !DILocation(line: 520, column: 37, scope: !12327)
!12386 = !DILocation(line: 523, column: 42, scope: !12327)
!12387 = !DILocation(line: 523, column: 18, scope: !12327)
!12388 = !DILocation(line: 523, column: 40, scope: !12327)
!12389 = !DILocation(line: 526, column: 42, scope: !12327)
!12390 = !DILocation(line: 526, column: 18, scope: !12327)
!12391 = !DILocation(line: 526, column: 40, scope: !12327)
!12392 = !DILocation(line: 529, column: 19, scope: !12327)
!12393 = !DILocation(line: 529, column: 24, scope: !12327)
!12394 = !DILocation(line: 530, column: 67, scope: !12327)
!12395 = !DILocation(line: 530, column: 72, scope: !12327)
!12396 = !DILocation(line: 530, column: 59, scope: !12327)
!12397 = !DILocation(line: 530, column: 18, scope: !12327)
!12398 = !DILocation(line: 530, column: 36, scope: !12327)
!12399 = !DILocation(line: 533, column: 38, scope: !12327)
!12400 = !DILocation(line: 533, column: 18, scope: !12327)
!12401 = !DILocation(line: 533, column: 36, scope: !12327)
!12402 = !DILocation(line: 536, column: 42, scope: !12327)
!12403 = !DILocation(line: 536, column: 18, scope: !12327)
!12404 = !DILocation(line: 536, column: 40, scope: !12327)
!12405 = !DILocation(line: 539, column: 40, scope: !12327)
!12406 = !DILocation(line: 539, column: 18, scope: !12327)
!12407 = !DILocation(line: 539, column: 38, scope: !12327)
!12408 = !DILocation(line: 542, column: 39, scope: !12327)
!12409 = !DILocation(line: 542, column: 18, scope: !12327)
!12410 = !DILocation(line: 542, column: 37, scope: !12327)
!12411 = !DILocation(line: 545, column: 40, scope: !12327)
!12412 = !DILocation(line: 545, column: 18, scope: !12327)
!12413 = !DILocation(line: 545, column: 38, scope: !12327)
!12414 = !DILocation(line: 548, column: 13, scope: !12415)
!12415 = distinct !DILexicalBlock(scope: !12327, file: !11951, line: 548, column: 7)
!12416 = !DILocation(line: 548, column: 7, scope: !12327)
!12417 = !DILocation(line: 550, column: 20, scope: !12418)
!12418 = distinct !DILexicalBlock(scope: !12415, file: !11951, line: 549, column: 3)
!12419 = !DILocation(line: 550, column: 37, scope: !12418)
!12420 = !DILocation(line: 556, column: 1, scope: !12327)
!12421 = distinct !DISubprogram(name: "HAL_RCCEx_GetPeriphCLKFreq", scope: !11951, file: !11951, line: 569, type: !7608, scopeLine: 570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !12422)
!12422 = !{!12423, !12424, !12425, !12426, !12427, !12428, !12429}
!12423 = !DILocalVariable(name: "PeriphClk", arg: 1, scope: !12421, file: !11951, line: 569, type: !152)
!12424 = !DILocalVariable(name: "tmpreg1", scope: !12421, file: !11951, line: 571, type: !152)
!12425 = !DILocalVariable(name: "frequency", scope: !12421, file: !11951, line: 573, type: !152)
!12426 = !DILocalVariable(name: "vcoinput", scope: !12421, file: !11951, line: 575, type: !152)
!12427 = !DILocalVariable(name: "saiclocksource", scope: !12421, file: !11951, line: 577, type: !152)
!12428 = !DILocalVariable(name: "srcclk", scope: !12421, file: !11951, line: 578, type: !152)
!12429 = !DILocalVariable(name: "vcooutput", scope: !12421, file: !11951, line: 580, type: !152)
!12430 = !DILocation(line: 0, scope: !12421)
!12431 = !DILocation(line: 581, column: 3, scope: !12421)
!12432 = !DILocation(line: 586, column: 29, scope: !12433)
!12433 = distinct !DILexicalBlock(scope: !12434, file: !11951, line: 585, column: 5)
!12434 = distinct !DILexicalBlock(scope: !12421, file: !11951, line: 582, column: 3)
!12435 = !DILocation(line: 588, column: 7, scope: !12433)
!12436 = !DILocation(line: 594, column: 20, scope: !12437)
!12437 = distinct !DILexicalBlock(scope: !12438, file: !11951, line: 594, column: 14)
!12438 = distinct !DILexicalBlock(scope: !12439, file: !11951, line: 591, column: 9)
!12439 = distinct !DILexicalBlock(scope: !12433, file: !11951, line: 589, column: 7)
!12440 = !DILocation(line: 0, scope: !12437)
!12441 = !DILocation(line: 606, column: 27, scope: !12438)
!12442 = !DILocation(line: 606, column: 64, scope: !12438)
!12443 = !DILocation(line: 607, column: 42, scope: !12438)
!12444 = !DILocation(line: 607, column: 79, scope: !12438)
!12445 = !DILocation(line: 607, column: 33, scope: !12438)
!12446 = !DILocation(line: 607, column: 86, scope: !12438)
!12447 = !DILocation(line: 610, column: 29, scope: !12438)
!12448 = !DILocation(line: 610, column: 63, scope: !12438)
!12449 = !DILocation(line: 610, column: 70, scope: !12438)
!12450 = !DILocation(line: 611, column: 32, scope: !12438)
!12451 = !DILocation(line: 612, column: 11, scope: !12438)
!12452 = !DILocation(line: 619, column: 20, scope: !12453)
!12453 = distinct !DILexicalBlock(scope: !12454, file: !11951, line: 619, column: 14)
!12454 = distinct !DILexicalBlock(scope: !12439, file: !11951, line: 616, column: 9)
!12455 = !DILocation(line: 0, scope: !12453)
!12456 = !DILocation(line: 632, column: 27, scope: !12454)
!12457 = !DILocation(line: 632, column: 64, scope: !12454)
!12458 = !DILocation(line: 633, column: 42, scope: !12454)
!12459 = !DILocation(line: 633, column: 79, scope: !12454)
!12460 = !DILocation(line: 633, column: 33, scope: !12454)
!12461 = !DILocation(line: 633, column: 86, scope: !12454)
!12462 = !DILocation(line: 636, column: 28, scope: !12454)
!12463 = !DILocation(line: 636, column: 36, scope: !12454)
!12464 = !DILocation(line: 636, column: 62, scope: !12454)
!12465 = !DILocation(line: 637, column: 32, scope: !12454)
!12466 = !DILocation(line: 638, column: 11, scope: !12454)
!12467 = !DILocation(line: 645, column: 20, scope: !12468)
!12468 = distinct !DILexicalBlock(scope: !12469, file: !11951, line: 645, column: 14)
!12469 = distinct !DILexicalBlock(scope: !12439, file: !11951, line: 642, column: 9)
!12470 = !DILocation(line: 0, scope: !12468)
!12471 = !DILocation(line: 658, column: 27, scope: !12469)
!12472 = !DILocation(line: 658, column: 55, scope: !12469)
!12473 = !DILocation(line: 659, column: 42, scope: !12469)
!12474 = !DILocation(line: 659, column: 70, scope: !12469)
!12475 = !DILocation(line: 659, column: 33, scope: !12469)
!12476 = !DILocation(line: 659, column: 77, scope: !12469)
!12477 = !DILocation(line: 660, column: 11, scope: !12469)
!12478 = !DILocation(line: 665, column: 11, scope: !12479)
!12479 = distinct !DILexicalBlock(scope: !12439, file: !11951, line: 663, column: 9)
!12480 = !DILocation(line: 669, column: 20, scope: !12481)
!12481 = distinct !DILexicalBlock(scope: !12482, file: !11951, line: 669, column: 14)
!12482 = distinct !DILexicalBlock(scope: !12439, file: !11951, line: 668, column: 9)
!12483 = !DILocation(line: 691, column: 16, scope: !12484)
!12484 = distinct !DILexicalBlock(scope: !12434, file: !11951, line: 689, column: 5)
!12485 = !DILocation(line: 692, column: 7, scope: !12484)
!12486 = !DILocation(line: 706, column: 20, scope: !12487)
!12487 = distinct !DILexicalBlock(scope: !12488, file: !11951, line: 706, column: 14)
!12488 = distinct !DILexicalBlock(scope: !12489, file: !11951, line: 703, column: 9)
!12489 = distinct !DILexicalBlock(scope: !12484, file: !11951, line: 693, column: 7)
!12490 = !DILocation(line: 0, scope: !12487)
!12491 = !DILocation(line: 718, column: 53, scope: !12488)
!12492 = !DILocation(line: 718, column: 90, scope: !12488)
!12493 = !DILocation(line: 718, column: 43, scope: !12488)
!12494 = !DILocation(line: 720, column: 53, scope: !12488)
!12495 = !DILocation(line: 720, column: 90, scope: !12488)
!12496 = !DILocation(line: 720, column: 44, scope: !12488)
!12497 = !DILocation(line: 721, column: 11, scope: !12488)
!12498 = !DILocation(line: 728, column: 20, scope: !12499)
!12499 = distinct !DILexicalBlock(scope: !12500, file: !11951, line: 728, column: 14)
!12500 = distinct !DILexicalBlock(scope: !12489, file: !11951, line: 725, column: 9)
!12501 = !DILocation(line: 0, scope: !12499)
!12502 = !DILocation(line: 740, column: 53, scope: !12500)
!12503 = !DILocation(line: 740, column: 81, scope: !12500)
!12504 = !DILocation(line: 740, column: 43, scope: !12500)
!12505 = !DILocation(line: 742, column: 53, scope: !12500)
!12506 = !DILocation(line: 742, column: 81, scope: !12500)
!12507 = !DILocation(line: 742, column: 44, scope: !12500)
!12508 = !DILocation(line: 743, column: 11, scope: !12500)
!12509 = !DILocation(line: 748, column: 20, scope: !12510)
!12510 = distinct !DILexicalBlock(scope: !12511, file: !11951, line: 748, column: 14)
!12511 = distinct !DILexicalBlock(scope: !12489, file: !11951, line: 747, column: 9)
!12512 = !DILocation(line: 770, column: 16, scope: !12513)
!12513 = distinct !DILexicalBlock(scope: !12434, file: !11951, line: 768, column: 5)
!12514 = !DILocation(line: 771, column: 7, scope: !12513)
!12515 = !DILocation(line: 785, column: 20, scope: !12516)
!12516 = distinct !DILexicalBlock(scope: !12517, file: !11951, line: 785, column: 14)
!12517 = distinct !DILexicalBlock(scope: !12518, file: !11951, line: 782, column: 9)
!12518 = distinct !DILexicalBlock(scope: !12513, file: !11951, line: 772, column: 7)
!12519 = !DILocation(line: 0, scope: !12516)
!12520 = !DILocation(line: 797, column: 53, scope: !12517)
!12521 = !DILocation(line: 797, column: 90, scope: !12517)
!12522 = !DILocation(line: 797, column: 43, scope: !12517)
!12523 = !DILocation(line: 799, column: 53, scope: !12517)
!12524 = !DILocation(line: 799, column: 90, scope: !12517)
!12525 = !DILocation(line: 799, column: 44, scope: !12517)
!12526 = !DILocation(line: 800, column: 11, scope: !12517)
!12527 = !DILocation(line: 807, column: 20, scope: !12528)
!12528 = distinct !DILexicalBlock(scope: !12529, file: !11951, line: 807, column: 14)
!12529 = distinct !DILexicalBlock(scope: !12518, file: !11951, line: 804, column: 9)
!12530 = !DILocation(line: 0, scope: !12528)
!12531 = !DILocation(line: 819, column: 53, scope: !12529)
!12532 = !DILocation(line: 819, column: 81, scope: !12529)
!12533 = !DILocation(line: 819, column: 43, scope: !12529)
!12534 = !DILocation(line: 821, column: 53, scope: !12529)
!12535 = !DILocation(line: 821, column: 81, scope: !12529)
!12536 = !DILocation(line: 821, column: 44, scope: !12529)
!12537 = !DILocation(line: 822, column: 11, scope: !12529)
!12538 = !DILocation(line: 827, column: 20, scope: !12539)
!12539 = distinct !DILexicalBlock(scope: !12540, file: !11951, line: 827, column: 14)
!12540 = distinct !DILexicalBlock(scope: !12518, file: !11951, line: 826, column: 9)
!12541 = !DILocation(line: 847, column: 3, scope: !12421)
!12542 = distinct !DISubprogram(name: "HAL_RCCEx_SelectLSEMode", scope: !11951, file: !11951, line: 2766, type: !12543, scopeLine: 2767, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !12545)
!12543 = !DISubroutineType(types: !12544)
!12544 = !{null, !195}
!12545 = !{!12546}
!12546 = !DILocalVariable(name: "Mode", arg: 1, scope: !12542, file: !11951, line: 2766, type: !195)
!12547 = !DILocation(line: 0, scope: !12542)
!12548 = !DILocation(line: 2770, column: 11, scope: !12549)
!12549 = distinct !DILexicalBlock(scope: !12542, file: !11951, line: 2770, column: 6)
!12550 = !DILocation(line: 0, scope: !12549)
!12551 = !DILocation(line: 2770, column: 6, scope: !12542)
!12552 = !DILocation(line: 2778, column: 1, scope: !12542)
!12553 = distinct !DISubprogram(name: "HAL_RCCEx_EnablePLLI2S", scope: !11951, file: !11951, line: 2803, type: !12554, scopeLine: 2804, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !12557)
!12554 = !DISubroutineType(types: !12555)
!12555 = !{!11954, !12556}
!12556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11962, size: 32)
!12557 = !{!12558, !12559}
!12558 = !DILocalVariable(name: "PLLI2SInit", arg: 1, scope: !12553, file: !11951, line: 2803, type: !12556)
!12559 = !DILocalVariable(name: "tickstart", scope: !12553, file: !11951, line: 2805, type: !152)
!12560 = !DILocation(line: 0, scope: !12553)
!12561 = !DILocation(line: 2821, column: 3, scope: !12553)
!12562 = !DILocation(line: 2824, column: 15, scope: !12553)
!12563 = !DILocation(line: 2825, column: 3, scope: !12553)
!12564 = !DILocation(line: 2825, column: 9, scope: !12553)
!12565 = !DILocation(line: 2827, column: 9, scope: !12566)
!12566 = distinct !DILexicalBlock(scope: !12567, file: !11951, line: 2827, column: 8)
!12567 = distinct !DILexicalBlock(scope: !12553, file: !11951, line: 2826, column: 3)
!12568 = !DILocation(line: 2827, column: 23, scope: !12566)
!12569 = !DILocation(line: 2827, column: 37, scope: !12566)
!12570 = !DILocation(line: 2827, column: 8, scope: !12567)
!12571 = distinct !{!12571, !12563, !12572}
!12572 = !DILocation(line: 2832, column: 3, scope: !12553)
!12573 = !DILocation(line: 2840, column: 3, scope: !12553)
!12574 = !DILocation(line: 2866, column: 3, scope: !12553)
!12575 = !DILocation(line: 2869, column: 15, scope: !12553)
!12576 = !DILocation(line: 2870, column: 3, scope: !12553)
!12577 = !DILocation(line: 2870, column: 9, scope: !12553)
!12578 = !DILocation(line: 2870, column: 48, scope: !12553)
!12579 = !DILocation(line: 2872, column: 9, scope: !12580)
!12580 = distinct !DILexicalBlock(scope: !12581, file: !11951, line: 2872, column: 8)
!12581 = distinct !DILexicalBlock(scope: !12553, file: !11951, line: 2871, column: 3)
!12582 = !DILocation(line: 2872, column: 23, scope: !12580)
!12583 = !DILocation(line: 2872, column: 37, scope: !12580)
!12584 = !DILocation(line: 2872, column: 8, scope: !12581)
!12585 = distinct !{!12585, !12576, !12586}
!12586 = !DILocation(line: 2877, column: 3, scope: !12553)
!12587 = !DILocation(line: 2880, column: 1, scope: !12553)
!12588 = distinct !DISubprogram(name: "HAL_RCCEx_DisablePLLI2S", scope: !11951, file: !11951, line: 2886, type: !12589, scopeLine: 2887, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !12591)
!12589 = !DISubroutineType(types: !12590)
!12590 = !{!11954}
!12591 = !{!12592}
!12592 = !DILocalVariable(name: "tickstart", scope: !12588, file: !11951, line: 2888, type: !152)
!12593 = !DILocation(line: 2891, column: 3, scope: !12588)
!12594 = !DILocation(line: 2894, column: 15, scope: !12588)
!12595 = !DILocation(line: 0, scope: !12588)
!12596 = !DILocation(line: 2895, column: 3, scope: !12588)
!12597 = !DILocation(line: 2895, column: 9, scope: !12588)
!12598 = !DILocation(line: 2895, column: 45, scope: !12588)
!12599 = !DILocation(line: 2897, column: 9, scope: !12600)
!12600 = distinct !DILexicalBlock(scope: !12601, file: !11951, line: 2897, column: 8)
!12601 = distinct !DILexicalBlock(scope: !12588, file: !11951, line: 2896, column: 3)
!12602 = !DILocation(line: 2897, column: 23, scope: !12600)
!12603 = !DILocation(line: 2897, column: 36, scope: !12600)
!12604 = !DILocation(line: 2897, column: 8, scope: !12601)
!12605 = distinct !{!12605, !12596, !12606}
!12606 = !DILocation(line: 2902, column: 3, scope: !12588)
!12607 = !DILocation(line: 2905, column: 1, scope: !12588)
!12608 = distinct !DISubprogram(name: "HAL_RCCEx_EnablePLLSAI", scope: !11951, file: !11951, line: 2916, type: !12609, scopeLine: 2917, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !12612)
!12609 = !DISubroutineType(types: !12610)
!12610 = !{!11954, !12611}
!12611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11971, size: 32)
!12612 = !{!12613, !12614}
!12613 = !DILocalVariable(name: "PLLSAIInit", arg: 1, scope: !12608, file: !11951, line: 2916, type: !12611)
!12614 = !DILocalVariable(name: "tickstart", scope: !12608, file: !11951, line: 2918, type: !152)
!12615 = !DILocation(line: 0, scope: !12608)
!12616 = !DILocation(line: 2934, column: 3, scope: !12608)
!12617 = !DILocation(line: 2937, column: 15, scope: !12608)
!12618 = !DILocation(line: 2938, column: 3, scope: !12608)
!12619 = !DILocation(line: 2938, column: 9, scope: !12608)
!12620 = !DILocation(line: 2940, column: 9, scope: !12621)
!12621 = distinct !DILexicalBlock(scope: !12622, file: !11951, line: 2940, column: 8)
!12622 = distinct !DILexicalBlock(scope: !12608, file: !11951, line: 2939, column: 3)
!12623 = !DILocation(line: 2940, column: 23, scope: !12621)
!12624 = !DILocation(line: 2940, column: 37, scope: !12621)
!12625 = !DILocation(line: 2940, column: 8, scope: !12622)
!12626 = distinct !{!12626, !12618, !12627}
!12627 = !DILocation(line: 2945, column: 3, scope: !12608)
!12628 = !DILocation(line: 2953, column: 3, scope: !12608)
!12629 = !DILocation(line: 2970, column: 3, scope: !12608)
!12630 = !DILocation(line: 2973, column: 15, scope: !12608)
!12631 = !DILocation(line: 2974, column: 3, scope: !12608)
!12632 = !DILocation(line: 2974, column: 9, scope: !12608)
!12633 = !DILocation(line: 2974, column: 37, scope: !12608)
!12634 = !DILocation(line: 2976, column: 9, scope: !12635)
!12635 = distinct !DILexicalBlock(scope: !12636, file: !11951, line: 2976, column: 8)
!12636 = distinct !DILexicalBlock(scope: !12608, file: !11951, line: 2975, column: 3)
!12637 = !DILocation(line: 2976, column: 23, scope: !12635)
!12638 = !DILocation(line: 2976, column: 37, scope: !12635)
!12639 = !DILocation(line: 2976, column: 8, scope: !12636)
!12640 = distinct !{!12640, !12631, !12641}
!12641 = !DILocation(line: 2981, column: 3, scope: !12608)
!12642 = !DILocation(line: 2984, column: 1, scope: !12608)
!12643 = distinct !DISubprogram(name: "HAL_RCCEx_DisablePLLSAI", scope: !11951, file: !11951, line: 2990, type: !12589, scopeLine: 2991, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !12644)
!12644 = !{!12645}
!12645 = !DILocalVariable(name: "tickstart", scope: !12643, file: !11951, line: 2992, type: !152)
!12646 = !DILocation(line: 2995, column: 3, scope: !12643)
!12647 = !DILocation(line: 2998, column: 15, scope: !12643)
!12648 = !DILocation(line: 0, scope: !12643)
!12649 = !DILocation(line: 2999, column: 3, scope: !12643)
!12650 = !DILocation(line: 2999, column: 9, scope: !12643)
!12651 = !DILocation(line: 3001, column: 9, scope: !12652)
!12652 = distinct !DILexicalBlock(scope: !12653, file: !11951, line: 3001, column: 8)
!12653 = distinct !DILexicalBlock(scope: !12643, file: !11951, line: 3000, column: 3)
!12654 = !DILocation(line: 3001, column: 23, scope: !12652)
!12655 = !DILocation(line: 3001, column: 36, scope: !12652)
!12656 = !DILocation(line: 3001, column: 8, scope: !12653)
!12657 = distinct !{!12657, !12649, !12658}
!12658 = !DILocation(line: 3006, column: 3, scope: !12643)
!12659 = !DILocation(line: 3009, column: 1, scope: !12643)
!12660 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !11951, file: !11951, line: 3051, type: !6408, scopeLine: 3052, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !12661)
!12661 = !{!12662, !12663, !12664, !12665, !12666}
!12662 = !DILocalVariable(name: "pllm", scope: !12660, file: !11951, line: 3053, type: !152)
!12663 = !DILocalVariable(name: "pllvco", scope: !12660, file: !11951, line: 3054, type: !152)
!12664 = !DILocalVariable(name: "pllp", scope: !12660, file: !11951, line: 3055, type: !152)
!12665 = !DILocalVariable(name: "pllr", scope: !12660, file: !11951, line: 3056, type: !152)
!12666 = !DILocalVariable(name: "sysclockfreq", scope: !12660, file: !11951, line: 3057, type: !152)
!12667 = !DILocation(line: 0, scope: !12660)
!12668 = !DILocation(line: 3060, column: 16, scope: !12660)
!12669 = !DILocation(line: 3060, column: 3, scope: !12660)
!12670 = !DILocation(line: 3076, column: 19, scope: !12671)
!12671 = distinct !DILexicalBlock(scope: !12672, file: !11951, line: 3073, column: 5)
!12672 = distinct !DILexicalBlock(scope: !12660, file: !11951, line: 3061, column: 3)
!12673 = !DILocation(line: 3076, column: 27, scope: !12671)
!12674 = !DILocation(line: 3077, column: 10, scope: !12675)
!12675 = distinct !DILexicalBlock(scope: !12671, file: !11951, line: 3077, column: 10)
!12676 = !DILocation(line: 0, scope: !12675)
!12677 = !DILocation(line: 3087, column: 23, scope: !12671)
!12678 = !DILocation(line: 3087, column: 82, scope: !12671)
!12679 = !DILocation(line: 3089, column: 28, scope: !12671)
!12680 = !DILocation(line: 3090, column: 7, scope: !12671)
!12681 = !DILocation(line: 3096, column: 19, scope: !12682)
!12682 = distinct !DILexicalBlock(scope: !12672, file: !11951, line: 3093, column: 5)
!12683 = !DILocation(line: 3096, column: 27, scope: !12682)
!12684 = !DILocation(line: 3097, column: 10, scope: !12685)
!12685 = distinct !DILexicalBlock(scope: !12682, file: !11951, line: 3097, column: 10)
!12686 = !DILocation(line: 0, scope: !12685)
!12687 = !DILocation(line: 3107, column: 21, scope: !12682)
!12688 = !DILocation(line: 3107, column: 49, scope: !12682)
!12689 = !DILocation(line: 3109, column: 28, scope: !12682)
!12690 = !DILocation(line: 3110, column: 7, scope: !12682)
!12691 = !DILocation(line: 0, scope: !12672)
!12692 = !DILocation(line: 3118, column: 3, scope: !12660)
!12693 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !11951, file: !11951, line: 3143, type: !12589, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !12694)
!12694 = !{!12695}
!12695 = !DILocalVariable(name: "tickstart", scope: !12693, file: !11951, line: 3145, type: !152)
!12696 = !DILocation(line: 3148, column: 15, scope: !12693)
!12697 = !DILocation(line: 0, scope: !12693)
!12698 = !DILocation(line: 3151, column: 3, scope: !12693)
!12699 = !DILocation(line: 3154, column: 3, scope: !12693)
!12700 = !DILocation(line: 3154, column: 10, scope: !12693)
!12701 = !DILocation(line: 3154, column: 43, scope: !12693)
!12702 = !DILocation(line: 3156, column: 10, scope: !12703)
!12703 = distinct !DILexicalBlock(scope: !12704, file: !11951, line: 3156, column: 9)
!12704 = distinct !DILexicalBlock(scope: !12693, file: !11951, line: 3155, column: 3)
!12705 = !DILocation(line: 3156, column: 24, scope: !12703)
!12706 = !DILocation(line: 3156, column: 37, scope: !12703)
!12707 = !DILocation(line: 3156, column: 9, scope: !12704)
!12708 = distinct !{!12708, !12699, !12709}
!12709 = !DILocation(line: 3160, column: 3, scope: !12693)
!12710 = !DILocation(line: 3163, column: 3, scope: !12693)
!12711 = !DILocation(line: 3166, column: 15, scope: !12693)
!12712 = !DILocation(line: 3169, column: 3, scope: !12693)
!12713 = !DILocation(line: 3172, column: 3, scope: !12693)
!12714 = !DILocation(line: 3172, column: 10, scope: !12693)
!12715 = !DILocation(line: 3172, column: 44, scope: !12693)
!12716 = !DILocation(line: 3174, column: 24, scope: !12717)
!12717 = distinct !DILexicalBlock(scope: !12718, file: !11951, line: 3174, column: 9)
!12718 = distinct !DILexicalBlock(scope: !12693, file: !11951, line: 3173, column: 3)
!12719 = !DILocation(line: 3174, column: 37, scope: !12717)
!12720 = !DILocation(line: 3174, column: 9, scope: !12718)
!12721 = distinct !{!12721, !12713, !12722}
!12722 = !DILocation(line: 3178, column: 3, scope: !12693)
!12723 = !DILocation(line: 3184, column: 3, scope: !12693)
!12724 = !DILocation(line: 3187, column: 3, scope: !12693)
!12725 = !DILocation(line: 3187, column: 10, scope: !12693)
!12726 = !DILocation(line: 3187, column: 43, scope: !12693)
!12727 = !DILocation(line: 3189, column: 24, scope: !12728)
!12728 = distinct !DILexicalBlock(scope: !12729, file: !11951, line: 3189, column: 9)
!12729 = distinct !DILexicalBlock(scope: !12693, file: !11951, line: 3188, column: 3)
!12730 = !DILocation(line: 3189, column: 37, scope: !12728)
!12731 = !DILocation(line: 3189, column: 9, scope: !12729)
!12732 = distinct !{!12732, !12724, !12733}
!12733 = !DILocation(line: 3193, column: 3, scope: !12693)
!12734 = !DILocation(line: 3199, column: 3, scope: !12693)
!12735 = !DILocation(line: 3202, column: 3, scope: !12693)
!12736 = !DILocation(line: 3202, column: 10, scope: !12693)
!12737 = !DILocation(line: 3202, column: 43, scope: !12693)
!12738 = !DILocation(line: 3204, column: 24, scope: !12739)
!12739 = distinct !DILexicalBlock(scope: !12740, file: !11951, line: 3204, column: 9)
!12740 = distinct !DILexicalBlock(scope: !12693, file: !11951, line: 3203, column: 3)
!12741 = !DILocation(line: 3204, column: 37, scope: !12739)
!12742 = !DILocation(line: 3204, column: 9, scope: !12740)
!12743 = distinct !{!12743, !12735, !12744}
!12744 = !DILocation(line: 3208, column: 3, scope: !12693)
!12745 = !DILocation(line: 3215, column: 3, scope: !12693)
!12746 = !DILocation(line: 3218, column: 3, scope: !12693)
!12747 = !DILocation(line: 3218, column: 10, scope: !12693)
!12748 = !DILocation(line: 3218, column: 46, scope: !12693)
!12749 = !DILocation(line: 3220, column: 24, scope: !12750)
!12750 = distinct !DILexicalBlock(scope: !12751, file: !11951, line: 3220, column: 9)
!12751 = distinct !DILexicalBlock(scope: !12693, file: !11951, line: 3219, column: 3)
!12752 = !DILocation(line: 3220, column: 37, scope: !12750)
!12753 = !DILocation(line: 3220, column: 9, scope: !12751)
!12754 = distinct !{!12754, !12746, !12755}
!12755 = !DILocation(line: 3224, column: 3, scope: !12693)
!12756 = !DILocation(line: 3232, column: 3, scope: !12693)
!12757 = !DILocation(line: 3235, column: 3, scope: !12693)
!12758 = !DILocation(line: 3235, column: 10, scope: !12693)
!12759 = !DILocation(line: 3235, column: 46, scope: !12693)
!12760 = !DILocation(line: 3237, column: 10, scope: !12761)
!12761 = distinct !DILexicalBlock(scope: !12762, file: !11951, line: 3237, column: 9)
!12762 = distinct !DILexicalBlock(scope: !12693, file: !11951, line: 3236, column: 3)
!12763 = !DILocation(line: 3237, column: 24, scope: !12761)
!12764 = !DILocation(line: 3237, column: 37, scope: !12761)
!12765 = !DILocation(line: 3237, column: 9, scope: !12762)
!12766 = distinct !{!12766, !12757, !12767}
!12767 = !DILocation(line: 3241, column: 3, scope: !12693)
!12768 = !DILocation(line: 3247, column: 16, scope: !12693)
!12769 = !DILocation(line: 3257, column: 19, scope: !12693)
!12770 = !DILocation(line: 3270, column: 19, scope: !12693)
!12771 = !DILocation(line: 3274, column: 3, scope: !12693)
!12772 = !DILocation(line: 3277, column: 3, scope: !12693)
!12773 = !DILocation(line: 3281, column: 3, scope: !12693)
!12774 = !DILocation(line: 3285, column: 3, scope: !12693)
!12775 = !DILocation(line: 3288, column: 3, scope: !12693)
!12776 = !DILocation(line: 3292, column: 3, scope: !12693)
!12777 = !DILocation(line: 3296, column: 3, scope: !12693)
!12778 = !DILocation(line: 3299, column: 3, scope: !12693)
!12779 = !DILocation(line: 3302, column: 19, scope: !12693)
!12780 = !DILocation(line: 3305, column: 19, scope: !12781)
!12781 = distinct !DILexicalBlock(scope: !12693, file: !11951, line: 3305, column: 6)
!12782 = !DILocation(line: 3305, column: 6, scope: !12781)
!12783 = !DILocation(line: 3305, column: 31, scope: !12781)
!12784 = !DILocation(line: 0, scope: !12781)
!12785 = !DILocation(line: 3313, column: 1, scope: !12693)
!12786 = !DISubprogram(name: "HAL_InitTick", scope: !12326, file: !12326, line: 223, type: !12787, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2236)
!12787 = !DISubroutineType(types: !12788)
!12788 = !{!11954, !152}
!12789 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !11951, file: !11951, line: 3333, type: !12790, scopeLine: 3334, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !12814)
!12790 = !DISubroutineType(types: !12791)
!12791 = !{!11954, !12792}
!12792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12793, size: 32)
!12793 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !12794, line: 70, baseType: !12795)
!12794 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12795 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12794, line: 49, size: 416, elements: !12796)
!12796 = !{!12797, !12798, !12799, !12800, !12801, !12802, !12803}
!12797 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !12795, file: !12794, line: 51, baseType: !152, size: 32)
!12798 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !12795, file: !12794, line: 54, baseType: !152, size: 32, offset: 32)
!12799 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !12795, file: !12794, line: 57, baseType: !152, size: 32, offset: 64)
!12800 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !12795, file: !12794, line: 60, baseType: !152, size: 32, offset: 96)
!12801 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !12795, file: !12794, line: 63, baseType: !152, size: 32, offset: 128)
!12802 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !12795, file: !12794, line: 66, baseType: !152, size: 32, offset: 160)
!12803 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !12795, file: !12794, line: 69, baseType: !12804, size: 224, offset: 192)
!12804 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !11957, line: 73, baseType: !12805)
!12805 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11957, line: 45, size: 224, elements: !12806)
!12806 = !{!12807, !12808, !12809, !12810, !12811, !12812, !12813}
!12807 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !12805, file: !11957, line: 47, baseType: !152, size: 32)
!12808 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !12805, file: !11957, line: 50, baseType: !152, size: 32, offset: 32)
!12809 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !12805, file: !11957, line: 53, baseType: !152, size: 32, offset: 64)
!12810 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !12805, file: !11957, line: 56, baseType: !152, size: 32, offset: 96)
!12811 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !12805, file: !11957, line: 60, baseType: !152, size: 32, offset: 128)
!12812 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !12805, file: !11957, line: 63, baseType: !152, size: 32, offset: 160)
!12813 = !DIDerivedType(tag: DW_TAG_member, name: "PLLR", scope: !12805, file: !11957, line: 68, baseType: !152, size: 32, offset: 192)
!12814 = !{!12815, !12816, !12817, !12818, !12822}
!12815 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !12789, file: !11951, line: 3333, type: !12792)
!12816 = !DILocalVariable(name: "tickstart", scope: !12789, file: !11951, line: 3335, type: !152)
!12817 = !DILocalVariable(name: "pll_config", scope: !12789, file: !11951, line: 3335, type: !152)
!12818 = !DILocalVariable(name: "pwrclkchanged", scope: !12819, file: !11951, line: 3517, type: !12821)
!12819 = distinct !DILexicalBlock(scope: !12820, file: !11951, line: 3516, column: 3)
!12820 = distinct !DILexicalBlock(scope: !12789, file: !11951, line: 3515, column: 6)
!12821 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !975, line: 188, baseType: !2988)
!12822 = !DILocalVariable(name: "tmpreg", scope: !12823, file: !11951, line: 3526, type: !227)
!12823 = distinct !DILexicalBlock(scope: !12824, file: !11951, line: 3526, column: 7)
!12824 = distinct !DILexicalBlock(scope: !12825, file: !11951, line: 3525, column: 5)
!12825 = distinct !DILexicalBlock(scope: !12819, file: !11951, line: 3524, column: 8)
!12826 = !DILocation(line: 0, scope: !12789)
!12827 = !DILocation(line: 3338, column: 24, scope: !12828)
!12828 = distinct !DILexicalBlock(scope: !12789, file: !11951, line: 3338, column: 6)
!12829 = !DILocation(line: 3338, column: 6, scope: !12789)
!12830 = !DILocation(line: 3346, column: 27, scope: !12831)
!12831 = distinct !DILexicalBlock(scope: !12789, file: !11951, line: 3346, column: 6)
!12832 = !DILocation(line: 3346, column: 43, scope: !12831)
!12833 = !DILocation(line: 3346, column: 69, scope: !12831)
!12834 = !DILocation(line: 3346, column: 6, scope: !12789)
!12835 = !DILocation(line: 3352, column: 9, scope: !12836)
!12836 = distinct !DILexicalBlock(scope: !12837, file: !11951, line: 3352, column: 8)
!12837 = distinct !DILexicalBlock(scope: !12831, file: !11951, line: 3347, column: 3)
!12838 = !DILocation(line: 3352, column: 39, scope: !12836)
!12839 = !DILocation(line: 3352, column: 128, scope: !12836)
!12840 = !DILocation(line: 3353, column: 9, scope: !12836)
!12841 = !DILocation(line: 3353, column: 39, scope: !12836)
!12842 = !DILocation(line: 3353, column: 60, scope: !12836)
!12843 = !DILocation(line: 3353, column: 70, scope: !12836)
!12844 = !DILocation(line: 3353, column: 78, scope: !12836)
!12845 = !DILocation(line: 3353, column: 100, scope: !12836)
!12846 = !DILocation(line: 3353, column: 128, scope: !12836)
!12847 = !DILocation(line: 3354, column: 9, scope: !12836)
!12848 = !DILocation(line: 3354, column: 39, scope: !12836)
!12849 = !DILocation(line: 3354, column: 61, scope: !12836)
!12850 = !DILocation(line: 3354, column: 71, scope: !12836)
!12851 = !DILocation(line: 3354, column: 79, scope: !12836)
!12852 = !DILocation(line: 3354, column: 101, scope: !12836)
!12853 = !DILocation(line: 3352, column: 8, scope: !12837)
!12854 = !DILocation(line: 3360, column: 11, scope: !12855)
!12855 = distinct !DILexicalBlock(scope: !12856, file: !11951, line: 3360, column: 10)
!12856 = distinct !DILexicalBlock(scope: !12836, file: !11951, line: 3359, column: 5)
!12857 = !DILocation(line: 3360, column: 57, scope: !12855)
!12858 = !DILocation(line: 3360, column: 80, scope: !12855)
!12859 = !DILocation(line: 3360, column: 89, scope: !12855)
!12860 = !DILocation(line: 3360, column: 10, scope: !12856)
!12861 = !DILocation(line: 3368, column: 7, scope: !12862)
!12862 = distinct !DILexicalBlock(scope: !12863, file: !11951, line: 3368, column: 7)
!12863 = distinct !DILexicalBlock(scope: !12864, file: !11951, line: 3368, column: 7)
!12864 = distinct !DILexicalBlock(scope: !12836, file: !11951, line: 3366, column: 5)
!12865 = !DILocation(line: 3368, column: 7, scope: !12863)
!12866 = !DILocation(line: 3368, column: 7, scope: !12867)
!12867 = distinct !DILexicalBlock(scope: !12862, file: !11951, line: 3368, column: 7)
!12868 = !DILocation(line: 3368, column: 7, scope: !12869)
!12869 = distinct !DILexicalBlock(scope: !12870, file: !11951, line: 3368, column: 7)
!12870 = distinct !DILexicalBlock(scope: !12862, file: !11951, line: 3368, column: 7)
!12871 = !DILocation(line: 3368, column: 7, scope: !12872)
!12872 = distinct !DILexicalBlock(scope: !12870, file: !11951, line: 3368, column: 7)
!12873 = !DILocation(line: 0, scope: !12862)
!12874 = !DILocation(line: 3371, column: 30, scope: !12875)
!12875 = distinct !DILexicalBlock(scope: !12864, file: !11951, line: 3371, column: 10)
!12876 = !DILocation(line: 3371, column: 40, scope: !12875)
!12877 = !DILocation(line: 0, scope: !12875)
!12878 = !DILocation(line: 3371, column: 10, scope: !12864)
!12879 = !DILocation(line: 3377, column: 15, scope: !12880)
!12880 = distinct !DILexicalBlock(scope: !12875, file: !11951, line: 3372, column: 7)
!12881 = !DILocation(line: 3377, column: 51, scope: !12880)
!12882 = !DILocation(line: 3377, column: 9, scope: !12880)
!12883 = !DILocation(line: 3379, column: 15, scope: !12884)
!12884 = distinct !DILexicalBlock(scope: !12885, file: !11951, line: 3379, column: 14)
!12885 = distinct !DILexicalBlock(scope: !12880, file: !11951, line: 3378, column: 9)
!12886 = !DILocation(line: 3379, column: 29, scope: !12884)
!12887 = !DILocation(line: 3379, column: 43, scope: !12884)
!12888 = !DILocation(line: 3379, column: 14, scope: !12885)
!12889 = distinct !{!12889, !12882, !12890}
!12890 = !DILocation(line: 3383, column: 9, scope: !12880)
!12891 = !DILocation(line: 3391, column: 15, scope: !12892)
!12892 = distinct !DILexicalBlock(scope: !12875, file: !11951, line: 3386, column: 7)
!12893 = !DILocation(line: 3391, column: 9, scope: !12892)
!12894 = !DILocation(line: 3393, column: 15, scope: !12895)
!12895 = distinct !DILexicalBlock(scope: !12896, file: !11951, line: 3393, column: 14)
!12896 = distinct !DILexicalBlock(scope: !12892, file: !11951, line: 3392, column: 9)
!12897 = !DILocation(line: 3393, column: 29, scope: !12895)
!12898 = !DILocation(line: 3393, column: 43, scope: !12895)
!12899 = !DILocation(line: 3393, column: 14, scope: !12896)
!12900 = distinct !{!12900, !12893, !12901}
!12901 = !DILocation(line: 3397, column: 9, scope: !12892)
!12902 = !DILocation(line: 3402, column: 27, scope: !12903)
!12903 = distinct !DILexicalBlock(scope: !12789, file: !11951, line: 3402, column: 6)
!12904 = !DILocation(line: 3402, column: 43, scope: !12903)
!12905 = !DILocation(line: 3402, column: 69, scope: !12903)
!12906 = !DILocation(line: 3402, column: 6, scope: !12789)
!12907 = !DILocation(line: 3410, column: 9, scope: !12908)
!12908 = distinct !DILexicalBlock(scope: !12909, file: !11951, line: 3410, column: 8)
!12909 = distinct !DILexicalBlock(scope: !12903, file: !11951, line: 3403, column: 3)
!12910 = !DILocation(line: 3410, column: 39, scope: !12908)
!12911 = !DILocation(line: 3410, column: 128, scope: !12908)
!12912 = !DILocation(line: 3411, column: 9, scope: !12908)
!12913 = !DILocation(line: 3411, column: 39, scope: !12908)
!12914 = !DILocation(line: 3411, column: 60, scope: !12908)
!12915 = !DILocation(line: 3411, column: 70, scope: !12908)
!12916 = !DILocation(line: 3411, column: 78, scope: !12908)
!12917 = !DILocation(line: 3411, column: 100, scope: !12908)
!12918 = !DILocation(line: 3411, column: 128, scope: !12908)
!12919 = !DILocation(line: 3412, column: 9, scope: !12908)
!12920 = !DILocation(line: 3412, column: 39, scope: !12908)
!12921 = !DILocation(line: 3412, column: 61, scope: !12908)
!12922 = !DILocation(line: 3412, column: 71, scope: !12908)
!12923 = !DILocation(line: 3412, column: 79, scope: !12908)
!12924 = !DILocation(line: 3412, column: 101, scope: !12908)
!12925 = !DILocation(line: 3410, column: 8, scope: !12909)
!12926 = !DILocation(line: 3419, column: 11, scope: !12927)
!12927 = distinct !DILexicalBlock(scope: !12928, file: !11951, line: 3419, column: 10)
!12928 = distinct !DILexicalBlock(scope: !12908, file: !11951, line: 3417, column: 5)
!12929 = !DILocation(line: 3419, column: 57, scope: !12927)
!12930 = !DILocation(line: 3419, column: 80, scope: !12927)
!12931 = !DILocation(line: 3419, column: 89, scope: !12927)
!12932 = !DILocation(line: 3419, column: 10, scope: !12928)
!12933 = !DILocation(line: 3433, column: 30, scope: !12934)
!12934 = distinct !DILexicalBlock(scope: !12935, file: !11951, line: 3433, column: 10)
!12935 = distinct !DILexicalBlock(scope: !12908, file: !11951, line: 3431, column: 5)
!12936 = !DILocation(line: 3433, column: 39, scope: !12934)
!12937 = !DILocation(line: 3433, column: 10, scope: !12935)
!12938 = !DILocation(line: 3436, column: 9, scope: !12939)
!12939 = distinct !DILexicalBlock(scope: !12934, file: !11951, line: 3434, column: 7)
!12940 = !DILocation(line: 3439, column: 21, scope: !12939)
!12941 = !DILocation(line: 3442, column: 9, scope: !12939)
!12942 = !DILocation(line: 3442, column: 15, scope: !12939)
!12943 = !DILocation(line: 3442, column: 51, scope: !12939)
!12944 = !DILocation(line: 3444, column: 15, scope: !12945)
!12945 = distinct !DILexicalBlock(scope: !12946, file: !11951, line: 3444, column: 14)
!12946 = distinct !DILexicalBlock(scope: !12939, file: !11951, line: 3443, column: 9)
!12947 = !DILocation(line: 3444, column: 29, scope: !12945)
!12948 = !DILocation(line: 3444, column: 43, scope: !12945)
!12949 = !DILocation(line: 3444, column: 14, scope: !12946)
!12950 = distinct !{!12950, !12941, !12951}
!12951 = !DILocation(line: 3448, column: 9, scope: !12939)
!12952 = !DILocation(line: 3456, column: 9, scope: !12953)
!12953 = distinct !DILexicalBlock(scope: !12934, file: !11951, line: 3454, column: 7)
!12954 = !DILocation(line: 3459, column: 21, scope: !12953)
!12955 = !DILocation(line: 3462, column: 9, scope: !12953)
!12956 = !DILocation(line: 3462, column: 15, scope: !12953)
!12957 = !DILocation(line: 3464, column: 15, scope: !12958)
!12958 = distinct !DILexicalBlock(scope: !12959, file: !11951, line: 3464, column: 14)
!12959 = distinct !DILexicalBlock(scope: !12953, file: !11951, line: 3463, column: 9)
!12960 = !DILocation(line: 3464, column: 29, scope: !12958)
!12961 = !DILocation(line: 3464, column: 43, scope: !12958)
!12962 = !DILocation(line: 3464, column: 14, scope: !12959)
!12963 = distinct !{!12963, !12955, !12964}
!12964 = !DILocation(line: 3468, column: 9, scope: !12953)
!12965 = !DILocation(line: 0, scope: !12908)
!12966 = !DILocation(line: 3473, column: 27, scope: !12967)
!12967 = distinct !DILexicalBlock(scope: !12789, file: !11951, line: 3473, column: 6)
!12968 = !DILocation(line: 3473, column: 43, scope: !12967)
!12969 = !DILocation(line: 3473, column: 69, scope: !12967)
!12970 = !DILocation(line: 3473, column: 6, scope: !12789)
!12971 = !DILocation(line: 3479, column: 28, scope: !12972)
!12972 = distinct !DILexicalBlock(scope: !12973, file: !11951, line: 3479, column: 8)
!12973 = distinct !DILexicalBlock(scope: !12967, file: !11951, line: 3474, column: 3)
!12974 = !DILocation(line: 3479, column: 37, scope: !12972)
!12975 = !DILocation(line: 3479, column: 8, scope: !12973)
!12976 = !DILocation(line: 3482, column: 7, scope: !12977)
!12977 = distinct !DILexicalBlock(scope: !12972, file: !11951, line: 3480, column: 5)
!12978 = !DILocation(line: 3485, column: 19, scope: !12977)
!12979 = !DILocation(line: 3488, column: 7, scope: !12977)
!12980 = !DILocation(line: 3488, column: 13, scope: !12977)
!12981 = !DILocation(line: 3488, column: 49, scope: !12977)
!12982 = !DILocation(line: 3490, column: 13, scope: !12983)
!12983 = distinct !DILexicalBlock(scope: !12984, file: !11951, line: 3490, column: 12)
!12984 = distinct !DILexicalBlock(scope: !12977, file: !11951, line: 3489, column: 7)
!12985 = !DILocation(line: 3490, column: 27, scope: !12983)
!12986 = !DILocation(line: 3490, column: 41, scope: !12983)
!12987 = !DILocation(line: 3490, column: 12, scope: !12984)
!12988 = distinct !{!12988, !12979, !12989}
!12989 = !DILocation(line: 3494, column: 7, scope: !12977)
!12990 = !DILocation(line: 3499, column: 7, scope: !12991)
!12991 = distinct !DILexicalBlock(scope: !12972, file: !11951, line: 3497, column: 5)
!12992 = !DILocation(line: 3502, column: 19, scope: !12991)
!12993 = !DILocation(line: 3505, column: 7, scope: !12991)
!12994 = !DILocation(line: 3505, column: 13, scope: !12991)
!12995 = !DILocation(line: 3507, column: 13, scope: !12996)
!12996 = distinct !DILexicalBlock(scope: !12997, file: !11951, line: 3507, column: 12)
!12997 = distinct !DILexicalBlock(scope: !12991, file: !11951, line: 3506, column: 7)
!12998 = !DILocation(line: 3507, column: 27, scope: !12996)
!12999 = !DILocation(line: 3507, column: 41, scope: !12996)
!13000 = !DILocation(line: 3507, column: 12, scope: !12997)
!13001 = distinct !{!13001, !12993, !13002}
!13002 = !DILocation(line: 3511, column: 7, scope: !12991)
!13003 = !DILocation(line: 3515, column: 27, scope: !12820)
!13004 = !DILocation(line: 3515, column: 43, scope: !12820)
!13005 = !DILocation(line: 3515, column: 69, scope: !12820)
!13006 = !DILocation(line: 3515, column: 6, scope: !12789)
!13007 = !DILocation(line: 0, scope: !12819)
!13008 = !DILocation(line: 3524, column: 8, scope: !12825)
!13009 = !DILocation(line: 3524, column: 8, scope: !12819)
!13010 = !DILocation(line: 3526, column: 7, scope: !12823)
!13011 = !DILocation(line: 3526, column: 7, scope: !12824)
!13012 = !DILocation(line: 3528, column: 5, scope: !12824)
!13013 = !DILocation(line: 3530, column: 8, scope: !13014)
!13014 = distinct !DILexicalBlock(scope: !12819, file: !11951, line: 3530, column: 8)
!13015 = !DILocation(line: 3530, column: 8, scope: !12819)
!13016 = !DILocation(line: 3533, column: 7, scope: !13017)
!13017 = distinct !DILexicalBlock(scope: !13014, file: !11951, line: 3531, column: 5)
!13018 = !DILocation(line: 3536, column: 19, scope: !13017)
!13019 = !DILocation(line: 3538, column: 7, scope: !13017)
!13020 = !DILocation(line: 3538, column: 13, scope: !13017)
!13021 = !DILocation(line: 3540, column: 13, scope: !13022)
!13022 = distinct !DILexicalBlock(scope: !13023, file: !11951, line: 3540, column: 12)
!13023 = distinct !DILexicalBlock(scope: !13017, file: !11951, line: 3539, column: 7)
!13024 = !DILocation(line: 3540, column: 27, scope: !13022)
!13025 = !DILocation(line: 3540, column: 40, scope: !13022)
!13026 = !DILocation(line: 3540, column: 12, scope: !13023)
!13027 = distinct !{!13027, !13019, !13028}
!13028 = !DILocation(line: 3544, column: 7, scope: !13017)
!13029 = !DILocation(line: 3548, column: 5, scope: !13030)
!13030 = distinct !DILexicalBlock(scope: !13031, file: !11951, line: 3548, column: 5)
!13031 = distinct !DILexicalBlock(scope: !12819, file: !11951, line: 3548, column: 5)
!13032 = !DILocation(line: 3548, column: 5, scope: !13031)
!13033 = !DILocation(line: 3548, column: 5, scope: !13034)
!13034 = distinct !DILexicalBlock(scope: !13030, file: !11951, line: 3548, column: 5)
!13035 = !DILocation(line: 3548, column: 5, scope: !13036)
!13036 = distinct !DILexicalBlock(scope: !13037, file: !11951, line: 3548, column: 5)
!13037 = distinct !DILexicalBlock(scope: !13030, file: !11951, line: 3548, column: 5)
!13038 = !DILocation(line: 3548, column: 5, scope: !13039)
!13039 = distinct !DILexicalBlock(scope: !13037, file: !11951, line: 3548, column: 5)
!13040 = !DILocation(line: 0, scope: !13030)
!13041 = !DILocation(line: 3550, column: 28, scope: !13042)
!13042 = distinct !DILexicalBlock(scope: !12819, file: !11951, line: 3550, column: 8)
!13043 = !DILocation(line: 3550, column: 38, scope: !13042)
!13044 = !DILocation(line: 0, scope: !13042)
!13045 = !DILocation(line: 3550, column: 8, scope: !12819)
!13046 = !DILocation(line: 3556, column: 13, scope: !13047)
!13047 = distinct !DILexicalBlock(scope: !13042, file: !11951, line: 3551, column: 5)
!13048 = !DILocation(line: 3556, column: 49, scope: !13047)
!13049 = !DILocation(line: 3556, column: 7, scope: !13047)
!13050 = !DILocation(line: 3558, column: 13, scope: !13051)
!13051 = distinct !DILexicalBlock(scope: !13052, file: !11951, line: 3558, column: 12)
!13052 = distinct !DILexicalBlock(scope: !13047, file: !11951, line: 3557, column: 7)
!13053 = !DILocation(line: 3558, column: 27, scope: !13051)
!13054 = !DILocation(line: 3558, column: 41, scope: !13051)
!13055 = !DILocation(line: 3558, column: 12, scope: !13052)
!13056 = distinct !{!13056, !13049, !13057}
!13057 = !DILocation(line: 3562, column: 7, scope: !13047)
!13058 = !DILocation(line: 3570, column: 13, scope: !13059)
!13059 = distinct !DILexicalBlock(scope: !13042, file: !11951, line: 3565, column: 5)
!13060 = !DILocation(line: 3570, column: 7, scope: !13059)
!13061 = !DILocation(line: 3572, column: 13, scope: !13062)
!13062 = distinct !DILexicalBlock(scope: !13063, file: !11951, line: 3572, column: 12)
!13063 = distinct !DILexicalBlock(scope: !13059, file: !11951, line: 3571, column: 7)
!13064 = !DILocation(line: 3572, column: 27, scope: !13062)
!13065 = !DILocation(line: 3572, column: 41, scope: !13062)
!13066 = !DILocation(line: 3572, column: 12, scope: !13063)
!13067 = distinct !{!13067, !13060, !13068}
!13068 = !DILocation(line: 3576, column: 7, scope: !13059)
!13069 = !DILocation(line: 3580, column: 8, scope: !12819)
!13070 = !DILocation(line: 3582, column: 7, scope: !13071)
!13071 = distinct !DILexicalBlock(scope: !13072, file: !11951, line: 3581, column: 5)
!13072 = distinct !DILexicalBlock(scope: !12819, file: !11951, line: 3580, column: 8)
!13073 = !DILocation(line: 3583, column: 5, scope: !13071)
!13074 = !DILocation(line: 3588, column: 31, scope: !13075)
!13075 = distinct !DILexicalBlock(scope: !12789, file: !11951, line: 3588, column: 7)
!13076 = !DILocation(line: 3588, column: 41, scope: !13075)
!13077 = !DILocation(line: 3588, column: 7, scope: !12789)
!13078 = !DILocation(line: 3591, column: 8, scope: !13079)
!13079 = distinct !DILexicalBlock(scope: !13080, file: !11951, line: 3591, column: 8)
!13080 = distinct !DILexicalBlock(scope: !13075, file: !11951, line: 3589, column: 3)
!13081 = !DILocation(line: 3591, column: 38, scope: !13079)
!13082 = !DILocation(line: 3591, column: 8, scope: !13080)
!13083 = !DILocation(line: 3593, column: 44, scope: !13084)
!13084 = distinct !DILexicalBlock(scope: !13085, file: !11951, line: 3593, column: 10)
!13085 = distinct !DILexicalBlock(scope: !13079, file: !11951, line: 3592, column: 5)
!13086 = !DILocation(line: 0, scope: !13084)
!13087 = !DILocation(line: 3593, column: 10, scope: !13085)
!13088 = !DILocation(line: 3610, column: 15, scope: !13089)
!13089 = distinct !DILexicalBlock(scope: !13084, file: !11951, line: 3594, column: 7)
!13090 = !DILocation(line: 3610, column: 9, scope: !13089)
!13091 = !DILocation(line: 3612, column: 15, scope: !13092)
!13092 = distinct !DILexicalBlock(scope: !13093, file: !11951, line: 3612, column: 14)
!13093 = distinct !DILexicalBlock(scope: !13089, file: !11951, line: 3611, column: 9)
!13094 = !DILocation(line: 3612, column: 29, scope: !13092)
!13095 = !DILocation(line: 3612, column: 43, scope: !13092)
!13096 = !DILocation(line: 3612, column: 14, scope: !13093)
!13097 = distinct !{!13097, !13090, !13098}
!13098 = !DILocation(line: 3616, column: 9, scope: !13089)
!13099 = !DILocation(line: 3619, column: 9, scope: !13089)
!13100 = !DILocation(line: 3626, column: 9, scope: !13089)
!13101 = !DILocation(line: 3629, column: 21, scope: !13089)
!13102 = !DILocation(line: 3632, column: 9, scope: !13089)
!13103 = !DILocation(line: 3632, column: 15, scope: !13089)
!13104 = !DILocation(line: 3632, column: 51, scope: !13089)
!13105 = !DILocation(line: 3634, column: 15, scope: !13106)
!13106 = distinct !DILexicalBlock(scope: !13107, file: !11951, line: 3634, column: 14)
!13107 = distinct !DILexicalBlock(scope: !13089, file: !11951, line: 3633, column: 9)
!13108 = !DILocation(line: 3634, column: 29, scope: !13106)
!13109 = !DILocation(line: 3634, column: 43, scope: !13106)
!13110 = !DILocation(line: 3634, column: 14, scope: !13107)
!13111 = distinct !{!13111, !13102, !13112}
!13112 = !DILocation(line: 3638, column: 9, scope: !13089)
!13113 = !DILocation(line: 3649, column: 15, scope: !13114)
!13114 = distinct !DILexicalBlock(scope: !13084, file: !11951, line: 3641, column: 7)
!13115 = !DILocation(line: 3649, column: 9, scope: !13114)
!13116 = !DILocation(line: 3651, column: 15, scope: !13117)
!13117 = distinct !DILexicalBlock(scope: !13118, file: !11951, line: 3651, column: 14)
!13118 = distinct !DILexicalBlock(scope: !13114, file: !11951, line: 3650, column: 9)
!13119 = !DILocation(line: 3651, column: 29, scope: !13117)
!13120 = !DILocation(line: 3651, column: 43, scope: !13117)
!13121 = !DILocation(line: 3651, column: 14, scope: !13118)
!13122 = distinct !{!13122, !13115, !13123}
!13123 = !DILocation(line: 3655, column: 9, scope: !13114)
!13124 = !DILocation(line: 3661, column: 44, scope: !13125)
!13125 = distinct !DILexicalBlock(scope: !13126, file: !11951, line: 3661, column: 10)
!13126 = distinct !DILexicalBlock(scope: !13079, file: !11951, line: 3659, column: 5)
!13127 = !DILocation(line: 3661, column: 10, scope: !13126)
!13128 = !DILocation(line: 3668, column: 27, scope: !13129)
!13129 = distinct !DILexicalBlock(scope: !13125, file: !11951, line: 3666, column: 7)
!13130 = !DILocation(line: 3671, column: 14, scope: !13131)
!13131 = distinct !DILexicalBlock(scope: !13129, file: !11951, line: 3670, column: 13)
!13132 = !DILocation(line: 3671, column: 81, scope: !13131)
!13133 = !DILocation(line: 3671, column: 55, scope: !13131)
!13134 = !DILocation(line: 3671, column: 92, scope: !13131)
!13135 = !DILocation(line: 3672, column: 14, scope: !13131)
!13136 = !DILocation(line: 3672, column: 80, scope: !13131)
!13137 = !DILocation(line: 3672, column: 53, scope: !13131)
!13138 = !DILocation(line: 3672, column: 111, scope: !13131)
!13139 = !DILocation(line: 3673, column: 14, scope: !13131)
!13140 = !DILocation(line: 3673, column: 80, scope: !13131)
!13141 = !DILocation(line: 3673, column: 86, scope: !13131)
!13142 = !DILocation(line: 3673, column: 53, scope: !13131)
!13143 = !DILocation(line: 3673, column: 111, scope: !13131)
!13144 = !DILocation(line: 3674, column: 14, scope: !13131)
!13145 = !DILocation(line: 3674, column: 82, scope: !13131)
!13146 = !DILocation(line: 3674, column: 101, scope: !13131)
!13147 = !DILocation(line: 3674, column: 53, scope: !13131)
!13148 = !DILocation(line: 3674, column: 126, scope: !13131)
!13149 = !DILocation(line: 3675, column: 14, scope: !13131)
!13150 = !DILocation(line: 3675, column: 80, scope: !13131)
!13151 = !DILocation(line: 3675, column: 85, scope: !13131)
!13152 = !DILocation(line: 3675, column: 53, scope: !13131)
!13153 = !DILocation(line: 3675, column: 111, scope: !13131)
!13154 = !DILocation(line: 3676, column: 14, scope: !13131)
!13155 = !DILocation(line: 3676, column: 80, scope: !13131)
!13156 = !DILocation(line: 3676, column: 85, scope: !13131)
!13157 = !DILocation(line: 3676, column: 53, scope: !13131)
!13158 = !DILocation(line: 3670, column: 13, scope: !13129)
!13159 = !DILocation(line: 3691, column: 3, scope: !12789)
!13160 = !DILocation(line: 3692, column: 1, scope: !12789)
!13161 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !11951, file: !11951, line: 3703, type: !13162, scopeLine: 3704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2978, retainedNodes: !13164)
!13162 = !DISubroutineType(types: !13163)
!13163 = !{null, !12792}
!13164 = !{!13165}
!13165 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !13161, file: !11951, line: 3703, type: !12792)
!13166 = !DILocation(line: 0, scope: !13161)
!13167 = !DILocation(line: 3706, column: 22, scope: !13161)
!13168 = !DILocation(line: 3706, column: 37, scope: !13161)
!13169 = !DILocation(line: 3709, column: 12, scope: !13170)
!13170 = distinct !DILexicalBlock(scope: !13161, file: !11951, line: 3709, column: 6)
!13171 = !DILocation(line: 3709, column: 15, scope: !13170)
!13172 = !DILocation(line: 3709, column: 31, scope: !13170)
!13173 = !DILocation(line: 3709, column: 6, scope: !13161)
!13174 = !DILocation(line: 3711, column: 24, scope: !13175)
!13175 = distinct !DILexicalBlock(scope: !13170, file: !11951, line: 3710, column: 3)
!13176 = !DILocation(line: 3711, column: 33, scope: !13175)
!13177 = !DILocation(line: 3712, column: 3, scope: !13175)
!13178 = !DILocation(line: 3713, column: 17, scope: !13179)
!13179 = distinct !DILexicalBlock(scope: !13170, file: !11951, line: 3713, column: 11)
!13180 = !DILocation(line: 3713, column: 20, scope: !13179)
!13181 = !DILocation(line: 3713, column: 35, scope: !13179)
!13182 = !DILocation(line: 0, scope: !13179)
!13183 = !DILocation(line: 3713, column: 11, scope: !13170)
!13184 = !DILocation(line: 3715, column: 33, scope: !13185)
!13185 = distinct !DILexicalBlock(scope: !13179, file: !11951, line: 3714, column: 3)
!13186 = !DILocation(line: 3716, column: 3, scope: !13185)
!13187 = !DILocation(line: 3719, column: 33, scope: !13188)
!13188 = distinct !DILexicalBlock(scope: !13179, file: !11951, line: 3718, column: 3)
!13189 = !DILocation(line: 3723, column: 12, scope: !13190)
!13190 = distinct !DILexicalBlock(scope: !13161, file: !11951, line: 3723, column: 6)
!13191 = !DILocation(line: 3723, column: 15, scope: !13190)
!13192 = !DILocation(line: 3729, column: 24, scope: !13193)
!13193 = distinct !DILexicalBlock(scope: !13190, file: !11951, line: 3728, column: 3)
!13194 = !DILocation(line: 3729, column: 33, scope: !13193)
!13195 = !DILocation(line: 3732, column: 61, scope: !13161)
!13196 = !DILocation(line: 3732, column: 81, scope: !13161)
!13197 = !DILocation(line: 3732, column: 22, scope: !13161)
!13198 = !DILocation(line: 3732, column: 42, scope: !13161)
!13199 = !DILocation(line: 3735, column: 12, scope: !13200)
!13200 = distinct !DILexicalBlock(scope: !13161, file: !11951, line: 3735, column: 6)
!13201 = !DILocation(line: 3735, column: 17, scope: !13200)
!13202 = !DILocation(line: 3735, column: 35, scope: !13200)
!13203 = !DILocation(line: 3735, column: 6, scope: !13161)
!13204 = !DILocation(line: 3737, column: 24, scope: !13205)
!13205 = distinct !DILexicalBlock(scope: !13200, file: !11951, line: 3736, column: 3)
!13206 = !DILocation(line: 3737, column: 33, scope: !13205)
!13207 = !DILocation(line: 3738, column: 3, scope: !13205)
!13208 = !DILocation(line: 3739, column: 17, scope: !13209)
!13209 = distinct !DILexicalBlock(scope: !13200, file: !11951, line: 3739, column: 11)
!13210 = !DILocation(line: 3739, column: 22, scope: !13209)
!13211 = !DILocation(line: 3739, column: 39, scope: !13209)
!13212 = !DILocation(line: 0, scope: !13209)
!13213 = !DILocation(line: 3739, column: 11, scope: !13200)
!13214 = !DILocation(line: 3741, column: 33, scope: !13215)
!13215 = distinct !DILexicalBlock(scope: !13209, file: !11951, line: 3740, column: 3)
!13216 = !DILocation(line: 3742, column: 3, scope: !13215)
!13217 = !DILocation(line: 3745, column: 33, scope: !13218)
!13218 = distinct !DILexicalBlock(scope: !13209, file: !11951, line: 3744, column: 3)
!13219 = !DILocation(line: 3749, column: 12, scope: !13220)
!13220 = distinct !DILexicalBlock(scope: !13161, file: !11951, line: 3749, column: 6)
!13221 = !DILocation(line: 3749, column: 16, scope: !13220)
!13222 = !DILocation(line: 3755, column: 24, scope: !13223)
!13223 = distinct !DILexicalBlock(scope: !13220, file: !11951, line: 3754, column: 3)
!13224 = !DILocation(line: 3755, column: 33, scope: !13223)
!13225 = !DILocation(line: 3759, column: 12, scope: !13226)
!13226 = distinct !DILexicalBlock(scope: !13161, file: !11951, line: 3759, column: 6)
!13227 = !DILocation(line: 3759, column: 15, scope: !13226)
!13228 = !DILocation(line: 3759, column: 30, scope: !13226)
!13229 = !DILocation(line: 3759, column: 6, scope: !13161)
!13230 = !DILocation(line: 3765, column: 28, scope: !13231)
!13231 = distinct !DILexicalBlock(scope: !13226, file: !11951, line: 3764, column: 3)
!13232 = !DILocation(line: 3765, column: 37, scope: !13231)
!13233 = !DILocation(line: 3767, column: 54, scope: !13161)
!13234 = !DILocation(line: 3767, column: 62, scope: !13161)
!13235 = !DILocation(line: 3767, column: 26, scope: !13161)
!13236 = !DILocation(line: 3767, column: 36, scope: !13161)
!13237 = !DILocation(line: 3768, column: 49, scope: !13161)
!13238 = !DILocation(line: 3768, column: 57, scope: !13161)
!13239 = !DILocation(line: 3768, column: 26, scope: !13161)
!13240 = !DILocation(line: 3768, column: 31, scope: !13161)
!13241 = !DILocation(line: 3769, column: 50, scope: !13161)
!13242 = !DILocation(line: 3769, column: 78, scope: !13161)
!13243 = !DILocation(line: 3769, column: 26, scope: !13161)
!13244 = !DILocation(line: 3769, column: 31, scope: !13161)
!13245 = !DILocation(line: 3770, column: 52, scope: !13161)
!13246 = !DILocation(line: 3770, column: 102, scope: !13161)
!13247 = !DILocation(line: 3770, column: 109, scope: !13161)
!13248 = !DILocation(line: 3770, column: 26, scope: !13161)
!13249 = !DILocation(line: 3770, column: 31, scope: !13161)
!13250 = !DILocation(line: 3771, column: 50, scope: !13161)
!13251 = !DILocation(line: 3771, column: 78, scope: !13161)
!13252 = !DILocation(line: 3771, column: 26, scope: !13161)
!13253 = !DILocation(line: 3771, column: 31, scope: !13161)
!13254 = !DILocation(line: 3772, column: 50, scope: !13161)
!13255 = !DILocation(line: 3772, column: 78, scope: !13161)
!13256 = !DILocation(line: 3772, column: 26, scope: !13161)
!13257 = !DILocation(line: 3772, column: 31, scope: !13161)
!13258 = !DILocation(line: 3773, column: 1, scope: !13161)
!13259 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !13260, file: !13260, line: 257, type: !6418, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !13261)
!13260 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13261 = !{!13262}
!13262 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !13259, file: !13260, line: 257, type: !152)
!13263 = !DILocation(line: 0, scope: !13259)
!13264 = !DILocation(line: 260, column: 3, scope: !13259)
!13265 = !DILocation(line: 261, column: 1, scope: !13259)
!13266 = distinct !DISubprogram(name: "LL_InitTick", scope: !13267, file: !13267, line: 260, type: !10310, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !13268)
!13267 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13268 = !{!13269, !13270}
!13269 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !13266, file: !13267, line: 260, type: !152)
!13270 = !DILocalVariable(name: "Ticks", arg: 2, scope: !13266, file: !13267, line: 260, type: !152)
!13271 = !DILocation(line: 0, scope: !13266)
!13272 = !DILocation(line: 263, column: 46, scope: !13266)
!13273 = !DILocation(line: 263, column: 55, scope: !13266)
!13274 = !DILocation(line: 263, column: 18, scope: !13266)
!13275 = !DILocation(line: 264, column: 18, scope: !13266)
!13276 = !DILocation(line: 265, column: 18, scope: !13266)
!13277 = !DILocation(line: 267, column: 1, scope: !13266)
!13278 = distinct !DISubprogram(name: "LL_mDelay", scope: !13260, file: !13260, line: 273, type: !6418, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !13279)
!13279 = !{!13280, !13281}
!13280 = !DILocalVariable(name: "Delay", arg: 1, scope: !13278, file: !13260, line: 273, type: !152)
!13281 = !DILocalVariable(name: "tmp", scope: !13278, file: !13260, line: 275, type: !227)
!13282 = !DILocation(line: 0, scope: !13278)
!13283 = !DILocation(line: 275, column: 3, scope: !13278)
!13284 = !DILocation(line: 275, column: 18, scope: !13278)
!13285 = !DILocation(line: 275, column: 33, scope: !13278)
!13286 = !DILocation(line: 277, column: 10, scope: !13278)
!13287 = !DILocation(line: 280, column: 12, scope: !13288)
!13288 = distinct !DILexicalBlock(scope: !13278, file: !13260, line: 280, column: 6)
!13289 = !DILocation(line: 285, column: 3, scope: !13278)
!13290 = !DILocation(line: 287, column: 18, scope: !13291)
!13291 = distinct !DILexicalBlock(scope: !13292, file: !13260, line: 287, column: 8)
!13292 = distinct !DILexicalBlock(scope: !13278, file: !13260, line: 286, column: 3)
!13293 = !DILocation(line: 292, column: 1, scope: !13278)
!13294 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !13260, file: !13260, line: 323, type: !6418, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !13295)
!13295 = !{!13296}
!13296 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !13294, file: !13260, line: 323, type: !152)
!13297 = !DILocation(line: 0, scope: !13294)
!13298 = !DILocation(line: 326, column: 19, scope: !13294)
!13299 = !DILocation(line: 327, column: 1, scope: !13294)
!13300 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !13260, file: !13260, line: 338, type: !13301, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !13304)
!13301 = !DISubroutineType(types: !13302)
!13302 = !{!13303, !152}
!13303 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !975, line: 201, baseType: !974)
!13304 = !{!13305, !13306, !13307, !13308, !13309}
!13305 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !13300, file: !13260, line: 338, type: !152)
!13306 = !DILocalVariable(name: "timeout", scope: !13300, file: !13260, line: 340, type: !152)
!13307 = !DILocalVariable(name: "getlatency", scope: !13300, file: !13260, line: 341, type: !152)
!13308 = !DILocalVariable(name: "latency", scope: !13300, file: !13260, line: 342, type: !152)
!13309 = !DILocalVariable(name: "status", scope: !13300, file: !13260, line: 343, type: !13303)
!13310 = !DILocation(line: 0, scope: !13300)
!13311 = !DILocation(line: 347, column: 21, scope: !13312)
!13312 = distinct !DILexicalBlock(scope: !13300, file: !13260, line: 347, column: 6)
!13313 = !DILocation(line: 347, column: 6, scope: !13300)
!13314 = !DILocation(line: 353, column: 8, scope: !13315)
!13315 = distinct !DILexicalBlock(scope: !13316, file: !13260, line: 353, column: 8)
!13316 = distinct !DILexicalBlock(scope: !13312, file: !13260, line: 352, column: 3)
!13317 = !DILocation(line: 353, column: 40, scope: !13315)
!13318 = !DILocation(line: 353, column: 8, scope: !13316)
!13319 = !DILocation(line: 356, column: 26, scope: !13320)
!13320 = distinct !DILexicalBlock(scope: !13321, file: !13260, line: 356, column: 10)
!13321 = distinct !DILexicalBlock(scope: !13315, file: !13260, line: 354, column: 5)
!13322 = !DILocation(line: 356, column: 55, scope: !13320)
!13323 = !DILocation(line: 362, column: 55, scope: !13324)
!13324 = distinct !DILexicalBlock(scope: !13321, file: !13260, line: 362, column: 10)
!13325 = !DILocation(line: 368, column: 55, scope: !13326)
!13326 = distinct !DILexicalBlock(scope: !13321, file: !13260, line: 368, column: 10)
!13327 = !DILocation(line: 374, column: 26, scope: !13328)
!13328 = distinct !DILexicalBlock(scope: !13321, file: !13260, line: 374, column: 10)
!13329 = !DILocation(line: 374, column: 55, scope: !13328)
!13330 = !DILocation(line: 380, column: 28, scope: !13331)
!13331 = distinct !DILexicalBlock(scope: !13332, file: !13260, line: 380, column: 12)
!13332 = distinct !DILexicalBlock(scope: !13328, file: !13260, line: 379, column: 7)
!13333 = !DILocation(line: 380, column: 57, scope: !13331)
!13334 = !DILocation(line: 387, column: 8, scope: !13335)
!13335 = distinct !DILexicalBlock(scope: !13316, file: !13260, line: 387, column: 8)
!13336 = !DILocation(line: 387, column: 40, scope: !13335)
!13337 = !DILocation(line: 387, column: 8, scope: !13316)
!13338 = !DILocation(line: 390, column: 26, scope: !13339)
!13339 = distinct !DILexicalBlock(scope: !13340, file: !13260, line: 390, column: 10)
!13340 = distinct !DILexicalBlock(scope: !13335, file: !13260, line: 388, column: 5)
!13341 = !DILocation(line: 390, column: 55, scope: !13339)
!13342 = !DILocation(line: 396, column: 26, scope: !13343)
!13343 = distinct !DILexicalBlock(scope: !13340, file: !13260, line: 396, column: 10)
!13344 = !DILocation(line: 396, column: 55, scope: !13343)
!13345 = !DILocation(line: 402, column: 26, scope: !13346)
!13346 = distinct !DILexicalBlock(scope: !13340, file: !13260, line: 402, column: 10)
!13347 = !DILocation(line: 402, column: 55, scope: !13346)
!13348 = !DILocation(line: 407, column: 26, scope: !13349)
!13349 = distinct !DILexicalBlock(scope: !13340, file: !13260, line: 407, column: 10)
!13350 = !DILocation(line: 407, column: 55, scope: !13349)
!13351 = !DILocation(line: 413, column: 28, scope: !13352)
!13352 = distinct !DILexicalBlock(scope: !13353, file: !13260, line: 413, column: 12)
!13353 = distinct !DILexicalBlock(scope: !13349, file: !13260, line: 412, column: 7)
!13354 = !DILocation(line: 413, column: 57, scope: !13352)
!13355 = !DILocation(line: 0, scope: !13316)
!13356 = !DILocation(line: 420, column: 8, scope: !13357)
!13357 = distinct !DILexicalBlock(scope: !13316, file: !13260, line: 420, column: 8)
!13358 = !DILocation(line: 420, column: 40, scope: !13357)
!13359 = !DILocation(line: 420, column: 8, scope: !13316)
!13360 = !DILocation(line: 423, column: 26, scope: !13361)
!13361 = distinct !DILexicalBlock(scope: !13362, file: !13260, line: 423, column: 10)
!13362 = distinct !DILexicalBlock(scope: !13357, file: !13260, line: 421, column: 5)
!13363 = !DILocation(line: 423, column: 55, scope: !13361)
!13364 = !DILocation(line: 429, column: 26, scope: !13365)
!13365 = distinct !DILexicalBlock(scope: !13362, file: !13260, line: 429, column: 10)
!13366 = !DILocation(line: 429, column: 55, scope: !13365)
!13367 = !DILocation(line: 435, column: 28, scope: !13368)
!13368 = distinct !DILexicalBlock(scope: !13369, file: !13260, line: 435, column: 12)
!13369 = distinct !DILexicalBlock(scope: !13365, file: !13260, line: 434, column: 7)
!13370 = !DILocation(line: 435, column: 57, scope: !13368)
!13371 = !DILocation(line: 444, column: 5, scope: !13316)
!13372 = !DILocation(line: 448, column: 5, scope: !13316)
!13373 = !DILocation(line: 451, column: 18, scope: !13374)
!13374 = distinct !DILexicalBlock(scope: !13316, file: !13260, line: 449, column: 5)
!13375 = !DILocation(line: 452, column: 12, scope: !13374)
!13376 = !DILocation(line: 453, column: 26, scope: !13316)
!13377 = !DILocation(line: 453, column: 38, scope: !13316)
!13378 = !DILocation(line: 453, column: 5, scope: !13374)
!13379 = distinct !{!13379, !13372, !13380}
!13380 = !DILocation(line: 453, column: 54, scope: !13316)
!13381 = !DILocation(line: 0, scope: !13312)
!13382 = !DILocation(line: 464, column: 3, scope: !13300)
!13383 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !13384, file: !13384, line: 519, type: !6408, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !2236)
!13384 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13385 = !DILocation(line: 521, column: 21, scope: !13383)
!13386 = !DILocation(line: 521, column: 3, scope: !13383)
!13387 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !6023, file: !6023, line: 1543, type: !6418, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !13388)
!13388 = !{!13389}
!13389 = !DILocalVariable(name: "Latency", arg: 1, scope: !13387, file: !6023, line: 1543, type: !152)
!13390 = !DILocation(line: 0, scope: !13387)
!13391 = !DILocation(line: 1545, column: 3, scope: !13387)
!13392 = !DILocation(line: 1546, column: 1, scope: !13387)
!13393 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !6023, file: !6023, line: 1569, type: !6408, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !2236)
!13394 = !DILocation(line: 1571, column: 21, scope: !13393)
!13395 = !DILocation(line: 1571, column: 3, scope: !13393)
!13396 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !13260, file: !13260, line: 483, type: !13397, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !13413)
!13397 = !DISubroutineType(types: !13398)
!13398 = !{!13303, !13399, !13406}
!13399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13400, size: 32)
!13400 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !13267, line: 114, baseType: !13401)
!13401 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13267, line: 94, size: 96, elements: !13402)
!13402 = !{!13403, !13404, !13405}
!13403 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !13401, file: !13267, line: 96, baseType: !152, size: 32)
!13404 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !13401, file: !13267, line: 102, baseType: !152, size: 32, offset: 32)
!13405 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !13401, file: !13267, line: 109, baseType: !152, size: 32, offset: 64)
!13406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13407, size: 32)
!13407 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !13267, line: 139, baseType: !13408)
!13408 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13267, line: 119, size: 96, elements: !13409)
!13409 = !{!13410, !13411, !13412}
!13410 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !13408, file: !13267, line: 121, baseType: !152, size: 32)
!13411 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !13408, file: !13267, line: 127, baseType: !152, size: 32, offset: 32)
!13412 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !13408, file: !13267, line: 133, baseType: !152, size: 32, offset: 64)
!13413 = !{!13414, !13415, !13416, !13417}
!13414 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !13396, file: !13260, line: 483, type: !13399)
!13415 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !13396, file: !13260, line: 484, type: !13406)
!13416 = !DILocalVariable(name: "status", scope: !13396, file: !13260, line: 486, type: !13303)
!13417 = !DILocalVariable(name: "pllfreq", scope: !13396, file: !13260, line: 487, type: !152)
!13418 = !DILocation(line: 0, scope: !13396)
!13419 = !DILocation(line: 490, column: 6, scope: !13420)
!13420 = distinct !DILexicalBlock(scope: !13396, file: !13260, line: 490, column: 6)
!13421 = !DILocation(line: 490, column: 25, scope: !13420)
!13422 = !DILocation(line: 490, column: 6, scope: !13396)
!13423 = !DILocation(line: 493, column: 15, scope: !13424)
!13424 = distinct !DILexicalBlock(scope: !13420, file: !13260, line: 491, column: 3)
!13425 = !DILocation(line: 496, column: 8, scope: !13426)
!13426 = distinct !DILexicalBlock(scope: !13424, file: !13260, line: 496, column: 8)
!13427 = !DILocation(line: 496, column: 29, scope: !13426)
!13428 = !DILocation(line: 496, column: 8, scope: !13424)
!13429 = !DILocation(line: 498, column: 7, scope: !13430)
!13430 = distinct !DILexicalBlock(scope: !13426, file: !13260, line: 497, column: 5)
!13431 = !DILocation(line: 499, column: 7, scope: !13430)
!13432 = !DILocation(line: 499, column: 14, scope: !13430)
!13433 = !DILocation(line: 499, column: 35, scope: !13430)
!13434 = distinct !{!13434, !13431, !13435}
!13435 = !DILocation(line: 502, column: 7, scope: !13430)
!13436 = !DILocation(line: 506, column: 76, scope: !13424)
!13437 = !DILocation(line: 506, column: 103, scope: !13424)
!13438 = !DILocation(line: 507, column: 54, scope: !13424)
!13439 = !DILocation(line: 506, column: 5, scope: !13424)
!13440 = !DILocation(line: 510, column: 14, scope: !13424)
!13441 = !DILocation(line: 511, column: 3, scope: !13424)
!13442 = !DILocation(line: 0, scope: !13420)
!13443 = !DILocation(line: 518, column: 3, scope: !13396)
!13444 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !13260, file: !13260, line: 642, type: !13445, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !13447)
!13445 = !DISubroutineType(types: !13446)
!13446 = !{!13303}
!13447 = !{!13448}
!13448 = !DILocalVariable(name: "status", scope: !13444, file: !13260, line: 644, type: !13303)
!13449 = !DILocation(line: 0, scope: !13444)
!13450 = !DILocation(line: 647, column: 6, scope: !13451)
!13451 = distinct !DILexicalBlock(scope: !13444, file: !13260, line: 647, column: 6)
!13452 = !DILocation(line: 647, column: 27, scope: !13451)
!13453 = !DILocation(line: 655, column: 6, scope: !13454)
!13454 = distinct !DILexicalBlock(scope: !13444, file: !13260, line: 655, column: 6)
!13455 = !DILocation(line: 655, column: 30, scope: !13454)
!13456 = !DILocation(line: 663, column: 6, scope: !13457)
!13457 = distinct !DILexicalBlock(scope: !13444, file: !13260, line: 663, column: 6)
!13458 = !DILocation(line: 663, column: 30, scope: !13457)
!13459 = !DILocation(line: 663, column: 6, scope: !13444)
!13460 = !DILocation(line: 669, column: 3, scope: !13444)
!13461 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !13260, file: !13260, line: 611, type: !13462, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !13464)
!13462 = !DISubroutineType(types: !13463)
!13463 = !{!152, !152, !13399}
!13464 = !{!13465, !13466, !13467}
!13465 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !13461, file: !13260, line: 611, type: !152)
!13466 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !13461, file: !13260, line: 611, type: !13399)
!13467 = !DILocalVariable(name: "pllfreq", scope: !13461, file: !13260, line: 613, type: !152)
!13468 = !DILocation(line: 0, scope: !13461)
!13469 = !DILocation(line: 622, column: 56, scope: !13461)
!13470 = !DILocation(line: 622, column: 61, scope: !13461)
!13471 = !DILocation(line: 622, column: 32, scope: !13461)
!13472 = !DILocation(line: 626, column: 45, scope: !13461)
!13473 = !DILocation(line: 626, column: 50, scope: !13461)
!13474 = !DILocation(line: 626, column: 21, scope: !13461)
!13475 = !DILocation(line: 630, column: 47, scope: !13461)
!13476 = !DILocation(line: 630, column: 82, scope: !13461)
!13477 = !DILocation(line: 630, column: 21, scope: !13461)
!13478 = !DILocation(line: 633, column: 3, scope: !13461)
!13479 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !9635, file: !9635, line: 3007, type: !6408, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !2236)
!13480 = !DILocation(line: 3009, column: 11, scope: !13479)
!13481 = !DILocation(line: 3009, column: 44, scope: !13479)
!13482 = !DILocation(line: 3009, column: 3, scope: !13479)
!13483 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !9635, file: !9635, line: 2987, type: !3148, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !2236)
!13484 = !DILocation(line: 2989, column: 3, scope: !13483)
!13485 = !DILocation(line: 2990, column: 1, scope: !13483)
!13486 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !9635, file: !9635, line: 4304, type: !9769, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !13487)
!13487 = !{!13488, !13489, !13490, !13491}
!13488 = !DILocalVariable(name: "Source", arg: 1, scope: !13486, file: !9635, line: 4304, type: !152)
!13489 = !DILocalVariable(name: "PLLM", arg: 2, scope: !13486, file: !9635, line: 4304, type: !152)
!13490 = !DILocalVariable(name: "PLLN", arg: 3, scope: !13486, file: !9635, line: 4304, type: !152)
!13491 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !13486, file: !9635, line: 4304, type: !152)
!13492 = !DILocation(line: 0, scope: !13486)
!13493 = !DILocation(line: 4306, column: 3, scope: !13486)
!13494 = !DILocation(line: 4308, column: 3, scope: !13486)
!13495 = !DILocation(line: 4310, column: 3, scope: !13486)
!13496 = !DILocation(line: 4312, column: 1, scope: !13486)
!13497 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !13260, file: !13260, line: 681, type: !13498, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !13500)
!13498 = !DISubroutineType(types: !13499)
!13499 = !{!13303, !152, !13406}
!13500 = !{!13501, !13502, !13503, !13504}
!13501 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !13497, file: !13260, line: 681, type: !152)
!13502 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !13497, file: !13260, line: 681, type: !13406)
!13503 = !DILocalVariable(name: "status", scope: !13497, file: !13260, line: 683, type: !13303)
!13504 = !DILocalVariable(name: "hclk_frequency", scope: !13497, file: !13260, line: 684, type: !152)
!13505 = !DILocation(line: 0, scope: !13497)
!13506 = !DILocation(line: 691, column: 20, scope: !13497)
!13507 = !DILocation(line: 694, column: 6, scope: !13508)
!13508 = distinct !DILexicalBlock(scope: !13497, file: !13260, line: 694, column: 6)
!13509 = !DILocation(line: 694, column: 22, scope: !13508)
!13510 = !DILocation(line: 694, column: 6, scope: !13497)
!13511 = !DILocation(line: 697, column: 14, scope: !13512)
!13512 = distinct !DILexicalBlock(scope: !13508, file: !13260, line: 695, column: 3)
!13513 = !DILocation(line: 701, column: 13, scope: !13514)
!13514 = distinct !DILexicalBlock(scope: !13497, file: !13260, line: 701, column: 6)
!13515 = !DILocation(line: 701, column: 6, scope: !13497)
!13516 = !DILocation(line: 704, column: 5, scope: !13517)
!13517 = distinct !DILexicalBlock(scope: !13514, file: !13260, line: 702, column: 3)
!13518 = !DILocation(line: 705, column: 5, scope: !13517)
!13519 = !DILocation(line: 705, column: 12, scope: !13517)
!13520 = !DILocation(line: 705, column: 33, scope: !13517)
!13521 = distinct !{!13521, !13518, !13522}
!13522 = !DILocation(line: 708, column: 5, scope: !13517)
!13523 = !DILocation(line: 711, column: 49, scope: !13517)
!13524 = !DILocation(line: 711, column: 5, scope: !13517)
!13525 = !DILocation(line: 712, column: 5, scope: !13517)
!13526 = !DILocation(line: 713, column: 5, scope: !13517)
!13527 = !DILocation(line: 713, column: 12, scope: !13517)
!13528 = !DILocation(line: 713, column: 37, scope: !13517)
!13529 = distinct !{!13529, !13526, !13530}
!13530 = !DILocation(line: 716, column: 5, scope: !13517)
!13531 = !DILocation(line: 719, column: 50, scope: !13517)
!13532 = !DILocation(line: 719, column: 5, scope: !13517)
!13533 = !DILocation(line: 720, column: 50, scope: !13517)
!13534 = !DILocation(line: 720, column: 5, scope: !13517)
!13535 = !DILocation(line: 721, column: 3, scope: !13517)
!13536 = !DILocation(line: 724, column: 6, scope: !13537)
!13537 = distinct !DILexicalBlock(scope: !13497, file: !13260, line: 724, column: 6)
!13538 = !DILocation(line: 724, column: 22, scope: !13537)
!13539 = !DILocation(line: 724, column: 6, scope: !13497)
!13540 = !DILocation(line: 727, column: 14, scope: !13541)
!13541 = distinct !DILexicalBlock(scope: !13537, file: !13260, line: 725, column: 3)
!13542 = !DILocation(line: 728, column: 3, scope: !13541)
!13543 = !DILocation(line: 731, column: 13, scope: !13544)
!13544 = distinct !DILexicalBlock(scope: !13497, file: !13260, line: 731, column: 6)
!13545 = !DILocation(line: 731, column: 6, scope: !13497)
!13546 = !DILocation(line: 733, column: 5, scope: !13547)
!13547 = distinct !DILexicalBlock(scope: !13544, file: !13260, line: 732, column: 3)
!13548 = !DILocation(line: 734, column: 3, scope: !13547)
!13549 = !DILocation(line: 736, column: 3, scope: !13497)
!13550 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !9635, file: !9635, line: 4184, type: !3148, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !2236)
!13551 = !DILocation(line: 4186, column: 3, scope: !13550)
!13552 = !DILocation(line: 4187, column: 1, scope: !13550)
!13553 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !9635, file: !9635, line: 4205, type: !6408, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !2236)
!13554 = !DILocation(line: 4207, column: 11, scope: !13553)
!13555 = !DILocation(line: 4207, column: 44, scope: !13553)
!13556 = !DILocation(line: 4207, column: 3, scope: !13553)
!13557 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !9635, file: !9635, line: 3224, type: !6418, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !13558)
!13558 = !{!13559}
!13559 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13557, file: !9635, line: 3224, type: !152)
!13560 = !DILocation(line: 0, scope: !13557)
!13561 = !DILocation(line: 3226, column: 3, scope: !13557)
!13562 = !DILocation(line: 3227, column: 1, scope: !13557)
!13563 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !9635, file: !9635, line: 3188, type: !6418, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !13564)
!13564 = !{!13565}
!13565 = !DILocalVariable(name: "Source", arg: 1, scope: !13563, file: !9635, line: 3188, type: !152)
!13566 = !DILocation(line: 0, scope: !13563)
!13567 = !DILocation(line: 3190, column: 3, scope: !13563)
!13568 = !DILocation(line: 3191, column: 1, scope: !13563)
!13569 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !9635, file: !9635, line: 3204, type: !6408, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !2236)
!13570 = !DILocation(line: 3206, column: 21, scope: !13569)
!13571 = !DILocation(line: 3206, column: 3, scope: !13569)
!13572 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !9635, file: !9635, line: 3240, type: !6418, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !13573)
!13573 = !{!13574}
!13574 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13572, file: !9635, line: 3240, type: !152)
!13575 = !DILocation(line: 0, scope: !13572)
!13576 = !DILocation(line: 3242, column: 3, scope: !13572)
!13577 = !DILocation(line: 3243, column: 1, scope: !13572)
!13578 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !9635, file: !9635, line: 3256, type: !6418, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !13579)
!13579 = !{!13580}
!13580 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13578, file: !9635, line: 3256, type: !152)
!13581 = !DILocation(line: 0, scope: !13578)
!13582 = !DILocation(line: 3258, column: 3, scope: !13578)
!13583 = !DILocation(line: 3259, column: 1, scope: !13578)
!13584 = distinct !DISubprogram(name: "LL_RCC_PLLSAI_IsReady", scope: !9635, file: !9635, line: 5969, type: !6408, scopeLine: 5970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !2236)
!13585 = !DILocation(line: 5971, column: 11, scope: !13584)
!13586 = !DILocation(line: 5971, column: 47, scope: !13584)
!13587 = !DILocation(line: 5971, column: 3, scope: !13584)
!13588 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !9635, file: !9635, line: 5153, type: !6408, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !2236)
!13589 = !DILocation(line: 5155, column: 11, scope: !13588)
!13590 = !DILocation(line: 5155, column: 47, scope: !13588)
!13591 = !DILocation(line: 5155, column: 3, scope: !13588)
!13592 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !13260, file: !13260, line: 540, type: !13593, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !13595)
!13593 = !DISubroutineType(types: !13594)
!13594 = !{!13303, !152, !152, !13399, !13406}
!13595 = !{!13596, !13597, !13598, !13599, !13600, !13601}
!13596 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !13592, file: !13260, line: 540, type: !152)
!13597 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !13592, file: !13260, line: 540, type: !152)
!13598 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !13592, file: !13260, line: 541, type: !13399)
!13599 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !13592, file: !13260, line: 541, type: !13406)
!13600 = !DILocalVariable(name: "status", scope: !13592, file: !13260, line: 543, type: !13303)
!13601 = !DILocalVariable(name: "pllfreq", scope: !13592, file: !13260, line: 544, type: !152)
!13602 = !DILocation(line: 0, scope: !13592)
!13603 = !DILocation(line: 551, column: 6, scope: !13604)
!13604 = distinct !DILexicalBlock(scope: !13592, file: !13260, line: 551, column: 6)
!13605 = !DILocation(line: 551, column: 25, scope: !13604)
!13606 = !DILocation(line: 551, column: 6, scope: !13592)
!13607 = !DILocation(line: 554, column: 15, scope: !13608)
!13608 = distinct !DILexicalBlock(scope: !13604, file: !13260, line: 552, column: 3)
!13609 = !DILocation(line: 557, column: 8, scope: !13610)
!13610 = distinct !DILexicalBlock(scope: !13608, file: !13260, line: 557, column: 8)
!13611 = !DILocation(line: 557, column: 29, scope: !13610)
!13612 = !DILocation(line: 557, column: 8, scope: !13608)
!13613 = !DILocation(line: 560, column: 20, scope: !13614)
!13614 = distinct !DILexicalBlock(scope: !13615, file: !13260, line: 560, column: 10)
!13615 = distinct !DILexicalBlock(scope: !13610, file: !13260, line: 558, column: 5)
!13616 = !DILocation(line: 560, column: 10, scope: !13615)
!13617 = !DILocation(line: 562, column: 9, scope: !13618)
!13618 = distinct !DILexicalBlock(scope: !13614, file: !13260, line: 561, column: 7)
!13619 = !DILocation(line: 563, column: 7, scope: !13618)
!13620 = !DILocation(line: 566, column: 9, scope: !13621)
!13621 = distinct !DILexicalBlock(scope: !13614, file: !13260, line: 565, column: 7)
!13622 = !DILocation(line: 570, column: 7, scope: !13615)
!13623 = !DILocation(line: 571, column: 7, scope: !13615)
!13624 = !DILocation(line: 571, column: 14, scope: !13615)
!13625 = !DILocation(line: 571, column: 35, scope: !13615)
!13626 = distinct !{!13626, !13623, !13627}
!13627 = !DILocation(line: 574, column: 7, scope: !13615)
!13628 = !DILocation(line: 578, column: 76, scope: !13608)
!13629 = !DILocation(line: 578, column: 103, scope: !13608)
!13630 = !DILocation(line: 579, column: 54, scope: !13608)
!13631 = !DILocation(line: 578, column: 5, scope: !13608)
!13632 = !DILocation(line: 582, column: 14, scope: !13608)
!13633 = !DILocation(line: 583, column: 3, scope: !13608)
!13634 = !DILocation(line: 0, scope: !13604)
!13635 = !DILocation(line: 590, column: 3, scope: !13592)
!13636 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !9635, file: !9635, line: 2969, type: !6408, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !2236)
!13637 = !DILocation(line: 2971, column: 11, scope: !13636)
!13638 = !DILocation(line: 2971, column: 44, scope: !13636)
!13639 = !DILocation(line: 2971, column: 3, scope: !13636)
!13640 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !9635, file: !9635, line: 2929, type: !3148, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !2236)
!13641 = !DILocation(line: 2931, column: 3, scope: !13640)
!13642 = !DILocation(line: 2932, column: 1, scope: !13640)
!13643 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !9635, file: !9635, line: 2939, type: !3148, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !2236)
!13644 = !DILocation(line: 2941, column: 3, scope: !13643)
!13645 = !DILocation(line: 2942, column: 1, scope: !13643)
!13646 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !9635, file: !9635, line: 2949, type: !3148, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !2236)
!13647 = !DILocation(line: 2951, column: 3, scope: !13646)
!13648 = !DILocation(line: 2952, column: 1, scope: !13646)
!13649 = distinct !DISubprogram(name: "z_device_state_init", scope: !13650, file: !13650, line: 23, type: !3148, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3108, retainedNodes: !13651)
!13650 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13651 = !{!13652}
!13652 = !DILocalVariable(name: "dev", scope: !13649, file: !13650, line: 25, type: !13653)
!13653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13654, size: 32)
!13654 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13655)
!13655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !13656)
!13656 = !{!13657, !13658, !13659, !13660, !13666, !13667}
!13657 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !13655, file: !247, line: 380, baseType: !118, size: 32)
!13658 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !13655, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!13659 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !13655, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!13660 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !13655, file: !247, line: 386, baseType: !13661, size: 32, offset: 96)
!13661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13662, size: 32)
!13662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !13663)
!13663 = !{!13664, !13665}
!13664 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !13662, file: !247, line: 359, baseType: !195, size: 8)
!13665 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !13662, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!13666 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13655, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!13667 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !13655, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!13668 = !DILocation(line: 0, scope: !13649)
!13669 = !DILocation(line: 31, column: 1, scope: !13649)
!13670 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !13650, file: !13650, line: 33, type: !13671, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3108, retainedNodes: !13673)
!13671 = !DISubroutineType(types: !13672)
!13672 = !{!13653, !118}
!13673 = !{!13674, !13675}
!13674 = !DILocalVariable(name: "name", arg: 1, scope: !13670, file: !13650, line: 33, type: !118)
!13675 = !DILocalVariable(name: "dev", scope: !13670, file: !13650, line: 35, type: !13653)
!13676 = !DILocation(line: 0, scope: !13670)
!13677 = !DILocation(line: 40, column: 12, scope: !13678)
!13678 = distinct !DILexicalBlock(scope: !13670, file: !13650, line: 40, column: 6)
!13679 = !DILocation(line: 40, column: 21, scope: !13678)
!13680 = !DILocation(line: 40, column: 25, scope: !13678)
!13681 = !DILocation(line: 40, column: 33, scope: !13678)
!13682 = !DILocation(line: 40, column: 6, scope: !13670)
!13683 = !DILocation(line: 55, column: 2, scope: !13684)
!13684 = distinct !DILexicalBlock(scope: !13670, file: !13650, line: 55, column: 2)
!13685 = !DILocation(line: 50, column: 7, scope: !13686)
!13686 = distinct !DILexicalBlock(scope: !13687, file: !13650, line: 50, column: 7)
!13687 = distinct !DILexicalBlock(scope: !13688, file: !13650, line: 49, column: 57)
!13688 = distinct !DILexicalBlock(scope: !13689, file: !13650, line: 49, column: 2)
!13689 = distinct !DILexicalBlock(scope: !13670, file: !13650, line: 49, column: 2)
!13690 = !DILocation(line: 50, column: 30, scope: !13686)
!13691 = !DILocation(line: 50, column: 39, scope: !13686)
!13692 = !DILocation(line: 50, column: 44, scope: !13686)
!13693 = !DILocation(line: 50, column: 7, scope: !13687)
!13694 = !DILocation(line: 49, column: 53, scope: !13688)
!13695 = !DILocation(line: 49, column: 33, scope: !13688)
!13696 = !DILocation(line: 49, column: 2, scope: !13689)
!13697 = distinct !{!13697, !13696, !13698}
!13698 = !DILocation(line: 53, column: 2, scope: !13689)
!13699 = !DILocation(line: 56, column: 7, scope: !13700)
!13700 = distinct !DILexicalBlock(scope: !13701, file: !13650, line: 56, column: 7)
!13701 = distinct !DILexicalBlock(scope: !13702, file: !13650, line: 55, column: 57)
!13702 = distinct !DILexicalBlock(scope: !13684, file: !13650, line: 55, column: 2)
!13703 = !DILocation(line: 56, column: 30, scope: !13700)
!13704 = !DILocation(line: 56, column: 52, scope: !13700)
!13705 = !DILocation(line: 56, column: 34, scope: !13700)
!13706 = !DILocation(line: 56, column: 58, scope: !13700)
!13707 = !DILocation(line: 56, column: 7, scope: !13701)
!13708 = !DILocation(line: 55, column: 53, scope: !13702)
!13709 = !DILocation(line: 55, column: 33, scope: !13702)
!13710 = distinct !{!13710, !13683, !13711}
!13711 = !DILocation(line: 59, column: 2, scope: !13684)
!13712 = !DILocation(line: 62, column: 1, scope: !13670)
!13713 = distinct !DISubprogram(name: "z_device_is_ready", scope: !13650, file: !13650, line: 93, type: !13714, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3108, retainedNodes: !13716)
!13714 = !DISubroutineType(types: !13715)
!13715 = !{!145, !13653}
!13716 = !{!13717}
!13717 = !DILocalVariable(name: "dev", arg: 1, scope: !13713, file: !13650, line: 93, type: !13653)
!13718 = !DILocation(line: 0, scope: !13713)
!13719 = !DILocation(line: 99, column: 10, scope: !13720)
!13720 = distinct !DILexicalBlock(scope: !13713, file: !13650, line: 99, column: 6)
!13721 = !DILocation(line: 99, column: 6, scope: !13713)
!13722 = !DILocation(line: 103, column: 14, scope: !13713)
!13723 = !DILocation(line: 103, column: 21, scope: !13713)
!13724 = !DILocation(line: 103, column: 33, scope: !13713)
!13725 = !DILocation(line: 103, column: 49, scope: !13713)
!13726 = !DILocation(line: 103, column: 58, scope: !13713)
!13727 = !DILocation(line: 104, column: 1, scope: !13713)
!13728 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !13650, file: !13650, line: 87, type: !13729, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3108, retainedNodes: !13732)
!13729 = !DISubroutineType(types: !13730)
!13730 = !{!185, !13731}
!13731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13653, size: 32)
!13732 = !{!13733}
!13733 = !DILocalVariable(name: "devices", arg: 1, scope: !13728, file: !13650, line: 87, type: !13731)
!13734 = !DILocation(line: 0, scope: !13728)
!13735 = !DILocation(line: 89, column: 11, scope: !13728)
!13736 = !DILocation(line: 90, column: 2, scope: !13728)
!13737 = distinct !DISubprogram(name: "device_required_foreach", scope: !13650, file: !13650, line: 125, type: !13738, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3108, retainedNodes: !13744)
!13738 = !DISubroutineType(types: !13739)
!13739 = !{!107, !13653, !13740, !106}
!13740 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !247, line: 471, baseType: !13741)
!13741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13742, size: 32)
!13742 = !DISubroutineType(types: !13743)
!13743 = !{!107, !13653, !106}
!13744 = !{!13745, !13746, !13747, !13748, !13749}
!13745 = !DILocalVariable(name: "dev", arg: 1, scope: !13737, file: !13650, line: 125, type: !13653)
!13746 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13737, file: !13650, line: 126, type: !13740)
!13747 = !DILocalVariable(name: "context", arg: 3, scope: !13737, file: !13650, line: 127, type: !106)
!13748 = !DILocalVariable(name: "handle_count", scope: !13737, file: !13650, line: 129, type: !185)
!13749 = !DILocalVariable(name: "handles", scope: !13737, file: !13650, line: 130, type: !260)
!13750 = !DILocation(line: 0, scope: !13737)
!13751 = !DILocation(line: 129, column: 2, scope: !13737)
!13752 = !DILocation(line: 129, column: 9, scope: !13737)
!13753 = !DILocation(line: 130, column: 35, scope: !13737)
!13754 = !DILocation(line: 132, column: 33, scope: !13737)
!13755 = !DILocation(line: 132, column: 9, scope: !13737)
!13756 = !DILocation(line: 133, column: 1, scope: !13737)
!13757 = !DILocation(line: 132, column: 2, scope: !13737)
!13758 = distinct !DISubprogram(name: "device_required_handles_get", scope: !247, file: !247, line: 493, type: !13759, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3108, retainedNodes: !13761)
!13759 = !DISubroutineType(types: !13760)
!13760 = !{!260, !13653, !2617}
!13761 = !{!13762, !13763, !13764, !13765}
!13762 = !DILocalVariable(name: "dev", arg: 1, scope: !13758, file: !247, line: 493, type: !13653)
!13763 = !DILocalVariable(name: "count", arg: 2, scope: !13758, file: !247, line: 493, type: !2617)
!13764 = !DILocalVariable(name: "rv", scope: !13758, file: !247, line: 495, type: !260)
!13765 = !DILocalVariable(name: "i", scope: !13766, file: !247, line: 498, type: !185)
!13766 = distinct !DILexicalBlock(scope: !13767, file: !247, line: 497, column: 18)
!13767 = distinct !DILexicalBlock(scope: !13758, file: !247, line: 497, column: 6)
!13768 = !DILocation(line: 0, scope: !13758)
!13769 = !DILocation(line: 495, column: 35, scope: !13758)
!13770 = !DILocation(line: 497, column: 9, scope: !13767)
!13771 = !DILocation(line: 497, column: 6, scope: !13758)
!13772 = !DILocation(line: 0, scope: !13766)
!13773 = !DILocation(line: 500, column: 11, scope: !13766)
!13774 = !DILocation(line: 500, column: 40, scope: !13766)
!13775 = !DILocation(line: 502, column: 4, scope: !13776)
!13776 = distinct !DILexicalBlock(scope: !13766, file: !247, line: 501, column: 40)
!13777 = distinct !{!13777, !13778, !13779}
!13778 = !DILocation(line: 500, column: 3, scope: !13766)
!13779 = !DILocation(line: 503, column: 3, scope: !13766)
!13780 = !DILocation(line: 504, column: 10, scope: !13766)
!13781 = !DILocation(line: 505, column: 2, scope: !13766)
!13782 = !DILocation(line: 507, column: 2, scope: !13758)
!13783 = distinct !DISubprogram(name: "device_visitor", scope: !13650, file: !13650, line: 106, type: !13784, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3108, retainedNodes: !13786)
!13784 = !DISubroutineType(types: !13785)
!13785 = !{!107, !260, !185, !13740, !106}
!13786 = !{!13787, !13788, !13789, !13790, !13791, !13793, !13796, !13797}
!13787 = !DILocalVariable(name: "handles", arg: 1, scope: !13783, file: !13650, line: 106, type: !260)
!13788 = !DILocalVariable(name: "handle_count", arg: 2, scope: !13783, file: !13650, line: 107, type: !185)
!13789 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !13783, file: !13650, line: 108, type: !13740)
!13790 = !DILocalVariable(name: "context", arg: 4, scope: !13783, file: !13650, line: 109, type: !106)
!13791 = !DILocalVariable(name: "i", scope: !13792, file: !13650, line: 112, type: !185)
!13792 = distinct !DILexicalBlock(scope: !13783, file: !13650, line: 112, column: 2)
!13793 = !DILocalVariable(name: "dh", scope: !13794, file: !13650, line: 113, type: !262)
!13794 = distinct !DILexicalBlock(scope: !13795, file: !13650, line: 112, column: 44)
!13795 = distinct !DILexicalBlock(scope: !13792, file: !13650, line: 112, column: 2)
!13796 = !DILocalVariable(name: "rdev", scope: !13794, file: !13650, line: 114, type: !13653)
!13797 = !DILocalVariable(name: "rc", scope: !13794, file: !13650, line: 115, type: !107)
!13798 = !DILocation(line: 0, scope: !13783)
!13799 = !DILocation(line: 0, scope: !13792)
!13800 = !DILocation(line: 112, column: 23, scope: !13795)
!13801 = !DILocation(line: 112, column: 2, scope: !13792)
!13802 = distinct !{!13802, !13801, !13803}
!13803 = !DILocation(line: 120, column: 2, scope: !13792)
!13804 = !DILocation(line: 113, column: 24, scope: !13794)
!13805 = !DILocation(line: 0, scope: !13794)
!13806 = !DILocation(line: 114, column: 31, scope: !13794)
!13807 = !DILocation(line: 115, column: 12, scope: !13794)
!13808 = !DILocation(line: 117, column: 10, scope: !13809)
!13809 = distinct !DILexicalBlock(scope: !13794, file: !13650, line: 117, column: 7)
!13810 = !DILocation(line: 112, column: 39, scope: !13795)
!13811 = !DILocation(line: 123, column: 1, scope: !13783)
!13812 = distinct !DISubprogram(name: "device_from_handle", scope: !247, file: !247, line: 439, type: !13813, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3108, retainedNodes: !13815)
!13813 = !DISubroutineType(types: !13814)
!13814 = !{!13653, !262}
!13815 = !{!13816, !13817, !13818}
!13816 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !13812, file: !247, line: 439, type: !262)
!13817 = !DILocalVariable(name: "dev", scope: !13812, file: !247, line: 443, type: !13653)
!13818 = !DILocalVariable(name: "numdev", scope: !13812, file: !247, line: 444, type: !185)
!13819 = !DILocation(line: 0, scope: !13812)
!13820 = !DILocation(line: 446, column: 7, scope: !13821)
!13821 = distinct !DILexicalBlock(scope: !13812, file: !247, line: 446, column: 6)
!13822 = !DILocation(line: 446, column: 18, scope: !13821)
!13823 = !DILocation(line: 446, column: 23, scope: !13821)
!13824 = !DILocation(line: 450, column: 2, scope: !13812)
!13825 = distinct !DISubprogram(name: "device_supported_foreach", scope: !13650, file: !13650, line: 135, type: !13738, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3108, retainedNodes: !13826)
!13826 = !{!13827, !13828, !13829, !13830, !13831}
!13827 = !DILocalVariable(name: "dev", arg: 1, scope: !13825, file: !13650, line: 135, type: !13653)
!13828 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13825, file: !13650, line: 136, type: !13740)
!13829 = !DILocalVariable(name: "context", arg: 3, scope: !13825, file: !13650, line: 137, type: !106)
!13830 = !DILocalVariable(name: "handle_count", scope: !13825, file: !13650, line: 139, type: !185)
!13831 = !DILocalVariable(name: "handles", scope: !13825, file: !13650, line: 140, type: !260)
!13832 = !DILocation(line: 0, scope: !13825)
!13833 = !DILocation(line: 139, column: 2, scope: !13825)
!13834 = !DILocation(line: 139, column: 9, scope: !13825)
!13835 = !DILocation(line: 140, column: 35, scope: !13825)
!13836 = !DILocation(line: 142, column: 33, scope: !13825)
!13837 = !DILocation(line: 142, column: 9, scope: !13825)
!13838 = !DILocation(line: 143, column: 1, scope: !13825)
!13839 = !DILocation(line: 142, column: 2, scope: !13825)
!13840 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !247, file: !247, line: 573, type: !13759, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3108, retainedNodes: !13841)
!13841 = !{!13842, !13843, !13844, !13845, !13846}
!13842 = !DILocalVariable(name: "dev", arg: 1, scope: !13840, file: !247, line: 573, type: !13653)
!13843 = !DILocalVariable(name: "count", arg: 2, scope: !13840, file: !247, line: 573, type: !2617)
!13844 = !DILocalVariable(name: "rv", scope: !13840, file: !247, line: 575, type: !260)
!13845 = !DILocalVariable(name: "region", scope: !13840, file: !247, line: 576, type: !185)
!13846 = !DILocalVariable(name: "i", scope: !13840, file: !247, line: 577, type: !185)
!13847 = !DILocation(line: 0, scope: !13840)
!13848 = !DILocation(line: 575, column: 35, scope: !13840)
!13849 = !DILocation(line: 579, column: 9, scope: !13850)
!13850 = distinct !DILexicalBlock(scope: !13840, file: !247, line: 579, column: 6)
!13851 = !DILocation(line: 579, column: 6, scope: !13840)
!13852 = !DILocation(line: 582, column: 8, scope: !13853)
!13853 = distinct !DILexicalBlock(scope: !13854, file: !247, line: 582, column: 8)
!13854 = distinct !DILexicalBlock(scope: !13855, file: !247, line: 581, column: 23)
!13855 = distinct !DILexicalBlock(scope: !13850, file: !247, line: 579, column: 18)
!13856 = !DILocation(line: 582, column: 12, scope: !13853)
!13857 = !DILocation(line: 585, column: 6, scope: !13854)
!13858 = !DILocation(line: 0, scope: !13855)
!13859 = !DILocation(line: 581, column: 17, scope: !13855)
!13860 = !DILocation(line: 581, column: 3, scope: !13855)
!13861 = !DILocation(line: 588, column: 10, scope: !13855)
!13862 = !DILocation(line: 588, column: 16, scope: !13855)
!13863 = !DILocation(line: 589, column: 4, scope: !13864)
!13864 = distinct !DILexicalBlock(scope: !13855, file: !247, line: 588, column: 39)
!13865 = !DILocation(line: 588, column: 3, scope: !13855)
!13866 = distinct !{!13866, !13865, !13867}
!13867 = !DILocation(line: 590, column: 3, scope: !13855)
!13868 = !DILocation(line: 591, column: 10, scope: !13855)
!13869 = !DILocation(line: 592, column: 2, scope: !13855)
!13870 = !DILocation(line: 575, column: 25, scope: !13840)
!13871 = !DILocation(line: 594, column: 2, scope: !13840)
!13872 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !2027, file: !2027, line: 49, type: !13873, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2024, retainedNodes: !2236)
!13873 = !DISubroutineType(types: !13874)
!13874 = !{!187}
!13875 = !DILocation(line: 51, column: 10, scope: !13872)
!13876 = !DILocation(line: 51, column: 20, scope: !13872)
!13877 = !DILocation(line: 51, column: 2, scope: !13872)
!13878 = distinct !DISubprogram(name: "coredump", scope: !3115, file: !3115, line: 209, type: !13879, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3111, retainedNodes: !14028)
!13879 = !DISubroutineType(types: !13880)
!13880 = !{null, !32, !13881, !13925}
!13881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13882, size: 32)
!13882 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13883)
!13883 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2747, line: 141, baseType: !13884)
!13884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2747, line: 97, size: 256, elements: !13885)
!13885 = !{!13886}
!13886 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !13884, file: !2747, line: 107, baseType: !13887, size: 256)
!13887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2747, line: 98, size: 256, elements: !13888)
!13888 = !{!13889, !13894, !13899, !13904, !13909, !13914, !13919, !13924}
!13889 = !DIDerivedType(tag: DW_TAG_member, scope: !13887, file: !2747, line: 99, baseType: !13890, size: 32)
!13890 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13887, file: !2747, line: 99, size: 32, elements: !13891)
!13891 = !{!13892, !13893}
!13892 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !13890, file: !2747, line: 99, baseType: !152, size: 32)
!13893 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !13890, file: !2747, line: 99, baseType: !152, size: 32)
!13894 = !DIDerivedType(tag: DW_TAG_member, scope: !13887, file: !2747, line: 100, baseType: !13895, size: 32, offset: 32)
!13895 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13887, file: !2747, line: 100, size: 32, elements: !13896)
!13896 = !{!13897, !13898}
!13897 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !13895, file: !2747, line: 100, baseType: !152, size: 32)
!13898 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !13895, file: !2747, line: 100, baseType: !152, size: 32)
!13899 = !DIDerivedType(tag: DW_TAG_member, scope: !13887, file: !2747, line: 101, baseType: !13900, size: 32, offset: 64)
!13900 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13887, file: !2747, line: 101, size: 32, elements: !13901)
!13901 = !{!13902, !13903}
!13902 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !13900, file: !2747, line: 101, baseType: !152, size: 32)
!13903 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !13900, file: !2747, line: 101, baseType: !152, size: 32)
!13904 = !DIDerivedType(tag: DW_TAG_member, scope: !13887, file: !2747, line: 102, baseType: !13905, size: 32, offset: 96)
!13905 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13887, file: !2747, line: 102, size: 32, elements: !13906)
!13906 = !{!13907, !13908}
!13907 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !13905, file: !2747, line: 102, baseType: !152, size: 32)
!13908 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !13905, file: !2747, line: 102, baseType: !152, size: 32)
!13909 = !DIDerivedType(tag: DW_TAG_member, scope: !13887, file: !2747, line: 103, baseType: !13910, size: 32, offset: 128)
!13910 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13887, file: !2747, line: 103, size: 32, elements: !13911)
!13911 = !{!13912, !13913}
!13912 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !13910, file: !2747, line: 103, baseType: !152, size: 32)
!13913 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !13910, file: !2747, line: 103, baseType: !152, size: 32)
!13914 = !DIDerivedType(tag: DW_TAG_member, scope: !13887, file: !2747, line: 104, baseType: !13915, size: 32, offset: 160)
!13915 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13887, file: !2747, line: 104, size: 32, elements: !13916)
!13916 = !{!13917, !13918}
!13917 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !13915, file: !2747, line: 104, baseType: !152, size: 32)
!13918 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !13915, file: !2747, line: 104, baseType: !152, size: 32)
!13919 = !DIDerivedType(tag: DW_TAG_member, scope: !13887, file: !2747, line: 105, baseType: !13920, size: 32, offset: 192)
!13920 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13887, file: !2747, line: 105, size: 32, elements: !13921)
!13921 = !{!13922, !13923}
!13922 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !13920, file: !2747, line: 105, baseType: !152, size: 32)
!13923 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !13920, file: !2747, line: 105, baseType: !152, size: 32)
!13924 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !13887, file: !2747, line: 106, baseType: !152, size: 32, offset: 224)
!13925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13926, size: 32)
!13926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !13927)
!13927 = !{!13928, !13986, !13998, !13999, !14000, !14001, !14002, !14008, !14023}
!13928 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !13926, file: !309, line: 247, baseType: !13929, size: 384)
!13929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !13930)
!13930 = !{!13931, !13955, !13962, !13963, !13964, !13973, !13974, !13975}
!13931 = !DIDerivedType(tag: DW_TAG_member, scope: !13929, file: !309, line: 60, baseType: !13932, size: 64)
!13932 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13929, file: !309, line: 60, size: 64, elements: !13933)
!13933 = !{!13934, !13949}
!13934 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !13932, file: !309, line: 61, baseType: !13935, size: 64)
!13935 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !13936)
!13936 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !13937)
!13937 = !{!13938, !13944}
!13938 = !DIDerivedType(tag: DW_TAG_member, scope: !13936, file: !319, line: 38, baseType: !13939, size: 32)
!13939 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13936, file: !319, line: 38, size: 32, elements: !13940)
!13940 = !{!13941, !13943}
!13941 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !13939, file: !319, line: 39, baseType: !13942, size: 32)
!13942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13936, size: 32)
!13943 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !13939, file: !319, line: 40, baseType: !13942, size: 32)
!13944 = !DIDerivedType(tag: DW_TAG_member, scope: !13936, file: !319, line: 42, baseType: !13945, size: 32, offset: 32)
!13945 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13936, file: !319, line: 42, size: 32, elements: !13946)
!13946 = !{!13947, !13948}
!13947 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !13945, file: !319, line: 43, baseType: !13942, size: 32)
!13948 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !13945, file: !319, line: 44, baseType: !13942, size: 32)
!13949 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !13932, file: !309, line: 62, baseType: !13950, size: 64)
!13950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !13951)
!13951 = !{!13952}
!13952 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !13950, file: !335, line: 50, baseType: !13953, size: 64)
!13953 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13954, size: 64, elements: !340)
!13954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13950, size: 32)
!13955 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !13929, file: !309, line: 68, baseType: !13956, size: 32, offset: 64)
!13956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13957, size: 32)
!13957 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !13958)
!13958 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !13959)
!13959 = !{!13960}
!13960 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !13958, file: !345, line: 232, baseType: !13961, size: 64)
!13961 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !13936)
!13962 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !13929, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!13963 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !13929, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!13964 = !DIDerivedType(tag: DW_TAG_member, scope: !13929, file: !309, line: 90, baseType: !13965, size: 16, offset: 112)
!13965 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13929, file: !309, line: 90, size: 16, elements: !13966)
!13966 = !{!13967, !13972}
!13967 = !DIDerivedType(tag: DW_TAG_member, scope: !13965, file: !309, line: 91, baseType: !13968, size: 16)
!13968 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !13965, file: !309, line: 91, size: 16, elements: !13969)
!13969 = !{!13970, !13971}
!13970 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !13968, file: !309, line: 96, baseType: !359, size: 8)
!13971 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !13968, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!13972 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !13965, file: !309, line: 100, baseType: !197, size: 16)
!13973 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !13929, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!13974 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !13929, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!13975 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !13929, file: !309, line: 131, baseType: !13976, size: 192, offset: 192)
!13976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !13977)
!13977 = !{!13978, !13979, !13985}
!13978 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !13976, file: !345, line: 245, baseType: !13935, size: 64)
!13979 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !13976, file: !345, line: 246, baseType: !13980, size: 32, offset: 64)
!13980 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !13981)
!13981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13982, size: 32)
!13982 = !DISubroutineType(types: !13983)
!13983 = !{null, !13984}
!13984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13976, size: 32)
!13985 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !13976, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!13986 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !13926, file: !309, line: 250, baseType: !13987, size: 288, offset: 384)
!13987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !13988)
!13988 = !{!13989, !13990, !13991, !13992, !13993, !13994, !13995, !13996, !13997}
!13989 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !13987, file: !379, line: 26, baseType: !152, size: 32)
!13990 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !13987, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!13991 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !13987, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!13992 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !13987, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!13993 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !13987, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!13994 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !13987, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!13995 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !13987, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!13996 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !13987, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!13997 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !13987, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!13998 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !13926, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!13999 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !13926, file: !309, line: 256, baseType: !13957, size: 64, offset: 704)
!14000 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !13926, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!14001 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !13926, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!14002 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !13926, file: !309, line: 300, baseType: !14003, size: 96, offset: 1056)
!14003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !14004)
!14004 = !{!14005, !14006, !14007}
!14005 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !14003, file: !309, line: 153, baseType: !22, size: 32)
!14006 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !14003, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!14007 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !14003, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!14008 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !13926, file: !309, line: 325, baseType: !14009, size: 32, offset: 1152)
!14009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14010, size: 32)
!14010 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !14011)
!14011 = !{!14012, !14018, !14019}
!14012 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !14010, file: !406, line: 5074, baseType: !14013, size: 96)
!14013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !14014)
!14014 = !{!14015, !14016, !14017}
!14015 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !14013, file: !410, line: 57, baseType: !413, size: 32)
!14016 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !14013, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!14017 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !14013, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!14018 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !14010, file: !406, line: 5075, baseType: !13957, size: 64, offset: 96)
!14019 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !14010, file: !406, line: 5076, baseType: !14020, size: 32, offset: 160)
!14020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !14021)
!14021 = !{!14022}
!14022 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !14020, file: !420, line: 52, baseType: !22, size: 32)
!14023 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !13926, file: !309, line: 343, baseType: !14024, size: 64, offset: 1184)
!14024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !14025)
!14025 = !{!14026, !14027}
!14026 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !14024, file: !379, line: 63, baseType: !152, size: 32)
!14027 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !14024, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!14028 = !{!14029, !14030, !14031}
!14029 = !DILocalVariable(name: "reason", arg: 1, scope: !13878, file: !3115, line: 209, type: !32)
!14030 = !DILocalVariable(name: "esf", arg: 2, scope: !13878, file: !3115, line: 209, type: !13881)
!14031 = !DILocalVariable(name: "thread", arg: 3, scope: !13878, file: !3115, line: 210, type: !13925)
!14032 = !DILocation(line: 0, scope: !13878)
!14033 = !DILocation(line: 212, column: 1, scope: !13878)
!14034 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3115, file: !3115, line: 214, type: !14035, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3111, retainedNodes: !14037)
!14035 = !DISubroutineType(types: !14036)
!14036 = !{null, !22, !22}
!14037 = !{!14038, !14039}
!14038 = !DILocalVariable(name: "start_addr", arg: 1, scope: !14034, file: !3115, line: 214, type: !22)
!14039 = !DILocalVariable(name: "end_addr", arg: 2, scope: !14034, file: !3115, line: 214, type: !22)
!14040 = !DILocation(line: 0, scope: !14034)
!14041 = !DILocation(line: 216, column: 1, scope: !14034)
!14042 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3115, file: !3115, line: 218, type: !14043, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3111, retainedNodes: !14045)
!14043 = !DISubroutineType(types: !14044)
!14044 = !{null, !194, !185}
!14045 = !{!14046, !14047}
!14046 = !DILocalVariable(name: "buf", arg: 1, scope: !14042, file: !3115, line: 218, type: !194)
!14047 = !DILocalVariable(name: "buflen", arg: 2, scope: !14042, file: !3115, line: 218, type: !185)
!14048 = !DILocation(line: 0, scope: !14042)
!14049 = !DILocation(line: 220, column: 1, scope: !14042)
!14050 = distinct !DISubprogram(name: "coredump_query", scope: !3115, file: !3115, line: 222, type: !14051, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3111, retainedNodes: !14053)
!14051 = !DISubroutineType(types: !14052)
!14052 = !{!107, !3114, !106}
!14053 = !{!14054, !14055}
!14054 = !DILocalVariable(name: "query_id", arg: 1, scope: !14050, file: !3115, line: 222, type: !3114)
!14055 = !DILocalVariable(name: "arg", arg: 2, scope: !14050, file: !3115, line: 222, type: !106)
!14056 = !DILocation(line: 0, scope: !14050)
!14057 = !DILocation(line: 224, column: 2, scope: !14050)
!14058 = distinct !DISubprogram(name: "coredump_cmd", scope: !3115, file: !3115, line: 227, type: !14059, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3111, retainedNodes: !14061)
!14059 = !DISubroutineType(types: !14060)
!14060 = !{!107, !3121, !106}
!14061 = !{!14062, !14063}
!14062 = !DILocalVariable(name: "query_id", arg: 1, scope: !14058, file: !3115, line: 227, type: !3121)
!14063 = !DILocalVariable(name: "arg", arg: 2, scope: !14058, file: !3115, line: 227, type: !106)
!14064 = !DILocation(line: 0, scope: !14058)
!14065 = !DILocation(line: 229, column: 2, scope: !14058)
!14066 = distinct !DISubprogram(name: "arch_system_halt", scope: !14067, file: !14067, line: 23, type: !6013, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3111, retainedNodes: !14068)
!14067 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14068 = !{!14069}
!14069 = !DILocalVariable(name: "reason", arg: 1, scope: !14066, file: !14067, line: 23, type: !32)
!14070 = !DILocation(line: 0, scope: !14066)
!14071 = !DILocation(line: 55, column: 2, scope: !14072, inlinedAt: !14076)
!14072 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6002, file: !6002, line: 42, type: !6003, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3111, retainedNodes: !14073)
!14073 = !{!14074, !14075}
!14074 = !DILocalVariable(name: "key", scope: !14072, file: !6002, line: 44, type: !32)
!14075 = !DILocalVariable(name: "tmp", scope: !14072, file: !6002, line: 53, type: !32)
!14076 = distinct !DILocation(line: 31, column: 8, scope: !14066)
!14077 = !{i64 2284518}
!14078 = !DILocation(line: 0, scope: !14072, inlinedAt: !14076)
!14079 = !DILocation(line: 32, column: 2, scope: !14066)
!14080 = !DILocation(line: 32, column: 2, scope: !14081)
!14081 = distinct !DILexicalBlock(scope: !14082, file: !14067, line: 32, column: 2)
!14082 = distinct !DILexicalBlock(scope: !14066, file: !14067, line: 32, column: 2)
!14083 = distinct !{!14083, !14084, !14085}
!14084 = !DILocation(line: 32, column: 2, scope: !14082)
!14085 = !DILocation(line: 34, column: 2, scope: !14082)
!14086 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !14067, file: !14067, line: 39, type: !14087, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3111, retainedNodes: !14089)
!14087 = !DISubroutineType(types: !14088)
!14088 = !{null, !32, !13881}
!14089 = !{!14090, !14091}
!14090 = !DILocalVariable(name: "reason", arg: 1, scope: !14086, file: !14067, line: 39, type: !32)
!14091 = !DILocalVariable(name: "esf", arg: 2, scope: !14086, file: !14067, line: 40, type: !13881)
!14092 = !DILocation(line: 0, scope: !14086)
!14093 = !DILocation(line: 45, column: 2, scope: !14094)
!14094 = distinct !DILexicalBlock(scope: !14095, file: !14067, line: 45, column: 2)
!14095 = distinct !DILexicalBlock(scope: !14096, file: !14067, line: 45, column: 2)
!14096 = distinct !DILexicalBlock(scope: !14097, file: !14067, line: 45, column: 2)
!14097 = distinct !DILexicalBlock(scope: !14086, file: !14067, line: 45, column: 2)
!14098 = !DILocation(line: 46, column: 2, scope: !14086)
!14099 = distinct !DISubprogram(name: "k_fatal_halt", scope: !14067, file: !14067, line: 81, type: !6013, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3111, retainedNodes: !14100)
!14100 = !{!14101}
!14101 = !DILocalVariable(name: "reason", arg: 1, scope: !14099, file: !14067, line: 81, type: !32)
!14102 = !DILocation(line: 0, scope: !14099)
!14103 = !DILocation(line: 83, column: 2, scope: !14099)
!14104 = distinct !DISubprogram(name: "z_fatal_error", scope: !14067, file: !14067, line: 96, type: !14087, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3111, retainedNodes: !14105)
!14105 = !{!14106, !14107, !14108, !14109}
!14106 = !DILocalVariable(name: "reason", arg: 1, scope: !14104, file: !14067, line: 96, type: !32)
!14107 = !DILocalVariable(name: "esf", arg: 2, scope: !14104, file: !14067, line: 96, type: !13881)
!14108 = !DILocalVariable(name: "key", scope: !14104, file: !14067, line: 102, type: !32)
!14109 = !DILocalVariable(name: "thread", scope: !14104, file: !14067, line: 103, type: !13925)
!14110 = !DILocation(line: 0, scope: !14104)
!14111 = !DILocation(line: 55, column: 2, scope: !14072, inlinedAt: !14112)
!14112 = distinct !DILocation(line: 102, column: 21, scope: !14104)
!14113 = !DILocation(line: 0, scope: !14072, inlinedAt: !14112)
!14114 = !DILocation(line: 104, column: 4, scope: !14104)
!14115 = !DILocation(line: 109, column: 2, scope: !14116)
!14116 = distinct !DILexicalBlock(scope: !14117, file: !14067, line: 109, column: 2)
!14117 = distinct !DILexicalBlock(scope: !14118, file: !14067, line: 109, column: 2)
!14118 = distinct !DILexicalBlock(scope: !14119, file: !14067, line: 109, column: 2)
!14119 = distinct !DILexicalBlock(scope: !14104, file: !14067, line: 109, column: 2)
!14120 = !DILocation(line: 119, column: 11, scope: !14121)
!14121 = distinct !DILexicalBlock(scope: !14104, file: !14067, line: 119, column: 6)
!14122 = !DILocation(line: 119, column: 20, scope: !14121)
!14123 = !DILocalVariable(name: "esf", arg: 1, scope: !14124, file: !7373, line: 71, type: !13881)
!14124 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !7373, file: !7373, line: 71, type: !14125, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3111, retainedNodes: !14127)
!14125 = !DISubroutineType(types: !14126)
!14126 = !{!145, !13881}
!14127 = !{!14123}
!14128 = !DILocation(line: 0, scope: !14124, inlinedAt: !14129)
!14129 = distinct !DILocation(line: 119, column: 23, scope: !14121)
!14130 = !DILocation(line: 73, column: 21, scope: !14124, inlinedAt: !14129)
!14131 = !DILocation(line: 73, column: 26, scope: !14124, inlinedAt: !14129)
!14132 = !DILocation(line: 73, column: 9, scope: !14124, inlinedAt: !14129)
!14133 = !DILocation(line: 119, column: 6, scope: !14104)
!14134 = !DILocation(line: 120, column: 3, scope: !14135)
!14135 = distinct !DILexicalBlock(scope: !14136, file: !14067, line: 120, column: 3)
!14136 = distinct !DILexicalBlock(scope: !14137, file: !14067, line: 120, column: 3)
!14137 = distinct !DILexicalBlock(scope: !14138, file: !14067, line: 120, column: 3)
!14138 = distinct !DILexicalBlock(scope: !14139, file: !14067, line: 120, column: 3)
!14139 = distinct !DILexicalBlock(scope: !14121, file: !14067, line: 119, column: 57)
!14140 = !DILocation(line: 121, column: 2, scope: !14139)
!14141 = !DILocation(line: 124, column: 2, scope: !14142)
!14142 = distinct !DILexicalBlock(scope: !14143, file: !14067, line: 124, column: 2)
!14143 = distinct !DILexicalBlock(scope: !14144, file: !14067, line: 124, column: 2)
!14144 = distinct !DILexicalBlock(scope: !14145, file: !14067, line: 124, column: 2)
!14145 = distinct !DILexicalBlock(scope: !14104, file: !14067, line: 124, column: 2)
!14146 = !DILocation(line: 131, column: 2, scope: !14104)
!14147 = !DILocation(line: 0, scope: !14124, inlinedAt: !14148)
!14148 = distinct !DILocation(line: 163, column: 24, scope: !14149)
!14149 = distinct !DILexicalBlock(scope: !14150, file: !14067, line: 163, column: 7)
!14150 = distinct !DILexicalBlock(scope: !14151, file: !14067, line: 160, column: 9)
!14151 = distinct !DILexicalBlock(scope: !14104, file: !14067, line: 146, column: 6)
!14152 = !DILocation(line: 73, column: 21, scope: !14124, inlinedAt: !14148)
!14153 = !DILocation(line: 73, column: 26, scope: !14124, inlinedAt: !14148)
!14154 = !DILocation(line: 73, column: 9, scope: !14124, inlinedAt: !14148)
!14155 = !DILocation(line: 163, column: 7, scope: !14150)
!14156 = !DILocalVariable(name: "key", arg: 1, scope: !14157, file: !6002, line: 84, type: !32)
!14157 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6002, file: !6002, line: 84, type: !6013, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3111, retainedNodes: !14158)
!14158 = !{!14156}
!14159 = !DILocation(line: 0, scope: !14157, inlinedAt: !14160)
!14160 = distinct !DILocation(line: 171, column: 4, scope: !14161)
!14161 = distinct !DILexicalBlock(scope: !14149, file: !14067, line: 163, column: 58)
!14162 = !DILocation(line: 95, column: 2, scope: !14157, inlinedAt: !14160)
!14163 = !{i64 2285335}
!14164 = !DILocation(line: 172, column: 4, scope: !14161)
!14165 = !DILocation(line: 163, column: 21, scope: !14149)
!14166 = !DILocation(line: 178, column: 15, scope: !14167)
!14167 = distinct !DILexicalBlock(scope: !14168, file: !14067, line: 178, column: 8)
!14168 = distinct !DILexicalBlock(scope: !14149, file: !14067, line: 174, column: 10)
!14169 = !DILocation(line: 0, scope: !14157, inlinedAt: !14170)
!14170 = distinct !DILocation(line: 179, column: 5, scope: !14171)
!14171 = distinct !DILexicalBlock(scope: !14167, file: !14067, line: 178, column: 38)
!14172 = !DILocation(line: 0, scope: !14157, inlinedAt: !14173)
!14173 = distinct !DILocation(line: 186, column: 2, scope: !14104)
!14174 = !DILocation(line: 178, column: 8, scope: !14168)
!14175 = !DILocation(line: 189, column: 3, scope: !14176)
!14176 = distinct !DILexicalBlock(scope: !14177, file: !14067, line: 188, column: 41)
!14177 = distinct !DILexicalBlock(scope: !14104, file: !14067, line: 188, column: 6)
!14178 = !DILocation(line: 191, column: 1, scope: !14104)
!14179 = distinct !DISubprogram(name: "k_current_get", scope: !406, file: !406, line: 530, type: !14180, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3111, retainedNodes: !2236)
!14180 = !DISubroutineType(types: !14181)
!14181 = !{!14182}
!14182 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !309, line: 347, baseType: !13925)
!14183 = !DILocation(line: 535, column: 9, scope: !14179)
!14184 = !DILocation(line: 535, column: 2, scope: !14179)
!14185 = distinct !DISubprogram(name: "reason_to_str", scope: !14067, file: !14067, line: 62, type: !14186, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3111, retainedNodes: !14188)
!14186 = !DISubroutineType(types: !14187)
!14187 = !{!118, !32}
!14188 = !{!14189}
!14189 = !DILocalVariable(name: "reason", arg: 1, scope: !14185, file: !14067, line: 62, type: !32)
!14190 = !DILocation(line: 0, scope: !14185)
!14191 = !DILocation(line: 64, column: 2, scope: !14185)
!14192 = !DILocation(line: 0, scope: !14193)
!14193 = distinct !DILexicalBlock(scope: !14185, file: !14067, line: 64, column: 18)
!14194 = !DILocation(line: 78, column: 1, scope: !14185)
!14195 = distinct !DISubprogram(name: "thread_name_get", scope: !14067, file: !14067, line: 51, type: !14196, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3111, retainedNodes: !14198)
!14196 = !DISubroutineType(types: !14197)
!14197 = !{!118, !13925}
!14198 = !{!14199, !14200}
!14199 = !DILocalVariable(name: "thread", arg: 1, scope: !14195, file: !14067, line: 51, type: !13925)
!14200 = !DILocalVariable(name: "thread_name", scope: !14195, file: !14067, line: 53, type: !118)
!14201 = !DILocation(line: 0, scope: !14195)
!14202 = !DILocation(line: 53, column: 36, scope: !14195)
!14203 = !DILocation(line: 53, column: 28, scope: !14195)
!14204 = !DILocation(line: 53, column: 47, scope: !14195)
!14205 = !DILocation(line: 55, column: 19, scope: !14206)
!14206 = distinct !DILexicalBlock(scope: !14195, file: !14067, line: 55, column: 6)
!14207 = !DILocation(line: 55, column: 28, scope: !14206)
!14208 = !DILocation(line: 55, column: 32, scope: !14206)
!14209 = !DILocation(line: 55, column: 47, scope: !14206)
!14210 = !DILocation(line: 55, column: 6, scope: !14195)
!14211 = !DILocation(line: 57, column: 2, scope: !14212)
!14212 = distinct !DILexicalBlock(scope: !14206, file: !14067, line: 55, column: 57)
!14213 = !DILocation(line: 59, column: 2, scope: !14195)
!14214 = distinct !DISubprogram(name: "k_thread_abort", scope: !4479, file: !4479, line: 188, type: !14215, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3111, retainedNodes: !14217)
!14215 = !DISubroutineType(types: !14216)
!14216 = !{null, !14182}
!14217 = !{!14218}
!14218 = !DILocalVariable(name: "thread", arg: 1, scope: !14214, file: !4479, line: 188, type: !14182)
!14219 = !DILocation(line: 0, scope: !14214)
!14220 = !DILocation(line: 197, column: 2, scope: !14221)
!14221 = distinct !DILexicalBlock(scope: !14214, file: !4479, line: 197, column: 2)
!14222 = !{i64 2155070682}
!14223 = !DILocation(line: 198, column: 2, scope: !14214)
!14224 = !DILocation(line: 199, column: 1, scope: !14214)
!14225 = distinct !DISubprogram(name: "z_current_get", scope: !4479, file: !4479, line: 173, type: !14180, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3111, retainedNodes: !2236)
!14226 = !DILocation(line: 180, column: 2, scope: !14227)
!14227 = distinct !DILexicalBlock(scope: !14225, file: !4479, line: 180, column: 2)
!14228 = !{i64 2155070614}
!14229 = !DILocation(line: 181, column: 9, scope: !14225)
!14230 = !DILocation(line: 181, column: 2, scope: !14225)
!14231 = distinct !DISubprogram(name: "z_early_memset", scope: !2035, file: !2035, line: 108, type: !14232, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2031, retainedNodes: !14234)
!14232 = !DISubroutineType(types: !14233)
!14233 = !{null, !106, !107, !185}
!14234 = !{!14235, !14236, !14237}
!14235 = !DILocalVariable(name: "dst", arg: 1, scope: !14231, file: !2035, line: 108, type: !106)
!14236 = !DILocalVariable(name: "c", arg: 2, scope: !14231, file: !2035, line: 108, type: !107)
!14237 = !DILocalVariable(name: "n", arg: 3, scope: !14231, file: !2035, line: 108, type: !185)
!14238 = !DILocation(line: 0, scope: !14231)
!14239 = !DILocation(line: 110, column: 9, scope: !14231)
!14240 = !DILocation(line: 111, column: 1, scope: !14231)
!14241 = distinct !DISubprogram(name: "z_early_memcpy", scope: !2035, file: !2035, line: 121, type: !14242, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2031, retainedNodes: !14244)
!14242 = !DISubroutineType(types: !14243)
!14243 = !{null, !106, !13, !185}
!14244 = !{!14245, !14246, !14247}
!14245 = !DILocalVariable(name: "dst", arg: 1, scope: !14241, file: !2035, line: 121, type: !106)
!14246 = !DILocalVariable(name: "src", arg: 2, scope: !14241, file: !2035, line: 121, type: !13)
!14247 = !DILocalVariable(name: "n", arg: 3, scope: !14241, file: !2035, line: 121, type: !185)
!14248 = !DILocation(line: 0, scope: !14241)
!14249 = !DILocation(line: 123, column: 9, scope: !14241)
!14250 = !DILocation(line: 124, column: 1, scope: !14241)
!14251 = distinct !DISubprogram(name: "z_bss_zero", scope: !2035, file: !2035, line: 132, type: !3148, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2031, retainedNodes: !2236)
!14252 = !DILocation(line: 143, column: 2, scope: !14251)
!14253 = !DILocation(line: 168, column: 1, scope: !14251)
!14254 = distinct !DISubprogram(name: "z_init_cpu", scope: !2035, file: !2035, line: 372, type: !9235, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2031, retainedNodes: !14255)
!14255 = !{!14256}
!14256 = !DILocalVariable(name: "id", arg: 1, scope: !14254, file: !2035, line: 372, type: !107)
!14257 = !DILocation(line: 0, scope: !14254)
!14258 = !DILocation(line: 374, column: 2, scope: !14254)
!14259 = !DILocation(line: 375, column: 34, scope: !14254)
!14260 = !DILocation(line: 375, column: 19, scope: !14254)
!14261 = !DILocation(line: 375, column: 31, scope: !14254)
!14262 = !DILocation(line: 376, column: 24, scope: !14254)
!14263 = !DILocation(line: 376, column: 19, scope: !14254)
!14264 = !DILocation(line: 376, column: 22, scope: !14254)
!14265 = !DILocation(line: 378, column: 26, scope: !14254)
!14266 = !DILocation(line: 378, column: 4, scope: !14254)
!14267 = !DILocation(line: 378, column: 50, scope: !14254)
!14268 = !DILocation(line: 377, column: 19, scope: !14254)
!14269 = !DILocation(line: 377, column: 29, scope: !14254)
!14270 = !DILocation(line: 384, column: 1, scope: !14254)
!14271 = distinct !DISubprogram(name: "init_idle_thread", scope: !2035, file: !2035, line: 343, type: !9235, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2031, retainedNodes: !14272)
!14272 = !{!14273, !14274, !14275, !14278}
!14273 = !DILocalVariable(name: "i", arg: 1, scope: !14271, file: !2035, line: 343, type: !107)
!14274 = !DILocalVariable(name: "thread", scope: !14271, file: !2035, line: 345, type: !2127)
!14275 = !DILocalVariable(name: "stack", scope: !14271, file: !2035, line: 346, type: !14276)
!14276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14277, size: 32)
!14277 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !560, line: 44, baseType: !2245)
!14278 = !DILocalVariable(name: "tname", scope: !14271, file: !2035, line: 354, type: !193)
!14279 = !DILocation(line: 0, scope: !14271)
!14280 = !DILocation(line: 345, column: 29, scope: !14271)
!14281 = !DILocation(line: 346, column: 28, scope: !14271)
!14282 = !DILocation(line: 362, column: 37, scope: !14271)
!14283 = !DILocation(line: 362, column: 36, scope: !14271)
!14284 = !DILocation(line: 361, column: 2, scope: !14271)
!14285 = !DILocation(line: 365, column: 2, scope: !14271)
!14286 = !DILocation(line: 370, column: 1, scope: !14271)
!14287 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !577, file: !577, line: 331, type: !14288, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2031, retainedNodes: !14290)
!14288 = !DISubroutineType(types: !14289)
!14289 = !{!193, !14276}
!14290 = !{!14291}
!14291 = !DILocalVariable(name: "sym", arg: 1, scope: !14287, file: !577, line: 331, type: !14276)
!14292 = !DILocation(line: 0, scope: !14287)
!14293 = !DILocation(line: 333, column: 21, scope: !14287)
!14294 = !DILocation(line: 333, column: 2, scope: !14287)
!14295 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !14296, file: !14296, line: 155, type: !14297, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2031, retainedNodes: !14299)
!14296 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14297 = !DISubroutineType(types: !14298)
!14298 = !{null, !2127}
!14299 = !{!14300}
!14300 = !DILocalVariable(name: "thread", arg: 1, scope: !14295, file: !14296, line: 155, type: !2127)
!14301 = !DILocation(line: 0, scope: !14295)
!14302 = !DILocation(line: 157, column: 15, scope: !14295)
!14303 = !DILocation(line: 157, column: 28, scope: !14295)
!14304 = !DILocation(line: 158, column: 1, scope: !14295)
!14305 = distinct !DISubprogram(name: "z_cstart", scope: !2035, file: !2035, line: 501, type: !3148, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2031, retainedNodes: !14306)
!14306 = !{!14307}
!14307 = !DILocalVariable(name: "dummy_thread", scope: !14305, file: !2035, line: 518, type: !2128)
!14308 = !DILocation(line: 507, column: 2, scope: !14305)
!14309 = !DILocation(line: 43, column: 14, scope: !14310, inlinedAt: !14314)
!14310 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !14311, file: !14311, line: 40, type: !3148, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2031, retainedNodes: !14312)
!14311 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14312 = !{!14313}
!14313 = !DILocalVariable(name: "msp", scope: !14310, file: !14311, line: 42, type: !152)
!14314 = distinct !DILocation(line: 44, column: 2, scope: !14315, inlinedAt: !14317)
!14315 = distinct !DISubprogram(name: "arch_kernel_init", scope: !14316, file: !14316, line: 42, type: !3148, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2031, retainedNodes: !2236)
!14316 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14317 = distinct !DILocation(line: 510, column: 2, scope: !14305)
!14318 = !DILocation(line: 43, column: 3, scope: !14310, inlinedAt: !14314)
!14319 = !DILocation(line: 43, column: 60, scope: !14310, inlinedAt: !14314)
!14320 = !DILocation(line: 0, scope: !14310, inlinedAt: !14314)
!14321 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !14322, file: !6321, line: 1153, type: !152)
!14322 = distinct !DISubprogram(name: "__set_MSP", scope: !6321, file: !6321, line: 1153, type: !6418, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2031, retainedNodes: !14323)
!14323 = !{!14321}
!14324 = !DILocation(line: 0, scope: !14322, inlinedAt: !14325)
!14325 = distinct !DILocation(line: 46, column: 2, scope: !14310, inlinedAt: !14314)
!14326 = !DILocation(line: 1155, column: 3, scope: !14322, inlinedAt: !14325)
!14327 = !{i64 3750457}
!14328 = !DILocation(line: 62, column: 11, scope: !14310, inlinedAt: !14314)
!14329 = !DILocation(line: 102, column: 2, scope: !14330, inlinedAt: !14331)
!14330 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !7373, file: !7373, line: 97, type: !3148, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2031, retainedNodes: !2236)
!14331 = distinct !DILocation(line: 45, column: 2, scope: !14315, inlinedAt: !14317)
!14332 = !DILocation(line: 108, column: 2, scope: !14330, inlinedAt: !14331)
!14333 = !DILocation(line: 112, column: 2, scope: !14330, inlinedAt: !14331)
!14334 = !DILocation(line: 113, column: 2, scope: !14330, inlinedAt: !14331)
!14335 = !DILocation(line: 114, column: 2, scope: !14330, inlinedAt: !14331)
!14336 = !DILocation(line: 116, column: 2, scope: !14330, inlinedAt: !14331)
!14337 = !DILocation(line: 123, column: 13, scope: !14330, inlinedAt: !14331)
!14338 = !DILocation(line: 46, column: 2, scope: !14315, inlinedAt: !14317)
!14339 = !DILocation(line: 47, column: 2, scope: !14315, inlinedAt: !14317)
!14340 = !DILocation(line: 174, column: 12, scope: !14341, inlinedAt: !14342)
!14341 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !7373, file: !7373, line: 169, type: !3148, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2031, retainedNodes: !2236)
!14342 = distinct !DILocation(line: 48, column: 2, scope: !14315, inlinedAt: !14317)
!14343 = !DILocation(line: 179, column: 12, scope: !14341, inlinedAt: !14342)
!14344 = !DILocation(line: 50, column: 2, scope: !14315, inlinedAt: !14317)
!14345 = !DILocation(line: 57, column: 2, scope: !14315, inlinedAt: !14317)
!14346 = !DILocation(line: 518, column: 2, scope: !14305)
!14347 = !DILocation(line: 518, column: 18, scope: !14305)
!14348 = !DILocation(line: 520, column: 2, scope: !14305)
!14349 = !DILocation(line: 523, column: 2, scope: !14305)
!14350 = !DILocation(line: 526, column: 2, scope: !14305)
!14351 = !DILocation(line: 527, column: 2, scope: !14305)
!14352 = !DILocation(line: 543, column: 24, scope: !14305)
!14353 = !DILocation(line: 543, column: 2, scope: !14305)
!14354 = !DILocation(line: 0, scope: !2267)
!14355 = !DILocation(line: 246, column: 15, scope: !2285)
!14356 = !DILocation(line: 246, column: 36, scope: !2284)
!14357 = !DILocation(line: 246, column: 2, scope: !2285)
!14358 = !DILocation(line: 247, column: 37, scope: !2283)
!14359 = !DILocation(line: 0, scope: !2283)
!14360 = !DILocation(line: 248, column: 19, scope: !2283)
!14361 = !DILocation(line: 248, column: 12, scope: !2283)
!14362 = !DILocation(line: 250, column: 11, scope: !14363)
!14363 = distinct !DILexicalBlock(scope: !2283, file: !2035, line: 250, column: 7)
!14364 = !DILocation(line: 250, column: 7, scope: !2283)
!14365 = !DILocation(line: 254, column: 11, scope: !14366)
!14366 = distinct !DILexicalBlock(scope: !14367, file: !2035, line: 254, column: 8)
!14367 = distinct !DILexicalBlock(scope: !14363, file: !2035, line: 250, column: 20)
!14368 = !DILocation(line: 254, column: 8, scope: !14367)
!14369 = !DILocation(line: 255, column: 9, scope: !14370)
!14370 = distinct !DILexicalBlock(scope: !14366, file: !2035, line: 254, column: 17)
!14371 = !DILocation(line: 258, column: 9, scope: !14370)
!14372 = !DILocation(line: 261, column: 28, scope: !14370)
!14373 = !DILocation(line: 261, column: 10, scope: !14370)
!14374 = !DILocation(line: 261, column: 17, scope: !14370)
!14375 = !DILocation(line: 261, column: 26, scope: !14370)
!14376 = !DILocation(line: 262, column: 4, scope: !14370)
!14377 = !DILocation(line: 263, column: 9, scope: !14367)
!14378 = !DILocation(line: 263, column: 16, scope: !14367)
!14379 = !DILocation(line: 263, column: 28, scope: !14367)
!14380 = !DILocation(line: 264, column: 3, scope: !14367)
!14381 = !DILocation(line: 246, column: 60, scope: !2284)
!14382 = distinct !{!14382, !14357, !14383}
!14383 = !DILocation(line: 265, column: 2, scope: !2285)
!14384 = !DILocation(line: 266, column: 1, scope: !2267)
!14385 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !463, file: !463, line: 1814, type: !6361, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2031, retainedNodes: !14386)
!14386 = !{!14387, !14388}
!14387 = !DILocalVariable(name: "IRQn", arg: 1, scope: !14385, file: !463, line: 1814, type: !930)
!14388 = !DILocalVariable(name: "priority", arg: 2, scope: !14385, file: !463, line: 1814, type: !152)
!14389 = !DILocation(line: 0, scope: !14385)
!14390 = !DILocation(line: 1822, column: 48, scope: !14391)
!14391 = distinct !DILexicalBlock(scope: !14392, file: !463, line: 1821, column: 3)
!14392 = distinct !DILexicalBlock(scope: !14385, file: !463, line: 1816, column: 7)
!14393 = !DILocation(line: 1822, column: 32, scope: !14391)
!14394 = !DILocation(line: 1822, column: 40, scope: !14391)
!14395 = !DILocation(line: 1822, column: 5, scope: !14391)
!14396 = !DILocation(line: 1822, column: 46, scope: !14391)
!14397 = !DILocation(line: 1824, column: 1, scope: !14385)
!14398 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !14316, file: !14316, line: 32, type: !3148, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2236)
!14399 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !14400, file: !14400, line: 215, type: !14297, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2031, retainedNodes: !14401)
!14400 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14401 = !{!14402}
!14402 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !14399, file: !14400, line: 215, type: !2127)
!14403 = !DILocation(line: 0, scope: !14399)
!14404 = !DILocation(line: 217, column: 21, scope: !14399)
!14405 = !DILocation(line: 217, column: 34, scope: !14399)
!14406 = !DILocation(line: 221, column: 21, scope: !14399)
!14407 = !DILocation(line: 221, column: 34, scope: !14399)
!14408 = !DILocation(line: 223, column: 27, scope: !14399)
!14409 = !DILocation(line: 223, column: 33, scope: !14399)
!14410 = !DILocation(line: 224, column: 27, scope: !14399)
!14411 = !DILocation(line: 224, column: 32, scope: !14399)
!14412 = !DILocation(line: 232, column: 16, scope: !14399)
!14413 = !DILocation(line: 232, column: 30, scope: !14399)
!14414 = !DILocation(line: 239, column: 24, scope: !14399)
!14415 = !DILocation(line: 240, column: 1, scope: !14399)
!14416 = distinct !DISubprogram(name: "prepare_multithreading", scope: !2035, file: !2035, line: 399, type: !14417, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2031, retainedNodes: !14419)
!14417 = !DISubroutineType(types: !14418)
!14418 = !{!193}
!14419 = !{!14420}
!14420 = !DILocalVariable(name: "stack_ptr", scope: !14416, file: !2035, line: 401, type: !193)
!14421 = !DILocation(line: 404, column: 2, scope: !14416)
!14422 = !DILocation(line: 416, column: 24, scope: !14416)
!14423 = !DILocation(line: 418, column: 14, scope: !14416)
!14424 = !DILocation(line: 0, scope: !14416)
!14425 = !DILocation(line: 423, column: 2, scope: !14416)
!14426 = !DILocation(line: 424, column: 2, scope: !14416)
!14427 = !DILocation(line: 426, column: 2, scope: !14416)
!14428 = !DILocation(line: 428, column: 2, scope: !14416)
!14429 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !2035, file: !2035, line: 432, type: !14430, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2031, retainedNodes: !14432)
!14430 = !DISubroutineType(types: !14431)
!14431 = !{null, !193}
!14432 = !{!14433}
!14433 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !14429, file: !2035, line: 432, type: !193)
!14434 = !DILocation(line: 0, scope: !14429)
!14435 = !DILocation(line: 435, column: 2, scope: !14429)
!14436 = !DILocation(line: 445, column: 2, scope: !14429)
!14437 = distinct !DISubprogram(name: "bg_thread_main", scope: !2035, file: !2035, line: 277, type: !562, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2031, retainedNodes: !14438)
!14438 = !{!14439, !14440, !14441}
!14439 = !DILocalVariable(name: "unused1", arg: 1, scope: !14437, file: !2035, line: 277, type: !106)
!14440 = !DILocalVariable(name: "unused2", arg: 2, scope: !14437, file: !2035, line: 277, type: !106)
!14441 = !DILocalVariable(name: "unused3", arg: 3, scope: !14437, file: !2035, line: 277, type: !106)
!14442 = !DILocation(line: 0, scope: !14437)
!14443 = !DILocation(line: 291, column: 20, scope: !14437)
!14444 = !DILocation(line: 293, column: 2, scope: !14437)
!14445 = !DILocation(line: 297, column: 2, scope: !14437)
!14446 = !DILocation(line: 305, column: 2, scope: !14437)
!14447 = !DILocation(line: 307, column: 2, scope: !14437)
!14448 = !DILocation(line: 330, column: 8, scope: !14437)
!14449 = !DILocation(line: 333, column: 34, scope: !14437)
!14450 = !DILocation(line: 339, column: 1, scope: !14437)
!14451 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2298, file: !2298, line: 45, type: !14452, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14460)
!14452 = !DISubroutineType(types: !14453)
!14453 = !{null, !14454, !106}
!14454 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !406, line: 103, baseType: !14455)
!14455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14456, size: 32)
!14456 = !DISubroutineType(types: !14457)
!14457 = !{null, !14458, !106}
!14458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14459, size: 32)
!14459 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2303)
!14460 = !{!14461, !14462}
!14461 = !DILocalVariable(name: "user_cb", arg: 1, scope: !14451, file: !2298, line: 45, type: !14454)
!14462 = !DILocalVariable(name: "user_data", arg: 2, scope: !14451, file: !2298, line: 45, type: !106)
!14463 = !DILocation(line: 0, scope: !14451)
!14464 = !DILocation(line: 71, column: 1, scope: !14451)
!14465 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2298, file: !2298, line: 73, type: !14452, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14466)
!14466 = !{!14467, !14468}
!14467 = !DILocalVariable(name: "user_cb", arg: 1, scope: !14465, file: !2298, line: 73, type: !14454)
!14468 = !DILocalVariable(name: "user_data", arg: 2, scope: !14465, file: !2298, line: 73, type: !106)
!14469 = !DILocation(line: 0, scope: !14465)
!14470 = !DILocation(line: 95, column: 1, scope: !14465)
!14471 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2298, file: !2298, line: 97, type: !7374, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !2236)
!14472 = !DILocation(line: 1031, column: 3, scope: !14473, inlinedAt: !14476)
!14473 = distinct !DISubprogram(name: "__get_IPSR", scope: !6321, file: !6321, line: 1027, type: !6408, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14474)
!14474 = !{!14475}
!14475 = !DILocalVariable(name: "result", scope: !14473, file: !6321, line: 1029, type: !152)
!14476 = distinct !DILocation(line: 48, column: 10, scope: !14477, inlinedAt: !14478)
!14477 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7373, file: !7373, line: 46, type: !7374, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !2236)
!14478 = distinct !DILocation(line: 99, column: 9, scope: !14471)
!14479 = !{i64 3756108}
!14480 = !DILocation(line: 0, scope: !14473, inlinedAt: !14476)
!14481 = !DILocation(line: 48, column: 9, scope: !14477, inlinedAt: !14478)
!14482 = !DILocation(line: 99, column: 2, scope: !14471)
!14483 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2298, file: !2298, line: 106, type: !3148, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !2236)
!14484 = !DILocation(line: 108, column: 2, scope: !14483)
!14485 = !DILocation(line: 108, column: 17, scope: !14483)
!14486 = !DILocation(line: 108, column: 30, scope: !14483)
!14487 = !DILocation(line: 109, column: 1, scope: !14483)
!14488 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2298, file: !2298, line: 116, type: !3148, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !2236)
!14489 = !DILocation(line: 118, column: 2, scope: !14488)
!14490 = !DILocation(line: 118, column: 17, scope: !14488)
!14491 = !DILocation(line: 118, column: 30, scope: !14488)
!14492 = !DILocation(line: 119, column: 1, scope: !14488)
!14493 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2298, file: !2298, line: 126, type: !7374, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !2236)
!14494 = !DILocation(line: 128, column: 10, scope: !14493)
!14495 = !DILocation(line: 128, column: 25, scope: !14493)
!14496 = !DILocation(line: 128, column: 38, scope: !14493)
!14497 = !DILocation(line: 128, column: 53, scope: !14493)
!14498 = !DILocation(line: 128, column: 2, scope: !14493)
!14499 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2298, file: !2298, line: 187, type: !14500, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14502)
!14500 = !DISubroutineType(types: !14501)
!14501 = !{!107, !2302, !118}
!14502 = !{!14503, !14504}
!14503 = !DILocalVariable(name: "thread", arg: 1, scope: !14499, file: !2298, line: 187, type: !2302)
!14504 = !DILocalVariable(name: "value", arg: 2, scope: !14499, file: !2298, line: 187, type: !118)
!14505 = !DILocation(line: 0, scope: !14499)
!14506 = !DILocation(line: 190, column: 13, scope: !14507)
!14507 = distinct !DILexicalBlock(scope: !14499, file: !2298, line: 190, column: 6)
!14508 = !DILocation(line: 190, column: 6, scope: !14499)
!14509 = !DILocation(line: 194, column: 10, scope: !14499)
!14510 = !DILocation(line: 194, column: 2, scope: !14499)
!14511 = !DILocation(line: 195, column: 2, scope: !14499)
!14512 = !DILocation(line: 195, column: 47, scope: !14499)
!14513 = !DILocation(line: 199, column: 2, scope: !14499)
!14514 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2298, file: !2298, line: 238, type: !14515, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14517)
!14515 = !DISubroutineType(types: !14516)
!14516 = !{!118, !2302}
!14517 = !{!14518}
!14518 = !DILocalVariable(name: "thread", arg: 1, scope: !14514, file: !2298, line: 238, type: !2302)
!14519 = !DILocation(line: 0, scope: !14514)
!14520 = !DILocation(line: 241, column: 23, scope: !14514)
!14521 = !DILocation(line: 241, column: 2, scope: !14514)
!14522 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2298, file: !2298, line: 248, type: !14523, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14525)
!14523 = !DISubroutineType(types: !14524)
!14524 = !{!107, !2301, !193, !185}
!14525 = !{!14526, !14527, !14528}
!14526 = !DILocalVariable(name: "thread", arg: 1, scope: !14522, file: !2298, line: 248, type: !2301)
!14527 = !DILocalVariable(name: "buf", arg: 2, scope: !14522, file: !2298, line: 248, type: !193)
!14528 = !DILocalVariable(name: "size", arg: 3, scope: !14522, file: !2298, line: 248, type: !185)
!14529 = !DILocation(line: 0, scope: !14522)
!14530 = !DILocation(line: 251, column: 15, scope: !14522)
!14531 = !DILocation(line: 251, column: 2, scope: !14522)
!14532 = !DILocation(line: 252, column: 2, scope: !14522)
!14533 = !DILocation(line: 0, scope: !2297)
!14534 = !DILocation(line: 281, column: 11, scope: !14535)
!14535 = distinct !DILexicalBlock(scope: !2297, file: !2298, line: 281, column: 6)
!14536 = !DILocation(line: 281, column: 20, scope: !14535)
!14537 = !DILocation(line: 275, column: 45, scope: !2297)
!14538 = !DILocation(line: 285, column: 10, scope: !2297)
!14539 = !DILocation(line: 0, scope: !2421)
!14540 = !DILocation(line: 293, column: 39, scope: !14541)
!14541 = distinct !DILexicalBlock(scope: !2421, file: !2298, line: 293, column: 2)
!14542 = !DILocation(line: 293, column: 2, scope: !2421)
!14543 = !DILocation(line: 273, column: 14, scope: !2297)
!14544 = !DILocation(line: 309, column: 2, scope: !2297)
!14545 = !DILocation(line: 309, column: 11, scope: !2297)
!14546 = !DILocation(line: 311, column: 2, scope: !2297)
!14547 = !DILocation(line: 293, column: 26, scope: !14541)
!14548 = !DILocation(line: 294, column: 9, scope: !14549)
!14549 = distinct !DILexicalBlock(scope: !14541, file: !2298, line: 293, column: 54)
!14550 = !DILocation(line: 295, column: 21, scope: !14551)
!14551 = distinct !DILexicalBlock(scope: !14549, file: !2298, line: 295, column: 7)
!14552 = !DILocation(line: 295, column: 28, scope: !14551)
!14553 = !DILocation(line: 295, column: 7, scope: !14549)
!14554 = !DILocation(line: 299, column: 25, scope: !14549)
!14555 = !DILocation(line: 299, column: 41, scope: !14549)
!14556 = !DILocation(line: 300, column: 7, scope: !14549)
!14557 = !DILocation(line: 300, column: 26, scope: !14549)
!14558 = !DILocation(line: 299, column: 10, scope: !14549)
!14559 = !DILocation(line: 299, column: 7, scope: !14549)
!14560 = !DILocation(line: 302, column: 16, scope: !14549)
!14561 = !DILocation(line: 304, column: 20, scope: !14562)
!14562 = distinct !DILexicalBlock(scope: !14549, file: !2298, line: 304, column: 7)
!14563 = !DILocation(line: 304, column: 7, scope: !14549)
!14564 = !DILocation(line: 305, column: 26, scope: !14565)
!14565 = distinct !DILexicalBlock(scope: !14562, file: !2298, line: 304, column: 26)
!14566 = !DILocation(line: 305, column: 42, scope: !14565)
!14567 = !DILocation(line: 305, column: 11, scope: !14565)
!14568 = !DILocation(line: 305, column: 8, scope: !14565)
!14569 = !DILocation(line: 306, column: 3, scope: !14565)
!14570 = !DILocation(line: 293, column: 50, scope: !14541)
!14571 = !DILocation(line: 312, column: 1, scope: !2297)
!14572 = distinct !DISubprogram(name: "copy_bytes", scope: !2298, file: !2298, line: 261, type: !14573, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14575)
!14573 = !DISubroutineType(types: !14574)
!14574 = !{!185, !193, !185, !118, !185}
!14575 = !{!14576, !14577, !14578, !14579, !14580}
!14576 = !DILocalVariable(name: "dest", arg: 1, scope: !14572, file: !2298, line: 261, type: !193)
!14577 = !DILocalVariable(name: "dest_size", arg: 2, scope: !14572, file: !2298, line: 261, type: !185)
!14578 = !DILocalVariable(name: "src", arg: 3, scope: !14572, file: !2298, line: 261, type: !118)
!14579 = !DILocalVariable(name: "src_size", arg: 4, scope: !14572, file: !2298, line: 261, type: !185)
!14580 = !DILocalVariable(name: "bytes_to_copy", scope: !14572, file: !2298, line: 263, type: !185)
!14581 = !DILocation(line: 0, scope: !14572)
!14582 = !DILocation(line: 265, column: 18, scope: !14572)
!14583 = !DILocation(line: 266, column: 2, scope: !14572)
!14584 = !DILocation(line: 268, column: 2, scope: !14572)
!14585 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2298, file: !2298, line: 383, type: !14586, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14588)
!14586 = !DISubroutineType(types: !14587)
!14587 = !{null, !2302}
!14588 = !{!14589}
!14589 = !DILocalVariable(name: "thread", arg: 1, scope: !14585, file: !2298, line: 383, type: !2302)
!14590 = !DILocation(line: 0, scope: !14585)
!14591 = !DILocation(line: 387, column: 2, scope: !14585)
!14592 = !DILocation(line: 388, column: 1, scope: !14585)
!14593 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2298, file: !2298, line: 528, type: !14594, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14601)
!14594 = !DISubroutineType(types: !14595)
!14595 = !{!193, !2302, !14596, !185, !559, !106, !106, !106, !107, !152, !118}
!14596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14597, size: 32)
!14597 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !560, line: 44, baseType: !14598)
!14598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !577, line: 47, size: 8, elements: !14599)
!14599 = !{!14600}
!14600 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !14598, file: !577, line: 48, baseType: !120, size: 8)
!14601 = !{!14602, !14603, !14604, !14605, !14606, !14607, !14608, !14609, !14610, !14611, !14612}
!14602 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14593, file: !2298, line: 528, type: !2302)
!14603 = !DILocalVariable(name: "stack", arg: 2, scope: !14593, file: !2298, line: 529, type: !14596)
!14604 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14593, file: !2298, line: 529, type: !185)
!14605 = !DILocalVariable(name: "entry", arg: 4, scope: !14593, file: !2298, line: 530, type: !559)
!14606 = !DILocalVariable(name: "p1", arg: 5, scope: !14593, file: !2298, line: 531, type: !106)
!14607 = !DILocalVariable(name: "p2", arg: 6, scope: !14593, file: !2298, line: 531, type: !106)
!14608 = !DILocalVariable(name: "p3", arg: 7, scope: !14593, file: !2298, line: 531, type: !106)
!14609 = !DILocalVariable(name: "prio", arg: 8, scope: !14593, file: !2298, line: 532, type: !107)
!14610 = !DILocalVariable(name: "options", arg: 9, scope: !14593, file: !2298, line: 532, type: !152)
!14611 = !DILocalVariable(name: "name", arg: 10, scope: !14593, file: !2298, line: 532, type: !118)
!14612 = !DILocalVariable(name: "stack_ptr", scope: !14593, file: !2298, line: 534, type: !193)
!14613 = !DILocation(line: 0, scope: !14593)
!14614 = !DILocation(line: 536, column: 2, scope: !14615)
!14615 = distinct !DILexicalBlock(scope: !14616, file: !2298, line: 536, column: 2)
!14616 = distinct !DILexicalBlock(scope: !14617, file: !2298, line: 536, column: 2)
!14617 = distinct !DILexicalBlock(scope: !14593, file: !2298, line: 536, column: 2)
!14618 = !DILocation(line: 536, column: 2, scope: !14619)
!14619 = distinct !DILexicalBlock(scope: !14615, file: !2298, line: 536, column: 2)
!14620 = !DILocation(line: 550, column: 28, scope: !14593)
!14621 = !DILocation(line: 550, column: 2, scope: !14593)
!14622 = !DILocation(line: 553, column: 34, scope: !14593)
!14623 = !DILocation(line: 553, column: 2, scope: !14593)
!14624 = !DILocation(line: 554, column: 14, scope: !14593)
!14625 = !DILocation(line: 564, column: 2, scope: !14593)
!14626 = !DILocation(line: 567, column: 14, scope: !14593)
!14627 = !DILocation(line: 567, column: 24, scope: !14593)
!14628 = !DILocation(line: 594, column: 11, scope: !14629)
!14629 = distinct !DILexicalBlock(scope: !14593, file: !2298, line: 594, column: 6)
!14630 = !DILocation(line: 0, scope: !14629)
!14631 = !DILocation(line: 594, column: 6, scope: !14593)
!14632 = !DILocation(line: 595, column: 3, scope: !14633)
!14633 = distinct !DILexicalBlock(scope: !14629, file: !2298, line: 594, column: 20)
!14634 = !DILocation(line: 598, column: 3, scope: !14633)
!14635 = !DILocation(line: 598, column: 52, scope: !14633)
!14636 = !DILocation(line: 599, column: 2, scope: !14633)
!14637 = !DILocation(line: 600, column: 23, scope: !14638)
!14638 = distinct !DILexicalBlock(scope: !14629, file: !2298, line: 599, column: 9)
!14639 = !DILocation(line: 612, column: 7, scope: !14640)
!14640 = distinct !DILexicalBlock(scope: !14593, file: !2298, line: 612, column: 6)
!14641 = !DILocation(line: 612, column: 6, scope: !14593)
!14642 = !DILocation(line: 627, column: 40, scope: !14593)
!14643 = !DILocation(line: 637, column: 2, scope: !14593)
!14644 = !DILocation(line: 613, column: 15, scope: !14645)
!14645 = distinct !DILexicalBlock(scope: !14640, file: !2298, line: 612, column: 17)
!14646 = !DILocation(line: 613, column: 29, scope: !14645)
!14647 = !DILocation(line: 638, column: 1, scope: !14593)
!14648 = distinct !DISubprogram(name: "z_is_idle_thread_entry", scope: !14296, file: !14296, line: 78, type: !14649, scopeLine: 79, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14651)
!14649 = !DISubroutineType(types: !14650)
!14650 = !{!145, !106}
!14651 = !{!14652}
!14652 = !DILocalVariable(name: "entry_point", arg: 1, scope: !14648, file: !14296, line: 78, type: !106)
!14653 = !DILocation(line: 0, scope: !14648)
!14654 = !DILocation(line: 80, column: 21, scope: !14648)
!14655 = !DILocation(line: 80, column: 2, scope: !14648)
!14656 = distinct !DISubprogram(name: "z_waitq_init", scope: !14657, file: !14657, line: 47, type: !14658, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14660)
!14657 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14658 = !DISubroutineType(types: !14659)
!14659 = !{null, !2333}
!14660 = !{!14661}
!14661 = !DILocalVariable(name: "w", arg: 1, scope: !14656, file: !14657, line: 47, type: !2333)
!14662 = !DILocation(line: 0, scope: !14656)
!14663 = !DILocation(line: 49, column: 21, scope: !14656)
!14664 = !DILocation(line: 49, column: 2, scope: !14656)
!14665 = !DILocation(line: 50, column: 1, scope: !14656)
!14666 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2298, file: !2298, line: 791, type: !14667, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14670)
!14667 = !DISubroutineType(types: !14668)
!14668 = !{null, !14669, !107, !152, !32}
!14669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2306, size: 32)
!14670 = !{!14671, !14672, !14673, !14674}
!14671 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14666, file: !2298, line: 791, type: !14669)
!14672 = !DILocalVariable(name: "priority", arg: 2, scope: !14666, file: !2298, line: 791, type: !107)
!14673 = !DILocalVariable(name: "initial_state", arg: 3, scope: !14666, file: !2298, line: 792, type: !152)
!14674 = !DILocalVariable(name: "options", arg: 4, scope: !14666, file: !2298, line: 792, type: !32)
!14675 = !DILocation(line: 0, scope: !14666)
!14676 = !DILocation(line: 795, column: 15, scope: !14666)
!14677 = !DILocation(line: 795, column: 25, scope: !14666)
!14678 = !DILocation(line: 796, column: 30, scope: !14666)
!14679 = !DILocation(line: 796, column: 15, scope: !14666)
!14680 = !DILocation(line: 796, column: 28, scope: !14666)
!14681 = !DILocation(line: 797, column: 30, scope: !14666)
!14682 = !DILocation(line: 797, column: 15, scope: !14666)
!14683 = !DILocation(line: 797, column: 28, scope: !14666)
!14684 = !DILocation(line: 799, column: 22, scope: !14666)
!14685 = !DILocation(line: 799, column: 15, scope: !14666)
!14686 = !DILocation(line: 799, column: 20, scope: !14666)
!14687 = !DILocation(line: 801, column: 15, scope: !14666)
!14688 = !DILocation(line: 801, column: 28, scope: !14666)
!14689 = !DILocation(line: 814, column: 2, scope: !14666)
!14690 = !DILocation(line: 815, column: 1, scope: !14666)
!14691 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2298, file: !2298, line: 449, type: !14692, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14694)
!14692 = !DISubroutineType(types: !14693)
!14693 = !{!193, !2302, !14596, !185}
!14694 = !{!14695, !14696, !14697, !14698, !14699, !14700, !14701, !14702}
!14695 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14691, file: !2298, line: 449, type: !2302)
!14696 = !DILocalVariable(name: "stack", arg: 2, scope: !14691, file: !2298, line: 450, type: !14596)
!14697 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14691, file: !2298, line: 450, type: !185)
!14698 = !DILocalVariable(name: "stack_obj_size", scope: !14691, file: !2298, line: 452, type: !185)
!14699 = !DILocalVariable(name: "stack_buf_size", scope: !14691, file: !2298, line: 452, type: !185)
!14700 = !DILocalVariable(name: "stack_ptr", scope: !14691, file: !2298, line: 453, type: !193)
!14701 = !DILocalVariable(name: "stack_buf_start", scope: !14691, file: !2298, line: 453, type: !193)
!14702 = !DILocalVariable(name: "delta", scope: !14691, file: !2298, line: 454, type: !185)
!14703 = !DILocation(line: 0, scope: !14691)
!14704 = !DILocation(line: 465, column: 20, scope: !14705)
!14705 = distinct !DILexicalBlock(scope: !14691, file: !2298, line: 463, column: 2)
!14706 = !DILocation(line: 466, column: 21, scope: !14705)
!14707 = !DILocation(line: 473, column: 28, scope: !14691)
!14708 = !DILocation(line: 514, column: 33, scope: !14691)
!14709 = !DILocation(line: 514, column: 25, scope: !14691)
!14710 = !DILocation(line: 514, column: 31, scope: !14691)
!14711 = !DILocation(line: 515, column: 25, scope: !14691)
!14712 = !DILocation(line: 515, column: 30, scope: !14691)
!14713 = !DILocation(line: 516, column: 25, scope: !14691)
!14714 = !DILocation(line: 516, column: 31, scope: !14691)
!14715 = !DILocation(line: 520, column: 2, scope: !14691)
!14716 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !577, file: !577, line: 331, type: !14717, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14719)
!14717 = !DISubroutineType(types: !14718)
!14718 = !{!193, !14596}
!14719 = !{!14720}
!14720 = !DILocalVariable(name: "sym", arg: 1, scope: !14716, file: !577, line: 331, type: !14596)
!14721 = !DILocation(line: 0, scope: !14716)
!14722 = !DILocation(line: 333, column: 21, scope: !14716)
!14723 = !DILocation(line: 333, column: 2, scope: !14716)
!14724 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !14725, file: !14725, line: 40, type: !14726, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14728)
!14725 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14726 = !DISubroutineType(types: !14727)
!14727 = !{null, !14669}
!14728 = !{!14729}
!14729 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14724, file: !14725, line: 40, type: !14669)
!14730 = !DILocation(line: 0, scope: !14724)
!14731 = !DILocation(line: 42, column: 31, scope: !14724)
!14732 = !DILocation(line: 42, column: 2, scope: !14724)
!14733 = !DILocation(line: 43, column: 1, scope: !14724)
!14734 = distinct !DISubprogram(name: "z_init_timeout", scope: !14725, file: !14725, line: 25, type: !2359, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14735)
!14735 = !{!14736}
!14736 = !DILocalVariable(name: "to", arg: 1, scope: !14734, file: !14725, line: 25, type: !2361)
!14737 = !DILocation(line: 0, scope: !14734)
!14738 = !DILocation(line: 27, column: 22, scope: !14734)
!14739 = !DILocation(line: 27, column: 2, scope: !14734)
!14740 = !DILocation(line: 28, column: 1, scope: !14734)
!14741 = distinct !DISubprogram(name: "sys_dnode_init", scope: !319, file: !319, line: 211, type: !14742, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14744)
!14742 = !DISubroutineType(types: !14743)
!14743 = !{null, !2408}
!14744 = !{!14745}
!14745 = !DILocalVariable(name: "node", arg: 1, scope: !14741, file: !319, line: 211, type: !2408)
!14746 = !DILocation(line: 0, scope: !14741)
!14747 = !DILocation(line: 213, column: 8, scope: !14741)
!14748 = !DILocation(line: 213, column: 13, scope: !14741)
!14749 = !DILocation(line: 214, column: 8, scope: !14741)
!14750 = !DILocation(line: 214, column: 13, scope: !14741)
!14751 = !DILocation(line: 215, column: 1, scope: !14741)
!14752 = distinct !DISubprogram(name: "sys_dlist_init", scope: !319, file: !319, line: 197, type: !14753, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14756)
!14753 = !DISubroutineType(types: !14754)
!14754 = !{null, !14755}
!14755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2338, size: 32)
!14756 = !{!14757}
!14757 = !DILocalVariable(name: "list", arg: 1, scope: !14752, file: !319, line: 197, type: !14755)
!14758 = !DILocation(line: 0, scope: !14752)
!14759 = !DILocation(line: 199, column: 8, scope: !14752)
!14760 = !DILocation(line: 199, column: 13, scope: !14752)
!14761 = !DILocation(line: 200, column: 8, scope: !14752)
!14762 = !DILocation(line: 200, column: 13, scope: !14752)
!14763 = !DILocation(line: 201, column: 1, scope: !14752)
!14764 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2298, file: !2298, line: 641, type: !14765, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14771)
!14765 = !DISubroutineType(types: !14766)
!14766 = !{!2301, !2302, !14596, !185, !559, !106, !106, !106, !107, !152, !14767}
!14767 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !565, line: 67, baseType: !14768)
!14768 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !565, line: 65, size: 64, elements: !14769)
!14769 = !{!14770}
!14770 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14768, file: !565, line: 66, baseType: !564, size: 64)
!14771 = !{!14772, !14773, !14774, !14775, !14776, !14777, !14778, !14779, !14780, !14781}
!14772 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14764, file: !2298, line: 641, type: !2302)
!14773 = !DILocalVariable(name: "stack", arg: 2, scope: !14764, file: !2298, line: 642, type: !14596)
!14774 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14764, file: !2298, line: 643, type: !185)
!14775 = !DILocalVariable(name: "entry", arg: 4, scope: !14764, file: !2298, line: 643, type: !559)
!14776 = !DILocalVariable(name: "p1", arg: 5, scope: !14764, file: !2298, line: 644, type: !106)
!14777 = !DILocalVariable(name: "p2", arg: 6, scope: !14764, file: !2298, line: 644, type: !106)
!14778 = !DILocalVariable(name: "p3", arg: 7, scope: !14764, file: !2298, line: 644, type: !106)
!14779 = !DILocalVariable(name: "prio", arg: 8, scope: !14764, file: !2298, line: 645, type: !107)
!14780 = !DILocalVariable(name: "options", arg: 9, scope: !14764, file: !2298, line: 645, type: !152)
!14781 = !DILocalVariable(name: "delay", arg: 10, scope: !14764, file: !2298, line: 645, type: !14767)
!14782 = !DILocation(line: 0, scope: !14764)
!14783 = !DILocation(line: 1031, column: 3, scope: !14473, inlinedAt: !14784)
!14784 = distinct !DILocation(line: 48, column: 10, scope: !14477, inlinedAt: !14785)
!14785 = distinct !DILocation(line: 647, column: 2, scope: !14786)
!14786 = distinct !DILexicalBlock(scope: !14787, file: !2298, line: 647, column: 2)
!14787 = distinct !DILexicalBlock(scope: !14764, file: !2298, line: 647, column: 2)
!14788 = !DILocation(line: 0, scope: !14473, inlinedAt: !14784)
!14789 = !DILocation(line: 48, column: 9, scope: !14477, inlinedAt: !14785)
!14790 = !DILocation(line: 647, column: 2, scope: !14787)
!14791 = !DILocation(line: 647, column: 2, scope: !14792)
!14792 = distinct !DILexicalBlock(scope: !14786, file: !2298, line: 647, column: 2)
!14793 = !DILocation(line: 649, column: 2, scope: !14764)
!14794 = !DILocation(line: 652, column: 7, scope: !14795)
!14795 = distinct !DILexicalBlock(scope: !14764, file: !2298, line: 652, column: 6)
!14796 = !DILocation(line: 652, column: 6, scope: !14764)
!14797 = !DILocation(line: 653, column: 3, scope: !14798)
!14798 = distinct !DILexicalBlock(scope: !14795, file: !2298, line: 652, column: 39)
!14799 = !DILocation(line: 654, column: 2, scope: !14798)
!14800 = !DILocation(line: 656, column: 2, scope: !14764)
!14801 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2298, file: !2298, line: 401, type: !14802, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14804)
!14802 = !DISubroutineType(types: !14803)
!14803 = !{null, !2302, !14767}
!14804 = !{!14805, !14806}
!14805 = !DILocalVariable(name: "thread", arg: 1, scope: !14801, file: !2298, line: 401, type: !2302)
!14806 = !DILocalVariable(name: "delay", arg: 2, scope: !14801, file: !2298, line: 401, type: !14767)
!14807 = !DILocation(line: 0, scope: !14801)
!14808 = !DILocation(line: 404, column: 6, scope: !14809)
!14809 = distinct !DILexicalBlock(scope: !14801, file: !2298, line: 404, column: 6)
!14810 = !DILocation(line: 404, column: 6, scope: !14801)
!14811 = !DILocation(line: 405, column: 3, scope: !14812)
!14812 = distinct !DILexicalBlock(scope: !14809, file: !2298, line: 404, column: 38)
!14813 = !DILocation(line: 406, column: 2, scope: !14812)
!14814 = !DILocation(line: 407, column: 3, scope: !14815)
!14815 = distinct !DILexicalBlock(scope: !14809, file: !2298, line: 406, column: 9)
!14816 = !DILocation(line: 413, column: 1, scope: !14801)
!14817 = distinct !DISubprogram(name: "k_thread_start", scope: !4479, file: !4479, line: 205, type: !14818, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14820)
!14818 = !DISubroutineType(types: !14819)
!14819 = !{null, !2301}
!14820 = !{!14821}
!14821 = !DILocalVariable(name: "thread", arg: 1, scope: !14817, file: !4479, line: 205, type: !2301)
!14822 = !DILocation(line: 0, scope: !14817)
!14823 = !DILocation(line: 214, column: 2, scope: !14824)
!14824 = distinct !DILexicalBlock(scope: !14817, file: !4479, line: 214, column: 2)
!14825 = !{i64 2155095906}
!14826 = !DILocation(line: 215, column: 2, scope: !14817)
!14827 = !DILocation(line: 216, column: 1, scope: !14817)
!14828 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14725, file: !14725, line: 47, type: !14802, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14829)
!14829 = !{!14830, !14831}
!14830 = !DILocalVariable(name: "thread", arg: 1, scope: !14828, file: !14725, line: 47, type: !2302)
!14831 = !DILocalVariable(name: "ticks", arg: 2, scope: !14828, file: !14725, line: 47, type: !14767)
!14832 = !DILocation(line: 0, scope: !14828)
!14833 = !DILocation(line: 49, column: 30, scope: !14828)
!14834 = !DILocation(line: 49, column: 2, scope: !14828)
!14835 = !DILocation(line: 50, column: 1, scope: !14828)
!14836 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2298, file: !2298, line: 748, type: !3148, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14837)
!14837 = !{!14838, !14856}
!14838 = !DILocalVariable(name: "thread_data", scope: !14839, file: !2298, line: 750, type: !14840)
!14839 = distinct !DILexicalBlock(scope: !14836, file: !2298, line: 750, column: 2)
!14840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14841, size: 32)
!14841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !406, line: 620, size: 384, elements: !14842)
!14842 = !{!14843, !14844, !14845, !14846, !14847, !14848, !14849, !14850, !14851, !14852, !14853, !14855}
!14843 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !14841, file: !406, line: 621, baseType: !2302, size: 32)
!14844 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !14841, file: !406, line: 622, baseType: !14596, size: 32, offset: 32)
!14845 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !14841, file: !406, line: 623, baseType: !32, size: 32, offset: 64)
!14846 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !14841, file: !406, line: 624, baseType: !559, size: 32, offset: 96)
!14847 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !14841, file: !406, line: 625, baseType: !106, size: 32, offset: 128)
!14848 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !14841, file: !406, line: 626, baseType: !106, size: 32, offset: 160)
!14849 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !14841, file: !406, line: 627, baseType: !106, size: 32, offset: 192)
!14850 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !14841, file: !406, line: 628, baseType: !107, size: 32, offset: 224)
!14851 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !14841, file: !406, line: 629, baseType: !152, size: 32, offset: 256)
!14852 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !14841, file: !406, line: 630, baseType: !904, size: 32, offset: 288)
!14853 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !14841, file: !406, line: 631, baseType: !14854, size: 32, offset: 320)
!14854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3148, size: 32)
!14855 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !14841, file: !406, line: 632, baseType: !118, size: 32, offset: 352)
!14856 = !DILocalVariable(name: "thread_data", scope: !14857, file: !2298, line: 781, type: !14840)
!14857 = distinct !DILexicalBlock(scope: !14836, file: !2298, line: 781, column: 2)
!14858 = !DILocation(line: 0, scope: !14839)
!14859 = !DILocation(line: 750, column: 2, scope: !14860)
!14860 = distinct !DILexicalBlock(scope: !14861, file: !2298, line: 750, column: 2)
!14861 = distinct !DILexicalBlock(scope: !14862, file: !2298, line: 750, column: 2)
!14862 = distinct !DILexicalBlock(scope: !14839, file: !2298, line: 750, column: 2)
!14863 = !DILocation(line: 750, column: 2, scope: !14864)
!14864 = distinct !DILexicalBlock(scope: !14865, file: !2298, line: 750, column: 2)
!14865 = distinct !DILexicalBlock(scope: !14860, file: !2298, line: 750, column: 2)
!14866 = !DILocation(line: 750, column: 2, scope: !14861)
!14867 = !DILocation(line: 750, column: 2, scope: !14839)
!14868 = !DILocation(line: 780, column: 2, scope: !14836)
!14869 = !DILocation(line: 0, scope: !14857)
!14870 = !DILocation(line: 781, column: 2, scope: !14871)
!14871 = distinct !DILexicalBlock(scope: !14872, file: !2298, line: 781, column: 2)
!14872 = distinct !DILexicalBlock(scope: !14873, file: !2298, line: 781, column: 2)
!14873 = distinct !DILexicalBlock(scope: !14857, file: !2298, line: 781, column: 2)
!14874 = !DILocation(line: 752, column: 17, scope: !14875)
!14875 = distinct !DILexicalBlock(scope: !14862, file: !2298, line: 750, column: 38)
!14876 = !DILocation(line: 753, column: 17, scope: !14875)
!14877 = !DILocation(line: 754, column: 17, scope: !14875)
!14878 = !DILocation(line: 755, column: 17, scope: !14875)
!14879 = !DILocation(line: 756, column: 17, scope: !14875)
!14880 = !DILocation(line: 757, column: 17, scope: !14875)
!14881 = !DILocation(line: 758, column: 17, scope: !14875)
!14882 = !DILocation(line: 759, column: 17, scope: !14875)
!14883 = !DILocation(line: 760, column: 17, scope: !14875)
!14884 = !DILocation(line: 761, column: 17, scope: !14875)
!14885 = !DILocation(line: 751, column: 3, scope: !14875)
!14886 = !DILocation(line: 763, column: 16, scope: !14875)
!14887 = !DILocation(line: 763, column: 29, scope: !14875)
!14888 = !DILocation(line: 763, column: 39, scope: !14875)
!14889 = !DILocation(line: 750, column: 2, scope: !14862)
!14890 = !DILocation(line: 750, column: 2, scope: !14865)
!14891 = distinct !{!14891, !14867, !14892}
!14892 = !DILocation(line: 764, column: 2, scope: !14839)
!14893 = !DILocation(line: 781, column: 2, scope: !14894)
!14894 = distinct !DILexicalBlock(scope: !14895, file: !2298, line: 781, column: 2)
!14895 = distinct !DILexicalBlock(scope: !14871, file: !2298, line: 781, column: 2)
!14896 = !DILocation(line: 781, column: 2, scope: !14872)
!14897 = !DILocation(line: 781, column: 2, scope: !14857)
!14898 = !DILocation(line: 787, column: 2, scope: !14836)
!14899 = !DILocation(line: 788, column: 1, scope: !14836)
!14900 = !DILocation(line: 782, column: 20, scope: !14901)
!14901 = distinct !DILexicalBlock(scope: !14902, file: !2298, line: 782, column: 7)
!14902 = distinct !DILexicalBlock(scope: !14873, file: !2298, line: 781, column: 38)
!14903 = !DILocation(line: 782, column: 31, scope: !14901)
!14904 = !DILocation(line: 782, column: 7, scope: !14902)
!14905 = !DILocation(line: 783, column: 37, scope: !14906)
!14906 = distinct !DILexicalBlock(scope: !14901, file: !2298, line: 782, column: 51)
!14907 = !DILocation(line: 784, column: 10, scope: !14906)
!14908 = !DILocation(line: 783, column: 4, scope: !14906)
!14909 = !DILocation(line: 785, column: 3, scope: !14906)
!14910 = !DILocation(line: 781, column: 2, scope: !14873)
!14911 = !DILocation(line: 781, column: 2, scope: !14895)
!14912 = distinct !{!14912, !14897, !14913}
!14913 = !DILocation(line: 786, column: 2, scope: !14857)
!14914 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !8789, file: !8789, line: 403, type: !14915, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14917)
!14915 = !DISubroutineType(types: !14916)
!14916 = !{!566, !566}
!14917 = !{!14918}
!14918 = !DILocalVariable(name: "t", arg: 1, scope: !14914, file: !8789, line: 403, type: !566)
!14919 = !DILocation(line: 0, scope: !14914)
!14920 = !DILocalVariable(name: "t", arg: 1, scope: !14921, file: !8789, line: 102, type: !566)
!14921 = distinct !DISubprogram(name: "z_tmcvt", scope: !8789, file: !8789, line: 102, type: !8796, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14922)
!14922 = !{!14920, !14923, !14924, !14925, !14926, !14927, !14928, !14929, !14930, !14931, !14932}
!14923 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14921, file: !8789, line: 102, type: !152)
!14924 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14921, file: !8789, line: 103, type: !152)
!14925 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14921, file: !8789, line: 103, type: !145)
!14926 = !DILocalVariable(name: "result32", arg: 5, scope: !14921, file: !8789, line: 104, type: !145)
!14927 = !DILocalVariable(name: "round_up", arg: 6, scope: !14921, file: !8789, line: 104, type: !145)
!14928 = !DILocalVariable(name: "round_off", arg: 7, scope: !14921, file: !8789, line: 105, type: !145)
!14929 = !DILocalVariable(name: "mul_ratio", scope: !14921, file: !8789, line: 107, type: !145)
!14930 = !DILocalVariable(name: "div_ratio", scope: !14921, file: !8789, line: 109, type: !145)
!14931 = !DILocalVariable(name: "off", scope: !14921, file: !8789, line: 116, type: !566)
!14932 = !DILocalVariable(name: "rdivisor", scope: !14933, file: !8789, line: 119, type: !152)
!14933 = distinct !DILexicalBlock(scope: !14934, file: !8789, line: 118, column: 18)
!14934 = distinct !DILexicalBlock(scope: !14921, file: !8789, line: 118, column: 6)
!14935 = !DILocation(line: 0, scope: !14921, inlinedAt: !14936)
!14936 = distinct !DILocation(line: 406, column: 9, scope: !14914)
!14937 = !DILocation(line: 145, column: 13, scope: !14938, inlinedAt: !14936)
!14938 = distinct !DILexicalBlock(scope: !14939, file: !8789, line: 144, column: 10)
!14939 = distinct !DILexicalBlock(scope: !14940, file: !8789, line: 142, column: 7)
!14940 = distinct !DILexicalBlock(scope: !14941, file: !8789, line: 141, column: 24)
!14941 = distinct !DILexicalBlock(scope: !14942, file: !8789, line: 141, column: 13)
!14942 = distinct !DILexicalBlock(scope: !14921, file: !8789, line: 134, column: 6)
!14943 = !DILocation(line: 406, column: 2, scope: !14914)
!14944 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2298, file: !2298, line: 817, type: !4357, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14945)
!14945 = !{!14946, !14947, !14948, !14949}
!14946 = !DILocalVariable(name: "entry", arg: 1, scope: !14944, file: !2298, line: 817, type: !559)
!14947 = !DILocalVariable(name: "p1", arg: 2, scope: !14944, file: !2298, line: 818, type: !106)
!14948 = !DILocalVariable(name: "p2", arg: 3, scope: !14944, file: !2298, line: 818, type: !106)
!14949 = !DILocalVariable(name: "p3", arg: 4, scope: !14944, file: !2298, line: 818, type: !106)
!14950 = !DILocation(line: 0, scope: !14944)
!14951 = !DILocation(line: 822, column: 2, scope: !14944)
!14952 = !DILocation(line: 822, column: 17, scope: !14944)
!14953 = !DILocation(line: 822, column: 30, scope: !14944)
!14954 = !DILocation(line: 823, column: 2, scope: !14944)
!14955 = !DILocation(line: 845, column: 2, scope: !14944)
!14956 = distinct !DISubprogram(name: "z_spin_lock_valid", scope: !2298, file: !2298, line: 853, type: !14957, scopeLine: 854, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14960)
!14957 = !DISubroutineType(types: !14958)
!14958 = !{!145, !14959}
!14959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2397, size: 32)
!14960 = !{!14961, !14962}
!14961 = !DILocalVariable(name: "l", arg: 1, scope: !14956, file: !2298, line: 853, type: !14959)
!14962 = !DILocalVariable(name: "thread_cpu", scope: !14956, file: !2298, line: 855, type: !22)
!14963 = !DILocation(line: 0, scope: !14956)
!14964 = !DILocation(line: 855, column: 28, scope: !14956)
!14965 = !DILocation(line: 857, column: 17, scope: !14966)
!14966 = distinct !DILexicalBlock(scope: !14956, file: !2298, line: 857, column: 6)
!14967 = !DILocation(line: 857, column: 6, scope: !14956)
!14968 = !DILocation(line: 858, column: 19, scope: !14969)
!14969 = distinct !DILexicalBlock(scope: !14970, file: !2298, line: 858, column: 7)
!14970 = distinct !DILexicalBlock(scope: !14966, file: !2298, line: 857, column: 24)
!14971 = !DILocation(line: 858, column: 42, scope: !14969)
!14972 = !DILocation(line: 858, column: 28, scope: !14969)
!14973 = !DILocation(line: 858, column: 25, scope: !14969)
!14974 = !DILocation(line: 858, column: 7, scope: !14970)
!14975 = !DILocation(line: 862, column: 2, scope: !14956)
!14976 = !DILocation(line: 863, column: 1, scope: !14956)
!14977 = distinct !DISubprogram(name: "z_spin_unlock_valid", scope: !2298, file: !2298, line: 865, type: !14957, scopeLine: 866, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14978)
!14978 = !{!14979}
!14979 = !DILocalVariable(name: "l", arg: 1, scope: !14977, file: !2298, line: 865, type: !14959)
!14980 = !DILocation(line: 0, scope: !14977)
!14981 = !DILocation(line: 867, column: 9, scope: !14982)
!14982 = distinct !DILexicalBlock(scope: !14977, file: !2298, line: 867, column: 6)
!14983 = !DILocation(line: 867, column: 38, scope: !14982)
!14984 = !DILocation(line: 867, column: 24, scope: !14982)
!14985 = !DILocation(line: 867, column: 54, scope: !14982)
!14986 = !DILocation(line: 867, column: 43, scope: !14982)
!14987 = !DILocation(line: 867, column: 41, scope: !14982)
!14988 = !DILocation(line: 867, column: 20, scope: !14982)
!14989 = !DILocation(line: 867, column: 6, scope: !14977)
!14990 = !DILocation(line: 870, column: 16, scope: !14977)
!14991 = !DILocation(line: 871, column: 2, scope: !14977)
!14992 = !DILocation(line: 872, column: 1, scope: !14977)
!14993 = distinct !DISubprogram(name: "z_spin_lock_set_owner", scope: !2298, file: !2298, line: 874, type: !14994, scopeLine: 875, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14996)
!14994 = !DISubroutineType(types: !14995)
!14995 = !{null, !14959}
!14996 = !{!14997}
!14997 = !DILocalVariable(name: "l", arg: 1, scope: !14993, file: !2298, line: 874, type: !14959)
!14998 = !DILocation(line: 0, scope: !14993)
!14999 = !DILocation(line: 876, column: 32, scope: !14993)
!15000 = !DILocation(line: 876, column: 18, scope: !14993)
!15001 = !DILocation(line: 876, column: 48, scope: !14993)
!15002 = !DILocation(line: 876, column: 37, scope: !14993)
!15003 = !DILocation(line: 876, column: 35, scope: !14993)
!15004 = !DILocation(line: 876, column: 5, scope: !14993)
!15005 = !DILocation(line: 876, column: 16, scope: !14993)
!15006 = !DILocation(line: 877, column: 1, scope: !14993)
!15007 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2298, file: !2298, line: 888, type: !15008, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !15010)
!15008 = !DISubroutineType(types: !15009)
!15009 = !{!107, !2302}
!15010 = !{!15011}
!15011 = !DILocalVariable(name: "thread", arg: 1, scope: !15007, file: !2298, line: 888, type: !2302)
!15012 = !DILocation(line: 0, scope: !15007)
!15013 = !DILocation(line: 893, column: 2, scope: !15007)
!15014 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2298, file: !2298, line: 897, type: !15015, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !15017)
!15015 = !DISubroutineType(types: !15016)
!15016 = !{!107, !2302, !32}
!15017 = !{!15018, !15019}
!15018 = !DILocalVariable(name: "thread", arg: 1, scope: !15014, file: !2298, line: 897, type: !2302)
!15019 = !DILocalVariable(name: "options", arg: 2, scope: !15014, file: !2298, line: 897, type: !32)
!15020 = !DILocation(line: 0, scope: !15014)
!15021 = !DILocation(line: 902, column: 2, scope: !15014)
!15022 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2298, file: !2298, line: 1072, type: !15023, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !15028)
!15023 = !DISubroutineType(types: !15024)
!15024 = !{!107, !2301, !15025}
!15025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15026, size: 32)
!15026 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !309, line: 234, baseType: !15027)
!15027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !309, line: 192, elements: !2236)
!15028 = !{!15029, !15030}
!15029 = !DILocalVariable(name: "thread", arg: 1, scope: !15022, file: !2298, line: 1072, type: !2301)
!15030 = !DILocalVariable(name: "stats", arg: 2, scope: !15022, file: !2298, line: 1073, type: !15025)
!15031 = !DILocation(line: 0, scope: !15022)
!15032 = !DILocation(line: 1075, column: 14, scope: !15033)
!15033 = distinct !DILexicalBlock(scope: !15022, file: !2298, line: 1075, column: 6)
!15034 = !DILocation(line: 1075, column: 23, scope: !15033)
!15035 = !DILocation(line: 1086, column: 1, scope: !15022)
!15036 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2298, file: !2298, line: 1088, type: !15037, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !15039)
!15037 = !DISubroutineType(types: !15038)
!15038 = !{!107, !15025}
!15039 = !{!15040}
!15040 = !DILocalVariable(name: "stats", arg: 1, scope: !15036, file: !2298, line: 1088, type: !15025)
!15041 = !DILocation(line: 0, scope: !15036)
!15042 = !DILocation(line: 1094, column: 12, scope: !15043)
!15043 = distinct !DILexicalBlock(scope: !15036, file: !2298, line: 1094, column: 6)
!15044 = !DILocation(line: 1120, column: 1, scope: !15036)
!15045 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !15046, file: !15046, line: 20, type: !3148, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3129, retainedNodes: !2236)
!15046 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15047 = !DILocation(line: 30, column: 2, scope: !15045)
!15048 = !DILocation(line: 31, column: 1, scope: !15045)
!15049 = distinct !DISubprogram(name: "idle", scope: !15046, file: !15046, line: 33, type: !562, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3129, retainedNodes: !15050)
!15050 = !{!15051, !15052, !15053}
!15051 = !DILocalVariable(name: "unused1", arg: 1, scope: !15049, file: !15046, line: 33, type: !106)
!15052 = !DILocalVariable(name: "unused2", arg: 2, scope: !15049, file: !15046, line: 33, type: !106)
!15053 = !DILocalVariable(name: "unused3", arg: 3, scope: !15049, file: !15046, line: 33, type: !106)
!15054 = !DILocation(line: 0, scope: !15049)
!15055 = !DILocation(line: 39, column: 2, scope: !15056)
!15056 = distinct !DILexicalBlock(scope: !15057, file: !15046, line: 39, column: 2)
!15057 = distinct !DILexicalBlock(scope: !15049, file: !15046, line: 39, column: 2)
!15058 = !DILocation(line: 39, column: 2, scope: !15057)
!15059 = !DILocation(line: 39, column: 2, scope: !15060)
!15060 = distinct !DILexicalBlock(scope: !15056, file: !15046, line: 39, column: 2)
!15061 = !DILocation(line: 55, column: 2, scope: !15062, inlinedAt: !15066)
!15062 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6002, file: !6002, line: 42, type: !6003, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3129, retainedNodes: !15063)
!15063 = !{!15064, !15065}
!15064 = !DILocalVariable(name: "key", scope: !15062, file: !6002, line: 44, type: !32)
!15065 = !DILocalVariable(name: "tmp", scope: !15062, file: !6002, line: 53, type: !32)
!15066 = distinct !DILocation(line: 62, column: 10, scope: !15067)
!15067 = distinct !DILexicalBlock(scope: !15049, file: !15046, line: 41, column: 15)
!15068 = !{i64 2282860}
!15069 = !DILocation(line: 0, scope: !15062, inlinedAt: !15066)
!15070 = !DILocation(line: 86, column: 3, scope: !15067)
!15071 = !DILocation(line: 41, column: 2, scope: !15049)
!15072 = distinct !{!15072, !15071, !15073}
!15073 = !DILocation(line: 105, column: 2, scope: !15049)
!15074 = distinct !DISubprogram(name: "k_cpu_idle", scope: !406, file: !406, line: 5627, type: !3148, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3129, retainedNodes: !2236)
!15075 = !DILocation(line: 5629, column: 2, scope: !15074)
!15076 = !DILocation(line: 5630, column: 1, scope: !15074)
!15077 = !DISubprogram(name: "arch_cpu_idle", scope: !560, file: !560, line: 167, type: !3148, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2236)
!15078 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2536, file: !2536, line: 93, type: !15079, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15081)
!15079 = !DISubroutineType(types: !15080)
!15080 = !{!904, !2428, !2428}
!15081 = !{!15082, !15083, !15084, !15085}
!15082 = !DILocalVariable(name: "thread_1", arg: 1, scope: !15078, file: !2536, line: 93, type: !2428)
!15083 = !DILocalVariable(name: "thread_2", arg: 2, scope: !15078, file: !2536, line: 94, type: !2428)
!15084 = !DILocalVariable(name: "b1", scope: !15078, file: !2536, line: 97, type: !904)
!15085 = !DILocalVariable(name: "b2", scope: !15078, file: !2536, line: 98, type: !904)
!15086 = !DILocation(line: 0, scope: !15078)
!15087 = !DILocation(line: 97, column: 30, scope: !15078)
!15088 = !DILocation(line: 98, column: 30, scope: !15078)
!15089 = !DILocation(line: 100, column: 9, scope: !15090)
!15090 = distinct !DILexicalBlock(scope: !15078, file: !2536, line: 100, column: 6)
!15091 = !DILocation(line: 100, column: 6, scope: !15078)
!15092 = !DILocation(line: 125, column: 1, scope: !15078)
!15093 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2536, file: !2536, line: 428, type: !15094, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15096)
!15094 = !DISubroutineType(types: !15095)
!15095 = !{null, !2428}
!15096 = !{!15097}
!15097 = !DILocalVariable(name: "curr", arg: 1, scope: !15093, file: !2536, line: 428, type: !2428)
!15098 = !DILocation(line: 0, scope: !15093)
!15099 = !DILocation(line: 434, column: 6, scope: !15100)
!15100 = distinct !DILexicalBlock(scope: !15093, file: !2536, line: 434, column: 6)
!15101 = !DILocation(line: 434, column: 23, scope: !15100)
!15102 = !DILocation(line: 434, column: 6, scope: !15093)
!15103 = !DILocation(line: 435, column: 50, scope: !15104)
!15104 = distinct !DILexicalBlock(scope: !15100, file: !2536, line: 434, column: 29)
!15105 = !DILocation(line: 435, column: 48, scope: !15104)
!15106 = !DILocation(line: 435, column: 29, scope: !15104)
!15107 = !DILocation(line: 436, column: 24, scope: !15104)
!15108 = !DILocation(line: 436, column: 3, scope: !15104)
!15109 = !DILocation(line: 437, column: 2, scope: !15104)
!15110 = !DILocation(line: 438, column: 1, scope: !15093)
!15111 = distinct !DISubprogram(name: "slice_time", scope: !2536, file: !2536, line: 407, type: !15112, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15114)
!15112 = !DISubroutineType(types: !15113)
!15113 = !{!107, !2428}
!15114 = !{!15115, !15116}
!15115 = !DILocalVariable(name: "curr", arg: 1, scope: !15111, file: !2536, line: 407, type: !2428)
!15116 = !DILocalVariable(name: "ret", scope: !15111, file: !2536, line: 409, type: !107)
!15117 = !DILocation(line: 0, scope: !15111)
!15118 = !DILocation(line: 409, column: 12, scope: !15111)
!15119 = !DILocation(line: 416, column: 2, scope: !15111)
!15120 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2536, file: !2536, line: 440, type: !15121, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15123)
!15121 = !DISubroutineType(types: !15122)
!15122 = !{null, !904, !107}
!15123 = !{!15124, !15125, !15126, !15132}
!15124 = !DILocalVariable(name: "slice", arg: 1, scope: !15120, file: !2536, line: 440, type: !904)
!15125 = !DILocalVariable(name: "prio", arg: 2, scope: !15120, file: !2536, line: 440, type: !107)
!15126 = !DILocalVariable(name: "__i", scope: !15127, file: !2536, line: 442, type: !15128)
!15127 = distinct !DILexicalBlock(scope: !15120, file: !2536, line: 442, column: 2)
!15128 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !420, line: 106, baseType: !15129)
!15129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !420, line: 32, size: 32, elements: !15130)
!15130 = !{!15131}
!15131 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !15129, file: !420, line: 33, baseType: !107, size: 32)
!15132 = !DILocalVariable(name: "__key", scope: !15127, file: !2536, line: 442, type: !15128)
!15133 = !DILocation(line: 0, scope: !15120)
!15134 = !DILocation(line: 0, scope: !15127)
!15135 = !DILocalVariable(name: "l", arg: 1, scope: !15136, file: !420, line: 136, type: !15139)
!15136 = distinct !DISubprogram(name: "k_spin_lock", scope: !420, file: !420, line: 136, type: !15137, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15140)
!15137 = !DISubroutineType(types: !15138)
!15138 = !{!15128, !15139}
!15139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2523, size: 32)
!15140 = !{!15135, !15141}
!15141 = !DILocalVariable(name: "k", scope: !15136, file: !420, line: 139, type: !15128)
!15142 = !DILocation(line: 0, scope: !15136, inlinedAt: !15143)
!15143 = distinct !DILocation(line: 442, column: 2, scope: !15127)
!15144 = !DILocation(line: 55, column: 2, scope: !15145, inlinedAt: !15149)
!15145 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6002, file: !6002, line: 42, type: !6003, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15146)
!15146 = !{!15147, !15148}
!15147 = !DILocalVariable(name: "key", scope: !15145, file: !6002, line: 44, type: !32)
!15148 = !DILocalVariable(name: "tmp", scope: !15145, file: !6002, line: 53, type: !32)
!15149 = distinct !DILocation(line: 145, column: 10, scope: !15136, inlinedAt: !15143)
!15150 = !{i64 2326831}
!15151 = !DILocation(line: 0, scope: !15145, inlinedAt: !15149)
!15152 = !DILocation(line: 148, column: 2, scope: !15153, inlinedAt: !15143)
!15153 = distinct !DILexicalBlock(scope: !15154, file: !420, line: 148, column: 2)
!15154 = distinct !DILexicalBlock(scope: !15136, file: !420, line: 148, column: 2)
!15155 = !DILocation(line: 148, column: 2, scope: !15154, inlinedAt: !15143)
!15156 = !DILocation(line: 148, column: 2, scope: !15157, inlinedAt: !15143)
!15157 = distinct !DILexicalBlock(scope: !15153, file: !420, line: 148, column: 2)
!15158 = !DILocation(line: 160, column: 2, scope: !15136, inlinedAt: !15143)
!15159 = !DILocation(line: 443, column: 29, scope: !15160)
!15160 = distinct !DILexicalBlock(scope: !15161, file: !2536, line: 442, column: 26)
!15161 = distinct !DILexicalBlock(scope: !15127, file: !2536, line: 442, column: 2)
!15162 = !DILocation(line: 444, column: 17, scope: !15160)
!15163 = !DILocation(line: 445, column: 51, scope: !15164)
!15164 = distinct !DILexicalBlock(scope: !15160, file: !2536, line: 445, column: 7)
!15165 = !DILocation(line: 445, column: 7, scope: !15160)
!15166 = !DILocation(line: 0, scope: !15160)
!15167 = !DILocation(line: 451, column: 18, scope: !15160)
!15168 = !DILocation(line: 452, column: 3, scope: !15160)
!15169 = !DILocalVariable(name: "key", arg: 2, scope: !15170, file: !420, line: 190, type: !15128)
!15170 = distinct !DISubprogram(name: "k_spin_unlock", scope: !420, file: !420, line: 189, type: !15171, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15173)
!15171 = !DISubroutineType(types: !15172)
!15172 = !{null, !15139, !15128}
!15173 = !{!15174, !15169}
!15174 = !DILocalVariable(name: "l", arg: 1, scope: !15170, file: !420, line: 189, type: !15139)
!15175 = !DILocation(line: 0, scope: !15170, inlinedAt: !15176)
!15176 = distinct !DILocation(line: 442, column: 2, scope: !15161)
!15177 = !DILocation(line: 194, column: 2, scope: !15178, inlinedAt: !15176)
!15178 = distinct !DILexicalBlock(scope: !15179, file: !420, line: 194, column: 2)
!15179 = distinct !DILexicalBlock(scope: !15170, file: !420, line: 194, column: 2)
!15180 = !DILocation(line: 194, column: 2, scope: !15179, inlinedAt: !15176)
!15181 = !DILocation(line: 194, column: 2, scope: !15182, inlinedAt: !15176)
!15182 = distinct !DILexicalBlock(scope: !15178, file: !420, line: 194, column: 2)
!15183 = !DILocalVariable(name: "key", arg: 1, scope: !15184, file: !6002, line: 84, type: !32)
!15184 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6002, file: !6002, line: 84, type: !6013, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15185)
!15185 = !{!15183}
!15186 = !DILocation(line: 0, scope: !15184, inlinedAt: !15187)
!15187 = distinct !DILocation(line: 215, column: 2, scope: !15170, inlinedAt: !15176)
!15188 = !DILocation(line: 95, column: 2, scope: !15184, inlinedAt: !15187)
!15189 = !{i64 2327648}
!15190 = !DILocation(line: 454, column: 1, scope: !15120)
!15191 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !8789, file: !8789, line: 389, type: !7608, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15192)
!15192 = !{!15193}
!15193 = !DILocalVariable(name: "t", arg: 1, scope: !15191, file: !8789, line: 389, type: !152)
!15194 = !DILocation(line: 0, scope: !15191)
!15195 = !DILocalVariable(name: "t", arg: 1, scope: !15196, file: !8789, line: 102, type: !566)
!15196 = distinct !DISubprogram(name: "z_tmcvt", scope: !8789, file: !8789, line: 102, type: !8796, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15197)
!15197 = !{!15195, !15198, !15199, !15200, !15201, !15202, !15203, !15204, !15205, !15206, !15207}
!15198 = !DILocalVariable(name: "from_hz", arg: 2, scope: !15196, file: !8789, line: 102, type: !152)
!15199 = !DILocalVariable(name: "to_hz", arg: 3, scope: !15196, file: !8789, line: 103, type: !152)
!15200 = !DILocalVariable(name: "const_hz", arg: 4, scope: !15196, file: !8789, line: 103, type: !145)
!15201 = !DILocalVariable(name: "result32", arg: 5, scope: !15196, file: !8789, line: 104, type: !145)
!15202 = !DILocalVariable(name: "round_up", arg: 6, scope: !15196, file: !8789, line: 104, type: !145)
!15203 = !DILocalVariable(name: "round_off", arg: 7, scope: !15196, file: !8789, line: 105, type: !145)
!15204 = !DILocalVariable(name: "mul_ratio", scope: !15196, file: !8789, line: 107, type: !145)
!15205 = !DILocalVariable(name: "div_ratio", scope: !15196, file: !8789, line: 109, type: !145)
!15206 = !DILocalVariable(name: "off", scope: !15196, file: !8789, line: 116, type: !566)
!15207 = !DILocalVariable(name: "rdivisor", scope: !15208, file: !8789, line: 119, type: !152)
!15208 = distinct !DILexicalBlock(scope: !15209, file: !8789, line: 118, column: 18)
!15209 = distinct !DILexicalBlock(scope: !15196, file: !8789, line: 118, column: 6)
!15210 = !DILocation(line: 0, scope: !15196, inlinedAt: !15211)
!15211 = distinct !DILocation(line: 392, column: 9, scope: !15191)
!15212 = !DILocation(line: 143, column: 25, scope: !15213, inlinedAt: !15211)
!15213 = distinct !DILexicalBlock(scope: !15214, file: !8789, line: 142, column: 17)
!15214 = distinct !DILexicalBlock(scope: !15215, file: !8789, line: 142, column: 7)
!15215 = distinct !DILexicalBlock(scope: !15216, file: !8789, line: 141, column: 24)
!15216 = distinct !DILexicalBlock(scope: !15217, file: !8789, line: 141, column: 13)
!15217 = distinct !DILexicalBlock(scope: !15196, file: !8789, line: 134, column: 6)
!15218 = !DILocation(line: 392, column: 2, scope: !15191)
!15219 = distinct !DISubprogram(name: "z_time_slice", scope: !2536, file: !2536, line: 502, type: !9235, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15220)
!15220 = !{!15221, !15222}
!15221 = !DILocalVariable(name: "ticks", arg: 1, scope: !15219, file: !2536, line: 502, type: !107)
!15222 = !DILocalVariable(name: "key", scope: !15219, file: !2536, line: 511, type: !15128)
!15223 = !DILocation(line: 0, scope: !15219)
!15224 = !DILocation(line: 0, scope: !15136, inlinedAt: !15225)
!15225 = distinct !DILocation(line: 511, column: 25, scope: !15219)
!15226 = !DILocation(line: 55, column: 2, scope: !15145, inlinedAt: !15227)
!15227 = distinct !DILocation(line: 145, column: 10, scope: !15136, inlinedAt: !15225)
!15228 = !DILocation(line: 0, scope: !15145, inlinedAt: !15227)
!15229 = !DILocation(line: 148, column: 2, scope: !15153, inlinedAt: !15225)
!15230 = !DILocation(line: 148, column: 2, scope: !15154, inlinedAt: !15225)
!15231 = !DILocation(line: 148, column: 2, scope: !15157, inlinedAt: !15225)
!15232 = !DILocation(line: 160, column: 2, scope: !15136, inlinedAt: !15225)
!15233 = !DILocation(line: 514, column: 6, scope: !15234)
!15234 = distinct !DILexicalBlock(scope: !15219, file: !2536, line: 514, column: 6)
!15235 = !DILocation(line: 514, column: 25, scope: !15234)
!15236 = !DILocation(line: 514, column: 22, scope: !15234)
!15237 = !DILocation(line: 514, column: 6, scope: !15219)
!15238 = !DILocation(line: 515, column: 3, scope: !15239)
!15239 = distinct !DILexicalBlock(scope: !15234, file: !2536, line: 514, column: 35)
!15240 = !DILocation(line: 0, scope: !15170, inlinedAt: !15241)
!15241 = distinct !DILocation(line: 516, column: 3, scope: !15239)
!15242 = !DILocation(line: 194, column: 2, scope: !15178, inlinedAt: !15241)
!15243 = !DILocation(line: 194, column: 2, scope: !15179, inlinedAt: !15241)
!15244 = !DILocation(line: 194, column: 2, scope: !15182, inlinedAt: !15241)
!15245 = !DILocation(line: 0, scope: !15184, inlinedAt: !15246)
!15246 = distinct !DILocation(line: 215, column: 2, scope: !15170, inlinedAt: !15241)
!15247 = !DILocation(line: 95, column: 2, scope: !15184, inlinedAt: !15246)
!15248 = !DILocation(line: 517, column: 3, scope: !15239)
!15249 = !DILocation(line: 519, column: 18, scope: !15219)
!15250 = !DILocation(line: 522, column: 6, scope: !15251)
!15251 = distinct !DILexicalBlock(scope: !15219, file: !2536, line: 522, column: 6)
!15252 = !DILocation(line: 522, column: 27, scope: !15251)
!15253 = !DILocation(line: 522, column: 30, scope: !15251)
!15254 = !DILocation(line: 522, column: 6, scope: !15219)
!15255 = !DILocation(line: 523, column: 30, scope: !15256)
!15256 = distinct !DILexicalBlock(scope: !15257, file: !2536, line: 523, column: 7)
!15257 = distinct !DILexicalBlock(scope: !15251, file: !2536, line: 522, column: 51)
!15258 = !DILocation(line: 523, column: 13, scope: !15256)
!15259 = !DILocation(line: 523, column: 7, scope: !15257)
!15260 = !DILocation(line: 530, column: 10, scope: !15261)
!15261 = distinct !DILexicalBlock(scope: !15256, file: !2536, line: 523, column: 43)
!15262 = !DILocation(line: 531, column: 3, scope: !15261)
!15263 = !DILocation(line: 532, column: 30, scope: !15264)
!15264 = distinct !DILexicalBlock(scope: !15256, file: !2536, line: 531, column: 10)
!15265 = !DILocation(line: 535, column: 29, scope: !15266)
!15266 = distinct !DILexicalBlock(scope: !15251, file: !2536, line: 534, column: 9)
!15267 = !DILocation(line: 0, scope: !15170, inlinedAt: !15268)
!15268 = distinct !DILocation(line: 537, column: 2, scope: !15219)
!15269 = !DILocation(line: 194, column: 2, scope: !15178, inlinedAt: !15268)
!15270 = !DILocation(line: 194, column: 2, scope: !15179, inlinedAt: !15268)
!15271 = !DILocation(line: 194, column: 2, scope: !15182, inlinedAt: !15268)
!15272 = !DILocation(line: 0, scope: !15184, inlinedAt: !15273)
!15273 = distinct !DILocation(line: 215, column: 2, scope: !15170, inlinedAt: !15268)
!15274 = !DILocation(line: 95, column: 2, scope: !15184, inlinedAt: !15273)
!15275 = !DILocation(line: 538, column: 1, scope: !15219)
!15276 = distinct !DISubprogram(name: "sliceable", scope: !2536, file: !2536, line: 468, type: !15277, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15279)
!15277 = !DISubroutineType(types: !15278)
!15278 = !{!145, !2428}
!15279 = !{!15280, !15281}
!15280 = !DILocalVariable(name: "thread", arg: 1, scope: !15276, file: !2536, line: 468, type: !2428)
!15281 = !DILocalVariable(name: "ret", scope: !15276, file: !2536, line: 470, type: !145)
!15282 = !DILocation(line: 0, scope: !15276)
!15283 = !DILocation(line: 470, column: 13, scope: !15276)
!15284 = !DILocation(line: 471, column: 3, scope: !15276)
!15285 = !DILocation(line: 471, column: 7, scope: !15276)
!15286 = !DILocation(line: 472, column: 3, scope: !15276)
!15287 = !DILocation(line: 472, column: 37, scope: !15276)
!15288 = !DILocation(line: 472, column: 24, scope: !15276)
!15289 = !DILocation(line: 472, column: 43, scope: !15276)
!15290 = !DILocation(line: 472, column: 7, scope: !15276)
!15291 = !DILocation(line: 473, column: 3, scope: !15276)
!15292 = !DILocation(line: 473, column: 7, scope: !15276)
!15293 = !DILocation(line: 473, column: 6, scope: !15276)
!15294 = !DILocation(line: 479, column: 2, scope: !15276)
!15295 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2536, file: !2536, line: 482, type: !15296, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15298)
!15296 = !DISubroutineType(types: !15297)
!15297 = !{!15128, !15128}
!15298 = !{!15299, !15300}
!15299 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !15295, file: !2536, line: 482, type: !15128)
!15300 = !DILocalVariable(name: "curr", scope: !15295, file: !2536, line: 484, type: !2428)
!15301 = !DILocation(line: 0, scope: !15295)
!15302 = !DILocation(line: 484, column: 26, scope: !15295)
!15303 = !DILocation(line: 493, column: 7, scope: !15304)
!15304 = distinct !DILexicalBlock(scope: !15295, file: !2536, line: 493, column: 6)
!15305 = !DILocation(line: 493, column: 6, scope: !15295)
!15306 = !DILocation(line: 494, column: 3, scope: !15307)
!15307 = distinct !DILexicalBlock(scope: !15304, file: !2536, line: 493, column: 49)
!15308 = !DILocation(line: 495, column: 2, scope: !15307)
!15309 = !DILocation(line: 496, column: 2, scope: !15295)
!15310 = !DILocation(line: 499, column: 1, scope: !15295)
!15311 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !14296, file: !14296, line: 106, type: !15277, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15312)
!15312 = !{!15313, !15314}
!15313 = !DILocalVariable(name: "thread", arg: 1, scope: !15311, file: !14296, line: 106, type: !2428)
!15314 = !DILocalVariable(name: "state", scope: !15311, file: !14296, line: 108, type: !195)
!15315 = !DILocation(line: 0, scope: !15311)
!15316 = !DILocation(line: 108, column: 31, scope: !15311)
!15317 = !DILocation(line: 110, column: 16, scope: !15311)
!15318 = !DILocation(line: 111, column: 41, scope: !15311)
!15319 = !DILocation(line: 110, column: 2, scope: !15311)
!15320 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2536, file: !2536, line: 393, type: !15094, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15321)
!15321 = !{!15322}
!15322 = !DILocalVariable(name: "thread", arg: 1, scope: !15320, file: !2536, line: 393, type: !2428)
!15323 = !DILocation(line: 0, scope: !15320)
!15324 = !DILocation(line: 395, column: 6, scope: !15325)
!15325 = distinct !DILexicalBlock(scope: !15320, file: !2536, line: 395, column: 6)
!15326 = !DILocation(line: 395, column: 6, scope: !15320)
!15327 = !DILocalVariable(name: "thread", arg: 1, scope: !15328, file: !2536, line: 264, type: !2428)
!15328 = distinct !DISubprogram(name: "dequeue_thread", scope: !2536, file: !2536, line: 264, type: !15094, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15329)
!15329 = !{!15327}
!15330 = !DILocation(line: 0, scope: !15328, inlinedAt: !15331)
!15331 = distinct !DILocation(line: 396, column: 3, scope: !15332)
!15332 = distinct !DILexicalBlock(scope: !15325, file: !2536, line: 395, column: 34)
!15333 = !DILocation(line: 266, column: 15, scope: !15328, inlinedAt: !15331)
!15334 = !DILocation(line: 266, column: 28, scope: !15328, inlinedAt: !15331)
!15335 = !DILocalVariable(name: "thread", arg: 1, scope: !15336, file: !2536, line: 232, type: !2428)
!15336 = distinct !DISubprogram(name: "runq_remove", scope: !2536, file: !2536, line: 232, type: !15094, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15337)
!15337 = !{!15335}
!15338 = !DILocation(line: 0, scope: !15336, inlinedAt: !15339)
!15339 = distinct !DILocation(line: 268, column: 3, scope: !15340, inlinedAt: !15331)
!15340 = distinct !DILexicalBlock(scope: !15341, file: !2536, line: 267, column: 35)
!15341 = distinct !DILexicalBlock(scope: !15328, file: !2536, line: 267, column: 6)
!15342 = !DILocation(line: 234, column: 2, scope: !15336, inlinedAt: !15339)
!15343 = !DILocation(line: 397, column: 2, scope: !15332)
!15344 = !DILocalVariable(name: "thread", arg: 1, scope: !15345, file: !2536, line: 250, type: !2428)
!15345 = distinct !DISubprogram(name: "queue_thread", scope: !2536, file: !2536, line: 250, type: !15094, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15346)
!15346 = !{!15344}
!15347 = !DILocation(line: 0, scope: !15345, inlinedAt: !15348)
!15348 = distinct !DILocation(line: 398, column: 2, scope: !15320)
!15349 = !DILocation(line: 252, column: 15, scope: !15345, inlinedAt: !15348)
!15350 = !DILocation(line: 252, column: 28, scope: !15345, inlinedAt: !15348)
!15351 = !DILocalVariable(name: "thread", arg: 1, scope: !15352, file: !2536, line: 227, type: !2428)
!15352 = distinct !DISubprogram(name: "runq_add", scope: !2536, file: !2536, line: 227, type: !15094, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15353)
!15353 = !{!15351}
!15354 = !DILocation(line: 0, scope: !15352, inlinedAt: !15355)
!15355 = distinct !DILocation(line: 254, column: 3, scope: !15356, inlinedAt: !15348)
!15356 = distinct !DILexicalBlock(scope: !15357, file: !2536, line: 253, column: 35)
!15357 = distinct !DILexicalBlock(scope: !15345, file: !2536, line: 253, column: 6)
!15358 = !DILocalVariable(name: "pq", arg: 1, scope: !15359, file: !2536, line: 181, type: !15362)
!15359 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2536, file: !2536, line: 181, type: !15360, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15363)
!15360 = !DISubroutineType(types: !15361)
!15361 = !{null, !15362, !2428}
!15362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2464, size: 32)
!15363 = !{!15358, !15364, !15365}
!15364 = !DILocalVariable(name: "thread", arg: 2, scope: !15359, file: !2536, line: 182, type: !2428)
!15365 = !DILocalVariable(name: "t", scope: !15359, file: !2536, line: 184, type: !2428)
!15366 = !DILocation(line: 0, scope: !15359, inlinedAt: !15367)
!15367 = distinct !DILocation(line: 229, column: 2, scope: !15352, inlinedAt: !15355)
!15368 = !DILocation(line: 186, column: 2, scope: !15369, inlinedAt: !15367)
!15369 = distinct !DILexicalBlock(scope: !15370, file: !2536, line: 186, column: 2)
!15370 = distinct !DILexicalBlock(scope: !15359, file: !2536, line: 186, column: 2)
!15371 = !DILocation(line: 186, column: 2, scope: !15370, inlinedAt: !15367)
!15372 = !DILocation(line: 186, column: 2, scope: !15373, inlinedAt: !15367)
!15373 = distinct !DILexicalBlock(scope: !15369, file: !2536, line: 186, column: 2)
!15374 = !DILocation(line: 188, column: 2, scope: !15375, inlinedAt: !15367)
!15375 = distinct !DILexicalBlock(scope: !15359, file: !2536, line: 188, column: 2)
!15376 = !DILocation(line: 188, column: 2, scope: !15377, inlinedAt: !15367)
!15377 = distinct !DILexicalBlock(scope: !15375, file: !2536, line: 188, column: 2)
!15378 = !DILocation(line: 0, scope: !15375, inlinedAt: !15367)
!15379 = !DILocation(line: 189, column: 7, scope: !15380, inlinedAt: !15367)
!15380 = distinct !DILexicalBlock(scope: !15381, file: !2536, line: 189, column: 7)
!15381 = distinct !DILexicalBlock(scope: !15377, file: !2536, line: 188, column: 56)
!15382 = !DILocation(line: 189, column: 35, scope: !15380, inlinedAt: !15367)
!15383 = !DILocation(line: 189, column: 7, scope: !15381, inlinedAt: !15367)
!15384 = !DILocation(line: 191, column: 21, scope: !15385, inlinedAt: !15367)
!15385 = distinct !DILexicalBlock(scope: !15380, file: !2536, line: 189, column: 40)
!15386 = !DILocation(line: 190, column: 4, scope: !15385, inlinedAt: !15367)
!15387 = !DILocation(line: 192, column: 4, scope: !15385, inlinedAt: !15367)
!15388 = distinct !{!15388, !15374, !15389}
!15389 = !DILocation(line: 194, column: 2, scope: !15375, inlinedAt: !15367)
!15390 = !DILocation(line: 196, column: 37, scope: !15359, inlinedAt: !15367)
!15391 = !DILocation(line: 196, column: 2, scope: !15359, inlinedAt: !15367)
!15392 = !DILocation(line: 197, column: 1, scope: !15359, inlinedAt: !15367)
!15393 = !DILocation(line: 399, column: 25, scope: !15320)
!15394 = !DILocation(line: 399, column: 22, scope: !15320)
!15395 = !DILocation(line: 399, column: 2, scope: !15320)
!15396 = !DILocation(line: 400, column: 1, scope: !15320)
!15397 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !14296, file: !14296, line: 136, type: !15277, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15398)
!15398 = !{!15399}
!15399 = !DILocalVariable(name: "thread", arg: 1, scope: !15397, file: !14296, line: 136, type: !2428)
!15400 = !DILocation(line: 0, scope: !15397)
!15401 = !DILocation(line: 138, column: 9, scope: !15397)
!15402 = !DILocation(line: 138, column: 2, scope: !15397)
!15403 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2536, file: !2536, line: 1137, type: !15360, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15404)
!15404 = !{!15405, !15406}
!15405 = !DILocalVariable(name: "pq", arg: 1, scope: !15403, file: !2536, line: 1137, type: !15362)
!15406 = !DILocalVariable(name: "thread", arg: 2, scope: !15403, file: !2536, line: 1137, type: !2428)
!15407 = !DILocation(line: 0, scope: !15403)
!15408 = !DILocation(line: 1139, column: 2, scope: !15409)
!15409 = distinct !DILexicalBlock(scope: !15410, file: !2536, line: 1139, column: 2)
!15410 = distinct !DILexicalBlock(scope: !15403, file: !2536, line: 1139, column: 2)
!15411 = !DILocation(line: 1139, column: 2, scope: !15410)
!15412 = !DILocation(line: 1139, column: 2, scope: !15413)
!15413 = distinct !DILexicalBlock(scope: !15409, file: !2536, line: 1139, column: 2)
!15414 = !DILocation(line: 1141, column: 33, scope: !15403)
!15415 = !DILocation(line: 1141, column: 2, scope: !15403)
!15416 = !DILocation(line: 1142, column: 1, scope: !15403)
!15417 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !14296, file: !14296, line: 83, type: !15277, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15418)
!15418 = !{!15419}
!15419 = !DILocalVariable(name: "thread", arg: 1, scope: !15417, file: !14296, line: 83, type: !2428)
!15420 = !DILocation(line: 0, scope: !15417)
!15421 = !DILocation(line: 89, column: 16, scope: !15417)
!15422 = !DILocation(line: 89, column: 2, scope: !15417)
!15423 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !319, file: !319, line: 294, type: !15424, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15426)
!15424 = !DISubroutineType(types: !15425)
!15425 = !{!2532, !15362}
!15426 = !{!15427}
!15427 = !DILocalVariable(name: "list", arg: 1, scope: !15423, file: !319, line: 294, type: !15362)
!15428 = !DILocation(line: 0, scope: !15423)
!15429 = !DILocation(line: 296, column: 9, scope: !15423)
!15430 = !DILocation(line: 296, column: 49, scope: !15423)
!15431 = !DILocation(line: 296, column: 2, scope: !15423)
!15432 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !319, file: !319, line: 443, type: !15433, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15435)
!15433 = !DISubroutineType(types: !15434)
!15434 = !{null, !2532, !2532}
!15435 = !{!15436, !15437, !15438}
!15436 = !DILocalVariable(name: "successor", arg: 1, scope: !15432, file: !319, line: 443, type: !2532)
!15437 = !DILocalVariable(name: "node", arg: 2, scope: !15432, file: !319, line: 443, type: !2532)
!15438 = !DILocalVariable(name: "prev", scope: !15432, file: !319, line: 445, type: !15439)
!15439 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2532)
!15440 = !DILocation(line: 0, scope: !15432)
!15441 = !DILocation(line: 445, column: 39, scope: !15432)
!15442 = !DILocation(line: 447, column: 8, scope: !15432)
!15443 = !DILocation(line: 447, column: 13, scope: !15432)
!15444 = !DILocation(line: 448, column: 8, scope: !15432)
!15445 = !DILocation(line: 448, column: 13, scope: !15432)
!15446 = !DILocation(line: 449, column: 8, scope: !15432)
!15447 = !DILocation(line: 449, column: 13, scope: !15432)
!15448 = !DILocation(line: 450, column: 18, scope: !15432)
!15449 = !DILocation(line: 451, column: 1, scope: !15432)
!15450 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !319, file: !319, line: 341, type: !15451, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15453)
!15451 = !DISubroutineType(types: !15452)
!15452 = !{!2532, !15362, !2532}
!15453 = !{!15454, !15455}
!15454 = !DILocalVariable(name: "list", arg: 1, scope: !15450, file: !319, line: 341, type: !15362)
!15455 = !DILocalVariable(name: "node", arg: 2, scope: !15450, file: !319, line: 342, type: !2532)
!15456 = !DILocation(line: 0, scope: !15450)
!15457 = !DILocation(line: 344, column: 15, scope: !15450)
!15458 = !DILocation(line: 344, column: 9, scope: !15450)
!15459 = !DILocation(line: 344, column: 26, scope: !15450)
!15460 = !DILocation(line: 344, column: 2, scope: !15450)
!15461 = distinct !DISubprogram(name: "sys_dlist_append", scope: !319, file: !319, line: 404, type: !15462, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15464)
!15462 = !DISubroutineType(types: !15463)
!15463 = !{null, !15362, !2532}
!15464 = !{!15465, !15466, !15467}
!15465 = !DILocalVariable(name: "list", arg: 1, scope: !15461, file: !319, line: 404, type: !15362)
!15466 = !DILocalVariable(name: "node", arg: 2, scope: !15461, file: !319, line: 404, type: !2532)
!15467 = !DILocalVariable(name: "tail", scope: !15461, file: !319, line: 406, type: !15439)
!15468 = !DILocation(line: 0, scope: !15461)
!15469 = !DILocation(line: 406, column: 34, scope: !15461)
!15470 = !DILocation(line: 408, column: 8, scope: !15461)
!15471 = !DILocation(line: 408, column: 13, scope: !15461)
!15472 = !DILocation(line: 409, column: 8, scope: !15461)
!15473 = !DILocation(line: 409, column: 13, scope: !15461)
!15474 = !DILocation(line: 411, column: 8, scope: !15461)
!15475 = !DILocation(line: 411, column: 13, scope: !15461)
!15476 = !DILocation(line: 412, column: 13, scope: !15461)
!15477 = !DILocation(line: 413, column: 1, scope: !15461)
!15478 = distinct !DISubprogram(name: "update_cache", scope: !2536, file: !2536, line: 559, type: !9235, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15479)
!15479 = !{!15480, !15481}
!15480 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !15478, file: !2536, line: 559, type: !107)
!15481 = !DILocalVariable(name: "thread", scope: !15478, file: !2536, line: 562, type: !2428)
!15482 = !DILocation(line: 0, scope: !15478)
!15483 = !DILocation(line: 239, column: 9, scope: !15484, inlinedAt: !15487)
!15484 = distinct !DISubprogram(name: "runq_best", scope: !2536, file: !2536, line: 237, type: !15485, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !2236)
!15485 = !DISubroutineType(types: !15486)
!15486 = !{!2428}
!15487 = distinct !DILocation(line: 314, column: 28, scope: !15488, inlinedAt: !15491)
!15488 = distinct !DISubprogram(name: "next_up", scope: !2536, file: !2536, line: 312, type: !15485, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15489)
!15489 = !{!15490}
!15490 = !DILocalVariable(name: "thread", scope: !15488, file: !2536, line: 314, type: !2428)
!15491 = distinct !DILocation(line: 562, column: 28, scope: !15478)
!15492 = !DILocation(line: 0, scope: !15488, inlinedAt: !15491)
!15493 = !DILocation(line: 340, column: 17, scope: !15488, inlinedAt: !15491)
!15494 = !DILocation(line: 340, column: 9, scope: !15488, inlinedAt: !15491)
!15495 = !DILocalVariable(name: "thread", arg: 1, scope: !15496, file: !2536, line: 127, type: !2428)
!15496 = distinct !DISubprogram(name: "should_preempt", scope: !2536, file: !2536, line: 127, type: !15497, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15499)
!15497 = !DISubroutineType(types: !15498)
!15498 = !{!145, !2428, !107}
!15499 = !{!15495, !15500}
!15500 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !15496, file: !2536, line: 128, type: !107)
!15501 = !DILocation(line: 0, scope: !15496, inlinedAt: !15502)
!15502 = distinct !DILocation(line: 564, column: 6, scope: !15503)
!15503 = distinct !DILexicalBlock(scope: !15478, file: !2536, line: 564, column: 6)
!15504 = !DILocation(line: 133, column: 17, scope: !15505, inlinedAt: !15502)
!15505 = distinct !DILexicalBlock(scope: !15496, file: !2536, line: 133, column: 6)
!15506 = !DILocation(line: 0, scope: !15503)
!15507 = !DILocation(line: 133, column: 6, scope: !15496, inlinedAt: !15502)
!15508 = !DILocation(line: 137, column: 2, scope: !15509, inlinedAt: !15502)
!15509 = distinct !DILexicalBlock(scope: !15510, file: !2536, line: 137, column: 2)
!15510 = distinct !DILexicalBlock(scope: !15496, file: !2536, line: 137, column: 2)
!15511 = !DILocation(line: 137, column: 2, scope: !15510, inlinedAt: !15502)
!15512 = !DILocation(line: 137, column: 2, scope: !15513, inlinedAt: !15502)
!15513 = distinct !DILexicalBlock(scope: !15509, file: !2536, line: 137, column: 2)
!15514 = !DILocation(line: 140, column: 6, scope: !15515, inlinedAt: !15502)
!15515 = distinct !DILexicalBlock(scope: !15496, file: !2536, line: 140, column: 6)
!15516 = !DILocation(line: 140, column: 6, scope: !15496, inlinedAt: !15502)
!15517 = !DILocation(line: 150, column: 9, scope: !15518, inlinedAt: !15502)
!15518 = distinct !DILexicalBlock(scope: !15496, file: !2536, line: 149, column: 6)
!15519 = !DILocation(line: 149, column: 6, scope: !15496, inlinedAt: !15502)
!15520 = !DILocation(line: 157, column: 6, scope: !15521, inlinedAt: !15502)
!15521 = distinct !DILexicalBlock(scope: !15496, file: !2536, line: 157, column: 6)
!15522 = !DILocation(line: 564, column: 6, scope: !15478)
!15523 = !DILocation(line: 566, column: 14, scope: !15524)
!15524 = distinct !DILexicalBlock(scope: !15525, file: !2536, line: 566, column: 7)
!15525 = distinct !DILexicalBlock(scope: !15503, file: !2536, line: 564, column: 42)
!15526 = !DILocation(line: 566, column: 7, scope: !15525)
!15527 = !DILocation(line: 567, column: 4, scope: !15528)
!15528 = distinct !DILexicalBlock(scope: !15524, file: !2536, line: 566, column: 27)
!15529 = !DILocation(line: 568, column: 3, scope: !15528)
!15530 = !DILocation(line: 585, column: 1, scope: !15478)
!15531 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2536, file: !2536, line: 1144, type: !15532, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15534)
!15532 = !DISubroutineType(types: !15533)
!15533 = !{!2428, !15362}
!15534 = !{!15535, !15536, !15537}
!15535 = !DILocalVariable(name: "pq", arg: 1, scope: !15531, file: !2536, line: 1144, type: !15362)
!15536 = !DILocalVariable(name: "thread", scope: !15531, file: !2536, line: 1146, type: !2428)
!15537 = !DILocalVariable(name: "n", scope: !15531, file: !2536, line: 1147, type: !2532)
!15538 = !DILocation(line: 0, scope: !15531)
!15539 = !DILocation(line: 1147, column: 19, scope: !15531)
!15540 = !DILocation(line: 1152, column: 2, scope: !15531)
!15541 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !14296, file: !14296, line: 115, type: !15277, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15542)
!15542 = !{!15543}
!15543 = !DILocalVariable(name: "thread", arg: 1, scope: !15541, file: !14296, line: 115, type: !2428)
!15544 = !DILocation(line: 0, scope: !15541)
!15545 = !DILocation(line: 117, column: 46, scope: !15541)
!15546 = !DILocation(line: 117, column: 10, scope: !15541)
!15547 = !DILocation(line: 117, column: 9, scope: !15541)
!15548 = !DILocation(line: 117, column: 2, scope: !15541)
!15549 = distinct !DISubprogram(name: "is_preempt", scope: !2536, file: !2536, line: 62, type: !15112, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15550)
!15550 = !{!15551}
!15551 = !DILocalVariable(name: "thread", arg: 1, scope: !15549, file: !2536, line: 62, type: !2428)
!15552 = !DILocation(line: 0, scope: !15549)
!15553 = !DILocation(line: 65, column: 22, scope: !15549)
!15554 = !DILocation(line: 65, column: 30, scope: !15549)
!15555 = !DILocation(line: 65, column: 2, scope: !15549)
!15556 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14725, file: !14725, line: 35, type: !15557, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15561)
!15557 = !DISubroutineType(types: !15558)
!15558 = !{!145, !15559}
!15559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15560, size: 32)
!15560 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2479)
!15561 = !{!15562}
!15562 = !DILocalVariable(name: "to", arg: 1, scope: !15556, file: !14725, line: 35, type: !15559)
!15563 = !DILocation(line: 0, scope: !15556)
!15564 = !DILocation(line: 37, column: 35, scope: !15556)
!15565 = !DILocation(line: 37, column: 10, scope: !15556)
!15566 = !DILocation(line: 37, column: 9, scope: !15556)
!15567 = !DILocation(line: 37, column: 2, scope: !15556)
!15568 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !319, file: !319, line: 225, type: !15569, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15573)
!15569 = !DISubroutineType(types: !15570)
!15570 = !{!145, !15571}
!15571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15572, size: 32)
!15572 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2438)
!15573 = !{!15574}
!15574 = !DILocalVariable(name: "node", arg: 1, scope: !15568, file: !319, line: 225, type: !15571)
!15575 = !DILocation(line: 0, scope: !15568)
!15576 = !DILocation(line: 227, column: 15, scope: !15568)
!15577 = !DILocation(line: 227, column: 20, scope: !15568)
!15578 = !DILocation(line: 227, column: 2, scope: !15568)
!15579 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !319, file: !319, line: 325, type: !15451, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15580)
!15580 = !{!15581, !15582}
!15581 = !DILocalVariable(name: "list", arg: 1, scope: !15579, file: !319, line: 325, type: !15362)
!15582 = !DILocalVariable(name: "node", arg: 2, scope: !15579, file: !319, line: 326, type: !2532)
!15583 = !DILocation(line: 0, scope: !15579)
!15584 = !DILocation(line: 328, column: 24, scope: !15579)
!15585 = !DILocation(line: 328, column: 15, scope: !15579)
!15586 = !DILocation(line: 328, column: 9, scope: !15579)
!15587 = !DILocation(line: 328, column: 45, scope: !15579)
!15588 = !DILocation(line: 328, column: 2, scope: !15579)
!15589 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !319, file: !319, line: 266, type: !15590, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15592)
!15590 = !DISubroutineType(types: !15591)
!15591 = !{!145, !15362}
!15592 = !{!15593}
!15593 = !DILocalVariable(name: "list", arg: 1, scope: !15589, file: !319, line: 266, type: !15362)
!15594 = !DILocation(line: 0, scope: !15589)
!15595 = !DILocation(line: 268, column: 15, scope: !15589)
!15596 = !DILocation(line: 268, column: 20, scope: !15589)
!15597 = !DILocation(line: 268, column: 2, scope: !15589)
!15598 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !319, file: !319, line: 496, type: !15599, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15601)
!15599 = !DISubroutineType(types: !15600)
!15600 = !{null, !2532}
!15601 = !{!15602, !15603, !15604}
!15602 = !DILocalVariable(name: "node", arg: 1, scope: !15598, file: !319, line: 496, type: !2532)
!15603 = !DILocalVariable(name: "prev", scope: !15598, file: !319, line: 498, type: !15439)
!15604 = !DILocalVariable(name: "next", scope: !15598, file: !319, line: 499, type: !15439)
!15605 = !DILocation(line: 0, scope: !15598)
!15606 = !DILocation(line: 498, column: 34, scope: !15598)
!15607 = !DILocation(line: 499, column: 34, scope: !15598)
!15608 = !DILocation(line: 501, column: 8, scope: !15598)
!15609 = !DILocation(line: 501, column: 13, scope: !15598)
!15610 = !DILocation(line: 502, column: 8, scope: !15598)
!15611 = !DILocation(line: 502, column: 13, scope: !15598)
!15612 = !DILocation(line: 503, column: 2, scope: !15598)
!15613 = !DILocation(line: 504, column: 1, scope: !15598)
!15614 = distinct !DISubprogram(name: "sys_dnode_init", scope: !319, file: !319, line: 211, type: !15599, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15615)
!15615 = !{!15616}
!15616 = !DILocalVariable(name: "node", arg: 1, scope: !15614, file: !319, line: 211, type: !2532)
!15617 = !DILocation(line: 0, scope: !15614)
!15618 = !DILocation(line: 213, column: 8, scope: !15614)
!15619 = !DILocation(line: 213, column: 13, scope: !15614)
!15620 = !DILocation(line: 214, column: 8, scope: !15614)
!15621 = !DILocation(line: 214, column: 13, scope: !15614)
!15622 = !DILocation(line: 215, column: 1, scope: !15614)
!15623 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !14296, file: !14296, line: 131, type: !15624, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15626)
!15624 = !DISubroutineType(types: !15625)
!15625 = !{!145, !2428, !152}
!15626 = !{!15627, !15628}
!15627 = !DILocalVariable(name: "thread", arg: 1, scope: !15623, file: !14296, line: 131, type: !2428)
!15628 = !DILocalVariable(name: "state", arg: 2, scope: !15623, file: !14296, line: 131, type: !152)
!15629 = !DILocation(line: 0, scope: !15623)
!15630 = !DILocation(line: 133, column: 23, scope: !15623)
!15631 = !DILocation(line: 133, column: 10, scope: !15623)
!15632 = !DILocation(line: 133, column: 36, scope: !15623)
!15633 = !DILocation(line: 133, column: 45, scope: !15623)
!15634 = !DILocation(line: 133, column: 2, scope: !15623)
!15635 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !14296, file: !14296, line: 211, type: !15636, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15638)
!15636 = !DISubroutineType(types: !15637)
!15637 = !{!145, !107, !107}
!15638 = !{!15639, !15640}
!15639 = !DILocalVariable(name: "prio", arg: 1, scope: !15635, file: !14296, line: 211, type: !107)
!15640 = !DILocalVariable(name: "test_prio", arg: 2, scope: !15635, file: !14296, line: 211, type: !107)
!15641 = !DILocation(line: 0, scope: !15635)
!15642 = !DILocation(line: 213, column: 9, scope: !15635)
!15643 = !DILocation(line: 213, column: 2, scope: !15635)
!15644 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !14296, file: !14296, line: 206, type: !15636, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15645)
!15645 = !{!15646, !15647}
!15646 = !DILocalVariable(name: "prio1", arg: 1, scope: !15644, file: !14296, line: 206, type: !107)
!15647 = !DILocalVariable(name: "prio2", arg: 2, scope: !15644, file: !14296, line: 206, type: !107)
!15648 = !DILocation(line: 0, scope: !15644)
!15649 = !DILocation(line: 208, column: 15, scope: !15644)
!15650 = !DILocation(line: 208, column: 2, scope: !15644)
!15651 = distinct !DISubprogram(name: "z_ready_thread", scope: !2536, file: !2536, line: 635, type: !15094, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15652)
!15652 = !{!15653, !15654, !15656}
!15653 = !DILocalVariable(name: "thread", arg: 1, scope: !15651, file: !2536, line: 635, type: !2428)
!15654 = !DILocalVariable(name: "__i", scope: !15655, file: !2536, line: 637, type: !15128)
!15655 = distinct !DILexicalBlock(scope: !15651, file: !2536, line: 637, column: 2)
!15656 = !DILocalVariable(name: "__key", scope: !15655, file: !2536, line: 637, type: !15128)
!15657 = !DILocation(line: 0, scope: !15651)
!15658 = !DILocation(line: 0, scope: !15655)
!15659 = !DILocation(line: 0, scope: !15136, inlinedAt: !15660)
!15660 = distinct !DILocation(line: 637, column: 2, scope: !15655)
!15661 = !DILocation(line: 55, column: 2, scope: !15145, inlinedAt: !15662)
!15662 = distinct !DILocation(line: 145, column: 10, scope: !15136, inlinedAt: !15660)
!15663 = !DILocation(line: 0, scope: !15145, inlinedAt: !15662)
!15664 = !DILocation(line: 148, column: 2, scope: !15153, inlinedAt: !15660)
!15665 = !DILocation(line: 148, column: 2, scope: !15154, inlinedAt: !15660)
!15666 = !DILocation(line: 148, column: 2, scope: !15157, inlinedAt: !15660)
!15667 = !DILocation(line: 160, column: 2, scope: !15136, inlinedAt: !15660)
!15668 = !DILocation(line: 639, column: 4, scope: !15669)
!15669 = distinct !DILexicalBlock(scope: !15670, file: !2536, line: 638, column: 41)
!15670 = distinct !DILexicalBlock(scope: !15671, file: !2536, line: 638, column: 7)
!15671 = distinct !DILexicalBlock(scope: !15672, file: !2536, line: 637, column: 26)
!15672 = distinct !DILexicalBlock(scope: !15655, file: !2536, line: 637, column: 2)
!15673 = !DILocation(line: 0, scope: !15170, inlinedAt: !15674)
!15674 = distinct !DILocation(line: 637, column: 2, scope: !15672)
!15675 = !DILocation(line: 194, column: 2, scope: !15178, inlinedAt: !15674)
!15676 = !DILocation(line: 194, column: 2, scope: !15179, inlinedAt: !15674)
!15677 = !DILocation(line: 194, column: 2, scope: !15182, inlinedAt: !15674)
!15678 = !DILocation(line: 0, scope: !15184, inlinedAt: !15679)
!15679 = distinct !DILocation(line: 215, column: 2, scope: !15170, inlinedAt: !15674)
!15680 = !DILocation(line: 95, column: 2, scope: !15184, inlinedAt: !15679)
!15681 = !DILocation(line: 642, column: 1, scope: !15651)
!15682 = distinct !DISubprogram(name: "ready_thread", scope: !2536, file: !2536, line: 617, type: !15094, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15683)
!15683 = !{!15684}
!15684 = !DILocalVariable(name: "thread", arg: 1, scope: !15682, file: !2536, line: 617, type: !2428)
!15685 = !DILocation(line: 0, scope: !15682)
!15686 = !DILocation(line: 626, column: 7, scope: !15687)
!15687 = distinct !DILexicalBlock(scope: !15682, file: !2536, line: 626, column: 6)
!15688 = !DILocation(line: 626, column: 34, scope: !15687)
!15689 = !DILocation(line: 626, column: 37, scope: !15687)
!15690 = !DILocation(line: 626, column: 6, scope: !15682)
!15691 = !DILocation(line: 0, scope: !15345, inlinedAt: !15692)
!15692 = distinct !DILocation(line: 629, column: 3, scope: !15693)
!15693 = distinct !DILexicalBlock(scope: !15687, file: !2536, line: 626, column: 64)
!15694 = !DILocation(line: 252, column: 15, scope: !15345, inlinedAt: !15692)
!15695 = !DILocation(line: 252, column: 28, scope: !15345, inlinedAt: !15692)
!15696 = !DILocation(line: 0, scope: !15352, inlinedAt: !15697)
!15697 = distinct !DILocation(line: 254, column: 3, scope: !15356, inlinedAt: !15692)
!15698 = !DILocation(line: 0, scope: !15359, inlinedAt: !15699)
!15699 = distinct !DILocation(line: 229, column: 2, scope: !15352, inlinedAt: !15697)
!15700 = !DILocation(line: 186, column: 2, scope: !15369, inlinedAt: !15699)
!15701 = !DILocation(line: 186, column: 2, scope: !15370, inlinedAt: !15699)
!15702 = !DILocation(line: 186, column: 2, scope: !15373, inlinedAt: !15699)
!15703 = !DILocation(line: 188, column: 2, scope: !15375, inlinedAt: !15699)
!15704 = !DILocation(line: 188, column: 2, scope: !15377, inlinedAt: !15699)
!15705 = !DILocation(line: 0, scope: !15375, inlinedAt: !15699)
!15706 = !DILocation(line: 189, column: 7, scope: !15380, inlinedAt: !15699)
!15707 = !DILocation(line: 189, column: 35, scope: !15380, inlinedAt: !15699)
!15708 = !DILocation(line: 189, column: 7, scope: !15381, inlinedAt: !15699)
!15709 = !DILocation(line: 191, column: 21, scope: !15385, inlinedAt: !15699)
!15710 = !DILocation(line: 190, column: 4, scope: !15385, inlinedAt: !15699)
!15711 = !DILocation(line: 192, column: 4, scope: !15385, inlinedAt: !15699)
!15712 = distinct !{!15712, !15703, !15713}
!15713 = !DILocation(line: 194, column: 2, scope: !15375, inlinedAt: !15699)
!15714 = !DILocation(line: 196, column: 37, scope: !15359, inlinedAt: !15699)
!15715 = !DILocation(line: 196, column: 2, scope: !15359, inlinedAt: !15699)
!15716 = !DILocation(line: 197, column: 1, scope: !15359, inlinedAt: !15699)
!15717 = !DILocation(line: 630, column: 3, scope: !15693)
!15718 = !DILocation(line: 632, column: 2, scope: !15693)
!15719 = !DILocation(line: 633, column: 1, scope: !15682)
!15720 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !14296, file: !14296, line: 120, type: !15277, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15721)
!15721 = !{!15722}
!15722 = !DILocalVariable(name: "thread", arg: 1, scope: !15720, file: !14296, line: 120, type: !2428)
!15723 = !DILocation(line: 0, scope: !15720)
!15724 = !DILocation(line: 122, column: 12, scope: !15720)
!15725 = !DILocation(line: 122, column: 62, scope: !15720)
!15726 = !DILocation(line: 123, column: 4, scope: !15720)
!15727 = !DILocation(line: 122, column: 2, scope: !15720)
!15728 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2536, file: !2536, line: 644, type: !15094, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15729)
!15729 = !{!15730, !15731, !15733}
!15730 = !DILocalVariable(name: "thread", arg: 1, scope: !15728, file: !2536, line: 644, type: !2428)
!15731 = !DILocalVariable(name: "__i", scope: !15732, file: !2536, line: 646, type: !15128)
!15732 = distinct !DILexicalBlock(scope: !15728, file: !2536, line: 646, column: 2)
!15733 = !DILocalVariable(name: "__key", scope: !15732, file: !2536, line: 646, type: !15128)
!15734 = !DILocation(line: 0, scope: !15728)
!15735 = !DILocation(line: 0, scope: !15732)
!15736 = !DILocation(line: 0, scope: !15136, inlinedAt: !15737)
!15737 = distinct !DILocation(line: 646, column: 2, scope: !15732)
!15738 = !DILocation(line: 55, column: 2, scope: !15145, inlinedAt: !15739)
!15739 = distinct !DILocation(line: 145, column: 10, scope: !15136, inlinedAt: !15737)
!15740 = !DILocation(line: 0, scope: !15145, inlinedAt: !15739)
!15741 = !DILocation(line: 148, column: 2, scope: !15153, inlinedAt: !15737)
!15742 = !DILocation(line: 148, column: 2, scope: !15154, inlinedAt: !15737)
!15743 = !DILocation(line: 148, column: 2, scope: !15157, inlinedAt: !15737)
!15744 = !DILocation(line: 160, column: 2, scope: !15136, inlinedAt: !15737)
!15745 = !DILocation(line: 647, column: 3, scope: !15746)
!15746 = distinct !DILexicalBlock(scope: !15747, file: !2536, line: 646, column: 26)
!15747 = distinct !DILexicalBlock(scope: !15732, file: !2536, line: 646, column: 2)
!15748 = !DILocation(line: 0, scope: !15170, inlinedAt: !15749)
!15749 = distinct !DILocation(line: 646, column: 2, scope: !15747)
!15750 = !DILocation(line: 194, column: 2, scope: !15178, inlinedAt: !15749)
!15751 = !DILocation(line: 194, column: 2, scope: !15179, inlinedAt: !15749)
!15752 = !DILocation(line: 194, column: 2, scope: !15182, inlinedAt: !15749)
!15753 = !DILocation(line: 0, scope: !15184, inlinedAt: !15754)
!15754 = distinct !DILocation(line: 215, column: 2, scope: !15170, inlinedAt: !15749)
!15755 = !DILocation(line: 95, column: 2, scope: !15184, inlinedAt: !15754)
!15756 = !DILocation(line: 649, column: 1, scope: !15728)
!15757 = distinct !DISubprogram(name: "z_sched_start", scope: !2536, file: !2536, line: 651, type: !15094, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15758)
!15758 = !{!15759, !15760}
!15759 = !DILocalVariable(name: "thread", arg: 1, scope: !15757, file: !2536, line: 651, type: !2428)
!15760 = !DILocalVariable(name: "key", scope: !15757, file: !2536, line: 653, type: !15128)
!15761 = !DILocation(line: 0, scope: !15757)
!15762 = !DILocation(line: 0, scope: !15136, inlinedAt: !15763)
!15763 = distinct !DILocation(line: 653, column: 25, scope: !15757)
!15764 = !DILocation(line: 55, column: 2, scope: !15145, inlinedAt: !15765)
!15765 = distinct !DILocation(line: 145, column: 10, scope: !15136, inlinedAt: !15763)
!15766 = !DILocation(line: 0, scope: !15145, inlinedAt: !15765)
!15767 = !DILocation(line: 148, column: 2, scope: !15153, inlinedAt: !15763)
!15768 = !DILocation(line: 148, column: 2, scope: !15154, inlinedAt: !15763)
!15769 = !DILocation(line: 148, column: 2, scope: !15157, inlinedAt: !15763)
!15770 = !DILocation(line: 160, column: 2, scope: !15136, inlinedAt: !15763)
!15771 = !DILocation(line: 655, column: 6, scope: !15772)
!15772 = distinct !DILexicalBlock(scope: !15757, file: !2536, line: 655, column: 6)
!15773 = !DILocation(line: 655, column: 6, scope: !15757)
!15774 = !DILocation(line: 0, scope: !15170, inlinedAt: !15775)
!15775 = distinct !DILocation(line: 656, column: 3, scope: !15776)
!15776 = distinct !DILexicalBlock(scope: !15772, file: !2536, line: 655, column: 36)
!15777 = !DILocation(line: 194, column: 2, scope: !15178, inlinedAt: !15775)
!15778 = !DILocation(line: 194, column: 2, scope: !15179, inlinedAt: !15775)
!15779 = !DILocation(line: 194, column: 2, scope: !15182, inlinedAt: !15775)
!15780 = !DILocation(line: 0, scope: !15184, inlinedAt: !15781)
!15781 = distinct !DILocation(line: 215, column: 2, scope: !15170, inlinedAt: !15775)
!15782 = !DILocation(line: 95, column: 2, scope: !15184, inlinedAt: !15781)
!15783 = !DILocation(line: 657, column: 3, scope: !15776)
!15784 = !DILocation(line: 660, column: 2, scope: !15757)
!15785 = !DILocation(line: 661, column: 2, scope: !15757)
!15786 = !DILocation(line: 662, column: 2, scope: !15757)
!15787 = !DILocation(line: 663, column: 1, scope: !15757)
!15788 = distinct !DISubprogram(name: "z_has_thread_started", scope: !14296, file: !14296, line: 126, type: !15277, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15789)
!15789 = !{!15790}
!15790 = !DILocalVariable(name: "thread", arg: 1, scope: !15788, file: !14296, line: 126, type: !2428)
!15791 = !DILocation(line: 0, scope: !15788)
!15792 = !DILocation(line: 128, column: 23, scope: !15788)
!15793 = !DILocation(line: 128, column: 36, scope: !15788)
!15794 = !DILocation(line: 128, column: 56, scope: !15788)
!15795 = !DILocation(line: 128, column: 2, scope: !15788)
!15796 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !14296, file: !14296, line: 155, type: !15094, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15797)
!15797 = !{!15798}
!15798 = !DILocalVariable(name: "thread", arg: 1, scope: !15796, file: !14296, line: 155, type: !2428)
!15799 = !DILocation(line: 0, scope: !15796)
!15800 = !DILocation(line: 157, column: 15, scope: !15796)
!15801 = !DILocation(line: 157, column: 28, scope: !15796)
!15802 = !DILocation(line: 158, column: 1, scope: !15796)
!15803 = distinct !DISubprogram(name: "z_reschedule", scope: !2536, file: !2536, line: 967, type: !15171, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15804)
!15804 = !{!15805, !15806}
!15805 = !DILocalVariable(name: "lock", arg: 1, scope: !15803, file: !2536, line: 967, type: !15139)
!15806 = !DILocalVariable(name: "key", arg: 2, scope: !15803, file: !2536, line: 967, type: !15128)
!15807 = !DILocation(line: 0, scope: !15803)
!15808 = !DILocation(line: 969, column: 6, scope: !15809)
!15809 = distinct !DILexicalBlock(scope: !15803, file: !2536, line: 969, column: 6)
!15810 = !DILocation(line: 969, column: 23, scope: !15809)
!15811 = !DILocation(line: 969, column: 26, scope: !15809)
!15812 = !DILocation(line: 969, column: 6, scope: !15803)
!15813 = !DILocalVariable(name: "key", arg: 2, scope: !15814, file: !14400, line: 193, type: !15128)
!15814 = distinct !DISubprogram(name: "z_swap", scope: !14400, file: !14400, line: 193, type: !15815, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15817)
!15815 = !DISubroutineType(types: !15816)
!15816 = !{!107, !15139, !15128}
!15817 = !{!15818, !15813}
!15818 = !DILocalVariable(name: "lock", arg: 1, scope: !15814, file: !14400, line: 193, type: !15139)
!15819 = !DILocation(line: 0, scope: !15814, inlinedAt: !15820)
!15820 = distinct !DILocation(line: 970, column: 3, scope: !15821)
!15821 = distinct !DILexicalBlock(scope: !15809, file: !2536, line: 969, column: 39)
!15822 = !DILocalVariable(name: "l", arg: 1, scope: !15823, file: !420, line: 221, type: !15139)
!15823 = distinct !DISubprogram(name: "k_spin_release", scope: !420, file: !420, line: 221, type: !15824, scopeLine: 222, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15826)
!15824 = !DISubroutineType(types: !15825)
!15825 = !{null, !15139}
!15826 = !{!15822}
!15827 = !DILocation(line: 0, scope: !15823, inlinedAt: !15828)
!15828 = distinct !DILocation(line: 195, column: 2, scope: !15814, inlinedAt: !15820)
!15829 = !DILocation(line: 225, column: 2, scope: !15830, inlinedAt: !15828)
!15830 = distinct !DILexicalBlock(scope: !15831, file: !420, line: 225, column: 2)
!15831 = distinct !DILexicalBlock(scope: !15823, file: !420, line: 225, column: 2)
!15832 = !DILocation(line: 225, column: 2, scope: !15831, inlinedAt: !15828)
!15833 = !DILocation(line: 225, column: 2, scope: !15834, inlinedAt: !15828)
!15834 = distinct !DILexicalBlock(scope: !15830, file: !420, line: 225, column: 2)
!15835 = !DILocation(line: 196, column: 9, scope: !15814, inlinedAt: !15820)
!15836 = !DILocation(line: 971, column: 2, scope: !15821)
!15837 = !DILocation(line: 0, scope: !15170, inlinedAt: !15838)
!15838 = distinct !DILocation(line: 972, column: 3, scope: !15839)
!15839 = distinct !DILexicalBlock(scope: !15809, file: !2536, line: 971, column: 9)
!15840 = !DILocation(line: 194, column: 2, scope: !15178, inlinedAt: !15838)
!15841 = !DILocation(line: 194, column: 2, scope: !15179, inlinedAt: !15838)
!15842 = !DILocation(line: 194, column: 2, scope: !15182, inlinedAt: !15838)
!15843 = !DILocation(line: 0, scope: !15184, inlinedAt: !15844)
!15844 = distinct !DILocation(line: 215, column: 2, scope: !15170, inlinedAt: !15838)
!15845 = !DILocation(line: 95, column: 2, scope: !15184, inlinedAt: !15844)
!15846 = !DILocation(line: 975, column: 1, scope: !15803)
!15847 = distinct !DISubprogram(name: "resched", scope: !2536, file: !2536, line: 940, type: !15848, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15850)
!15848 = !DISubroutineType(types: !15849)
!15849 = !{!145, !152}
!15850 = !{!15851}
!15851 = !DILocalVariable(name: "key", arg: 1, scope: !15847, file: !2536, line: 940, type: !152)
!15852 = !DILocation(line: 0, scope: !15847)
!15853 = !DILocalVariable(name: "key", arg: 1, scope: !15854, file: !6002, line: 112, type: !32)
!15854 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !6002, file: !6002, line: 112, type: !15855, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15857)
!15855 = !DISubroutineType(types: !15856)
!15856 = !{!145, !32}
!15857 = !{!15853}
!15858 = !DILocation(line: 0, scope: !15854, inlinedAt: !15859)
!15859 = distinct !DILocation(line: 946, column: 9, scope: !15847)
!15860 = !DILocation(line: 115, column: 13, scope: !15854, inlinedAt: !15859)
!15861 = !DILocation(line: 946, column: 32, scope: !15847)
!15862 = !DILocation(line: 1031, column: 3, scope: !15863, inlinedAt: !15866)
!15863 = distinct !DISubprogram(name: "__get_IPSR", scope: !6321, file: !6321, line: 1027, type: !6408, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15864)
!15864 = !{!15865}
!15865 = !DILocalVariable(name: "result", scope: !15863, file: !6321, line: 1029, type: !152)
!15866 = distinct !DILocation(line: 48, column: 10, scope: !15867, inlinedAt: !15868)
!15867 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7373, file: !7373, line: 46, type: !7374, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !2236)
!15868 = distinct !DILocation(line: 946, column: 36, scope: !15847)
!15869 = !{i64 3773265}
!15870 = !DILocation(line: 0, scope: !15863, inlinedAt: !15866)
!15871 = !DILocation(line: 48, column: 9, scope: !15867, inlinedAt: !15868)
!15872 = !DILocation(line: 946, column: 2, scope: !15847)
!15873 = distinct !DISubprogram(name: "need_swap", scope: !2536, file: !2536, line: 953, type: !7374, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15874)
!15874 = !{!15875}
!15875 = !DILocalVariable(name: "new_thread", scope: !15873, file: !2536, line: 959, type: !2428)
!15876 = !DILocation(line: 962, column: 31, scope: !15873)
!15877 = !DILocation(line: 0, scope: !15873)
!15878 = !DILocation(line: 963, column: 23, scope: !15873)
!15879 = !DILocation(line: 963, column: 20, scope: !15873)
!15880 = !DILocation(line: 963, column: 2, scope: !15873)
!15881 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !14400, file: !14400, line: 181, type: !6331, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15882)
!15882 = !{!15883, !15884}
!15883 = !DILocalVariable(name: "key", arg: 1, scope: !15881, file: !14400, line: 181, type: !32)
!15884 = !DILocalVariable(name: "ret", scope: !15881, file: !14400, line: 183, type: !107)
!15885 = !DILocation(line: 0, scope: !15881)
!15886 = !DILocation(line: 185, column: 8, scope: !15881)
!15887 = !DILocation(line: 186, column: 2, scope: !15881)
!15888 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2536, file: !2536, line: 665, type: !15094, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15889)
!15889 = !{!15890, !15891, !15893}
!15890 = !DILocalVariable(name: "thread", arg: 1, scope: !15888, file: !2536, line: 665, type: !2428)
!15891 = !DILocalVariable(name: "__i", scope: !15892, file: !2536, line: 671, type: !15128)
!15892 = distinct !DILexicalBlock(scope: !15888, file: !2536, line: 671, column: 2)
!15893 = !DILocalVariable(name: "__key", scope: !15892, file: !2536, line: 671, type: !15128)
!15894 = !DILocation(line: 0, scope: !15888)
!15895 = !DILocation(line: 669, column: 8, scope: !15888)
!15896 = !DILocation(line: 0, scope: !15892)
!15897 = !DILocation(line: 0, scope: !15136, inlinedAt: !15898)
!15898 = distinct !DILocation(line: 671, column: 2, scope: !15892)
!15899 = !DILocation(line: 55, column: 2, scope: !15145, inlinedAt: !15900)
!15900 = distinct !DILocation(line: 145, column: 10, scope: !15136, inlinedAt: !15898)
!15901 = !DILocation(line: 0, scope: !15145, inlinedAt: !15900)
!15902 = !DILocation(line: 148, column: 2, scope: !15153, inlinedAt: !15898)
!15903 = !DILocation(line: 148, column: 2, scope: !15154, inlinedAt: !15898)
!15904 = !DILocation(line: 148, column: 2, scope: !15157, inlinedAt: !15898)
!15905 = !DILocation(line: 160, column: 2, scope: !15136, inlinedAt: !15898)
!15906 = !DILocation(line: 672, column: 7, scope: !15907)
!15907 = distinct !DILexicalBlock(scope: !15908, file: !2536, line: 672, column: 7)
!15908 = distinct !DILexicalBlock(scope: !15909, file: !2536, line: 671, column: 26)
!15909 = distinct !DILexicalBlock(scope: !15892, file: !2536, line: 671, column: 2)
!15910 = !DILocation(line: 672, column: 7, scope: !15908)
!15911 = !DILocation(line: 0, scope: !15328, inlinedAt: !15912)
!15912 = distinct !DILocation(line: 673, column: 4, scope: !15913)
!15913 = distinct !DILexicalBlock(scope: !15907, file: !2536, line: 672, column: 35)
!15914 = !DILocation(line: 266, column: 15, scope: !15328, inlinedAt: !15912)
!15915 = !DILocation(line: 266, column: 28, scope: !15328, inlinedAt: !15912)
!15916 = !DILocation(line: 0, scope: !15336, inlinedAt: !15917)
!15917 = distinct !DILocation(line: 268, column: 3, scope: !15340, inlinedAt: !15912)
!15918 = !DILocation(line: 234, column: 2, scope: !15336, inlinedAt: !15917)
!15919 = !DILocation(line: 674, column: 3, scope: !15913)
!15920 = !DILocation(line: 675, column: 3, scope: !15908)
!15921 = !DILocation(line: 676, column: 26, scope: !15908)
!15922 = !DILocation(line: 676, column: 23, scope: !15908)
!15923 = !DILocation(line: 676, column: 3, scope: !15908)
!15924 = !DILocation(line: 0, scope: !15170, inlinedAt: !15925)
!15925 = distinct !DILocation(line: 671, column: 2, scope: !15909)
!15926 = !DILocation(line: 194, column: 2, scope: !15178, inlinedAt: !15925)
!15927 = !DILocation(line: 194, column: 2, scope: !15179, inlinedAt: !15925)
!15928 = !DILocation(line: 194, column: 2, scope: !15182, inlinedAt: !15925)
!15929 = !DILocation(line: 0, scope: !15184, inlinedAt: !15930)
!15930 = distinct !DILocation(line: 215, column: 2, scope: !15170, inlinedAt: !15925)
!15931 = !DILocation(line: 95, column: 2, scope: !15184, inlinedAt: !15930)
!15932 = !DILocation(line: 679, column: 16, scope: !15933)
!15933 = distinct !DILexicalBlock(scope: !15888, file: !2536, line: 679, column: 6)
!15934 = !DILocation(line: 679, column: 13, scope: !15933)
!15935 = !DILocation(line: 679, column: 6, scope: !15888)
!15936 = !DILocation(line: 680, column: 3, scope: !15937)
!15937 = distinct !DILexicalBlock(scope: !15933, file: !2536, line: 679, column: 26)
!15938 = !DILocation(line: 681, column: 2, scope: !15937)
!15939 = !DILocation(line: 684, column: 1, scope: !15888)
!15940 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !14725, file: !14725, line: 52, type: !15112, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15941)
!15941 = !{!15942}
!15942 = !DILocalVariable(name: "thread", arg: 1, scope: !15940, file: !14725, line: 52, type: !2428)
!15943 = !DILocation(line: 0, scope: !15940)
!15944 = !DILocation(line: 54, column: 39, scope: !15940)
!15945 = !DILocation(line: 54, column: 9, scope: !15940)
!15946 = !DILocation(line: 54, column: 2, scope: !15940)
!15947 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !14296, file: !14296, line: 141, type: !15094, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15948)
!15948 = !{!15949}
!15949 = !DILocalVariable(name: "thread", arg: 1, scope: !15947, file: !14296, line: 141, type: !2428)
!15950 = !DILocation(line: 0, scope: !15947)
!15951 = !DILocation(line: 143, column: 15, scope: !15947)
!15952 = !DILocation(line: 143, column: 28, scope: !15947)
!15953 = !DILocation(line: 146, column: 1, scope: !15947)
!15954 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !14296, file: !14296, line: 73, type: !3148, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !2236)
!15955 = !DILocation(line: 55, column: 2, scope: !15145, inlinedAt: !15956)
!15956 = distinct !DILocation(line: 75, column: 30, scope: !15954)
!15957 = !DILocation(line: 0, scope: !15145, inlinedAt: !15956)
!15958 = !DILocation(line: 75, column: 9, scope: !15954)
!15959 = !DILocation(line: 76, column: 1, scope: !15954)
!15960 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2536, file: !2536, line: 977, type: !6418, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15961)
!15961 = !{!15962}
!15962 = !DILocalVariable(name: "key", arg: 1, scope: !15960, file: !2536, line: 977, type: !152)
!15963 = !DILocation(line: 0, scope: !15960)
!15964 = !DILocation(line: 979, column: 6, scope: !15965)
!15965 = distinct !DILexicalBlock(scope: !15960, file: !2536, line: 979, column: 6)
!15966 = !DILocation(line: 979, column: 6, scope: !15960)
!15967 = !DILocation(line: 980, column: 3, scope: !15968)
!15968 = distinct !DILexicalBlock(scope: !15965, file: !2536, line: 979, column: 20)
!15969 = !DILocation(line: 981, column: 2, scope: !15968)
!15970 = !DILocation(line: 0, scope: !15184, inlinedAt: !15971)
!15971 = distinct !DILocation(line: 982, column: 3, scope: !15972)
!15972 = distinct !DILexicalBlock(scope: !15965, file: !2536, line: 981, column: 9)
!15973 = !DILocation(line: 95, column: 2, scope: !15184, inlinedAt: !15971)
!15974 = !DILocation(line: 985, column: 1, scope: !15960)
!15975 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2536, file: !2536, line: 695, type: !15094, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15976)
!15976 = !{!15977, !15978}
!15977 = !DILocalVariable(name: "thread", arg: 1, scope: !15975, file: !2536, line: 695, type: !2428)
!15978 = !DILocalVariable(name: "key", scope: !15975, file: !2536, line: 699, type: !15128)
!15979 = !DILocation(line: 0, scope: !15975)
!15980 = !DILocation(line: 0, scope: !15136, inlinedAt: !15981)
!15981 = distinct !DILocation(line: 699, column: 25, scope: !15975)
!15982 = !DILocation(line: 55, column: 2, scope: !15145, inlinedAt: !15983)
!15983 = distinct !DILocation(line: 145, column: 10, scope: !15136, inlinedAt: !15981)
!15984 = !DILocation(line: 0, scope: !15145, inlinedAt: !15983)
!15985 = !DILocation(line: 148, column: 2, scope: !15153, inlinedAt: !15981)
!15986 = !DILocation(line: 148, column: 2, scope: !15154, inlinedAt: !15981)
!15987 = !DILocation(line: 148, column: 2, scope: !15157, inlinedAt: !15981)
!15988 = !DILocation(line: 160, column: 2, scope: !15136, inlinedAt: !15981)
!15989 = !DILocation(line: 702, column: 7, scope: !15990)
!15990 = distinct !DILexicalBlock(scope: !15975, file: !2536, line: 702, column: 6)
!15991 = !DILocation(line: 702, column: 6, scope: !15975)
!15992 = !DILocation(line: 0, scope: !15170, inlinedAt: !15993)
!15993 = distinct !DILocation(line: 703, column: 3, scope: !15994)
!15994 = distinct !DILexicalBlock(scope: !15990, file: !2536, line: 702, column: 38)
!15995 = !DILocation(line: 194, column: 2, scope: !15178, inlinedAt: !15993)
!15996 = !DILocation(line: 194, column: 2, scope: !15179, inlinedAt: !15993)
!15997 = !DILocation(line: 194, column: 2, scope: !15182, inlinedAt: !15993)
!15998 = !DILocation(line: 0, scope: !15184, inlinedAt: !15999)
!15999 = distinct !DILocation(line: 215, column: 2, scope: !15170, inlinedAt: !15993)
!16000 = !DILocation(line: 95, column: 2, scope: !15184, inlinedAt: !15999)
!16001 = !DILocation(line: 704, column: 3, scope: !15994)
!16002 = !DILocation(line: 707, column: 2, scope: !15975)
!16003 = !DILocation(line: 708, column: 2, scope: !15975)
!16004 = !DILocation(line: 710, column: 2, scope: !15975)
!16005 = !DILocation(line: 713, column: 1, scope: !15975)
!16006 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !14296, file: !14296, line: 96, type: !15277, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16007)
!16007 = !{!16008}
!16008 = !DILocalVariable(name: "thread", arg: 1, scope: !16006, file: !14296, line: 96, type: !2428)
!16009 = !DILocation(line: 0, scope: !16006)
!16010 = !DILocation(line: 98, column: 23, scope: !16006)
!16011 = !DILocation(line: 98, column: 36, scope: !16006)
!16012 = !DILocation(line: 98, column: 57, scope: !16006)
!16013 = !DILocation(line: 98, column: 2, scope: !16006)
!16014 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !14296, file: !14296, line: 148, type: !15094, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16015)
!16015 = !{!16016}
!16016 = !DILocalVariable(name: "thread", arg: 1, scope: !16014, file: !14296, line: 148, type: !2428)
!16017 = !DILocation(line: 0, scope: !16014)
!16018 = !DILocation(line: 150, column: 15, scope: !16014)
!16019 = !DILocation(line: 150, column: 28, scope: !16014)
!16020 = !DILocation(line: 153, column: 1, scope: !16014)
!16021 = distinct !DISubprogram(name: "z_pend_thread", scope: !2536, file: !2536, line: 770, type: !16022, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16028)
!16022 = !DISubroutineType(types: !16023)
!16023 = !{null, !2428, !2459, !16024}
!16024 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !565, line: 67, baseType: !16025)
!16025 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !565, line: 65, size: 64, elements: !16026)
!16026 = !{!16027}
!16027 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16025, file: !565, line: 66, baseType: !564, size: 64)
!16028 = !{!16029, !16030, !16031, !16032, !16034}
!16029 = !DILocalVariable(name: "thread", arg: 1, scope: !16021, file: !2536, line: 770, type: !2428)
!16030 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16021, file: !2536, line: 770, type: !2459)
!16031 = !DILocalVariable(name: "timeout", arg: 3, scope: !16021, file: !2536, line: 771, type: !16024)
!16032 = !DILocalVariable(name: "__i", scope: !16033, file: !2536, line: 774, type: !15128)
!16033 = distinct !DILexicalBlock(scope: !16021, file: !2536, line: 774, column: 2)
!16034 = !DILocalVariable(name: "__key", scope: !16033, file: !2536, line: 774, type: !15128)
!16035 = !DILocation(line: 0, scope: !16021)
!16036 = !DILocation(line: 773, column: 2, scope: !16037)
!16037 = distinct !DILexicalBlock(scope: !16038, file: !2536, line: 773, column: 2)
!16038 = distinct !DILexicalBlock(scope: !16021, file: !2536, line: 773, column: 2)
!16039 = !DILocation(line: 773, column: 2, scope: !16038)
!16040 = !DILocation(line: 773, column: 2, scope: !16041)
!16041 = distinct !DILexicalBlock(scope: !16037, file: !2536, line: 773, column: 2)
!16042 = !DILocation(line: 0, scope: !16033)
!16043 = !DILocation(line: 0, scope: !15136, inlinedAt: !16044)
!16044 = distinct !DILocation(line: 774, column: 2, scope: !16033)
!16045 = !DILocation(line: 55, column: 2, scope: !15145, inlinedAt: !16046)
!16046 = distinct !DILocation(line: 145, column: 10, scope: !15136, inlinedAt: !16044)
!16047 = !DILocation(line: 0, scope: !15145, inlinedAt: !16046)
!16048 = !DILocation(line: 148, column: 2, scope: !15153, inlinedAt: !16044)
!16049 = !DILocation(line: 148, column: 2, scope: !15154, inlinedAt: !16044)
!16050 = !DILocation(line: 148, column: 2, scope: !15157, inlinedAt: !16044)
!16051 = !DILocation(line: 160, column: 2, scope: !15136, inlinedAt: !16044)
!16052 = !DILocation(line: 775, column: 3, scope: !16053)
!16053 = distinct !DILexicalBlock(scope: !16054, file: !2536, line: 774, column: 26)
!16054 = distinct !DILexicalBlock(scope: !16033, file: !2536, line: 774, column: 2)
!16055 = !DILocation(line: 0, scope: !15170, inlinedAt: !16056)
!16056 = distinct !DILocation(line: 774, column: 2, scope: !16054)
!16057 = !DILocation(line: 194, column: 2, scope: !15178, inlinedAt: !16056)
!16058 = !DILocation(line: 194, column: 2, scope: !15179, inlinedAt: !16056)
!16059 = !DILocation(line: 194, column: 2, scope: !15182, inlinedAt: !16056)
!16060 = !DILocation(line: 0, scope: !15184, inlinedAt: !16061)
!16061 = distinct !DILocation(line: 215, column: 2, scope: !15170, inlinedAt: !16056)
!16062 = !DILocation(line: 95, column: 2, scope: !15184, inlinedAt: !16061)
!16063 = !DILocation(line: 777, column: 1, scope: !16021)
!16064 = distinct !DISubprogram(name: "is_thread_dummy", scope: !2536, file: !2536, line: 79, type: !15277, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16065)
!16065 = !{!16066}
!16066 = !DILocalVariable(name: "thread", arg: 1, scope: !16064, file: !2536, line: 79, type: !2428)
!16067 = !DILocation(line: 0, scope: !16064)
!16068 = !DILocation(line: 81, column: 23, scope: !16064)
!16069 = !DILocation(line: 81, column: 36, scope: !16064)
!16070 = !DILocation(line: 81, column: 53, scope: !16064)
!16071 = !DILocation(line: 81, column: 2, scope: !16064)
!16072 = distinct !DISubprogram(name: "pend_locked", scope: !2536, file: !2536, line: 760, type: !16022, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16073)
!16073 = !{!16074, !16075, !16076}
!16074 = !DILocalVariable(name: "thread", arg: 1, scope: !16072, file: !2536, line: 760, type: !2428)
!16075 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16072, file: !2536, line: 760, type: !2459)
!16076 = !DILocalVariable(name: "timeout", arg: 3, scope: !16072, file: !2536, line: 761, type: !16024)
!16077 = !DILocation(line: 0, scope: !16072)
!16078 = !DILocation(line: 766, column: 2, scope: !16072)
!16079 = !DILocation(line: 767, column: 2, scope: !16072)
!16080 = !DILocation(line: 768, column: 1, scope: !16072)
!16081 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2536, file: !2536, line: 740, type: !16082, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16084)
!16082 = !DISubroutineType(types: !16083)
!16083 = !{null, !2428, !2459}
!16084 = !{!16085, !16086}
!16085 = !DILocalVariable(name: "thread", arg: 1, scope: !16081, file: !2536, line: 740, type: !2428)
!16086 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16081, file: !2536, line: 740, type: !2459)
!16087 = !DILocation(line: 0, scope: !16081)
!16088 = !DILocation(line: 742, column: 2, scope: !16081)
!16089 = !DILocation(line: 743, column: 2, scope: !16081)
!16090 = !DILocation(line: 747, column: 13, scope: !16091)
!16091 = distinct !DILexicalBlock(scope: !16081, file: !2536, line: 747, column: 6)
!16092 = !DILocation(line: 747, column: 6, scope: !16081)
!16093 = !DILocation(line: 748, column: 16, scope: !16094)
!16094 = distinct !DILexicalBlock(scope: !16091, file: !2536, line: 747, column: 22)
!16095 = !DILocation(line: 748, column: 26, scope: !16094)
!16096 = !DILocation(line: 749, column: 28, scope: !16094)
!16097 = !DILocation(line: 0, scope: !15359, inlinedAt: !16098)
!16098 = distinct !DILocation(line: 749, column: 3, scope: !16094)
!16099 = !DILocation(line: 186, column: 2, scope: !15369, inlinedAt: !16098)
!16100 = !DILocation(line: 186, column: 2, scope: !15370, inlinedAt: !16098)
!16101 = !DILocation(line: 186, column: 2, scope: !15373, inlinedAt: !16098)
!16102 = !DILocation(line: 188, column: 2, scope: !15375, inlinedAt: !16098)
!16103 = !DILocation(line: 188, column: 2, scope: !15377, inlinedAt: !16098)
!16104 = !DILocation(line: 0, scope: !15375, inlinedAt: !16098)
!16105 = !DILocation(line: 189, column: 7, scope: !15380, inlinedAt: !16098)
!16106 = !DILocation(line: 189, column: 35, scope: !15380, inlinedAt: !16098)
!16107 = !DILocation(line: 189, column: 7, scope: !15381, inlinedAt: !16098)
!16108 = !DILocation(line: 191, column: 21, scope: !15385, inlinedAt: !16098)
!16109 = !DILocation(line: 190, column: 4, scope: !15385, inlinedAt: !16098)
!16110 = !DILocation(line: 192, column: 4, scope: !15385, inlinedAt: !16098)
!16111 = distinct !{!16111, !16102, !16112}
!16112 = !DILocation(line: 194, column: 2, scope: !15375, inlinedAt: !16098)
!16113 = !DILocation(line: 196, column: 37, scope: !15359, inlinedAt: !16098)
!16114 = !DILocation(line: 196, column: 2, scope: !15359, inlinedAt: !16098)
!16115 = !DILocation(line: 197, column: 1, scope: !15359, inlinedAt: !16098)
!16116 = !DILocation(line: 751, column: 1, scope: !16081)
!16117 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2536, file: !2536, line: 753, type: !16118, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16120)
!16118 = !DISubroutineType(types: !16119)
!16119 = !{null, !2428, !16024}
!16120 = !{!16121, !16122}
!16121 = !DILocalVariable(name: "thread", arg: 1, scope: !16117, file: !2536, line: 753, type: !2428)
!16122 = !DILocalVariable(name: "timeout", arg: 2, scope: !16117, file: !2536, line: 753, type: !16024)
!16123 = !DILocation(line: 0, scope: !16117)
!16124 = !DILocation(line: 755, column: 7, scope: !16125)
!16125 = distinct !DILexicalBlock(scope: !16117, file: !2536, line: 755, column: 6)
!16126 = !DILocation(line: 755, column: 6, scope: !16117)
!16127 = !DILocation(line: 756, column: 3, scope: !16128)
!16128 = distinct !DILexicalBlock(scope: !16125, file: !2536, line: 755, column: 41)
!16129 = !DILocation(line: 757, column: 2, scope: !16128)
!16130 = !DILocation(line: 758, column: 1, scope: !16117)
!16131 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14725, file: !14725, line: 47, type: !16118, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16132)
!16132 = !{!16133, !16134}
!16133 = !DILocalVariable(name: "thread", arg: 1, scope: !16131, file: !14725, line: 47, type: !2428)
!16134 = !DILocalVariable(name: "ticks", arg: 2, scope: !16131, file: !14725, line: 47, type: !16024)
!16135 = !DILocation(line: 0, scope: !16131)
!16136 = !DILocation(line: 49, column: 30, scope: !16131)
!16137 = !DILocation(line: 49, column: 2, scope: !16131)
!16138 = !DILocation(line: 50, column: 1, scope: !16131)
!16139 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2536, file: !2536, line: 795, type: !2485, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16140)
!16140 = !{!16141, !16142, !16143, !16145, !16146}
!16141 = !DILocalVariable(name: "timeout", arg: 1, scope: !16139, file: !2536, line: 795, type: !2487)
!16142 = !DILocalVariable(name: "thread", scope: !16139, file: !2536, line: 797, type: !2428)
!16143 = !DILocalVariable(name: "__i", scope: !16144, file: !2536, line: 800, type: !15128)
!16144 = distinct !DILexicalBlock(scope: !16139, file: !2536, line: 800, column: 2)
!16145 = !DILocalVariable(name: "__key", scope: !16144, file: !2536, line: 800, type: !15128)
!16146 = !DILocalVariable(name: "killed", scope: !16147, file: !2536, line: 801, type: !145)
!16147 = distinct !DILexicalBlock(scope: !16148, file: !2536, line: 800, column: 26)
!16148 = distinct !DILexicalBlock(scope: !16144, file: !2536, line: 800, column: 2)
!16149 = !DILocation(line: 0, scope: !16139)
!16150 = !DILocation(line: 797, column: 28, scope: !16139)
!16151 = !DILocation(line: 0, scope: !16144)
!16152 = !DILocation(line: 0, scope: !15136, inlinedAt: !16153)
!16153 = distinct !DILocation(line: 800, column: 2, scope: !16144)
!16154 = !DILocation(line: 55, column: 2, scope: !15145, inlinedAt: !16155)
!16155 = distinct !DILocation(line: 145, column: 10, scope: !15136, inlinedAt: !16153)
!16156 = !DILocation(line: 0, scope: !15145, inlinedAt: !16155)
!16157 = !DILocation(line: 148, column: 2, scope: !15153, inlinedAt: !16153)
!16158 = !DILocation(line: 148, column: 2, scope: !15154, inlinedAt: !16153)
!16159 = !DILocation(line: 148, column: 2, scope: !15157, inlinedAt: !16153)
!16160 = !DILocation(line: 160, column: 2, scope: !15136, inlinedAt: !16153)
!16161 = !DILocation(line: 801, column: 27, scope: !16147)
!16162 = !DILocation(line: 801, column: 32, scope: !16147)
!16163 = !DILocation(line: 801, column: 61, scope: !16147)
!16164 = !DILocation(line: 0, scope: !16147)
!16165 = !DILocation(line: 804, column: 7, scope: !16147)
!16166 = !DILocation(line: 805, column: 21, scope: !16167)
!16167 = distinct !DILexicalBlock(scope: !16168, file: !2536, line: 805, column: 8)
!16168 = distinct !DILexicalBlock(scope: !16169, file: !2536, line: 804, column: 16)
!16169 = distinct !DILexicalBlock(scope: !16147, file: !2536, line: 804, column: 7)
!16170 = !DILocation(line: 805, column: 31, scope: !16167)
!16171 = !DILocation(line: 805, column: 8, scope: !16168)
!16172 = !DILocation(line: 806, column: 5, scope: !16173)
!16173 = distinct !DILexicalBlock(scope: !16167, file: !2536, line: 805, column: 40)
!16174 = !DILocation(line: 807, column: 4, scope: !16173)
!16175 = !DILocation(line: 808, column: 4, scope: !16168)
!16176 = !DILocation(line: 809, column: 4, scope: !16168)
!16177 = !DILocation(line: 810, column: 4, scope: !16168)
!16178 = !DILocation(line: 811, column: 3, scope: !16168)
!16179 = !DILocation(line: 0, scope: !15170, inlinedAt: !16180)
!16180 = distinct !DILocation(line: 800, column: 2, scope: !16148)
!16181 = !DILocation(line: 194, column: 2, scope: !15178, inlinedAt: !16180)
!16182 = !DILocation(line: 194, column: 2, scope: !15179, inlinedAt: !16180)
!16183 = !DILocation(line: 194, column: 2, scope: !15182, inlinedAt: !16180)
!16184 = !DILocation(line: 0, scope: !15184, inlinedAt: !16185)
!16185 = distinct !DILocation(line: 215, column: 2, scope: !15170, inlinedAt: !16180)
!16186 = !DILocation(line: 95, column: 2, scope: !15184, inlinedAt: !16185)
!16187 = !DILocation(line: 813, column: 1, scope: !16139)
!16188 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2536, file: !2536, line: 779, type: !15094, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16189)
!16189 = !{!16190}
!16190 = !DILocalVariable(name: "thread", arg: 1, scope: !16188, file: !2536, line: 779, type: !2428)
!16191 = !DILocation(line: 0, scope: !16188)
!16192 = !DILocation(line: 781, column: 21, scope: !16188)
!16193 = !DILocation(line: 781, column: 2, scope: !16188)
!16194 = !DILocation(line: 782, column: 2, scope: !16188)
!16195 = !DILocation(line: 783, column: 15, scope: !16188)
!16196 = !DILocation(line: 783, column: 25, scope: !16188)
!16197 = !DILocation(line: 784, column: 1, scope: !16188)
!16198 = distinct !DISubprogram(name: "pended_on_thread", scope: !2536, file: !2536, line: 724, type: !16199, scopeLine: 725, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16201)
!16199 = !DISubroutineType(types: !16200)
!16200 = !{!2459, !2428}
!16201 = !{!16202}
!16202 = !DILocalVariable(name: "thread", arg: 1, scope: !16198, file: !2536, line: 724, type: !2428)
!16203 = !DILocation(line: 0, scope: !16198)
!16204 = !DILocation(line: 726, column: 2, scope: !16205)
!16205 = distinct !DILexicalBlock(scope: !16206, file: !2536, line: 726, column: 2)
!16206 = distinct !DILexicalBlock(scope: !16198, file: !2536, line: 726, column: 2)
!16207 = !DILocation(line: 726, column: 2, scope: !16206)
!16208 = !DILocation(line: 726, column: 2, scope: !16209)
!16209 = distinct !DILexicalBlock(scope: !16205, file: !2536, line: 726, column: 2)
!16210 = !DILocation(line: 728, column: 2, scope: !16198)
!16211 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !14296, file: !14296, line: 165, type: !15094, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16212)
!16212 = !{!16213}
!16213 = !DILocalVariable(name: "thread", arg: 1, scope: !16211, file: !14296, line: 165, type: !2428)
!16214 = !DILocation(line: 0, scope: !16211)
!16215 = !DILocation(line: 167, column: 15, scope: !16211)
!16216 = !DILocation(line: 167, column: 28, scope: !16211)
!16217 = !DILocation(line: 168, column: 1, scope: !16211)
!16218 = distinct !DISubprogram(name: "unready_thread", scope: !2536, file: !2536, line: 731, type: !15094, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16219)
!16219 = !{!16220}
!16220 = !DILocalVariable(name: "thread", arg: 1, scope: !16218, file: !2536, line: 731, type: !2428)
!16221 = !DILocation(line: 0, scope: !16218)
!16222 = !DILocation(line: 733, column: 6, scope: !16223)
!16223 = distinct !DILexicalBlock(scope: !16218, file: !2536, line: 733, column: 6)
!16224 = !DILocation(line: 733, column: 6, scope: !16218)
!16225 = !DILocation(line: 0, scope: !15328, inlinedAt: !16226)
!16226 = distinct !DILocation(line: 734, column: 3, scope: !16227)
!16227 = distinct !DILexicalBlock(scope: !16223, file: !2536, line: 733, column: 34)
!16228 = !DILocation(line: 266, column: 15, scope: !15328, inlinedAt: !16226)
!16229 = !DILocation(line: 266, column: 28, scope: !15328, inlinedAt: !16226)
!16230 = !DILocation(line: 0, scope: !15336, inlinedAt: !16231)
!16231 = distinct !DILocation(line: 268, column: 3, scope: !15340, inlinedAt: !16226)
!16232 = !DILocation(line: 234, column: 2, scope: !15336, inlinedAt: !16231)
!16233 = !DILocation(line: 735, column: 2, scope: !16227)
!16234 = !DILocation(line: 736, column: 25, scope: !16218)
!16235 = !DILocation(line: 736, column: 22, scope: !16218)
!16236 = !DILocation(line: 736, column: 2, scope: !16218)
!16237 = !DILocation(line: 737, column: 1, scope: !16218)
!16238 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !14296, file: !14296, line: 160, type: !15094, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16239)
!16239 = !{!16240}
!16240 = !DILocalVariable(name: "thread", arg: 1, scope: !16238, file: !14296, line: 160, type: !2428)
!16241 = !DILocation(line: 0, scope: !16238)
!16242 = !DILocation(line: 162, column: 15, scope: !16238)
!16243 = !DILocation(line: 162, column: 28, scope: !16238)
!16244 = !DILocation(line: 163, column: 1, scope: !16238)
!16245 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2536, file: !2536, line: 786, type: !15094, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16246)
!16246 = !{!16247, !16248, !16250}
!16247 = !DILocalVariable(name: "thread", arg: 1, scope: !16245, file: !2536, line: 786, type: !2428)
!16248 = !DILocalVariable(name: "__i", scope: !16249, file: !2536, line: 788, type: !15128)
!16249 = distinct !DILexicalBlock(scope: !16245, file: !2536, line: 788, column: 2)
!16250 = !DILocalVariable(name: "__key", scope: !16249, file: !2536, line: 788, type: !15128)
!16251 = !DILocation(line: 0, scope: !16245)
!16252 = !DILocation(line: 0, scope: !16249)
!16253 = !DILocation(line: 0, scope: !15136, inlinedAt: !16254)
!16254 = distinct !DILocation(line: 788, column: 2, scope: !16249)
!16255 = !DILocation(line: 55, column: 2, scope: !15145, inlinedAt: !16256)
!16256 = distinct !DILocation(line: 145, column: 10, scope: !15136, inlinedAt: !16254)
!16257 = !DILocation(line: 0, scope: !15145, inlinedAt: !16256)
!16258 = !DILocation(line: 148, column: 2, scope: !15153, inlinedAt: !16254)
!16259 = !DILocation(line: 148, column: 2, scope: !15154, inlinedAt: !16254)
!16260 = !DILocation(line: 148, column: 2, scope: !15157, inlinedAt: !16254)
!16261 = !DILocation(line: 160, column: 2, scope: !15136, inlinedAt: !16254)
!16262 = !DILocation(line: 789, column: 3, scope: !16263)
!16263 = distinct !DILexicalBlock(scope: !16264, file: !2536, line: 788, column: 26)
!16264 = distinct !DILexicalBlock(scope: !16249, file: !2536, line: 788, column: 2)
!16265 = !DILocation(line: 0, scope: !15170, inlinedAt: !16266)
!16266 = distinct !DILocation(line: 788, column: 2, scope: !16264)
!16267 = !DILocation(line: 194, column: 2, scope: !15178, inlinedAt: !16266)
!16268 = !DILocation(line: 194, column: 2, scope: !15179, inlinedAt: !16266)
!16269 = !DILocation(line: 194, column: 2, scope: !15182, inlinedAt: !16266)
!16270 = !DILocation(line: 0, scope: !15184, inlinedAt: !16271)
!16271 = distinct !DILocation(line: 215, column: 2, scope: !15170, inlinedAt: !16266)
!16272 = !DILocation(line: 95, column: 2, scope: !15184, inlinedAt: !16271)
!16273 = !DILocation(line: 791, column: 1, scope: !16245)
!16274 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2536, file: !2536, line: 816, type: !16275, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16277)
!16275 = !DISubroutineType(types: !16276)
!16276 = !{!107, !152, !2459, !16024}
!16277 = !{!16278, !16279, !16280, !16281, !16282, !16284}
!16278 = !DILocalVariable(name: "key", arg: 1, scope: !16274, file: !2536, line: 816, type: !152)
!16279 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16274, file: !2536, line: 816, type: !2459)
!16280 = !DILocalVariable(name: "timeout", arg: 3, scope: !16274, file: !2536, line: 816, type: !16024)
!16281 = !DILocalVariable(name: "ret", scope: !16274, file: !2536, line: 828, type: !107)
!16282 = !DILocalVariable(name: "__i", scope: !16283, file: !2536, line: 829, type: !15128)
!16283 = distinct !DILexicalBlock(scope: !16274, file: !2536, line: 829, column: 2)
!16284 = !DILocalVariable(name: "__key", scope: !16283, file: !2536, line: 829, type: !15128)
!16285 = !DILocation(line: 0, scope: !16274)
!16286 = !DILocation(line: 823, column: 14, scope: !16274)
!16287 = !DILocation(line: 823, column: 2, scope: !16274)
!16288 = !DILocation(line: 826, column: 20, scope: !16274)
!16289 = !DILocation(line: 826, column: 18, scope: !16274)
!16290 = !DILocation(line: 828, column: 12, scope: !16274)
!16291 = !DILocation(line: 0, scope: !16283)
!16292 = !DILocation(line: 0, scope: !15136, inlinedAt: !16293)
!16293 = distinct !DILocation(line: 829, column: 2, scope: !16283)
!16294 = !DILocation(line: 55, column: 2, scope: !15145, inlinedAt: !16295)
!16295 = distinct !DILocation(line: 145, column: 10, scope: !15136, inlinedAt: !16293)
!16296 = !DILocation(line: 0, scope: !15145, inlinedAt: !16295)
!16297 = !DILocation(line: 148, column: 2, scope: !15153, inlinedAt: !16293)
!16298 = !DILocation(line: 148, column: 2, scope: !15154, inlinedAt: !16293)
!16299 = !DILocation(line: 148, column: 2, scope: !15157, inlinedAt: !16293)
!16300 = !DILocation(line: 160, column: 2, scope: !15136, inlinedAt: !16293)
!16301 = !DILocation(line: 830, column: 7, scope: !16302)
!16302 = distinct !DILexicalBlock(scope: !16303, file: !2536, line: 830, column: 7)
!16303 = distinct !DILexicalBlock(scope: !16304, file: !2536, line: 829, column: 26)
!16304 = distinct !DILexicalBlock(scope: !16283, file: !2536, line: 829, column: 2)
!16305 = !DILocation(line: 830, column: 26, scope: !16302)
!16306 = !DILocation(line: 830, column: 23, scope: !16302)
!16307 = !DILocation(line: 830, column: 7, scope: !16303)
!16308 = !DILocation(line: 831, column: 20, scope: !16309)
!16309 = distinct !DILexicalBlock(scope: !16302, file: !2536, line: 830, column: 36)
!16310 = !DILocation(line: 832, column: 3, scope: !16309)
!16311 = !DILocation(line: 0, scope: !15170, inlinedAt: !16312)
!16312 = distinct !DILocation(line: 829, column: 2, scope: !16304)
!16313 = !DILocation(line: 194, column: 2, scope: !15178, inlinedAt: !16312)
!16314 = !DILocation(line: 194, column: 2, scope: !15179, inlinedAt: !16312)
!16315 = !DILocation(line: 194, column: 2, scope: !15182, inlinedAt: !16312)
!16316 = !DILocation(line: 0, scope: !15184, inlinedAt: !16317)
!16317 = distinct !DILocation(line: 215, column: 2, scope: !15170, inlinedAt: !16312)
!16318 = !DILocation(line: 95, column: 2, scope: !15184, inlinedAt: !16317)
!16319 = !DILocation(line: 834, column: 2, scope: !16274)
!16320 = distinct !DISubprogram(name: "z_pend_curr", scope: !2536, file: !2536, line: 840, type: !16321, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16323)
!16321 = !DISubroutineType(types: !16322)
!16322 = !{!107, !15139, !15128, !2459, !16024}
!16323 = !{!16324, !16325, !16326, !16327}
!16324 = !DILocalVariable(name: "lock", arg: 1, scope: !16320, file: !2536, line: 840, type: !15139)
!16325 = !DILocalVariable(name: "key", arg: 2, scope: !16320, file: !2536, line: 840, type: !15128)
!16326 = !DILocalVariable(name: "wait_q", arg: 3, scope: !16320, file: !2536, line: 841, type: !2459)
!16327 = !DILocalVariable(name: "timeout", arg: 4, scope: !16320, file: !2536, line: 841, type: !16024)
!16328 = !DILocation(line: 0, scope: !16320)
!16329 = !DILocation(line: 844, column: 20, scope: !16320)
!16330 = !DILocation(line: 844, column: 18, scope: !16320)
!16331 = !DILocation(line: 846, column: 2, scope: !16332)
!16332 = distinct !DILexicalBlock(scope: !16333, file: !2536, line: 846, column: 2)
!16333 = distinct !DILexicalBlock(scope: !16320, file: !2536, line: 846, column: 2)
!16334 = !DILocation(line: 846, column: 2, scope: !16333)
!16335 = !DILocation(line: 846, column: 2, scope: !16336)
!16336 = distinct !DILexicalBlock(scope: !16332, file: !2536, line: 846, column: 2)
!16337 = !DILocation(line: 0, scope: !15136, inlinedAt: !16338)
!16338 = distinct !DILocation(line: 856, column: 9, scope: !16320)
!16339 = !DILocation(line: 55, column: 2, scope: !15145, inlinedAt: !16340)
!16340 = distinct !DILocation(line: 145, column: 10, scope: !15136, inlinedAt: !16338)
!16341 = !DILocation(line: 0, scope: !15145, inlinedAt: !16340)
!16342 = !DILocation(line: 148, column: 2, scope: !15153, inlinedAt: !16338)
!16343 = !DILocation(line: 148, column: 2, scope: !15154, inlinedAt: !16338)
!16344 = !DILocation(line: 148, column: 2, scope: !15157, inlinedAt: !16338)
!16345 = !DILocation(line: 160, column: 2, scope: !15136, inlinedAt: !16338)
!16346 = !DILocation(line: 857, column: 14, scope: !16320)
!16347 = !DILocation(line: 857, column: 2, scope: !16320)
!16348 = !DILocation(line: 0, scope: !15823, inlinedAt: !16349)
!16349 = distinct !DILocation(line: 858, column: 2, scope: !16320)
!16350 = !DILocation(line: 225, column: 2, scope: !15830, inlinedAt: !16349)
!16351 = !DILocation(line: 225, column: 2, scope: !15831, inlinedAt: !16349)
!16352 = !DILocation(line: 225, column: 2, scope: !15834, inlinedAt: !16349)
!16353 = !DILocation(line: 0, scope: !15814, inlinedAt: !16354)
!16354 = distinct !DILocation(line: 859, column: 9, scope: !16320)
!16355 = !DILocation(line: 0, scope: !15823, inlinedAt: !16356)
!16356 = distinct !DILocation(line: 195, column: 2, scope: !15814, inlinedAt: !16354)
!16357 = !DILocation(line: 225, column: 2, scope: !15830, inlinedAt: !16356)
!16358 = !DILocation(line: 225, column: 2, scope: !15831, inlinedAt: !16356)
!16359 = !DILocation(line: 225, column: 2, scope: !15834, inlinedAt: !16356)
!16360 = !DILocation(line: 196, column: 9, scope: !15814, inlinedAt: !16354)
!16361 = !DILocation(line: 859, column: 2, scope: !16320)
!16362 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2536, file: !2536, line: 862, type: !16363, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16365)
!16363 = !DISubroutineType(types: !16364)
!16364 = !{!2428, !2459}
!16365 = !{!16366, !16367, !16368, !16370}
!16366 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16362, file: !2536, line: 862, type: !2459)
!16367 = !DILocalVariable(name: "thread", scope: !16362, file: !2536, line: 864, type: !2428)
!16368 = !DILocalVariable(name: "__i", scope: !16369, file: !2536, line: 866, type: !15128)
!16369 = distinct !DILexicalBlock(scope: !16362, file: !2536, line: 866, column: 2)
!16370 = !DILocalVariable(name: "__key", scope: !16369, file: !2536, line: 866, type: !15128)
!16371 = !DILocation(line: 0, scope: !16362)
!16372 = !DILocation(line: 0, scope: !16369)
!16373 = !DILocation(line: 0, scope: !15136, inlinedAt: !16374)
!16374 = distinct !DILocation(line: 866, column: 2, scope: !16369)
!16375 = !DILocation(line: 55, column: 2, scope: !15145, inlinedAt: !16376)
!16376 = distinct !DILocation(line: 145, column: 10, scope: !15136, inlinedAt: !16374)
!16377 = !DILocation(line: 0, scope: !15145, inlinedAt: !16376)
!16378 = !DILocation(line: 148, column: 2, scope: !15153, inlinedAt: !16374)
!16379 = !DILocation(line: 148, column: 2, scope: !15154, inlinedAt: !16374)
!16380 = !DILocation(line: 148, column: 2, scope: !15157, inlinedAt: !16374)
!16381 = !DILocation(line: 160, column: 2, scope: !15136, inlinedAt: !16374)
!16382 = !DILocation(line: 867, column: 12, scope: !16383)
!16383 = distinct !DILexicalBlock(scope: !16384, file: !2536, line: 866, column: 26)
!16384 = distinct !DILexicalBlock(scope: !16369, file: !2536, line: 866, column: 2)
!16385 = !DILocation(line: 869, column: 14, scope: !16386)
!16386 = distinct !DILexicalBlock(scope: !16383, file: !2536, line: 869, column: 7)
!16387 = !DILocation(line: 869, column: 7, scope: !16383)
!16388 = !DILocation(line: 870, column: 4, scope: !16389)
!16389 = distinct !DILexicalBlock(scope: !16386, file: !2536, line: 869, column: 23)
!16390 = !DILocation(line: 871, column: 3, scope: !16389)
!16391 = !DILocation(line: 0, scope: !15170, inlinedAt: !16392)
!16392 = distinct !DILocation(line: 866, column: 2, scope: !16384)
!16393 = !DILocation(line: 194, column: 2, scope: !15178, inlinedAt: !16392)
!16394 = !DILocation(line: 194, column: 2, scope: !15179, inlinedAt: !16392)
!16395 = !DILocation(line: 194, column: 2, scope: !15182, inlinedAt: !16392)
!16396 = !DILocation(line: 0, scope: !15184, inlinedAt: !16397)
!16397 = distinct !DILocation(line: 215, column: 2, scope: !15170, inlinedAt: !16392)
!16398 = !DILocation(line: 95, column: 2, scope: !15184, inlinedAt: !16397)
!16399 = !DILocation(line: 874, column: 2, scope: !16362)
!16400 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2536, file: !2536, line: 877, type: !16363, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16401)
!16401 = !{!16402, !16403, !16404, !16406}
!16402 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16400, file: !2536, line: 877, type: !2459)
!16403 = !DILocalVariable(name: "thread", scope: !16400, file: !2536, line: 879, type: !2428)
!16404 = !DILocalVariable(name: "__i", scope: !16405, file: !2536, line: 881, type: !15128)
!16405 = distinct !DILexicalBlock(scope: !16400, file: !2536, line: 881, column: 2)
!16406 = !DILocalVariable(name: "__key", scope: !16405, file: !2536, line: 881, type: !15128)
!16407 = !DILocation(line: 0, scope: !16400)
!16408 = !DILocation(line: 0, scope: !16405)
!16409 = !DILocation(line: 0, scope: !15136, inlinedAt: !16410)
!16410 = distinct !DILocation(line: 881, column: 2, scope: !16405)
!16411 = !DILocation(line: 55, column: 2, scope: !15145, inlinedAt: !16412)
!16412 = distinct !DILocation(line: 145, column: 10, scope: !15136, inlinedAt: !16410)
!16413 = !DILocation(line: 0, scope: !15145, inlinedAt: !16412)
!16414 = !DILocation(line: 148, column: 2, scope: !15153, inlinedAt: !16410)
!16415 = !DILocation(line: 148, column: 2, scope: !15154, inlinedAt: !16410)
!16416 = !DILocation(line: 148, column: 2, scope: !15157, inlinedAt: !16410)
!16417 = !DILocation(line: 160, column: 2, scope: !15136, inlinedAt: !16410)
!16418 = !DILocation(line: 882, column: 12, scope: !16419)
!16419 = distinct !DILexicalBlock(scope: !16420, file: !2536, line: 881, column: 26)
!16420 = distinct !DILexicalBlock(scope: !16405, file: !2536, line: 881, column: 2)
!16421 = !DILocation(line: 884, column: 14, scope: !16422)
!16422 = distinct !DILexicalBlock(scope: !16419, file: !2536, line: 884, column: 7)
!16423 = !DILocation(line: 884, column: 7, scope: !16419)
!16424 = !DILocation(line: 885, column: 4, scope: !16425)
!16425 = distinct !DILexicalBlock(scope: !16422, file: !2536, line: 884, column: 23)
!16426 = !DILocation(line: 886, column: 10, scope: !16425)
!16427 = !DILocation(line: 887, column: 3, scope: !16425)
!16428 = !DILocation(line: 0, scope: !15170, inlinedAt: !16429)
!16429 = distinct !DILocation(line: 881, column: 2, scope: !16420)
!16430 = !DILocation(line: 194, column: 2, scope: !15178, inlinedAt: !16429)
!16431 = !DILocation(line: 194, column: 2, scope: !15179, inlinedAt: !16429)
!16432 = !DILocation(line: 194, column: 2, scope: !15182, inlinedAt: !16429)
!16433 = !DILocation(line: 0, scope: !15184, inlinedAt: !16434)
!16434 = distinct !DILocation(line: 215, column: 2, scope: !15170, inlinedAt: !16429)
!16435 = !DILocation(line: 95, column: 2, scope: !15184, inlinedAt: !16434)
!16436 = !DILocation(line: 890, column: 2, scope: !16400)
!16437 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2536, file: !2536, line: 893, type: !15094, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16438)
!16438 = !{!16439}
!16439 = !DILocalVariable(name: "thread", arg: 1, scope: !16437, file: !2536, line: 893, type: !2428)
!16440 = !DILocation(line: 0, scope: !16437)
!16441 = !DILocation(line: 0, scope: !16245, inlinedAt: !16442)
!16442 = distinct !DILocation(line: 895, column: 2, scope: !16437)
!16443 = !DILocation(line: 0, scope: !16249, inlinedAt: !16442)
!16444 = !DILocation(line: 0, scope: !15136, inlinedAt: !16445)
!16445 = distinct !DILocation(line: 788, column: 2, scope: !16249, inlinedAt: !16442)
!16446 = !DILocation(line: 55, column: 2, scope: !15145, inlinedAt: !16447)
!16447 = distinct !DILocation(line: 145, column: 10, scope: !15136, inlinedAt: !16445)
!16448 = !DILocation(line: 0, scope: !15145, inlinedAt: !16447)
!16449 = !DILocation(line: 148, column: 2, scope: !15153, inlinedAt: !16445)
!16450 = !DILocation(line: 148, column: 2, scope: !15154, inlinedAt: !16445)
!16451 = !DILocation(line: 148, column: 2, scope: !15157, inlinedAt: !16445)
!16452 = !DILocation(line: 160, column: 2, scope: !15136, inlinedAt: !16445)
!16453 = !DILocation(line: 789, column: 3, scope: !16263, inlinedAt: !16442)
!16454 = !DILocation(line: 0, scope: !15170, inlinedAt: !16455)
!16455 = distinct !DILocation(line: 788, column: 2, scope: !16264, inlinedAt: !16442)
!16456 = !DILocation(line: 194, column: 2, scope: !15178, inlinedAt: !16455)
!16457 = !DILocation(line: 194, column: 2, scope: !15179, inlinedAt: !16455)
!16458 = !DILocation(line: 194, column: 2, scope: !15182, inlinedAt: !16455)
!16459 = !DILocation(line: 0, scope: !15184, inlinedAt: !16460)
!16460 = distinct !DILocation(line: 215, column: 2, scope: !15170, inlinedAt: !16455)
!16461 = !DILocation(line: 95, column: 2, scope: !15184, inlinedAt: !16460)
!16462 = !DILocation(line: 896, column: 8, scope: !16437)
!16463 = !DILocation(line: 897, column: 1, scope: !16437)
!16464 = distinct !DISubprogram(name: "z_set_prio", scope: !2536, file: !2536, line: 902, type: !15497, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16465)
!16465 = !{!16466, !16467, !16468, !16469, !16471}
!16466 = !DILocalVariable(name: "thread", arg: 1, scope: !16464, file: !2536, line: 902, type: !2428)
!16467 = !DILocalVariable(name: "prio", arg: 2, scope: !16464, file: !2536, line: 902, type: !107)
!16468 = !DILocalVariable(name: "need_sched", scope: !16464, file: !2536, line: 904, type: !145)
!16469 = !DILocalVariable(name: "__i", scope: !16470, file: !2536, line: 906, type: !15128)
!16470 = distinct !DILexicalBlock(scope: !16464, file: !2536, line: 906, column: 2)
!16471 = !DILocalVariable(name: "__key", scope: !16470, file: !2536, line: 906, type: !15128)
!16472 = !DILocation(line: 0, scope: !16464)
!16473 = !DILocation(line: 0, scope: !16470)
!16474 = !DILocation(line: 0, scope: !15136, inlinedAt: !16475)
!16475 = distinct !DILocation(line: 906, column: 2, scope: !16470)
!16476 = !DILocation(line: 55, column: 2, scope: !15145, inlinedAt: !16477)
!16477 = distinct !DILocation(line: 145, column: 10, scope: !15136, inlinedAt: !16475)
!16478 = !DILocation(line: 0, scope: !15145, inlinedAt: !16477)
!16479 = !DILocation(line: 148, column: 2, scope: !15153, inlinedAt: !16475)
!16480 = !DILocation(line: 148, column: 2, scope: !15154, inlinedAt: !16475)
!16481 = !DILocation(line: 148, column: 2, scope: !15157, inlinedAt: !16475)
!16482 = !DILocation(line: 160, column: 2, scope: !15136, inlinedAt: !16475)
!16483 = !DILocation(line: 907, column: 16, scope: !16484)
!16484 = distinct !DILexicalBlock(scope: !16485, file: !2536, line: 906, column: 26)
!16485 = distinct !DILexicalBlock(scope: !16470, file: !2536, line: 906, column: 2)
!16486 = !DILocation(line: 909, column: 7, scope: !16484)
!16487 = !DILocation(line: 0, scope: !15328, inlinedAt: !16488)
!16488 = distinct !DILocation(line: 912, column: 5, scope: !16489)
!16489 = distinct !DILexicalBlock(scope: !16490, file: !2536, line: 911, column: 63)
!16490 = distinct !DILexicalBlock(scope: !16491, file: !2536, line: 911, column: 8)
!16491 = distinct !DILexicalBlock(scope: !16492, file: !2536, line: 909, column: 19)
!16492 = distinct !DILexicalBlock(scope: !16484, file: !2536, line: 909, column: 7)
!16493 = !DILocation(line: 266, column: 28, scope: !15328, inlinedAt: !16488)
!16494 = !DILocation(line: 0, scope: !15336, inlinedAt: !16495)
!16495 = distinct !DILocation(line: 268, column: 3, scope: !15340, inlinedAt: !16488)
!16496 = !DILocation(line: 234, column: 2, scope: !15336, inlinedAt: !16495)
!16497 = !DILocation(line: 913, column: 23, scope: !16489)
!16498 = !DILocation(line: 0, scope: !15345, inlinedAt: !16499)
!16499 = distinct !DILocation(line: 914, column: 5, scope: !16489)
!16500 = !DILocation(line: 252, column: 28, scope: !15345, inlinedAt: !16499)
!16501 = !DILocation(line: 0, scope: !15352, inlinedAt: !16502)
!16502 = distinct !DILocation(line: 254, column: 3, scope: !15356, inlinedAt: !16499)
!16503 = !DILocation(line: 0, scope: !15359, inlinedAt: !16504)
!16504 = distinct !DILocation(line: 229, column: 2, scope: !15352, inlinedAt: !16502)
!16505 = !DILocation(line: 186, column: 2, scope: !15369, inlinedAt: !16504)
!16506 = !DILocation(line: 186, column: 2, scope: !15370, inlinedAt: !16504)
!16507 = !DILocation(line: 186, column: 2, scope: !15373, inlinedAt: !16504)
!16508 = !DILocation(line: 188, column: 2, scope: !15375, inlinedAt: !16504)
!16509 = !DILocation(line: 188, column: 2, scope: !15377, inlinedAt: !16504)
!16510 = !DILocation(line: 0, scope: !15375, inlinedAt: !16504)
!16511 = !DILocation(line: 189, column: 7, scope: !15380, inlinedAt: !16504)
!16512 = !DILocation(line: 189, column: 35, scope: !15380, inlinedAt: !16504)
!16513 = !DILocation(line: 189, column: 7, scope: !15381, inlinedAt: !16504)
!16514 = !DILocation(line: 190, column: 4, scope: !15385, inlinedAt: !16504)
!16515 = !DILocation(line: 192, column: 4, scope: !15385, inlinedAt: !16504)
!16516 = distinct !{!16516, !16508, !16517}
!16517 = !DILocation(line: 194, column: 2, scope: !15375, inlinedAt: !16504)
!16518 = !DILocation(line: 196, column: 2, scope: !15359, inlinedAt: !16504)
!16519 = !DILocation(line: 197, column: 1, scope: !15359, inlinedAt: !16504)
!16520 = !DILocation(line: 918, column: 4, scope: !16491)
!16521 = !DILocation(line: 919, column: 3, scope: !16491)
!16522 = !DILocation(line: 920, column: 22, scope: !16523)
!16523 = distinct !DILexicalBlock(scope: !16492, file: !2536, line: 919, column: 10)
!16524 = !DILocation(line: 0, scope: !15170, inlinedAt: !16525)
!16525 = distinct !DILocation(line: 906, column: 2, scope: !16485)
!16526 = !DILocation(line: 194, column: 2, scope: !15178, inlinedAt: !16525)
!16527 = !DILocation(line: 194, column: 2, scope: !15179, inlinedAt: !16525)
!16528 = !DILocation(line: 194, column: 2, scope: !15182, inlinedAt: !16525)
!16529 = !DILocation(line: 0, scope: !15184, inlinedAt: !16530)
!16530 = distinct !DILocation(line: 215, column: 2, scope: !15170, inlinedAt: !16525)
!16531 = !DILocation(line: 95, column: 2, scope: !15184, inlinedAt: !16530)
!16532 = !DILocation(line: 926, column: 2, scope: !16464)
!16533 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2536, file: !2536, line: 929, type: !16534, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16536)
!16534 = !DISubroutineType(types: !16535)
!16535 = !{null, !2428, !107}
!16536 = !{!16537, !16538, !16539}
!16537 = !DILocalVariable(name: "thread", arg: 1, scope: !16533, file: !2536, line: 929, type: !2428)
!16538 = !DILocalVariable(name: "prio", arg: 2, scope: !16533, file: !2536, line: 929, type: !107)
!16539 = !DILocalVariable(name: "need_sched", scope: !16533, file: !2536, line: 931, type: !145)
!16540 = !DILocation(line: 0, scope: !16533)
!16541 = !DILocation(line: 931, column: 20, scope: !16533)
!16542 = !DILocation(line: 935, column: 17, scope: !16543)
!16543 = distinct !DILexicalBlock(scope: !16533, file: !2536, line: 935, column: 6)
!16544 = !DILocation(line: 935, column: 20, scope: !16543)
!16545 = !DILocation(line: 935, column: 35, scope: !16543)
!16546 = !DILocation(line: 935, column: 48, scope: !16543)
!16547 = !DILocation(line: 935, column: 6, scope: !16533)
!16548 = !DILocation(line: 936, column: 3, scope: !16549)
!16549 = distinct !DILexicalBlock(scope: !16543, file: !2536, line: 935, column: 55)
!16550 = !DILocation(line: 937, column: 2, scope: !16549)
!16551 = !DILocation(line: 938, column: 1, scope: !16533)
!16552 = distinct !DISubprogram(name: "k_sched_lock", scope: !2536, file: !2536, line: 987, type: !3148, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16553)
!16553 = !{!16554, !16556}
!16554 = !DILocalVariable(name: "__i", scope: !16555, file: !2536, line: 989, type: !15128)
!16555 = distinct !DILexicalBlock(scope: !16552, file: !2536, line: 989, column: 2)
!16556 = !DILocalVariable(name: "__key", scope: !16555, file: !2536, line: 989, type: !15128)
!16557 = !DILocation(line: 0, scope: !16555)
!16558 = !DILocation(line: 0, scope: !15136, inlinedAt: !16559)
!16559 = distinct !DILocation(line: 989, column: 2, scope: !16555)
!16560 = !DILocation(line: 55, column: 2, scope: !15145, inlinedAt: !16561)
!16561 = distinct !DILocation(line: 145, column: 10, scope: !15136, inlinedAt: !16559)
!16562 = !DILocation(line: 0, scope: !15145, inlinedAt: !16561)
!16563 = !DILocation(line: 148, column: 2, scope: !15153, inlinedAt: !16559)
!16564 = !DILocation(line: 148, column: 2, scope: !15154, inlinedAt: !16559)
!16565 = !DILocation(line: 148, column: 2, scope: !15157, inlinedAt: !16559)
!16566 = !DILocation(line: 160, column: 2, scope: !15136, inlinedAt: !16559)
!16567 = !DILocation(line: 992, column: 3, scope: !16568)
!16568 = distinct !DILexicalBlock(scope: !16569, file: !2536, line: 989, column: 26)
!16569 = distinct !DILexicalBlock(scope: !16555, file: !2536, line: 989, column: 2)
!16570 = !DILocation(line: 0, scope: !15170, inlinedAt: !16571)
!16571 = distinct !DILocation(line: 989, column: 2, scope: !16569)
!16572 = !DILocation(line: 194, column: 2, scope: !15178, inlinedAt: !16571)
!16573 = !DILocation(line: 194, column: 2, scope: !15179, inlinedAt: !16571)
!16574 = !DILocation(line: 194, column: 2, scope: !15182, inlinedAt: !16571)
!16575 = !DILocation(line: 0, scope: !15184, inlinedAt: !16576)
!16576 = distinct !DILocation(line: 215, column: 2, scope: !15170, inlinedAt: !16571)
!16577 = !DILocation(line: 95, column: 2, scope: !15184, inlinedAt: !16576)
!16578 = !DILocation(line: 994, column: 1, scope: !16552)
!16579 = distinct !DISubprogram(name: "z_sched_lock", scope: !14296, file: !14296, line: 251, type: !3148, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !2236)
!16580 = !DILocation(line: 1031, column: 3, scope: !15863, inlinedAt: !16581)
!16581 = distinct !DILocation(line: 48, column: 10, scope: !15867, inlinedAt: !16582)
!16582 = distinct !DILocation(line: 253, column: 2, scope: !16583)
!16583 = distinct !DILexicalBlock(scope: !16584, file: !14296, line: 253, column: 2)
!16584 = distinct !DILexicalBlock(scope: !16579, file: !14296, line: 253, column: 2)
!16585 = !DILocation(line: 0, scope: !15863, inlinedAt: !16581)
!16586 = !DILocation(line: 48, column: 9, scope: !15867, inlinedAt: !16582)
!16587 = !DILocation(line: 253, column: 2, scope: !16584)
!16588 = !DILocation(line: 253, column: 2, scope: !16589)
!16589 = distinct !DILexicalBlock(scope: !16583, file: !14296, line: 253, column: 2)
!16590 = !DILocation(line: 254, column: 2, scope: !16591)
!16591 = distinct !DILexicalBlock(scope: !16592, file: !14296, line: 254, column: 2)
!16592 = distinct !DILexicalBlock(scope: !16579, file: !14296, line: 254, column: 2)
!16593 = !DILocation(line: 254, column: 2, scope: !16592)
!16594 = !DILocation(line: 254, column: 2, scope: !16595)
!16595 = distinct !DILexicalBlock(scope: !16591, file: !14296, line: 254, column: 2)
!16596 = !DILocation(line: 256, column: 2, scope: !16579)
!16597 = !DILocation(line: 258, column: 2, scope: !16598)
!16598 = distinct !DILexicalBlock(scope: !16579, file: !14296, line: 258, column: 2)
!16599 = !{i64 2155197313}
!16600 = !DILocation(line: 259, column: 1, scope: !16579)
!16601 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2536, file: !2536, line: 996, type: !3148, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16602)
!16602 = !{!16603, !16605}
!16603 = !DILocalVariable(name: "__i", scope: !16604, file: !2536, line: 998, type: !15128)
!16604 = distinct !DILexicalBlock(scope: !16601, file: !2536, line: 998, column: 2)
!16605 = !DILocalVariable(name: "__key", scope: !16604, file: !2536, line: 998, type: !15128)
!16606 = !DILocation(line: 0, scope: !16604)
!16607 = !DILocation(line: 0, scope: !15136, inlinedAt: !16608)
!16608 = distinct !DILocation(line: 998, column: 2, scope: !16604)
!16609 = !DILocation(line: 55, column: 2, scope: !15145, inlinedAt: !16610)
!16610 = distinct !DILocation(line: 145, column: 10, scope: !15136, inlinedAt: !16608)
!16611 = !DILocation(line: 0, scope: !15145, inlinedAt: !16610)
!16612 = !DILocation(line: 148, column: 2, scope: !15153, inlinedAt: !16608)
!16613 = !DILocation(line: 148, column: 2, scope: !15154, inlinedAt: !16608)
!16614 = !DILocation(line: 148, column: 2, scope: !15157, inlinedAt: !16608)
!16615 = !DILocation(line: 160, column: 2, scope: !15136, inlinedAt: !16608)
!16616 = !DILocation(line: 999, column: 3, scope: !16617)
!16617 = distinct !DILexicalBlock(scope: !16618, file: !2536, line: 999, column: 3)
!16618 = distinct !DILexicalBlock(scope: !16619, file: !2536, line: 999, column: 3)
!16619 = distinct !DILexicalBlock(scope: !16620, file: !2536, line: 998, column: 26)
!16620 = distinct !DILexicalBlock(scope: !16604, file: !2536, line: 998, column: 2)
!16621 = !DILocation(line: 999, column: 3, scope: !16618)
!16622 = !DILocation(line: 999, column: 3, scope: !16623)
!16623 = distinct !DILexicalBlock(scope: !16617, file: !2536, line: 999, column: 3)
!16624 = !DILocation(line: 1031, column: 3, scope: !15863, inlinedAt: !16625)
!16625 = distinct !DILocation(line: 48, column: 10, scope: !15867, inlinedAt: !16626)
!16626 = distinct !DILocation(line: 1000, column: 3, scope: !16627)
!16627 = distinct !DILexicalBlock(scope: !16628, file: !2536, line: 1000, column: 3)
!16628 = distinct !DILexicalBlock(scope: !16619, file: !2536, line: 1000, column: 3)
!16629 = !DILocation(line: 0, scope: !15863, inlinedAt: !16625)
!16630 = !DILocation(line: 48, column: 9, scope: !15867, inlinedAt: !16626)
!16631 = !DILocation(line: 1000, column: 3, scope: !16628)
!16632 = !DILocation(line: 1000, column: 3, scope: !16633)
!16633 = distinct !DILexicalBlock(scope: !16627, file: !2536, line: 1000, column: 3)
!16634 = !DILocation(line: 1002, column: 5, scope: !16619)
!16635 = !DILocation(line: 1002, column: 20, scope: !16619)
!16636 = !DILocation(line: 1002, column: 3, scope: !16619)
!16637 = !DILocation(line: 1003, column: 3, scope: !16619)
!16638 = !DILocation(line: 0, scope: !15170, inlinedAt: !16639)
!16639 = distinct !DILocation(line: 998, column: 2, scope: !16620)
!16640 = !DILocation(line: 194, column: 2, scope: !15178, inlinedAt: !16639)
!16641 = !DILocation(line: 194, column: 2, scope: !15179, inlinedAt: !16639)
!16642 = !DILocation(line: 194, column: 2, scope: !15182, inlinedAt: !16639)
!16643 = !DILocation(line: 0, scope: !15184, inlinedAt: !16644)
!16644 = distinct !DILocation(line: 215, column: 2, scope: !15170, inlinedAt: !16639)
!16645 = !DILocation(line: 95, column: 2, scope: !15184, inlinedAt: !16644)
!16646 = !DILocation(line: 1011, column: 2, scope: !16601)
!16647 = !DILocation(line: 1012, column: 1, scope: !16601)
!16648 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2536, file: !2536, line: 1014, type: !15485, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !2236)
!16649 = !DILocation(line: 1028, column: 25, scope: !16648)
!16650 = !DILocation(line: 1028, column: 2, scope: !16648)
!16651 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2536, file: !2536, line: 1155, type: !16652, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16654)
!16652 = !DISubroutineType(types: !16653)
!16653 = !{!145, !2457, !2457}
!16654 = !{!16655, !16656, !16657, !16658, !16659}
!16655 = !DILocalVariable(name: "a", arg: 1, scope: !16651, file: !2536, line: 1155, type: !2457)
!16656 = !DILocalVariable(name: "b", arg: 2, scope: !16651, file: !2536, line: 1155, type: !2457)
!16657 = !DILocalVariable(name: "thread_a", scope: !16651, file: !2536, line: 1157, type: !2428)
!16658 = !DILocalVariable(name: "thread_b", scope: !16651, file: !2536, line: 1157, type: !2428)
!16659 = !DILocalVariable(name: "cmp", scope: !16651, file: !2536, line: 1158, type: !904)
!16660 = !DILocation(line: 0, scope: !16651)
!16661 = !DILocation(line: 1160, column: 13, scope: !16651)
!16662 = !DILocation(line: 1161, column: 13, scope: !16651)
!16663 = !DILocation(line: 1163, column: 8, scope: !16651)
!16664 = !DILocation(line: 1165, column: 10, scope: !16665)
!16665 = distinct !DILexicalBlock(scope: !16651, file: !2536, line: 1165, column: 6)
!16666 = !DILocation(line: 1165, column: 6, scope: !16651)
!16667 = !DILocation(line: 1167, column: 17, scope: !16668)
!16668 = distinct !DILexicalBlock(scope: !16665, file: !2536, line: 1167, column: 13)
!16669 = !DILocation(line: 1167, column: 13, scope: !16665)
!16670 = !DILocation(line: 1170, column: 25, scope: !16671)
!16671 = distinct !DILexicalBlock(scope: !16668, file: !2536, line: 1169, column: 9)
!16672 = !DILocation(line: 1170, column: 52, scope: !16671)
!16673 = !DILocation(line: 1170, column: 35, scope: !16671)
!16674 = !DILocation(line: 1170, column: 3, scope: !16671)
!16675 = !DILocation(line: 0, scope: !16665)
!16676 = !DILocation(line: 1173, column: 1, scope: !16651)
!16677 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2536, file: !2536, line: 1175, type: !16678, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16693)
!16678 = !DISubroutineType(types: !16679)
!16679 = !{null, !16680, !2428}
!16680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16681, size: 32)
!16681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !16682, line: 37, size: 128, elements: !16683)
!16682 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16683 = !{!16684, !16692}
!16684 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !16681, file: !16682, line: 38, baseType: !16685, size: 96)
!16685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !335, line: 83, size: 96, elements: !16686)
!16686 = !{!16687, !16688, !16691}
!16687 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !16685, file: !335, line: 84, baseType: !2457, size: 32)
!16688 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !16685, file: !335, line: 85, baseType: !16689, size: 32, offset: 32)
!16689 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !335, line: 81, baseType: !16690)
!16690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16652, size: 32)
!16691 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !16685, file: !335, line: 86, baseType: !107, size: 32, offset: 64)
!16692 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !16681, file: !16682, line: 39, baseType: !107, size: 32, offset: 96)
!16693 = !{!16694, !16695, !16696, !16697, !16706}
!16694 = !DILocalVariable(name: "pq", arg: 1, scope: !16677, file: !2536, line: 1175, type: !16680)
!16695 = !DILocalVariable(name: "thread", arg: 2, scope: !16677, file: !2536, line: 1175, type: !2428)
!16696 = !DILocalVariable(name: "t", scope: !16677, file: !2536, line: 1177, type: !2428)
!16697 = !DILocalVariable(name: "__f", scope: !16698, file: !2536, line: 1190, type: !16701)
!16698 = distinct !DILexicalBlock(scope: !16699, file: !2536, line: 1190, column: 3)
!16699 = distinct !DILexicalBlock(scope: !16700, file: !2536, line: 1189, column: 27)
!16700 = distinct !DILexicalBlock(scope: !16677, file: !2536, line: 1189, column: 6)
!16701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !335, line: 155, size: 96, elements: !16702)
!16702 = !{!16703, !16704, !16705}
!16703 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !16701, file: !335, line: 156, baseType: !2531, size: 32)
!16704 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !16701, file: !335, line: 157, baseType: !194, size: 32, offset: 32)
!16705 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !16701, file: !335, line: 158, baseType: !904, size: 32, offset: 64)
!16706 = !DILocalVariable(name: "n", scope: !16707, file: !2536, line: 1190, type: !2457)
!16707 = distinct !DILexicalBlock(scope: !16708, file: !2536, line: 1190, column: 3)
!16708 = distinct !DILexicalBlock(scope: !16698, file: !2536, line: 1190, column: 3)
!16709 = !DILocation(line: 0, scope: !16677)
!16710 = !DILocation(line: 1179, column: 2, scope: !16711)
!16711 = distinct !DILexicalBlock(scope: !16712, file: !2536, line: 1179, column: 2)
!16712 = distinct !DILexicalBlock(scope: !16677, file: !2536, line: 1179, column: 2)
!16713 = !DILocation(line: 1179, column: 2, scope: !16712)
!16714 = !DILocation(line: 1179, column: 2, scope: !16715)
!16715 = distinct !DILexicalBlock(scope: !16711, file: !2536, line: 1179, column: 2)
!16716 = !DILocation(line: 1181, column: 31, scope: !16677)
!16717 = !DILocation(line: 1181, column: 45, scope: !16677)
!16718 = !DILocation(line: 1181, column: 15, scope: !16677)
!16719 = !DILocation(line: 1181, column: 25, scope: !16677)
!16720 = !DILocation(line: 1189, column: 11, scope: !16700)
!16721 = !DILocation(line: 1189, column: 7, scope: !16700)
!16722 = !DILocation(line: 1189, column: 6, scope: !16677)
!16723 = !DILocation(line: 1190, column: 3, scope: !16698)
!16724 = !DILocation(line: 1190, column: 3, scope: !16707)
!16725 = !DILocation(line: 0, scope: !16707)
!16726 = !DILocation(line: 1190, column: 3, scope: !16708)
!16727 = !DILocation(line: 1193, column: 2, scope: !16699)
!16728 = !DILocation(line: 1191, column: 42, scope: !16729)
!16729 = distinct !DILexicalBlock(scope: !16708, file: !2536, line: 1190, column: 54)
!16730 = !DILocation(line: 1191, column: 12, scope: !16729)
!16731 = !DILocation(line: 1191, column: 22, scope: !16729)
!16732 = distinct !{!16732, !16723, !16733}
!16733 = !DILocation(line: 1192, column: 3, scope: !16698)
!16734 = !DILocation(line: 1195, column: 17, scope: !16677)
!16735 = !DILocation(line: 1195, column: 37, scope: !16677)
!16736 = !DILocation(line: 1195, column: 2, scope: !16677)
!16737 = !DILocation(line: 1196, column: 1, scope: !16677)
!16738 = !DISubprogram(name: "z_rb_foreach_next", scope: !335, file: !335, line: 176, type: !16739, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2236)
!16739 = !DISubroutineType(types: !16740)
!16740 = !{!2457, !16741, !16742}
!16741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16685, size: 32)
!16742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16701, size: 32)
!16743 = !DISubprogram(name: "rb_insert", scope: !335, file: !335, line: 105, type: !16744, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2236)
!16744 = !DISubroutineType(types: !16745)
!16745 = !{null, !16741, !2457}
!16746 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2536, file: !2536, line: 1198, type: !16678, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16747)
!16747 = !{!16748, !16749}
!16748 = !DILocalVariable(name: "pq", arg: 1, scope: !16746, file: !2536, line: 1198, type: !16680)
!16749 = !DILocalVariable(name: "thread", arg: 2, scope: !16746, file: !2536, line: 1198, type: !2428)
!16750 = !DILocation(line: 0, scope: !16746)
!16751 = !DILocation(line: 1200, column: 2, scope: !16752)
!16752 = distinct !DILexicalBlock(scope: !16753, file: !2536, line: 1200, column: 2)
!16753 = distinct !DILexicalBlock(scope: !16746, file: !2536, line: 1200, column: 2)
!16754 = !DILocation(line: 1200, column: 2, scope: !16753)
!16755 = !DILocation(line: 1200, column: 2, scope: !16756)
!16756 = distinct !DILexicalBlock(scope: !16752, file: !2536, line: 1200, column: 2)
!16757 = !DILocation(line: 1202, column: 17, scope: !16746)
!16758 = !DILocation(line: 1202, column: 37, scope: !16746)
!16759 = !DILocation(line: 1202, column: 2, scope: !16746)
!16760 = !DILocation(line: 1204, column: 16, scope: !16761)
!16761 = distinct !DILexicalBlock(scope: !16746, file: !2536, line: 1204, column: 6)
!16762 = !DILocation(line: 1204, column: 7, scope: !16761)
!16763 = !DILocation(line: 1204, column: 6, scope: !16746)
!16764 = !DILocation(line: 1205, column: 7, scope: !16765)
!16765 = distinct !DILexicalBlock(scope: !16761, file: !2536, line: 1204, column: 22)
!16766 = !DILocation(line: 1205, column: 22, scope: !16765)
!16767 = !DILocation(line: 1206, column: 2, scope: !16765)
!16768 = !DILocation(line: 1207, column: 1, scope: !16746)
!16769 = !DISubprogram(name: "rb_remove", scope: !335, file: !335, line: 110, type: !16744, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2236)
!16770 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2536, file: !2536, line: 1209, type: !16771, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16773)
!16771 = !DISubroutineType(types: !16772)
!16772 = !{!2428, !16680}
!16773 = !{!16774, !16775, !16776}
!16774 = !DILocalVariable(name: "pq", arg: 1, scope: !16770, file: !2536, line: 1209, type: !16680)
!16775 = !DILocalVariable(name: "thread", scope: !16770, file: !2536, line: 1211, type: !2428)
!16776 = !DILocalVariable(name: "n", scope: !16770, file: !2536, line: 1212, type: !2457)
!16777 = !DILocation(line: 0, scope: !16770)
!16778 = !DILocation(line: 1212, column: 37, scope: !16770)
!16779 = !DILocation(line: 1212, column: 21, scope: !16770)
!16780 = !DILocation(line: 1217, column: 2, scope: !16770)
!16781 = distinct !DISubprogram(name: "rb_get_min", scope: !335, file: !335, line: 115, type: !16782, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16784)
!16782 = !DISubroutineType(types: !16783)
!16783 = !{!2457, !16741}
!16784 = !{!16785}
!16785 = !DILocalVariable(name: "tree", arg: 1, scope: !16781, file: !335, line: 115, type: !16741)
!16786 = !DILocation(line: 0, scope: !16781)
!16787 = !DILocation(line: 117, column: 9, scope: !16781)
!16788 = !DILocation(line: 117, column: 2, scope: !16781)
!16789 = !DISubprogram(name: "z_rb_get_minmax", scope: !335, file: !335, line: 100, type: !16790, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2236)
!16790 = !DISubroutineType(types: !16791)
!16791 = !{!2457, !16741, !195}
!16792 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2536, file: !2536, line: 1246, type: !16793, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16801)
!16793 = !DISubroutineType(types: !16794)
!16794 = !{!2428, !16795}
!16795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16796, size: 32)
!16796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !16682, line: 53, size: 2080, elements: !16797)
!16797 = !{!16798, !16800}
!16798 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !16796, file: !16682, line: 54, baseType: !16799, size: 2048)
!16799 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2464, size: 2048, elements: !394)
!16800 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !16796, file: !16682, line: 55, baseType: !32, size: 32, offset: 2048)
!16801 = !{!16802, !16803, !16804, !16805}
!16802 = !DILocalVariable(name: "pq", arg: 1, scope: !16792, file: !2536, line: 1246, type: !16795)
!16803 = !DILocalVariable(name: "thread", scope: !16792, file: !2536, line: 1252, type: !2428)
!16804 = !DILocalVariable(name: "l", scope: !16792, file: !2536, line: 1253, type: !15362)
!16805 = !DILocalVariable(name: "n", scope: !16792, file: !2536, line: 1254, type: !2532)
!16806 = !DILocation(line: 0, scope: !16792)
!16807 = !DILocation(line: 1248, column: 11, scope: !16808)
!16808 = distinct !DILexicalBlock(scope: !16792, file: !2536, line: 1248, column: 6)
!16809 = !DILocation(line: 1248, column: 7, scope: !16808)
!16810 = !DILocation(line: 1248, column: 6, scope: !16792)
!16811 = !DILocation(line: 1253, column: 31, scope: !16792)
!16812 = !DILocation(line: 1253, column: 20, scope: !16792)
!16813 = !DILocation(line: 1254, column: 19, scope: !16792)
!16814 = !DILocation(line: 1260, column: 1, scope: !16792)
!16815 = distinct !DISubprogram(name: "z_unpend_all", scope: !2536, file: !2536, line: 1262, type: !16816, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16818)
!16816 = !DISubroutineType(types: !16817)
!16817 = !{!107, !2459}
!16818 = !{!16819, !16820, !16821}
!16819 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16815, file: !2536, line: 1262, type: !2459)
!16820 = !DILocalVariable(name: "need_sched", scope: !16815, file: !2536, line: 1264, type: !107)
!16821 = !DILocalVariable(name: "thread", scope: !16815, file: !2536, line: 1265, type: !2428)
!16822 = !DILocation(line: 0, scope: !16815)
!16823 = !DILocation(line: 1267, column: 19, scope: !16815)
!16824 = !DILocation(line: 1267, column: 41, scope: !16815)
!16825 = !DILocation(line: 1267, column: 2, scope: !16815)
!16826 = !DILocation(line: 1268, column: 3, scope: !16827)
!16827 = distinct !DILexicalBlock(scope: !16815, file: !2536, line: 1267, column: 50)
!16828 = !DILocation(line: 1269, column: 3, scope: !16827)
!16829 = distinct !{!16829, !16825, !16830}
!16830 = !DILocation(line: 1271, column: 2, scope: !16815)
!16831 = !DILocation(line: 1273, column: 2, scope: !16815)
!16832 = distinct !DISubprogram(name: "z_waitq_head", scope: !14657, file: !14657, line: 52, type: !16363, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16833)
!16833 = !{!16834}
!16834 = !DILocalVariable(name: "w", arg: 1, scope: !16832, file: !14657, line: 52, type: !2459)
!16835 = !DILocation(line: 0, scope: !16832)
!16836 = !DILocation(line: 54, column: 52, scope: !16832)
!16837 = !DILocation(line: 54, column: 28, scope: !16832)
!16838 = !DILocation(line: 54, column: 9, scope: !16832)
!16839 = !DILocation(line: 54, column: 2, scope: !16832)
!16840 = distinct !DISubprogram(name: "init_ready_q", scope: !2536, file: !2536, line: 1276, type: !16841, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16848)
!16841 = !DISubroutineType(types: !16842)
!16842 = !{null, !16843}
!16843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16844, size: 32)
!16844 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !345, line: 83, size: 96, elements: !16845)
!16845 = !{!16846, !16847}
!16846 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !16844, file: !345, line: 86, baseType: !2428, size: 32)
!16847 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !16844, file: !345, line: 90, baseType: !2464, size: 64, offset: 32)
!16848 = !{!16849}
!16849 = !DILocalVariable(name: "rq", arg: 1, scope: !16840, file: !2536, line: 1276, type: !16843)
!16850 = !DILocation(line: 0, scope: !16840)
!16851 = !DILocation(line: 1289, column: 22, scope: !16840)
!16852 = !DILocation(line: 1289, column: 2, scope: !16840)
!16853 = !DILocation(line: 1291, column: 1, scope: !16840)
!16854 = distinct !DISubprogram(name: "sys_dlist_init", scope: !319, file: !319, line: 197, type: !16855, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16857)
!16855 = !DISubroutineType(types: !16856)
!16856 = !{null, !15362}
!16857 = !{!16858}
!16858 = !DILocalVariable(name: "list", arg: 1, scope: !16854, file: !319, line: 197, type: !15362)
!16859 = !DILocation(line: 0, scope: !16854)
!16860 = !DILocation(line: 199, column: 8, scope: !16854)
!16861 = !DILocation(line: 199, column: 13, scope: !16854)
!16862 = !DILocation(line: 200, column: 8, scope: !16854)
!16863 = !DILocation(line: 200, column: 13, scope: !16854)
!16864 = !DILocation(line: 201, column: 1, scope: !16854)
!16865 = distinct !DISubprogram(name: "z_sched_init", scope: !2536, file: !2536, line: 1293, type: !3148, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !2236)
!16866 = !DILocation(line: 1302, column: 2, scope: !16865)
!16867 = !DILocation(line: 1306, column: 2, scope: !16865)
!16868 = !DILocation(line: 1309, column: 1, scope: !16865)
!16869 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2536, file: !2536, line: 1311, type: !16870, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16873)
!16870 = !DISubroutineType(types: !16871)
!16871 = !{!107, !16872}
!16872 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !309, line: 347, baseType: !2428)
!16873 = !{!16874}
!16874 = !DILocalVariable(name: "thread", arg: 1, scope: !16869, file: !2536, line: 1311, type: !16872)
!16875 = !DILocation(line: 0, scope: !16869)
!16876 = !DILocation(line: 1313, column: 22, scope: !16869)
!16877 = !DILocation(line: 1313, column: 9, scope: !16869)
!16878 = !DILocation(line: 1313, column: 2, scope: !16869)
!16879 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2536, file: !2536, line: 1325, type: !16880, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16882)
!16880 = !DISubroutineType(types: !16881)
!16881 = !{null, !16872, !107}
!16882 = !{!16883, !16884, !16885}
!16883 = !DILocalVariable(name: "thread", arg: 1, scope: !16879, file: !2536, line: 1325, type: !16872)
!16884 = !DILocalVariable(name: "prio", arg: 2, scope: !16879, file: !2536, line: 1325, type: !107)
!16885 = !DILocalVariable(name: "th", scope: !16879, file: !2536, line: 1334, type: !2428)
!16886 = !DILocation(line: 0, scope: !16879)
!16887 = !DILocation(line: 1331, column: 2, scope: !16888)
!16888 = distinct !DILexicalBlock(scope: !16889, file: !2536, line: 1331, column: 2)
!16889 = distinct !DILexicalBlock(scope: !16890, file: !2536, line: 1331, column: 2)
!16890 = distinct !DILexicalBlock(scope: !16879, file: !2536, line: 1331, column: 2)
!16891 = !DILocation(line: 1331, column: 2, scope: !16892)
!16892 = distinct !DILexicalBlock(scope: !16888, file: !2536, line: 1331, column: 2)
!16893 = !DILocation(line: 1031, column: 3, scope: !15863, inlinedAt: !16894)
!16894 = distinct !DILocation(line: 48, column: 10, scope: !15867, inlinedAt: !16895)
!16895 = distinct !DILocation(line: 1332, column: 2, scope: !16896)
!16896 = distinct !DILexicalBlock(scope: !16897, file: !2536, line: 1332, column: 2)
!16897 = distinct !DILexicalBlock(scope: !16879, file: !2536, line: 1332, column: 2)
!16898 = !DILocation(line: 0, scope: !15863, inlinedAt: !16894)
!16899 = !DILocation(line: 48, column: 9, scope: !15867, inlinedAt: !16895)
!16900 = !DILocation(line: 1332, column: 2, scope: !16897)
!16901 = !DILocation(line: 1332, column: 2, scope: !16902)
!16902 = distinct !DILexicalBlock(scope: !16896, file: !2536, line: 1332, column: 2)
!16903 = !DILocation(line: 1336, column: 2, scope: !16879)
!16904 = !DILocation(line: 1337, column: 1, scope: !16879)
!16905 = distinct !DISubprogram(name: "k_can_yield", scope: !2536, file: !2536, line: 1384, type: !7374, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !2236)
!16906 = !DILocation(line: 1386, column: 11, scope: !16905)
!16907 = !DILocation(line: 1386, column: 29, scope: !16905)
!16908 = !DILocation(line: 1386, column: 32, scope: !16905)
!16909 = !DILocation(line: 1386, column: 46, scope: !16905)
!16910 = !DILocation(line: 1387, column: 28, scope: !16905)
!16911 = !DILocation(line: 1387, column: 4, scope: !16905)
!16912 = !DILocation(line: 1386, column: 2, scope: !16905)
!16913 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !406, file: !406, line: 989, type: !7374, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !2236)
!16914 = !DILocation(line: 993, column: 10, scope: !16913)
!16915 = !DILocation(line: 993, column: 2, scope: !16913)
!16916 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2536, file: !2536, line: 1390, type: !3148, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16917)
!16917 = !{!16918}
!16918 = !DILocalVariable(name: "key", scope: !16916, file: !2536, line: 1396, type: !15128)
!16919 = !DILocation(line: 1031, column: 3, scope: !15863, inlinedAt: !16920)
!16920 = distinct !DILocation(line: 48, column: 10, scope: !15867, inlinedAt: !16921)
!16921 = distinct !DILocation(line: 1392, column: 2, scope: !16922)
!16922 = distinct !DILexicalBlock(scope: !16923, file: !2536, line: 1392, column: 2)
!16923 = distinct !DILexicalBlock(scope: !16916, file: !2536, line: 1392, column: 2)
!16924 = !DILocation(line: 0, scope: !15863, inlinedAt: !16920)
!16925 = !DILocation(line: 48, column: 9, scope: !15867, inlinedAt: !16921)
!16926 = !DILocation(line: 1392, column: 2, scope: !16923)
!16927 = !DILocation(line: 1392, column: 2, scope: !16928)
!16928 = distinct !DILexicalBlock(scope: !16922, file: !2536, line: 1392, column: 2)
!16929 = !DILocation(line: 0, scope: !15136, inlinedAt: !16930)
!16930 = distinct !DILocation(line: 1396, column: 25, scope: !16916)
!16931 = !DILocation(line: 55, column: 2, scope: !15145, inlinedAt: !16932)
!16932 = distinct !DILocation(line: 145, column: 10, scope: !15136, inlinedAt: !16930)
!16933 = !DILocation(line: 0, scope: !15145, inlinedAt: !16932)
!16934 = !DILocation(line: 148, column: 2, scope: !15153, inlinedAt: !16930)
!16935 = !DILocation(line: 148, column: 2, scope: !15154, inlinedAt: !16930)
!16936 = !DILocation(line: 148, column: 2, scope: !15157, inlinedAt: !16930)
!16937 = !DILocation(line: 160, column: 2, scope: !15136, inlinedAt: !16930)
!16938 = !DILocation(line: 0, scope: !16916)
!16939 = !DILocation(line: 1400, column: 18, scope: !16940)
!16940 = distinct !DILexicalBlock(scope: !16941, file: !2536, line: 1399, column: 36)
!16941 = distinct !DILexicalBlock(scope: !16916, file: !2536, line: 1398, column: 6)
!16942 = !DILocation(line: 0, scope: !15328, inlinedAt: !16943)
!16943 = distinct !DILocation(line: 1400, column: 3, scope: !16940)
!16944 = !DILocation(line: 266, column: 15, scope: !15328, inlinedAt: !16943)
!16945 = !DILocation(line: 266, column: 28, scope: !15328, inlinedAt: !16943)
!16946 = !DILocation(line: 0, scope: !15336, inlinedAt: !16947)
!16947 = distinct !DILocation(line: 268, column: 3, scope: !15340, inlinedAt: !16943)
!16948 = !DILocation(line: 234, column: 2, scope: !15336, inlinedAt: !16947)
!16949 = !DILocation(line: 1402, column: 15, scope: !16916)
!16950 = !DILocation(line: 0, scope: !15345, inlinedAt: !16951)
!16951 = distinct !DILocation(line: 1402, column: 2, scope: !16916)
!16952 = !DILocation(line: 252, column: 15, scope: !15345, inlinedAt: !16951)
!16953 = !DILocation(line: 252, column: 28, scope: !15345, inlinedAt: !16951)
!16954 = !DILocation(line: 0, scope: !15352, inlinedAt: !16955)
!16955 = distinct !DILocation(line: 254, column: 3, scope: !15356, inlinedAt: !16951)
!16956 = !DILocation(line: 0, scope: !15359, inlinedAt: !16957)
!16957 = distinct !DILocation(line: 229, column: 2, scope: !15352, inlinedAt: !16955)
!16958 = !DILocation(line: 186, column: 2, scope: !15369, inlinedAt: !16957)
!16959 = !DILocation(line: 186, column: 2, scope: !15370, inlinedAt: !16957)
!16960 = !DILocation(line: 186, column: 2, scope: !15373, inlinedAt: !16957)
!16961 = !DILocation(line: 188, column: 2, scope: !15375, inlinedAt: !16957)
!16962 = !DILocation(line: 188, column: 2, scope: !15377, inlinedAt: !16957)
!16963 = !DILocation(line: 0, scope: !15375, inlinedAt: !16957)
!16964 = !DILocation(line: 189, column: 7, scope: !15380, inlinedAt: !16957)
!16965 = !DILocation(line: 189, column: 35, scope: !15380, inlinedAt: !16957)
!16966 = !DILocation(line: 189, column: 7, scope: !15381, inlinedAt: !16957)
!16967 = !DILocation(line: 191, column: 21, scope: !15385, inlinedAt: !16957)
!16968 = !DILocation(line: 190, column: 4, scope: !15385, inlinedAt: !16957)
!16969 = !DILocation(line: 192, column: 4, scope: !15385, inlinedAt: !16957)
!16970 = distinct !{!16970, !16961, !16971}
!16971 = !DILocation(line: 194, column: 2, scope: !15375, inlinedAt: !16957)
!16972 = !DILocation(line: 196, column: 37, scope: !15359, inlinedAt: !16957)
!16973 = !DILocation(line: 196, column: 2, scope: !15359, inlinedAt: !16957)
!16974 = !DILocation(line: 197, column: 1, scope: !15359, inlinedAt: !16957)
!16975 = !DILocation(line: 1403, column: 2, scope: !16916)
!16976 = !DILocation(line: 0, scope: !15814, inlinedAt: !16977)
!16977 = distinct !DILocation(line: 1404, column: 2, scope: !16916)
!16978 = !DILocation(line: 0, scope: !15823, inlinedAt: !16979)
!16979 = distinct !DILocation(line: 195, column: 2, scope: !15814, inlinedAt: !16977)
!16980 = !DILocation(line: 225, column: 2, scope: !15830, inlinedAt: !16979)
!16981 = !DILocation(line: 225, column: 2, scope: !15831, inlinedAt: !16979)
!16982 = !DILocation(line: 225, column: 2, scope: !15834, inlinedAt: !16979)
!16983 = !DILocation(line: 196, column: 9, scope: !15814, inlinedAt: !16977)
!16984 = !DILocation(line: 1405, column: 1, scope: !16916)
!16985 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2536, file: !2536, line: 1459, type: !16986, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16988)
!16986 = !DISubroutineType(types: !16987)
!16987 = !{!904, !16024}
!16988 = !{!16989, !16990, !16991}
!16989 = !DILocalVariable(name: "timeout", arg: 1, scope: !16985, file: !2536, line: 1459, type: !16024)
!16990 = !DILocalVariable(name: "ticks", scope: !16985, file: !2536, line: 1461, type: !564)
!16991 = !DILocalVariable(name: "ret", scope: !16985, file: !2536, line: 1480, type: !904)
!16992 = !DILocation(line: 0, scope: !16985)
!16993 = !DILocation(line: 1031, column: 3, scope: !15863, inlinedAt: !16994)
!16994 = distinct !DILocation(line: 48, column: 10, scope: !15867, inlinedAt: !16995)
!16995 = distinct !DILocation(line: 1463, column: 2, scope: !16996)
!16996 = distinct !DILexicalBlock(scope: !16997, file: !2536, line: 1463, column: 2)
!16997 = distinct !DILexicalBlock(scope: !16985, file: !2536, line: 1463, column: 2)
!16998 = !DILocation(line: 0, scope: !15863, inlinedAt: !16994)
!16999 = !DILocation(line: 48, column: 9, scope: !15867, inlinedAt: !16995)
!17000 = !DILocation(line: 1463, column: 2, scope: !16997)
!17001 = !DILocation(line: 1463, column: 2, scope: !17002)
!17002 = distinct !DILexicalBlock(scope: !16996, file: !2536, line: 1463, column: 2)
!17003 = !DILocation(line: 1468, column: 6, scope: !17004)
!17004 = distinct !DILexicalBlock(scope: !16985, file: !2536, line: 1468, column: 6)
!17005 = !DILocation(line: 1468, column: 6, scope: !16985)
!17006 = !DILocation(line: 1469, column: 20, scope: !17007)
!17007 = distinct !DILexicalBlock(scope: !17004, file: !2536, line: 1468, column: 40)
!17008 = !DILocation(line: 1469, column: 3, scope: !17007)
!17009 = !DILocation(line: 1473, column: 3, scope: !17007)
!17010 = !DILocation(line: 1478, column: 10, scope: !16985)
!17011 = !DILocation(line: 1480, column: 16, scope: !16985)
!17012 = !DILocation(line: 1485, column: 1, scope: !16985)
!17013 = distinct !DISubprogram(name: "k_thread_suspend", scope: !4479, file: !4479, line: 310, type: !17014, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !17016)
!17014 = !DISubroutineType(types: !17015)
!17015 = !{null, !16872}
!17016 = !{!17017}
!17017 = !DILocalVariable(name: "thread", arg: 1, scope: !17013, file: !4479, line: 310, type: !16872)
!17018 = !DILocation(line: 0, scope: !17013)
!17019 = !DILocation(line: 319, column: 2, scope: !17020)
!17020 = distinct !DILexicalBlock(scope: !17013, file: !4479, line: 319, column: 2)
!17021 = !{i64 2155113471}
!17022 = !DILocation(line: 320, column: 2, scope: !17013)
!17023 = !DILocation(line: 321, column: 1, scope: !17013)
!17024 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2536, file: !2536, line: 1415, type: !17025, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !17027)
!17025 = !DISubroutineType(types: !17026)
!17026 = !{!904, !564}
!17027 = !{!17028, !17029, !17030, !17031}
!17028 = !DILocalVariable(name: "ticks", arg: 1, scope: !17024, file: !2536, line: 1415, type: !564)
!17029 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !17024, file: !2536, line: 1418, type: !152)
!17030 = !DILocalVariable(name: "timeout", scope: !17024, file: !2536, line: 1430, type: !16024)
!17031 = !DILocalVariable(name: "key", scope: !17024, file: !2536, line: 1437, type: !15128)
!17032 = !DILocation(line: 0, scope: !17024)
!17033 = !DILocation(line: 1031, column: 3, scope: !15863, inlinedAt: !17034)
!17034 = distinct !DILocation(line: 48, column: 10, scope: !15867, inlinedAt: !17035)
!17035 = distinct !DILocation(line: 1420, column: 2, scope: !17036)
!17036 = distinct !DILexicalBlock(scope: !17037, file: !2536, line: 1420, column: 2)
!17037 = distinct !DILexicalBlock(scope: !17024, file: !2536, line: 1420, column: 2)
!17038 = !DILocation(line: 0, scope: !15863, inlinedAt: !17034)
!17039 = !DILocation(line: 48, column: 9, scope: !15867, inlinedAt: !17035)
!17040 = !DILocation(line: 1420, column: 2, scope: !17037)
!17041 = !DILocation(line: 1420, column: 2, scope: !17042)
!17042 = distinct !DILexicalBlock(scope: !17036, file: !2536, line: 1420, column: 2)
!17043 = !DILocation(line: 1425, column: 12, scope: !17044)
!17044 = distinct !DILexicalBlock(scope: !17024, file: !2536, line: 1425, column: 6)
!17045 = !DILocation(line: 1425, column: 6, scope: !17024)
!17046 = !DILocation(line: 1426, column: 3, scope: !17047)
!17047 = distinct !DILexicalBlock(scope: !17044, file: !2536, line: 1425, column: 18)
!17048 = !DILocation(line: 1427, column: 3, scope: !17047)
!17049 = !DILocation(line: 1431, column: 24, scope: !17050)
!17050 = distinct !DILexicalBlock(scope: !17024, file: !2536, line: 1431, column: 6)
!17051 = !DILocation(line: 1431, column: 6, scope: !17024)
!17052 = !DILocation(line: 1432, column: 35, scope: !17053)
!17053 = distinct !DILexicalBlock(scope: !17050, file: !2536, line: 1431, column: 30)
!17054 = !DILocation(line: 1432, column: 27, scope: !17053)
!17055 = !DILocation(line: 1433, column: 2, scope: !17053)
!17056 = !DILocation(line: 1434, column: 27, scope: !17057)
!17057 = distinct !DILexicalBlock(scope: !17050, file: !2536, line: 1433, column: 9)
!17058 = !DILocation(line: 0, scope: !17050)
!17059 = !DILocation(line: 0, scope: !15136, inlinedAt: !17060)
!17060 = distinct !DILocation(line: 1437, column: 25, scope: !17024)
!17061 = !DILocation(line: 55, column: 2, scope: !15145, inlinedAt: !17062)
!17062 = distinct !DILocation(line: 145, column: 10, scope: !15136, inlinedAt: !17060)
!17063 = !DILocation(line: 0, scope: !15145, inlinedAt: !17062)
!17064 = !DILocation(line: 148, column: 2, scope: !15153, inlinedAt: !17060)
!17065 = !DILocation(line: 148, column: 2, scope: !15154, inlinedAt: !17060)
!17066 = !DILocation(line: 148, column: 2, scope: !15157, inlinedAt: !17060)
!17067 = !DILocation(line: 160, column: 2, scope: !15136, inlinedAt: !17060)
!17068 = !DILocation(line: 1440, column: 20, scope: !17024)
!17069 = !DILocation(line: 1440, column: 18, scope: !17024)
!17070 = !DILocation(line: 1442, column: 2, scope: !17024)
!17071 = !DILocation(line: 1443, column: 23, scope: !17024)
!17072 = !DILocation(line: 1443, column: 2, scope: !17024)
!17073 = !DILocation(line: 1444, column: 29, scope: !17024)
!17074 = !DILocation(line: 1444, column: 2, scope: !17024)
!17075 = !DILocation(line: 0, scope: !15814, inlinedAt: !17076)
!17076 = distinct !DILocation(line: 1446, column: 8, scope: !17024)
!17077 = !DILocation(line: 0, scope: !15823, inlinedAt: !17078)
!17078 = distinct !DILocation(line: 195, column: 2, scope: !15814, inlinedAt: !17076)
!17079 = !DILocation(line: 225, column: 2, scope: !15830, inlinedAt: !17078)
!17080 = !DILocation(line: 225, column: 2, scope: !15831, inlinedAt: !17078)
!17081 = !DILocation(line: 225, column: 2, scope: !15834, inlinedAt: !17078)
!17082 = !DILocation(line: 196, column: 9, scope: !15814, inlinedAt: !17076)
!17083 = !DILocation(line: 1448, column: 2, scope: !17084)
!17084 = distinct !DILexicalBlock(scope: !17085, file: !2536, line: 1448, column: 2)
!17085 = distinct !DILexicalBlock(scope: !17024, file: !2536, line: 1448, column: 2)
!17086 = !DILocation(line: 1448, column: 2, scope: !17085)
!17087 = !DILocation(line: 1448, column: 2, scope: !17088)
!17088 = distinct !DILexicalBlock(scope: !17084, file: !2536, line: 1448, column: 2)
!17089 = !DILocation(line: 1450, column: 10, scope: !17024)
!17090 = !DILocation(line: 1450, column: 45, scope: !17024)
!17091 = !DILocation(line: 1450, column: 43, scope: !17024)
!17092 = !DILocation(line: 1451, column: 6, scope: !17024)
!17093 = !DILocation(line: 1457, column: 1, scope: !17024)
!17094 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !8789, file: !8789, line: 1103, type: !14915, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !17095)
!17095 = !{!17096}
!17096 = !DILocalVariable(name: "t", arg: 1, scope: !17094, file: !8789, line: 1103, type: !566)
!17097 = !DILocation(line: 0, scope: !17094)
!17098 = !DILocation(line: 0, scope: !15196, inlinedAt: !17099)
!17099 = distinct !DILocation(line: 1106, column: 9, scope: !17094)
!17100 = !DILocation(line: 139, column: 13, scope: !17101, inlinedAt: !17099)
!17101 = distinct !DILexicalBlock(scope: !17102, file: !8789, line: 138, column: 10)
!17102 = distinct !DILexicalBlock(scope: !17103, file: !8789, line: 136, column: 7)
!17103 = distinct !DILexicalBlock(scope: !15217, file: !8789, line: 134, column: 17)
!17104 = !DILocation(line: 1106, column: 2, scope: !17094)
!17105 = distinct !DISubprogram(name: "k_yield", scope: !4479, file: !4479, line: 140, type: !3148, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !2236)
!17106 = !DILocation(line: 148, column: 2, scope: !17107)
!17107 = distinct !DILexicalBlock(scope: !17105, file: !4479, line: 148, column: 2)
!17108 = !{i64 2155112791}
!17109 = !DILocation(line: 149, column: 2, scope: !17105)
!17110 = !DILocation(line: 150, column: 1, scope: !17105)
!17111 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2536, file: !2536, line: 1495, type: !17112, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !17114)
!17112 = !DISubroutineType(types: !17113)
!17113 = !{!904, !107}
!17114 = !{!17115, !17116}
!17115 = !DILocalVariable(name: "us", arg: 1, scope: !17111, file: !2536, line: 1495, type: !107)
!17116 = !DILocalVariable(name: "ticks", scope: !17111, file: !2536, line: 1497, type: !904)
!17117 = !DILocation(line: 0, scope: !17111)
!17118 = !DILocation(line: 1501, column: 31, scope: !17111)
!17119 = !DILocation(line: 1501, column: 10, scope: !17111)
!17120 = !DILocation(line: 1502, column: 23, scope: !17111)
!17121 = !DILocation(line: 1502, column: 10, scope: !17111)
!17122 = !DILocation(line: 1506, column: 31, scope: !17111)
!17123 = !DILocation(line: 1506, column: 9, scope: !17111)
!17124 = !DILocation(line: 1506, column: 2, scope: !17111)
!17125 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !8789, file: !8789, line: 571, type: !14915, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !17126)
!17126 = !{!17127}
!17127 = !DILocalVariable(name: "t", arg: 1, scope: !17125, file: !8789, line: 571, type: !566)
!17128 = !DILocation(line: 0, scope: !17125)
!17129 = !DILocation(line: 0, scope: !15196, inlinedAt: !17130)
!17130 = distinct !DILocation(line: 574, column: 9, scope: !17125)
!17131 = !DILocation(line: 135, column: 5, scope: !17103, inlinedAt: !17130)
!17132 = !DILocation(line: 139, column: 13, scope: !17101, inlinedAt: !17130)
!17133 = !DILocation(line: 574, column: 2, scope: !17125)
!17134 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !8789, file: !8789, line: 1187, type: !14915, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !17135)
!17135 = !{!17136}
!17136 = !DILocalVariable(name: "t", arg: 1, scope: !17134, file: !8789, line: 1187, type: !566)
!17137 = !DILocation(line: 0, scope: !17134)
!17138 = !DILocation(line: 0, scope: !15196, inlinedAt: !17139)
!17139 = distinct !DILocation(line: 1190, column: 9, scope: !17134)
!17140 = !DILocation(line: 145, column: 13, scope: !17141, inlinedAt: !17139)
!17141 = distinct !DILexicalBlock(scope: !15214, file: !8789, line: 144, column: 10)
!17142 = !DILocation(line: 1190, column: 2, scope: !17134)
!17143 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2536, file: !2536, line: 1517, type: !17014, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !17144)
!17144 = !{!17145}
!17145 = !DILocalVariable(name: "thread", arg: 1, scope: !17143, file: !2536, line: 1517, type: !16872)
!17146 = !DILocation(line: 0, scope: !17143)
!17147 = !DILocation(line: 1521, column: 6, scope: !17148)
!17148 = distinct !DILexicalBlock(scope: !17143, file: !2536, line: 1521, column: 6)
!17149 = !DILocation(line: 1521, column: 6, scope: !17143)
!17150 = !DILocation(line: 1525, column: 6, scope: !17151)
!17151 = distinct !DILexicalBlock(scope: !17143, file: !2536, line: 1525, column: 6)
!17152 = !DILocation(line: 1525, column: 37, scope: !17151)
!17153 = !DILocation(line: 1525, column: 6, scope: !17143)
!17154 = !DILocation(line: 1527, column: 20, scope: !17155)
!17155 = distinct !DILexicalBlock(scope: !17156, file: !2536, line: 1527, column: 7)
!17156 = distinct !DILexicalBlock(scope: !17151, file: !2536, line: 1525, column: 42)
!17157 = !DILocation(line: 1527, column: 33, scope: !17155)
!17158 = !DILocation(line: 1527, column: 7, scope: !17156)
!17159 = !DILocation(line: 1532, column: 2, scope: !17143)
!17160 = !DILocation(line: 1533, column: 2, scope: !17143)
!17161 = !DILocation(line: 1031, column: 3, scope: !15863, inlinedAt: !17162)
!17162 = distinct !DILocation(line: 48, column: 10, scope: !15867, inlinedAt: !17163)
!17163 = distinct !DILocation(line: 1537, column: 7, scope: !17164)
!17164 = distinct !DILexicalBlock(scope: !17143, file: !2536, line: 1537, column: 6)
!17165 = !DILocation(line: 0, scope: !15863, inlinedAt: !17162)
!17166 = !DILocation(line: 48, column: 9, scope: !15867, inlinedAt: !17163)
!17167 = !DILocation(line: 1537, column: 6, scope: !17143)
!17168 = !DILocation(line: 1538, column: 3, scope: !17169)
!17169 = distinct !DILexicalBlock(scope: !17164, file: !2536, line: 1537, column: 25)
!17170 = !DILocation(line: 1539, column: 2, scope: !17169)
!17171 = !DILocation(line: 1540, column: 1, scope: !17143)
!17172 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !14296, file: !14296, line: 101, type: !15277, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !17173)
!17173 = !{!17174}
!17174 = !DILocalVariable(name: "thread", arg: 1, scope: !17172, file: !14296, line: 101, type: !2428)
!17175 = !DILocation(line: 0, scope: !17172)
!17176 = !DILocation(line: 103, column: 23, scope: !17172)
!17177 = !DILocation(line: 103, column: 36, scope: !17172)
!17178 = !DILocation(line: 103, column: 55, scope: !17172)
!17179 = !DILocation(line: 103, column: 2, scope: !17172)
!17180 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2536, file: !2536, line: 1567, type: !17181, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !17183)
!17181 = !DISubroutineType(types: !17182)
!17182 = !{!16872}
!17183 = !{!17184}
!17184 = !DILocalVariable(name: "ret", scope: !17180, file: !2536, line: 1577, type: !16872)
!17185 = !DILocation(line: 1577, column: 30, scope: !17180)
!17186 = !DILocation(line: 0, scope: !17180)
!17187 = !DILocation(line: 1582, column: 2, scope: !17180)
!17188 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2536, file: !2536, line: 1593, type: !7677, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !2236)
!17189 = !DILocation(line: 1031, column: 3, scope: !15863, inlinedAt: !17190)
!17190 = distinct !DILocation(line: 48, column: 10, scope: !15867, inlinedAt: !17191)
!17191 = distinct !DILocation(line: 1595, column: 10, scope: !17188)
!17192 = !DILocation(line: 0, scope: !15863, inlinedAt: !17190)
!17193 = !DILocation(line: 48, column: 9, scope: !15867, inlinedAt: !17191)
!17194 = !DILocation(line: 1595, column: 27, scope: !17188)
!17195 = !DILocation(line: 1595, column: 41, scope: !17188)
!17196 = !DILocation(line: 1595, column: 30, scope: !17188)
!17197 = !DILocation(line: 1595, column: 2, scope: !17188)
!17198 = distinct !DISubprogram(name: "z_thread_abort", scope: !2536, file: !2536, line: 1725, type: !15094, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !17199)
!17199 = !{!17200, !17201}
!17200 = !DILocalVariable(name: "thread", arg: 1, scope: !17198, file: !2536, line: 1725, type: !2428)
!17201 = !DILocalVariable(name: "key", scope: !17198, file: !2536, line: 1727, type: !15128)
!17202 = !DILocation(line: 0, scope: !17198)
!17203 = !DILocation(line: 0, scope: !15136, inlinedAt: !17204)
!17204 = distinct !DILocation(line: 1727, column: 25, scope: !17198)
!17205 = !DILocation(line: 55, column: 2, scope: !15145, inlinedAt: !17206)
!17206 = distinct !DILocation(line: 145, column: 10, scope: !15136, inlinedAt: !17204)
!17207 = !DILocation(line: 0, scope: !15145, inlinedAt: !17206)
!17208 = !DILocation(line: 148, column: 2, scope: !15153, inlinedAt: !17204)
!17209 = !DILocation(line: 148, column: 2, scope: !15154, inlinedAt: !17204)
!17210 = !DILocation(line: 148, column: 2, scope: !15157, inlinedAt: !17204)
!17211 = !DILocation(line: 160, column: 2, scope: !15136, inlinedAt: !17204)
!17212 = !DILocation(line: 1729, column: 20, scope: !17213)
!17213 = distinct !DILexicalBlock(scope: !17198, file: !2536, line: 1729, column: 6)
!17214 = !DILocation(line: 1729, column: 33, scope: !17213)
!17215 = !DILocation(line: 1729, column: 48, scope: !17213)
!17216 = !DILocation(line: 1729, column: 6, scope: !17198)
!17217 = !DILocation(line: 0, scope: !15170, inlinedAt: !17218)
!17218 = distinct !DILocation(line: 1730, column: 3, scope: !17219)
!17219 = distinct !DILexicalBlock(scope: !17213, file: !2536, line: 1729, column: 54)
!17220 = !DILocation(line: 194, column: 2, scope: !15178, inlinedAt: !17218)
!17221 = !DILocation(line: 194, column: 2, scope: !15179, inlinedAt: !17218)
!17222 = !DILocation(line: 194, column: 2, scope: !15182, inlinedAt: !17218)
!17223 = !DILocation(line: 0, scope: !15184, inlinedAt: !17224)
!17224 = distinct !DILocation(line: 215, column: 2, scope: !15170, inlinedAt: !17218)
!17225 = !DILocation(line: 95, column: 2, scope: !15184, inlinedAt: !17224)
!17226 = !DILocation(line: 1731, column: 3, scope: !17227)
!17227 = distinct !DILexicalBlock(scope: !17228, file: !2536, line: 1731, column: 3)
!17228 = distinct !DILexicalBlock(scope: !17229, file: !2536, line: 1731, column: 3)
!17229 = distinct !DILexicalBlock(scope: !17219, file: !2536, line: 1731, column: 3)
!17230 = !DILocation(line: 1736, column: 20, scope: !17231)
!17231 = distinct !DILexicalBlock(scope: !17198, file: !2536, line: 1736, column: 6)
!17232 = !DILocation(line: 1736, column: 33, scope: !17231)
!17233 = !DILocation(line: 1736, column: 49, scope: !17231)
!17234 = !DILocation(line: 1736, column: 6, scope: !17198)
!17235 = !DILocation(line: 0, scope: !15170, inlinedAt: !17236)
!17236 = distinct !DILocation(line: 1737, column: 3, scope: !17237)
!17237 = distinct !DILexicalBlock(scope: !17231, file: !2536, line: 1736, column: 56)
!17238 = !DILocation(line: 194, column: 2, scope: !15178, inlinedAt: !17236)
!17239 = !DILocation(line: 194, column: 2, scope: !15179, inlinedAt: !17236)
!17240 = !DILocation(line: 194, column: 2, scope: !15182, inlinedAt: !17236)
!17241 = !DILocation(line: 0, scope: !15184, inlinedAt: !17242)
!17242 = distinct !DILocation(line: 215, column: 2, scope: !15170, inlinedAt: !17236)
!17243 = !DILocation(line: 95, column: 2, scope: !15184, inlinedAt: !17242)
!17244 = !DILocation(line: 1738, column: 3, scope: !17237)
!17245 = !DILocation(line: 1775, column: 2, scope: !17198)
!17246 = !DILocation(line: 1776, column: 16, scope: !17247)
!17247 = distinct !DILexicalBlock(scope: !17198, file: !2536, line: 1776, column: 6)
!17248 = !DILocation(line: 1776, column: 13, scope: !17247)
!17249 = !DILocation(line: 1776, column: 25, scope: !17247)
!17250 = !DILocation(line: 1031, column: 3, scope: !15863, inlinedAt: !17251)
!17251 = distinct !DILocation(line: 48, column: 10, scope: !15867, inlinedAt: !17252)
!17252 = distinct !DILocation(line: 1776, column: 29, scope: !17247)
!17253 = !DILocation(line: 0, scope: !15863, inlinedAt: !17251)
!17254 = !DILocation(line: 48, column: 9, scope: !15867, inlinedAt: !17252)
!17255 = !DILocation(line: 1776, column: 6, scope: !17198)
!17256 = !DILocation(line: 0, scope: !15814, inlinedAt: !17257)
!17257 = distinct !DILocation(line: 1777, column: 3, scope: !17258)
!17258 = distinct !DILexicalBlock(scope: !17247, file: !2536, line: 1776, column: 47)
!17259 = !DILocation(line: 0, scope: !15823, inlinedAt: !17260)
!17260 = distinct !DILocation(line: 195, column: 2, scope: !15814, inlinedAt: !17257)
!17261 = !DILocation(line: 225, column: 2, scope: !15830, inlinedAt: !17260)
!17262 = !DILocation(line: 225, column: 2, scope: !15831, inlinedAt: !17260)
!17263 = !DILocation(line: 225, column: 2, scope: !15834, inlinedAt: !17260)
!17264 = !DILocation(line: 196, column: 9, scope: !15814, inlinedAt: !17257)
!17265 = !DILocation(line: 1778, column: 3, scope: !17266)
!17266 = distinct !DILexicalBlock(scope: !17267, file: !2536, line: 1778, column: 3)
!17267 = distinct !DILexicalBlock(scope: !17268, file: !2536, line: 1778, column: 3)
!17268 = distinct !DILexicalBlock(scope: !17258, file: !2536, line: 1778, column: 3)
!17269 = !DILocation(line: 0, scope: !15170, inlinedAt: !17270)
!17270 = distinct !DILocation(line: 1780, column: 2, scope: !17198)
!17271 = !DILocation(line: 194, column: 2, scope: !15178, inlinedAt: !17270)
!17272 = !DILocation(line: 194, column: 2, scope: !15179, inlinedAt: !17270)
!17273 = !DILocation(line: 194, column: 2, scope: !15182, inlinedAt: !17270)
!17274 = !DILocation(line: 0, scope: !15184, inlinedAt: !17275)
!17275 = distinct !DILocation(line: 215, column: 2, scope: !15170, inlinedAt: !17270)
!17276 = !DILocation(line: 95, column: 2, scope: !15184, inlinedAt: !17275)
!17277 = !DILocation(line: 1781, column: 1, scope: !17198)
!17278 = distinct !DISubprogram(name: "end_thread", scope: !2536, file: !2536, line: 1690, type: !15094, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !17279)
!17279 = !{!17280}
!17280 = !DILocalVariable(name: "thread", arg: 1, scope: !17278, file: !2536, line: 1690, type: !2428)
!17281 = !DILocation(line: 0, scope: !17278)
!17282 = !DILocation(line: 1695, column: 20, scope: !17283)
!17283 = distinct !DILexicalBlock(scope: !17278, file: !2536, line: 1695, column: 6)
!17284 = !DILocation(line: 1695, column: 33, scope: !17283)
!17285 = !DILocation(line: 1695, column: 49, scope: !17283)
!17286 = !DILocation(line: 1695, column: 6, scope: !17278)
!17287 = !DILocation(line: 1697, column: 29, scope: !17288)
!17288 = distinct !DILexicalBlock(scope: !17283, file: !2536, line: 1695, column: 56)
!17289 = !DILocation(line: 1698, column: 7, scope: !17290)
!17290 = distinct !DILexicalBlock(scope: !17288, file: !2536, line: 1698, column: 7)
!17291 = !DILocation(line: 1698, column: 7, scope: !17288)
!17292 = !DILocation(line: 0, scope: !15328, inlinedAt: !17293)
!17293 = distinct !DILocation(line: 1699, column: 4, scope: !17294)
!17294 = distinct !DILexicalBlock(scope: !17290, file: !2536, line: 1698, column: 35)
!17295 = !DILocation(line: 266, column: 28, scope: !15328, inlinedAt: !17293)
!17296 = !DILocation(line: 0, scope: !15336, inlinedAt: !17297)
!17297 = distinct !DILocation(line: 268, column: 3, scope: !15340, inlinedAt: !17293)
!17298 = !DILocation(line: 234, column: 2, scope: !15336, inlinedAt: !17297)
!17299 = !DILocation(line: 1700, column: 3, scope: !17294)
!17300 = !DILocation(line: 1701, column: 20, scope: !17301)
!17301 = distinct !DILexicalBlock(scope: !17288, file: !2536, line: 1701, column: 7)
!17302 = !DILocation(line: 1701, column: 30, scope: !17301)
!17303 = !DILocation(line: 1701, column: 7, scope: !17288)
!17304 = !DILocation(line: 1702, column: 4, scope: !17305)
!17305 = distinct !DILexicalBlock(scope: !17301, file: !2536, line: 1701, column: 39)
!17306 = !DILocation(line: 1703, column: 3, scope: !17305)
!17307 = !DILocation(line: 1704, column: 9, scope: !17288)
!17308 = !DILocation(line: 1705, column: 23, scope: !17288)
!17309 = !DILocation(line: 1705, column: 3, scope: !17288)
!17310 = !DILocation(line: 1706, column: 3, scope: !17288)
!17311 = !DILocation(line: 1722, column: 2, scope: !17288)
!17312 = !DILocation(line: 1723, column: 1, scope: !17278)
!17313 = distinct !DISubprogram(name: "unpend_all", scope: !2536, file: !2536, line: 1674, type: !17314, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !17316)
!17314 = !DISubroutineType(types: !17315)
!17315 = !{null, !2459}
!17316 = !{!17317, !17318}
!17317 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17313, file: !2536, line: 1674, type: !2459)
!17318 = !DILocalVariable(name: "thread", scope: !17313, file: !2536, line: 1676, type: !2428)
!17319 = !DILocation(line: 0, scope: !17313)
!17320 = !DILocation(line: 1678, column: 19, scope: !17313)
!17321 = !DILocation(line: 1678, column: 41, scope: !17313)
!17322 = !DILocation(line: 1678, column: 2, scope: !17313)
!17323 = !DILocation(line: 1679, column: 3, scope: !17324)
!17324 = distinct !DILexicalBlock(scope: !17313, file: !2536, line: 1678, column: 50)
!17325 = !DILocation(line: 1680, column: 9, scope: !17324)
!17326 = !DILocalVariable(name: "thread", arg: 1, scope: !17327, file: !14316, line: 65, type: !2428)
!17327 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !14316, file: !14316, line: 65, type: !17328, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !17330)
!17328 = !DISubroutineType(types: !17329)
!17329 = !{null, !2428, !32}
!17330 = !{!17326, !17331}
!17331 = !DILocalVariable(name: "value", arg: 2, scope: !17327, file: !14316, line: 65, type: !32)
!17332 = !DILocation(line: 0, scope: !17327, inlinedAt: !17333)
!17333 = distinct !DILocation(line: 1681, column: 3, scope: !17324)
!17334 = !DILocation(line: 67, column: 15, scope: !17327, inlinedAt: !17333)
!17335 = !DILocation(line: 67, column: 33, scope: !17327, inlinedAt: !17333)
!17336 = !DILocation(line: 1682, column: 3, scope: !17324)
!17337 = distinct !{!17337, !17322, !17338}
!17338 = !DILocation(line: 1683, column: 2, scope: !17313)
!17339 = !DILocation(line: 1684, column: 1, scope: !17313)
!17340 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2536, file: !2536, line: 1794, type: !17341, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !17343)
!17341 = !DISubroutineType(types: !17342)
!17342 = !{!107, !2428, !16024}
!17343 = !{!17344, !17345, !17346, !17347}
!17344 = !DILocalVariable(name: "thread", arg: 1, scope: !17340, file: !2536, line: 1794, type: !2428)
!17345 = !DILocalVariable(name: "timeout", arg: 2, scope: !17340, file: !2536, line: 1794, type: !16024)
!17346 = !DILocalVariable(name: "key", scope: !17340, file: !2536, line: 1796, type: !15128)
!17347 = !DILocalVariable(name: "ret", scope: !17340, file: !2536, line: 1797, type: !107)
!17348 = !DILocation(line: 0, scope: !17340)
!17349 = !DILocation(line: 0, scope: !15136, inlinedAt: !17350)
!17350 = distinct !DILocation(line: 1796, column: 25, scope: !17340)
!17351 = !DILocation(line: 55, column: 2, scope: !15145, inlinedAt: !17352)
!17352 = distinct !DILocation(line: 145, column: 10, scope: !15136, inlinedAt: !17350)
!17353 = !DILocation(line: 0, scope: !15145, inlinedAt: !17352)
!17354 = !DILocation(line: 148, column: 2, scope: !15153, inlinedAt: !17350)
!17355 = !DILocation(line: 148, column: 2, scope: !15154, inlinedAt: !17350)
!17356 = !DILocation(line: 148, column: 2, scope: !15157, inlinedAt: !17350)
!17357 = !DILocation(line: 160, column: 2, scope: !15136, inlinedAt: !17350)
!17358 = !DILocation(line: 1801, column: 20, scope: !17359)
!17359 = distinct !DILexicalBlock(scope: !17340, file: !2536, line: 1801, column: 6)
!17360 = !DILocation(line: 1801, column: 33, scope: !17359)
!17361 = !DILocation(line: 1801, column: 49, scope: !17359)
!17362 = !DILocation(line: 1801, column: 6, scope: !17340)
!17363 = !DILocation(line: 1803, column: 13, scope: !17364)
!17364 = distinct !DILexicalBlock(scope: !17359, file: !2536, line: 1803, column: 13)
!17365 = !DILocation(line: 1803, column: 13, scope: !17359)
!17366 = !DILocation(line: 1805, column: 24, scope: !17367)
!17367 = distinct !DILexicalBlock(scope: !17364, file: !2536, line: 1805, column: 13)
!17368 = !DILocation(line: 1805, column: 21, scope: !17367)
!17369 = !DILocation(line: 1805, column: 34, scope: !17367)
!17370 = !DILocation(line: 1806, column: 20, scope: !17367)
!17371 = !DILocation(line: 1806, column: 44, scope: !17367)
!17372 = !DILocation(line: 1806, column: 30, scope: !17367)
!17373 = !DILocation(line: 1805, column: 13, scope: !17364)
!17374 = !DILocation(line: 1031, column: 3, scope: !15863, inlinedAt: !17375)
!17375 = distinct !DILocation(line: 48, column: 10, scope: !15867, inlinedAt: !17376)
!17376 = distinct !DILocation(line: 1809, column: 3, scope: !17377)
!17377 = distinct !DILexicalBlock(scope: !17378, file: !2536, line: 1809, column: 3)
!17378 = distinct !DILexicalBlock(scope: !17379, file: !2536, line: 1809, column: 3)
!17379 = distinct !DILexicalBlock(scope: !17367, file: !2536, line: 1808, column: 9)
!17380 = !DILocation(line: 0, scope: !15863, inlinedAt: !17375)
!17381 = !DILocation(line: 48, column: 9, scope: !15867, inlinedAt: !17376)
!17382 = !DILocation(line: 1809, column: 3, scope: !17378)
!17383 = !DILocation(line: 1809, column: 3, scope: !17384)
!17384 = distinct !DILexicalBlock(scope: !17377, file: !2536, line: 1809, column: 3)
!17385 = !DILocation(line: 1810, column: 23, scope: !17379)
!17386 = !DILocation(line: 1810, column: 42, scope: !17379)
!17387 = !DILocation(line: 1810, column: 3, scope: !17379)
!17388 = !DILocation(line: 1811, column: 22, scope: !17379)
!17389 = !DILocation(line: 1811, column: 3, scope: !17379)
!17390 = !DILocation(line: 0, scope: !15814, inlinedAt: !17391)
!17391 = distinct !DILocation(line: 1814, column: 9, scope: !17379)
!17392 = !DILocation(line: 0, scope: !15823, inlinedAt: !17393)
!17393 = distinct !DILocation(line: 195, column: 2, scope: !15814, inlinedAt: !17391)
!17394 = !DILocation(line: 225, column: 2, scope: !15830, inlinedAt: !17393)
!17395 = !DILocation(line: 225, column: 2, scope: !15831, inlinedAt: !17393)
!17396 = !DILocation(line: 225, column: 2, scope: !15834, inlinedAt: !17393)
!17397 = !DILocation(line: 196, column: 9, scope: !15814, inlinedAt: !17391)
!17398 = !DILocation(line: 1817, column: 3, scope: !17379)
!17399 = !DILocation(line: 0, scope: !17359)
!17400 = !DILocation(line: 0, scope: !15170, inlinedAt: !17401)
!17401 = distinct !DILocation(line: 1822, column: 2, scope: !17340)
!17402 = !DILocation(line: 194, column: 2, scope: !15178, inlinedAt: !17401)
!17403 = !DILocation(line: 194, column: 2, scope: !15179, inlinedAt: !17401)
!17404 = !DILocation(line: 194, column: 2, scope: !15182, inlinedAt: !17401)
!17405 = !DILocation(line: 0, scope: !15184, inlinedAt: !17406)
!17406 = distinct !DILocation(line: 215, column: 2, scope: !15170, inlinedAt: !17401)
!17407 = !DILocation(line: 95, column: 2, scope: !15184, inlinedAt: !17406)
!17408 = !DILocation(line: 1823, column: 2, scope: !17340)
!17409 = !DILocation(line: 1824, column: 1, scope: !17340)
!17410 = distinct !DISubprogram(name: "z_sched_wake", scope: !2536, file: !2536, line: 1882, type: !17411, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !17413)
!17411 = !DISubroutineType(types: !17412)
!17412 = !{!145, !2459, !107, !106}
!17413 = !{!17414, !17415, !17416, !17417, !17418, !17419, !17421}
!17414 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17410, file: !2536, line: 1882, type: !2459)
!17415 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !17410, file: !2536, line: 1882, type: !107)
!17416 = !DILocalVariable(name: "swap_data", arg: 3, scope: !17410, file: !2536, line: 1882, type: !106)
!17417 = !DILocalVariable(name: "thread", scope: !17410, file: !2536, line: 1884, type: !2428)
!17418 = !DILocalVariable(name: "ret", scope: !17410, file: !2536, line: 1885, type: !145)
!17419 = !DILocalVariable(name: "__i", scope: !17420, file: !2536, line: 1887, type: !15128)
!17420 = distinct !DILexicalBlock(scope: !17410, file: !2536, line: 1887, column: 2)
!17421 = !DILocalVariable(name: "__key", scope: !17420, file: !2536, line: 1887, type: !15128)
!17422 = !DILocation(line: 0, scope: !17410)
!17423 = !DILocation(line: 0, scope: !17420)
!17424 = !DILocation(line: 0, scope: !15136, inlinedAt: !17425)
!17425 = distinct !DILocation(line: 1887, column: 2, scope: !17420)
!17426 = !DILocation(line: 55, column: 2, scope: !15145, inlinedAt: !17427)
!17427 = distinct !DILocation(line: 145, column: 10, scope: !15136, inlinedAt: !17425)
!17428 = !DILocation(line: 0, scope: !15145, inlinedAt: !17427)
!17429 = !DILocation(line: 148, column: 2, scope: !15153, inlinedAt: !17425)
!17430 = !DILocation(line: 148, column: 2, scope: !15154, inlinedAt: !17425)
!17431 = !DILocation(line: 148, column: 2, scope: !15157, inlinedAt: !17425)
!17432 = !DILocation(line: 160, column: 2, scope: !15136, inlinedAt: !17425)
!17433 = !DILocation(line: 1888, column: 12, scope: !17434)
!17434 = distinct !DILexicalBlock(scope: !17435, file: !2536, line: 1887, column: 26)
!17435 = distinct !DILexicalBlock(scope: !17420, file: !2536, line: 1887, column: 2)
!17436 = !DILocation(line: 1890, column: 14, scope: !17437)
!17437 = distinct !DILexicalBlock(scope: !17434, file: !2536, line: 1890, column: 7)
!17438 = !DILocation(line: 1890, column: 7, scope: !17434)
!17439 = !DILocalVariable(name: "thread", arg: 1, scope: !17440, file: !17441, line: 134, type: !2428)
!17440 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !17441, file: !17441, line: 134, type: !17442, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !17444)
!17441 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17442 = !DISubroutineType(types: !17443)
!17443 = !{null, !2428, !32, !106}
!17444 = !{!17439, !17445, !17446}
!17445 = !DILocalVariable(name: "value", arg: 2, scope: !17440, file: !17441, line: 135, type: !32)
!17446 = !DILocalVariable(name: "data", arg: 3, scope: !17440, file: !17441, line: 136, type: !106)
!17447 = !DILocation(line: 0, scope: !17440, inlinedAt: !17448)
!17448 = distinct !DILocation(line: 1891, column: 4, scope: !17449)
!17449 = distinct !DILexicalBlock(scope: !17437, file: !2536, line: 1890, column: 23)
!17450 = !DILocation(line: 0, scope: !17327, inlinedAt: !17451)
!17451 = distinct !DILocation(line: 138, column: 2, scope: !17440, inlinedAt: !17448)
!17452 = !DILocation(line: 67, column: 15, scope: !17327, inlinedAt: !17451)
!17453 = !DILocation(line: 67, column: 33, scope: !17327, inlinedAt: !17451)
!17454 = !DILocation(line: 139, column: 15, scope: !17440, inlinedAt: !17448)
!17455 = !DILocation(line: 139, column: 25, scope: !17440, inlinedAt: !17448)
!17456 = !DILocation(line: 1894, column: 4, scope: !17449)
!17457 = !DILocation(line: 1895, column: 10, scope: !17449)
!17458 = !DILocation(line: 1896, column: 4, scope: !17449)
!17459 = !DILocation(line: 1898, column: 3, scope: !17449)
!17460 = !DILocation(line: 0, scope: !15170, inlinedAt: !17461)
!17461 = distinct !DILocation(line: 1887, column: 2, scope: !17435)
!17462 = !DILocation(line: 194, column: 2, scope: !15178, inlinedAt: !17461)
!17463 = !DILocation(line: 194, column: 2, scope: !15179, inlinedAt: !17461)
!17464 = !DILocation(line: 194, column: 2, scope: !15182, inlinedAt: !17461)
!17465 = !DILocation(line: 0, scope: !15184, inlinedAt: !17466)
!17466 = distinct !DILocation(line: 215, column: 2, scope: !15170, inlinedAt: !17461)
!17467 = !DILocation(line: 95, column: 2, scope: !15184, inlinedAt: !17466)
!17468 = !DILocation(line: 1901, column: 2, scope: !17410)
!17469 = distinct !DISubprogram(name: "z_sched_wait", scope: !2536, file: !2536, line: 1904, type: !17470, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !17473)
!17470 = !DISubroutineType(types: !17471)
!17471 = !{!107, !15139, !15128, !2459, !16024, !17472}
!17472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !106, size: 32)
!17473 = !{!17474, !17475, !17476, !17477, !17478, !17479}
!17474 = !DILocalVariable(name: "lock", arg: 1, scope: !17469, file: !2536, line: 1904, type: !15139)
!17475 = !DILocalVariable(name: "key", arg: 2, scope: !17469, file: !2536, line: 1904, type: !15128)
!17476 = !DILocalVariable(name: "wait_q", arg: 3, scope: !17469, file: !2536, line: 1905, type: !2459)
!17477 = !DILocalVariable(name: "timeout", arg: 4, scope: !17469, file: !2536, line: 1905, type: !16024)
!17478 = !DILocalVariable(name: "data", arg: 5, scope: !17469, file: !2536, line: 1905, type: !17472)
!17479 = !DILocalVariable(name: "ret", scope: !17469, file: !2536, line: 1907, type: !107)
!17480 = !DILocation(line: 0, scope: !17469)
!17481 = !DILocation(line: 1907, column: 12, scope: !17469)
!17482 = !DILocation(line: 1909, column: 11, scope: !17483)
!17483 = distinct !DILexicalBlock(scope: !17469, file: !2536, line: 1909, column: 6)
!17484 = !DILocation(line: 1909, column: 6, scope: !17469)
!17485 = !DILocation(line: 1910, column: 11, scope: !17486)
!17486 = distinct !DILexicalBlock(scope: !17483, file: !2536, line: 1909, column: 20)
!17487 = !DILocation(line: 1910, column: 26, scope: !17486)
!17488 = !DILocation(line: 1910, column: 9, scope: !17486)
!17489 = !DILocation(line: 1911, column: 2, scope: !17486)
!17490 = !DILocation(line: 1912, column: 2, scope: !17469)
!17491 = distinct !DISubprogram(name: "z_data_copy", scope: !17492, file: !17492, line: 22, type: !3148, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3131, retainedNodes: !2236)
!17492 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17493 = !DILocation(line: 24, column: 2, scope: !17491)
!17494 = !DILocation(line: 27, column: 2, scope: !17491)
!17495 = !DILocation(line: 71, column: 1, scope: !17491)
!17496 = distinct !DISubprogram(name: "z_add_timeout", scope: !2573, file: !2573, line: 88, type: !17497, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !17503)
!17497 = !DISubroutineType(types: !17498)
!17498 = !{null, !2546, !2565, !17499}
!17499 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !565, line: 67, baseType: !17500)
!17500 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !565, line: 65, size: 64, elements: !17501)
!17501 = !{!17502}
!17502 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !17500, file: !565, line: 66, baseType: !564, size: 64)
!17503 = !{!17504, !17505, !17506, !17507, !17513, !17514, !17517, !17520}
!17504 = !DILocalVariable(name: "to", arg: 1, scope: !17496, file: !2573, line: 88, type: !2546)
!17505 = !DILocalVariable(name: "fn", arg: 2, scope: !17496, file: !2573, line: 88, type: !2565)
!17506 = !DILocalVariable(name: "timeout", arg: 3, scope: !17496, file: !2573, line: 89, type: !17499)
!17507 = !DILocalVariable(name: "__i", scope: !17508, file: !2573, line: 102, type: !17509)
!17508 = distinct !DILexicalBlock(scope: !17496, file: !2573, line: 102, column: 2)
!17509 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !420, line: 106, baseType: !17510)
!17510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !420, line: 32, size: 32, elements: !17511)
!17511 = !{!17512}
!17512 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !17510, file: !420, line: 33, baseType: !107, size: 32)
!17513 = !DILocalVariable(name: "__key", scope: !17508, file: !2573, line: 102, type: !17509)
!17514 = !DILocalVariable(name: "t", scope: !17515, file: !2573, line: 103, type: !2546)
!17515 = distinct !DILexicalBlock(scope: !17516, file: !2573, line: 102, column: 24)
!17516 = distinct !DILexicalBlock(scope: !17508, file: !2573, line: 102, column: 2)
!17517 = !DILocalVariable(name: "ticks", scope: !17518, file: !2573, line: 107, type: !564)
!17518 = distinct !DILexicalBlock(scope: !17519, file: !2573, line: 106, column: 39)
!17519 = distinct !DILexicalBlock(scope: !17515, file: !2573, line: 105, column: 7)
!17520 = !DILocalVariable(name: "next_time", scope: !17521, file: !2573, line: 137, type: !904)
!17521 = distinct !DILexicalBlock(scope: !17522, file: !2573, line: 127, column: 22)
!17522 = distinct !DILexicalBlock(scope: !17515, file: !2573, line: 127, column: 7)
!17523 = !DILocation(line: 0, scope: !17496)
!17524 = !DILocation(line: 91, column: 6, scope: !17525)
!17525 = distinct !DILexicalBlock(scope: !17496, file: !2573, line: 91, column: 6)
!17526 = !DILocation(line: 91, column: 6, scope: !17496)
!17527 = !DILocation(line: 99, column: 2, scope: !17528)
!17528 = distinct !DILexicalBlock(scope: !17529, file: !2573, line: 99, column: 2)
!17529 = distinct !DILexicalBlock(scope: !17496, file: !2573, line: 99, column: 2)
!17530 = !DILocation(line: 99, column: 2, scope: !17529)
!17531 = !DILocation(line: 99, column: 2, scope: !17532)
!17532 = distinct !DILexicalBlock(scope: !17528, file: !2573, line: 99, column: 2)
!17533 = !DILocation(line: 100, column: 6, scope: !17496)
!17534 = !DILocation(line: 100, column: 9, scope: !17496)
!17535 = !DILocation(line: 0, scope: !17508)
!17536 = !DILocalVariable(name: "l", arg: 1, scope: !17537, file: !420, line: 136, type: !17540)
!17537 = distinct !DISubprogram(name: "k_spin_lock", scope: !420, file: !420, line: 136, type: !17538, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !17541)
!17538 = !DISubroutineType(types: !17539)
!17539 = !{!17509, !17540}
!17540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2579, size: 32)
!17541 = !{!17536, !17542}
!17542 = !DILocalVariable(name: "k", scope: !17537, file: !420, line: 139, type: !17509)
!17543 = !DILocation(line: 0, scope: !17537, inlinedAt: !17544)
!17544 = distinct !DILocation(line: 102, column: 2, scope: !17508)
!17545 = !DILocation(line: 55, column: 2, scope: !17546, inlinedAt: !17550)
!17546 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6002, file: !6002, line: 42, type: !6003, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !17547)
!17547 = !{!17548, !17549}
!17548 = !DILocalVariable(name: "key", scope: !17546, file: !6002, line: 44, type: !32)
!17549 = !DILocalVariable(name: "tmp", scope: !17546, file: !6002, line: 53, type: !32)
!17550 = distinct !DILocation(line: 145, column: 10, scope: !17537, inlinedAt: !17544)
!17551 = !{i64 2288373}
!17552 = !DILocation(line: 0, scope: !17546, inlinedAt: !17550)
!17553 = !DILocation(line: 148, column: 2, scope: !17554, inlinedAt: !17544)
!17554 = distinct !DILexicalBlock(scope: !17555, file: !420, line: 148, column: 2)
!17555 = distinct !DILexicalBlock(scope: !17537, file: !420, line: 148, column: 2)
!17556 = !DILocation(line: 148, column: 2, scope: !17555, inlinedAt: !17544)
!17557 = !DILocation(line: 148, column: 2, scope: !17558, inlinedAt: !17544)
!17558 = distinct !DILexicalBlock(scope: !17554, file: !420, line: 148, column: 2)
!17559 = !DILocation(line: 160, column: 2, scope: !17537, inlinedAt: !17544)
!17560 = !DILocation(line: 106, column: 33, scope: !17519)
!17561 = !DILocation(line: 105, column: 7, scope: !17515)
!17562 = !DILocation(line: 107, column: 50, scope: !17518)
!17563 = !DILocation(line: 107, column: 48, scope: !17518)
!17564 = !DILocation(line: 0, scope: !17518)
!17565 = !DILocation(line: 109, column: 17, scope: !17518)
!17566 = !DILocation(line: 110, column: 3, scope: !17518)
!17567 = !DILocation(line: 111, column: 31, scope: !17568)
!17568 = distinct !DILexicalBlock(scope: !17519, file: !2573, line: 110, column: 10)
!17569 = !DILocation(line: 111, column: 37, scope: !17568)
!17570 = !DILocation(line: 111, column: 35, scope: !17568)
!17571 = !DILocation(line: 0, scope: !17519)
!17572 = !DILocation(line: 109, column: 8, scope: !17518)
!17573 = !DILocation(line: 109, column: 15, scope: !17518)
!17574 = !DILocation(line: 114, column: 12, scope: !17575)
!17575 = distinct !DILexicalBlock(scope: !17515, file: !2573, line: 114, column: 3)
!17576 = !DILocation(line: 0, scope: !17515)
!17577 = !DILocation(line: 114, column: 3, scope: !17575)
!17578 = !DILocation(line: 115, column: 24, scope: !17579)
!17579 = distinct !DILexicalBlock(scope: !17580, file: !2573, line: 115, column: 8)
!17580 = distinct !DILexicalBlock(scope: !17581, file: !2573, line: 114, column: 45)
!17581 = distinct !DILexicalBlock(scope: !17575, file: !2573, line: 114, column: 3)
!17582 = !DILocation(line: 115, column: 11, scope: !17579)
!17583 = !DILocation(line: 115, column: 18, scope: !17579)
!17584 = !DILocation(line: 115, column: 8, scope: !17580)
!17585 = !DILocation(line: 116, column: 15, scope: !17586)
!17586 = distinct !DILexicalBlock(scope: !17579, file: !2573, line: 115, column: 32)
!17587 = !DILocation(line: 117, column: 26, scope: !17586)
!17588 = !DILocation(line: 117, column: 5, scope: !17586)
!17589 = !DILocation(line: 123, column: 7, scope: !17515)
!17590 = !DILocation(line: 120, column: 15, scope: !17580)
!17591 = !DILocation(line: 114, column: 36, scope: !17581)
!17592 = distinct !{!17592, !17577, !17593}
!17593 = !DILocation(line: 121, column: 3, scope: !17575)
!17594 = !DILocation(line: 124, column: 4, scope: !17595)
!17595 = distinct !DILexicalBlock(scope: !17596, file: !2573, line: 123, column: 18)
!17596 = distinct !DILexicalBlock(scope: !17515, file: !2573, line: 123, column: 7)
!17597 = !DILocation(line: 125, column: 3, scope: !17595)
!17598 = !DILocation(line: 127, column: 13, scope: !17522)
!17599 = !DILocation(line: 127, column: 10, scope: !17522)
!17600 = !DILocation(line: 127, column: 7, scope: !17515)
!17601 = !DILocation(line: 137, column: 24, scope: !17521)
!17602 = !DILocation(line: 0, scope: !17521)
!17603 = !DILocation(line: 139, column: 18, scope: !17604)
!17604 = distinct !DILexicalBlock(scope: !17521, file: !2573, line: 139, column: 8)
!17605 = !DILocation(line: 139, column: 23, scope: !17604)
!17606 = !DILocation(line: 141, column: 5, scope: !17607)
!17607 = distinct !DILexicalBlock(scope: !17604, file: !2573, line: 140, column: 48)
!17608 = !DILocation(line: 142, column: 4, scope: !17607)
!17609 = !DILocalVariable(name: "key", arg: 2, scope: !17610, file: !420, line: 190, type: !17509)
!17610 = distinct !DISubprogram(name: "k_spin_unlock", scope: !420, file: !420, line: 189, type: !17611, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !17613)
!17611 = !DISubroutineType(types: !17612)
!17612 = !{null, !17540, !17509}
!17613 = !{!17614, !17609}
!17614 = !DILocalVariable(name: "l", arg: 1, scope: !17610, file: !420, line: 189, type: !17540)
!17615 = !DILocation(line: 0, scope: !17610, inlinedAt: !17616)
!17616 = distinct !DILocation(line: 102, column: 2, scope: !17516)
!17617 = !DILocation(line: 194, column: 2, scope: !17618, inlinedAt: !17616)
!17618 = distinct !DILexicalBlock(scope: !17619, file: !420, line: 194, column: 2)
!17619 = distinct !DILexicalBlock(scope: !17610, file: !420, line: 194, column: 2)
!17620 = !DILocation(line: 194, column: 2, scope: !17619, inlinedAt: !17616)
!17621 = !DILocation(line: 194, column: 2, scope: !17622, inlinedAt: !17616)
!17622 = distinct !DILexicalBlock(scope: !17618, file: !420, line: 194, column: 2)
!17623 = !DILocalVariable(name: "key", arg: 1, scope: !17624, file: !6002, line: 84, type: !32)
!17624 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6002, file: !6002, line: 84, type: !6013, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !17625)
!17625 = !{!17623}
!17626 = !DILocation(line: 0, scope: !17624, inlinedAt: !17627)
!17627 = distinct !DILocation(line: 215, column: 2, scope: !17610, inlinedAt: !17616)
!17628 = !DILocation(line: 95, column: 2, scope: !17624, inlinedAt: !17627)
!17629 = !{i64 2289190}
!17630 = !DILocation(line: 148, column: 1, scope: !17496)
!17631 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !319, file: !319, line: 225, type: !17632, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !17636)
!17632 = !DISubroutineType(types: !17633)
!17633 = !{!145, !17634}
!17634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17635, size: 32)
!17635 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2550)
!17636 = !{!17637}
!17637 = !DILocalVariable(name: "node", arg: 1, scope: !17631, file: !319, line: 225, type: !17634)
!17638 = !DILocation(line: 0, scope: !17631)
!17639 = !DILocation(line: 227, column: 15, scope: !17631)
!17640 = !DILocation(line: 227, column: 20, scope: !17631)
!17641 = !DILocation(line: 227, column: 2, scope: !17631)
!17642 = distinct !DISubprogram(name: "elapsed", scope: !2573, file: !2573, line: 62, type: !17643, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !2236)
!17643 = !DISubroutineType(types: !17644)
!17644 = !{!904}
!17645 = !DILocation(line: 64, column: 9, scope: !17642)
!17646 = !DILocation(line: 64, column: 28, scope: !17642)
!17647 = !DILocation(line: 64, column: 35, scope: !17642)
!17648 = !DILocation(line: 64, column: 2, scope: !17642)
!17649 = distinct !DISubprogram(name: "first", scope: !2573, file: !2573, line: 39, type: !17650, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !17652)
!17650 = !DISubroutineType(types: !17651)
!17651 = !{!2546}
!17652 = !{!17653}
!17653 = !DILocalVariable(name: "t", scope: !17649, file: !2573, line: 41, type: !17654)
!17654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2550, size: 32)
!17655 = !DILocation(line: 41, column: 19, scope: !17649)
!17656 = !DILocation(line: 0, scope: !17649)
!17657 = !DILocation(line: 43, column: 9, scope: !17649)
!17658 = !DILocation(line: 43, column: 2, scope: !17649)
!17659 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !319, file: !319, line: 443, type: !17660, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !17662)
!17660 = !DISubroutineType(types: !17661)
!17661 = !{null, !17654, !17654}
!17662 = !{!17663, !17664, !17665}
!17663 = !DILocalVariable(name: "successor", arg: 1, scope: !17659, file: !319, line: 443, type: !17654)
!17664 = !DILocalVariable(name: "node", arg: 2, scope: !17659, file: !319, line: 443, type: !17654)
!17665 = !DILocalVariable(name: "prev", scope: !17659, file: !319, line: 445, type: !17666)
!17666 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !17654)
!17667 = !DILocation(line: 0, scope: !17659)
!17668 = !DILocation(line: 445, column: 39, scope: !17659)
!17669 = !DILocation(line: 447, column: 8, scope: !17659)
!17670 = !DILocation(line: 447, column: 13, scope: !17659)
!17671 = !DILocation(line: 448, column: 8, scope: !17659)
!17672 = !DILocation(line: 448, column: 13, scope: !17659)
!17673 = !DILocation(line: 449, column: 8, scope: !17659)
!17674 = !DILocation(line: 449, column: 13, scope: !17659)
!17675 = !DILocation(line: 450, column: 18, scope: !17659)
!17676 = !DILocation(line: 451, column: 1, scope: !17659)
!17677 = distinct !DISubprogram(name: "next", scope: !2573, file: !2573, line: 46, type: !17678, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !17680)
!17678 = !DISubroutineType(types: !17679)
!17679 = !{!2546, !2546}
!17680 = !{!17681, !17682}
!17681 = !DILocalVariable(name: "t", arg: 1, scope: !17677, file: !2573, line: 46, type: !2546)
!17682 = !DILocalVariable(name: "n", scope: !17677, file: !2573, line: 48, type: !17654)
!17683 = !DILocation(line: 0, scope: !17677)
!17684 = !DILocation(line: 48, column: 58, scope: !17677)
!17685 = !DILocation(line: 48, column: 19, scope: !17677)
!17686 = !DILocation(line: 50, column: 9, scope: !17677)
!17687 = !DILocation(line: 50, column: 2, scope: !17677)
!17688 = distinct !DISubprogram(name: "sys_dlist_append", scope: !319, file: !319, line: 404, type: !17689, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !17692)
!17689 = !DISubroutineType(types: !17690)
!17690 = !{null, !17691, !17654}
!17691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2578, size: 32)
!17692 = !{!17693, !17694, !17695}
!17693 = !DILocalVariable(name: "list", arg: 1, scope: !17688, file: !319, line: 404, type: !17691)
!17694 = !DILocalVariable(name: "node", arg: 2, scope: !17688, file: !319, line: 404, type: !17654)
!17695 = !DILocalVariable(name: "tail", scope: !17688, file: !319, line: 406, type: !17666)
!17696 = !DILocation(line: 0, scope: !17688)
!17697 = !DILocation(line: 406, column: 34, scope: !17688)
!17698 = !DILocation(line: 408, column: 8, scope: !17688)
!17699 = !DILocation(line: 408, column: 13, scope: !17688)
!17700 = !DILocation(line: 409, column: 8, scope: !17688)
!17701 = !DILocation(line: 409, column: 13, scope: !17688)
!17702 = !DILocation(line: 411, column: 8, scope: !17688)
!17703 = !DILocation(line: 411, column: 13, scope: !17688)
!17704 = !DILocation(line: 412, column: 13, scope: !17688)
!17705 = !DILocation(line: 413, column: 1, scope: !17688)
!17706 = distinct !DISubprogram(name: "next_timeout", scope: !2573, file: !2573, line: 67, type: !17643, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !17707)
!17707 = !{!17708, !17709, !17710}
!17708 = !DILocalVariable(name: "to", scope: !17706, file: !2573, line: 69, type: !2546)
!17709 = !DILocalVariable(name: "ticks_elapsed", scope: !17706, file: !2573, line: 70, type: !904)
!17710 = !DILocalVariable(name: "ret", scope: !17706, file: !2573, line: 71, type: !904)
!17711 = !DILocation(line: 69, column: 24, scope: !17706)
!17712 = !DILocation(line: 0, scope: !17706)
!17713 = !DILocation(line: 70, column: 26, scope: !17706)
!17714 = !DILocation(line: 73, column: 10, scope: !17715)
!17715 = distinct !DILexicalBlock(scope: !17706, file: !2573, line: 73, column: 6)
!17716 = !DILocation(line: 73, column: 19, scope: !17715)
!17717 = !DILocation(line: 74, column: 21, scope: !17715)
!17718 = !DILocation(line: 74, column: 30, scope: !17715)
!17719 = !DILocation(line: 74, column: 28, scope: !17715)
!17720 = !DILocation(line: 74, column: 45, scope: !17715)
!17721 = !DILocation(line: 73, column: 6, scope: !17706)
!17722 = !DILocation(line: 77, column: 9, scope: !17723)
!17723 = distinct !DILexicalBlock(scope: !17715, file: !2573, line: 76, column: 9)
!17724 = !DILocation(line: 0, scope: !17715)
!17725 = !DILocation(line: 81, column: 20, scope: !17726)
!17726 = distinct !DILexicalBlock(scope: !17706, file: !2573, line: 81, column: 6)
!17727 = !DILocation(line: 81, column: 6, scope: !17726)
!17728 = !DILocation(line: 81, column: 32, scope: !17726)
!17729 = !DILocation(line: 85, column: 2, scope: !17706)
!17730 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !319, file: !319, line: 341, type: !17731, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !17733)
!17731 = !DISubroutineType(types: !17732)
!17732 = !{!17654, !17691, !17654}
!17733 = !{!17734, !17735}
!17734 = !DILocalVariable(name: "list", arg: 1, scope: !17730, file: !319, line: 341, type: !17691)
!17735 = !DILocalVariable(name: "node", arg: 2, scope: !17730, file: !319, line: 342, type: !17654)
!17736 = !DILocation(line: 0, scope: !17730)
!17737 = !DILocation(line: 344, column: 15, scope: !17730)
!17738 = !DILocation(line: 344, column: 9, scope: !17730)
!17739 = !DILocation(line: 344, column: 26, scope: !17730)
!17740 = !DILocation(line: 344, column: 2, scope: !17730)
!17741 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !319, file: !319, line: 325, type: !17731, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !17742)
!17742 = !{!17743, !17744}
!17743 = !DILocalVariable(name: "list", arg: 1, scope: !17741, file: !319, line: 325, type: !17691)
!17744 = !DILocalVariable(name: "node", arg: 2, scope: !17741, file: !319, line: 326, type: !17654)
!17745 = !DILocation(line: 0, scope: !17741)
!17746 = !DILocation(line: 328, column: 24, scope: !17741)
!17747 = !DILocation(line: 328, column: 15, scope: !17741)
!17748 = !DILocation(line: 328, column: 9, scope: !17741)
!17749 = !DILocation(line: 328, column: 45, scope: !17741)
!17750 = !DILocation(line: 328, column: 2, scope: !17741)
!17751 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !319, file: !319, line: 294, type: !17752, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !17754)
!17752 = !DISubroutineType(types: !17753)
!17753 = !{!17654, !17691}
!17754 = !{!17755}
!17755 = !DILocalVariable(name: "list", arg: 1, scope: !17751, file: !319, line: 294, type: !17691)
!17756 = !DILocation(line: 0, scope: !17751)
!17757 = !DILocation(line: 296, column: 9, scope: !17751)
!17758 = !DILocation(line: 296, column: 2, scope: !17751)
!17759 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !319, file: !319, line: 266, type: !17760, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !17762)
!17760 = !DISubroutineType(types: !17761)
!17761 = !{!145, !17691}
!17762 = !{!17763}
!17763 = !DILocalVariable(name: "list", arg: 1, scope: !17759, file: !319, line: 266, type: !17691)
!17764 = !DILocation(line: 0, scope: !17759)
!17765 = !DILocation(line: 268, column: 15, scope: !17759)
!17766 = !DILocation(line: 268, column: 20, scope: !17759)
!17767 = !DILocation(line: 268, column: 2, scope: !17759)
!17768 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2573, file: !2573, line: 150, type: !17769, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !17771)
!17769 = !DISubroutineType(types: !17770)
!17770 = !{!107, !2546}
!17771 = !{!17772, !17773, !17774, !17776}
!17772 = !DILocalVariable(name: "to", arg: 1, scope: !17768, file: !2573, line: 150, type: !2546)
!17773 = !DILocalVariable(name: "ret", scope: !17768, file: !2573, line: 152, type: !107)
!17774 = !DILocalVariable(name: "__i", scope: !17775, file: !2573, line: 154, type: !17509)
!17775 = distinct !DILexicalBlock(scope: !17768, file: !2573, line: 154, column: 2)
!17776 = !DILocalVariable(name: "__key", scope: !17775, file: !2573, line: 154, type: !17509)
!17777 = !DILocation(line: 0, scope: !17768)
!17778 = !DILocation(line: 0, scope: !17775)
!17779 = !DILocation(line: 0, scope: !17537, inlinedAt: !17780)
!17780 = distinct !DILocation(line: 154, column: 2, scope: !17775)
!17781 = !DILocation(line: 55, column: 2, scope: !17546, inlinedAt: !17782)
!17782 = distinct !DILocation(line: 145, column: 10, scope: !17537, inlinedAt: !17780)
!17783 = !DILocation(line: 0, scope: !17546, inlinedAt: !17782)
!17784 = !DILocation(line: 148, column: 2, scope: !17554, inlinedAt: !17780)
!17785 = !DILocation(line: 148, column: 2, scope: !17555, inlinedAt: !17780)
!17786 = !DILocation(line: 148, column: 2, scope: !17558, inlinedAt: !17780)
!17787 = !DILocation(line: 160, column: 2, scope: !17537, inlinedAt: !17780)
!17788 = !DILocation(line: 155, column: 7, scope: !17789)
!17789 = distinct !DILexicalBlock(scope: !17790, file: !2573, line: 155, column: 7)
!17790 = distinct !DILexicalBlock(scope: !17791, file: !2573, line: 154, column: 24)
!17791 = distinct !DILexicalBlock(scope: !17775, file: !2573, line: 154, column: 2)
!17792 = !DILocation(line: 155, column: 7, scope: !17790)
!17793 = !DILocation(line: 156, column: 4, scope: !17794)
!17794 = distinct !DILexicalBlock(scope: !17789, file: !2573, line: 155, column: 39)
!17795 = !DILocation(line: 158, column: 3, scope: !17794)
!17796 = !DILocation(line: 0, scope: !17610, inlinedAt: !17797)
!17797 = distinct !DILocation(line: 154, column: 2, scope: !17791)
!17798 = !DILocation(line: 194, column: 2, scope: !17618, inlinedAt: !17797)
!17799 = !DILocation(line: 194, column: 2, scope: !17619, inlinedAt: !17797)
!17800 = !DILocation(line: 194, column: 2, scope: !17622, inlinedAt: !17797)
!17801 = !DILocation(line: 0, scope: !17624, inlinedAt: !17802)
!17802 = distinct !DILocation(line: 215, column: 2, scope: !17610, inlinedAt: !17797)
!17803 = !DILocation(line: 95, column: 2, scope: !17624, inlinedAt: !17802)
!17804 = !DILocation(line: 161, column: 2, scope: !17768)
!17805 = distinct !DISubprogram(name: "remove_timeout", scope: !2573, file: !2573, line: 53, type: !2567, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !17806)
!17806 = !{!17807}
!17807 = !DILocalVariable(name: "t", arg: 1, scope: !17805, file: !2573, line: 53, type: !2546)
!17808 = !DILocation(line: 0, scope: !17805)
!17809 = !DILocation(line: 55, column: 6, scope: !17810)
!17810 = distinct !DILexicalBlock(scope: !17805, file: !2573, line: 55, column: 6)
!17811 = !DILocation(line: 55, column: 14, scope: !17810)
!17812 = !DILocation(line: 55, column: 6, scope: !17805)
!17813 = !DILocation(line: 56, column: 25, scope: !17814)
!17814 = distinct !DILexicalBlock(scope: !17810, file: !2573, line: 55, column: 23)
!17815 = !DILocation(line: 56, column: 12, scope: !17814)
!17816 = !DILocation(line: 56, column: 19, scope: !17814)
!17817 = !DILocation(line: 57, column: 2, scope: !17814)
!17818 = !DILocation(line: 59, column: 23, scope: !17805)
!17819 = !DILocation(line: 59, column: 2, scope: !17805)
!17820 = !DILocation(line: 60, column: 1, scope: !17805)
!17821 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !319, file: !319, line: 496, type: !17822, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !17824)
!17822 = !DISubroutineType(types: !17823)
!17823 = !{null, !17654}
!17824 = !{!17825, !17826, !17827}
!17825 = !DILocalVariable(name: "node", arg: 1, scope: !17821, file: !319, line: 496, type: !17654)
!17826 = !DILocalVariable(name: "prev", scope: !17821, file: !319, line: 498, type: !17666)
!17827 = !DILocalVariable(name: "next", scope: !17821, file: !319, line: 499, type: !17666)
!17828 = !DILocation(line: 0, scope: !17821)
!17829 = !DILocation(line: 498, column: 34, scope: !17821)
!17830 = !DILocation(line: 499, column: 34, scope: !17821)
!17831 = !DILocation(line: 501, column: 8, scope: !17821)
!17832 = !DILocation(line: 501, column: 13, scope: !17821)
!17833 = !DILocation(line: 502, column: 8, scope: !17821)
!17834 = !DILocation(line: 502, column: 13, scope: !17821)
!17835 = !DILocation(line: 503, column: 2, scope: !17821)
!17836 = !DILocation(line: 504, column: 1, scope: !17821)
!17837 = distinct !DISubprogram(name: "sys_dnode_init", scope: !319, file: !319, line: 211, type: !17822, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !17838)
!17838 = !{!17839}
!17839 = !DILocalVariable(name: "node", arg: 1, scope: !17837, file: !319, line: 211, type: !17654)
!17840 = !DILocation(line: 0, scope: !17837)
!17841 = !DILocation(line: 213, column: 8, scope: !17837)
!17842 = !DILocation(line: 213, column: 13, scope: !17837)
!17843 = !DILocation(line: 214, column: 8, scope: !17837)
!17844 = !DILocation(line: 214, column: 13, scope: !17837)
!17845 = !DILocation(line: 215, column: 1, scope: !17837)
!17846 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2573, file: !2573, line: 183, type: !17847, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !17851)
!17847 = !DISubroutineType(types: !17848)
!17848 = !{!564, !17849}
!17849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17850, size: 32)
!17850 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2547)
!17851 = !{!17852, !17853, !17854, !17856}
!17852 = !DILocalVariable(name: "timeout", arg: 1, scope: !17846, file: !2573, line: 183, type: !17849)
!17853 = !DILocalVariable(name: "ticks", scope: !17846, file: !2573, line: 185, type: !564)
!17854 = !DILocalVariable(name: "__i", scope: !17855, file: !2573, line: 187, type: !17509)
!17855 = distinct !DILexicalBlock(scope: !17846, file: !2573, line: 187, column: 2)
!17856 = !DILocalVariable(name: "__key", scope: !17855, file: !2573, line: 187, type: !17509)
!17857 = !DILocation(line: 0, scope: !17846)
!17858 = !DILocation(line: 0, scope: !17855)
!17859 = !DILocation(line: 0, scope: !17537, inlinedAt: !17860)
!17860 = distinct !DILocation(line: 187, column: 2, scope: !17855)
!17861 = !DILocation(line: 55, column: 2, scope: !17546, inlinedAt: !17862)
!17862 = distinct !DILocation(line: 145, column: 10, scope: !17537, inlinedAt: !17860)
!17863 = !DILocation(line: 0, scope: !17546, inlinedAt: !17862)
!17864 = !DILocation(line: 148, column: 2, scope: !17554, inlinedAt: !17860)
!17865 = !DILocation(line: 148, column: 2, scope: !17555, inlinedAt: !17860)
!17866 = !DILocation(line: 148, column: 2, scope: !17558, inlinedAt: !17860)
!17867 = !DILocation(line: 160, column: 2, scope: !17537, inlinedAt: !17860)
!17868 = !DILocation(line: 188, column: 11, scope: !17869)
!17869 = distinct !DILexicalBlock(scope: !17870, file: !2573, line: 187, column: 24)
!17870 = distinct !DILexicalBlock(scope: !17855, file: !2573, line: 187, column: 2)
!17871 = !DILocation(line: 0, scope: !17610, inlinedAt: !17872)
!17872 = distinct !DILocation(line: 187, column: 2, scope: !17870)
!17873 = !DILocation(line: 194, column: 2, scope: !17618, inlinedAt: !17872)
!17874 = !DILocation(line: 194, column: 2, scope: !17619, inlinedAt: !17872)
!17875 = !DILocation(line: 194, column: 2, scope: !17622, inlinedAt: !17872)
!17876 = !DILocation(line: 0, scope: !17624, inlinedAt: !17877)
!17877 = distinct !DILocation(line: 215, column: 2, scope: !17610, inlinedAt: !17872)
!17878 = !DILocation(line: 95, column: 2, scope: !17624, inlinedAt: !17877)
!17879 = !DILocation(line: 191, column: 2, scope: !17846)
!17880 = distinct !DISubprogram(name: "timeout_rem", scope: !2573, file: !2573, line: 165, type: !17847, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !17881)
!17881 = !{!17882, !17883, !17884}
!17882 = !DILocalVariable(name: "timeout", arg: 1, scope: !17880, file: !2573, line: 165, type: !17849)
!17883 = !DILocalVariable(name: "ticks", scope: !17880, file: !2573, line: 167, type: !564)
!17884 = !DILocalVariable(name: "t", scope: !17885, file: !2573, line: 173, type: !2546)
!17885 = distinct !DILexicalBlock(scope: !17880, file: !2573, line: 173, column: 2)
!17886 = !DILocation(line: 0, scope: !17880)
!17887 = !DILocation(line: 169, column: 6, scope: !17888)
!17888 = distinct !DILexicalBlock(scope: !17880, file: !2573, line: 169, column: 6)
!17889 = !DILocation(line: 169, column: 6, scope: !17880)
!17890 = !DILocation(line: 173, column: 28, scope: !17885)
!17891 = !DILocation(line: 0, scope: !17885)
!17892 = !DILocation(line: 173, column: 39, scope: !17893)
!17893 = distinct !DILexicalBlock(scope: !17885, file: !2573, line: 173, column: 2)
!17894 = !DILocation(line: 173, column: 2, scope: !17885)
!17895 = !DILocation(line: 174, column: 15, scope: !17896)
!17896 = distinct !DILexicalBlock(scope: !17893, file: !2573, line: 173, column: 61)
!17897 = !DILocation(line: 174, column: 9, scope: !17896)
!17898 = !DILocation(line: 175, column: 15, scope: !17899)
!17899 = distinct !DILexicalBlock(scope: !17896, file: !2573, line: 175, column: 7)
!17900 = !DILocation(line: 175, column: 7, scope: !17896)
!17901 = !DILocation(line: 173, column: 52, scope: !17893)
!17902 = distinct !{!17902, !17894, !17903}
!17903 = !DILocation(line: 178, column: 2, scope: !17885)
!17904 = !DILocation(line: 180, column: 17, scope: !17880)
!17905 = !DILocation(line: 180, column: 15, scope: !17880)
!17906 = !DILocation(line: 180, column: 2, scope: !17880)
!17907 = !DILocation(line: 181, column: 1, scope: !17880)
!17908 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14725, file: !14725, line: 35, type: !17909, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !17911)
!17909 = !DISubroutineType(types: !17910)
!17910 = !{!145, !17849}
!17911 = !{!17912}
!17912 = !DILocalVariable(name: "to", arg: 1, scope: !17908, file: !14725, line: 35, type: !17849)
!17913 = !DILocation(line: 0, scope: !17908)
!17914 = !DILocation(line: 37, column: 35, scope: !17908)
!17915 = !DILocation(line: 37, column: 10, scope: !17908)
!17916 = !DILocation(line: 37, column: 9, scope: !17908)
!17917 = !DILocation(line: 37, column: 2, scope: !17908)
!17918 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2573, file: !2573, line: 194, type: !17847, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !17919)
!17919 = !{!17920, !17921, !17922, !17924}
!17920 = !DILocalVariable(name: "timeout", arg: 1, scope: !17918, file: !2573, line: 194, type: !17849)
!17921 = !DILocalVariable(name: "ticks", scope: !17918, file: !2573, line: 196, type: !564)
!17922 = !DILocalVariable(name: "__i", scope: !17923, file: !2573, line: 198, type: !17509)
!17923 = distinct !DILexicalBlock(scope: !17918, file: !2573, line: 198, column: 2)
!17924 = !DILocalVariable(name: "__key", scope: !17923, file: !2573, line: 198, type: !17509)
!17925 = !DILocation(line: 0, scope: !17918)
!17926 = !DILocation(line: 0, scope: !17923)
!17927 = !DILocation(line: 0, scope: !17537, inlinedAt: !17928)
!17928 = distinct !DILocation(line: 198, column: 2, scope: !17923)
!17929 = !DILocation(line: 55, column: 2, scope: !17546, inlinedAt: !17930)
!17930 = distinct !DILocation(line: 145, column: 10, scope: !17537, inlinedAt: !17928)
!17931 = !DILocation(line: 0, scope: !17546, inlinedAt: !17930)
!17932 = !DILocation(line: 148, column: 2, scope: !17554, inlinedAt: !17928)
!17933 = !DILocation(line: 148, column: 2, scope: !17555, inlinedAt: !17928)
!17934 = !DILocation(line: 148, column: 2, scope: !17558, inlinedAt: !17928)
!17935 = !DILocation(line: 160, column: 2, scope: !17537, inlinedAt: !17928)
!17936 = !DILocation(line: 199, column: 11, scope: !17937)
!17937 = distinct !DILexicalBlock(scope: !17938, file: !2573, line: 198, column: 24)
!17938 = distinct !DILexicalBlock(scope: !17923, file: !2573, line: 198, column: 2)
!17939 = !DILocation(line: 199, column: 23, scope: !17937)
!17940 = !DILocation(line: 0, scope: !17610, inlinedAt: !17941)
!17941 = distinct !DILocation(line: 198, column: 2, scope: !17938)
!17942 = !DILocation(line: 194, column: 2, scope: !17618, inlinedAt: !17941)
!17943 = !DILocation(line: 194, column: 2, scope: !17619, inlinedAt: !17941)
!17944 = !DILocation(line: 194, column: 2, scope: !17622, inlinedAt: !17941)
!17945 = !DILocation(line: 0, scope: !17624, inlinedAt: !17946)
!17946 = distinct !DILocation(line: 215, column: 2, scope: !17610, inlinedAt: !17941)
!17947 = !DILocation(line: 95, column: 2, scope: !17624, inlinedAt: !17946)
!17948 = !DILocation(line: 199, column: 21, scope: !17937)
!17949 = !DILocation(line: 202, column: 2, scope: !17918)
!17950 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2573, file: !2573, line: 205, type: !17643, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !17951)
!17951 = !{!17952, !17953, !17955}
!17952 = !DILocalVariable(name: "ret", scope: !17950, file: !2573, line: 207, type: !904)
!17953 = !DILocalVariable(name: "__i", scope: !17954, file: !2573, line: 209, type: !17509)
!17954 = distinct !DILexicalBlock(scope: !17950, file: !2573, line: 209, column: 2)
!17955 = !DILocalVariable(name: "__key", scope: !17954, file: !2573, line: 209, type: !17509)
!17956 = !DILocation(line: 0, scope: !17950)
!17957 = !DILocation(line: 0, scope: !17954)
!17958 = !DILocation(line: 0, scope: !17537, inlinedAt: !17959)
!17959 = distinct !DILocation(line: 209, column: 2, scope: !17954)
!17960 = !DILocation(line: 55, column: 2, scope: !17546, inlinedAt: !17961)
!17961 = distinct !DILocation(line: 145, column: 10, scope: !17537, inlinedAt: !17959)
!17962 = !DILocation(line: 0, scope: !17546, inlinedAt: !17961)
!17963 = !DILocation(line: 148, column: 2, scope: !17554, inlinedAt: !17959)
!17964 = !DILocation(line: 148, column: 2, scope: !17555, inlinedAt: !17959)
!17965 = !DILocation(line: 148, column: 2, scope: !17558, inlinedAt: !17959)
!17966 = !DILocation(line: 160, column: 2, scope: !17537, inlinedAt: !17959)
!17967 = !DILocation(line: 210, column: 9, scope: !17968)
!17968 = distinct !DILexicalBlock(scope: !17969, file: !2573, line: 209, column: 24)
!17969 = distinct !DILexicalBlock(scope: !17954, file: !2573, line: 209, column: 2)
!17970 = !DILocation(line: 0, scope: !17610, inlinedAt: !17971)
!17971 = distinct !DILocation(line: 209, column: 2, scope: !17969)
!17972 = !DILocation(line: 194, column: 2, scope: !17618, inlinedAt: !17971)
!17973 = !DILocation(line: 194, column: 2, scope: !17619, inlinedAt: !17971)
!17974 = !DILocation(line: 194, column: 2, scope: !17622, inlinedAt: !17971)
!17975 = !DILocation(line: 0, scope: !17624, inlinedAt: !17976)
!17976 = distinct !DILocation(line: 215, column: 2, scope: !17610, inlinedAt: !17971)
!17977 = !DILocation(line: 95, column: 2, scope: !17624, inlinedAt: !17976)
!17978 = !DILocation(line: 212, column: 2, scope: !17950)
!17979 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2573, file: !2573, line: 215, type: !11610, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !17980)
!17980 = !{!17981, !17982, !17983, !17985, !17986, !17989, !17990}
!17981 = !DILocalVariable(name: "ticks", arg: 1, scope: !17979, file: !2573, line: 215, type: !904)
!17982 = !DILocalVariable(name: "is_idle", arg: 2, scope: !17979, file: !2573, line: 215, type: !145)
!17983 = !DILocalVariable(name: "__i", scope: !17984, file: !2573, line: 217, type: !17509)
!17984 = distinct !DILexicalBlock(scope: !17979, file: !2573, line: 217, column: 2)
!17985 = !DILocalVariable(name: "__key", scope: !17984, file: !2573, line: 217, type: !17509)
!17986 = !DILocalVariable(name: "next_to", scope: !17987, file: !2573, line: 218, type: !107)
!17987 = distinct !DILexicalBlock(scope: !17988, file: !2573, line: 217, column: 24)
!17988 = distinct !DILexicalBlock(scope: !17984, file: !2573, line: 217, column: 2)
!17989 = !DILocalVariable(name: "sooner", scope: !17987, file: !2573, line: 219, type: !145)
!17990 = !DILocalVariable(name: "imminent", scope: !17987, file: !2573, line: 221, type: !145)
!17991 = !DILocation(line: 0, scope: !17979)
!17992 = !DILocation(line: 0, scope: !17984)
!17993 = !DILocation(line: 0, scope: !17537, inlinedAt: !17994)
!17994 = distinct !DILocation(line: 217, column: 2, scope: !17984)
!17995 = !DILocation(line: 55, column: 2, scope: !17546, inlinedAt: !17996)
!17996 = distinct !DILocation(line: 145, column: 10, scope: !17537, inlinedAt: !17994)
!17997 = !DILocation(line: 0, scope: !17546, inlinedAt: !17996)
!17998 = !DILocation(line: 148, column: 2, scope: !17554, inlinedAt: !17994)
!17999 = !DILocation(line: 148, column: 2, scope: !17555, inlinedAt: !17994)
!18000 = !DILocation(line: 148, column: 2, scope: !17558, inlinedAt: !17994)
!18001 = !DILocation(line: 160, column: 2, scope: !17537, inlinedAt: !17994)
!18002 = !DILocation(line: 218, column: 17, scope: !17987)
!18003 = !DILocation(line: 0, scope: !17987)
!18004 = !DILocation(line: 221, column: 27, scope: !17987)
!18005 = !DILocation(line: 233, column: 17, scope: !18006)
!18006 = distinct !DILexicalBlock(scope: !17987, file: !2573, line: 233, column: 7)
!18007 = !DILocation(line: 234, column: 26, scope: !18008)
!18008 = distinct !DILexicalBlock(scope: !18006, file: !2573, line: 233, column: 56)
!18009 = !DILocation(line: 234, column: 4, scope: !18008)
!18010 = !DILocation(line: 235, column: 3, scope: !18008)
!18011 = !DILocation(line: 0, scope: !17610, inlinedAt: !18012)
!18012 = distinct !DILocation(line: 217, column: 2, scope: !17988)
!18013 = !DILocation(line: 194, column: 2, scope: !17618, inlinedAt: !18012)
!18014 = !DILocation(line: 194, column: 2, scope: !17619, inlinedAt: !18012)
!18015 = !DILocation(line: 194, column: 2, scope: !17622, inlinedAt: !18012)
!18016 = !DILocation(line: 0, scope: !17624, inlinedAt: !18017)
!18017 = distinct !DILocation(line: 215, column: 2, scope: !17610, inlinedAt: !18012)
!18018 = !DILocation(line: 95, column: 2, scope: !17624, inlinedAt: !18017)
!18019 = !DILocation(line: 237, column: 1, scope: !17979)
!18020 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2573, file: !2573, line: 239, type: !18021, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !18023)
!18021 = !DISubroutineType(types: !18022)
!18022 = !{null, !904}
!18023 = !{!18024, !18025, !18026, !18028}
!18024 = !DILocalVariable(name: "ticks", arg: 1, scope: !18020, file: !2573, line: 239, type: !904)
!18025 = !DILocalVariable(name: "key", scope: !18020, file: !2573, line: 245, type: !17509)
!18026 = !DILocalVariable(name: "t", scope: !18027, file: !2573, line: 262, type: !2546)
!18027 = distinct !DILexicalBlock(scope: !18020, file: !2573, line: 261, column: 67)
!18028 = !DILocalVariable(name: "dt", scope: !18027, file: !2573, line: 263, type: !107)
!18029 = !DILocation(line: 0, scope: !18020)
!18030 = !DILocation(line: 242, column: 2, scope: !18020)
!18031 = !DILocation(line: 0, scope: !17537, inlinedAt: !18032)
!18032 = distinct !DILocation(line: 245, column: 25, scope: !18020)
!18033 = !DILocation(line: 55, column: 2, scope: !17546, inlinedAt: !18034)
!18034 = distinct !DILocation(line: 145, column: 10, scope: !17537, inlinedAt: !18032)
!18035 = !DILocation(line: 0, scope: !17546, inlinedAt: !18034)
!18036 = !DILocation(line: 148, column: 2, scope: !17554, inlinedAt: !18032)
!18037 = !DILocation(line: 148, column: 2, scope: !17555, inlinedAt: !18032)
!18038 = !DILocation(line: 148, column: 2, scope: !17558, inlinedAt: !18032)
!18039 = !DILocation(line: 160, column: 2, scope: !17537, inlinedAt: !18032)
!18040 = !DILocation(line: 261, column: 9, scope: !18020)
!18041 = !DILocation(line: 261, column: 17, scope: !18020)
!18042 = !DILocation(line: 261, column: 25, scope: !18020)
!18043 = !DILocation(line: 261, column: 37, scope: !18020)
!18044 = !DILocation(line: 261, column: 47, scope: !18020)
!18045 = !DILocation(line: 261, column: 44, scope: !18020)
!18046 = !DILocation(line: 261, column: 2, scope: !18020)
!18047 = !DILocation(line: 0, scope: !18027)
!18048 = !DILocation(line: 263, column: 12, scope: !18027)
!18049 = !DILocation(line: 265, column: 16, scope: !18027)
!18050 = !DILocation(line: 265, column: 13, scope: !18027)
!18051 = !DILocation(line: 266, column: 13, scope: !18027)
!18052 = !DILocation(line: 267, column: 3, scope: !18027)
!18053 = !DILocation(line: 0, scope: !17610, inlinedAt: !18054)
!18054 = distinct !DILocation(line: 269, column: 3, scope: !18027)
!18055 = !DILocation(line: 194, column: 2, scope: !17618, inlinedAt: !18054)
!18056 = !DILocation(line: 194, column: 2, scope: !17619, inlinedAt: !18054)
!18057 = !DILocation(line: 194, column: 2, scope: !17622, inlinedAt: !18054)
!18058 = !DILocation(line: 0, scope: !17624, inlinedAt: !18059)
!18059 = distinct !DILocation(line: 215, column: 2, scope: !17610, inlinedAt: !18054)
!18060 = !DILocation(line: 95, column: 2, scope: !17624, inlinedAt: !18059)
!18061 = !DILocation(line: 270, column: 6, scope: !18027)
!18062 = !DILocation(line: 270, column: 3, scope: !18027)
!18063 = !DILocation(line: 0, scope: !17537, inlinedAt: !18064)
!18064 = distinct !DILocation(line: 271, column: 9, scope: !18027)
!18065 = !DILocation(line: 55, column: 2, scope: !17546, inlinedAt: !18066)
!18066 = distinct !DILocation(line: 145, column: 10, scope: !17537, inlinedAt: !18064)
!18067 = !DILocation(line: 0, scope: !17546, inlinedAt: !18066)
!18068 = !DILocation(line: 148, column: 2, scope: !17554, inlinedAt: !18064)
!18069 = !DILocation(line: 148, column: 2, scope: !17555, inlinedAt: !18064)
!18070 = !DILocation(line: 148, column: 2, scope: !17558, inlinedAt: !18064)
!18071 = !DILocation(line: 160, column: 2, scope: !17537, inlinedAt: !18064)
!18072 = !DILocation(line: 272, column: 22, scope: !18027)
!18073 = distinct !{!18073, !18046, !18074}
!18074 = !DILocation(line: 273, column: 2, scope: !18020)
!18075 = !DILocation(line: 276, column: 19, scope: !18076)
!18076 = distinct !DILexicalBlock(scope: !18077, file: !2573, line: 275, column: 23)
!18077 = distinct !DILexicalBlock(scope: !18020, file: !2573, line: 275, column: 6)
!18078 = !DILocation(line: 277, column: 2, scope: !18076)
!18079 = !DILocation(line: 279, column: 15, scope: !18020)
!18080 = !DILocation(line: 279, column: 12, scope: !18020)
!18081 = !DILocation(line: 280, column: 21, scope: !18020)
!18082 = !DILocation(line: 282, column: 24, scope: !18020)
!18083 = !DILocation(line: 282, column: 2, scope: !18020)
!18084 = !DILocation(line: 0, scope: !17610, inlinedAt: !18085)
!18085 = distinct !DILocation(line: 284, column: 2, scope: !18020)
!18086 = !DILocation(line: 194, column: 2, scope: !17618, inlinedAt: !18085)
!18087 = !DILocation(line: 194, column: 2, scope: !17619, inlinedAt: !18085)
!18088 = !DILocation(line: 194, column: 2, scope: !17622, inlinedAt: !18085)
!18089 = !DILocation(line: 0, scope: !17624, inlinedAt: !18090)
!18090 = distinct !DILocation(line: 215, column: 2, scope: !17610, inlinedAt: !18085)
!18091 = !DILocation(line: 95, column: 2, scope: !17624, inlinedAt: !18090)
!18092 = !DILocation(line: 285, column: 1, scope: !18020)
!18093 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2573, file: !2573, line: 287, type: !18094, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !18096)
!18094 = !DISubroutineType(types: !18095)
!18095 = !{!376}
!18096 = !{!18097, !18098, !18100}
!18097 = !DILocalVariable(name: "t", scope: !18093, file: !2573, line: 289, type: !566)
!18098 = !DILocalVariable(name: "__i", scope: !18099, file: !2573, line: 291, type: !17509)
!18099 = distinct !DILexicalBlock(scope: !18093, file: !2573, line: 291, column: 2)
!18100 = !DILocalVariable(name: "__key", scope: !18099, file: !2573, line: 291, type: !17509)
!18101 = !DILocation(line: 0, scope: !18093)
!18102 = !DILocation(line: 0, scope: !18099)
!18103 = !DILocation(line: 0, scope: !17537, inlinedAt: !18104)
!18104 = distinct !DILocation(line: 291, column: 2, scope: !18099)
!18105 = !DILocation(line: 55, column: 2, scope: !17546, inlinedAt: !18106)
!18106 = distinct !DILocation(line: 145, column: 10, scope: !17537, inlinedAt: !18104)
!18107 = !DILocation(line: 0, scope: !17546, inlinedAt: !18106)
!18108 = !DILocation(line: 148, column: 2, scope: !17554, inlinedAt: !18104)
!18109 = !DILocation(line: 148, column: 2, scope: !17555, inlinedAt: !18104)
!18110 = !DILocation(line: 148, column: 2, scope: !17558, inlinedAt: !18104)
!18111 = !DILocation(line: 160, column: 2, scope: !17537, inlinedAt: !18104)
!18112 = !DILocation(line: 292, column: 7, scope: !18113)
!18113 = distinct !DILexicalBlock(scope: !18114, file: !2573, line: 291, column: 24)
!18114 = distinct !DILexicalBlock(scope: !18099, file: !2573, line: 291, column: 2)
!18115 = !DILocation(line: 292, column: 19, scope: !18113)
!18116 = !DILocation(line: 0, scope: !17610, inlinedAt: !18117)
!18117 = distinct !DILocation(line: 291, column: 2, scope: !18114)
!18118 = !DILocation(line: 194, column: 2, scope: !17618, inlinedAt: !18117)
!18119 = !DILocation(line: 194, column: 2, scope: !17619, inlinedAt: !18117)
!18120 = !DILocation(line: 194, column: 2, scope: !17622, inlinedAt: !18117)
!18121 = !DILocation(line: 0, scope: !17624, inlinedAt: !18122)
!18122 = distinct !DILocation(line: 215, column: 2, scope: !17610, inlinedAt: !18117)
!18123 = !DILocation(line: 95, column: 2, scope: !17624, inlinedAt: !18122)
!18124 = !DILocation(line: 292, column: 17, scope: !18113)
!18125 = !DILocation(line: 294, column: 2, scope: !18093)
!18126 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2573, file: !2573, line: 297, type: !6408, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !2236)
!18127 = !DILocation(line: 300, column: 19, scope: !18126)
!18128 = !DILocation(line: 300, column: 9, scope: !18126)
!18129 = !DILocation(line: 300, column: 2, scope: !18126)
!18130 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2573, file: !2573, line: 306, type: !18094, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !2236)
!18131 = !DILocation(line: 308, column: 9, scope: !18130)
!18132 = !DILocation(line: 308, column: 2, scope: !18130)
!18133 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2573, file: !2573, line: 319, type: !6418, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !18134)
!18134 = !{!18135, !18136, !18137, !18138}
!18135 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !18133, file: !2573, line: 319, type: !152)
!18136 = !DILocalVariable(name: "start_cycles", scope: !18133, file: !2573, line: 328, type: !152)
!18137 = !DILocalVariable(name: "cycles_to_wait", scope: !18133, file: !2573, line: 331, type: !152)
!18138 = !DILocalVariable(name: "current_cycles", scope: !18139, file: !2573, line: 338, type: !152)
!18139 = distinct !DILexicalBlock(scope: !18140, file: !2573, line: 337, column: 11)
!18140 = distinct !DILexicalBlock(scope: !18141, file: !2573, line: 337, column: 2)
!18141 = distinct !DILexicalBlock(scope: !18133, file: !2573, line: 337, column: 2)
!18142 = !DILocation(line: 0, scope: !18133)
!18143 = !DILocation(line: 322, column: 19, scope: !18144)
!18144 = distinct !DILexicalBlock(scope: !18133, file: !2573, line: 322, column: 6)
!18145 = !DILocation(line: 322, column: 6, scope: !18133)
!18146 = !DILocation(line: 328, column: 26, scope: !18133)
!18147 = !DILocation(line: 333, column: 43, scope: !18133)
!18148 = !DILocation(line: 337, column: 2, scope: !18133)
!18149 = !DILocation(line: 338, column: 29, scope: !18139)
!18150 = !DILocation(line: 0, scope: !18139)
!18151 = !DILocation(line: 341, column: 23, scope: !18152)
!18152 = distinct !DILexicalBlock(scope: !18139, file: !2573, line: 341, column: 7)
!18153 = !DILocation(line: 341, column: 39, scope: !18152)
!18154 = !DILocation(line: 349, column: 1, scope: !18133)
!18155 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !406, file: !406, line: 1675, type: !6408, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !2236)
!18156 = !DILocation(line: 1677, column: 9, scope: !18155)
!18157 = !DILocation(line: 1677, column: 2, scope: !18155)
!18158 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !8821, file: !8821, line: 24, type: !6408, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !2236)
!18159 = !DILocation(line: 26, column: 9, scope: !18158)
!18160 = !DILocation(line: 26, column: 2, scope: !18158)
!18161 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2573, file: !2573, line: 364, type: !18162, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !18164)
!18162 = !DISubroutineType(types: !18163)
!18163 = !{!566, !17499}
!18164 = !{!18165, !18166}
!18165 = !DILocalVariable(name: "timeout", arg: 1, scope: !18161, file: !2573, line: 364, type: !17499)
!18166 = !DILocalVariable(name: "dt", scope: !18161, file: !2573, line: 366, type: !564)
!18167 = !DILocation(line: 0, scope: !18161)
!18168 = !DILocation(line: 368, column: 6, scope: !18161)
!18169 = !DILocation(line: 371, column: 10, scope: !18170)
!18170 = distinct !DILexicalBlock(scope: !18171, file: !2573, line: 370, column: 47)
!18171 = distinct !DILexicalBlock(scope: !18172, file: !2573, line: 370, column: 13)
!18172 = distinct !DILexicalBlock(scope: !18161, file: !2573, line: 368, column: 6)
!18173 = !DILocation(line: 371, column: 3, scope: !18170)
!18174 = !DILocation(line: 376, column: 58, scope: !18175)
!18175 = distinct !DILexicalBlock(scope: !18176, file: !2573, line: 376, column: 7)
!18176 = distinct !DILexicalBlock(scope: !18171, file: !2573, line: 372, column: 9)
!18177 = !DILocation(line: 376, column: 7, scope: !18176)
!18178 = !DILocation(line: 376, column: 43, scope: !18175)
!18179 = !DILocation(line: 377, column: 4, scope: !18180)
!18180 = distinct !DILexicalBlock(scope: !18175, file: !2573, line: 376, column: 64)
!18181 = !DILocation(line: 379, column: 10, scope: !18176)
!18182 = !DILocation(line: 379, column: 33, scope: !18176)
!18183 = !DILocation(line: 379, column: 31, scope: !18176)
!18184 = !DILocation(line: 379, column: 3, scope: !18176)
!18185 = !DILocation(line: 0, scope: !18172)
!18186 = !DILocation(line: 381, column: 1, scope: !18161)
!18187 = distinct !DISubprogram(name: "boot_banner", scope: !18188, file: !18188, line: 26, type: !3148, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3134, retainedNodes: !2236)
!18188 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!18189 = !DILocation(line: 34, column: 2, scope: !18187)
!18190 = !DILocation(line: 36, column: 1, scope: !18187)
